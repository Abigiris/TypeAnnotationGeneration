{
    "AurochsNode-master/scan_network_nodes.py": {},
    "AurochsNode-master/scan_nodes.py": {
        "TestAddrNode.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "ip": [],
                "port": []
            }
        }
    },
    "AurochsNode-master/test_alert.py": {},
    "AurochsNode-master/pinkcoin/__init__.py": {},
    "AurochsNode-master/pinkcoin/mempool/__init__.py": {},
    "AurochsNode-master/pinkcoin/minting/__init__.py": {},
    "AurochsNode-master/pinkcoin/network/base_serializer.py": {
        "SerializerMeta.__new__": {
            "name": "__new__",
            "location": 22,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "attrs": []
            }
        },
        "SerializerMeta.get_fields": {
            "name": "get_fields",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "bases": [],
                "attrs": [],
                "field_class": []
            }
        },
        "Serializer.serialize": {
            "name": "serialize",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "fields": []
            }
        },
        "Serializer.deserialize": {
            "name": "deserialize",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "SerializableMessage.get_message": {
            "name": "get_message",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "network_type": []
            }
        },
        "MessageHeader.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "network_type": []
            }
        },
        "MessageHeader._magic_to_text": {
            "name": "_magic_to_text",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageHeader.__repr__": {
            "name": "__repr__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageHeaderSerializer.calcsize": {
            "name": "calcsize",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "MessageHeaderSerializer.calc_checksum": {
            "name": "calc_checksum",
            "location": 156,
            "return": [],
            "arguments": {
                "payload": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/buffer.py": {
        "ProtocolBuffer.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtocolBuffer.write": {
            "name": "write",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ProtocolBuffer.receive_message": {
            "name": "receive_message",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/data_fields.py": {
        "Field.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.parse": {
            "name": "parse",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Field.deserialize": {
            "name": "deserialize",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "Field.serialize": {
            "name": "serialize",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrimaryField.parse": {
            "name": "parse",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PrimaryField.deserialize": {
            "name": "deserialize",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "PrimaryField.serialize": {
            "name": "serialize",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FixedStringField.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "length": []
            }
        },
        "FixedStringField.parse": {
            "name": "parse",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FixedStringField.deserialize": {
            "name": "deserialize",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "FixedStringField.serialize": {
            "name": "serialize",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedField.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "serializer_class": []
            }
        },
        "NestedField.parse": {
            "name": "parse",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "NestedField.deserialize": {
            "name": "deserialize",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "NestedField.serialize": {
            "name": "serialize",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListField.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "serializer_class": []
            }
        },
        "ListField.parse": {
            "name": "parse",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ListField.serialize": {
            "name": "serialize",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListField.deserialize": {
            "name": "deserialize",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "ListField.__iter__": {
            "name": "__iter__",
            "location": 233,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListField.__len__": {
            "name": "__len__",
            "location": 236,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IPv4AddressField.parse": {
            "name": "parse",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "IPv4AddressField.deserialize": {
            "name": "deserialize",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "IPv4AddressField.serialize": {
            "name": "serialize",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VariableIntegerField.parse": {
            "name": "parse",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VariableIntegerField.deserialize": {
            "name": "deserialize",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "VariableIntegerField.serialize": {
            "name": "serialize",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VariableStringField.__init__": {
            "name": "__init__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VariableStringField.parse": {
            "name": "parse",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VariableStringField.deserialize": {
            "name": "deserialize",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "VariableStringField.serialize": {
            "name": "serialize",
            "location": 305,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VariableStringField.__len__": {
            "name": "__len__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Hash.parse": {
            "name": "parse",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Hash.deserialize": {
            "name": "deserialize",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "Hash.serialize": {
            "name": "serialize",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BlockLocator.parse": {
            "name": "parse",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BlockLocator.serialize": {
            "name": "serialize",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/exceptions.py": {},
    "AurochsNode-master/pinkcoin/network/keys.py": {
        "NetworkPublicKey.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "hexkey": []
            }
        },
        "NetworkPublicKey.from_private_key": {
            "name": "from_private_key",
            "location": 33,
            "return": [],
            "arguments": {
                "cls": [],
                "private_key": []
            }
        },
        "NetworkPublicKey.to_string": {
            "name": "to_string",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPublicKey.to_hex": {
            "name": "to_hex",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPublicKey.to_address": {
            "name": "to_address",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPublicKey.__repr__": {
            "name": "__repr__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPrivateKey.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "hexkey": [],
                "entropy": []
            }
        },
        "NetworkPrivateKey.from_string": {
            "name": "from_string",
            "location": 122,
            "return": [],
            "arguments": {
                "cls": [],
                "stringkey": []
            }
        },
        "NetworkPrivateKey.from_wif": {
            "name": "from_wif",
            "location": 134,
            "return": [],
            "arguments": {
                "cls": [],
                "wifkey": []
            }
        },
        "NetworkPrivateKey.to_hex": {
            "name": "to_hex",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPrivateKey.to_string": {
            "name": "to_string",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPrivateKey.to_wif": {
            "name": "to_wif",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPrivateKey.generate_public_key": {
            "name": "generate_public_key",
            "location": 190,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkPrivateKey.__repr__": {
            "name": "__repr__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/messages.py": {},
    "AurochsNode-master/pinkcoin/network/node.py": {
        "Node.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "ip": [
                    "str"
                ],
                "port": []
            }
        },
        "Node.send_message": {
            "name": "send_message",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "peer_name": [],
                "message": []
            }
        },
        "Node.handshake": {
            "name": "handshake",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "peer_name": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/params.py": {},
    "AurochsNode-master/pinkcoin/network/peer.py": {},
    "AurochsNode-master/pinkcoin/network/utils.py": {
        "base58_encode": {
            "name": "base58_encode",
            "location": 11,
            "return": [],
            "arguments": {
                "address_bignum": []
            }
        },
        "base58_decode": {
            "name": "base58_decode",
            "location": 26,
            "return": [],
            "arguments": {
                "address": []
            }
        },
        "services_to_text": {
            "name": "services_to_text",
            "location": 41,
            "return": [],
            "arguments": {
                "services": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/__init__.py": {},
    "AurochsNode-master/pinkcoin/network/core/serializers.py": {
        "IPv4Address.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IPv4Address.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IPv4AddressTimestamp.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IPv4AddressTimestamp.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ping.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ping.__repr__": {
            "name": "__repr__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pong.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pong.__repr__": {
            "name": "__repr__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Inventory.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Inventory.type_to_text": {
            "name": "type_to_text",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Inventory.__repr__": {
            "name": "__repr__",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InventoryVector.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InventoryVector.__repr__": {
            "name": "__repr__",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InventoryVector.__len__": {
            "name": "__len__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InventoryVector.__iter__": {
            "name": "__iter__",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddressVector.__init__": {
            "name": "__init__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddressVector.__repr__": {
            "name": "__repr__",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddressVector.__len__": {
            "name": "__len__",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddressVector.__iter__": {
            "name": "__iter__",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OutPoint.__init__": {
            "name": "__init__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OutPoint.__repr__": {
            "name": "__repr__",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TxIn.__init__": {
            "name": "__init__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TxIn.__repr__": {
            "name": "__repr__",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TxOut.__init__": {
            "name": "__init__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TxOut.get_pink_value": {
            "name": "get_pink_value",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TxOut.__repr__": {
            "name": "__repr__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.__init__": {
            "name": "__init__",
            "location": 347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx._locktime_to_text": {
            "name": "_locktime_to_text",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.calculate_hash": {
            "name": "calculate_hash",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.__repr__": {
            "name": "__repr__",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BlockHeader.__init__": {
            "name": "__init__",
            "location": 400,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BlockHeader.calculate_hash": {
            "name": "calculate_hash",
            "location": 412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BlockHeader.__repr__": {
            "name": "__repr__",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.__init__": {
            "name": "__init__",
            "location": 456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.__len__": {
            "name": "__len__",
            "location": 467,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.__iter__": {
            "name": "__iter__",
            "location": 470,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.__repr__": {
            "name": "__repr__",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeaderVector.__init__": {
            "name": "__init__",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeaderVector.__repr__": {
            "name": "__repr__",
            "location": 503,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeaderVector.__len__": {
            "name": "__len__",
            "location": 506,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeaderVector.__iter__": {
            "name": "__iter__",
            "location": 509,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetBlocks.__init__": {
            "name": "__init__",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "hashes": []
            }
        },
        "GetHeaders.__init__": {
            "name": "__init__",
            "location": 573,
            "return": [],
            "arguments": {
                "self": [],
                "hashes": []
            }
        },
        "Alert.__init__": {
            "name": "__init__",
            "location": 596,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Alert.__repr__": {
            "name": "__repr__",
            "location": 600,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CancelAlert.__init__": {
            "name": "__init__",
            "location": 618,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubVerAlert.__init__": {
            "name": "__init__",
            "location": 633,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlertPayload.__init__": {
            "name": "__init__",
            "location": 648,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlertPayload.__repr__": {
            "name": "__repr__",
            "location": 663,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/core/__init__.py": {},
    "AurochsNode-master/pinkcoin/network/secure_messages/serializers.py": {
        "SecureMessagesInventory.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureMessagesPing.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureMessagesPong.__repr__": {
            "name": "__repr__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureMessagesDisabled.__repr__": {
            "name": "__repr__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureMessagesIgnore.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureMessagesIgnore.__repr__": {
            "name": "__repr__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "AurochsNode-master/pinkcoin/network/secure_messages/__init__.py": {},
    "AurochsNode-master/pinkcoin/primitives/__init__.py": {},
    "AurochsNode-master/pinkcoin/rpc/__init__.py": {},
    "AurochsNode-master/pinkcoin/scripting/__init__.py": {},
    "AurochsNode-master/pinkcoin/utils/__init__.py": {},
    "AurochsNode-master/pinkcoin/wallet/__init__.py": {},
    "AurochsNode-master/tests/test_network_data_fields.py": {
        "test_int16LE": {
            "name": "test_int16LE",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "AurochsNode-master/tests/__init__.py": {}
}
{
    "CityTime-master/setup.py": {
        "read": {
            "name": "read",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "find_meta": {
            "name": "find_meta",
            "location": 44,
            "return": [],
            "arguments": {
                "meta": []
            }
        }
    },
    "CityTime-master/src/citytime/citytime.py": {
        "CityTime.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time": [
                    "Optional[Union[('CityTime', datetime.datetime, str)]]"
                ],
                "tz": [
                    "Optional[str]"
                ]
            }
        },
        "CityTime.__str__": {
            "name": "__str__",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.__repr__": {
            "name": "__repr__",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.__bool__": {
            "name": "__bool__",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.__hash__": {
            "name": "__hash__",
            "location": 110,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.__eq__": {
            "name": "__eq__",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__ne__": {
            "name": "__ne__",
            "location": 132,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__lt__": {
            "name": "__lt__",
            "location": 148,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__le__": {
            "name": "__le__",
            "location": 167,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__gt__": {
            "name": "__gt__",
            "location": 189,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__ge__": {
            "name": "__ge__",
            "location": 206,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__add__": {
            "name": "__add__",
            "location": 226,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.__sub__": {
            "name": "__sub__",
            "location": 246,
            "return": [
                "Union[('CityTime', datetime.timedelta)]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "CityTime.set": {
            "name": "set",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date_time": [
                    "datetime.datetime"
                ],
                "time_zone": [
                    "str"
                ]
            }
        },
        "CityTime.set_iso_format": {
            "name": "set_iso_format",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date_time": [
                    "str"
                ],
                "time_zone": [
                    "str"
                ]
            }
        },
        "CityTime.change_tz": {
            "name": "change_tz",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_zone": [
                    "str"
                ]
            }
        },
        "CityTime.is_set": {
            "name": "is_set",
            "location": 383,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.check_set": {
            "name": "check_set",
            "location": 399,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.utc": {
            "name": "utc",
            "location": 404,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.local": {
            "name": "local",
            "location": 415,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.astimezone": {
            "name": "astimezone",
            "location": 427,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": [],
                "time_zone": [
                    "str"
                ]
            }
        },
        "CityTime.local_minute": {
            "name": "local_minute",
            "location": 442,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.timezone": {
            "name": "timezone",
            "location": 455,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.tzinfo": {
            "name": "tzinfo",
            "location": 465,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.weekday": {
            "name": "weekday",
            "location": 478,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.day_name": {
            "name": "day_name",
            "location": 491,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.day_abbr": {
            "name": "day_abbr",
            "location": 505,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.time_string": {
            "name": "time_string",
            "location": 521,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.increment": {
            "name": "increment",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "days": [
                    "Optional[Union[(int, float)]]"
                ],
                "hours": [
                    "Optional[Union[(int, float)]]"
                ],
                "minutes": [
                    "Optional[Union[(int, float)]]"
                ],
                "seconds": [
                    "Optional[Union[(int, float)]]"
                ]
            }
        },
        "CityTime.local_strftime": {
            "name": "local_strftime",
            "location": 574,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "form": [
                    "str"
                ]
            }
        },
        "CityTime.utc_strftime": {
            "name": "utc_strftime",
            "location": 586,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "form": [
                    "str"
                ]
            }
        },
        "CityTime.today": {
            "name": "today",
            "location": 599,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "cls": []
            }
        },
        "CityTime.now": {
            "name": "now",
            "location": 609,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "cls": [],
                "zone": [
                    "str"
                ]
            }
        },
        "CityTime.epoch": {
            "name": "epoch",
            "location": 625,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.copy": {
            "name": "copy",
            "location": 637,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityTime.offset": {
            "name": "offset",
            "location": 650,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.__init__": {
            "name": "__init__",
            "location": 680,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_a": [
                    "Optional['CityTime']"
                ],
                "time_b": [
                    "Optional[Union[('CityTime', datetime.timedelta)]]"
                ]
            }
        },
        "Range.__bool__": {
            "name": "__bool__",
            "location": 699,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range._create_range": {
            "name": "_create_range",
            "location": 702,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_a": [
                    "'CityTime'"
                ],
                "time_b": [
                    "'CityTime'"
                ]
            }
        },
        "Range._create_range_timedelta": {
            "name": "_create_range_timedelta",
            "location": 726,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_a": [
                    "'CityTime'"
                ],
                "delta": [
                    "datetime.timedelta"
                ]
            }
        },
        "Range._reset_delta": {
            "name": "_reset_delta",
            "location": 753,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.check_set": {
            "name": "check_set",
            "location": 759,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.start_time": {
            "name": "start_time",
            "location": 767,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.end_time": {
            "name": "end_time",
            "location": 775,
            "return": [
                "'CityTime'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.delta": {
            "name": "delta",
            "location": 783,
            "return": [
                "datetime.timedelta"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.contains": {
            "name": "contains",
            "location": 793,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "citytime_or_range_object": [
                    "Union[('CityTime', 'Range')]"
                ]
            }
        },
        "Range.overlaps": {
            "name": "overlaps",
            "location": 823,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "range_object": [
                    "'Range'"
                ]
            }
        },
        "Range.overlap": {
            "name": "overlap",
            "location": 842,
            "return": [
                "datetime.timedelta"
            ],
            "arguments": {
                "self": [],
                "range_object": [
                    "'Range'"
                ]
            }
        },
        "Range.__eq__": {
            "name": "__eq__",
            "location": 869,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.__ne__": {
            "name": "__ne__",
            "location": 889,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.before": {
            "name": "before",
            "location": 906,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_range_obj": [
                    "'Range'"
                ]
            }
        },
        "Range.after": {
            "name": "after",
            "location": 924,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_range_obj": [
                    "'Range'"
                ]
            }
        },
        "Range.__lt__": {
            "name": "__lt__",
            "location": 942,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.__le__": {
            "name": "__le__",
            "location": 958,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.__gt__": {
            "name": "__gt__",
            "location": 974,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.__ge__": {
            "name": "__ge__",
            "location": 990,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Range.__str__": {
            "name": "__str__",
            "location": 1006,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.__repr__": {
            "name": "__repr__",
            "location": 1014,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.extend": {
            "name": "extend",
            "location": 1022,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "added_delta": [
                    "datetime.timedelta"
                ]
            }
        },
        "Range.extend_prior": {
            "name": "extend_prior",
            "location": 1039,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "added_delta": [
                    "datetime.timedelta"
                ]
            }
        },
        "Range.replace_start_time": {
            "name": "replace_start_time",
            "location": 1056,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_start_time": [
                    "'CityTime'"
                ]
            }
        },
        "Range.replace_end_time": {
            "name": "replace_end_time",
            "location": 1065,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_end_time": [
                    "'CityTime'"
                ]
            }
        },
        "Range.intersection": {
            "name": "intersection",
            "location": 1074,
            "return": [
                "'Range'"
            ],
            "arguments": {
                "self": [],
                "range_object": [
                    "'Range'"
                ]
            }
        },
        "Range.shift": {
            "name": "shift",
            "location": 1108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "delta": [
                    "datetime.timedelta"
                ]
            }
        },
        "Range.copy": {
            "name": "copy",
            "location": 1121,
            "return": [
                "'Range'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.timedelta_to_h_mm": {
            "name": "timedelta_to_h_mm",
            "location": 1132,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.contains.check_set": {
            "name": "check_set",
            "location": 800,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "Any"
                ]
            }
        }
    },
    "CityTime-master/src/citytime/__init__.py": {
        "NullHandler.emit": {
            "name": "emit",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "CityTime-master/tests/test_citytime.py": {
        "test_uninitialized": {
            "name": "test_uninitialized",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_uninitialized__repr__": {
            "name": "test_uninitialized__repr__",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_using_unset": {
            "name": "test_using_unset",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_set_t_zone": {
            "name": "test_set_t_zone",
            "location": 37,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_set_datetime": {
            "name": "test_set_datetime",
            "location": 45,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_set_with_citytime": {
            "name": "test_set_with_citytime",
            "location": 53,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_set_with_iso_format": {
            "name": "test_set_with_iso_format",
            "location": 60,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_reset_tz": {
            "name": "test_reset_tz",
            "location": 71,
            "return": [],
            "arguments": {
                "dt": [],
                "tz2": []
            }
        },
        "test__str__": {
            "name": "test__str__",
            "location": 84,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test__repr__": {
            "name": "test__repr__",
            "location": 97,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_eval__repr__": {
            "name": "test_eval__repr__",
            "location": 108,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test__eq__": {
            "name": "test__eq__",
            "location": 116,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test__ne__": {
            "name": "test__ne__",
            "location": 128,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": [],
                "tz": []
            }
        },
        "test__ne__non_datetime": {
            "name": "test__ne__non_datetime",
            "location": 136,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test__lt__": {
            "name": "test__lt__",
            "location": 147,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": []
            }
        },
        "test__le__": {
            "name": "test__le__",
            "location": 158,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": []
            }
        },
        "test__gt__": {
            "name": "test__gt__",
            "location": 169,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": []
            }
        },
        "test__ge__": {
            "name": "test__ge__",
            "location": 180,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": []
            }
        },
        "test__add__": {
            "name": "test__add__",
            "location": 191,
            "return": [],
            "arguments": {
                "dt1": [],
                "i": []
            }
        },
        "test__sub__": {
            "name": "test__sub__",
            "location": 209,
            "return": [],
            "arguments": {
                "dt1": [],
                "i": []
            }
        },
        "test__hash__": {
            "name": "test__hash__",
            "location": 224,
            "return": [],
            "arguments": {}
        },
        "test__bool__": {
            "name": "test__bool__",
            "location": 229,
            "return": [],
            "arguments": {}
        },
        "test_utc": {
            "name": "test_utc",
            "location": 239,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_utc_tzinfo": {
            "name": "test_utc_tzinfo",
            "location": 245,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_local": {
            "name": "test_local",
            "location": 251,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_local_timezone": {
            "name": "test_local_timezone",
            "location": 257,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_copy": {
            "name": "test_copy",
            "location": 263,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_astimezone": {
            "name": "test_astimezone",
            "location": 271,
            "return": [],
            "arguments": {
                "dt": [],
                "tz": []
            }
        },
        "test_local_minute": {
            "name": "test_local_minute",
            "location": 277,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_timezone": {
            "name": "test_timezone",
            "location": 284,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_tzinfo": {
            "name": "test_tzinfo",
            "location": 291,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_weekday": {
            "name": "test_weekday",
            "location": 298,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_day_name": {
            "name": "test_day_name",
            "location": 304,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_day_abbr": {
            "name": "test_day_abbr",
            "location": 311,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_time_string": {
            "name": "test_time_string",
            "location": 320,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_increment": {
            "name": "test_increment",
            "location": 333,
            "return": [],
            "arguments": {
                "dt": [],
                "d": [],
                "h": [],
                "m": [],
                "s": []
            }
        },
        "test_local_strftime": {
            "name": "test_local_strftime",
            "location": 350,
            "return": [],
            "arguments": {
                "dt": [],
                "form": []
            }
        },
        "test_utc_strftime": {
            "name": "test_utc_strftime",
            "location": 359,
            "return": [],
            "arguments": {
                "dt": [],
                "form": []
            }
        },
        "test_today": {
            "name": "test_today",
            "location": 365,
            "return": [],
            "arguments": {}
        },
        "test_now": {
            "name": "test_now",
            "location": 375,
            "return": [],
            "arguments": {}
        },
        "test_epoch": {
            "name": "test_epoch",
            "location": 384,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_offset": {
            "name": "test_offset",
            "location": 393,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "test_not_initialized": {
            "name": "test_not_initialized",
            "location": 405,
            "return": [],
            "arguments": {}
        },
        "test_initialize_wrong_type1": {
            "name": "test_initialize_wrong_type1",
            "location": 411,
            "return": [],
            "arguments": {}
        },
        "test_initialize_wrong_type2": {
            "name": "test_initialize_wrong_type2",
            "location": 416,
            "return": [],
            "arguments": {}
        },
        "test_err__eq__": {
            "name": "test_err__eq__",
            "location": 425,
            "return": [],
            "arguments": {}
        },
        "test_err__eq__2": {
            "name": "test_err__eq__2",
            "location": 431,
            "return": [],
            "arguments": {}
        },
        "test_err__eq__3": {
            "name": "test_err__eq__3",
            "location": 436,
            "return": [],
            "arguments": {}
        },
        "test_err__eq__4": {
            "name": "test_err__eq__4",
            "location": 441,
            "return": [],
            "arguments": {}
        },
        "test_err_ne": {
            "name": "test_err_ne",
            "location": 446,
            "return": [],
            "arguments": {}
        },
        "test_err_ne2": {
            "name": "test_err_ne2",
            "location": 452,
            "return": [],
            "arguments": {}
        },
        "test_err__lt__": {
            "name": "test_err__lt__",
            "location": 457,
            "return": [],
            "arguments": {}
        },
        "test_err__lt__unset": {
            "name": "test_err__lt__unset",
            "location": 464,
            "return": [],
            "arguments": {}
        },
        "overflow": {
            "name": "overflow",
            "location": 471,
            "return": [],
            "arguments": {
                "date_time": [],
                "time_delta": []
            }
        },
        "timezones": {
            "name": "timezones",
            "location": 480,
            "return": [],
            "arguments": {}
        }
    },
    "CityTime-master/tests/test_citytime_negative_tests.py": {
        "test__le__": {
            "name": "test__le__",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test__le_set": {
            "name": "test__le_set",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test__gt__": {
            "name": "test__gt__",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test__ge__": {
            "name": "test__ge__",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_set_dt": {
            "name": "test_set_dt",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_set__sub__": {
            "name": "test_set__sub__",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_set__sub__other": {
            "name": "test_set__sub__other",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "test_set_tz": {
            "name": "test_set_tz",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "test_set_unknown_tz": {
            "name": "test_set_unknown_tz",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_reset_tz_not_str": {
            "name": "test_reset_tz_not_str",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_reset_tz_unknown_tz": {
            "name": "test_reset_tz_unknown_tz",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "test_set_date_instead_of_datetime": {
            "name": "test_set_date_instead_of_datetime",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "test_set_nonexistent_time": {
            "name": "test_set_nonexistent_time",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "test_set_ambiguous_time": {
            "name": "test_set_ambiguous_time",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "test_is_set": {
            "name": "test_is_set",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "test_is_set_no_timezone": {
            "name": "test_is_set_no_timezone",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "test_check_set": {
            "name": "test_check_set",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "test_check_set_no_timezone": {
            "name": "test_check_set_no_timezone",
            "location": 113,
            "return": [],
            "arguments": {}
        },
        "test_bool": {
            "name": "test_bool",
            "location": 120,
            "return": [],
            "arguments": {}
        },
        "test_bool_is_true": {
            "name": "test_bool_is_true",
            "location": 124,
            "return": [],
            "arguments": {}
        },
        "test_increment_wrong_type": {
            "name": "test_increment_wrong_type",
            "location": 130,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_increment_no_data": {
            "name": "test_increment_no_data",
            "location": 136,
            "return": [],
            "arguments": {}
        },
        "test_local_strftime": {
            "name": "test_local_strftime",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_local_strftime2": {
            "name": "test_local_strftime2",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "test_utc_strftime": {
            "name": "test_utc_strftime",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "test_utc_strftime2": {
            "name": "test_utc_strftime2",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "test_now": {
            "name": "test_now",
            "location": 166,
            "return": [],
            "arguments": {}
        },
        "test_now2": {
            "name": "test_now2",
            "location": 173,
            "return": [],
            "arguments": {}
        },
        "test_utc": {
            "name": "test_utc",
            "location": 180,
            "return": [],
            "arguments": {}
        },
        "test_local": {
            "name": "test_local",
            "location": 185,
            "return": [],
            "arguments": {}
        },
        "test_local_minute": {
            "name": "test_local_minute",
            "location": 190,
            "return": [],
            "arguments": {}
        },
        "test_timezone": {
            "name": "test_timezone",
            "location": 195,
            "return": [],
            "arguments": {}
        },
        "test_tzinfo": {
            "name": "test_tzinfo",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "test_weekday": {
            "name": "test_weekday",
            "location": 205,
            "return": [],
            "arguments": {}
        },
        "test_day_name": {
            "name": "test_day_name",
            "location": 210,
            "return": [],
            "arguments": {}
        },
        "test_day_abbr": {
            "name": "test_day_abbr",
            "location": 215,
            "return": [],
            "arguments": {}
        },
        "test_time_string": {
            "name": "test_time_string",
            "location": 220,
            "return": [],
            "arguments": {}
        },
        "test_increment": {
            "name": "test_increment",
            "location": 225,
            "return": [],
            "arguments": {}
        },
        "test_increment2": {
            "name": "test_increment2",
            "location": 230,
            "return": [],
            "arguments": {}
        },
        "test_iso_format_bad_tz": {
            "name": "test_iso_format_bad_tz",
            "location": 235,
            "return": [],
            "arguments": {}
        },
        "test_iso_format_bad_tz2": {
            "name": "test_iso_format_bad_tz2",
            "location": 241,
            "return": [],
            "arguments": {}
        },
        "test_iso_format_bad_iso": {
            "name": "test_iso_format_bad_iso",
            "location": 247,
            "return": [],
            "arguments": {}
        },
        "test_iso_format_bad_iso2": {
            "name": "test_iso_format_bad_iso2",
            "location": 253,
            "return": [],
            "arguments": {}
        },
        "test_epoch_not_set": {
            "name": "test_epoch_not_set",
            "location": 259,
            "return": [],
            "arguments": {}
        }
    },
    "CityTime-master/tests/test_range.py": {
        "test_empty_init": {
            "name": "test_empty_init",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_full_init": {
            "name": "test_full_init",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_wrong_init": {
            "name": "test_wrong_init",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "test_create_range": {
            "name": "test_create_range",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "test_create_range_not_city_time": {
            "name": "test_create_range_not_city_time",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_create_range_city_time_not_set": {
            "name": "test_create_range_city_time_not_set",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_start_time": {
            "name": "test_start_time",
            "location": 924,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "test_end_time": {
            "name": "test_end_time",
            "location": 932,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "test_create_range_timedelta": {
            "name": "test_create_range_timedelta",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "test_create_range_timedelta_using_init": {
            "name": "test_create_range_timedelta_using_init",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_create_range_bad_data": {
            "name": "test_create_range_bad_data",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_check_set": {
            "name": "test_check_set",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "test_check_set_false": {
            "name": "test_check_set_false",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "test_delta": {
            "name": "test_delta",
            "location": 940,
            "return": [],
            "arguments": {
                "dt": [],
                "delta": []
            }
        },
        "test_delta_not_set": {
            "name": "test_delta_not_set",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "test_contains_range": {
            "name": "test_contains_range",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_contains_citytime": {
            "name": "test_contains_citytime",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "test_contains_false": {
            "name": "test_contains_false",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_contains_errors": {
            "name": "test_contains_errors",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "test_contains_errors2": {
            "name": "test_contains_errors2",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "test_contains_none": {
            "name": "test_contains_none",
            "location": 162,
            "return": [],
            "arguments": {}
        },
        "test_contains_outside_of_range": {
            "name": "test_contains_outside_of_range",
            "location": 167,
            "return": [],
            "arguments": {}
        },
        "test_overlaps": {
            "name": "test_overlaps",
            "location": 976,
            "return": [],
            "arguments": {
                "dt": [],
                "delta1": [],
                "delta2": []
            }
        },
        "test_overlaps_start_time": {
            "name": "test_overlaps_start_time",
            "location": 189,
            "return": [],
            "arguments": {}
        },
        "test_overlaps_with_contained_range": {
            "name": "test_overlaps_with_contained_range",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "test_overlaps_false": {
            "name": "test_overlaps_false",
            "location": 1010,
            "return": [],
            "arguments": {
                "dt1": [],
                "dt2": [],
                "delta1": [],
                "delta2": []
            }
        },
        "test_overlaps_wrong_type": {
            "name": "test_overlaps_wrong_type",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "test_overlaps_not_set": {
            "name": "test_overlaps_not_set",
            "location": 226,
            "return": [],
            "arguments": {}
        },
        "test_overlaps_param_not_set": {
            "name": "test_overlaps_param_not_set",
            "location": 234,
            "return": [],
            "arguments": {}
        },
        "test_overlaps_param_is_none": {
            "name": "test_overlaps_param_is_none",
            "location": 242,
            "return": [],
            "arguments": {}
        },
        "test_overlap": {
            "name": "test_overlap",
            "location": 1022,
            "return": [],
            "arguments": {
                "dt": [],
                "delta1": [],
                "delta2": []
            }
        },
        "test_overlap_start_time": {
            "name": "test_overlap_start_time",
            "location": 261,
            "return": [],
            "arguments": {}
        },
        "test_not_overlapping": {
            "name": "test_not_overlapping",
            "location": 275,
            "return": [],
            "arguments": {}
        },
        "test_overlap_not_set": {
            "name": "test_overlap_not_set",
            "location": 283,
            "return": [],
            "arguments": {}
        },
        "test_overlap_param_not_set": {
            "name": "test_overlap_param_not_set",
            "location": 291,
            "return": [],
            "arguments": {}
        },
        "test_same_as": {
            "name": "test_same_as",
            "location": 299,
            "return": [],
            "arguments": {}
        },
        "test_not_same": {
            "name": "test_not_same",
            "location": 310,
            "return": [],
            "arguments": {}
        },
        "test_before": {
            "name": "test_before",
            "location": 324,
            "return": [],
            "arguments": {}
        },
        "test_before_wrong_type": {
            "name": "test_before_wrong_type",
            "location": 332,
            "return": [],
            "arguments": {}
        },
        "test_before_not_set": {
            "name": "test_before_not_set",
            "location": 338,
            "return": [],
            "arguments": {}
        },
        "test_before_param_not_set": {
            "name": "test_before_param_not_set",
            "location": 346,
            "return": [],
            "arguments": {}
        },
        "test_after": {
            "name": "test_after",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "test_after_wrong_type": {
            "name": "test_after_wrong_type",
            "location": 362,
            "return": [],
            "arguments": {}
        },
        "test_after_not_set": {
            "name": "test_after_not_set",
            "location": 368,
            "return": [],
            "arguments": {}
        },
        "test_after_param_not_set": {
            "name": "test_after_param_not_set",
            "location": 376,
            "return": [],
            "arguments": {}
        },
        "test__eq__": {
            "name": "test__eq__",
            "location": 384,
            "return": [],
            "arguments": {}
        },
        "test__eq__not_range": {
            "name": "test__eq__not_range",
            "location": 390,
            "return": [],
            "arguments": {}
        },
        "test__eq__not_set": {
            "name": "test__eq__not_set",
            "location": 395,
            "return": [],
            "arguments": {}
        },
        "test__eq__other_not_set": {
            "name": "test__eq__other_not_set",
            "location": 404,
            "return": [],
            "arguments": {}
        },
        "test__eq__false": {
            "name": "test__eq__false",
            "location": 412,
            "return": [],
            "arguments": {}
        },
        "test__ne__": {
            "name": "test__ne__",
            "location": 419,
            "return": [],
            "arguments": {}
        },
        "test__ne__not_range": {
            "name": "test__ne__not_range",
            "location": 426,
            "return": [],
            "arguments": {}
        },
        "test__ne__not_set": {
            "name": "test__ne__not_set",
            "location": 432,
            "return": [],
            "arguments": {}
        },
        "test__ne__other_not_set": {
            "name": "test__ne__other_not_set",
            "location": 440,
            "return": [],
            "arguments": {}
        },
        "test__ne__false": {
            "name": "test__ne__false",
            "location": 448,
            "return": [],
            "arguments": {}
        },
        "test__lt__": {
            "name": "test__lt__",
            "location": 454,
            "return": [],
            "arguments": {}
        },
        "test__lt__not_range": {
            "name": "test__lt__not_range",
            "location": 461,
            "return": [],
            "arguments": {}
        },
        "test__lt__not_set": {
            "name": "test__lt__not_set",
            "location": 469,
            "return": [],
            "arguments": {}
        },
        "test__lt__other_not_set": {
            "name": "test__lt__other_not_set",
            "location": 477,
            "return": [],
            "arguments": {}
        },
        "test__lt__false": {
            "name": "test__lt__false",
            "location": 485,
            "return": [],
            "arguments": {}
        },
        "test__le__": {
            "name": "test__le__",
            "location": 491,
            "return": [],
            "arguments": {}
        },
        "test__le__not_range": {
            "name": "test__le__not_range",
            "location": 499,
            "return": [],
            "arguments": {}
        },
        "test__le__not_set": {
            "name": "test__le__not_set",
            "location": 507,
            "return": [],
            "arguments": {}
        },
        "test__le__other_not_set": {
            "name": "test__le__other_not_set",
            "location": 515,
            "return": [],
            "arguments": {}
        },
        "test__le__false": {
            "name": "test__le__false",
            "location": 523,
            "return": [],
            "arguments": {}
        },
        "test__gt__": {
            "name": "test__gt__",
            "location": 531,
            "return": [],
            "arguments": {}
        },
        "test__gt__not_range": {
            "name": "test__gt__not_range",
            "location": 538,
            "return": [],
            "arguments": {}
        },
        "test__gt__not_set": {
            "name": "test__gt__not_set",
            "location": 546,
            "return": [],
            "arguments": {}
        },
        "test__gt__other_not_set": {
            "name": "test__gt__other_not_set",
            "location": 554,
            "return": [],
            "arguments": {}
        },
        "test__gt__false": {
            "name": "test__gt__false",
            "location": 562,
            "return": [],
            "arguments": {}
        },
        "test__ge__": {
            "name": "test__ge__",
            "location": 568,
            "return": [],
            "arguments": {}
        },
        "test__ge__not_range": {
            "name": "test__ge__not_range",
            "location": 576,
            "return": [],
            "arguments": {}
        },
        "test__ge__not_set": {
            "name": "test__ge__not_set",
            "location": 584,
            "return": [],
            "arguments": {}
        },
        "test__ge__other_not_set": {
            "name": "test__ge__other_not_set",
            "location": 592,
            "return": [],
            "arguments": {}
        },
        "test__ge__false": {
            "name": "test__ge__false",
            "location": 600,
            "return": [],
            "arguments": {}
        },
        "test__str__": {
            "name": "test__str__",
            "location": 608,
            "return": [],
            "arguments": {}
        },
        "test__repr__": {
            "name": "test__repr__",
            "location": 613,
            "return": [],
            "arguments": {}
        },
        "test__bool__": {
            "name": "test__bool__",
            "location": 618,
            "return": [],
            "arguments": {}
        },
        "test_extend": {
            "name": "test_extend",
            "location": 623,
            "return": [],
            "arguments": {}
        },
        "test_extend_wrong_type": {
            "name": "test_extend_wrong_type",
            "location": 639,
            "return": [],
            "arguments": {}
        },
        "test_extend_negative_delta": {
            "name": "test_extend_negative_delta",
            "location": 645,
            "return": [],
            "arguments": {}
        },
        "test_extend_not_set": {
            "name": "test_extend_not_set",
            "location": 652,
            "return": [],
            "arguments": {}
        },
        "test_extend_prior": {
            "name": "test_extend_prior",
            "location": 659,
            "return": [],
            "arguments": {}
        },
        "test_extend_prior_wrong_type": {
            "name": "test_extend_prior_wrong_type",
            "location": 675,
            "return": [],
            "arguments": {}
        },
        "test_extend_prior_negative_delta": {
            "name": "test_extend_prior_negative_delta",
            "location": 681,
            "return": [],
            "arguments": {}
        },
        "test_extend_prior_not_set": {
            "name": "test_extend_prior_not_set",
            "location": 688,
            "return": [],
            "arguments": {}
        },
        "test_replace_start_time": {
            "name": "test_replace_start_time",
            "location": 695,
            "return": [],
            "arguments": {}
        },
        "test_replace_start_time_wrong_type": {
            "name": "test_replace_start_time_wrong_type",
            "location": 708,
            "return": [],
            "arguments": {}
        },
        "test_replace_start_time_not_set": {
            "name": "test_replace_start_time_not_set",
            "location": 714,
            "return": [],
            "arguments": {}
        },
        "test_replace_end_time": {
            "name": "test_replace_end_time",
            "location": 720,
            "return": [],
            "arguments": {}
        },
        "test_replace_end_time_end_type": {
            "name": "test_replace_end_time_end_type",
            "location": 733,
            "return": [],
            "arguments": {}
        },
        "test_replace_end_time_not_set": {
            "name": "test_replace_end_time_not_set",
            "location": 739,
            "return": [],
            "arguments": {}
        },
        "test_intersection": {
            "name": "test_intersection",
            "location": 745,
            "return": [],
            "arguments": {}
        },
        "test_intersection_contained": {
            "name": "test_intersection_contained",
            "location": 763,
            "return": [],
            "arguments": {}
        },
        "test_intersection__gt__": {
            "name": "test_intersection__gt__",
            "location": 778,
            "return": [],
            "arguments": {}
        },
        "test_intersection__lt__": {
            "name": "test_intersection__lt__",
            "location": 791,
            "return": [],
            "arguments": {}
        },
        "test_intersection_not_set": {
            "name": "test_intersection_not_set",
            "location": 804,
            "return": [],
            "arguments": {}
        },
        "test_intersection_other_not_set": {
            "name": "test_intersection_other_not_set",
            "location": 811,
            "return": [],
            "arguments": {}
        },
        "test_intersection_contained_in_other": {
            "name": "test_intersection_contained_in_other",
            "location": 818,
            "return": [],
            "arguments": {}
        },
        "test_intersection_overlaps_start_time": {
            "name": "test_intersection_overlaps_start_time",
            "location": 834,
            "return": [],
            "arguments": {}
        },
        "test_intersection_overlaps_end_time": {
            "name": "test_intersection_overlaps_end_time",
            "location": 844,
            "return": [],
            "arguments": {}
        },
        "test_copy": {
            "name": "test_copy",
            "location": 854,
            "return": [],
            "arguments": {}
        },
        "test_copy_not_set": {
            "name": "test_copy_not_set",
            "location": 875,
            "return": [],
            "arguments": {}
        },
        "test_shift": {
            "name": "test_shift",
            "location": 881,
            "return": [],
            "arguments": {}
        },
        "test_shift_wrong_type": {
            "name": "test_shift_wrong_type",
            "location": 892,
            "return": [],
            "arguments": {}
        },
        "test__init__": {
            "name": "test__init__",
            "location": 904,
            "return": [],
            "arguments": {
                "dt": [],
                "dt2": []
            }
        },
        "test__init__timedelta": {
            "name": "test__init__timedelta",
            "location": 913,
            "return": [],
            "arguments": {
                "dt": [],
                "delta": []
            }
        },
        "test_contains": {
            "name": "test_contains",
            "location": 952,
            "return": [],
            "arguments": {
                "dt": [],
                "delta1": [],
                "delta2": []
            }
        },
        "test_overlaps2": {
            "name": "test_overlaps2",
            "location": 990,
            "return": [],
            "arguments": {
                "dt": [],
                "delta1": [],
                "delta2": []
            }
        },
        "test_timedelta_to_h_mm": {
            "name": "test_timedelta_to_h_mm",
            "location": 1040,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "overflow": {
            "name": "overflow",
            "location": 1053,
            "return": [],
            "arguments": {
                "date_time": [],
                "time_delta": []
            }
        }
    },
    "CityTime-master/tests/__init__.py": {}
}
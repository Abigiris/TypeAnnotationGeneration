{
    "CrashAnalysisTool-master/crash_analysis/analysis.py": {
        "stem_frequency": {
            "name": "stem_frequency",
            "location": 41,
            "return": [
                "Tuple[(pd.DataFrame, List[Tuple[(str, int)]], int)]"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ],
                "column": [
                    "Optional[str]"
                ],
                "_map": [
                    "Optional[Callable[([T], Any)]]"
                ],
                "print_output": [
                    "bool"
                ],
                "top": [
                    "int"
                ]
            }
        },
        "count_entries": {
            "name": "count_entries",
            "location": 96,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "create_vocab_frame": {
            "name": "create_vocab_frame",
            "location": 120,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "text_df_column": [
                    "pd.DataFrame"
                ]
            }
        },
        "associate_by_keyterms": {
            "name": "associate_by_keyterms",
            "location": 139,
            "return": [],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ],
                "text_column": [
                    "str"
                ],
                "field": [],
                "print_output": [],
                "min_count": []
            }
        },
        "TextAnalysis.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_or_dataframe": [
                    "Union[(pd.DataFrame, PathStr)]"
                ]
            }
        },
        "TextAnalysis.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextAnalysis.__clear_worker": {
            "name": "__clear_worker",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/dataframe_helper.py": {
        "remove_empty": {
            "name": "remove_empty",
            "location": 7,
            "return": [],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ]
            }
        },
        "fill_empty": {
            "name": "fill_empty",
            "location": 39,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ],
                "val": [
                    "Any"
                ]
            }
        },
        "is_df_set": {
            "name": "is_df_set",
            "location": 72,
            "return": [
                "bool"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ]
            }
        },
        "get_columns": {
            "name": "get_columns",
            "location": 88,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ]
            }
        },
        "read_csv": {
            "name": "read_csv",
            "location": 106,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "csv_file_path": [
                    "PathStr"
                ]
            }
        },
        "get_column": {
            "name": "get_column",
            "location": 123,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ],
                "col_name": [
                    "str"
                ]
            }
        },
        "filter_dataframe": {
            "name": "filter_dataframe",
            "location": 183,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ]
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/downloader.py": {
        "download_time_range": {
            "name": "download_time_range",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "start": [
                    "datetime.datetime"
                ],
                "end": [
                    "datetime.datetime"
                ],
                "dest": [
                    "Optional[PathStr]"
                ]
            }
        },
        "download_file": {
            "name": "download_file",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "ticket": [
                    "str"
                ],
                "dest": [
                    "Optional[PathStr]"
                ]
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/kmeans.py": {
        "vectorize_corpus": {
            "name": "vectorize_corpus",
            "location": 18,
            "return": [],
            "arguments": {
                "working_df": []
            }
        },
        "train_or_load_kmeans": {
            "name": "train_or_load_kmeans",
            "location": 48,
            "return": [],
            "arguments": {
                "tfidf_mx": [],
                "k": [],
                "recompute": []
            }
        },
        "top_terms_per_cluster": {
            "name": "top_terms_per_cluster",
            "location": 64,
            "return": [],
            "arguments": {
                "frame": [],
                "km": [],
                "num_clusters": [],
                "vocab_frame": [],
                "terms": []
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/lda.py": {
        "lda": {
            "name": "lda",
            "location": 13,
            "return": [],
            "arguments": {
                "preprocessed_df": [],
                "version": [],
                "product_id": [],
                "num_topics": [],
                "recompute": [],
                "multicore": []
            }
        },
        "print_topics": {
            "name": "print_topics",
            "location": 54,
            "return": [],
            "arguments": {
                "lda_model": [],
                "num_words": []
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/parser.py": {
        "extract_zipfiles": {
            "name": "extract_zipfiles",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "zipfile_dir": [
                    "PathStr"
                ]
            }
        },
        "xmldocs_to_dataframe": {
            "name": "xmldocs_to_dataframe",
            "location": 35,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "xml_dir": [
                    "PathStr"
                ]
            }
        },
        "__trees_to_dataframe": {
            "name": "__trees_to_dataframe",
            "location": 65,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "roots": [
                    "List[List[etree.Element]]"
                ]
            }
        },
        "__parse_etrees": {
            "name": "__parse_etrees",
            "location": 76,
            "return": [
                "Iterator[Dict]"
            ],
            "arguments": {
                "roots": [
                    "List[List[etree.Element]]"
                ]
            }
        },
        "__xml_to_tree": {
            "name": "__xml_to_tree",
            "location": 106,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "xml_filename": [
                    "PathStr"
                ]
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/preprocess.py": {
        "preprocess": {
            "name": "preprocess",
            "location": 12,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "df": [
                    "pd.DataFrame"
                ],
                "_map": [
                    "Optional[Callable[([T], Any)]]"
                ]
            }
        },
        "strip_proper_pos": {
            "name": "strip_proper_pos",
            "location": 36,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "text": [
                    "Union[(List[str], str)]"
                ]
            }
        },
        "tokenize_and_stop": {
            "name": "tokenize_and_stop",
            "location": 56,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "text": [
                    "Union[(List[str], str)]"
                ]
            }
        },
        "tokenize_stem_stop": {
            "name": "tokenize_stem_stop",
            "location": 77,
            "return": [],
            "arguments": {
                "text": [
                    "Union[(List[str], str)]"
                ]
            }
        },
        "tokenize": {
            "name": "tokenize",
            "location": 101,
            "return": [
                "Sequence[Any]"
            ],
            "arguments": {
                "text": [
                    "Union[(List[str], str)]"
                ],
                "stem": [
                    "bool"
                ],
                "stop": [
                    "bool"
                ]
            }
        },
        "lower_and_tokenize": {
            "name": "lower_and_tokenize",
            "location": 141,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "ngram": {
            "name": "ngram",
            "location": 160,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "_input": [
                    "List[str]"
                ],
                "N": [
                    "int"
                ],
                "skip": [
                    "Optional[int]"
                ],
                "delim": [
                    "str"
                ],
                "skip_delim": [
                    "str"
                ]
            }
        },
        "skipgram": {
            "name": "skipgram",
            "location": 198,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "_input": [
                    "List[str]"
                ],
                "N": [
                    "int"
                ],
                "skip": [
                    "Optional[int]"
                ],
                "delim": [
                    "str"
                ],
                "skip_delim": [
                    "str"
                ]
            }
        },
        "__get_stopwords": {
            "name": "__get_stopwords",
            "location": 236,
            "return": [],
            "arguments": {}
        },
        "__join_if_list": {
            "name": "__join_if_list",
            "location": 248,
            "return": [
                "str"
            ],
            "arguments": {
                "text_or_list": [
                    "Union[(List[str], str)]"
                ]
            }
        },
        "__map_and_filter": {
            "name": "__map_and_filter",
            "location": 265,
            "return": [
                "MutableSequence[Any]"
            ],
            "arguments": {
                "_input": [
                    "MutableSequence[T]"
                ],
                "_map": [
                    "Callable[([T], Any)]"
                ],
                "_filter": [
                    "Callable[([T], bool)]"
                ]
            }
        },
        "compose": {
            "name": "compose",
            "location": 285,
            "return": [],
            "arguments": {}
        },
        "tokenize.identity": {
            "name": "identity",
            "location": 118,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "tokenize.allow_all": {
            "name": "allow_all",
            "location": 120,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "tokenize.not_stopword": {
            "name": "not_stopword",
            "location": 129,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/quickbase.py": {
        "to_xml_name": {
            "name": "to_xml_name",
            "location": 38,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Error.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "msg": [],
                "response": []
            }
        },
        "Client._build_request": {
            "name": "_build_request",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Client._parse_records": {
            "name": "_parse_records",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": [],
                "response": [],
                "path_or_tag": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": [],
                "base_url": [],
                "app_token": [],
                "timeout": [],
                "authenticate": [],
                "database": []
            }
        },
        "Client.make_url": {
            "name": "make_url",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "database": []
            }
        },
        "Client.request": {
            "name": "request",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "database": [],
                "request": [],
                "required": [],
                "ticket": []
            }
        },
        "Client.authenticate": {
            "name": "authenticate",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.do_query": {
            "name": "do_query",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "query": [],
                "qid": [],
                "qname": [],
                "columns": [],
                "sort": [],
                "structured": [],
                "num": [],
                "only_new": [],
                "skip": [],
                "ascending": [],
                "include_rids": [],
                "database": [],
                "path_or_tag": []
            }
        },
        "Client.edit_record": {
            "name": "edit_record",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "rid": [],
                "fields": [],
                "named": [],
                "database": []
            }
        },
        "Client._build_request.add_sub_element": {
            "name": "add_sub_element",
            "location": 76,
            "return": [],
            "arguments": {
                "field": [],
                "value": []
            }
        }
    },
    "CrashAnalysisTool-master/crash_analysis/types.py": {},
    "CrashAnalysisTool-master/crash_analysis/__init__.py": {}
}
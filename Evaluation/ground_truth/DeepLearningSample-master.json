{
    "DeepLearningSample-master/chapter1/01.py": {},
    "DeepLearningSample-master/chapter2/01.py": {
        "Perceptron.add_old": {
            "name": "add_old",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "x1": [
                    "int"
                ],
                "x2": [
                    "int"
                ]
            }
        },
        "Perceptron.add": {
            "name": "add",
            "location": 20,
            "return": [
                "int"
            ],
            "arguments": {
                "x1": [
                    "int"
                ],
                "x2": [
                    "int"
                ]
            }
        },
        "Perceptron.nand": {
            "name": "nand",
            "location": 33,
            "return": [
                "int"
            ],
            "arguments": {
                "x1": [
                    "int"
                ],
                "x2": [
                    "int"
                ]
            }
        }
    },
    "DeepLearningSample-master/chapter3/01.py": {
        "Activator.step": {
            "name": "step",
            "location": 10,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "x": [
                    "np.ndarray"
                ]
            }
        },
        "Activator.sigmoid": {
            "name": "sigmoid",
            "location": 18,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "x": [
                    "float"
                ]
            }
        }
    },
    "DeepLearningSample-master/out/matplotlib/pyplot.py": {
        "install_repl_displayhook": {
            "name": "install_repl_displayhook",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "uninstall_repl_displayhook": {
            "name": "uninstall_repl_displayhook",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "findobj": {
            "name": "findobj",
            "location": 15,
            "return": [],
            "arguments": {
                "o": [
                    "Optional[Any]"
                ],
                "match": [
                    "Optional[Any]"
                ],
                "include_self": [
                    "bool"
                ]
            }
        },
        "switch_backend": {
            "name": "switch_backend",
            "location": 16,
            "return": [],
            "arguments": {
                "newbackend": []
            }
        },
        "show": {
            "name": "show",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "isinteractive": {
            "name": "isinteractive",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "ioff": {
            "name": "ioff",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "ion": {
            "name": "ion",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "pause": {
            "name": "pause",
            "location": 21,
            "return": [],
            "arguments": {
                "interval": []
            }
        },
        "rc": {
            "name": "rc",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "rc_context": {
            "name": "rc_context",
            "location": 23,
            "return": [],
            "arguments": {
                "rc": [
                    "Optional[Any]"
                ],
                "fname": [
                    "Optional[Any]"
                ]
            }
        },
        "rcdefaults": {
            "name": "rcdefaults",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "gci": {
            "name": "gci",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "sci": {
            "name": "sci",
            "location": 26,
            "return": [],
            "arguments": {
                "im": []
            }
        },
        "setp": {
            "name": "setp",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "xkcd": {
            "name": "xkcd",
            "location": 28,
            "return": [],
            "arguments": {
                "scale": [
                    "int"
                ],
                "length": [
                    "int"
                ],
                "randomness": [
                    "int"
                ]
            }
        },
        "figure": {
            "name": "figure",
            "location": 29,
            "return": [],
            "arguments": {
                "num": [
                    "Optional[Any]"
                ],
                "figsize": [
                    "Optional[Any]"
                ],
                "dpi": [
                    "Optional[Any]"
                ],
                "facecolor": [
                    "Optional[Any]"
                ],
                "edgecolor": [
                    "Optional[Any]"
                ],
                "frameon": [
                    "bool"
                ],
                "FigureClass": [
                    "Any"
                ]
            }
        },
        "gcf": {
            "name": "gcf",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "fignum_exists": {
            "name": "fignum_exists",
            "location": 31,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "get_fignums": {
            "name": "get_fignums",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "get_figlabels": {
            "name": "get_figlabels",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "get_current_fig_manager": {
            "name": "get_current_fig_manager",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "connect": {
            "name": "connect",
            "location": 35,
            "return": [],
            "arguments": {
                "s": [],
                "func": []
            }
        },
        "disconnect": {
            "name": "disconnect",
            "location": 36,
            "return": [],
            "arguments": {
                "cid": []
            }
        },
        "close": {
            "name": "close",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "clf": {
            "name": "clf",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "draw": {
            "name": "draw",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "savefig": {
            "name": "savefig",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "ginput": {
            "name": "ginput",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "waitforbuttonpress": {
            "name": "waitforbuttonpress",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "figtext": {
            "name": "figtext",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "suptitle": {
            "name": "suptitle",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "figimage": {
            "name": "figimage",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "figlegend": {
            "name": "figlegend",
            "location": 46,
            "return": [],
            "arguments": {
                "handles": [],
                "labels": [],
                "loc": []
            }
        },
        "hold": {
            "name": "hold",
            "location": 47,
            "return": [],
            "arguments": {
                "b": [
                    "Optional[Any]"
                ]
            }
        },
        "ishold": {
            "name": "ishold",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "over": {
            "name": "over",
            "location": 49,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "axes": {
            "name": "axes",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "delaxes": {
            "name": "delaxes",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "sca": {
            "name": "sca",
            "location": 52,
            "return": [],
            "arguments": {
                "ax": []
            }
        },
        "gca": {
            "name": "gca",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "subplot": {
            "name": "subplot",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "subplots": {
            "name": "subplots",
            "location": 55,
            "return": [],
            "arguments": {
                "nrows": [
                    "int"
                ],
                "ncols": [
                    "int"
                ],
                "sharex": [
                    "bool"
                ],
                "sharey": [
                    "bool"
                ],
                "squeeze": [
                    "bool"
                ],
                "subplot_kw": [
                    "Optional[Any]"
                ],
                "gridspec_kw": [
                    "Optional[Any]"
                ]
            }
        },
        "subplot2grid": {
            "name": "subplot2grid",
            "location": 56,
            "return": [],
            "arguments": {
                "shape": [],
                "loc": [],
                "rowspan": [
                    "int"
                ],
                "colspan": [
                    "int"
                ]
            }
        },
        "twinx": {
            "name": "twinx",
            "location": 57,
            "return": [],
            "arguments": {
                "ax": [
                    "Optional[Any]"
                ]
            }
        },
        "twiny": {
            "name": "twiny",
            "location": 58,
            "return": [],
            "arguments": {
                "ax": [
                    "Optional[Any]"
                ]
            }
        },
        "subplots_adjust": {
            "name": "subplots_adjust",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "subplot_tool": {
            "name": "subplot_tool",
            "location": 60,
            "return": [],
            "arguments": {
                "targetfig": [
                    "Optional[Any]"
                ]
            }
        },
        "tight_layout": {
            "name": "tight_layout",
            "location": 61,
            "return": [],
            "arguments": {
                "pad": [
                    "float"
                ],
                "h_pad": [
                    "Optional[Any]"
                ],
                "w_pad": [
                    "Optional[Any]"
                ],
                "rect": [
                    "Optional[Any]"
                ]
            }
        },
        "box": {
            "name": "box",
            "location": 62,
            "return": [],
            "arguments": {
                "on": [
                    "Optional[Any]"
                ]
            }
        },
        "title": {
            "name": "title",
            "location": 63,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "axis": {
            "name": "axis",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "xlabel": {
            "name": "xlabel",
            "location": 65,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "ylabel": {
            "name": "ylabel",
            "location": 66,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "xlim": {
            "name": "xlim",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "ylim": {
            "name": "ylim",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "xscale": {
            "name": "xscale",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "yscale": {
            "name": "yscale",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "xticks": {
            "name": "xticks",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "yticks": {
            "name": "yticks",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "minorticks_on": {
            "name": "minorticks_on",
            "location": 73,
            "return": [],
            "arguments": {}
        },
        "minorticks_off": {
            "name": "minorticks_off",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "rgrids": {
            "name": "rgrids",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "thetagrids": {
            "name": "thetagrids",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "plotting": {
            "name": "plotting",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "get_plot_commands": {
            "name": "get_plot_commands",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "colors": {
            "name": "colors",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "colormaps": {
            "name": "colormaps",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "colorbar": {
            "name": "colorbar",
            "location": 81,
            "return": [],
            "arguments": {
                "mappable": [
                    "Optional[Any]"
                ],
                "cax": [
                    "Optional[Any]"
                ],
                "ax": [
                    "Optional[Any]"
                ]
            }
        },
        "clim": {
            "name": "clim",
            "location": 82,
            "return": [],
            "arguments": {
                "vmin": [
                    "Optional[Any]"
                ],
                "vmax": [
                    "Optional[Any]"
                ]
            }
        },
        "set_cmap": {
            "name": "set_cmap",
            "location": 83,
            "return": [],
            "arguments": {
                "cmap": []
            }
        },
        "imread": {
            "name": "imread",
            "location": 84,
            "return": [],
            "arguments": {}
        },
        "imsave": {
            "name": "imsave",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "matshow": {
            "name": "matshow",
            "location": 86,
            "return": [],
            "arguments": {
                "A": [],
                "fignum": [
                    "Optional[Any]"
                ]
            }
        },
        "polar": {
            "name": "polar",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "plotfile": {
            "name": "plotfile",
            "location": 88,
            "return": [],
            "arguments": {
                "fname": [],
                "cols": [
                    "Any"
                ],
                "plotfuncs": [
                    "Optional[Any]"
                ],
                "comments": [
                    "str"
                ],
                "skiprows": [
                    "int"
                ],
                "checkrows": [
                    "int"
                ],
                "delimiter": [
                    "str"
                ],
                "names": [
                    "Optional[Any]"
                ],
                "subplots": [
                    "bool"
                ],
                "newfig": [
                    "bool"
                ]
            }
        },
        "spy": {
            "name": "spy",
            "location": 89,
            "return": [],
            "arguments": {
                "Z": [],
                "precision": [
                    "int"
                ],
                "marker": [
                    "Optional[Any]"
                ],
                "markersize": [
                    "Optional[Any]"
                ],
                "aspect": [
                    "str"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "acorr": {
            "name": "acorr",
            "location": 90,
            "return": [],
            "arguments": {
                "x": [],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "angle_spectrum": {
            "name": "angle_spectrum",
            "location": 91,
            "return": [],
            "arguments": {
                "x": [],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "arrow": {
            "name": "arrow",
            "location": 92,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "dx": [],
                "dy": [],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "axhline": {
            "name": "axhline",
            "location": 93,
            "return": [],
            "arguments": {
                "y": [
                    "int"
                ],
                "xmin": [
                    "int"
                ],
                "xmax": [
                    "int"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "axhspan": {
            "name": "axhspan",
            "location": 94,
            "return": [],
            "arguments": {
                "ymin": [],
                "ymax": [],
                "xmin": [
                    "int"
                ],
                "xmax": [
                    "int"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "axvline": {
            "name": "axvline",
            "location": 95,
            "return": [],
            "arguments": {
                "x": [
                    "int"
                ],
                "ymin": [
                    "int"
                ],
                "ymax": [
                    "int"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "axvspan": {
            "name": "axvspan",
            "location": 96,
            "return": [],
            "arguments": {
                "xmin": [],
                "xmax": [],
                "ymin": [
                    "int"
                ],
                "ymax": [
                    "int"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "bar": {
            "name": "bar",
            "location": 97,
            "return": [],
            "arguments": {
                "left": [],
                "height": [],
                "width": [
                    "float"
                ],
                "bottom": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "barh": {
            "name": "barh",
            "location": 98,
            "return": [],
            "arguments": {
                "bottom": [],
                "width": [],
                "height": [
                    "float"
                ],
                "left": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ]
            }
        },
        "broken_barh": {
            "name": "broken_barh",
            "location": 99,
            "return": [],
            "arguments": {
                "xranges": [],
                "yrange": [],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "boxplot": {
            "name": "boxplot",
            "location": 100,
            "return": [],
            "arguments": {
                "x": [],
                "notch": [
                    "Optional[Any]"
                ],
                "sym": [
                    "Optional[Any]"
                ],
                "vert": [
                    "Optional[Any]"
                ],
                "whis": [
                    "Optional[Any]"
                ],
                "positions": [
                    "Optional[Any]"
                ],
                "widths": [
                    "Optional[Any]"
                ],
                "patch_artist": [
                    "Optional[Any]"
                ],
                "bootstrap": [
                    "Optional[Any]"
                ],
                "usermedians": [
                    "Optional[Any]"
                ],
                "conf_intervals": [
                    "Optional[Any]"
                ],
                "meanline": [
                    "Optional[Any]"
                ],
                "showmeans": [
                    "Optional[Any]"
                ],
                "showcaps": [
                    "Optional[Any]"
                ],
                "showbox": [
                    "Optional[Any]"
                ],
                "showfliers": [
                    "Optional[Any]"
                ],
                "boxprops": [
                    "Optional[Any]"
                ],
                "labels": [
                    "Optional[Any]"
                ],
                "flierprops": [
                    "Optional[Any]"
                ],
                "medianprops": [
                    "Optional[Any]"
                ],
                "meanprops": [
                    "Optional[Any]"
                ],
                "capprops": [
                    "Optional[Any]"
                ],
                "whiskerprops": [
                    "Optional[Any]"
                ],
                "manage_xticks": [
                    "bool"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "cohere": {
            "name": "cohere",
            "location": 101,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "NFFT": [
                    "int"
                ],
                "Fs": [
                    "int"
                ],
                "Fc": [
                    "int"
                ],
                "detrend": [
                    "Any"
                ],
                "window": [
                    "Any"
                ],
                "noverlap": [
                    "int"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "str"
                ],
                "scale_by_freq": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "clabel": {
            "name": "clabel",
            "location": 102,
            "return": [],
            "arguments": {
                "CS": []
            }
        },
        "contour": {
            "name": "contour",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "contourf": {
            "name": "contourf",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "csd": {
            "name": "csd",
            "location": 105,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "NFFT": [
                    "Optional[Any]"
                ],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "detrend": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "noverlap": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "scale_by_freq": [
                    "Optional[Any]"
                ],
                "return_line": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "errorbar": {
            "name": "errorbar",
            "location": 106,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "yerr": [
                    "Optional[Any]"
                ],
                "xerr": [
                    "Optional[Any]"
                ],
                "fmt": [
                    "str"
                ],
                "ecolor": [
                    "Optional[Any]"
                ],
                "elinewidth": [
                    "Optional[Any]"
                ],
                "capsize": [
                    "Optional[Any]"
                ],
                "barsabove": [
                    "bool"
                ],
                "lolims": [
                    "bool"
                ],
                "uplims": [
                    "bool"
                ],
                "xlolims": [
                    "bool"
                ],
                "xuplims": [
                    "bool"
                ],
                "errorevery": [
                    "int"
                ],
                "capthick": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "eventplot": {
            "name": "eventplot",
            "location": 107,
            "return": [],
            "arguments": {
                "positions": [],
                "orientation": [
                    "str"
                ],
                "lineoffsets": [
                    "int"
                ],
                "linelengths": [
                    "int"
                ],
                "linewidths": [
                    "Optional[Any]"
                ],
                "colors": [
                    "Optional[Any]"
                ],
                "linestyles": [
                    "str"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "fill": {
            "name": "fill",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "fill_between": {
            "name": "fill_between",
            "location": 109,
            "return": [],
            "arguments": {
                "x": [],
                "y1": [],
                "y2": [
                    "int"
                ],
                "where": [
                    "Optional[Any]"
                ],
                "interpolate": [
                    "bool"
                ],
                "step": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "fill_betweenx": {
            "name": "fill_betweenx",
            "location": 110,
            "return": [],
            "arguments": {
                "y": [],
                "x1": [],
                "x2": [
                    "int"
                ],
                "where": [
                    "Optional[Any]"
                ],
                "step": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "hexbin": {
            "name": "hexbin",
            "location": 111,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "C": [
                    "Optional[Any]"
                ],
                "gridsize": [
                    "int"
                ],
                "bins": [
                    "Optional[Any]"
                ],
                "xscale": [
                    "str"
                ],
                "yscale": [
                    "str"
                ],
                "extent": [
                    "Optional[Any]"
                ],
                "cmap": [
                    "Optional[Any]"
                ],
                "norm": [
                    "Optional[Any]"
                ],
                "vmin": [
                    "Optional[Any]"
                ],
                "vmax": [
                    "Optional[Any]"
                ],
                "alpha": [
                    "Optional[Any]"
                ],
                "linewidths": [
                    "Optional[Any]"
                ],
                "edgecolors": [
                    "str"
                ],
                "reduce_C_function": [
                    "Any"
                ],
                "mincnt": [
                    "Optional[Any]"
                ],
                "marginals": [
                    "bool"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "hist": {
            "name": "hist",
            "location": 112,
            "return": [],
            "arguments": {
                "x": [],
                "bins": [
                    "int"
                ],
                "range": [
                    "Optional[Any]"
                ],
                "normed": [
                    "bool"
                ],
                "weights": [
                    "Optional[Any]"
                ],
                "cumulative": [
                    "bool"
                ],
                "bottom": [
                    "Optional[Any]"
                ],
                "histtype": [
                    "str"
                ],
                "align": [
                    "str"
                ],
                "orientation": [
                    "str"
                ],
                "rwidth": [
                    "Optional[Any]"
                ],
                "log": [
                    "bool"
                ],
                "color": [
                    "Optional[Any]"
                ],
                "label": [
                    "Optional[Any]"
                ],
                "stacked": [
                    "bool"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "hist2d": {
            "name": "hist2d",
            "location": 113,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "bins": [
                    "int"
                ],
                "range": [
                    "Optional[Any]"
                ],
                "normed": [
                    "bool"
                ],
                "weights": [
                    "Optional[Any]"
                ],
                "cmin": [
                    "Optional[Any]"
                ],
                "cmax": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "hlines": {
            "name": "hlines",
            "location": 114,
            "return": [],
            "arguments": {
                "y": [],
                "xmin": [],
                "xmax": [],
                "colors": [
                    "str"
                ],
                "linestyles": [
                    "str"
                ],
                "label": [
                    "str"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "imshow": {
            "name": "imshow",
            "location": 115,
            "return": [],
            "arguments": {
                "X": [],
                "cmap": [
                    "Optional[Any]"
                ],
                "norm": [
                    "Optional[Any]"
                ],
                "aspect": [
                    "Optional[Any]"
                ],
                "interpolation": [
                    "Optional[Any]"
                ],
                "alpha": [
                    "Optional[Any]"
                ],
                "vmin": [
                    "Optional[Any]"
                ],
                "vmax": [
                    "Optional[Any]"
                ],
                "origin": [
                    "Optional[Any]"
                ],
                "extent": [
                    "Optional[Any]"
                ],
                "shape": [
                    "Optional[Any]"
                ],
                "filternorm": [
                    "int"
                ],
                "filterrad": [
                    "float"
                ],
                "imlim": [
                    "Optional[Any]"
                ],
                "resample": [
                    "Optional[Any]"
                ],
                "url": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "loglog": {
            "name": "loglog",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "magnitude_spectrum": {
            "name": "magnitude_spectrum",
            "location": 117,
            "return": [],
            "arguments": {
                "x": [],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "scale": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "pcolor": {
            "name": "pcolor",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "pcolormesh": {
            "name": "pcolormesh",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "phase_spectrum": {
            "name": "phase_spectrum",
            "location": 120,
            "return": [],
            "arguments": {
                "x": [],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "pie": {
            "name": "pie",
            "location": 121,
            "return": [],
            "arguments": {
                "x": [],
                "explode": [
                    "Optional[Any]"
                ],
                "labels": [
                    "Optional[Any]"
                ],
                "colors": [
                    "Optional[Any]"
                ],
                "autopct": [
                    "Optional[Any]"
                ],
                "pctdistance": [
                    "float"
                ],
                "shadow": [
                    "bool"
                ],
                "labeldistance": [
                    "float"
                ],
                "startangle": [
                    "Optional[Any]"
                ],
                "radius": [
                    "Optional[Any]"
                ],
                "counterclock": [
                    "bool"
                ],
                "wedgeprops": [
                    "Optional[Any]"
                ],
                "textprops": [
                    "Optional[Any]"
                ],
                "center": [
                    "Any"
                ],
                "frame": [
                    "bool"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "plot": {
            "name": "plot",
            "location": 122,
            "return": [],
            "arguments": {}
        },
        "plot_date": {
            "name": "plot_date",
            "location": 123,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "fmt": [
                    "str"
                ],
                "tz": [
                    "Optional[Any]"
                ],
                "xdate": [
                    "bool"
                ],
                "ydate": [
                    "bool"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "psd": {
            "name": "psd",
            "location": 124,
            "return": [],
            "arguments": {
                "x": [],
                "NFFT": [
                    "Optional[Any]"
                ],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "detrend": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "noverlap": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "scale_by_freq": [
                    "Optional[Any]"
                ],
                "return_line": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "quiver": {
            "name": "quiver",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "quiverkey": {
            "name": "quiverkey",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "scatter": {
            "name": "scatter",
            "location": 127,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "s": [
                    "int"
                ],
                "c": [
                    "Optional[Any]"
                ],
                "marker": [
                    "str"
                ],
                "cmap": [
                    "Optional[Any]"
                ],
                "norm": [
                    "Optional[Any]"
                ],
                "vmin": [
                    "Optional[Any]"
                ],
                "vmax": [
                    "Optional[Any]"
                ],
                "alpha": [
                    "Optional[Any]"
                ],
                "linewidths": [
                    "Optional[Any]"
                ],
                "verts": [
                    "Optional[Any]"
                ],
                "edgecolors": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "semilogx": {
            "name": "semilogx",
            "location": 128,
            "return": [],
            "arguments": {}
        },
        "semilogy": {
            "name": "semilogy",
            "location": 129,
            "return": [],
            "arguments": {}
        },
        "specgram": {
            "name": "specgram",
            "location": 130,
            "return": [],
            "arguments": {
                "x": [],
                "NFFT": [
                    "Optional[Any]"
                ],
                "Fs": [
                    "Optional[Any]"
                ],
                "Fc": [
                    "Optional[Any]"
                ],
                "detrend": [
                    "Optional[Any]"
                ],
                "window": [
                    "Optional[Any]"
                ],
                "noverlap": [
                    "Optional[Any]"
                ],
                "cmap": [
                    "Optional[Any]"
                ],
                "xextent": [
                    "Optional[Any]"
                ],
                "pad_to": [
                    "Optional[Any]"
                ],
                "sides": [
                    "Optional[Any]"
                ],
                "scale_by_freq": [
                    "Optional[Any]"
                ],
                "mode": [
                    "Optional[Any]"
                ],
                "scale": [
                    "Optional[Any]"
                ],
                "vmin": [
                    "Optional[Any]"
                ],
                "vmax": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "stackplot": {
            "name": "stackplot",
            "location": 131,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "stem": {
            "name": "stem",
            "location": 132,
            "return": [],
            "arguments": {}
        },
        "step": {
            "name": "step",
            "location": 133,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "streamplot": {
            "name": "streamplot",
            "location": 134,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "u": [],
                "v": [],
                "density": [
                    "int"
                ],
                "linewidth": [
                    "Optional[Any]"
                ],
                "color": [
                    "Optional[Any]"
                ],
                "cmap": [
                    "Optional[Any]"
                ],
                "norm": [
                    "Optional[Any]"
                ],
                "arrowsize": [
                    "int"
                ],
                "arrowstyle": [
                    "str"
                ],
                "minlength": [
                    "float"
                ],
                "transform": [
                    "Optional[Any]"
                ],
                "zorder": [
                    "int"
                ],
                "start_points": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "tricontour": {
            "name": "tricontour",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "tricontourf": {
            "name": "tricontourf",
            "location": 136,
            "return": [],
            "arguments": {}
        },
        "tripcolor": {
            "name": "tripcolor",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "triplot": {
            "name": "triplot",
            "location": 138,
            "return": [],
            "arguments": {}
        },
        "violinplot": {
            "name": "violinplot",
            "location": 139,
            "return": [],
            "arguments": {
                "dataset": [],
                "positions": [
                    "Optional[Any]"
                ],
                "vert": [
                    "bool"
                ],
                "widths": [
                    "float"
                ],
                "showmeans": [
                    "bool"
                ],
                "showextrema": [
                    "bool"
                ],
                "showmedians": [
                    "bool"
                ],
                "points": [
                    "int"
                ],
                "bw_method": [
                    "Optional[Any]"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "vlines": {
            "name": "vlines",
            "location": 140,
            "return": [],
            "arguments": {
                "x": [],
                "ymin": [],
                "ymax": [],
                "colors": [
                    "str"
                ],
                "linestyles": [
                    "str"
                ],
                "label": [
                    "str"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "xcorr": {
            "name": "xcorr",
            "location": 141,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "normed": [
                    "bool"
                ],
                "detrend": [
                    "Any"
                ],
                "usevlines": [
                    "bool"
                ],
                "maxlags": [
                    "int"
                ],
                "hold": [
                    "Optional[Any]"
                ],
                "data": [
                    "Optional[Any]"
                ]
            }
        },
        "barbs": {
            "name": "barbs",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "cla": {
            "name": "cla",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "grid": {
            "name": "grid",
            "location": 144,
            "return": [],
            "arguments": {
                "b": [
                    "Optional[Any]"
                ],
                "which": [
                    "str"
                ],
                "axis": [
                    "str"
                ]
            }
        },
        "legend": {
            "name": "legend",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "table": {
            "name": "table",
            "location": 146,
            "return": [],
            "arguments": {}
        },
        "text": {
            "name": "text",
            "location": 147,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "s": [],
                "fontdict": [
                    "Optional[Any]"
                ],
                "withdash": [
                    "bool"
                ]
            }
        },
        "annotate": {
            "name": "annotate",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "ticklabel_format": {
            "name": "ticklabel_format",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "locator_params": {
            "name": "locator_params",
            "location": 150,
            "return": [],
            "arguments": {
                "axis": [
                    "str"
                ],
                "tight": [
                    "Optional[Any]"
                ]
            }
        },
        "tick_params": {
            "name": "tick_params",
            "location": 151,
            "return": [],
            "arguments": {
                "axis": [
                    "str"
                ]
            }
        },
        "margins": {
            "name": "margins",
            "location": 152,
            "return": [],
            "arguments": {}
        },
        "autoscale": {
            "name": "autoscale",
            "location": 153,
            "return": [],
            "arguments": {
                "enable": [
                    "bool"
                ],
                "axis": [
                    "str"
                ],
                "tight": [
                    "Optional[Any]"
                ]
            }
        },
        "autumn": {
            "name": "autumn",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "bone": {
            "name": "bone",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "cool": {
            "name": "cool",
            "location": 156,
            "return": [],
            "arguments": {}
        },
        "copper": {
            "name": "copper",
            "location": 157,
            "return": [],
            "arguments": {}
        },
        "flag": {
            "name": "flag",
            "location": 158,
            "return": [],
            "arguments": {}
        },
        "gray": {
            "name": "gray",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "hot": {
            "name": "hot",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "hsv": {
            "name": "hsv",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "jet": {
            "name": "jet",
            "location": 162,
            "return": [],
            "arguments": {}
        },
        "pink": {
            "name": "pink",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "prism": {
            "name": "prism",
            "location": 164,
            "return": [],
            "arguments": {}
        },
        "spring": {
            "name": "spring",
            "location": 165,
            "return": [],
            "arguments": {}
        },
        "summer": {
            "name": "summer",
            "location": 166,
            "return": [],
            "arguments": {}
        },
        "winter": {
            "name": "winter",
            "location": 167,
            "return": [],
            "arguments": {}
        },
        "spectral": {
            "name": "spectral",
            "location": 168,
            "return": [],
            "arguments": {}
        },
        "magma": {
            "name": "magma",
            "location": 169,
            "return": [],
            "arguments": {}
        },
        "inferno": {
            "name": "inferno",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "plasma": {
            "name": "plasma",
            "location": 171,
            "return": [],
            "arguments": {}
        },
        "viridis": {
            "name": "viridis",
            "location": 172,
            "return": [],
            "arguments": {}
        }
    },
    "DeepLearningSample-master/out/matplotlib/__init__.py": {
        "compare_versions": {
            "name": "compare_versions",
            "location": 9,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "checkdep_dvipng": {
            "name": "checkdep_dvipng",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "checkdep_ghostscript": {
            "name": "checkdep_ghostscript",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "checkdep_tex": {
            "name": "checkdep_tex",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "checkdep_pdftops": {
            "name": "checkdep_pdftops",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "checkdep_inkscape": {
            "name": "checkdep_inkscape",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "checkdep_xmllint": {
            "name": "checkdep_xmllint",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "checkdep_ps_distiller": {
            "name": "checkdep_ps_distiller",
            "location": 40,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "checkdep_usetex": {
            "name": "checkdep_usetex",
            "location": 41,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "get_example_data": {
            "name": "get_example_data",
            "location": 48,
            "return": [],
            "arguments": {
                "fname": []
            }
        },
        "get_py2exe_datafiles": {
            "name": "get_py2exe_datafiles",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "matplotlib_fname": {
            "name": "matplotlib_fname",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "rc_params": {
            "name": "rc_params",
            "location": 64,
            "return": [],
            "arguments": {
                "fail_on_error": [
                    "bool"
                ]
            }
        },
        "is_url": {
            "name": "is_url",
            "location": 68,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "rc_params_from_file": {
            "name": "rc_params_from_file",
            "location": 69,
            "return": [],
            "arguments": {
                "fname": [],
                "fail_on_error": [
                    "bool"
                ],
                "use_default_template": [
                    "bool"
                ]
            }
        },
        "rc": {
            "name": "rc",
            "location": 75,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "rcdefaults": {
            "name": "rcdefaults",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "rc_file": {
            "name": "rc_file",
            "location": 77,
            "return": [],
            "arguments": {
                "fname": []
            }
        },
        "rc_file_defaults": {
            "name": "rc_file_defaults",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "use": {
            "name": "use",
            "location": 87,
            "return": [],
            "arguments": {
                "arg": [],
                "warn": [
                    "bool"
                ],
                "force": [
                    "bool"
                ]
            }
        },
        "get_backend": {
            "name": "get_backend",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "interactive": {
            "name": "interactive",
            "location": 89,
            "return": [],
            "arguments": {
                "b": []
            }
        },
        "is_interactive": {
            "name": "is_interactive",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "tk_window_focus": {
            "name": "tk_window_focus",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "verify_test_dependencies": {
            "name": "verify_test_dependencies",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 96,
            "return": [],
            "arguments": {
                "verbosity": [
                    "int"
                ]
            }
        },
        "unpack_labeled_data": {
            "name": "unpack_labeled_data",
            "location": 97,
            "return": [],
            "arguments": {
                "replace_names": [
                    "Optional[Any]"
                ],
                "replace_all_args": [
                    "bool"
                ],
                "label_namer": [
                    "Optional[Any]"
                ],
                "positional_parameter_names": [
                    "Optional[Any]"
                ]
            }
        },
        "Verbose.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Verbose.set_level": {
            "name": "set_level",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "Verbose.set_fileo": {
            "name": "set_fileo",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "fname": []
            }
        },
        "Verbose.report": {
            "name": "report",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "level": [
                    "str"
                ]
            }
        },
        "Verbose.wrap": {
            "name": "wrap",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "fmt": [],
                "func": [],
                "level": [
                    "str"
                ],
                "always": [
                    "bool"
                ]
            }
        },
        "Verbose.ge": {
            "name": "ge",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "RcParams.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RcParams.__setitem__": {
            "name": "__setitem__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "RcParams.__getitem__": {
            "name": "__getitem__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RcParams.update": {
            "name": "update",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RcParams.keys": {
            "name": "keys",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RcParams.values": {
            "name": "values",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RcParams.find_all": {
            "name": "find_all",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "rc_context.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rc": [
                    "Optional[Any]"
                ],
                "fname": [
                    "Optional[Any]"
                ]
            }
        },
        "rc_context.__enter__": {
            "name": "__enter__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "rc_context.__exit__": {
            "name": "__exit__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "tb": []
            }
        }
    },
    "DeepLearningSample-master/out/numpy/__init__.py": {
        "pkgload": {
            "name": "pkgload",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "array": {
            "name": "array",
            "location": 22,
            "return": [],
            "arguments": {
                "arr": [
                    "ArrayLike"
                ],
                "dtype": [
                    "Any"
                ]
            }
        },
        "sum": {
            "name": "sum",
            "location": 24,
            "return": [
                "float"
            ],
            "arguments": {
                "arr": [
                    "ndarray"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 26,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "x1": [
                    "ArrayLike"
                ],
                "x2": [
                    "ArrayLike"
                ]
            }
        },
        "subtract": {
            "name": "subtract",
            "location": 30,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "x1": [
                    "ArrayLike"
                ],
                "x2": [
                    "ArrayLike"
                ]
            }
        },
        "divide": {
            "name": "divide",
            "location": 32,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "x1": [
                    "ArrayLike"
                ],
                "x2": [
                    "ArrayLike"
                ]
            }
        },
        "multiply": {
            "name": "multiply",
            "location": 34,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "x1": [
                    "ArrayLike"
                ],
                "x2": [
                    "ArrayLike"
                ]
            }
        },
        "arange": {
            "name": "arange",
            "location": 36,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "start": [
                    "float"
                ],
                "stop": [
                    "float"
                ],
                "step": [
                    "float"
                ]
            }
        },
        "exp": {
            "name": "exp",
            "location": 38,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "arr": [
                    "ArrayLike"
                ]
            }
        },
        "ndarray.flatten": {
            "name": "flatten",
            "location": 10,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "self": [],
                "order": [
                    "str"
                ]
            }
        }
    }
}
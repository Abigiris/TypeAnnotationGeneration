{
    "FeedMaker-master/backend/app.py": {
        "catch_all": {
            "name": "catch_all",
            "location": 26,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_exec_result": {
            "name": "get_exec_result",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "get_problems": {
            "name": "get_problems",
            "location": 46,
            "return": [],
            "arguments": {
                "data_type": []
            }
        },
        "search": {
            "name": "search",
            "location": 77,
            "return": [],
            "arguments": {
                "keyword": []
            }
        },
        "search_site": {
            "name": "search_site",
            "location": 91,
            "return": [],
            "arguments": {
                "keyword": []
            }
        },
        "get_groups": {
            "name": "get_groups",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "remove_group": {
            "name": "remove_group",
            "location": 119,
            "return": [],
            "arguments": {
                "group_name": []
            }
        },
        "get_feeds_by_group": {
            "name": "get_feeds_by_group",
            "location": 133,
            "return": [],
            "arguments": {
                "group_name": []
            }
        },
        "site_config": {
            "name": "site_config",
            "location": 148,
            "return": [],
            "arguments": {
                "group_name": []
            }
        },
        "get_feed_info": {
            "name": "get_feed_info",
            "location": 173,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "run": {
            "name": "run",
            "location": 204,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "toggle_group": {
            "name": "toggle_group",
            "location": 217,
            "return": [],
            "arguments": {
                "group_name": []
            }
        },
        "toggle_feed": {
            "name": "toggle_feed",
            "location": 230,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "remove_list": {
            "name": "remove_list",
            "location": 243,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "remove_html": {
            "name": "remove_html",
            "location": 252,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "remove_html_file": {
            "name": "remove_html_file",
            "location": 261,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": [],
                "html_file_name": []
            }
        },
        "get_alias": {
            "name": "get_alias",
            "location": 270,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": []
            }
        },
        "rename_alias": {
            "name": "rename_alias",
            "location": 291,
            "return": [],
            "arguments": {
                "group_name": [],
                "feed_name": [],
                "new_alias": []
            }
        },
        "remove_public_feed": {
            "name": "remove_public_feed",
            "location": 303,
            "return": [],
            "arguments": {
                "feed_name": []
            }
        }
    },
    "FeedMaker-master/backend/feed_manager.py": {
        "FeedManager.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ]
            }
        },
        "FeedManager._git_add": {
            "name": "_git_add",
            "location": 34,
            "return": [
                "Tuple[(str, Optional[str])]"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedManager._git_rm": {
            "name": "_git_rm",
            "location": 41,
            "return": [
                "Tuple[(str, Optional[str])]"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedManager._git_mv": {
            "name": "_git_mv",
            "location": 48,
            "return": [
                "Tuple[(str, Optional[str])]"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ],
                "new_feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedManager._read_config_file": {
            "name": "_read_config_file",
            "location": 57,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedManager._get_title_from_configuration": {
            "name": "_get_title_from_configuration",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "configuration": [
                    "Dict[(str, Any)]"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager._scan_feeds_by_group": {
            "name": "_scan_feeds_by_group",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ]
            }
        },
        "FeedManager.scan_all_feeds": {
            "name": "scan_all_feeds",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_exec_result": {
            "name": "get_exec_result",
            "location": 106,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_problems_status_info": {
            "name": "get_problems_status_info",
            "location": 115,
            "return": [
                "Tuple[(Dict[(str, Dict[(str, Any)])], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_problems_progress_info": {
            "name": "get_problems_progress_info",
            "location": 119,
            "return": [
                "Tuple[(Dict[(str, Dict[(str, Any)])], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_problems_public_feed_info": {
            "name": "get_problems_public_feed_info",
            "location": 123,
            "return": [
                "Tuple[(List[Dict[(str, Any)]], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_problems_html_info": {
            "name": "get_problems_html_info",
            "location": 127,
            "return": [
                "Tuple[(Dict[(str, Any)], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager.get_problems_element_info": {
            "name": "get_problems_element_info",
            "location": 136,
            "return": [
                "Tuple[(Dict[(str, Any)], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager._determine_keyword_in_config_item": {
            "name": "_determine_keyword_in_config_item",
            "location": 144,
            "return": [],
            "arguments": {
                "keyword": [
                    "str"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "FeedManager.search": {
            "name": "search",
            "location": 151,
            "return": [
                "Tuple[(List[Dict[(str, Any)]], str)]"
            ],
            "arguments": {
                "self": [],
                "keywords": [
                    "str"
                ]
            }
        },
        "FeedManager.search_site": {
            "name": "search_site",
            "location": 174,
            "return": [
                "Tuple[(List[Dict[(str, Any)]], str)]"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "FeedManager._compare_names": {
            "name": "_compare_names",
            "location": 182,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "FeedManager.get_groups": {
            "name": "get_groups",
            "location": 193,
            "return": [
                "Tuple[(List[Dict[(str, Any)]], str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedManager._compare_title": {
            "name": "_compare_title",
            "location": 203,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "FeedManager.get_site_config": {
            "name": "get_site_config",
            "location": 218,
            "return": [
                "Tuple[(Dict[(str, str)], str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ]
            }
        },
        "FeedManager.save_site_config": {
            "name": "save_site_config",
            "location": 227,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "post_data": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "FeedManager.get_feeds_by_group": {
            "name": "get_feeds_by_group",
            "location": 237,
            "return": [
                "Tuple[(List[Dict[(str, str)]], str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ]
            }
        },
        "FeedManager.get_feed_info_by_name": {
            "name": "get_feed_info_by_name",
            "location": 244,
            "return": [
                "Tuple[(Dict[(str, Any)], str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.save_config_file": {
            "name": "save_config_file",
            "location": 271,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ],
                "post_data": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "FeedManager.run": {
            "name": "run",
            "location": 292,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ],
                "alias": [
                    "str"
                ]
            }
        },
        "FeedManager._remove_public_img_pdf_feed_files": {
            "name": "_remove_public_img_pdf_feed_files",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_list": {
            "name": "remove_list",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_html": {
            "name": "remove_html",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_html_file": {
            "name": "remove_html_file",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ],
                "html_file_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_public_feed": {
            "name": "remove_public_feed",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_feed": {
            "name": "remove_feed",
            "location": 373,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_group": {
            "name": "remove_group",
            "location": 406,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ]
            }
        },
        "FeedManager.toggle_feed": {
            "name": "toggle_feed",
            "location": 435,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.toggle_group": {
            "name": "toggle_group",
            "location": 463,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ]
            }
        },
        "FeedManager.get_alias": {
            "name": "get_alias",
            "location": 493,
            "return": [],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.remove_alias": {
            "name": "remove_alias",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "FeedManager.rename_alias": {
            "name": "rename_alias",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ],
                "new_alias": [
                    "str"
                ]
            }
        }
    },
    "FeedMaker-master/bin/crawler.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 245,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "RequestsClient.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dir_path": [
                    "Path"
                ],
                "render_js": [
                    "bool"
                ],
                "method": [
                    "Method"
                ],
                "headers": [
                    "Dict[(str, Any)]"
                ],
                "timeout": [
                    "int"
                ],
                "encoding": [
                    "str"
                ],
                "verify_ssl": [
                    "bool"
                ]
            }
        },
        "RequestsClient.__del__": {
            "name": "__del__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsClient.write_cookies_to_file": {
            "name": "write_cookies_to_file",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cookies": []
            }
        },
        "RequestsClient.read_cookies_from_file": {
            "name": "read_cookies_from_file",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RequestsClient.make_request": {
            "name": "make_request",
            "location": 66,
            "return": [
                "Tuple[(str, Dict[(str, Any)], Optional[int])]"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "data": [],
                "download_file": [
                    "Path"
                ],
                "allow_redirects": []
            }
        },
        "Crawler.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dir_path": [
                    "Path"
                ],
                "render_js": [
                    "bool"
                ],
                "method": [
                    "Method"
                ],
                "headers": [
                    "Dict[(str, Any)]"
                ],
                "timeout": [
                    "int"
                ],
                "num_retries": [
                    "int"
                ],
                "encoding": [
                    "str"
                ],
                "verify_ssl": [
                    "bool"
                ],
                "copy_images_from_canvas": [
                    "bool"
                ],
                "simulate_scrolling": [
                    "bool"
                ],
                "disable_headless": [
                    "bool"
                ],
                "blob_to_dataurl": [
                    "bool"
                ]
            }
        },
        "Crawler.__del__": {
            "name": "__del__",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Crawler.get_option_str": {
            "name": "get_option_str",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "options": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Crawler.run": {
            "name": "run",
            "location": 198,
            "return": [
                "Tuple[(str, bool, Optional[Dict[(str, Any)]])]"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "data": [],
                "download_file": [
                    "Path"
                ],
                "allow_redirects": [
                    "bool"
                ]
            }
        }
    },
    "FeedMaker-master/bin/extractor.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 265,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Extractor.extract_content": {
            "name": "extract_content",
            "location": 22,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "extraction_conf": [
                    "Dict[(str, Any)]"
                ],
                "item_url": [
                    "str"
                ],
                "input_data": [
                    "str"
                ]
            }
        },
        "Extractor._check_element_class": {
            "name": "_check_element_class",
            "location": 89,
            "return": [
                "bool"
            ],
            "arguments": {
                "element": [],
                "element_name": [],
                "class_name": []
            }
        },
        "Extractor._traverse_element": {
            "name": "_traverse_element",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "element": [],
                "url": [
                    "str"
                ],
                "encoding": [
                    "str"
                ]
            }
        }
    },
    "FeedMaker-master/bin/feed_maker.py": {
        "FeedMaker.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ],
                "do_collect_by_force": [
                    "bool"
                ],
                "do_collect_only": [
                    "bool"
                ],
                "rss_file_path": [
                    "Path"
                ],
                "window_size": [
                    "int"
                ]
            }
        },
        "FeedMaker.__del__": {
            "name": "__del__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeedMaker.get_image_tag_str": {
            "name": "get_image_tag_str",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "web_service_url": [
                    "str"
                ],
                "rss_file_name": [
                    "str"
                ],
                "item_url": [
                    "str"
                ]
            }
        },
        "FeedMaker.get_size_of_template_with_image_tag": {
            "name": "get_size_of_template_with_image_tag",
            "location": 68,
            "return": [
                "int"
            ],
            "arguments": {
                "web_service_url": [
                    "str"
                ],
                "rss_file_name": [
                    "str"
                ]
            }
        },
        "FeedMaker._is_image_tag_in_html_file": {
            "name": "_is_image_tag_in_html_file",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "html_file_path": [
                    "Path"
                ],
                "image_tag_str": [
                    "str"
                ]
            }
        },
        "FeedMaker._append_image_tag_to_html_file": {
            "name": "_append_image_tag_to_html_file",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "html_file_path": [
                    "Path"
                ],
                "image_tag_str": [
                    "str"
                ]
            }
        },
        "FeedMaker._get_size_of_template": {
            "name": "_get_size_of_template",
            "location": 90,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "FeedMaker._get_html_file_path": {
            "name": "_get_html_file_path",
            "location": 94,
            "return": [
                "Path"
            ],
            "arguments": {
                "html_dir": [
                    "Path"
                ],
                "link": [
                    "str"
                ]
            }
        },
        "FeedMaker._get_list_file_path": {
            "name": "_get_list_file_path",
            "location": 99,
            "return": [
                "Path"
            ],
            "arguments": {
                "list_dir": [
                    "Path"
                ],
                "date_str": [
                    "str"
                ]
            }
        },
        "FeedMaker._cmp_int_or_str": {
            "name": "_cmp_int_or_str",
            "location": 103,
            "return": [
                "int"
            ],
            "arguments": {
                "a": [
                    "Dict[(str, str)]"
                ],
                "b": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "FeedMaker._cmp_to_key": {
            "name": "_cmp_to_key",
            "location": 119,
            "return": [
                "Callable[([Dict[(str, Any)]], Any)]"
            ],
            "arguments": {
                "mycmp": []
            }
        },
        "FeedMaker._read_old_feed_list_from_file": {
            "name": "_read_old_feed_list_from_file",
            "location": 145,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedMaker._make_html_file": {
            "name": "_make_html_file",
            "location": 188,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item_url": [
                    "str"
                ],
                "title": [
                    "str"
                ]
            }
        },
        "FeedMaker._get_idx_data": {
            "name": "_get_idx_data",
            "location": 293,
            "return": [
                "Tuple[(int, int, Optional[datetime])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedMaker._write_idx_data": {
            "name": "_write_idx_data",
            "location": 316,
            "return": [
                "Tuple[(int, Optional[str])]"
            ],
            "arguments": {
                "self": [],
                "start_idx": [
                    "int"
                ],
                "mtime": [
                    "datetime"
                ],
                "do_write_initially": [
                    "bool"
                ]
            }
        },
        "FeedMaker._fetch_old_feed_list_window": {
            "name": "_fetch_old_feed_list_window",
            "location": 334,
            "return": [
                "Optional[List[Tuple[(str, str)]]]"
            ],
            "arguments": {
                "self": [],
                "old_feed_list": [
                    "List[Tuple[(str, str)]]"
                ]
            }
        },
        "FeedMaker._get_recent_feed_list": {
            "name": "_get_recent_feed_list",
            "location": 392,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedMaker._diff_feeds_and_make_htmls": {
            "name": "_diff_feeds_and_make_htmls",
            "location": 400,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "recent_feed_list": [
                    "List[Tuple[(str, str)]]"
                ],
                "old_feed_list": [
                    "List[Tuple[(str, str)]]"
                ]
            }
        },
        "FeedMaker._generate_rss_feed": {
            "name": "_generate_rss_feed",
            "location": 421,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "merged_feed_list": [
                    "List[Tuple[(str, str)]]"
                ]
            }
        },
        "FeedMaker.make": {
            "name": "make",
            "location": 499,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedMaker._cmp_to_key.K.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FeedMaker._cmp_to_key.K.__lt__": {
            "name": "__lt__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FeedMaker._cmp_to_key.K.__gt__": {
            "name": "__gt__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FeedMaker._cmp_to_key.K.__eq__": {
            "name": "__eq__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FeedMaker._cmp_to_key.K.__le__": {
            "name": "__le__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FeedMaker._cmp_to_key.K.__ge__": {
            "name": "__ge__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FeedMaker._cmp_to_key.K.__ne__": {
            "name": "__ne__",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "FeedMaker-master/bin/feed_maker_util.py": {
        "Notification.send_error_msg": {
            "name": "send_error_msg",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "msg": [
                    "str"
                ],
                "subject": []
            }
        },
        "Notification._send_error_msg_to_line": {
            "name": "_send_error_msg_to_line",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "msg": [
                    "str"
                ],
                "receiver": [
                    "str"
                ],
                "access_token": [
                    "str"
                ]
            }
        },
        "Notification._send_error_msg_to_mail": {
            "name": "_send_error_msg_to_mail",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "msg": [
                    "str"
                ],
                "subject": [
                    "str"
                ],
                "receiver": [
                    "str"
                ],
                "sender": [
                    "str"
                ],
                "smtp_host": [
                    "str"
                ]
            }
        },
        "Data.remove_duplicates": {
            "name": "remove_duplicates",
            "location": 95,
            "return": [
                "List[Any]"
            ],
            "arguments": {
                "a_list": [
                    "List[Any]"
                ]
            }
        },
        "Data._get_sorted_lines_from_rss_file": {
            "name": "_get_sorted_lines_from_rss_file",
            "location": 105,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "file": [
                    "Path"
                ]
            }
        },
        "Data.compare_two_rss_files": {
            "name": "compare_two_rss_files",
            "location": 120,
            "return": [
                "bool"
            ],
            "arguments": {
                "file1": [
                    "Path"
                ],
                "file2": [
                    "Path"
                ]
            }
        },
        "Process._replace_script_path": {
            "name": "_replace_script_path",
            "location": 129,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "script": [
                    "str"
                ],
                "dir_path": [
                    "Path"
                ]
            }
        },
        "Process.exec_cmd": {
            "name": "exec_cmd",
            "location": 151,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "cmd": [
                    "str"
                ],
                "dir_path": [
                    "Path"
                ],
                "input_data": []
            }
        },
        "Process._find_process_group": {
            "name": "_find_process_group",
            "location": 173,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "parent_proc_expr": [
                    "str"
                ]
            }
        },
        "Process.kill_process_group": {
            "name": "kill_process_group",
            "location": 205,
            "return": [
                "int"
            ],
            "arguments": {
                "proc_expr": [
                    "str"
                ]
            }
        },
        "Datetime.get_current_time": {
            "name": "get_current_time",
            "location": 218,
            "return": [
                "datetime"
            ],
            "arguments": {}
        },
        "Datetime._get_time_str": {
            "name": "_get_time_str",
            "location": 222,
            "return": [
                "str"
            ],
            "arguments": {
                "dt": [
                    "datetime"
                ]
            }
        },
        "Datetime.get_current_time_str": {
            "name": "get_current_time_str",
            "location": 226,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Datetime.get_rss_date_str": {
            "name": "get_rss_date_str",
            "location": 230,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Datetime.get_short_date_str": {
            "name": "get_short_date_str",
            "location": 235,
            "return": [
                "str"
            ],
            "arguments": {
                "dt": []
            }
        },
        "HTMLExtractor.get_first_token_from_path": {
            "name": "get_first_token_from_path",
            "location": 243,
            "return": [
                "Tuple[(Optional[str], Optional[str], Optional[int], Optional[str], bool)]"
            ],
            "arguments": {
                "path_str": [
                    "Optional[str]"
                ]
            }
        },
        "HTMLExtractor.get_node_with_path": {
            "name": "get_node_with_path",
            "location": 283,
            "return": [
                "Optional[List[Any]]"
            ],
            "arguments": {
                "node": [],
                "path_str": [
                    "Optional[str]"
                ]
            }
        },
        "IO.read_stdin": {
            "name": "read_stdin",
            "location": 339,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "IO.read_stdin_as_line_list": {
            "name": "read_stdin_as_line_list",
            "location": 344,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "Config.__del__": {
            "name": "__del__",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config._get_bool_config_value": {
            "name": "_get_bool_config_value",
            "location": 379,
            "return": [
                "bool"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "bool"
                ]
            }
        },
        "Config._get_str_config_value": {
            "name": "_get_str_config_value",
            "location": 386,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "str"
                ]
            }
        },
        "Config._get_int_config_value": {
            "name": "_get_int_config_value",
            "location": 393,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "int"
                ]
            }
        },
        "Config._get_float_config_value": {
            "name": "_get_float_config_value",
            "location": 403,
            "return": [
                "Optional[float]"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "float"
                ]
            }
        },
        "Config._traverse_config_node": {
            "name": "_traverse_config_node",
            "location": 413,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ]
            }
        },
        "Config._get_config_value_list": {
            "name": "_get_config_value_list",
            "location": 429,
            "return": [
                "Optional[List[Any]]"
            ],
            "arguments": {
                "config_node": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "List[Any]"
                ]
            }
        },
        "Config.get_global_config": {
            "name": "get_global_config",
            "location": 436,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "conf_file_path": []
            }
        },
        "Config.get_collection_configs": {
            "name": "get_collection_configs",
            "location": 447,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.get_extraction_configs": {
            "name": "get_extraction_configs",
            "location": 482,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.get_rss_configs": {
            "name": "get_rss_configs",
            "location": 517,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "URL.get_url_scheme": {
            "name": "get_url_scheme",
            "location": 538,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "URL.get_url_domain": {
            "name": "get_url_domain",
            "location": 547,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "URL.get_url_path": {
            "name": "get_url_path",
            "location": 560,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "URL.get_url_prefix": {
            "name": "get_url_prefix",
            "location": 571,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "URL.get_url_except_query": {
            "name": "get_url_except_query",
            "location": 582,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "URL.concatenate_url": {
            "name": "concatenate_url",
            "location": 592,
            "return": [
                "str"
            ],
            "arguments": {
                "full_url": [
                    "str"
                ],
                "url2": [
                    "str"
                ]
            }
        },
        "URL.get_short_md5_name": {
            "name": "get_short_md5_name",
            "location": 596,
            "return": [
                "str"
            ],
            "arguments": {
                "content": [
                    "str"
                ]
            }
        },
        "URL.encode": {
            "name": "encode",
            "location": 600,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "Cache._get_cache_info_common_postfix": {
            "name": "_get_cache_info_common_postfix",
            "location": 612,
            "return": [
                "str"
            ],
            "arguments": {
                "img_url": [
                    "str"
                ],
                "postfix": [
                    "Union[(str, int)]"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "Cache.get_cache_url": {
            "name": "get_cache_url",
            "location": 627,
            "return": [
                "str"
            ],
            "arguments": {
                "url_prefix": [
                    "str"
                ],
                "img_url": [
                    "str"
                ],
                "postfix": [
                    "Union[(str, int)]"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "Cache.get_cache_file_path": {
            "name": "get_cache_file_path",
            "location": 633,
            "return": [
                "Path"
            ],
            "arguments": {
                "path_prefix": [
                    "Path"
                ],
                "img_url": [
                    "str"
                ],
                "postfix": [
                    "Union[(str, int)]"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "Htaccess.get_alias": {
            "name": "get_alias",
            "location": 649,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        },
        "Htaccess.set_alias": {
            "name": "set_alias",
            "location": 676,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ],
                "alias": [
                    "str"
                ]
            }
        },
        "Htaccess.remove_alias": {
            "name": "remove_alias",
            "location": 723,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "group_name": [
                    "str"
                ],
                "feed_name": [
                    "str"
                ]
            }
        }
    },
    "FeedMaker-master/bin/headless_browser.py": {
        "HeadlessBrowser.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dir_path": [
                    "Path"
                ],
                "headers": [
                    "Dict[(str, Any)]"
                ],
                "copy_images_from_canvas": [
                    "bool"
                ],
                "simulate_scrolling": [
                    "bool"
                ],
                "disable_headless": [
                    "bool"
                ],
                "blob_to_dataurl": [
                    "bool"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "HeadlessBrowser.__del__": {
            "name": "__del__",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeadlessBrowser._write_cookies_to_file": {
            "name": "_write_cookies_to_file",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": []
            }
        },
        "HeadlessBrowser._read_cookies_from_file": {
            "name": "_read_cookies_from_file",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": []
            }
        },
        "HeadlessBrowser.make_request": {
            "name": "make_request",
            "location": 155,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "download_file": []
            }
        }
    },
    "FeedMaker-master/bin/new_list_collector.py": {
        "NewListCollector.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ],
                "collection_conf": [
                    "Dict[(str, Any)]"
                ],
                "new_list_file_path": [
                    "Path"
                ]
            }
        },
        "NewListCollector.__del__": {
            "name": "__del__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollector.split_result_into_items": {
            "name": "split_result_into_items",
            "location": 31,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "result": []
            }
        },
        "NewListCollector._compose_url_list": {
            "name": "_compose_url_list",
            "location": 48,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewListCollector._save_new_list_to_file": {
            "name": "_save_new_list_to_file",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_list": [
                    "List[Tuple[(str, str)]]"
                ]
            }
        },
        "NewListCollector.collect": {
            "name": "collect",
            "location": 115,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/problem_checker.py": {
        "ProblemChecker.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.__del__": {
            "name": "__del__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_htaccess_file": {
            "name": "load_htaccess_file",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_all_config_rss_files": {
            "name": "load_all_config_rss_files",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_all_public_feed_files": {
            "name": "load_all_public_feed_files",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.get_html_file_name": {
            "name": "get_html_file_name",
            "location": 195,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "Path"
                ]
            }
        },
        "ProblemChecker.add_html_files_in_path_to_info": {
            "name": "add_html_files_in_path_to_info",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "ProblemChecker.remove_html_file_in_path_from_info": {
            "name": "remove_html_file_in_path_from_info",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dir_type_name": [
                    "str"
                ],
                "dir_path": [
                    "Path"
                ]
            }
        },
        "ProblemChecker.load_all_html_files": {
            "name": "load_all_html_files",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_all_progress_info_from_files": {
            "name": "load_all_progress_info_from_files",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_all_httpd_access_files": {
            "name": "load_all_httpd_access_files",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.convert_datetime_to_str": {
            "name": "convert_datetime_to_str",
            "location": 473,
            "return": [
                "str"
            ],
            "arguments": {
                "d": [
                    "Union[(str, datetime)]"
                ]
            }
        },
        "ProblemChecker.get_status_info_with_default": {
            "name": "get_status_info_with_default",
            "location": 482,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "alias": [
                    "str"
                ]
            }
        },
        "ProblemChecker._is_in_dormant_status": {
            "name": "_is_in_dormant_status",
            "location": 489,
            "return": [
                "bool"
            ],
            "arguments": {
                "status_info": []
            }
        },
        "ProblemChecker._is_in_requested_ago_but_deleted_status": {
            "name": "_is_in_requested_ago_but_deleted_status",
            "location": 496,
            "return": [
                "bool"
            ],
            "arguments": {
                "status_info": [],
                "num_days": []
            }
        },
        "ProblemChecker._is_in_accessed_or_viewed_recently_status": {
            "name": "_is_in_accessed_or_viewed_recently_status",
            "location": 507,
            "return": [
                "bool"
            ],
            "arguments": {
                "status_info": [],
                "num_days": []
            }
        },
        "ProblemChecker.merge_all_feeds_status": {
            "name": "merge_all_feeds_status",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProblemChecker.load_all": {
            "name": "load_all",
            "location": 613,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/run.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "determine_options": {
            "name": "determine_options",
            "location": 227,
            "return": [
                "Tuple[(Dict[(str, Any)], List[str])]"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 265,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "FeedMakerRunner.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "html_archiving_period": [
                    "int"
                ],
                "list_archiving_period": [
                    "int"
                ]
            }
        },
        "FeedMakerRunner.__del__": {
            "name": "__del__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeedMakerRunner._get_img_set_in_img_dir": {
            "name": "_get_img_set_in_img_dir",
            "location": 37,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "feed_img_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner._remove_image_files_with_zero_size": {
            "name": "_remove_image_files_with_zero_size",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_img_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner._remove_temporary_files": {
            "name": "_remove_temporary_files",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner._remove_all_files": {
            "name": "_remove_all_files",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "rss_file_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner._remove_old_html_files": {
            "name": "_remove_old_html_files",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner._remove_html_files_without_cached_image_files": {
            "name": "_remove_html_files_without_cached_image_files",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ],
                "feed_img_dir_path": [
                    "Path"
                ]
            }
        },
        "FeedMakerRunner.make_single_feed": {
            "name": "make_single_feed",
            "location": 124,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "feed_dir_path": [
                    "Path"
                ],
                "options": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "FeedMakerRunner.make_all_feeds": {
            "name": "make_all_feeds",
            "location": 162,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "FeedMaker-master/bin/test_crawler1.py": {
        "CrawlerTest.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_print_usage": {
            "name": "test_print_usage",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_get_option_str": {
            "name": "test_get_option_str",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler": {
            "name": "test_crawler",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_without_options": {
            "name": "test_crawler_without_options",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_num_retries": {
            "name": "test_crawler_with_num_retries",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_render_js": {
            "name": "test_crawler_with_render_js",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_method": {
            "name": "test_crawler_with_method",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_headers": {
            "name": "test_crawler_with_headers",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_timeout": {
            "name": "test_crawler_with_timeout",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_encoding": {
            "name": "test_crawler_with_encoding",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_crawler_with_verify_ssl": {
            "name": "test_crawler_with_verify_ssl",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.tearDown": {
            "name": "tearDown",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_crawler2.py": {
        "CrawlerTest.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_runHttp": {
            "name": "test_runHttp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_runHttps": {
            "name": "test_runHttps",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_imagesInCanvas": {
            "name": "test_imagesInCanvas",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.tearDown": {
            "name": "tearDown",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_crawler3.py": {
        "CrawlerTest.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.test_runHeadlessBrowser": {
            "name": "test_runHeadlessBrowser",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerTest.tearDown": {
            "name": "tearDown",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_extractor.py": {
        "ExtractTest.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtractTest.tearDown": {
            "name": "tearDown",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtractTest.wrap_header": {
            "name": "wrap_header",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "ExtractTest.test_extract_content": {
            "name": "test_extract_content",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtractTest.test_traverse_element": {
            "name": "test_traverse_element",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtractTest.test_check_element_class": {
            "name": "test_check_element_class",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_feed_maker.py": {
        "assert_in_mock_logger": {
            "name": "assert_in_mock_logger",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "param": [
                    "Any"
                ],
                "mock_logger": [],
                "do_substr_match": [
                    "bool"
                ]
            }
        },
        "TestFeedMaker.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.tearDown": {
            "name": "tearDown",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_image_tag_str": {
            "name": "test_get_image_tag_str",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_size_of_template_with_image_tag": {
            "name": "test_get_size_of_template_with_image_tag",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_is_image_tag_in_html_file": {
            "name": "test_is_image_tag_in_html_file",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_append_image_tag_to_html_file": {
            "name": "test_append_image_tag_to_html_file",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_size_of_template": {
            "name": "test_get_size_of_template",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_html_file_path": {
            "name": "test_get_html_file_path",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_list_file_path": {
            "name": "test_get_list_file_path",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_cmp_int_or_str": {
            "name": "test_cmp_int_or_str",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_cmp_to_key": {
            "name": "test_cmp_to_key",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_make_html_file": {
            "name": "test_make_html_file",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_get_idx_data": {
            "name": "test_get_idx_data",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_write_idx_data": {
            "name": "test_write_idx_data",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_1_read_old_feed_list_from_file": {
            "name": "test_1_read_old_feed_list_from_file",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_2_fetch_old_feed_list_window": {
            "name": "test_2_fetch_old_feed_list_window",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_3_get_recent_feed_list": {
            "name": "test_3_get_recent_feed_list",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_4_diff_feeds_and_make_htmls": {
            "name": "test_4_diff_feeds_and_make_htmls",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_5_generate_rss_feed": {
            "name": "test_5_generate_rss_feed",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMaker.test_6_make": {
            "name": "test_6_make",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_feed_maker_util.py": {
        "count_substr": {
            "name": "count_substr",
            "location": 811,
            "return": [
                "int"
            ],
            "arguments": {
                "member": [
                    "str"
                ],
                "container": [
                    "List[str]"
                ]
            }
        },
        "NotificationTest.setUp": {
            "name": "setUp",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationTest.test_send_error_msg": {
            "name": "test_send_error_msg",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationTest.test_send_error_msg_to_line": {
            "name": "test_send_error_msg_to_line",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationTest.test_send_error_msg_to_mail": {
            "name": "test_send_error_msg_to_mail",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataTest.test_remove_duplicates": {
            "name": "test_remove_duplicates",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataTest.test_get_sorted_lines_from_rss_file": {
            "name": "test_get_sorted_lines_from_rss_file",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataTest.test_compare_two_rss_files": {
            "name": "test_compare_two_rss_files",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessTest.test_replace_script_path": {
            "name": "test_replace_script_path",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessTest.test_exec_cmd": {
            "name": "test_exec_cmd",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessTest.test_find_process_group_and_kill_process_group": {
            "name": "test_find_process_group_and_kill_process_group",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatetimeTest.test_get_current_time": {
            "name": "test_get_current_time",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatetimeTest.test_get_time_str": {
            "name": "test_get_time_str",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatetimeTest.test_get_current_time_str": {
            "name": "test_get_current_time_str",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatetimeTest.test_get_rss_date_str": {
            "name": "test_get_rss_date_str",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatetimeTest.test_get_short_date_str": {
            "name": "test_get_short_date_str",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLExtractorTest.test_get_first_token_from_path": {
            "name": "test_get_first_token_from_path",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLExtractorTest.test_get_node_with_path": {
            "name": "test_get_node_with_path",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOTest.test_read_stdin": {
            "name": "test_read_stdin",
            "location": 381,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOTest.test_read_stdin_as_line_list": {
            "name": "test_read_stdin_as_line_list",
            "location": 387,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.setUp": {
            "name": "setUp",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.tearDown": {
            "name": "tearDown",
            "location": 401,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_init": {
            "name": "test_init",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_bool_config_value": {
            "name": "test_get_bool_config_value",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_str_config_value": {
            "name": "test_get_str_config_value",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_int_config_value": {
            "name": "test_get_int_config_value",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_float_config_value": {
            "name": "test_get_float_config_value",
            "location": 474,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_traverse_config_node": {
            "name": "test_traverse_config_node",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_config_value_list": {
            "name": "test_get_config_value_list",
            "location": 505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_global_config": {
            "name": "test_get_global_config",
            "location": 518,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_collection_configs": {
            "name": "test_get_collection_configs",
            "location": 541,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_extraction_configs": {
            "name": "test_get_extraction_configs",
            "location": 567,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigTest.test_get_rss_configs": {
            "name": "test_get_rss_configs",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_url_scheme": {
            "name": "test_get_url_scheme",
            "location": 609,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_url_domain": {
            "name": "test_get_url_domain",
            "location": 618,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_url_path": {
            "name": "test_get_url_path",
            "location": 635,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_url_prefix": {
            "name": "test_get_url_prefix",
            "location": 648,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_url_except_query": {
            "name": "test_get_url_except_query",
            "location": 669,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_concatenate_url": {
            "name": "test_concatenate_url",
            "location": 698,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_get_short_md5_name": {
            "name": "test_get_short_md5_name",
            "location": 742,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLTest.test_encode": {
            "name": "test_encode",
            "location": 745,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CacheTest.setUp": {
            "name": "setUp",
            "location": 751,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CacheTest.test__get_cache_info_common_postfix": {
            "name": "test__get_cache_info_common_postfix",
            "location": 755,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CacheTest.test_get_cache_url": {
            "name": "test_get_cache_url",
            "location": 773,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CacheTest.test_get_cache_file_path": {
            "name": "test_get_cache_file_path",
            "location": 792,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHtaccess.test_1_set_alias": {
            "name": "test_1_set_alias",
            "location": 820,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHtaccess.test_2_get_alias": {
            "name": "test_2_get_alias",
            "location": 833,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHtaccess.test_3_remove_alias": {
            "name": "test_3_remove_alias",
            "location": 844,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_headless_browser.py": {
        "TestHeadlessBrowser.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.tearDown": {
            "name": "tearDown",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser": {
            "name": "test_headless_browser",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_make_request": {
            "name": "test_make_request",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_copy_images_from_canvas": {
            "name": "test_headless_browser_with_copy_images_from_canvas",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_simulate_scrolling": {
            "name": "test_headless_browser_with_simulate_scrolling",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_blob_to_dataurl": {
            "name": "test_headless_browser_with_blob_to_dataurl",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_headers": {
            "name": "test_headless_browser_with_headers",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_disable_headless": {
            "name": "test_headless_browser_with_disable_headless",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeadlessBrowser.test_headless_browser_with_timeout": {
            "name": "test_headless_browser_with_timeout",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_new_list_collector.py": {
        "NewListCollectorTest.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollectorTest.tearDown": {
            "name": "tearDown",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollectorTest.test_split_result_into_items": {
            "name": "test_split_result_into_items",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollectorTest.test_compose_url_list": {
            "name": "test_compose_url_list",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollectorTest.count_tsv_file": {
            "name": "count_tsv_file",
            "location": 78,
            "return": [],
            "arguments": {
                "tsv_file_path": [
                    "Path"
                ]
            }
        },
        "NewListCollectorTest.test_save_new_list_to_file": {
            "name": "test_save_new_list_to_file",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewListCollectorTest.test_collect": {
            "name": "test_collect",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_problem_checker.py": {
        "TestProblemChecker.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_htaccess_file": {
            "name": "test_load_htaccess_file",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_all_config_rss_files": {
            "name": "test_load_all_config_rss_files",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_all_public_feed_files": {
            "name": "test_load_all_public_feed_files",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_get_html_file_name": {
            "name": "test_get_html_file_name",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_all_html_files": {
            "name": "test_load_all_html_files",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_all_progress_info_from_files": {
            "name": "test_load_all_progress_info_from_files",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load_all_httpd_access_files": {
            "name": "test_load_all_httpd_access_files",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_convert_datetime_to_str": {
            "name": "test_convert_datetime_to_str",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_get_status_info_with_default": {
            "name": "test_get_status_info_with_default",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_merge_all_feeds_status": {
            "name": "test_merge_all_feeds_status",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProblemChecker.test_load": {
            "name": "test_load",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_run.py": {
        "assert_in_mock_logger": {
            "name": "assert_in_mock_logger",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "param": [
                    "Any"
                ],
                "mock_logger": [],
                "do_submatch": [
                    "bool"
                ]
            }
        },
        "test_make_all_feeds": {
            "name": "test_make_all_feeds",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.setUp": {
            "name": "setUp",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.tearDown": {
            "name": "tearDown",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_1_get_img_set_in_img_dir": {
            "name": "test_1_get_img_set_in_img_dir",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_2_remove_image_files_with_zero_size": {
            "name": "test_2_remove_image_files_with_zero_size",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_3_remove_old_html_files": {
            "name": "test_3_remove_old_html_files",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_4_remove_html_files_without_cached_image_files": {
            "name": "test_4_remove_html_files_without_cached_image_files",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_5_remove_temporary_files": {
            "name": "test_5_remove_temporary_files",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_6_remove_all_files": {
            "name": "test_6_remove_all_files",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFeedMakerRunner.test_make_single_feed": {
            "name": "test_make_single_feed",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/test_some_scripts.py": {
        "test_script": {
            "name": "test_script",
            "location": 15,
            "return": [],
            "arguments": {
                "script": [
                    "str"
                ],
                "test_dir_path": [
                    "Path"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 29,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/bin/test_uploader.py": {
        "UploaderTest.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploaderTest.tearDown": {
            "name": "tearDown",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploaderTest.test_0_upload_first": {
            "name": "test_0_upload_first",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploaderTest.test_1_upload_unchanged": {
            "name": "test_1_upload_unchanged",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploaderTest.test_2_upload_changed": {
            "name": "test_2_upload_changed",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FeedMaker-master/bin/uploader.py": {
        "main": {
            "name": "main",
            "location": 44,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Uploader.upload": {
            "name": "upload",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "rss_file_path": [
                    "Path"
                ]
            }
        }
    },
    "FeedMaker-master/bin/test/capture_item_link_title.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/aggregate_titles.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/check_manga_site.py": {
        "read_config": {
            "name": "read_config",
            "location": 19,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "site_config_file": [
                    "str"
                ]
            }
        },
        "get_location": {
            "name": "get_location",
            "location": 42,
            "return": [],
            "arguments": {
                "headers": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 53,
            "return": [
                "Tuple[(bool, str, str)]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "get_new_url": {
            "name": "get_new_url",
            "location": 90,
            "return": [
                "Tuple[(str, int)]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "response": [
                    "str"
                ],
                "new_pattern": [
                    "str"
                ],
                "pre": [
                    "str"
                ],
                "num": [
                    "int"
                ],
                "domain_postfix": [
                    "str"
                ],
                "post": [
                    "str"
                ]
            }
        },
        "get_url_pattern": {
            "name": "get_url_pattern",
            "location": 120,
            "return": [
                "Tuple[(str, str, int, str, str)]"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "print_new_url": {
            "name": "print_new_url",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "new_url": [
                    "str"
                ],
                "new_number": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 147,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/convert_movie_to_images.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/convert_pdf_to_image.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/convert_pdf_to_text.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/download_image.py": {
        "download_image": {
            "name": "download_image",
            "location": 21,
            "return": [
                "Optional[Path]"
            ],
            "arguments": {
                "crawler": [
                    "Crawler"
                ],
                "feed_img_dir_path": [
                    "Path"
                ],
                "img_url": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/download_merge_split.py": {
        "download_image_and_read_metadata": {
            "name": "download_image_and_read_metadata",
            "location": 20,
            "return": [
                "Tuple[(List[Path], List[str], List[str])]"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "crawler": [
                    "Crawler"
                ],
                "feed_img_dir_path": [
                    "Path"
                ],
                "page_url": [
                    "str"
                ]
            }
        },
        "split_image_list": {
            "name": "split_image_list",
            "location": 60,
            "return": [
                "List[List[Path]]"
            ],
            "arguments": {
                "img_file_list": [
                    "List[Path]"
                ]
            }
        },
        "merge_image_files": {
            "name": "merge_image_files",
            "location": 74,
            "return": [
                "Path"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "img_file_list": [
                    "List[Path]"
                ],
                "feed_img_dir_path": [
                    "Path"
                ],
                "img_url": [
                    "str"
                ],
                "unit_num": [
                    "int"
                ]
            }
        },
        "crop_image_file": {
            "name": "crop_image_file",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "img_file_path": [
                    "Path"
                ]
            }
        },
        "crop_image_files": {
            "name": "crop_image_files",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "num_units": [
                    "int"
                ],
                "feed_img_dir_path": [
                    "Path"
                ],
                "img_url": [
                    "str"
                ]
            }
        },
        "remove_image_files": {
            "name": "remove_image_files",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "img_file_list": [
                    "List[str]"
                ]
            }
        },
        "split_image_file": {
            "name": "split_image_file",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {
                "feed_dir_path": [
                    "Path"
                ],
                "img_file_path": [
                    "Path"
                ],
                "bandwidth": [
                    "int"
                ],
                "diff_threshold": [
                    "float"
                ],
                "size_threshold": [
                    "float"
                ],
                "acceptable_diff_of_color_value": [
                    "int"
                ],
                "num_units": [
                    "int"
                ],
                "bgcolor_option": [
                    "str"
                ],
                "orientation_option": [
                    "str"
                ],
                "wider_scan_option": [
                    "str"
                ]
            }
        },
        "print_image_files": {
            "name": "print_image_files",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "num_units": [
                    "int"
                ],
                "feed_img_dir_path": [
                    "Path"
                ],
                "img_url_prefix": [
                    "str"
                ],
                "img_url": [
                    "str"
                ],
                "img_file_path": [
                    "Optional[Path]"
                ],
                "postfix": [
                    "Optional[str]"
                ],
                "do_flip_right_to_left": [
                    "bool"
                ]
            }
        },
        "print_cached_image_file": {
            "name": "print_cached_image_file",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "feed_img_dir_path": [
                    "Path"
                ],
                "img_url_prefix": [
                    "str"
                ],
                "img_url": [
                    "str"
                ],
                "unit_num": [
                    "Optional[int]"
                ]
            }
        },
        "print_usage": {
            "name": "print_usage",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "program_name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 200,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/post_process_only_for_images.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "FeedMaker-master/utils/remove_non_breaking_space.py": {},
    "FeedMaker-master/utils/search_manga_site.py": {
        "main": {
            "name": "main",
            "location": 471,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Site.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "Site.set_url_prefix": {
            "name": "set_url_prefix",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url_prefix": [
                    "str"
                ]
            }
        },
        "Site.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url_postfix": [
                    "str"
                ]
            }
        },
        "Site.set_payload": {
            "name": "set_payload",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "Site.get_data_from_site": {
            "name": "get_data_from_site",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "Site.extract_sub_content": {
            "name": "extract_sub_content",
            "location": 71,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ],
                "attrs": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "Site.extract_sub_content_from_site_like_agit": {
            "name": "extract_sub_content_from_site_like_agit",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ],
                "keyword": [
                    "str"
                ]
            }
        },
        "Site.search": {
            "name": "search",
            "location": 184,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "Site.search_in_site_like_agit": {
            "name": "search_in_site_like_agit",
            "location": 192,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "JmanaSite.__init__": {
            "name": "__init__",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "JmanaSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "ManatokiSite.__init__": {
            "name": "__init__",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "ManatokiSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "NewtokiSite.__init__": {
            "name": "__init__",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "NewtokiSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "CopytoonSite.__init__": {
            "name": "__init__",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "CopytoonSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "WfwfSite.__init__": {
            "name": "__init__",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "WfwfSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "WtwtSite.__init__": {
            "name": "__init__",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "WtwtSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "str"
                ]
            }
        },
        "WtwtSite.set_payload": {
            "name": "set_payload",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "MarumaruSite.__init__": {
            "name": "__init__",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "MarumaruSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "FunbeSite.__init__": {
            "name": "__init__",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "FunbeSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "TkorSite.__init__": {
            "name": "__init__",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "TkorSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "EleventoonSite.__init__": {
            "name": "__init__",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "EleventoonSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "AllallSite.__init__": {
            "name": "__init__",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "AllallSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "BlacktoonSite.__init__": {
            "name": "__init__",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "BlacktoonSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "BlacktoonSite.search": {
            "name": "search",
            "location": 350,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "OrnsonSite.__init__": {
            "name": "__init__",
            "location": 355,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "OrnsonSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "FlixSite.__init__": {
            "name": "__init__",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "FlixSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "FlixSite.set_payload": {
            "name": "set_payload",
            "location": 375,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "SektoonSite.__init__": {
            "name": "__init__",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "SektoonSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "AgitSite.__init__": {
            "name": "__init__",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "AgitSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "str"
                ]
            }
        },
        "AgitSite.search": {
            "name": "search",
            "location": 396,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "TorrentseeSite.__init__": {
            "name": "__init__",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "TorrentseeSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "TorrentdiaSite.__init__": {
            "name": "__init__",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ]
            }
        },
        "TorrentdiaSite.set_url_postfix": {
            "name": "set_url_postfix",
            "location": 415,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyword": [
                    "str"
                ]
            }
        },
        "SearchManager.__init__": {
            "name": "__init__",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchManager.worker": {
            "name": "worker",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "site": [],
                "keyword": []
            }
        },
        "SearchManager.search": {
            "name": "search",
            "location": 429,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "site_name": [
                    "str"
                ],
                "keyword": [
                    "str"
                ]
            }
        }
    },
    "FeedMaker-master/utils/update_manga_site.py": {
        "print_usage": {
            "name": "print_usage",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "update_domain": {
            "name": "update_domain",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "check_site": {
            "name": "check_site",
            "location": 105,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 116,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    }
}
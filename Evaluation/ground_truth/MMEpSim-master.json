{
    "MMEpSim-master/main.py": {
        "main": {
            "name": "main",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "main.show_progressed": {
            "name": "show_progressed",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.show_progressed.animate": {
            "name": "animate",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "MMEpSim-master/report_gen.py": {
        "generate_table": {
            "name": "generate_table",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "data": []
            }
        },
        "generate_report": {
            "name": "generate_report",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "seeds": [
                    "List[int]"
                ],
                "vacc_state": [
                    "float"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "MMEpSim-master/Simulation.py": {
        "draw_analysis": {
            "name": "draw_analysis",
            "location": 85,
            "return": [
                "List[Tuple[(str, Union[(int, str)])]]"
            ],
            "arguments": {
                "sim_steps": [
                    "List[SimulationStepData]"
                ],
                "simulation": [
                    "Simulation"
                ],
                "show": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 186,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "Simulation.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "country": [
                    "Country"
                ],
                "disease": [
                    "Disease"
                ],
                "board_config": [
                    "BoardConfig"
                ],
                "initial_infections": [
                    "Optional[Iterable[Tuple[(int, int)]]]"
                ],
                "seed": [
                    "Optional[int]"
                ]
            }
        },
        "Simulation.simulate_steps": {
            "name": "simulate_steps",
            "location": 45,
            "return": [
                "List[SimulationStepData]"
            ],
            "arguments": {
                "self": [],
                "steps": [
                    "int"
                ],
                "verbose": [],
                "save_file": [
                    "Optional[IO[bytes]]"
                ]
            }
        },
        "Simulation.simulate": {
            "name": "simulate",
            "location": 64,
            "return": [
                "List[SimulationStepData]"
            ],
            "arguments": {
                "self": [],
                "verbose": [
                    "bool"
                ],
                "save_file": [
                    "Optional[IO[bytes]]"
                ]
            }
        },
        "draw_analysis.attribute_getter": {
            "name": "attribute_getter",
            "location": 95,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "attr_name": [
                    "str"
                ]
            }
        }
    },
    "MMEpSim-master/models/Board.py": {
        "Board.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "country": [
                    "Country"
                ],
                "disease": [
                    "Disease"
                ],
                "board_config": [
                    "'BoardConfig'"
                ]
            }
        },
        "Board.stopped": {
            "name": "stopped",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.init_board": {
            "name": "init_board",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.manually_infect": {
            "name": "manually_infect",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coordinates": [
                    "Iterable[Tuple[(int, int)]]"
                ]
            }
        },
        "Board.to_np_image_array": {
            "name": "to_np_image_array",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.to_final_np_image_array": {
            "name": "to_final_np_image_array",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.infect_target": {
            "name": "infect_target",
            "location": 92,
            "return": [
                "Optional[Person]"
            ],
            "arguments": {
                "self": [],
                "i": [],
                "j": [],
                "distance": []
            }
        },
        "Board.next_step": {
            "name": "next_step",
            "location": 116,
            "return": [
                "'SimulationStepData'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.simulate_steps": {
            "name": "simulate_steps",
            "location": 240,
            "return": [
                "List['SimulationStepData']"
            ],
            "arguments": {
                "self": [],
                "steps": [
                    "int"
                ]
            }
        },
        "Board.create_board": {
            "name": "create_board",
            "location": 249,
            "return": [
                "'Board'"
            ],
            "arguments": {
                "cls": [],
                "country": [
                    "Country"
                ],
                "disease": [
                    "Disease"
                ],
                "board_config": [
                    "'BoardConfig'"
                ]
            }
        },
        "Board.calculate_dimensions": {
            "name": "calculate_dimensions",
            "location": 262,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "country": [
                    "Country"
                ],
                "cell_ratio": [
                    "int"
                ],
                "ratio": [
                    "float"
                ]
            }
        },
        "BoardConfig.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cell_ratio": [
                    "int"
                ]
            }
        },
        "BoardConfig.get_color": {
            "name": "get_color",
            "location": 295,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "person": [
                    "Person"
                ]
            }
        },
        "BoardConfig.get_final_color": {
            "name": "get_final_color",
            "location": 307,
            "return": [
                "Tuple[(float, float, float)]"
            ],
            "arguments": {
                "self": [],
                "person": [
                    "Person"
                ]
            }
        },
        "SimulationStepData.__init__": {
            "name": "__init__",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "step_num": [
                    "int"
                ],
                "infected": [
                    "int"
                ],
                "newly_infected": [
                    "int"
                ],
                "infectious": [
                    "int"
                ],
                "newly_infectious": [
                    "int"
                ],
                "symptomatic": [
                    "int"
                ],
                "newly_symptomatic": [
                    "int"
                ],
                "dead": [
                    "int"
                ],
                "newly_dead": [
                    "int"
                ],
                "touched": [
                    "int"
                ],
                "newly_touched": [
                    "int"
                ]
            }
        },
        "SimulationStepData.empty": {
            "name": "empty",
            "location": 352,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulationStepData.create_empty": {
            "name": "create_empty",
            "location": 360,
            "return": [
                "'SimulationStepData'"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "MMEpSim-master/models/Country.py": {
        "Country.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "population": [
                    "int"
                ],
                "sex_distribution": [
                    "weights_t"
                ],
                "age_distribution": [
                    "weights_t"
                ],
                "vaccine_distribution": [
                    "weights_t"
                ]
            }
        },
        "Country.create_Slovenia": {
            "name": "create_Slovenia",
            "location": 30,
            "return": [
                "'Country'"
            ],
            "arguments": {
                "cls": [],
                "vaccianted": [
                    "float"
                ]
            }
        }
    },
    "MMEpSim-master/models/Disease.py": {
        "Disease.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "disease_info": [
                    "'DiseaseInfo'"
                ]
            }
        },
        "DiseaseInfo.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "incubation_period": [
                    "int"
                ],
                "sickness_period": [
                    "int"
                ],
                "latent_period": [
                    "Optional[int]"
                ],
                "infectious_period": [
                    "Optional[int]"
                ],
                "mortality_rate": [
                    "float"
                ],
                "infection_rate": [
                    "float"
                ],
                "infectious_distance": [
                    "int"
                ],
                "vaccine_modifier": [
                    "float"
                ]
            }
        }
    },
    "MMEpSim-master/models/Person.py": {
        "main": {
            "name": "main",
            "location": 182,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "ListableEnum.items_g": {
            "name": "items_g",
            "location": 23,
            "return": [
                "List[T]"
            ],
            "arguments": {
                "cls": [
                    "Type[T]"
                ]
            }
        },
        "Person.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "age_group": [
                    "AgeGroup"
                ],
                "sex_type": [
                    "SexType"
                ],
                "infection_status": [
                    "InfectionStatus"
                ],
                "infection_duration": [
                    "int"
                ],
                "disease_status": [
                    "DiseaseStatus"
                ],
                "infectivity_status": [
                    "InfectivityStatus"
                ],
                "vaccination_status": [
                    "VaccinationStatus"
                ],
                "touched": [
                    "bool"
                ]
            }
        },
        "Person.from_country_data": {
            "name": "from_country_data",
            "location": 160,
            "return": [
                "'Person'"
            ],
            "arguments": {
                "cls": [],
                "country": [
                    "Country"
                ]
            }
        },
        "Person.__copy__": {
            "name": "__copy__",
            "location": 173,
            "return": [
                "'Person'"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MMEpSim-master/models/PrintableStructure.py": {
        "PrintableStructure._str_fields": {
            "name": "_str_fields",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintableStructure._str_pairs": {
            "name": "_str_pairs",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintableStructure.pp": {
            "name": "pp",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintableStructure.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintableStructure.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MMEpSim-master/models/random.py": {
        "random_weighted_select": {
            "name": "random_weighted_select",
            "location": 20,
            "return": [
                "T"
            ],
            "arguments": {
                "items": [
                    "items_t"
                ],
                "p": [
                    "List[float]"
                ],
                "rand_fun": [
                    "Callable[([], float)]"
                ]
            }
        },
        "random_select": {
            "name": "random_select",
            "location": 31,
            "return": [
                "T"
            ],
            "arguments": {
                "seq": [
                    "items_t"
                ],
                "p": [
                    "weights_t"
                ]
            }
        },
        "select": {
            "name": "select",
            "location": 41,
            "return": [
                "T"
            ],
            "arguments": {
                "seq": [
                    "items_t"
                ],
                "p": [
                    "weights_t"
                ],
                "rand_choice": [
                    "Callable[([items_t, weights_t], T)]"
                ]
            }
        },
        "select_multiple": {
            "name": "select_multiple",
            "location": 52,
            "return": [
                "List[T]"
            ],
            "arguments": {
                "seq": [
                    "items_t"
                ],
                "p": [
                    "weights_t"
                ],
                "n": [
                    "int"
                ],
                "rand_choice": [
                    "Callable[([items_t, weights_t], T)]"
                ]
            }
        }
    },
    "MMEpSim-master/models/__init__.py": {}
}
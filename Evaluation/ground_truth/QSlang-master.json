{
    "QSlang-master/qslang/config.py": {
        "load_config": {
            "name": "load_config",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "QSlang-master/qslang/dose.py": {
        "Dose.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "substance": [
                    "str"
                ],
                "amount": [
                    "Union[(str, Q_)]"
                ]
            }
        },
        "Dose.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dose.amount": {
            "name": "amount",
            "location": 30,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dose.amount_with_unit": {
            "name": "amount_with_unit",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dose.__repr__": {
            "name": "__repr__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dose.__add__": {
            "name": "__add__",
            "location": 45,
            "return": [
                "'Dose'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "'Dose'"
                ]
            }
        },
        "Dose.__truediv__": {
            "name": "__truediv__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "Dose.__lt__": {
            "name": "__lt__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Dose.__eq__": {
            "name": "__eq__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "QSlang-master/qslang/event.py": {
        "Event.tags": {
            "name": "tags",
            "location": 23,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.substance": {
            "name": "substance",
            "location": 27,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.dose": {
            "name": "dose",
            "location": 31,
            "return": [
                "Optional[Dose]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.amount": {
            "name": "amount",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.roa": {
            "name": "roa",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.json_dict": {
            "name": "json_dict",
            "location": 55,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.json_str": {
            "name": "json_str",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "QSlang-master/qslang/filter.py": {
        "filter_events_by_args": {
            "name": "filter_events_by_args",
            "location": 7,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ],
                "args": [
                    "List[str]"
                ]
            }
        },
        "test_filter_events_by_args": {
            "name": "test_filter_events_by_args",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "filter_events": {
            "name": "filter_events",
            "location": 32,
            "return": [],
            "arguments": {
                "events": [],
                "start": [],
                "end": [],
                "substances": []
            }
        }
    },
    "QSlang-master/qslang/igroupby.py": {
        "igroupby": {
            "name": "igroupby",
            "location": 19,
            "return": [],
            "arguments": {
                "l": [],
                "key": []
            }
        },
        "test_igroupby": {
            "name": "test_igroupby",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "invalid_used_types": {
            "name": "invalid_used_types",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "QSlang-master/qslang/load.py": {
        "_get_export_file": {
            "name": "_get_export_file",
            "location": 25,
            "return": [
                "Path"
            ],
            "arguments": {}
        },
        "_load_standardnotes_export": {
            "name": "_load_standardnotes_export",
            "location": 33,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "_load_standardnotes_fs": {
            "name": "_load_standardnotes_fs",
            "location": 62,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "_load_evernote": {
            "name": "_load_evernote",
            "location": 81,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "load_events": {
            "name": "load_events",
            "location": 123,
            "return": [
                "List[Event]"
            ],
            "arguments": {}
        },
        "_load_categories": {
            "name": "_load_categories",
            "location": 134,
            "return": [
                "Dict[(str, List[str])]"
            ],
            "arguments": {}
        },
        "_substance2categories": {
            "name": "_substance2categories",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "_load_substance_aliases": {
            "name": "_load_substance_aliases",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "_tag_substances": {
            "name": "_tag_substances",
            "location": 163,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ]
            }
        },
        "_extend_substance_abbrs": {
            "name": "_extend_substance_abbrs",
            "location": 175,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "events": []
            }
        },
        "test_load": {
            "name": "test_load",
            "location": 182,
            "return": [],
            "arguments": {}
        }
    },
    "QSlang-master/qslang/main.py": {
        "qslang": {
            "name": "qslang",
            "location": 30,
            "return": [],
            "arguments": {
                "verbose": []
            }
        },
        "_load_events": {
            "name": "_load_events",
            "location": 34,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "substances": [
                    "List[str]"
                ]
            }
        },
        "events": {
            "name": "events",
            "location": 51,
            "return": [],
            "arguments": {
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "substances": [
                    "Optional[str]"
                ]
            }
        },
        "doses": {
            "name": "doses",
            "location": 65,
            "return": [],
            "arguments": {
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "substances": [
                    "str"
                ]
            }
        },
        "effectspan": {
            "name": "effectspan",
            "location": 87,
            "return": [],
            "arguments": {
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "substances": [
                    "str"
                ]
            }
        },
        "substances": {
            "name": "substances",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "start": [],
                "end": [],
                "substances": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 154,
            "return": [],
            "arguments": {
                "start": [
                    "Optional[datetime]"
                ],
                "end": [
                    "Optional[datetime]"
                ],
                "substances": [
                    "str"
                ],
                "any": [
                    "bool"
                ],
                "daily": [
                    "bool"
                ],
                "count": [
                    "bool"
                ],
                "days": [
                    "bool"
                ]
            }
        },
        "plot_calendar": {
            "name": "plot_calendar",
            "location": 178,
            "return": [],
            "arguments": {
                "start": [
                    "Optional[datetime]"
                ],
                "end": [
                    "Optional[datetime]"
                ],
                "substances": [
                    "str"
                ]
            }
        },
        "print_event": {
            "name": "print_event",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "e": [
                    "Event"
                ],
                "show_misc": []
            }
        },
        "print_events": {
            "name": "print_events",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ]
            }
        },
        "_print_daily_doses": {
            "name": "_print_daily_doses",
            "location": 212,
            "return": [],
            "arguments": {
                "events": [
                    "List[Event]"
                ],
                "substance": [
                    "str"
                ],
                "ignore_doses_fewer_than": []
            }
        },
        "_grouped_by_date": {
            "name": "_grouped_by_date",
            "location": 275,
            "return": [
                "Dict[(TDate, List[Event])]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ],
                "monthly": []
            }
        },
        "_dosesum": {
            "name": "_dosesum",
            "location": 294,
            "return": [],
            "arguments": {
                "doses": []
            }
        },
        "_sum_doses": {
            "name": "_sum_doses",
            "location": 304,
            "return": [
                "Dict[(str, TValueByDate)]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ],
                "monthly": []
            }
        },
        "_count_doses": {
            "name": "_count_doses",
            "location": 334,
            "return": [
                "Dict[(str, TValueByDate)]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ],
                "one_per_day": [],
                "monthly": [],
                "verbose": []
            }
        },
        "_plot_frequency": {
            "name": "_plot_frequency",
            "location": 373,
            "return": [],
            "arguments": {
                "events": [],
                "count": [],
                "one_per_day": [],
                "any_substance": [],
                "daily": [],
                "verbose": [],
                "figsize": [
                    "Tuple[(int, int)]"
                ]
            }
        },
        "_plot_calendar": {
            "name": "_plot_calendar",
            "location": 424,
            "return": [],
            "arguments": {
                "events": [],
                "cmap": [],
                "fillcolor": []
            }
        },
        "_datetime_arg": {
            "name": "_datetime_arg",
            "location": 454,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "QSlang-master/qslang/parse.py": {
        "_pop_regex": {
            "name": "_pop_regex",
            "location": 27,
            "return": [
                "Tuple[(str, Optional[str])]"
            ],
            "arguments": {
                "s": [
                    "str"
                ],
                "regex": [
                    "typing.Pattern"
                ]
            }
        },
        "_dict_pop_None": {
            "name": "_dict_pop_None",
            "location": 37,
            "return": [],
            "arguments": {
                "d": [
                    "Dict"
                ]
            }
        },
        "parse_data": {
            "name": "parse_data",
            "location": 44,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "data": [
                    "str"
                ]
            }
        },
        "parse_time": {
            "name": "parse_time",
            "location": 79,
            "return": [
                "Tuple[(time, List[str])]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 99,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "QSlang-master/qslang/pharmacokinetics.py": {
        "compute_plasma": {
            "name": "compute_plasma",
            "location": 12,
            "return": [],
            "arguments": {
                "doses": [
                    "list[tuple[(datetime, Dose)]]"
                ]
            }
        },
        "effectspan_substance": {
            "name": "effectspan_substance",
            "location": 58,
            "return": [
                "list[Event]"
            ],
            "arguments": {
                "doses": [
                    "list[tuple[(datetime, Dose)]]"
                ]
            }
        },
        "effectspan": {
            "name": "effectspan",
            "location": 100,
            "return": [
                "list[Event]"
            ],
            "arguments": {
                "doses": [
                    "list[tuple[(datetime, Dose)]]"
                ]
            }
        },
        "example": {
            "name": "example",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "test_effectspan": {
            "name": "test_effectspan",
            "location": 127,
            "return": [],
            "arguments": {}
        }
    },
    "QSlang-master/qslang/preprocess.py": {
        "_alcohol_preprocess": {
            "name": "_alcohol_preprocess",
            "location": 14,
            "return": [
                "List[Event]"
            ],
            "arguments": {
                "events": [
                    "List[Event]"
                ]
            }
        }
    },
    "QSlang-master/qslang/util.py": {
        "days_in_month": {
            "name": "days_in_month",
            "location": 26,
            "return": [],
            "arguments": {
                "year": [],
                "month": []
            }
        },
        "monthrange": {
            "name": "monthrange",
            "location": 30,
            "return": [
                "List[Tuple[(int, int)]]"
            ],
            "arguments": {
                "min_date": [
                    "Tuple[(int, int)]"
                ],
                "max_date": [
                    "Tuple[(int, int)]"
                ]
            }
        },
        "dayrange": {
            "name": "dayrange",
            "location": 40,
            "return": [
                "List[Tuple[(int, int, int)]]"
            ],
            "arguments": {
                "min_date": [
                    "Tuple[(int, int, int)]"
                ],
                "max_date": [
                    "Tuple[(int, int, int)]"
                ]
            }
        },
        "MsgCounterHandler.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MsgCounterHandler.emit": {
            "name": "emit",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "QSlang-master/qslang/__about__.py": {},
    "QSlang-master/qslang/__init__.py": {},
    "QSlang-master/qslang/__main__.py": {},
    "QSlang-master/tests/test_dose.py": {
        "test_dose_eq": {
            "name": "test_dose_eq",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_add_dose": {
            "name": "test_add_dose",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_dose_format": {
            "name": "test_dose_format",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "QSlang-master/tests/test_parse.py": {
        "test_pop_regex": {
            "name": "test_pop_regex",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_parse": {
            "name": "test_parse",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_parse_amount": {
            "name": "test_parse_amount",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_parse_roa": {
            "name": "test_parse_roa",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_parse_with_plus_in_extras": {
            "name": "test_parse_with_plus_in_extras",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_alcoholic_drink": {
            "name": "test_alcoholic_drink",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "test_complex_extras": {
            "name": "test_complex_extras",
            "location": 98,
            "return": [],
            "arguments": {}
        }
    },
    "QSlang-master/tests/test_util.py": {
        "test_monthrange": {
            "name": "test_monthrange",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_dayrange": {
            "name": "test_dayrange",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    }
}
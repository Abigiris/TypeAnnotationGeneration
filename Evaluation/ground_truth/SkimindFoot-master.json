{
    "SkimindFoot-master/manage.py": {},
    "SkimindFoot-master/merge_production_dotenvs_in_dotenv.py": {
        "merge": {
            "name": "merge",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "output_file_path": [
                    "str"
                ],
                "merged_file_paths": [
                    "Sequence[str]"
                ],
                "append_linesep": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_merge": {
            "name": "test_merge",
            "location": 34,
            "return": [],
            "arguments": {
                "tmpdir_factory": [],
                "merged_file_count": [
                    "int"
                ],
                "append_linesep": [
                    "bool"
                ]
            }
        }
    },
    "SkimindFoot-master/config/urls.py": {},
    "SkimindFoot-master/config/wsgi.py": {},
    "SkimindFoot-master/config/__init__.py": {},
    "SkimindFoot-master/config/settings/base.py": {},
    "SkimindFoot-master/config/settings/local.py": {},
    "SkimindFoot-master/config/settings/production.py": {},
    "SkimindFoot-master/config/settings/test.py": {},
    "SkimindFoot-master/config/settings/__init__.py": {},
    "SkimindFoot-master/docs/conf.py": {},
    "SkimindFoot-master/docs/__init__.py": {},
    "SkimindFoot-master/skimind/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/ski_consol.py": {
        "get_training_datas": {
            "name": "get_training_datas",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "get_data_to_predict": {
            "name": "get_data_to_predict",
            "location": 109,
            "return": [],
            "arguments": {
                "date": []
            }
        },
        "get_prediction_datas": {
            "name": "get_prediction_datas",
            "location": 148,
            "return": [],
            "arguments": {
                "date": []
            }
        },
        "save_prediction": {
            "name": "save_prediction",
            "location": 167,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_datasets": {
            "name": "save_datasets",
            "location": 172,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_ticket": {
            "name": "save_ticket",
            "location": 177,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_ticket_status": {
            "name": "save_ticket_status",
            "location": 182,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_user_ticket": {
            "name": "save_user_ticket",
            "location": 187,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_matchs": {
            "name": "save_matchs",
            "location": 192,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "save_resultat": {
            "name": "save_resultat",
            "location": 197,
            "return": [],
            "arguments": {
                "datas": []
            }
        },
        "clean_datasets": {
            "name": "clean_datasets",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "display_ticket": {
            "name": "display_ticket",
            "location": 241,
            "return": [],
            "arguments": {
                "bet_money": [],
                "win_money": []
            }
        },
        "DataBaseConnector.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataBaseConnector.close": {
            "name": "close",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/__init__.py": {},
    "SkimindFoot-master/skimind/contrib/__init__.py": {},
    "SkimindFoot-master/skimind/contrib/sites/__init__.py": {},
    "SkimindFoot-master/skimind/contrib/sites/migrations/0001_initial.py": {},
    "SkimindFoot-master/skimind/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "SkimindFoot-master/skimind/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "SkimindFoot-master/skimind/contrib/sites/migrations/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/config.py": {},
    "SkimindFoot-master/skimind/kernel/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/gFunctions/converter.py": {
        "class_to_betid": {
            "name": "class_to_betid",
            "location": 13,
            "return": [],
            "arguments": {
                "task_target": [],
                "class_target": []
            }
        },
        "betid_to_class_name": {
            "name": "betid_to_class_name",
            "location": 27,
            "return": [],
            "arguments": {
                "betid": []
            }
        },
        "task_to_dbfield": {
            "name": "task_to_dbfield",
            "location": 47,
            "return": [],
            "arguments": {
                "task_target": []
            }
        },
        "task_to_predict_cols": {
            "name": "task_to_predict_cols",
            "location": 58,
            "return": [],
            "arguments": {
                "task_target": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/gFunctions/datetime.py": {
        "now": {
            "name": "now",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "now_date": {
            "name": "now_date",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "add_margin_time": {
            "name": "add_margin_time",
            "location": 37,
            "return": [],
            "arguments": {
                "date_time": [],
                "margin_time": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/gFunctions/search.py": {
        "find_int_in_str": {
            "name": "find_int_in_str",
            "location": 6,
            "return": [],
            "arguments": {
                "string": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/gFunctions/__init__.py": {
        "singleton": {
            "name": "singleton",
            "location": 6,
            "return": [],
            "arguments": {
                "classe": [
                    "object"
                ]
            }
        },
        "pd_init_index": {
            "name": "pd_init_index",
            "location": 21,
            "return": [],
            "arguments": {
                "df_index": []
            }
        },
        "pd_unique_cols": {
            "name": "pd_unique_cols",
            "location": 31,
            "return": [],
            "arguments": {
                "datas_df": [
                    "pd.DataFrame"
                ]
            }
        },
        "singleton.manage": {
            "name": "manage",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/interfacedb/config.py": {
        "SqlRequestFunctions.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/interfacedb/modelColumns.py": {
        "get_training_datas_cols": {
            "name": "get_training_datas_cols",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "get_data_to_predict_cols": {
            "name": "get_data_to_predict_cols",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "get_prediction_datas_cols": {
            "name": "get_prediction_datas_cols",
            "location": 62,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/interfacedb/modelRequest.py": {
        "serialize_datas": {
            "name": "serialize_datas",
            "location": 28,
            "return": [],
            "arguments": {
                "model_cols_fn": [],
                "datas": [
                    "list"
                ]
            }
        },
        "get_training_datas": {
            "name": "get_training_datas",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "get_data_to_predict": {
            "name": "get_data_to_predict",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "get_prediction_datas": {
            "name": "get_prediction_datas",
            "location": 97,
            "return": [],
            "arguments": {
                "date": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/interfacedb/modelTables.py": {
        "Matchs.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matchs.get_all_cols": {
            "name": "get_all_cols",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matchs.get_primary_key": {
            "name": "get_primary_key",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matchs.format_cote": {
            "name": "format_cote",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "idcote": [
                    "int"
                ]
            }
        },
        "Matchs.get_features": {
            "name": "get_features",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matchs.get_betid_from": {
            "name": "get_betid_from",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "task_name": [],
                "class_id": []
            }
        },
        "Datasets.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Datasets.get_all_cols": {
            "name": "get_all_cols",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Prediction.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Prediction.get_all_cols": {
            "name": "get_all_cols",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Prediction.get_predict_task_col": {
            "name": "get_predict_task_col",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "task_name": [
                    "str"
                ]
            }
        },
        "Prediction.get_class_name": {
            "name": "get_class_name",
            "location": 192,
            "return": [],
            "arguments": {
                "bet_id": []
            }
        },
        "Prediction.get_task_probabilities_cols": {
            "name": "get_task_probabilities_cols",
            "location": 208,
            "return": [],
            "arguments": {
                "task_name": []
            }
        },
        "Resultat.__init__": {
            "name": "__init__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resultat.get_all_cols": {
            "name": "get_all_cols",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resultat.get_labels_cols": {
            "name": "get_labels_cols",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ticket.__init__": {
            "name": "__init__",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ticket.get_all_cols": {
            "name": "get_all_cols",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TicketStatus.__init__": {
            "name": "__init__",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TicketStatus.get_all_cols": {
            "name": "get_all_cols",
            "location": 360,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserTicket.__init__": {
            "name": "__init__",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserTicket.get_all_cols": {
            "name": "get_all_cols",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/interfacedb/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/learningModels/ckpt_manager.py": {
        "reboot_checkpoint": {
            "name": "reboot_checkpoint",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "restore_checkpoint": {
            "name": "restore_checkpoint",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "reboot_checkpoint.backup_checkpoint": {
            "name": "backup_checkpoint",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/config.py": {
        "save_config": {
            "name": "save_config",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "config_changed": {
            "name": "config_changed",
            "location": 62,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/main.py": {
        "find_prediction": {
            "name": "find_prediction",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "verify_prediction_and_trainmodel": {
            "name": "verify_prediction_and_trainmodel",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "find_prediction.save_prediction": {
            "name": "save_prediction",
            "location": 37,
            "return": [],
            "arguments": {
                "predictions_df": []
            }
        },
        "verify_prediction_and_trainmodel.save_datasets": {
            "name": "save_datasets",
            "location": 77,
            "return": [],
            "arguments": {
                "dataset": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/manager.py": {
        "find_prediction": {
            "name": "find_prediction",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "verify_prediction_and_trainmodel": {
            "name": "verify_prediction_and_trainmodel",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "find_prediction.save_prediction": {
            "name": "save_prediction",
            "location": 34,
            "return": [],
            "arguments": {
                "predictions_df": []
            }
        },
        "verify_prediction_and_trainmodel.save_datasets": {
            "name": "save_datasets",
            "location": 61,
            "return": [],
            "arguments": {
                "dataset": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/prediction.py": {
        "SkiPrediction.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SkiPrediction.add_predictions": {
            "name": "add_predictions",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "predictions": [],
                "task_target": []
            }
        },
        "SkiPrediction.start": {
            "name": "start",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "data_df": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/preprocessing.py": {
        "FilterDataFrame.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data_df": []
            }
        },
        "FilterDataFrame.get_datas": {
            "name": "get_datas",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "task_target": [],
                "select_label": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/trainEval.py": {
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 6,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_Y": [],
                "const_shuffle": [],
                "batch_size": []
            }
        },
        "eval_input_fn": {
            "name": "eval_input_fn",
            "location": 14,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_Y": [],
                "batch_size": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/trainModel.py": {
        "build_model": {
            "name": "build_model",
            "location": 37,
            "return": [],
            "arguments": {
                "task_target": []
            }
        },
        "train_model_if_possible": {
            "name": "train_model_if_possible",
            "location": 76,
            "return": [],
            "arguments": {
                "data_df": [
                    "pd.DataFrame"
                ]
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/learningModels/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/pdfManag/cat.py": {},
    "SkimindFoot-master/skimind/kernel/pdfManag/config.py": {},
    "SkimindFoot-master/skimind/kernel/pdfManag/data_extractor.py": {
        "extract_metadatas": {
            "name": "extract_metadatas",
            "location": 9,
            "return": [],
            "arguments": {
                "metadatas": [],
                "is_betfile": []
            }
        },
        "extract_datas": {
            "name": "extract_datas",
            "location": 87,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "pdf_data_process": {
            "name": "pdf_data_process",
            "location": 129,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "is_betfile": []
            }
        },
        "extract_metadatas.serialize_data": {
            "name": "serialize_data",
            "location": 16,
            "return": [],
            "arguments": {
                "data": [],
                "isclass": []
            }
        },
        "extract_metadatas.move_datas_bet": {
            "name": "move_datas_bet",
            "location": 39,
            "return": [],
            "arguments": {
                "cotes": []
            }
        },
        "extract_datas.arange_values": {
            "name": "arange_values",
            "location": 88,
            "return": [],
            "arguments": {
                "cotes_tab": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/extract.py": {
        "extract_metadatas": {
            "name": "extract_metadatas",
            "location": 17,
            "return": [],
            "arguments": {
                "metadatas": [],
                "is_betfile": []
            }
        },
        "extract_datas": {
            "name": "extract_datas",
            "location": 96,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "pdf_process": {
            "name": "pdf_process",
            "location": 144,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "is_betfile": []
            }
        },
        "extract_metadatas.serialize_data": {
            "name": "serialize_data",
            "location": 24,
            "return": [],
            "arguments": {
                "data": [],
                "isclass": []
            }
        },
        "extract_metadatas.move_datas_bet": {
            "name": "move_datas_bet",
            "location": 47,
            "return": [],
            "arguments": {
                "cotes": []
            }
        },
        "extract_datas.is_matchs_datas": {
            "name": "is_matchs_datas",
            "location": 97,
            "return": [],
            "arguments": {
                "tablist": []
            }
        },
        "extract_datas.get_values": {
            "name": "get_values",
            "location": 115,
            "return": [],
            "arguments": {
                "tablist": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/main.py": {
        "bet_file_manag": {
            "name": "bet_file_manag",
            "location": 15,
            "return": [],
            "arguments": {
                "filename": [],
                "numlist": [],
                "date_format": [],
                "flag": []
            }
        },
        "result_file_manag": {
            "name": "result_file_manag",
            "location": 34,
            "return": [],
            "arguments": {
                "filename": [],
                "numlist": [],
                "date_format": [],
                "flag": []
            }
        },
        "pdf_process": {
            "name": "pdf_process",
            "location": 52,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "numlist": [
                    "list"
                ],
                "is_betfile": [],
                "date_format": []
            }
        },
        "pdf_process.split_date_and_serial": {
            "name": "split_date_and_serial",
            "location": 53,
            "return": [],
            "arguments": {
                "tablist": []
            }
        },
        "pdf_process.insert_data_into_matchs": {
            "name": "insert_data_into_matchs",
            "location": 65,
            "return": [],
            "arguments": {
                "metadata": [],
                "numlist_tag": []
            }
        },
        "pdf_process.insert_data_into_resultat": {
            "name": "insert_data_into_resultat",
            "location": 70,
            "return": [],
            "arguments": {
                "metadata": [],
                "numlist_tag": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/page_spliter.py": {
        "PDFsplit": {
            "name": "PDFsplit",
            "location": 16,
            "return": [],
            "arguments": {
                "pdf": [],
                "splits": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/tools.py": {
        "is_matchs_datas": {
            "name": "is_matchs_datas",
            "location": 11,
            "return": [],
            "arguments": {
                "tablist": []
            }
        },
        "serialize_date_format": {
            "name": "serialize_date_format",
            "location": 29,
            "return": [],
            "arguments": {
                "date": [
                    "str"
                ],
                "date_format": [
                    "str"
                ]
            }
        },
        "count_pages": {
            "name": "count_pages",
            "location": 60,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "serialize_date_format.complet_DMY": {
            "name": "complet_DMY",
            "location": 30,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/pdfManag/tests/test_pdfmanag.py": {
        "TestPdfManag.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPdfManag.test_dataextractor": {
            "name": "test_dataextractor",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPdfManag.test_main": {
            "name": "test_main",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/kernel/pdfManag/tests/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/useCases/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/useCases/buildTicket/config.py": {},
    "SkimindFoot-master/skimind/kernel/useCases/buildTicket/dataFilter.py": {
        "get_ticket_columns": {
            "name": "get_ticket_columns",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "get_datas": {
            "name": "get_datas",
            "location": 28,
            "return": [],
            "arguments": {
                "task_list": [
                    "list"
                ],
                "margin_time": [
                    "int"
                ]
            }
        },
        "get_datas.transforme_class_to_betid": {
            "name": "transforme_class_to_betid",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "get_datas.filter_best_prediction": {
            "name": "filter_best_prediction",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "get_datas.filter_best_prediction.get_probabilities_cols": {
            "name": "get_probabilities_cols",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/useCases/buildTicket/main.py": {
        "BuildTicket.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "bet_money": [],
                "win_money": []
            }
        },
        "BuildTicket.save_ticket": {
            "name": "save_ticket",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "idticket": [],
                "bet_money": [],
                "uid": []
            }
        },
        "BuildTicket.get_bet_columns": {
            "name": "get_bet_columns",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildTicket.data_to_display": {
            "name": "data_to_display",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildTicket.find_tickets": {
            "name": "find_tickets",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "task_list": [],
                "margin_time": [],
                "check_numlist": []
            }
        },
        "BuildTicket.save_ticket.save_as_user_ticket": {
            "name": "save_as_user_ticket",
            "location": 47,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "BuildTicket.save_ticket.save_as_ticket_status": {
            "name": "save_as_ticket_status",
            "location": 77,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "BuildTicket.find_tickets.track_all_tickets": {
            "name": "track_all_tickets",
            "location": 233,
            "return": [],
            "arguments": {
                "sub_datas_df": []
            }
        },
        "BuildTicket.find_tickets.track_all_tickets.choose_matchs": {
            "name": "choose_matchs",
            "location": 244,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/useCases/buildTicket/__init__.py": {},
    "SkimindFoot-master/skimind/kernel/useCases/homeView/main.py": {
        "HomeView.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeView.get_selected_columns": {
            "name": "get_selected_columns",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeView.filter_datas": {
            "name": "filter_datas",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "by_idmatch": [],
                "by_datetime": []
            }
        },
        "HomeView.__init__.add_datetime_column": {
            "name": "add_datetime_column",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "HomeView.filter_datas.check_status": {
            "name": "check_status",
            "location": 78,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/kernel/useCases/homeView/__init__.py": {},
    "SkimindFoot-master/skimind/ticket/admin.py": {},
    "SkimindFoot-master/skimind/ticket/apps.py": {},
    "SkimindFoot-master/skimind/ticket/models.py": {},
    "SkimindFoot-master/skimind/ticket/tests.py": {},
    "SkimindFoot-master/skimind/ticket/urls.py": {},
    "SkimindFoot-master/skimind/ticket/views.py": {
        "HomeView.get": {
            "name": "get",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "SkimindFoot-master/skimind/ticket/__init__.py": {},
    "SkimindFoot-master/skimind/ticket/migrations/__init__.py": {},
    "SkimindFoot-master/skimind/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ],
                "sociallogin": [
                    "Any"
                ]
            }
        }
    },
    "SkimindFoot-master/skimind/users/admin.py": {},
    "SkimindFoot-master/skimind/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/users/urls.py": {},
    "SkimindFoot-master/skimind/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/users/__init__.py": {},
    "SkimindFoot-master/skimind/users/migrations/0001_initial.py": {},
    "SkimindFoot-master/skimind/users/migrations/__init__.py": {},
    "SkimindFoot-master/skimind/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [
                    "bool"
                ],
                "extracted": [
                    "Sequence[Any]"
                ]
            }
        }
    },
    "SkimindFoot-master/skimind/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "SkimindFoot-master/skimind/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "SkimindFoot-master/skimind/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "SkimindFoot-master/skimind/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        }
    },
    "SkimindFoot-master/skimind/users/tests/__init__.py": {}
}
{
    "Tagdir-master/setup.py": {},
    "Tagdir-master/tagdir/cli.py": {
        "is_tagdir": {
            "name": "is_tagdir",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "disk": []
            }
        },
        "get_mountpoint": {
            "name": "get_mountpoint",
            "location": 25,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "name": [
                    "Optional[str]"
                ]
            }
        },
        "name_validator": {
            "name": "name_validator",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "mount": {
            "name": "mount",
            "location": 49,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "Optional[str]"
                ]
            }
        },
        "mktag": {
            "name": "mktag",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "str"
                ]
            }
        },
        "rmtag": {
            "name": "rmtag",
            "location": 95,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "str"
                ]
            }
        },
        "tag": {
            "name": "tag",
            "location": 101,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "str"
                ]
            }
        },
        "untag": {
            "name": "untag",
            "location": 110,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "str"
                ]
            }
        },
        "listag": {
            "name": "listag",
            "location": 124,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ],
                "mountpoint": [
                    "str"
                ]
            }
        },
        "_main": {
            "name": "_main",
            "location": 150,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 206,
            "return": [],
            "arguments": {}
        }
    },
    "Tagdir-master/tagdir/db.py": {
        "setup_db": {
            "name": "setup_db",
            "location": 9,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "session_scope": {
            "name": "session_scope",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "Tagdir-master/tagdir/models.py": {
        "Attr.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "st_mode": [
                    "int"
                ]
            }
        },
        "Attr.new_tag_attr": {
            "name": "new_tag_attr",
            "location": 41,
            "return": [
                "Attr"
            ],
            "arguments": {}
        },
        "Attr.new_entity_attr": {
            "name": "new_entity_attr",
            "location": 45,
            "return": [
                "Attr"
            ],
            "arguments": {}
        },
        "Attr.new_root_attr": {
            "name": "new_root_attr",
            "location": 49,
            "return": [
                "Attr"
            ],
            "arguments": {}
        },
        "Attr.new_dummy_attr": {
            "name": "new_dummy_attr",
            "location": 53,
            "return": [
                "Attr"
            ],
            "arguments": {}
        },
        "Attr.get_root_attr": {
            "name": "get_root_attr",
            "location": 58,
            "return": [
                "Attr"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "Attr.as_dict": {
            "name": "as_dict",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NodeMixIn.attr_id": {
            "name": "attr_id",
            "location": 75,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "NodeMixIn.attr": {
            "name": "attr",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "NodeMixIn.get_by_name": {
            "name": "get_by_name",
            "location": 84,
            "return": [],
            "arguments": {
                "cls": [],
                "session": [],
                "name": [
                    "str"
                ]
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "attr": [
                    "Attr"
                ],
                "path": [
                    "str"
                ],
                "tags": [
                    "List[Tag]"
                ]
            }
        },
        "Entity.__repr__": {
            "name": "__repr__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.get_if_valid": {
            "name": "get_if_valid",
            "location": 104,
            "return": [
                "Optional[Entity]"
            ],
            "arguments": {
                "session": [
                    "Session"
                ],
                "ent_name": [
                    "str"
                ],
                "tags": [
                    "List[Tag]"
                ]
            }
        },
        "Entity.has_tags": {
            "name": "has_tags",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tags": [
                    "List[Tag]"
                ]
            }
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "attr": [
                    "Attr"
                ]
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.remove": {
            "name": "remove",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "Session"
                ]
            }
        }
    },
    "Tagdir-master/tagdir/session.py": {
        "Session.commit": {
            "name": "commit",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.rollback": {
            "name": "rollback",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.close": {
            "name": "close",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Tagdir-master/tagdir/tagdir.py": {
        "encode_path": {
            "name": "encode_path",
            "location": 23,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "decode_path": {
            "name": "decode_path",
            "location": 27,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "parse_path": {
            "name": "parse_path",
            "location": 31,
            "return": [
                "Tuple[(List[str], Optional[str], Optional[str])]"
            ],
            "arguments": {
                "raw_path": [
                    "str"
                ]
            }
        },
        "parse_path_for_tagging": {
            "name": "parse_path_for_tagging",
            "location": 62,
            "return": [
                "Tuple[(List[str], Optional[str])]"
            ],
            "arguments": {
                "raw_path": [
                    "str"
                ]
            }
        },
        "Tagdir.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tagdir.__call__": {
            "name": "__call__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "op": [],
                "path": []
            }
        },
        "Tagdir.access": {
            "name": "access",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": [],
                "mode": []
            }
        },
        "Tagdir.getattr": {
            "name": "getattr",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": [],
                "fh": []
            }
        },
        "Tagdir.getxattr": {
            "name": "getxattr",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": [],
                "name": [],
                "position": []
            }
        },
        "Tagdir.listxattr": {
            "name": "listxattr",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": []
            }
        },
        "Tagdir.mkdir": {
            "name": "mkdir",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": [],
                "mode": []
            }
        },
        "Tagdir.rmdir": {
            "name": "rmdir",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": []
            }
        },
        "Tagdir.readdir": {
            "name": "readdir",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "path": [],
                "fh": []
            }
        },
        "Tagdir.statfs": {
            "name": "statfs",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "_": [],
                "path": []
            }
        }
    },
    "Tagdir-master/tagdir/watch.py": {
        "Singleton.__call__": {
            "name": "__call__",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Singleton.get_instance": {
            "name": "get_instance",
            "location": 25,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "EntityPathChangeObserver.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntityPathChangeObserver.schedule": {
            "name": "schedule",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "event_handler": [],
                "path": [],
                "recursive": []
            }
        },
        "EntityPathChangeObserver.schedule_if_new_path": {
            "name": "schedule_if_new_path",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EntityPathChangeObserver.unschedule_redundant_handlers": {
            "name": "unschedule_redundant_handlers",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntityPathChangeHandler.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntityPathChangeHandler.on_moved": {
            "name": "on_moved",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "EntityPathChangeHandler.on_deleted": {
            "name": "on_deleted",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "Tagdir-master/tagdir/__init__.py": {},
    "Tagdir-master/tagdir/fusepy/exceptions.py": {
        "FuseOSError.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "errno": []
            }
        }
    },
    "Tagdir-master/tagdir/fusepy/fuse.py": {
        "time_of_timespec": {
            "name": "time_of_timespec",
            "location": 571,
            "return": [],
            "arguments": {
                "ts": [],
                "use_ns": []
            }
        },
        "set_st_attrs": {
            "name": "set_st_attrs",
            "location": 577,
            "return": [],
            "arguments": {
                "st": [],
                "attrs": [],
                "use_ns": []
            }
        },
        "fuse_get_context": {
            "name": "fuse_get_context",
            "location": 593,
            "return": [],
            "arguments": {}
        },
        "fuse_exit": {
            "name": "fuse_exit",
            "location": 601,
            "return": [],
            "arguments": {}
        },
        "FUSE.__init__": {
            "name": "__init__",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "operations": [],
                "mountpoint": [],
                "raw_fi": [],
                "encoding": []
            }
        },
        "FUSE._normalize_fuse_options": {
            "name": "_normalize_fuse_options",
            "location": 709,
            "return": [],
            "arguments": {}
        },
        "FUSE._wrapper": {
            "name": "_wrapper",
            "location": 718,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "FUSE._decode_optional_path": {
            "name": "_decode_optional_path",
            "location": 760,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FUSE.getattr": {
            "name": "getattr",
            "location": 768,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": []
            }
        },
        "FUSE.readlink": {
            "name": "readlink",
            "location": 771,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": [],
                "bufsize": []
            }
        },
        "FUSE.mknod": {
            "name": "mknod",
            "location": 781,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": [],
                "dev": []
            }
        },
        "FUSE.mkdir": {
            "name": "mkdir",
            "location": 784,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "FUSE.unlink": {
            "name": "unlink",
            "location": 787,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FUSE.rmdir": {
            "name": "rmdir",
            "location": 790,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FUSE.symlink": {
            "name": "symlink",
            "location": 793,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "target": []
            }
        },
        "FUSE.rename": {
            "name": "rename",
            "location": 799,
            "return": [],
            "arguments": {
                "self": [],
                "old": [],
                "new": []
            }
        },
        "FUSE.link": {
            "name": "link",
            "location": 803,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "target": []
            }
        },
        "FUSE.chmod": {
            "name": "chmod",
            "location": 809,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "FUSE.chown": {
            "name": "chown",
            "location": 812,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "uid": [],
                "gid": []
            }
        },
        "FUSE.truncate": {
            "name": "truncate",
            "location": 821,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "length": []
            }
        },
        "FUSE.open": {
            "name": "open",
            "location": 824,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": []
            }
        },
        "FUSE.read": {
            "name": "read",
            "location": 834,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": [],
                "size": [],
                "offset": [],
                "fip": []
            }
        },
        "FUSE.write": {
            "name": "write",
            "location": 853,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": [],
                "size": [],
                "offset": [],
                "fip": []
            }
        },
        "FUSE.statfs": {
            "name": "statfs",
            "location": 864,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": []
            }
        },
        "FUSE.flush": {
            "name": "flush",
            "location": 873,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": []
            }
        },
        "FUSE.release": {
            "name": "release",
            "location": 881,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": []
            }
        },
        "FUSE.fsync": {
            "name": "fsync",
            "location": 889,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "datasync": [],
                "fip": []
            }
        },
        "FUSE.setxattr": {
            "name": "setxattr",
            "location": 898,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": [],
                "value": [],
                "size": [],
                "options": []
            }
        },
        "FUSE.getxattr": {
            "name": "getxattr",
            "location": 903,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": [],
                "value": [],
                "size": []
            }
        },
        "FUSE.listxattr": {
            "name": "listxattr",
            "location": 922,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "namebuf": [],
                "size": []
            }
        },
        "FUSE.removexattr": {
            "name": "removexattr",
            "location": 942,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": []
            }
        },
        "FUSE.opendir": {
            "name": "opendir",
            "location": 946,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": []
            }
        },
        "FUSE.readdir": {
            "name": "readdir",
            "location": 953,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": [],
                "filler": [],
                "offset": [],
                "fip": []
            }
        },
        "FUSE.releasedir": {
            "name": "releasedir",
            "location": 973,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": []
            }
        },
        "FUSE.fsyncdir": {
            "name": "fsyncdir",
            "location": 978,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "datasync": [],
                "fip": []
            }
        },
        "FUSE.init": {
            "name": "init",
            "location": 983,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "FUSE.destroy": {
            "name": "destroy",
            "location": 986,
            "return": [],
            "arguments": {
                "self": [],
                "private_data": []
            }
        },
        "FUSE.access": {
            "name": "access",
            "location": 989,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "amode": []
            }
        },
        "FUSE.create": {
            "name": "create",
            "location": 992,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": [],
                "fip": []
            }
        },
        "FUSE.ftruncate": {
            "name": "ftruncate",
            "location": 1002,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "length": [],
                "fip": []
            }
        },
        "FUSE.fgetattr": {
            "name": "fgetattr",
            "location": 1011,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": [],
                "fip": []
            }
        },
        "FUSE.lock": {
            "name": "lock",
            "location": 1026,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fip": [],
                "cmd": [],
                "lock": []
            }
        },
        "FUSE.utimens": {
            "name": "utimens",
            "location": 1035,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "buf": []
            }
        },
        "FUSE.bmap": {
            "name": "bmap",
            "location": 1045,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "blocksize": [],
                "idx": []
            }
        },
        "FUSE.ioctl": {
            "name": "ioctl",
            "location": 1049,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "cmd": [],
                "arg": [],
                "fip": [],
                "flags": [],
                "data": []
            }
        },
        "Operations.__call__": {
            "name": "__call__",
            "location": 1068,
            "return": [],
            "arguments": {
                "self": [],
                "op": []
            }
        },
        "Operations.access": {
            "name": "access",
            "location": 1073,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "amode": []
            }
        },
        "Operations.chmod": {
            "name": "chmod",
            "location": 1078,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "Operations.chown": {
            "name": "chown",
            "location": 1081,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "uid": [],
                "gid": []
            }
        },
        "Operations.create": {
            "name": "create",
            "location": 1084,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": [],
                "fi": []
            }
        },
        "Operations.destroy": {
            "name": "destroy",
            "location": 1095,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.flush": {
            "name": "flush",
            "location": 1100,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Operations.fsync": {
            "name": "fsync",
            "location": 1103,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "datasync": [],
                "fh": []
            }
        },
        "Operations.fsyncdir": {
            "name": "fsyncdir",
            "location": 1106,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "datasync": [],
                "fh": []
            }
        },
        "Operations.getattr": {
            "name": "getattr",
            "location": 1109,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Operations.getxattr": {
            "name": "getxattr",
            "location": 1125,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": [],
                "position": []
            }
        },
        "Operations.init": {
            "name": "init",
            "location": 1128,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.ioctl": {
            "name": "ioctl",
            "location": 1137,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "cmd": [],
                "arg": [],
                "fip": [],
                "flags": [],
                "data": []
            }
        },
        "Operations.link": {
            "name": "link",
            "location": 1140,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "source": []
            }
        },
        "Operations.listxattr": {
            "name": "listxattr",
            "location": 1145,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.mkdir": {
            "name": "mkdir",
            "location": 1150,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "Operations.mknod": {
            "name": "mknod",
            "location": 1153,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": [],
                "dev": []
            }
        },
        "Operations.open": {
            "name": "open",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "flags": []
            }
        },
        "Operations.opendir": {
            "name": "opendir",
            "location": 1169,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.read": {
            "name": "read",
            "location": 1174,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "size": [],
                "offset": [],
                "fh": []
            }
        },
        "Operations.readdir": {
            "name": "readdir",
            "location": 1179,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Operations.readlink": {
            "name": "readlink",
            "location": 1187,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.release": {
            "name": "release",
            "location": 1190,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Operations.releasedir": {
            "name": "releasedir",
            "location": 1193,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Operations.removexattr": {
            "name": "removexattr",
            "location": 1196,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": []
            }
        },
        "Operations.rename": {
            "name": "rename",
            "location": 1199,
            "return": [],
            "arguments": {
                "self": [],
                "old": [],
                "new": []
            }
        },
        "Operations.rmdir": {
            "name": "rmdir",
            "location": 1202,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.setxattr": {
            "name": "setxattr",
            "location": 1205,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": [],
                "value": [],
                "options": [],
                "position": []
            }
        },
        "Operations.statfs": {
            "name": "statfs",
            "location": 1208,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.symlink": {
            "name": "symlink",
            "location": 1219,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "source": []
            }
        },
        "Operations.truncate": {
            "name": "truncate",
            "location": 1224,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "length": [],
                "fh": []
            }
        },
        "Operations.unlink": {
            "name": "unlink",
            "location": 1227,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Operations.utimens": {
            "name": "utimens",
            "location": 1230,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "times": []
            }
        },
        "Operations.write": {
            "name": "write",
            "location": 1235,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "offset": [],
                "fh": []
            }
        },
        "partial": {
            "name": "partial",
            "location": 35,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "partial.newfunc": {
            "name": "newfunc",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "Reg32GetValue": {
            "name": "Reg32GetValue",
            "location": 97,
            "return": [],
            "arguments": {
                "rootkey": [],
                "keyname": [],
                "valname": []
            }
        }
    },
    "Tagdir-master/tagdir/fusepy/loopback.py": {
        "Loopback.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loopback.access": {
            "name": "access",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "Loopback.create": {
            "name": "create",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "Loopback.flush": {
            "name": "flush",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Loopback.fsync": {
            "name": "fsync",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "datasync": [],
                "fh": []
            }
        },
        "Loopback.getattr": {
            "name": "getattr",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Loopback.link": {
            "name": "link",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "source": []
            }
        },
        "Loopback.mkdir": {
            "name": "mkdir",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "Loopback.read": {
            "name": "read",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "size": [],
                "offset": [],
                "fh": []
            }
        },
        "Loopback.readdir": {
            "name": "readdir",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Loopback.readlink": {
            "name": "readlink",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Loopback.release": {
            "name": "release",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fh": []
            }
        },
        "Loopback.rename": {
            "name": "rename",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "old": [],
                "new": []
            }
        },
        "Loopback.rmdir": {
            "name": "rmdir",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Loopback.statfs": {
            "name": "statfs",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Loopback.symlink": {
            "name": "symlink",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "source": []
            }
        },
        "Loopback.truncate": {
            "name": "truncate",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "length": [],
                "fh": []
            }
        },
        "Loopback.unlink": {
            "name": "unlink",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Loopback.write": {
            "name": "write",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "offset": [],
                "fh": []
            }
        }
    },
    "Tagdir-master/tagdir/fusepy/__init__.py": {},
    "Tagdir-master/tests/conftest.py": {
        "pytest_sessionstart": {
            "name": "pytest_sessionstart",
            "location": 5,
            "return": [],
            "arguments": {
                "session": []
            }
        }
    },
    "Tagdir-master/tests/__init__.py": {},
    "Tagdir-master/tests/cli/test_get_mountpoint.py": {
        "mock_disk_partitions": {
            "name": "mock_disk_partitions",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_get_implicitly": {
            "name": "test_get_implicitly",
            "location": 32,
            "return": [],
            "arguments": {
                "mock_disk_partitions": []
            }
        },
        "test_get_implicitly_fail": {
            "name": "test_get_implicitly_fail",
            "location": 37,
            "return": [],
            "arguments": {
                "mock_disk_partitions": []
            }
        },
        "test_get_explicitly": {
            "name": "test_get_explicitly",
            "location": 42,
            "return": [],
            "arguments": {
                "mock_disk_partitions": []
            }
        },
        "test_get_explicitly_fail": {
            "name": "test_get_explicitly_fail",
            "location": 47,
            "return": [],
            "arguments": {
                "mock_disk_partitions": []
            }
        },
        "mock_disk_partitions._mock_disk_partitions": {
            "name": "_mock_disk_partitions",
            "location": 12,
            "return": [],
            "arguments": {
                "ret_val": []
            }
        }
    },
    "Tagdir-master/tests/cli/test_listag.py": {
        "mock_xattr": {
            "name": "mock_xattr",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "mock_run": {
            "name": "mock_run",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "mock_check_output": {
            "name": "mock_check_output",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_normal_all": {
            "name": "test_normal_all",
            "location": 33,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_normal": {
            "name": "test_normal",
            "location": 40,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_nonexistent_entity": {
            "name": "test_nonexistent_entity",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_invalid_path": {
            "name": "test_invalid_path",
            "location": 52,
            "return": [],
            "arguments": {}
        }
    },
    "Tagdir-master/tests/cli/test_untag.py": {
        "mock_xattr": {
            "name": "mock_xattr",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "mock_run": {
            "name": "mock_run",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_normal": {
            "name": "test_normal",
            "location": 26,
            "return": [],
            "arguments": {
                "mock_run": []
            }
        },
        "test_nonexistent_entity": {
            "name": "test_nonexistent_entity",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "Tagdir-master/tests/cli/__init__.py": {},
    "Tagdir-master/tests/tagdir/conftest.py": {
        "tagdir": {
            "name": "tagdir",
            "location": 10,
            "return": [],
            "arguments": {
                "_tagdir": []
            }
        },
        "setup_tagdir_test": {
            "name": "setup_tagdir_test",
            "location": 19,
            "return": [],
            "arguments": {
                "func": [],
                "method_name": [],
                "retval": []
            }
        },
        "setup_tagdir_test._tagdir": {
            "name": "_tagdir",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "setup_tagdir_test.method_mock": {
            "name": "method_mock",
            "location": 29,
            "return": [],
            "arguments": {
                "mocker": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_access.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 10,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_root": {
            "name": "test_root",
            "location": 26,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_tag1": {
            "name": "test_existent_tag1",
            "location": 30,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_entity1": {
            "name": "test_existent_entity1",
            "location": 34,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_entity2": {
            "name": "test_existent_entity2",
            "location": 38,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_nonexistent_tag": {
            "name": "test_nonexistent_tag",
            "location": 42,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_no_tag": {
            "name": "test_no_tag",
            "location": 48,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_notag_entity": {
            "name": "test_notag_entity",
            "location": 54,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_getattr.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 10,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_root": {
            "name": "test_root",
            "location": 26,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_tag1": {
            "name": "test_existent_tag1",
            "location": 31,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_entity1": {
            "name": "test_existent_entity1",
            "location": 36,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_existent_entity2": {
            "name": "test_existent_entity2",
            "location": 41,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_nonexistent_tag": {
            "name": "test_nonexistent_tag",
            "location": 46,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_no_tag": {
            "name": "test_no_tag",
            "location": 52,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_notag_entity": {
            "name": "test_notag_entity",
            "location": 58,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_getxattr.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 11,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_normal": {
            "name": "test_normal",
            "location": 25,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_nonexistent_entity": {
            "name": "test_nonexistent_entity",
            "location": 30,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_path": {
            "name": "test_invalid_path",
            "location": 42,
            "return": [],
            "arguments": {
                "tagdir": [],
                "input": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_listxattr.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 9,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_correct": {
            "name": "test_correct",
            "location": 21,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_path": {
            "name": "test_invalid_path",
            "location": 32,
            "return": [],
            "arguments": {
                "tagdir": [],
                "input": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_mkdir.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 16,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_normal1": {
            "name": "test_normal1",
            "location": 26,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_normal2": {
            "name": "test_normal2",
            "location": 35,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_root": {
            "name": "test_invalid_root",
            "location": 47,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_notag": {
            "name": "test_invalid_notag",
            "location": 53,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_entity": {
            "name": "test_invalid_entity",
            "location": 59,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_parse_path.py": {
        "test_threesome": {
            "name": "test_threesome",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_twosome": {
            "name": "test_twosome",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_only_tags": {
            "name": "test_only_tags",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_root": {
            "name": "test_root",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_normal": {
            "name": "test_normal",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_no_delimiter": {
            "name": "test_no_delimiter",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_non_absolute_source_path": {
            "name": "test_non_absolute_source_path",
            "location": 53,
            "return": [],
            "arguments": {}
        }
    },
    "Tagdir-master/tests/tagdir/test_readdir.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 10,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_root": {
            "name": "test_root",
            "location": 28,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_filter1": {
            "name": "test_filter1",
            "location": 33,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_filter2": {
            "name": "test_filter2",
            "location": 38,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_nonexistent_tag": {
            "name": "test_nonexistent_tag",
            "location": 43,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_no_tag": {
            "name": "test_no_tag",
            "location": 49,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_entity": {
            "name": "test_entity",
            "location": 55,
            "return": [],
            "arguments": {
                "tagdir": [],
                "method_mock": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/test_rmdir.py": {
        "setup_func": {
            "name": "setup_func",
            "location": 15,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "test_normal1": {
            "name": "test_normal1",
            "location": 27,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_normal2": {
            "name": "test_normal2",
            "location": 34,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_root": {
            "name": "test_invalid_root",
            "location": 43,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_invalid_notag": {
            "name": "test_invalid_notag",
            "location": 49,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        },
        "test_nonexistent_tag": {
            "name": "test_nonexistent_tag",
            "location": 55,
            "return": [],
            "arguments": {
                "tagdir": []
            }
        }
    },
    "Tagdir-master/tests/tagdir/__init__.py": {}
}
{
    "acme-cert-updater-main/tests/unit/test_app.py": {
        "TestConfig.test_domains": {
            "name": "test_domains",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_cert_name": {
            "name": "test_cert_name",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "acme-cert-updater-main/tests/unit/test_integration.py": {
        "DummyConfig.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.domains": {
            "name": "domains",
            "location": 20,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.cert_name": {
            "name": "cert_name",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.email": {
            "name": "email",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.bucket_name": {
            "name": "bucket_name",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.prefix": {
            "name": "prefix",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.environment": {
            "name": "environment",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.acme_server": {
            "name": "acme_server",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyConfig.notification": {
            "name": "notification",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.setUp": {
            "name": "setUp",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.tearDown": {
            "name": "tearDown",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.test_certonly": {
            "name": "test_certonly",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.test_notify_failed": {
            "name": "test_notify_failed",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "acme-cert-updater-main/tests/unit/__init__.py": {},
    "acme-cert-updater-main/updater/app.py": {
        "log_level": {
            "name": "log_level",
            "location": 25,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "cfn_response": {
            "name": "cfn_response",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "body": [
                    "object"
                ]
            }
        },
        "certonly": {
            "name": "certonly",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "renew": {
            "name": "renew",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "certbot_main": {
            "name": "certbot_main",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "List[str]"
                ]
            }
        },
        "save_cert": {
            "name": "save_cert",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "tmp": [
                    "str"
                ]
            }
        },
        "load_cert": {
            "name": "load_cert",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "tmp": [
                    "str"
                ]
            }
        },
        "get_files": {
            "name": "get_files",
            "location": 315,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "tmp": [
                    "str"
                ],
                "subdir": [
                    "str"
                ]
            }
        },
        "set_files": {
            "name": "set_files",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp": [
                    "str"
                ],
                "subdir": [
                    "str"
                ],
                "config": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "get_renewal_config": {
            "name": "get_renewal_config",
            "location": 333,
            "return": [
                "configobj.ConfigObj"
            ],
            "arguments": {
                "tmp": [
                    "str"
                ],
                "domain": [
                    "str"
                ]
            }
        },
        "set_renewal_config": {
            "name": "set_renewal_config",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp": [
                    "str"
                ],
                "domain": [
                    "str"
                ],
                "config": [
                    "configobj.ConfigObj"
                ]
            }
        },
        "build_key": {
            "name": "build_key",
            "location": 365,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "notify_renewed": {
            "name": "notify_renewed",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "certconfig": [
                    "Dict[(str, Union[(str, Dict[(str, str)])])]"
                ],
                "key": [
                    "str"
                ]
            }
        },
        "notify_failed": {
            "name": "notify_failed",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "err": []
            }
        },
        "needs_init": {
            "name": "needs_init",
            "location": 454,
            "return": [
                "bool"
            ],
            "arguments": {
                "config": []
            }
        },
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 467,
            "return": [],
            "arguments": {
                "event": [
                    "object"
                ],
                "context": [
                    "object"
                ]
            }
        },
        "handle_cfn_custom_resource": {
            "name": "handle_cfn_custom_resource",
            "location": 479,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "object"
                ]
            }
        },
        "handle_event": {
            "name": "handle_event",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "Config"
                ]
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Config._trim_wildcard": {
            "name": "_trim_wildcard",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "domain": [
                    "str"
                ]
            }
        },
        "Config.domains": {
            "name": "domains",
            "location": 80,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.cert_name": {
            "name": "cert_name",
            "location": 85,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.email": {
            "name": "email",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.bucket_name": {
            "name": "bucket_name",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.prefix": {
            "name": "prefix",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.environment": {
            "name": "environment",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.acme_server": {
            "name": "acme_server",
            "location": 109,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.notification": {
            "name": "notification",
            "location": 117,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "mock_atexit.__init__": {
            "name": "__init__",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "mock_atexit.register": {
            "name": "register",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "mock_atexit.atexit_call": {
            "name": "atexit_call",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "mock_atexit.__enter__": {
            "name": "__enter__",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "mock_atexit.__exit__": {
            "name": "__exit__",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "ex_type": [],
                "ex_value": [],
                "trace": []
            }
        }
    },
    "acme-cert-updater-main/updater/__init__.py": {}
}
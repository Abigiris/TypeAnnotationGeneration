{
    "agym-master/setup.py": {},
    "agym-master/agym/agym.py": {
        "run_app": {
            "name": "run_app",
            "location": 186,
            "return": [],
            "arguments": {}
        },
        "GameMonitor.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GameMonitor._try_event": {
            "name": "_try_event",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GameMonitor._check_events": {
            "name": "_check_events",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameMonitor._update_state": {
            "name": "_update_state",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameMonitor._blit": {
            "name": "_blit",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameMonitor.set_game": {
            "name": "set_game",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "IGameEnviroment"
                ]
            }
        },
        "GameMonitor.deactive": {
            "name": "deactive",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameMonitor.run": {
            "name": "run",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/param.py": {},
    "agym-master/agym/__init__.py": {},
    "agym-master/agym/games/abstract.py": {
        "IEvent2ActionMapper.default": {
            "name": "default",
            "location": 11,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IEvent2ActionMapper.map": {
            "name": "map",
            "location": 13,
            "return": [
                "Tuple[(bool, int)]"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "IGameEnviroment.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IGameEnviroment.reset": {
            "name": "reset",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IGameEnviroment.step": {
            "name": "step",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "dt": []
            }
        },
        "IGameEnviroment.get_visual_state": {
            "name": "get_visual_state",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IGameEnviroment.get_flatten_state": {
            "name": "get_flatten_state",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IGameEnviroment.blit": {
            "name": "blit",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "screen": []
            }
        }
    },
    "agym-master/agym/games/__init__.py": {},
    "agym-master/agym/games/breakout/collision.py": {
        "calculate_colls": {
            "name": "calculate_colls",
            "location": 27,
            "return": [],
            "arguments": {
                "wall_rect": [],
                "platform": [],
                "ball": [],
                "blocks": [],
                "dt": []
            }
        },
        "norm": {
            "name": "norm",
            "location": 120,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "normalize": {
            "name": "normalize",
            "location": 127,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "sum_vec": {
            "name": "sum_vec",
            "location": 134,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "make_line": {
            "name": "make_line",
            "location": 139,
            "return": [],
            "arguments": {
                "p1": [],
                "p2": []
            }
        },
        "place_in_line": {
            "name": "place_in_line",
            "location": 146,
            "return": [],
            "arguments": {
                "line": [],
                "point": []
            }
        },
        "collide_seg_seg": {
            "name": "collide_seg_seg",
            "location": 151,
            "return": [],
            "arguments": {
                "first": [],
                "second": []
            }
        },
        "collide_thick_segment_rect": {
            "name": "collide_thick_segment_rect",
            "location": 165,
            "return": [],
            "arguments": {
                "segment": [],
                "rect": [],
                "thick": []
            }
        },
        "collide_circle_rect": {
            "name": "collide_circle_rect",
            "location": 203,
            "return": [],
            "arguments": {
                "circle": [],
                "rect": [],
                "radius": []
            }
        },
        "Collision.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "coll_type": [],
                "point": [],
                "block": []
            }
        },
        "Collision.__str__": {
            "name": "__str__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collision.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/games/breakout/custom_rect.py": {
        "Rect.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "rect": []
            }
        },
        "Rect.as_rect": {
            "name": "as_rect",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Rect.copy": {
            "name": "copy",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Rect.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Rect.top": {
            "name": "top",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "top": []
            }
        },
        "Rect.bottom": {
            "name": "bottom",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "bottom": []
            }
        },
        "Rect.left": {
            "name": "left",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "left": []
            }
        },
        "Rect.right": {
            "name": "right",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "right": []
            }
        },
        "Rect.w": {
            "name": "w",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "Rect.h": {
            "name": "h",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "Rect.centerx": {
            "name": "centerx",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "centerx": []
            }
        },
        "Rect.centery": {
            "name": "centery",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "centery": []
            }
        }
    },
    "agym-master/agym/games/breakout/env.py": {
        "BreakoutEnv.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "env_width": [
                    "int"
                ],
                "env_height": [
                    "int"
                ],
                "map_shape": [
                    "List[int]"
                ],
                "eps": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.center_platform": {
            "name": "center_platform",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.reset": {
            "name": "reset",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.is_done": {
            "name": "is_done",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.lose": {
            "name": "lose",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.win": {
            "name": "win",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.make_target_wall": {
            "name": "make_target_wall",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "n_rows": [
                    "int"
                ],
                "block_width": [
                    "int"
                ],
                "block_height": [
                    "int"
                ],
                "top_shift": [
                    "int"
                ],
                "between_shift": [
                    "int"
                ]
            }
        },
        "BreakoutEnv.step": {
            "name": "step",
            "location": 119,
            "return": [
                "Tuple[(int, bool)]"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "int"
                ],
                "dt": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.get_available_blocks": {
            "name": "get_available_blocks",
            "location": 184,
            "return": [
                "List[Block]"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.perform_ball_coll": {
            "name": "perform_ball_coll",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "BreakoutEnv.perform_colls": {
            "name": "perform_colls",
            "location": 225,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "colls": []
            }
        },
        "BreakoutEnv.real_update": {
            "name": "real_update",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.update_platform": {
            "name": "update_platform",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.update_ball": {
            "name": "update_ball",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "float"
                ]
            }
        },
        "BreakoutEnv.move_ball_on_platform": {
            "name": "move_ball_on_platform",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.throw_ball": {
            "name": "throw_ball",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.intersect": {
            "name": "intersect",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "rect_a": [],
                "rect_b": []
            }
        },
        "BreakoutEnv.build_map": {
            "name": "build_map",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "BreakoutEnv.get_cur_state": {
            "name": "get_cur_state",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.get_visual_state": {
            "name": "get_visual_state",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.get_flatten_state": {
            "name": "get_flatten_state",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BreakoutEnv.blit": {
            "name": "blit",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "screen": []
            }
        },
        "BreakoutEnv.try_event": {
            "name": "try_event",
            "location": 357,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "agym-master/agym/games/breakout/items.py": {
        "Item.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "image_name": [
                    "str"
                ]
            }
        },
        "Item.blit": {
            "name": "blit",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "screen": []
            }
        },
        "Block.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "image_name": [
                    "str"
                ],
                "top": [
                    "int"
                ],
                "left": [
                    "int"
                ]
            }
        },
        "Platform.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "image_name": [],
                "velocity": []
            }
        },
        "Platform.fake_update": {
            "name": "fake_update",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "Platform.freeze": {
            "name": "freeze",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ball.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "image_name": [],
                "radius": [],
                "velocity": []
            }
        },
        "Ball.fake_update": {
            "name": "fake_update",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        }
    },
    "agym-master/agym/games/breakout/manual_model.py": {
        "ManualBreakoutModel.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ManualBreakoutModel.try_event": {
            "name": "try_event",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ManualBreakoutModel.get_action": {
            "name": "get_action",
            "location": 47,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "agym-master/agym/games/breakout/__init__.py": {},
    "agym-master/agym/gui/button.py": {
        "Button.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [],
                "screen": [],
                "surface": [],
                "pos": [],
                "text": [],
                "func": []
            }
        },
        "Button.prep_msg": {
            "name": "prep_msg",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Button.update": {
            "name": "update",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "cursor_pos": []
            }
        },
        "Button.set_selected": {
            "name": "set_selected",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "selected": []
            }
        },
        "Button.blit": {
            "name": "blit",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/gui/check_box.py": {
        "Check_box.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [],
                "screen": [],
                "surface": [],
                "pos": [],
                "value_func": []
            }
        },
        "Check_box.update": {
            "name": "update",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Check_box.blit": {
            "name": "blit",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Check_box_button.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [],
                "screen": [],
                "surface": [],
                "pos": [],
                "text": [],
                "value_func": []
            }
        },
        "Check_box_button.set_selected": {
            "name": "set_selected",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "selected": []
            }
        },
        "Check_box_button.update": {
            "name": "update",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Check_box_button.blit": {
            "name": "blit",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Check_box_button.__init__.value_func": {
            "name": "value_func",
            "location": 49,
            "return": [],
            "arguments": {
                "arg": []
            }
        }
    },
    "agym-master/agym/gui/label.py": {
        "Label.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [],
                "static_text": [],
                "call_func": []
            }
        },
        "Label.prep_text": {
            "name": "prep_text",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.update": {
            "name": "update",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.blit": {
            "name": "blit",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/gui/menu.py": {
        "make_menus": {
            "name": "make_menus",
            "location": 55,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_stop_menu": {
            "name": "make_stop_menu",
            "location": 68,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu": {
            "name": "make_settings_menu",
            "location": 88,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_welcome_menu": {
            "name": "make_welcome_menu",
            "location": 127,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_unit_test_menu": {
            "name": "make_unit_test_menu",
            "location": 151,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "Menu.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [],
                "button_type": [],
                "buttons_name": [],
                "buttons_width": [],
                "func_list": []
            }
        },
        "Menu.update": {
            "name": "update",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Menu.blit": {
            "name": "blit",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "make_stop_menu.continue_game": {
            "name": "continue_game",
            "location": 73,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_stop_menu.settings_button": {
            "name": "settings_button",
            "location": 76,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_stop_menu.exit_button": {
            "name": "exit_button",
            "location": 80,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu.cheat_mode_set": {
            "name": "cheat_mode_set",
            "location": 93,
            "return": [],
            "arguments": {
                "arg": [],
                "value": []
            }
        },
        "make_settings_menu.cheat_mode_get": {
            "name": "cheat_mode_get",
            "location": 95,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu.bot_activate_set": {
            "name": "bot_activate_set",
            "location": 98,
            "return": [],
            "arguments": {
                "arg": [],
                "value": []
            }
        },
        "make_settings_menu.bot_activate_get": {
            "name": "bot_activate_get",
            "location": 103,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu.training_set": {
            "name": "training_set",
            "location": 106,
            "return": [],
            "arguments": {
                "arg": [],
                "value": []
            }
        },
        "make_settings_menu.training_get": {
            "name": "training_get",
            "location": 110,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu.visualising_set": {
            "name": "visualising_set",
            "location": 113,
            "return": [],
            "arguments": {
                "arg": [],
                "value": []
            }
        },
        "make_settings_menu.visualising_get": {
            "name": "visualising_get",
            "location": 115,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_settings_menu.exit_button": {
            "name": "exit_button",
            "location": 118,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_welcome_menu.new_game_c": {
            "name": "new_game_c",
            "location": 132,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_welcome_menu.unit_test_button": {
            "name": "unit_test_button",
            "location": 136,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_welcome_menu.settings_button": {
            "name": "settings_button",
            "location": 139,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_welcome_menu.empty_func": {
            "name": "empty_func",
            "location": 143,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "make_unit_test_menu.exit_func": {
            "name": "exit_func",
            "location": 159,
            "return": [],
            "arguments": {
                "arg": []
            }
        }
    },
    "agym-master/agym/gui/__init__.py": {},
    "agym-master/agym/models/abstract.py": {
        "IModel.get_action": {
            "name": "get_action",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "IModel.try_event": {
            "name": "try_event",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "IQValuesModel.get_qvalues": {
            "name": "get_qvalues",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "states": []
            }
        },
        "IQValuesModel.get_t_qvalues": {
            "name": "get_t_qvalues",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "t_states": []
            }
        },
        "IQValuesModel.parameters": {
            "name": "parameters",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/models/__init__.py": {},
    "agym-master/agym/models/gen_algo/individual.py": {
        "Individual.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.calc_fitness": {
            "name": "calc_fitness",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.crossover": {
            "name": "crossover",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Individual.mutation": {
            "name": "mutation",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/models/gen_algo/model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Model.move": {
            "name": "move",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Model.make_input_vector": {
            "name": "make_input_vector",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Model.dfs": {
            "name": "dfs",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "rect": [],
                "sol": [],
                "x": [],
                "y": [],
                "value": []
            }
        },
        "Model.crossover": {
            "name": "crossover",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "arg": []
            }
        },
        "Model.mutation": {
            "name": "mutation",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Model.init_random": {
            "name": "init_random",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.__str__": {
            "name": "__str__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.__add__": {
            "name": "__add__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "agym-master/agym/models/gen_algo/population.py": {},
    "agym-master/agym/models/manual/model.py": {},
    "agym-master/agym/models/manual/__init__.py": {},
    "agym-master/agym/models/qvalues/conv_model.py": {
        "GlobalMaxPooling.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "dims": []
            }
        },
        "GlobalMaxPooling.forward": {
            "name": "forward",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "ConvQValuesModel.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "n_actions": [
                    "int"
                ],
                "filters_list": [
                    "List[int]"
                ],
                "hidden_units_list": [
                    "List[int]"
                ]
            }
        },
        "ConvQValuesModel.get_t_qvalues": {
            "name": "get_t_qvalues",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "t_states": []
            }
        },
        "ConvQValuesModel.get_qvalues": {
            "name": "get_qvalues",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "states": [
                    "np.ndarray"
                ]
            }
        },
        "ConvQValuesModel.get_action": {
            "name": "get_action",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "np.ndarray"
                ]
            }
        },
        "ConvQValuesModel.parameters": {
            "name": "parameters",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvQValuesModel.try_event": {
            "name": "try_event",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "agym-master/agym/models/qvalues/__init__.py": {},
    "agym-master/agym/model_wrappers/abstract.py": {
        "IModelWrapper.get_action": {
            "name": "get_action",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "IModelWrapper.post_action": {
            "name": "post_action",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "next_state": [],
                "reward": [],
                "is_done": []
            }
        },
        "IModelWrapper.try_event": {
            "name": "try_event",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "agym-master/agym/model_wrappers/__init__.py": {},
    "agym-master/agym/model_wrappers/empty/wrapper.py": {
        "EmptyWrapper.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "model": [
                    "IModel"
                ]
            }
        },
        "EmptyWrapper.get_action": {
            "name": "get_action",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "EmptyWrapper.post_action": {
            "name": "post_action",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "next_state": [],
                "reward": [
                    "int"
                ],
                "is_done": [
                    "int"
                ]
            }
        },
        "EmptyWrapper.try_event": {
            "name": "try_event",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "agym-master/agym/model_wrappers/empty/__init__.py": {},
    "agym-master/agym/model_wrappers/qlearning/replay_buffer.py": {
        "ReplayBuffer.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "ReplayBuffer.__len__": {
            "name": "__len__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReplayBuffer.add": {
            "name": "add",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "obs_t": [],
                "action": [],
                "reward": [],
                "obs_tp1": [],
                "done": []
            }
        },
        "ReplayBuffer._extract_batch": {
            "name": "_extract_batch",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "idxes": []
            }
        },
        "ReplayBuffer.sample": {
            "name": "sample",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "batch_size": []
            }
        }
    },
    "agym-master/agym/model_wrappers/qlearning/sarsa.py": {
        "SarsaWrapper.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "model": [
                    "IQValuesModel"
                ],
                "n_actions": [
                    "int"
                ],
                "eps": [
                    "float"
                ],
                "gamma": [
                    "float"
                ]
            }
        },
        "SarsaWrapper.get_action": {
            "name": "get_action",
            "location": 33,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "SarsaWrapper.post_action": {
            "name": "post_action",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "next_state": [],
                "reward": [
                    "int"
                ],
                "is_done": [
                    "bool"
                ]
            }
        },
        "SarsaWrapper.td_loss": {
            "name": "td_loss",
            "location": 82,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "states": [],
                "actions": [],
                "rewards": [],
                "next_states": [],
                "is_done": []
            }
        },
        "SarsaWrapper.try_event": {
            "name": "try_event",
            "location": 116,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "SarsaWrapper.get_model": {
            "name": "get_model",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/model_wrappers/qlearning/__init__.py": {},
    "agym-master/agym/utils/fps.py": {
        "FPSLimiter.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "max_fps": []
            }
        },
        "FPSLimiter.reset": {
            "name": "reset",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPSLimiter.cicle": {
            "name": "cicle",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/utils/queue.py": {
        "Queue.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.__iter__": {
            "name": "__iter__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.push": {
            "name": "push",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Queue.pop": {
            "name": "pop",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.tail": {
            "name": "tail",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.front": {
            "name": "front",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/utils/timemanager.py": {
        "Timemanager.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "length": []
            }
        },
        "Timemanager.sing_up": {
            "name": "sing_up",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "name1": [],
                "name2": [],
                "description": []
            }
        },
        "Timemanager.write_down": {
            "name": "write_down",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Timemanager.get_sibscriber": {
            "name": "get_sibscriber",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "description": [],
                "relative": [],
                "get_count": []
            }
        },
        "Timemanager.get_full_time": {
            "name": "get_full_time",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timemanager.update_sing_ups": {
            "name": "update_sing_ups",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "agym-master/agym/utils/__init__.py": {}
}
{
    "aioorm-master/setup.py": {},
    "aioorm-master/aioorm/context.py": {
        "_aio_callable_context_manager.__call__": {
            "name": "__call__",
            "location": 6,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "fn": [
                    "Callable"
                ]
            }
        }
    },
    "aioorm-master/aioorm/database.py": {
        "AioDatabase.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "database": [],
                "autocommit": [],
                "fields": [],
                "ops": [],
                "autorollback": []
            }
        },
        "AioDatabase.is_closed": {
            "name": "is_closed",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioDatabase.get_result_wrapper": {
            "name": "get_result_wrapper",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "wrapper_type": []
            }
        },
        "AioDatabase.set_autocommit": {
            "name": "set_autocommit",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "autocommit": []
            }
        },
        "AioDatabase.get_autocommit": {
            "name": "get_autocommit",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioDatabase.transaction": {
            "name": "transaction",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "transaction_type": []
            }
        },
        "AioDatabase.savepoint": {
            "name": "savepoint",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "sid": []
            }
        },
        "AioDatabase.atomic": {
            "name": "atomic",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "transaction_type": []
            }
        },
        "AioDatabase.extract_date": {
            "name": "extract_date",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "date_part": [],
                "date_field": []
            }
        },
        "AioDatabase.truncate_date": {
            "name": "truncate_date",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "date_part": [],
                "date_field": []
            }
        },
        "AioDatabase.default_insert_clause": {
            "name": "default_insert_clause",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "model_class": []
            }
        },
        "AioDatabase.get_noop_sql": {
            "name": "get_noop_sql",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioDatabase.get_binary_type": {
            "name": "get_binary_type",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/aioorm/model.py": {
        "AioModelAlias.select": {
            "name": "select",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioModelAlias.__iter__": {
            "name": "__iter__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioModel.__iter__": {
            "name": "__iter__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioModel.alias": {
            "name": "alias",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AioModel.select": {
            "name": "select",
            "location": 30,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AioModel.update": {
            "name": "update",
            "location": 37,
            "return": [],
            "arguments": {
                "cls": [],
                "__data": []
            }
        },
        "AioModel.insert": {
            "name": "insert",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [],
                "__data": []
            }
        },
        "AioModel.insert_many": {
            "name": "insert_many",
            "location": 49,
            "return": [],
            "arguments": {
                "cls": [],
                "rows": [],
                "validate_fields": []
            }
        },
        "AioModel.insert_from": {
            "name": "insert_from",
            "location": 53,
            "return": [],
            "arguments": {
                "cls": [],
                "fields": [],
                "query": []
            }
        },
        "AioModel.delete": {
            "name": "delete",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AioModel.raw": {
            "name": "raw",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": [],
                "sql": []
            }
        },
        "AioModel.noop": {
            "name": "noop",
            "location": 170,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "aioorm-master/aioorm/mysql.py": {
        "AioMySQLDatabase.set_autocommit": {
            "name": "set_autocommit",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "autocommit": []
            }
        },
        "AioMySQLDatabase.get_autocommit": {
            "name": "get_autocommit",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioMySQLDatabase.transaction": {
            "name": "transaction",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "transaction_type": []
            }
        },
        "AioMySQLDatabase.savepoint": {
            "name": "savepoint",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "sid": []
            }
        },
        "AioMySQLDatabase.atomic": {
            "name": "atomic",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "transaction_type": []
            }
        },
        "AioMySQLDatabase.get_binary_type": {
            "name": "get_binary_type",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/aioorm/postgresql.py": {
        "AioPostgreSQLDatabase.get_binary_type": {
            "name": "get_binary_type",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/aioorm/query.py": {
        "AioQuery.__await__": {
            "name": "__await__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioQuery.__iter__": {
            "name": "__iter__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.compound_op": {
            "name": "compound_op",
            "location": 60,
            "return": [],
            "arguments": {
                "operator": []
            }
        },
        "AioSelectQuery.__await__": {
            "name": "__await__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.sql": {
            "name": "sql",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.__aiter__": {
            "name": "__aiter__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.__getitem__": {
            "name": "__getitem__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AioSelectQuery.__len__": {
            "name": "__len__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.__hash__": {
            "name": "__hash__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioSelectQuery.compound_op.inner": {
            "name": "inner",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "aioorm-master/aioorm/result.py": {
        "AioResultIterator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "qrw": []
            }
        },
        "AioQueryResultWrapper.__await__": {
            "name": "__await__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioQueryResultWrapper.count": {
            "name": "count",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioQueryResultWrapper.__len__": {
            "name": "__len__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioQueryResultWrapper.iterator": {
            "name": "iterator",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioAggregateQueryResultWrapper.iterate._get_pk": {
            "name": "_get_pk",
            "location": 157,
            "return": [],
            "arguments": {
                "instance": []
            }
        }
    },
    "aioorm-master/aioorm/shortcuts.py": {},
    "aioorm-master/aioorm/uri_parser.py": {
        "check_scheme": {
            "name": "check_scheme",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "scheme": [
                    "Optional[str]"
                ]
            }
        },
        "check_netloc": {
            "name": "check_netloc",
            "location": 42,
            "return": [
                "Tuple[(Optional[str], Optional[str], Optional[str], Optional[str])]"
            ],
            "arguments": {
                "parse_result": [
                    "ParseResult"
                ],
                "scheme": [
                    "str"
                ]
            }
        },
        "check_path": {
            "name": "check_path",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "check_query": {
            "name": "check_query",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        },
        "parser": {
            "name": "parser",
            "location": 67,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "uri": [
                    "str"
                ]
            }
        }
    },
    "aioorm-master/aioorm/__init__.py": {},
    "aioorm-master/aioorm/error/uri_error.py": {},
    "aioorm-master/aioorm/error/__init__.py": {},
    "aioorm-master/aioorm/fields/many_to_many_fields.py": {
        "AioManyToManyField._get_descriptor": {
            "name": "_get_descriptor",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioManyToManyField.add_to_class": {
            "name": "add_to_class",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "model_class": [],
                "name": []
            }
        },
        "AioManyToManyField.get_through_model": {
            "name": "get_through_model",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioManyToManyFieldDescriptor.__get__": {
            "name": "__get__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "instance_type": []
            }
        },
        "AioManyToManyFieldDescriptor.__set__": {
            "name": "__set__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "value": []
            }
        },
        "AioManyToManyQuery._id_list": {
            "name": "_id_list",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "model_or_id_list": []
            }
        },
        "AioManyToManyField.add_to_class.callback": {
            "name": "callback",
            "location": 17,
            "return": [],
            "arguments": {
                "through_model": []
            }
        }
    },
    "aioorm-master/aioorm/fields/__init__.py": {},
    "aioorm-master/aioorm/utils/factory_utils.py": {
        "AioDbFactory": {
            "name": "AioDbFactory",
            "location": 15,
            "return": [
                "AnyDb@@AioMySQLDatabase@@AioPostgreSQLDatabase@@"
            ],
            "arguments": {
                "uri": [
                    "str"
                ]
            }
        }
    },
    "aioorm-master/aioorm/utils/__init__.py": {},
    "aioorm-master/aioorm/utils/csv_utils/csv_dump.py": {
        "csv_writer.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "fh": [],
                "fieldnames": [],
                "delimiter": []
            }
        }
    },
    "aioorm-master/aioorm/utils/csv_utils/csv_loader.py": {
        "convert_field": {
            "name": "convert_field",
            "location": 62,
            "return": [],
            "arguments": {
                "field_class": []
            }
        },
        "Reader.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "fh": [],
                "delimiter": []
            }
        },
        "Reader.__aiter__": {
            "name": "__aiter__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Get_Reader.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "file_or_name": []
            }
        },
        "_CSVReader.get_reader": {
            "name": "get_reader",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "file_or_name": []
            }
        },
        "convert_field.decorator": {
            "name": "decorator",
            "location": 63,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "RowConverter.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "database": [],
                "has_header": [],
                "sample_size": []
            }
        },
        "RowConverter.matches_date": {
            "name": "matches_date",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "formats": []
            }
        },
        "RowConverter.is_integer": {
            "name": "is_integer",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RowConverter.is_float": {
            "name": "is_float",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RowConverter.is_datetime": {
            "name": "is_datetime",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RowConverter.is_date": {
            "name": "is_date",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RowConverter.default": {
            "name": "default",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RowConverter.get_checks": {
            "name": "get_checks",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RowConverter.analyze": {
            "name": "analyze",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "rows": []
            }
        },
        "Loader.__init__": {
            "name": "__init__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "db_or_model": [],
                "file_or_name": [],
                "fields": [],
                "field_names": [],
                "has_header": [],
                "sample_size": [],
                "converter": [],
                "db_table": [],
                "pk_in_csv": []
            }
        },
        "Loader.clean_field_name": {
            "name": "clean_field_name",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Loader.get_converter": {
            "name": "get_converter",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loader.analyze_csv": {
            "name": "analyze_csv",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loader.get_model_class": {
            "name": "get_model_class",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "field_names": [],
                "fields": []
            }
        }
    },
    "aioorm-master/aioorm/utils/csv_utils/__init__.py": {},
    "aioorm-master/document/conf.py": {
        "setup": {
            "name": "setup",
            "location": 77,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "aioorm-master/test/test_db_factory.py": {
        "AioDbFactoryTest.test_mysql": {
            "name": "test_mysql",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioDbFactoryTest.test_Postgre": {
            "name": "test_Postgre",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioDbFactoryTest.test_Failure": {
            "name": "test_Failure",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/test_manytomany.py": {
        "ManyToManyMysqlTest.setUpClass": {
            "name": "setUpClass",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ManyToManyMysqlTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ManyToManyMysqlTest.test_mtm": {
            "name": "test_mtm",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ManyToManyPostgreSQLTest.setUpClass": {
            "name": "setUpClass",
            "location": 101,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ManyToManyPostgreSQLTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 110,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ManyToManyPostgreSQLTest.test_mtm": {
            "name": "test_mtm",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/test_model.py": {
        "User.prepared": {
            "name": "prepared",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Blog.prepared": {
            "name": "prepared",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.setUpClass": {
            "name": "setUpClass",
            "location": 329,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelMysqlTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 338,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelMysqlTest.test_table_creation": {
            "name": "test_table_creation",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_crud": {
            "name": "test_crud",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_query": {
            "name": "test_query",
            "location": 349,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_select": {
            "name": "test_select",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_select_all": {
            "name": "test_select_all",
            "location": 355,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_select_all_fetchall": {
            "name": "test_select_all_fetchall",
            "location": 358,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_insert": {
            "name": "test_insert",
            "location": 361,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_insert_many": {
            "name": "test_insert_many",
            "location": 364,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_delete": {
            "name": "test_delete",
            "location": 367,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_related_name": {
            "name": "test_related_name",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_saving": {
            "name": "test_saving",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_get": {
            "name": "test_get",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_get_or_create": {
            "name": "test_get_or_create",
            "location": 379,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.setUpClass": {
            "name": "setUpClass",
            "location": 385,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelPostgreSQLTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 394,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelPostgreSQLTest.test_table_creation": {
            "name": "test_table_creation",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_crud": {
            "name": "test_crud",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_query": {
            "name": "test_query",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_select": {
            "name": "test_select",
            "location": 408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_select_all": {
            "name": "test_select_all",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_select_all_fetchall": {
            "name": "test_select_all_fetchall",
            "location": 414,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_insert": {
            "name": "test_insert",
            "location": 417,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_insert_many": {
            "name": "test_insert_many",
            "location": 420,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_delete": {
            "name": "test_delete",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_related_name": {
            "name": "test_related_name",
            "location": 426,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_saving": {
            "name": "test_saving",
            "location": 429,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_get": {
            "name": "test_get",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_get_or_create": {
            "name": "test_get_or_create",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/test_scv.py": {
        "User_csv_f.__repr__": {
            "name": "__repr__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.setUpClass": {
            "name": "setUpClass",
            "location": 119,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelMysqlTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 128,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelMysqlTest.test_csv_dump": {
            "name": "test_csv_dump",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelMysqlTest.test_csv_load": {
            "name": "test_csv_load",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.setUpClass": {
            "name": "setUpClass",
            "location": 143,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelPostgreSQLTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 152,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ModelPostgreSQLTest.test_csv_dump": {
            "name": "test_csv_dump",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPostgreSQLTest.test_csv_load": {
            "name": "test_csv_load",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/test_shortcuts.py": {
        "ShortCutMysqlTest.setUpClass": {
            "name": "setUpClass",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ShortCutMysqlTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 116,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ShortCutMysqlTest.test_simple_recurse": {
            "name": "test_simple_recurse",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShortCutMysqlTest.test_model_to_dict": {
            "name": "test_model_to_dict",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShortCutPostgreSQLTest.setUpClass": {
            "name": "setUpClass",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ShortCutPostgreSQLTest.tearDownClass": {
            "name": "tearDownClass",
            "location": 138,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ShortCutPostgreSQLTest.test_simple_recurse": {
            "name": "test_simple_recurse",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShortCutPostgreSQLTest.test_model_to_dict": {
            "name": "test_model_to_dict",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/test_uri_parse.py": {
        "MysqlURITest.test_mysql": {
            "name": "test_mysql",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host": {
            "name": "test_mysql_host",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_port": {
            "name": "test_mysql_port",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_user": {
            "name": "test_mysql_user",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_password": {
            "name": "test_mysql_password",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host_port": {
            "name": "test_mysql_host_port",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_user_pass": {
            "name": "test_mysql_user_pass",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_user_host": {
            "name": "test_mysql_user_host",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_user_port": {
            "name": "test_mysql_user_port",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host__pass": {
            "name": "test_mysql_host__pass",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_port_pass": {
            "name": "test_mysql_port_pass",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_port_user_pass": {
            "name": "test_mysql_port_user_pass",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host_user_pass": {
            "name": "test_mysql_host_user_pass",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host_port_pass": {
            "name": "test_mysql_host_port_pass",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host_port_user": {
            "name": "test_mysql_host_port_user",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MysqlURITest.test_mysql_host_port_user_pass": {
            "name": "test_mysql_host_port_user_pass",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.setUp": {
            "name": "setUp",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql": {
            "name": "test_postgresql",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host": {
            "name": "test_postgresql_host",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_port": {
            "name": "test_postgresql_port",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_user": {
            "name": "test_postgresql_user",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_password": {
            "name": "test_postgresql_password",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host_port": {
            "name": "test_postgresql_host_port",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_user_pass": {
            "name": "test_postgresql_user_pass",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_user_host": {
            "name": "test_postgresql_user_host",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_user_port": {
            "name": "test_postgresql_user_port",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host__pass": {
            "name": "test_postgresql_host__pass",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_port_pass": {
            "name": "test_postgresql_port_pass",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_port_user_pass": {
            "name": "test_postgresql_port_user_pass",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host_user_pass": {
            "name": "test_postgresql_host_user_pass",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host_port_pass": {
            "name": "test_postgresql_host_port_pass",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host_port_user": {
            "name": "test_postgresql_host_port_user",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresqlURITest.test_postgresql_host_port_user_pass": {
            "name": "test_postgresql_host_port_user_pass",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserErrorTest.test_unknow_scheme": {
            "name": "test_unknow_scheme",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserErrorTest.test_without_datebase": {
            "name": "test_without_datebase",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserErrorTest.test_without_scheme": {
            "name": "test_without_scheme",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserErrorTest.test_not_a_scheme": {
            "name": "test_not_a_scheme",
            "location": 360,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioorm-master/test/__init__.py": {}
}
{
    "aiotk-master/setup.py": {
        "readfile": {
            "name": "readfile",
            "location": 7,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "aiotk-master/docs/conf.py": {},
    "aiotk-master/src/aiotk/_cancel.py": {},
    "aiotk-master/src/aiotk/_io.py": {
        "reader": {
            "name": "reader",
            "location": 12,
            "return": [
                "Iterator[None]"
            ],
            "arguments": {
                "fd": [],
                "callback": [
                    "Callable"
                ],
                "loop": [
                    "Optional[AbstractEventLoop]"
                ]
            }
        }
    },
    "aiotk-master/src/aiotk/_mempipe.py": {
        "mempipe": {
            "name": "mempipe",
            "location": 41,
            "return": [
                "Tuple[(StreamReader, StreamWriter)]"
            ],
            "arguments": {
                "loop": [
                    "Optional[AbstractEventLoop]"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "_MemoryTransport.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reader": [
                    "StreamReader"
                ]
            }
        },
        "_MemoryTransport.write": {
            "name": "write",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "_MemoryTransport.writelines": {
            "name": "writelines",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Iterable[bytes]"
                ]
            }
        },
        "_MemoryTransport.write_eof": {
            "name": "write_eof",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_MemoryTransport.can_write_eof": {
            "name": "can_write_eof",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_MemoryTransport.is_closing": {
            "name": "is_closing",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_MemoryTransport.close": {
            "name": "close",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotk-master/src/aiotk/_monkey.py": {
        "monkey_patch": {
            "name": "monkey_patch",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "aiotk-master/src/aiotk/_pool.py": {
        "TaskPool.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": [
                    "Optional[AbstractEventLoop]"
                ]
            }
        },
        "TaskPool.start": {
            "name": "start",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TaskPool.close": {
            "name": "close",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotk-master/src/aiotk/_posix.py": {
        "handle_ctrlc": {
            "name": "handle_ctrlc",
            "location": 25,
            "return": [
                "Iterator[None]"
            ],
            "arguments": {
                "f": [
                    "Future"
                ],
                "loop": []
            }
        },
        "handle_ctrlc.handler": {
            "name": "handler",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "UnixSocketServer.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ],
                "loop": [
                    "Optional[AbstractEventLoop]"
                ]
            }
        },
        "UnixSocketServer.path": {
            "name": "path",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnixSocketServer.start": {
            "name": "start",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnixSocketServer.close": {
            "name": "close",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnixSocketServer._client_connected": {
            "name": "_client_connected",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reader": [
                    "StreamReader"
                ],
                "writer": [
                    "StreamWriter"
                ]
            }
        }
    },
    "aiotk-master/src/aiotk/_sched.py": {
        "PeriodicTask.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable"
                ],
                "interval": [
                    "float"
                ],
                "loop": [
                    "Optional[AbstractEventLoop]"
                ]
            }
        }
    },
    "aiotk-master/src/aiotk/_stack.py": {
        "EnsureDone.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coro": [
                    "Awaitable"
                ],
                "cancel": [],
                "loop": []
            }
        },
        "AsyncExitStack.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotk-master/src/aiotk/_tcp.py": {
        "_effective_bind_port": {
            "name": "_effective_bind_port",
            "location": 19,
            "return": [
                "int"
            ],
            "arguments": {
                "server": [
                    "SocketServer"
                ]
            }
        },
        "TCPServer.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "port": [
                    "int"
                ],
                "callback": [
                    "Callable"
                ],
                "loop": []
            }
        },
        "TCPServer.host": {
            "name": "host",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPServer.port": {
            "name": "port",
            "location": 105,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPServer.start": {
            "name": "start",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPServer.close": {
            "name": "close",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPServer._client_connected": {
            "name": "_client_connected",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "reader": [
                    "StreamReader"
                ],
                "writer": [
                    "StreamWriter"
                ]
            }
        }
    },
    "aiotk-master/src/aiotk/_testing.py": {
        "call_with_minimal_args": {
            "name": "call_with_minimal_args",
            "location": 33,
            "return": [],
            "arguments": {
                "f": [
                    "Callable"
                ]
            }
        },
        "mock_subprocess": {
            "name": "mock_subprocess",
            "location": 229,
            "return": [
                "Iterator[None]"
            ],
            "arguments": {
                "run": [
                    "Callable"
                ],
                "loop": [
                    "Optional[AbstractEventLoop]"
                ]
            }
        },
        "OutputStreamAdapter.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "TextIO"
                ]
            }
        },
        "OutputStreamAdapter.write": {
            "name": "write",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "OutputStreamAdapter.writelines": {
            "name": "writelines",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "Iterable[bytes]"
                ]
            }
        },
        "OutputStreamAdapter.can_write_eof": {
            "name": "can_write_eof",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputStreamAdapter.write_eof": {
            "name": "write_eof",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.pid": {
            "name": "pid",
            "location": 154,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.stdin": {
            "name": "stdin",
            "location": 158,
            "return": [
                "Optional[StreamWriter]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.stdout": {
            "name": "stdout",
            "location": 162,
            "return": [
                "Optional[StreamReader]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.stderr": {
            "name": "stderr",
            "location": 166,
            "return": [
                "Optional[StreamReader]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.send_signal": {
            "name": "send_signal",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "signal": [
                    "int"
                ]
            }
        },
        "Process.terminate": {
            "name": "terminate",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.kill": {
            "name": "kill",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.returncode": {
            "name": "returncode",
            "location": 224,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "mock_subprocess.create_subprocess_exec": {
            "name": "create_subprocess_exec",
            "location": 266,
            "return": [],
            "arguments": {}
        }
    },
    "aiotk-master/src/aiotk/_typing.py": {
        "Server.close": {
            "name": "close",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketServer.sockets": {
            "name": "sockets",
            "location": 22,
            "return": [
                "List[Any]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotk-master/src/aiotk/_udp.py": {
        "udp_socket": {
            "name": "udp_socket",
            "location": 21,
            "return": [
                "Iterator[socket]"
            ],
            "arguments": {
                "host": [
                    "str"
                ],
                "port": [
                    "int"
                ]
            }
        },
        "udp_reader": {
            "name": "udp_reader",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "socket"
                ],
                "iqueue": [
                    "Queue"
                ],
                "size": [
                    "int"
                ]
            }
        }
    },
    "aiotk-master/src/aiotk/__init__.py": {
        "run_until_complete": {
            "name": "run_until_complete",
            "location": 33,
            "return": [],
            "arguments": {
                "coro": [
                    "Awaitable"
                ],
                "loop": [
                    "AbstractEventLoop"
                ]
            }
        }
    },
    "aiotk-master/tests/conftest.py": {
        "cwd": {
            "name": "cwd",
            "location": 14,
            "return": [],
            "arguments": {
                "new_cwd": []
            }
        },
        "tempdir": {
            "name": "tempdir",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "tempcwd": {
            "name": "tempcwd",
            "location": 35,
            "return": [],
            "arguments": {
                "tempdir": []
            }
        },
        "monkey": {
            "name": "monkey",
            "location": 43,
            "return": [],
            "arguments": {}
        }
    },
    "aiotk-master/tests/test_cancel.py": {},
    "aiotk-master/tests/test_ensure_done.py": {},
    "aiotk-master/tests/test_mempipe.py": {},
    "aiotk-master/tests/test_monkey.py": {
        "test_readuntil": {
            "name": "test_readuntil",
            "location": 4,
            "return": [],
            "arguments": {
                "monkey": []
            }
        }
    },
    "aiotk-master/tests/test_periodic_task.py": {
        "make_success": {
            "name": "make_success",
            "location": 13,
            "return": [],
            "arguments": {
                "result": [],
                "loop": []
            }
        }
    },
    "aiotk-master/tests/test_pool.py": {},
    "aiotk-master/tests/test_posix.py": {},
    "aiotk-master/tests/test_run.py": {
        "test_run_until_complete_success_coro": {
            "name": "test_run_until_complete_success_coro",
            "location": 11,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "test_run_until_complete_success_task": {
            "name": "test_run_until_complete_success_task",
            "location": 21,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "test_run_until_complete_failure": {
            "name": "test_run_until_complete_failure",
            "location": 32,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "test_run_until_complete_interrupted": {
            "name": "test_run_until_complete_interrupted",
            "location": 45,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "test_run_until_complete_interrupted_override": {
            "name": "test_run_until_complete_interrupted_override",
            "location": 70,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        }
    },
    "aiotk-master/tests/test_stack_async.py": {
        "AutoClose.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "h": [],
                "v": [],
                "suppress": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__enter__": {
            "name": "__enter__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__exit__": {
            "name": "__exit__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "etype": [],
                "val": [],
                "tb": []
            }
        }
    },
    "aiotk-master/tests/test_stack_ref.py": {
        "test_exit_stack_noop": {
            "name": "test_exit_stack_noop",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_exit_stack": {
            "name": "test_exit_stack",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_exit_stack_exception_propagate": {
            "name": "test_exit_stack_exception_propagate",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "test_exit_stack_exception_suppress": {
            "name": "test_exit_stack_exception_suppress",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_exit_stack_exception_substitution": {
            "name": "test_exit_stack_exception_substitution",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "AutoClose.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "h": [],
                "v": [],
                "suppress": []
            }
        },
        "AutoClose.__enter__": {
            "name": "__enter__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AutoClose.__exit__": {
            "name": "__exit__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "etype": [],
                "val": [],
                "tb": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__enter__": {
            "name": "__enter__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__exit__": {
            "name": "__exit__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "etype": [],
                "val": [],
                "tb": []
            }
        }
    },
    "aiotk-master/tests/test_stack_sync.py": {
        "AutoClose.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "h": [],
                "v": [],
                "suppress": []
            }
        },
        "AutoClose.__enter__": {
            "name": "__enter__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AutoClose.__exit__": {
            "name": "__exit__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "etype": [],
                "val": [],
                "tb": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__enter__": {
            "name": "__enter__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_exit_stack_exception_substitution.FailingAutoClose.__exit__": {
            "name": "__exit__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "etype": [],
                "val": [],
                "tb": []
            }
        }
    },
    "aiotk-master/tests/test_tcp.py": {
        "Echo.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Echo.connection_made": {
            "name": "connection_made",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "Echo.data_received": {
            "name": "data_received",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Echo.connection_lost": {
            "name": "connection_lost",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        }
    },
    "aiotk-master/tests/test_testing.py": {
        "test_output_stream_adapter": {
            "name": "test_output_stream_adapter",
            "location": 449,
            "return": [],
            "arguments": {}
        },
        "test_output_stream_adapter_writelines": {
            "name": "test_output_stream_adapter_writelines",
            "location": 457,
            "return": [],
            "arguments": {}
        }
    },
    "aiotk-master/tests/test_udp.py": {}
}
{
    "airbnb_clone-master/create_database.py": {},
    "airbnb_clone-master/load_database.py": {},
    "airbnb_clone-master/manage.py": {},
    "airbnb_clone-master/airbnb/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "airbnb_clone-master/airbnb/views.py": {
        "ReactAppView.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "airbnb_clone-master/airbnb/__init__.py": {},
    "airbnb_clone-master/airbnb/contrib/__init__.py": {},
    "airbnb_clone-master/airbnb/contrib/sites/__init__.py": {},
    "airbnb_clone-master/airbnb/contrib/sites/migrations/0001_initial.py": {},
    "airbnb_clone-master/airbnb/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "airbnb_clone-master/airbnb/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "airbnb_clone-master/airbnb/contrib/sites/migrations/__init__.py": {},
    "airbnb_clone-master/airbnb/rooms/admin.py": {},
    "airbnb_clone-master/airbnb/rooms/apps.py": {},
    "airbnb_clone-master/airbnb/rooms/models.py": {
        "Room.review_count": {
            "name": "review_count",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Room.rating": {
            "name": "rating",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Room.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Amenity.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Review.__str__": {
            "name": "__str__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RoomPhoto.__str__": {
            "name": "__str__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reservation.__str__": {
            "name": "__str__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/rooms/serializers.py": {
        "ReviewSerializer.get_is_own": {
            "name": "get_is_own",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "airbnb_clone-master/airbnb/rooms/tests.py": {},
    "airbnb_clone-master/airbnb/rooms/urls.py": {},
    "airbnb_clone-master/airbnb/rooms/views.py": {
        "Rooms.get_queryset": {
            "name": "get_queryset",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Rooms.list": {
            "name": "list",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Rooms.get_average_price": {
            "name": "get_average_price",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "rooms": []
            }
        },
        "Rooms.get_average_rating": {
            "name": "get_average_rating",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "rooms": []
            }
        },
        "Rooms.get_total_reviews": {
            "name": "get_total_reviews",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "rooms": []
            }
        },
        "RoomDetail.get": {
            "name": "get",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": []
            }
        },
        "RoomReviews.get": {
            "name": "get",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": []
            }
        },
        "RoomReviews.post": {
            "name": "post",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": []
            }
        },
        "RoomReview.get": {
            "name": "get",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": [],
                "review_id": []
            }
        },
        "RoomReview.delete": {
            "name": "delete",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": [],
                "review_id": []
            }
        },
        "RoomReservation.post": {
            "name": "post",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "room_id": []
            }
        },
        "RoomReservation.get": {
            "name": "get",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "_": [],
                "room_id": []
            }
        }
    },
    "airbnb_clone-master/airbnb/rooms/__init__.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0001_initial.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0002_auto_20190601_1445.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0003_auto_20190601_1447.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0004_auto_20190601_1520.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0005_auto_20190601_1710.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0006_auto_20190601_2247.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0007_auto_20190601_2253.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0008_room_location.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0009_room_type.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0010_auto_20190603_2251.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0011_auto_20190603_2253.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0012_auto_20190607_2259.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0013_auto_20190607_2309.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0014_review_rating.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0015_remove_room_rating.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0016_auto_20190612_2043.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0017_auto_20190612_2044.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0018_auto_20190612_2117.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0019_auto_20190613_2338.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/0020_reservation.py": {},
    "airbnb_clone-master/airbnb/rooms/migrations/__init__.py": {},
    "airbnb_clone-master/airbnb/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ],
                "sociallogin": [
                    "Any"
                ]
            }
        }
    },
    "airbnb_clone-master/airbnb/users/admin.py": {},
    "airbnb_clone-master/airbnb/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/serializers.py": {},
    "airbnb_clone-master/airbnb/users/urls.py": {},
    "airbnb_clone-master/airbnb/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserReservationView.get": {
            "name": "get",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/__init__.py": {},
    "airbnb_clone-master/airbnb/users/management/__init__.py": {},
    "airbnb_clone-master/airbnb/users/management/commands/ebuser.py": {
        "Command.handle": {
            "name": "handle",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/management/commands/__init__.py": {},
    "airbnb_clone-master/airbnb/users/migrations/0001_initial.py": {},
    "airbnb_clone-master/airbnb/users/migrations/0002_user_profile_image.py": {},
    "airbnb_clone-master/airbnb/users/migrations/__init__.py": {},
    "airbnb_clone-master/airbnb/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [
                    "bool"
                ],
                "extracted": [
                    "Sequence[Any]"
                ]
            }
        }
    },
    "airbnb_clone-master/airbnb/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "airbnb_clone-master/airbnb/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "airbnb_clone-master/airbnb/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 21,
            "return": [],
            "arguments": {}
        }
    },
    "airbnb_clone-master/airbnb/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        }
    },
    "airbnb_clone-master/airbnb/users/tests/__init__.py": {},
    "airbnb_clone-master/config/urls.py": {},
    "airbnb_clone-master/config/wsgi.py": {},
    "airbnb_clone-master/config/__init__.py": {},
    "airbnb_clone-master/config/settings/base.py": {},
    "airbnb_clone-master/config/settings/local.py": {},
    "airbnb_clone-master/config/settings/production.py": {
        "StaticRootS3BotoStorage": {
            "name": "StaticRootS3BotoStorage",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "MediaRootS3BotoStorage": {
            "name": "MediaRootS3BotoStorage",
            "location": 86,
            "return": [],
            "arguments": {}
        }
    },
    "airbnb_clone-master/config/settings/test.py": {},
    "airbnb_clone-master/config/settings/__init__.py": {},
    "airbnb_clone-master/crawling/rooms.py": {},
    "airbnb_clone-master/crawling/room_detail.py": {},
    "airbnb_clone-master/crawling/room_price.py": {}
}
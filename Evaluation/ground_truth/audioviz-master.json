{
    "audioviz-master/audioviz/audio_tools.py": {
        "LoopingThread.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread.loop": {
            "name": "loop",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread.setup": {
            "name": "setup",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread.tear_down": {
            "name": "tear_down",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread._maybe_wait": {
            "name": "_maybe_wait",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread.run": {
            "name": "run",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopingThread.stop": {
            "name": "stop",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioInput.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sample_rate": [],
                "period_size": [],
                "buffer_size": [],
                "max_loop_frequency": []
            }
        },
        "AudioInput._clear_buffer": {
            "name": "_clear_buffer",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioInput.loop": {
            "name": "loop",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioInput.get_samples": {
            "name": "get_samples",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "num_samples": []
            }
        },
        "AudioInput.get_data": {
            "name": "get_data",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "length": []
            }
        },
        "AudioInput.seconds_to_samples": {
            "name": "seconds_to_samples",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "seconds": []
            }
        }
    },
    "audioviz-master/audioviz/a_weighting_table.py": {},
    "audioviz-master/audioviz/nodes.py": {
        "ContiniuousVolumeNormalizer.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "min_threshold": [],
                "falloff": []
            }
        },
        "ContiniuousVolumeNormalizer._update_threshold": {
            "name": "_update_threshold",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "max_sample": [],
                "timestamp": []
            }
        },
        "ContiniuousVolumeNormalizer.normalize": {
            "name": "normalize",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "signal": [],
                "timestamp": []
            }
        },
        "PlottableNode.setup": {
            "name": "setup",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "monitor_client": []
            }
        },
        "PlottableNode.plot": {
            "name": "plot",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PlottableNode.emit": {
            "name": "emit",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AudioGenerator.setup": {
            "name": "setup",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "audio_input": [],
                "samples": [],
                "monitor_client": [],
                "time_delta": []
            }
        },
        "AudioGenerator.run": {
            "name": "run",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Hamming.setup": {
            "name": "setup",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "samples": [],
                "monitor_client": []
            }
        },
        "Hamming.run": {
            "name": "run",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "FastFourierTransform.setup": {
            "name": "setup",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "samples": [],
                "sample_delta": [],
                "monitor_client": []
            }
        },
        "FastFourierTransform.run": {
            "name": "run",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "OctaveSubsampler.setup": {
            "name": "setup",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "start_octave": [],
                "samples_per_octave": [],
                "num_octaves": [],
                "frequencies": [],
                "monitor_client": []
            }
        },
        "OctaveSubsampler.run": {
            "name": "run",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ExponentialSubsampler.setup": {
            "name": "setup",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "start_frequency": [],
                "stop_frequency": [],
                "samples": [],
                "frequencies": [],
                "monitor_client": []
            }
        },
        "ExponentialSubsampler.run": {
            "name": "run",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AWeighting.setup": {
            "name": "setup",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "frequencies": [],
                "monitor_client": []
            }
        },
        "AWeighting.run": {
            "name": "run",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Square.run": {
            "name": "run",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "FoldingNode.setup": {
            "name": "setup",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "samples_per_octave": [],
                "monitor_client": []
            }
        },
        "FoldingNode.run": {
            "name": "run",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SumMatrixVertical.run": {
            "name": "run",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "MaxMatrixVertical.run": {
            "name": "run",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Mirror.setup": {
            "name": "setup",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "reverse": [],
                "monitor_client": []
            }
        },
        "Mirror.run": {
            "name": "run",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Roll.setup": {
            "name": "setup",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "shift": [],
                "monitor_client": []
            }
        },
        "Roll.run": {
            "name": "run",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Logarithm.setup": {
            "name": "setup",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "i_0": [],
                "monitor_client": []
            }
        },
        "Logarithm.run": {
            "name": "run",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Normalizer.setup": {
            "name": "setup",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "min_threshold": [],
                "falloff": [],
                "monitor_client": []
            }
        },
        "Normalizer.run": {
            "name": "run",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Fade.setup": {
            "name": "setup",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "falloff": [],
                "monitor_client": []
            }
        },
        "Fade.run": {
            "name": "run",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Shift.setup": {
            "name": "setup",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "minimum": [],
                "maximum": []
            }
        },
        "Shift.run": {
            "name": "run",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Star.setup": {
            "name": "setup",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "ip_address": [],
                "port": [],
                "led_per_beam": [],
                "beams": [],
                "octaves": []
            }
        },
        "Star._make_strip": {
            "name": "_make_strip",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Star._make_reverse_strip": {
            "name": "_make_reverse_strip",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Star._pre_compute_strips": {
            "name": "_pre_compute_strips",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "resolution": []
            }
        },
        "Star._values_to_rgb": {
            "name": "_values_to_rgb",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "values": [],
                "timestamp": []
            }
        },
        "Star.run": {
            "name": "run",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Void.run": {
            "name": "run",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "audioviz-master/audioviz/star.py": {
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "audioviz-master/test/test_nothing.py": {
        "test_nothing": {
            "name": "test_nothing",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "base-auth-master/manage.py": {},
    "base-auth-master/base_auth/celery.py": {},
    "base-auth-master/base_auth/clock.py": {},
    "base-auth-master/base_auth/conftest.py": {
        "auth_client": {
            "name": "auth_client",
            "location": 12,
            "return": [
                "Client"
            ],
            "arguments": {
                "client": [
                    "Client"
                ],
                "user": [
                    "User"
                ]
            }
        }
    },
    "base-auth-master/base_auth/urls.py": {},
    "base-auth-master/base_auth/wsgi.py": {},
    "base-auth-master/base_auth/__init__.py": {},
    "base-auth-master/base_auth/settings/base.py": {},
    "base-auth-master/base_auth/settings/base_auth.py": {},
    "base-auth-master/base_auth/settings/celery.py": {},
    "base-auth-master/base_auth/settings/logging.py": {},
    "base-auth-master/base_auth/settings/raven.py": {},
    "base-auth-master/base_auth/settings/slack.py": {},
    "base-auth-master/base_auth/settings/static.py": {},
    "base-auth-master/base_auth/settings/waffle.py": {},
    "base-auth-master/base_auth/settings/__init__.py": {},
    "base-auth-master/base_auth/site/context_processors.py": {
        "site_url": {
            "name": "site_url",
            "location": 4,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "base-auth-master/base_auth/site/storages.py": {},
    "base-auth-master/base_auth/site/__init__.py": {},
    "base-auth-master/base_auth/site/urls/two_factor_auth.py": {},
    "base-auth-master/base_auth/site/urls/widget.py": {},
    "base-auth-master/base_auth/site/urls/__init__.py": {},
    "base-auth-master/base_auth/site/views/index.py": {},
    "base-auth-master/base_auth/site/views/tos.py": {},
    "base-auth-master/base_auth/site/views/two_factor_auth.py": {
        "OverrideProfileView.dispatch": {
            "name": "dispatch",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "base-auth-master/base_auth/site/views/widget.py": {
        "WidgetButtonView.get_context_data": {
            "name": "get_context_data",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/site/views/__init__.py": {},
    "base-auth-master/base_auth/tests/factories.py": {
        "UserFactory.username": {
            "name": "username",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/tests/__init__.py": {},
    "base-auth-master/base_auth/third_party_admin/admin.py": {},
    "base-auth-master/base_auth/third_party_admin/__init__.py": {},
    "base-auth-master/base_auth/users/admin.py": {},
    "base-auth-master/base_auth/users/models.py": {
        "User.has_enabled_2fa": {
            "name": "has_enabled_2fa",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/users/__init__.py": {},
    "base-auth-master/base_auth/users/management/__init__.py": {},
    "base-auth-master/base_auth/users/management/commands/assign_groups.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/users/management/commands/check_2fa.py": {
        "Command.handle": {
            "name": "handle",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/users/management/commands/create_staff_user.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "base-auth-master/base_auth/users/management/commands/__init__.py": {},
    "base-auth-master/base_auth/users/migrations/0001_initial.py": {},
    "base-auth-master/base_auth/users/migrations/__init__.py": {},
    "base-auth-master/base_auth/utils/admin.py": {
        "allow_tags": {
            "name": "allow_tags",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "boolean": {
            "name": "boolean",
            "location": 15,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "short_description": {
            "name": "short_description",
            "location": 20,
            "return": [],
            "arguments": {
                "description": []
            }
        },
        "order_field": {
            "name": "order_field",
            "location": 29,
            "return": [],
            "arguments": {
                "model_field": []
            }
        },
        "short_description.short_description": {
            "name": "short_description",
            "location": 22,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "order_field.order_field": {
            "name": "order_field",
            "location": 31,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "AdminChangePageURLField.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "short_description_": [],
                "related_field": []
            }
        },
        "AdminChangePageURLField.__call__": {
            "name": "__call__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "RelatedFieldURLMixin.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RawIdFieldsAdminMixin.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAdminMixin.__init__": {
            "name": "__init__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReadOnlyAdminMixin.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReadOnlyAdminMixin.get_actions": {
            "name": "get_actions",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReadOnlyAdminMixin.has_add_permission": {
            "name": "has_add_permission",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReadOnlyAdminMixin.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ReadOnlyAdminMixin.save_model": {
            "name": "save_model",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "form": [],
                "change": []
            }
        },
        "ReadOnlyAdminMixin.delete_model": {
            "name": "delete_model",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ReadOnlyAdminMixin.save_related": {
            "name": "save_related",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "form": [],
                "formsets": [],
                "change": []
            }
        }
    },
    "base-auth-master/base_auth/utils/django_models.py": {
        "get_all_fields_names": {
            "name": "get_all_fields_names",
            "location": 6,
            "return": [],
            "arguments": {
                "model": []
            }
        },
        "ModelDefaultsMixin.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelDefaultsMixin.save": {
            "name": "save",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "update_fields": []
            }
        }
    },
    "base-auth-master/base_auth/utils/mail.py": {
        "send_mail": {
            "name": "send_mail",
            "location": 8,
            "return": [],
            "arguments": {
                "subject": [
                    "str"
                ],
                "template": [
                    "str"
                ],
                "context": [
                    "Dict"
                ],
                "to": [
                    "List[str]"
                ]
            }
        }
    },
    "base-auth-master/base_auth/utils/__init__.py": {
        "Range.__contains__": {
            "name": "__contains__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Range.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Range.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
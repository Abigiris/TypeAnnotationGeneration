{
    "bcs-course-master/hta/grading/asgn-hub.py": {
        "send_grade_reports": {
            "name": "send_grade_reports",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "asgn": [
                    "HTA_Assignment"
                ],
                "logins": [
                    "List[str]"
                ]
            }
        }
    },
    "bcs-course-master/hta/grading/classes.py": {},
    "bcs-course-master/hta/grading/config.py": {},
    "bcs-course-master/hta/grading/course_customization.py": {},
    "bcs-course-master/hta/grading/custom_types.py": {},
    "bcs-course-master/hta/grading/helpers.py": {},
    "bcs-course-master/hta/grading/hta_classes.py": {
        "get_hta_asgn_list": {
            "name": "get_hta_asgn_list",
            "location": 1046,
            "return": [
                "List[HTA_Assignment]"
            ],
            "arguments": {}
        },
        "HTA_Assignment.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.load": {
            "name": "load",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.init_grading": {
            "name": "init_grading",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._check_startable": {
            "name": "_check_startable",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._setup_anon_map": {
            "name": "_setup_anon_map",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._create_logs": {
            "name": "_create_logs",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._setup_blocklist": {
            "name": "_setup_blocklist",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._setup_grade_dir": {
            "name": "_setup_grade_dir",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.login_to_id": {
            "name": "login_to_id",
            "location": 240,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "HTA_Assignment.id_to_login": {
            "name": "id_to_login",
            "location": 267,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "int"
                ]
            }
        },
        "HTA_Assignment._transfer_handins": {
            "name": "_transfer_handins",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.add_new_handin": {
            "name": "add_new_handin",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "HTA_Assignment.__get_new_id": {
            "name": "__get_new_id",
            "location": 391,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.delete_student_handin": {
            "name": "delete_student_handin",
            "location": 408,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ],
                "override": [
                    "bool"
                ]
            }
        },
        "HTA_Assignment.load_groups": {
            "name": "load_groups",
            "location": 467,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.proj_partners": {
            "name": "proj_partners",
            "location": 481,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "student": [
                    "str"
                ]
            }
        },
        "HTA_Assignment.all_handin_logins": {
            "name": "all_handin_logins",
            "location": 507,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment._group_check": {
            "name": "_group_check",
            "location": 514,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.get_handin_dict": {
            "name": "get_handin_dict",
            "location": 523,
            "return": [
                "Dict[(str, List[Optional[Handin]])]"
            ],
            "arguments": {
                "self": [],
                "students": [
                    "Optional[List[str]]"
                ]
            }
        },
        "HTA_Assignment.get_report_data": {
            "name": "get_report_data",
            "location": 591,
            "return": [
                "List[GradeData]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.generate_all_reports": {
            "name": "generate_all_reports",
            "location": 616,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.report_already_generated": {
            "name": "report_already_generated",
            "location": 623,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "HTA_Assignment.generate_one_report": {
            "name": "generate_one_report",
            "location": 638,
            "return": [
                "GradeData"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ],
                "write_files": [
                    "bool"
                ]
            }
        },
        "HTA_Assignment._get_path_to_code": {
            "name": "_get_path_to_code",
            "location": 669,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "HTA_Assignment._generate_report": {
            "name": "_generate_report",
            "location": 688,
            "return": [
                "GradeData"
            ],
            "arguments": {
                "self": [],
                "handins": [
                    "List[Optional[Handin]]"
                ],
                "login": [
                    "str"
                ],
                "write_files": [
                    "bool"
                ]
            }
        },
        "HTA_Assignment.send_emails": {
            "name": "send_emails",
            "location": 825,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "yag": [
                    "yagmail.sender.SMTP"
                ],
                "logins": [
                    "Optional[List[str]]"
                ]
            }
        },
        "HTA_Assignment.get_generated_grade_report": {
            "name": "get_generated_grade_report",
            "location": 866,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "HTA_Assignment.reset_grading": {
            "name": "reset_grading",
            "location": 873,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "confirm": [
                    "bool"
                ],
                "quiet": [
                    "bool"
                ]
            }
        },
        "HTA_Assignment._record_start": {
            "name": "_record_start",
            "location": 939,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.record_finish": {
            "name": "record_finish",
            "location": 951,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.set_emails_sent": {
            "name": "set_emails_sent",
            "location": 962,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.deanonymize": {
            "name": "deanonymize",
            "location": 971,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.table_summary": {
            "name": "table_summary",
            "location": 1007,
            "return": [
                "List[Tuple[(str, int, int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.max_grades": {
            "name": "max_grades",
            "location": 1027,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.__repr__": {
            "name": "__repr__",
            "location": 1042,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTA_Assignment.reset_grading.printer": {
            "name": "printer",
            "location": 885,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "bcs-course-master/hta/grading/hta_helpers.py": {
        "load_students": {
            "name": "load_students",
            "location": 11,
            "return": [
                "List[List[str]]"
            ],
            "arguments": {}
        },
        "student_list": {
            "name": "student_list",
            "location": 24,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "email_to_login": {
            "name": "email_to_login",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "email": [
                    "str"
                ]
            }
        },
        "login_to_email": {
            "name": "login_to_email",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "login": [
                    "str"
                ]
            }
        },
        "argmax": {
            "name": "argmax",
            "location": 77,
            "return": [
                "int"
            ],
            "arguments": {
                "lst": [
                    "List[int]"
                ]
            }
        },
        "latest_submission_path": {
            "name": "latest_submission_path",
            "location": 102,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "base": [
                    "str"
                ],
                "login": [
                    "str"
                ],
                "mini_name": [
                    "str"
                ]
            }
        },
        "get_blocklists": {
            "name": "get_blocklists",
            "location": 143,
            "return": [
                "Dict[(str, List[str])]"
            ],
            "arguments": {}
        }
    },
    "bcs-course-master/hta/grading/hub_helpers.py": {
        "get_full_grade_dict": {
            "name": "get_full_grade_dict",
            "location": 39,
            "return": [
                "Dict[(str, Dict[(str, Grade)])]"
            ],
            "arguments": {
                "students": [
                    "Optional[List[str]]"
                ]
            }
        },
        "get_student_grade_dict": {
            "name": "get_student_grade_dict",
            "location": 66,
            "return": [
                "Dict[(str, Grade)]"
            ],
            "arguments": {
                "login": [
                    "str"
                ]
            }
        },
        "get_drill_data": {
            "name": "get_drill_data",
            "location": 104,
            "return": [
                "Dict[(str, Tuple[(Set[str], Set[str])])]"
            ],
            "arguments": {}
        },
        "get_lab_data": {
            "name": "get_lab_data",
            "location": 136,
            "return": [
                "Tuple[(Dict[(str, Set[str])], Set[str])]"
            ],
            "arguments": {}
        },
        "generate_grade_summaries": {
            "name": "generate_grade_summaries",
            "location": 168,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "write": [
                    "bool"
                ]
            }
        },
        "generate_gradebook": {
            "name": "generate_gradebook",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "Optional[str]"
                ]
            }
        },
        "send_summaries": {
            "name": "send_summaries",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "resummarize": [
                    "Optional[bool]"
                ]
            }
        },
        "delete_subdirs": {
            "name": "delete_subdirs",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "delete_subfiles": {
            "name": "delete_subfiles",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "bcs-course-master/hta/grading/prompts.py": {},
    "bcs-course-master/hta/grading/regrading/check_requests.py": {
        "handle": {
            "name": "handle",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "row": [
                    "List[str]"
                ]
            }
        },
        "print": {
            "name": "print",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "bcs-course-master/hta/grading/regrading/check_responses.py": {
        "handle": {
            "name": "handle",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "row": [
                    "List[str]"
                ]
            }
        },
        "print": {
            "name": "print",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "bcs-course-master/hta/grading/regrading/googleapi.py": {},
    "bcs-course-master/hta/handin/check_submissions.py": {
        "fetch_submissions": {
            "name": "fetch_submissions",
            "location": 499,
            "return": [
                "List[Response]"
            ],
            "arguments": {}
        },
        "process_unconfirmed": {
            "name": "process_unconfirmed",
            "location": 528,
            "return": [],
            "arguments": {}
        },
        "Question.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "question": [
                    "dict"
                ],
                "row": [
                    "List[str]"
                ]
            }
        },
        "Question.get_gfile": {
            "name": "get_gfile",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.download": {
            "name": "download",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_path": [
                    "str"
                ],
                "login": [
                    "str"
                ]
            }
        },
        "Question.get_snippet": {
            "name": "get_snippet",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__init__": {
            "name": "__init__",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "List[str]"
                ],
                "ident": [
                    "int"
                ]
            }
        },
        "Response.get_status": {
            "name": "get_status",
            "location": 195,
            "return": [
                "HState"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.process": {
            "name": "process",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__download": {
            "name": "__download",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "late": [
                    "bool"
                ]
            }
        },
        "Response.__create_directory": {
            "name": "__create_directory",
            "location": 312,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "late": [
                    "bool"
                ]
            }
        },
        "Response._download_files": {
            "name": "_download_files",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "download_to": [
                    "str"
                ]
            }
        },
        "Response.__confirm_email": {
            "name": "__confirm_email",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.__reject_email": {
            "name": "__reject_email",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.load_ext": {
            "name": "load_ext",
            "location": 422,
            "return": [
                "Optional[Extension]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.__set_partner_data": {
            "name": "__set_partner_data",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response._add_to_log": {
            "name": "_add_to_log",
            "location": 477,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.get_zip": {
            "name": "get_zip",
            "location": 482,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__repr__": {
            "name": "__repr__",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.load_ext.relevant": {
            "name": "relevant",
            "location": 423,
            "return": [],
            "arguments": {
                "e": []
            }
        }
    },
    "bcs-course-master/hta/handin/config.py": {},
    "bcs-course-master/hta/handin/custom_types.py": {},
    "bcs-course-master/hta/handin/get_creds.py": {},
    "bcs-course-master/hta/handin/googleapi.py": {
        "sheets_api": {
            "name": "sheets_api",
            "location": 20,
            "return": [
                "Resource"
            ],
            "arguments": {}
        },
        "drive_api": {
            "name": "drive_api",
            "location": 40,
            "return": [
                "Resource"
            ],
            "arguments": {}
        }
    },
    "bcs-course-master/hta/handin/googlefile.py": {
        "GoogleFile.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "google_id": [
                    "str"
                ],
                "drive": [
                    "Resource"
                ]
            }
        },
        "GoogleFile.download": {
            "name": "download",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "bcs-course-master/hta/handin/handin_helpers.py": {
        "get_used_late_days": {
            "name": "get_used_late_days",
            "location": 17,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "login": [
                    "str"
                ]
            }
        },
        "add_late_day": {
            "name": "add_late_day",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "login": [
                    "str"
                ],
                "asgn": [
                    "str"
                ]
            }
        },
        "url_to_gid": {
            "name": "url_to_gid",
            "location": 38,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "load_students": {
            "name": "load_students",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "email_to_login": {
            "name": "email_to_login",
            "location": 85,
            "return": [],
            "arguments": {
                "email": []
            }
        },
        "login_to_email": {
            "name": "login_to_email",
            "location": 94,
            "return": [],
            "arguments": {
                "login": []
            }
        },
        "confirmed_responses": {
            "name": "confirmed_responses",
            "location": 104,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "timestamp_to_datetime": {
            "name": "timestamp_to_datetime",
            "location": 113,
            "return": [],
            "arguments": {
                "timestamp": []
            }
        },
        "make_span": {
            "name": "make_span",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "color": [
                    "Optional[str]"
                ]
            }
        },
        "load_extensions": {
            "name": "load_extensions",
            "location": 149,
            "return": [],
            "arguments": {}
        }
    },
    "bcs-course-master/hta/handin/helpers.py": {},
    "bcs-course-master/hta/handin/hta_helpers.py": {},
    "bcs-course-master/htabin/config.py": {},
    "bcs-course-master/htabin/course_customization.py": {},
    "bcs-course-master/htabin/custom_types.py": {},
    "bcs-course-master/htabin/helpers.py": {},
    "bcs-course-master/htabin/prompts.py": {},
    "bcs-course-master/ta/config.py": {
        "HandinConfig.get_range": {
            "name": "get_range",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "test_mode": [
                    "bool"
                ]
            }
        },
        "HandinConfig.get_ssid": {
            "name": "get_ssid",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "test_mode": [
                    "bool"
                ]
            }
        },
        "HandinConfig.get_sub_log": {
            "name": "get_sub_log",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "test_mode": [
                    "bool"
                ]
            }
        }
    },
    "bcs-course-master/ta/documentation/conf.py": {
        "setup": {
            "name": "setup",
            "location": 192,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "bcs-course-master/ta/grading/classes.py": {
        "is_started": {
            "name": "is_started",
            "location": 53,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [
                    "Callable"
                ]
            }
        },
        "is_extracted": {
            "name": "is_extracted",
            "location": 79,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [
                    "Callable"
                ]
            }
        },
        "started_asgns": {
            "name": "started_asgns",
            "location": 1286,
            "return": [
                "List[Assignment]"
            ],
            "arguments": {}
        },
        "all_asgns": {
            "name": "all_asgns",
            "location": 1304,
            "return": [
                "List[Assignment]"
            ],
            "arguments": {}
        },
        "is_started.magic": {
            "name": "magic",
            "location": 65,
            "return": [],
            "arguments": {
                "asgn": [
                    "'Assignment'"
                ]
            }
        },
        "is_extracted.magic": {
            "name": "magic",
            "location": 104,
            "return": [],
            "arguments": {
                "handin": [
                    "'Handin'"
                ]
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uname": [
                    "str"
                ]
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 148,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Assignment.__init__": {
            "name": "__init__",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "load_if_started": [
                    "bool"
                ]
            }
        },
        "Assignment.load": {
            "name": "load",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Assignment._load_questions": {
            "name": "_load_questions",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Assignment.get_question": {
            "name": "get_question",
            "location": 307,
            "return": [
                "'Question'"
            ],
            "arguments": {
                "self": [],
                "ndx": [
                    "int"
                ]
            }
        },
        "Assignment.login_to_id": {
            "name": "login_to_id",
            "location": 329,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "login": [
                    "str"
                ]
            }
        },
        "Assignment.id_to_login": {
            "name": "id_to_login",
            "location": 361,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "int"
                ]
            }
        },
        "Assignment.moss": {
            "name": "moss",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "moss_lang": [
                    "Optional[str]"
                ],
                "extension": [
                    "Optional[str]"
                ]
            }
        },
        "Assignment.__repr__": {
            "name": "__repr__",
            "location": 422,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.__init__": {
            "name": "__init__",
            "location": 467,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent_assignment": [
                    "Assignment"
                ],
                "q_ndx": [
                    "int"
                ]
            }
        },
        "Question.load_handins": {
            "name": "load_handins",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.ta_handins": {
            "name": "ta_handins",
            "location": 546,
            "return": [
                "List['Handin']"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "User"
                ]
            }
        },
        "Question.html_data": {
            "name": "html_data",
            "location": 560,
            "return": [
                "HTMLData"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "User"
                ]
            }
        },
        "Question.get_random_handin": {
            "name": "get_random_handin",
            "location": 598,
            "return": [
                "Optional['Handin']"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "User"
                ]
            }
        },
        "Question.get_handin_by_id": {
            "name": "get_handin_by_id",
            "location": 620,
            "return": [
                "'Handin'"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "int"
                ]
            }
        },
        "Question.add_handin_to_log": {
            "name": "add_handin_to_log",
            "location": 638,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "int"
                ]
            }
        },
        "Question.copy_rubric": {
            "name": "copy_rubric",
            "location": 655,
            "return": [
                "Rubric"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.rewrite_rubric": {
            "name": "rewrite_rubric",
            "location": 669,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rubric": [
                    "Rubric"
                ]
            }
        },
        "Question.add_ungiven_comment": {
            "name": "add_ungiven_comment",
            "location": 683,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "Optional[str]"
                ],
                "comment": [
                    "str"
                ]
            }
        },
        "Question.magic_update": {
            "name": "magic_update",
            "location": 727,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable[([Rubric], None)]"
                ]
            }
        },
        "Question.__repr__": {
            "name": "__repr__",
            "location": 773,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Handin.__init__": {
            "name": "__init__",
            "location": 808,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "question": [
                    "Question"
                ],
                "ident": [
                    "int"
                ],
                "complete": [
                    "bool"
                ],
                "grader": [
                    "Optional[str]"
                ],
                "flag_reason": [
                    "Optional[str]"
                ]
            }
        },
        "Handin.get_rubric": {
            "name": "get_rubric",
            "location": 850,
            "return": [
                "Rubric"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.get_rubric_data": {
            "name": "get_rubric_data",
            "location": 864,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.get_code": {
            "name": "get_code",
            "location": 884,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "with_tests": [
                    "bool"
                ]
            }
        },
        "Handin.write_line": {
            "name": "write_line",
            "location": 928,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.start_grading": {
            "name": "start_grading",
            "location": 964,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ta": [
                    "str"
                ]
            }
        },
        "Handin.unextract": {
            "name": "unextract",
            "location": 981,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.flag": {
            "name": "flag",
            "location": 994,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "Handin.unflag": {
            "name": "unflag",
            "location": 1007,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.set_complete": {
            "name": "set_complete",
            "location": 1017,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.write_grade": {
            "name": "write_grade",
            "location": 1031,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rubric": [
                    "Rubric"
                ]
            }
        },
        "Handin.save_data": {
            "name": "save_data",
            "location": 1045,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ],
                "new_comments": [
                    "Dict[(str, Any)]"
                ],
                "emoji": [
                    "bool"
                ]
            }
        },
        "Handin.check_complete": {
            "name": "check_complete",
            "location": 1086,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.gradeable_by": {
            "name": "gradeable_by",
            "location": 1096,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "uname": [
                    "str"
                ]
            }
        },
        "Handin.blocklisted_by": {
            "name": "blocklisted_by",
            "location": 1112,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ta": [
                    "str"
                ]
            }
        },
        "Handin.generate_report_str": {
            "name": "generate_report_str",
            "location": 1130,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "rubric": [
                    "Optional[Rubric]"
                ]
            }
        },
        "Handin.generate_grade_report": {
            "name": "generate_grade_report",
            "location": 1150,
            "return": [
                "Tuple[(str, Dict[(str, int)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.run_test": {
            "name": "run_test",
            "location": 1187,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.python_test": {
            "name": "python_test",
            "location": 1206,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.pyret_test": {
            "name": "pyret_test",
            "location": 1224,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handin.__repr__": {
            "name": "__repr__",
            "location": 1270,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.add_ungiven_comment.add_comment": {
            "name": "add_comment",
            "location": 701,
            "return": [
                "None"
            ],
            "arguments": {
                "rubric": [
                    "Rubric"
                ]
            }
        }
    },
    "bcs-course-master/ta/grading/course_customization.py": {
        "full_asgn_name_to_dirname": {
            "name": "full_asgn_name_to_dirname",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "asgn_name": [
                    "str"
                ]
            }
        },
        "get_empty_raw_grade": {
            "name": "get_empty_raw_grade",
            "location": 42,
            "return": [
                "RawGrade"
            ],
            "arguments": {
                "asgn": [
                    "Assignment"
                ]
            }
        },
        "determine_grade": {
            "name": "determine_grade",
            "location": 66,
            "return": [
                "Grade"
            ],
            "arguments": {
                "raw_grade": [
                    "RawGrade"
                ],
                "late": [
                    "bool"
                ],
                "asgn": [
                    "Assignment"
                ]
            }
        },
        "get_handin_report_str": {
            "name": "get_handin_report_str",
            "location": 106,
            "return": [
                "str"
            ],
            "arguments": {
                "rubric": [
                    "Rubric"
                ],
                "grader_login": [
                    "str"
                ],
                "question": [
                    "Question"
                ]
            }
        },
        "get_handin_report_str.comment_section": {
            "name": "comment_section",
            "location": 124,
            "return": [
                "str"
            ],
            "arguments": {
                "category": [
                    "str"
                ],
                "comments": [
                    "List[str]"
                ]
            }
        },
        "get_handin_report_str.grade_section": {
            "name": "grade_section",
            "location": 138,
            "return": [
                "str"
            ],
            "arguments": {
                "rc": [
                    "RubricCategory"
                ]
            }
        }
    },
    "bcs-course-master/ta/grading/custom_types.py": {},
    "bcs-course-master/ta/grading/grading_app.py": {
        "logged_in_route": {
            "name": "logged_in_route",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "not_logged_in_route": {
            "name": "not_logged_in_route",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "doNotUseAppRoute": {
            "name": "doNotUseAppRoute",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "is_logged_in": {
            "name": "is_logged_in",
            "location": 130,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "load_asgn": {
            "name": "load_asgn",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "load_prob": {
            "name": "load_prob",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "extract_handin": {
            "name": "extract_handin",
            "location": 190,
            "return": [],
            "arguments": {}
        },
        "load_handin": {
            "name": "load_handin",
            "location": 211,
            "return": [],
            "arguments": {}
        },
        "flag_handin": {
            "name": "flag_handin",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "unextract_handin": {
            "name": "unextract_handin",
            "location": 235,
            "return": [],
            "arguments": {}
        },
        "save_handin": {
            "name": "save_handin",
            "location": 245,
            "return": [],
            "arguments": {}
        },
        "add_global_comment": {
            "name": "add_global_comment",
            "location": 259,
            "return": [],
            "arguments": {}
        },
        "complete_handin": {
            "name": "complete_handin",
            "location": 276,
            "return": [],
            "arguments": {}
        },
        "view_code": {
            "name": "view_code",
            "location": 285,
            "return": [],
            "arguments": {}
        },
        "run_test": {
            "name": "run_test",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "preview_report": {
            "name": "preview_report",
            "location": 307,
            "return": [],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 338,
            "return": [],
            "arguments": {}
        },
        "rubric": {
            "name": "rubric",
            "location": 344,
            "return": [],
            "arguments": {}
        },
        "edit_rubric": {
            "name": "edit_rubric",
            "location": 349,
            "return": [],
            "arguments": {}
        },
        "rubricSchema": {
            "name": "rubricSchema",
            "location": 353,
            "return": [],
            "arguments": {}
        },
        "load_rubric": {
            "name": "load_rubric",
            "location": 359,
            "return": [],
            "arguments": {
                "mini_name": [],
                "qn": []
            }
        },
        "create_rubric": {
            "name": "create_rubric",
            "location": 384,
            "return": [],
            "arguments": {
                "mini_name": [],
                "qn": []
            }
        },
        "update_rubric": {
            "name": "update_rubric",
            "location": 403,
            "return": [],
            "arguments": {
                "mini_name": [],
                "qn": []
            }
        },
        "check_updater": {
            "name": "check_updater",
            "location": 423,
            "return": [],
            "arguments": {
                "mini_name": [],
                "qn": []
            }
        },
        "run_updater": {
            "name": "run_updater",
            "location": 475,
            "return": [],
            "arguments": {}
        },
        "open_browser": {
            "name": "open_browser",
            "location": 503,
            "return": [],
            "arguments": {}
        },
        "get_max_points": {
            "name": "get_max_points",
            "location": 509,
            "return": [],
            "arguments": {
                "cat": []
            }
        },
        "logged_in_route.is_logged_in": {
            "name": "is_logged_in",
            "location": 93,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ]
            }
        },
        "logged_in_route.inner": {
            "name": "inner",
            "location": 105,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "not_logged_in_route.inner": {
            "name": "inner",
            "location": 118,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "is_logged_in.wrap": {
            "name": "wrap",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "logged_in_route.is_logged_in.wrap": {
            "name": "wrap",
            "location": 97,
            "return": [],
            "arguments": {}
        }
    },
    "bcs-course-master/ta/grading/helpers.py": {
        "locked_file": {
            "name": "locked_file",
            "location": 51,
            "return": [
                "Generator"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "mode": [
                    "str"
                ]
            }
        },
        "json_edit": {
            "name": "json_edit",
            "location": 96,
            "return": [
                "Generator"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "require_resource": {
            "name": "require_resource",
            "location": 140,
            "return": [
                "Callable[([Callable], Any)]"
            ],
            "arguments": {
                "resource": [
                    "str"
                ]
            }
        },
        "json_file_with_check": {
            "name": "json_file_with_check",
            "location": 169,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "rubric_check": {
            "name": "rubric_check",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "loaded_rubric_check": {
            "name": "loaded_rubric_check",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "rubric": [
                    "Rubric"
                ]
            }
        },
        "bracket_check": {
            "name": "bracket_check",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "update_comments": {
            "name": "update_comments",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "comments": [
                    "Comments"
                ],
                "new_given": [
                    "List[str]"
                ]
            }
        },
        "line_read": {
            "name": "line_read",
            "location": 329,
            "return": [
                "list"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "delim": [
                    "Optional[str]"
                ]
            }
        },
        "remove_duplicates": {
            "name": "remove_duplicates",
            "location": 370,
            "return": [
                "list"
            ],
            "arguments": {
                "lst": [
                    "list"
                ]
            }
        },
        "red": {
            "name": "red",
            "location": 397,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "green": {
            "name": "green",
            "location": 407,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "col_str_to_num": {
            "name": "col_str_to_num",
            "location": 417,
            "return": [
                "int"
            ],
            "arguments": {
                "col": [
                    "str"
                ]
            }
        },
        "col_num_to_str": {
            "name": "col_num_to_str",
            "location": 442,
            "return": [
                "str"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "check_assignments": {
            "name": "check_assignments",
            "location": 469,
            "return": [],
            "arguments": {
                "data": [
                    "AssignmentJson"
                ]
            }
        },
        "open_folder": {
            "name": "open_folder",
            "location": 47,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "require_resource.decorator": {
            "name": "decorator",
            "location": 157,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "loaded_rubric_check.p": {
            "name": "p",
            "location": 216,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "loaded_rubric_check.has_keys": {
            "name": "has_keys",
            "location": 219,
            "return": [
                "bool"
            ],
            "arguments": {
                "d": [
                    "Mapping"
                ],
                "keys": [
                    "List[str]"
                ]
            }
        },
        "loaded_rubric_check.check_rubric_category": {
            "name": "check_rubric_category",
            "location": 223,
            "return": [
                "bool"
            ],
            "arguments": {
                "rc": [
                    "RubricCategory"
                ]
            }
        },
        "loaded_rubric_check.check_item": {
            "name": "check_item",
            "location": 235,
            "return": [
                "bool"
            ],
            "arguments": {
                "ri": [
                    "RubricItem"
                ]
            }
        },
        "loaded_rubric_check.check_opt": {
            "name": "check_opt",
            "location": 243,
            "return": [],
            "arguments": {
                "ro": [
                    "RubricOption"
                ]
            }
        },
        "loaded_rubric_check.check_comments": {
            "name": "check_comments",
            "location": 250,
            "return": [
                "bool"
            ],
            "arguments": {
                "comments": [
                    "Comments"
                ]
            }
        },
        "bracket_check.check_bracket_item": {
            "name": "check_bracket_item",
            "location": 285,
            "return": [
                "bool"
            ],
            "arguments": {
                "bi": [
                    "BracketItem"
                ]
            }
        },
        "bracket_check.check_bracket_cat": {
            "name": "check_bracket_cat",
            "location": 291,
            "return": [
                "bool"
            ],
            "arguments": {
                "bc": [
                    "List[BracketItem]"
                ]
            }
        },
        "require_resource.decorator.magic": {
            "name": "magic",
            "location": 159,
            "return": [],
            "arguments": {}
        }
    },
    "bcs-course-master/ta/grading/update_rubric.py": {
        "_update_comments": {
            "name": "_update_comments",
            "location": 17,
            "return": [
                "Comments"
            ],
            "arguments": {
                "comments": [
                    "List[_OldComment]"
                ]
            }
        },
        "_update_rubric_items": {
            "name": "_update_rubric_items",
            "location": 30,
            "return": [
                "List[RubricItem]"
            ],
            "arguments": {
                "items": [
                    "List[dict]"
                ]
            }
        },
        "update_rubric": {
            "name": "update_rubric",
            "location": 53,
            "return": [
                "Rubric"
            ],
            "arguments": {
                "old_rubric": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "bcs-course-master/tabin/config.py": {},
    "bcs-course-master/tabin/course_customization.py": {},
    "bcs-course-master/tabin/custom_types.py": {},
    "bcs-course-master/tabin/helpers.py": {},
    "bcs-course-master/tabin/print_results.py": {},
    "bcs-course-master/tabin/prompts.py": {
        "ez_prompt": {
            "name": "ez_prompt",
            "location": 11,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "prompt": [
                    "str"
                ],
                "checker": [
                    "Optional[Callable[([str], bool)]]"
                ],
                "fail_check_msg": [
                    "Optional[str]"
                ],
                "raise_on_ctrl_c": [
                    "bool"
                ],
                "exit_on_ctrl_c": [
                    "bool"
                ]
            }
        },
        "int_prompt": {
            "name": "int_prompt",
            "location": 40,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "maximum": [
                    "int"
                ],
                "prompt": [
                    "str"
                ],
                "minimum": [
                    "int"
                ]
            }
        },
        "opt_prompt": {
            "name": "opt_prompt",
            "location": 61,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "opts": [
                    "List[str]"
                ],
                "prompt": [
                    "str"
                ],
                "pre_string": [
                    "str"
                ]
            }
        },
        "table_prompt": {
            "name": "table_prompt",
            "location": 71,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "rows": [
                    "List[list]"
                ],
                "header": [
                    "List[str]"
                ],
                "prompt": [
                    "Optional[str]"
                ]
            }
        },
        "yn_prompt": {
            "name": "yn_prompt",
            "location": 86,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "pre_text": [
                    "str"
                ]
            }
        },
        "toggle_prompt": {
            "name": "toggle_prompt",
            "location": 108,
            "return": [
                "Optional[Set[str]]"
            ],
            "arguments": {
                "options": [
                    "List[str]"
                ],
                "toggled": [
                    "Optional[Union[(List[str], Set[str])]]"
                ]
            }
        },
        "date_prompt": {
            "name": "date_prompt",
            "location": 153,
            "return": [
                "Optional[datetime]"
            ],
            "arguments": {
                "readable_format": [
                    "str"
                ],
                "datetime_format": [
                    "str"
                ],
                "default": [
                    "Optional[datetime]"
                ],
                "after": [
                    "Optional[datetime]"
                ],
                "after_msg": [
                    "Optional[str]"
                ],
                "enforce_after": [
                    "bool"
                ]
            }
        }
    }
}
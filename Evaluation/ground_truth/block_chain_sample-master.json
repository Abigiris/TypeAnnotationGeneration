{
    "block_chain_sample-master/main.py": {
        "_parser_args": {
            "name": "_parser_args",
            "location": 6,
            "return": [],
            "arguments": {
                "params": []
            }
        },
        "main": {
            "name": "main",
            "location": 13,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/block_chain.py": {
        "Blockchain.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/core.py": {
        "Transactions._asdict": {
            "name": "_asdict",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block._asdict": {
            "name": "_asdict",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.hash": {
            "name": "hash",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "hash_func": []
            }
        },
        "Core.last_block": {
            "name": "last_block",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Core.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Core.new_block": {
            "name": "new_block",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "proof": [
                    "int"
                ],
                "previous_hash": [
                    "Optional[str]"
                ]
            }
        },
        "Core.new_transaction": {
            "name": "new_transaction",
            "location": 98,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sender": [
                    "str"
                ],
                "recipient": [
                    "str"
                ],
                "amount": [
                    "int"
                ]
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/sanic_app.py": {
        "new_transaction": {
            "name": "new_transaction",
            "location": 50,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "full_chain": {
            "name": "full_chain",
            "location": 71,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "register_nodes": {
            "name": "register_nodes",
            "location": 81,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "consensus": {
            "name": "consensus",
            "location": 99,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/__init__.py": {},
    "block_chain_sample-master/block_chain_sample/mixins/consensus_mixin.py": {
        "ConsensusMixin.valid_chain": {
            "name": "valid_chain",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "chain": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/mixins/hash_mixin.py": {
        "HashMixin.hash": {
            "name": "hash",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "hash_func": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/mixins/proof_mixin.py": {
        "ProofMixin.proof_of_work": {
            "name": "proof_of_work",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "last_proof": []
            }
        },
        "ProofMixin.valid_proof": {
            "name": "valid_proof",
            "location": 28,
            "return": [],
            "arguments": {
                "last_proof": [],
                "proof": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/mixins/regist_node_mixin.py": {
        "RegistNodeMixin.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistNodeMixin.register_node": {
            "name": "register_node",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "address": []
            }
        }
    },
    "block_chain_sample-master/block_chain_sample/mixins/__init__.py": {},
    "block_chain_sample-master/test/test_echo.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "add_suite": {
            "name": "add_suite",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "TestAdd.setUpClass": {
            "name": "setUpClass",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestAdd.tearDownClass": {
            "name": "tearDownClass",
            "location": 19,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestAdd.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAdd.tearDown": {
            "name": "tearDown",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAdd.test_echo": {
            "name": "test_echo",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "block_chain_sample-master/test/__init__.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 2,
            "return": [],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "board-game-scraper-master/setup.py": {
        "UploadCommand.status": {
            "name": "status",
            "location": 107,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "UploadCommand.initialize_options": {
            "name": "initialize_options",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.finalize_options": {
            "name": "finalize_options",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.run": {
            "name": "run",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/cluster.py": {
        "abs_comp": {
            "name": "abs_comp",
            "location": 39,
            "return": [],
            "arguments": {
                "field_1": [],
                "field_2": []
            }
        },
        "_fields": {
            "name": "_fields",
            "location": 47,
            "return": [],
            "arguments": {
                "resource": []
            }
        },
        "smart_exists": {
            "name": "smart_exists",
            "location": 64,
            "return": [],
            "arguments": {
                "path": [],
                "raise_exc": []
            }
        },
        "_parse_value_id": {
            "name": "_parse_value_id",
            "location": 101,
            "return": [],
            "arguments": {
                "string": [],
                "regex": []
            }
        },
        "_parse_game": {
            "name": "_parse_game",
            "location": 108,
            "return": [],
            "arguments": {
                "game": []
            }
        },
        "_load_games": {
            "name": "_load_games",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "_make_id": {
            "name": "_make_id",
            "location": 146,
            "return": [],
            "arguments": {
                "game": [],
                "id_field": [],
                "id_prefix": []
            }
        },
        "_make_data": {
            "name": "_make_data",
            "location": 153,
            "return": [],
            "arguments": {
                "games": [],
                "id_field": [],
                "id_prefix": []
            }
        },
        "_process_item": {
            "name": "_process_item",
            "location": 157,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "_process_game": {
            "name": "_process_game",
            "location": 169,
            "return": [],
            "arguments": {
                "game": [],
                "fields": []
            }
        },
        "_process_training": {
            "name": "_process_training",
            "location": 173,
            "return": [],
            "arguments": {
                "training": []
            }
        },
        "_write_training": {
            "name": "_write_training",
            "location": 182,
            "return": [],
            "arguments": {
                "model": [],
                "file_obj": []
            }
        },
        "_train_gazetteer": {
            "name": "_train_gazetteer",
            "location": 187,
            "return": [],
            "arguments": {
                "data_1": [],
                "data_2": [],
                "fields": [],
                "training_file": [],
                "manual_labelling": [],
                "pretty_print": []
            }
        },
        "_extract_site": {
            "name": "_extract_site",
            "location": 235,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "link_games": {
            "name": "link_games",
            "location": 240,
            "return": [],
            "arguments": {
                "gazetteer": [],
                "paths": [],
                "id_prefixes": [],
                "id_fields": [],
                "training_file": [],
                "manual_labelling": [],
                "threshold": [],
                "output": [],
                "pretty_print": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 340,
            "return": [],
            "arguments": {}
        },
        "_main": {
            "name": "_main",
            "location": 374,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/extensions.py": {
        "PullQueueExtension.from_crawler": {
            "name": "from_crawler",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "PullQueueExtension.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": [],
                "interval": [],
                "project": [],
                "subscription": [],
                "max_messages": [],
                "prevent_rescrape_for": [],
                "pull_timeout": []
            }
        },
        "PullQueueExtension._pull_queue": {
            "name": "_pull_queue",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "PullQueueExtension.process_message": {
            "name": "process_message",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "spider": [],
                "encoding": []
            }
        },
        "StateTag.from_crawler": {
            "name": "from_crawler",
            "location": 158,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "StateTag.__init__": {
            "name": "__init__",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "jobdir": [],
                "state_file": [],
                "pid_file": []
            }
        },
        "StateTag._write": {
            "name": "_write",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "content": []
            }
        },
        "StateTag._delete": {
            "name": "_delete",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "StateTag._spider_opened": {
            "name": "_spider_opened",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StateTag._spider_closed": {
            "name": "_spider_closed",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "spider": [],
                "reason": []
            }
        },
        "DontRunBeforeTag.from_crawler": {
            "name": "from_crawler",
            "location": 219,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "DontRunBeforeTag.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "tag_file": [],
                "date": [],
                "seconds": []
            }
        },
        "DontRunBeforeTag._spider_opened": {
            "name": "_spider_opened",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/full_merge.py": {
        "merge_config": {
            "name": "merge_config",
            "location": 26,
            "return": [],
            "arguments": {
                "spider": [],
                "item": [],
                "in_paths": [],
                "out_path": [],
                "full": []
            }
        },
        "merge_configs": {
            "name": "merge_configs",
            "location": 58,
            "return": [],
            "arguments": {
                "spider": [],
                "full": []
            }
        },
        "_parse_timeout": {
            "name": "_parse_timeout",
            "location": 153,
            "return": [],
            "arguments": {
                "timeout": []
            }
        },
        "_docker_container": {
            "name": "_docker_container",
            "location": 169,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_docker_start": {
            "name": "_docker_start",
            "location": 185,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_docker_stop": {
            "name": "_docker_stop",
            "location": 209,
            "return": [],
            "arguments": {
                "name": [],
                "timeout": []
            }
        },
        "_docker_compose": {
            "name": "_docker_compose",
            "location": 243,
            "return": [],
            "arguments": {
                "path": [],
                "service": []
            }
        },
        "_stop_merge_start": {
            "name": "_stop_merge_start",
            "location": 255,
            "return": [],
            "arguments": {
                "spider": [],
                "compose_file": [],
                "full": [],
                "timeout": [],
                "cool_down": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 316,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/items.py": {
        "_clear_list": {
            "name": "_clear_list",
            "location": 81,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "_json_output": {
            "name": "_json_output",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "_serialize_bool": {
            "name": "_serialize_bool",
            "location": 89,
            "return": [],
            "arguments": {
                "item": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/loaders.py": {},
    "board-game-scraper-master/board_game_scraper/merge.py": {
        "_spark_session": {
            "name": "_spark_session",
            "location": 30,
            "return": [],
            "arguments": {
                "log_level": []
            }
        },
        "_compare": {
            "name": "_compare",
            "location": 62,
            "return": [],
            "arguments": {
                "first": [],
                "second": [],
                "column": []
            }
        },
        "_column_type": {
            "name": "_column_type",
            "location": 70,
            "return": [],
            "arguments": {
                "column": [],
                "column_type": []
            }
        },
        "_remove_empty": {
            "name": "_remove_empty",
            "location": 81,
            "return": [],
            "arguments": {
                "data": [],
                "remove_false": []
            }
        },
        "merge_files": {
            "name": "merge_files",
            "location": 96,
            "return": [],
            "arguments": {
                "in_paths": [],
                "out_path": [],
                "keys": [],
                "key_types": [],
                "latest": [],
                "latest_types": [],
                "latest_min": [],
                "latest_required": [],
                "fieldnames": [],
                "fieldnames_exclude": [],
                "sort_keys": [],
                "sort_latest": [],
                "sort_fields": [],
                "sort_descending": [],
                "concat_output": [],
                "log_level": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 250,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 321,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/news.py": {
        "update_news": {
            "name": "update_news",
            "location": 26,
            "return": [],
            "arguments": {
                "s3_src": [],
                "path_feeds": [],
                "path_merged": [],
                "path_split": [],
                "s3_dst": [],
                "split_size": [],
                "log_level": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 156,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/pipelines.py": {
        "DataTypePipeline.process_item": {
            "name": "process_item",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        },
        "ResolveLabelPipeline.from_crawler": {
            "name": "from_crawler",
            "location": 65,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "ResolveLabelPipeline.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "fields": [],
                "lang_priorities": []
            }
        },
        "ResolveLabelPipeline._extract_labels": {
            "name": "_extract_labels",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "value": []
            }
        },
        "ResolveLabelPipeline._deferred_value": {
            "name": "_deferred_value",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "spider": []
            }
        },
        "ResolveLabelPipeline._add_value": {
            "name": "_add_value",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "field": [],
                "item": []
            }
        },
        "ResolveLabelPipeline._deferred_field": {
            "name": "_deferred_field",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "item": [],
                "spider": []
            }
        },
        "ResolveLabelPipeline.process_item": {
            "name": "process_item",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        },
        "ResolveImagePipeline._parse_url": {
            "name": "_parse_url",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "ResolveImagePipeline.process_item": {
            "name": "process_item",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        },
        "LimitImagesPipeline.from_crawler": {
            "name": "from_crawler",
            "location": 195,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "LimitImagesPipeline.__init__": {
            "name": "__init__",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "source_field": [
                    "str"
                ],
                "target_field": [
                    "str"
                ],
                "limit": [
                    "Optional[int]"
                ]
            }
        },
        "LimitImagesPipeline.process_item": {
            "name": "process_item",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        },
        "CleanItemPipeline.from_crawler": {
            "name": "from_crawler",
            "location": 249,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "CleanItemPipeline.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "drop_falsey": [
                    "bool"
                ],
                "drop_values": [
                    "Optional[tuple]"
                ]
            }
        },
        "CleanItemPipeline.process_item": {
            "name": "process_item",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/prefixes.py": {
        "_parse_key": {
            "name": "_parse_key",
            "location": 27,
            "return": [],
            "arguments": {
                "key": []
            }
        },
        "_process_file": {
            "name": "_process_file",
            "location": 33,
            "return": [],
            "arguments": {
                "file": [],
                "fields": [],
                "sep": [],
                "count": []
            }
        },
        "_make_trie": {
            "name": "_make_trie",
            "location": 53,
            "return": [],
            "arguments": {
                "file": [],
                "fields": [],
                "sep": []
            }
        },
        "_count": {
            "name": "_count",
            "location": 57,
            "return": [],
            "arguments": {
                "trie": [],
                "prefix": []
            }
        },
        "_prefixes": {
            "name": "_prefixes",
            "location": 61,
            "return": [],
            "arguments": {
                "trie": [],
                "prefix": [],
                "limit": []
            }
        },
        "_prefixes_from_file": {
            "name": "_prefixes_from_file",
            "location": 71,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "_trie_from_file": {
            "name": "_trie_from_file",
            "location": 87,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "_save_to_prefixes": {
            "name": "_save_to_prefixes",
            "location": 95,
            "return": [],
            "arguments": {
                "dst": [],
                "trie": [],
                "file": [],
                "fields": [],
                "sep": []
            }
        },
        "split_file": {
            "name": "split_file",
            "location": 127,
            "return": [],
            "arguments": {
                "in_file": [],
                "out_file": [],
                "fields": [],
                "trie_file": [],
                "limits": [],
                "construct": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 164,
            "return": [],
            "arguments": {}
        },
        "_main": {
            "name": "_main",
            "location": 191,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/pubsub_pull.py": {
        "_process_messages_csv": {
            "name": "_process_messages_csv",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "_process_messages_raw": {
            "name": "_process_messages_raw",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "_format_from_path": {
            "name": "_format_from_path",
            "location": 84,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "path": [
                    "Optional[str]"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 172,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/settings.py": {},
    "board-game-scraper-master/board_game_scraper/split.py": {
        "_is_empty": {
            "name": "_is_empty",
            "location": 44,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "_filter_fields": {
            "name": "_filter_fields",
            "location": 50,
            "return": [],
            "arguments": {
                "item": [],
                "fields": [],
                "exclude_empty": []
            }
        },
        "_load_items": {
            "name": "_load_items",
            "location": 58,
            "return": [],
            "arguments": {
                "iterable": [],
                "fields": [],
                "exclude_empty": []
            }
        },
        "split_files": {
            "name": "split_files",
            "location": 76,
            "return": [],
            "arguments": {
                "path_in": [],
                "path_out": [],
                "size": [],
                "fields": [],
                "exclude_empty": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "_main": {
            "name": "_main",
            "location": 133,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/utils.py": {
        "to_lower": {
            "name": "to_lower",
            "location": 53,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "identity": {
            "name": "identity",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": [
                    "Any"
                ]
            }
        },
        "_replace_utf_entities": {
            "name": "_replace_utf_entities",
            "location": 64,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "replace_utf_entities": {
            "name": "replace_utf_entities",
            "location": 74,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "replace_all_entities": {
            "name": "replace_all_entities",
            "location": 79,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "extract_query_param": {
            "name": "extract_query_param",
            "location": 90,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult)]"
                ],
                "field": [
                    "str"
                ]
            }
        },
        "now": {
            "name": "now",
            "location": 100,
            "return": [],
            "arguments": {
                "tzinfo": []
            }
        },
        "serialize_date": {
            "name": "serialize_date",
            "location": 107,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "date": [
                    "Any"
                ],
                "tzinfo": [
                    "Optional[timezone]"
                ]
            }
        },
        "parse_json": {
            "name": "parse_json",
            "location": 114,
            "return": [],
            "arguments": {
                "file_or_string": []
            }
        },
        "_json_default": {
            "name": "_json_default",
            "location": 133,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "serialize_json": {
            "name": "serialize_json",
            "location": 145,
            "return": [],
            "arguments": {
                "obj": [],
                "file": []
            }
        },
        "date_from_file": {
            "name": "date_from_file",
            "location": 169,
            "return": [
                "Optional[datetime]"
            ],
            "arguments": {
                "path": [
                    "Union[(bytes, str, os.PathLike, None)]"
                ],
                "tzinfo": [
                    "Optional[timezone]"
                ],
                "format_str": [
                    "Optional[str]"
                ]
            }
        },
        "validate_range": {
            "name": "validate_range",
            "location": 191,
            "return": [],
            "arguments": {
                "value": [],
                "lower": [],
                "upper": []
            }
        },
        "json_from_response": {
            "name": "json_from_response",
            "location": 201,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "extract_meta": {
            "name": "extract_meta",
            "location": 207,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "extract_item": {
            "name": "extract_item",
            "location": 216,
            "return": [],
            "arguments": {
                "item": [],
                "response": [],
                "item_cls": []
            }
        },
        "extract_url": {
            "name": "extract_url",
            "location": 224,
            "return": [],
            "arguments": {
                "item": [],
                "response": [],
                "default": []
            }
        },
        "_match": {
            "name": "_match",
            "location": 238,
            "return": [],
            "arguments": {
                "string": [
                    "str"
                ],
                "comparison": [
                    "Union[(str, Pattern)]"
                ]
            }
        },
        "parse_url": {
            "name": "parse_url",
            "location": 246,
            "return": [
                "Optional[ParseResult]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ],
                "hostnames": [
                    "Optional[Iterable[Union[(str, Pattern)]]]"
                ]
            }
        },
        "validate_url": {
            "name": "validate_url",
            "location": 266,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ],
                "hostnames": [
                    "Optional[Iterable[Union[(str, Pattern)]]]"
                ],
                "schemes": [
                    "Optional[Iterable[Union[(str, Pattern)]]]"
                ]
            }
        },
        "extract_bgg_id": {
            "name": "extract_bgg_id",
            "location": 281,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_bgg_user_name": {
            "name": "extract_bgg_user_name",
            "location": 291,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_wikidata_id": {
            "name": "extract_wikidata_id",
            "location": 303,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_wikipedia_id": {
            "name": "extract_wikipedia_id",
            "location": 312,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_dbpedia_id": {
            "name": "extract_dbpedia_id",
            "location": 322,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_luding_id": {
            "name": "extract_luding_id",
            "location": 331,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_spielen_id": {
            "name": "extract_spielen_id",
            "location": 344,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_freebase_id": {
            "name": "extract_freebase_id",
            "location": 358,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_bga_id": {
            "name": "extract_bga_id",
            "location": 371,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "url": [
                    "Union[(str, ParseResult, None)]"
                ]
            }
        },
        "extract_ids": {
            "name": "extract_ids",
            "location": 384,
            "return": [
                "Dict[(str, List[Union[(int, str)]])]"
            ],
            "arguments": {}
        },
        "pubsub_client": {
            "name": "pubsub_client",
            "location": 400,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/version_env.py": {
        "_parse_args": {
            "name": "_parse_args",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/__init__.py": {},
    "board-game-scraper-master/board_game_scraper/__main__.py": {
        "_find_states": {
            "name": "_find_states",
            "location": 29,
            "return": [],
            "arguments": {
                "path_dir": [],
                "state_file": [],
                "delete": [],
                "delete_non_state": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 91,
            "return": [],
            "arguments": {}
        }
    },
    "board-game-scraper-master/board_game_scraper/__version__.py": {},
    "board-game-scraper-master/board_game_scraper/spiders/bga.py": {
        "_extract_bga_id": {
            "name": "_extract_bga_id",
            "location": 30,
            "return": [],
            "arguments": {
                "item": [],
                "response": []
            }
        },
        "_extract_requests": {
            "name": "_extract_requests",
            "location": 40,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "BgaSpider.from_crawler": {
            "name": "from_crawler",
            "location": 63,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "BgaSpider.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BgaSpider._api_url": {
            "name": "_api_url",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "query": []
            }
        },
        "BgaSpider._game_requests": {
            "name": "_game_requests",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "bga_id": []
            }
        },
        "BgaSpider._next_request_or_item": {
            "name": "_next_request_or_item",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "requests": []
            }
        },
        "BgaSpider.start_requests": {
            "name": "start_requests",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BgaSpider.parse": {
            "name": "parse",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BgaSpider.parse_images": {
            "name": "parse_images",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "item": []
            }
        },
        "BgaSpider.parse_videos": {
            "name": "parse_videos",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "item": []
            }
        },
        "BgaSpider.parse_reviews": {
            "name": "parse_reviews",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "item": []
            }
        },
        "BgaSpider.parse_user_reviews": {
            "name": "parse_user_reviews",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/bgg.py": {
        "_parse_int": {
            "name": "_parse_int",
            "location": 32,
            "return": [],
            "arguments": {
                "element": [],
                "xpath": [],
                "default": [],
                "lenient": []
            }
        },
        "_parse_player_count": {
            "name": "_parse_player_count",
            "location": 50,
            "return": [],
            "arguments": {
                "poll": []
            }
        },
        "_parse_votes": {
            "name": "_parse_votes",
            "location": 71,
            "return": [],
            "arguments": {
                "poll": [],
                "attr": [],
                "enum": []
            }
        },
        "_value_id": {
            "name": "_value_id",
            "location": 83,
            "return": [],
            "arguments": {
                "items": [],
                "sep": []
            }
        },
        "_remove_rank": {
            "name": "_remove_rank",
            "location": 90,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_value_id_rank": {
            "name": "_value_id_rank",
            "location": 98,
            "return": [],
            "arguments": {
                "items": [],
                "sep": []
            }
        },
        "BggSpider.from_crawler": {
            "name": "from_crawler",
            "location": 142,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "BggSpider.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BggSpider._spider_opened": {
            "name": "_spider_opened",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BggSpider._api_url": {
            "name": "_api_url",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "BggSpider._game_requests": {
            "name": "_game_requests",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BggSpider._game_request": {
            "name": "_game_request",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "bgg_id": [],
                "default": []
            }
        },
        "BggSpider.collection_request": {
            "name": "collection_request",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "user_name": []
            }
        },
        "BggSpider._filter_votes": {
            "name": "_filter_votes",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "votes_best": [],
                "votes_rec": [],
                "votes_not": [],
                "best": []
            }
        },
        "BggSpider._player_count_votes": {
            "name": "_player_count_votes",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "BggSpider._poll": {
            "name": "_poll",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "game": [],
                "name": [],
                "attr": [],
                "enum": [],
                "func": [],
                "default": []
            }
        },
        "BggSpider._user_item_or_request": {
            "name": "_user_item_or_request",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "user_name": [],
                "priority": [],
                "from_request": []
            }
        },
        "BggSpider.parse": {
            "name": "parse",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BggSpider.parse_game": {
            "name": "parse_game",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BggSpider.parse_collection": {
            "name": "parse_collection",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BggSpider.parse_user": {
            "name": "parse_user",
            "location": 673,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "item": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/bgg_geeklist.py": {
        "BggGeekListSpider.parse_game": {
            "name": "parse_game",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "response": []
            }
        },
        "BggGeekListSpider.parse_geeklist": {
            "name": "parse_geeklist",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "response": []
            }
        },
        "BggGeekListSpider.parse_item": {
            "name": "parse_item",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "response": []
            }
        },
        "BggGeekListSpider.parse": {
            "name": "parse",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/bgg_hotness.py": {
        "BggHotnessSpider._local_requests": {
            "name": "_local_requests",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "path_dir": []
            }
        },
        "BggHotnessSpider.start_requests": {
            "name": "start_requests",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BggHotnessSpider.parse": {
            "name": "parse",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/bgg_rankings.py": {
        "_parse_int": {
            "name": "_parse_int",
            "location": 27,
            "return": [],
            "arguments": {
                "element": [],
                "xpath": [],
                "css": [],
                "default": [],
                "lenient": []
            }
        },
        "_extract_bgg_id": {
            "name": "_extract_bgg_id",
            "location": 46,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "_start_urls": {
            "name": "_start_urls",
            "location": 70,
            "return": [],
            "arguments": {
                "paths": [],
                "bgg_domains": [],
                "prefix_urls": []
            }
        },
        "_parse_date": {
            "name": "_parse_date",
            "location": 86,
            "return": [],
            "arguments": {
                "date": [],
                "tzinfo": [],
                "format_str": []
            }
        },
        "_extract_date": {
            "name": "_extract_date",
            "location": 101,
            "return": [],
            "arguments": {
                "url": [],
                "tzinfo": [],
                "format_str": []
            }
        },
        "BggRankingsSpider.start_requests": {
            "name": "start_requests",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BggRankingsSpider.parse": {
            "name": "parse",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/dbpedia.py": {
        "_sparql_xpath": {
            "name": "_sparql_xpath",
            "location": 19,
            "return": [],
            "arguments": {
                "prop": []
            }
        },
        "DBpediaSpider._api_url": {
            "name": "_api_url",
            "location": 285,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "DBpediaSpider._type_requests": {
            "name": "_type_requests",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "types": [],
                "batch_size": []
            }
        },
        "DBpediaSpider.start_requests": {
            "name": "start_requests",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DBpediaSpider.parse": {
            "name": "parse",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "DBpediaSpider.parse_games": {
            "name": "parse_games",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "DBpediaSpider.parse_game": {
            "name": "parse_game",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/luding.py": {
        "LudingSpider.parse": {
            "name": "parse",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "LudingSpider.parse_game": {
            "name": "parse_game",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/spielen.py": {
        "_parse_interval": {
            "name": "_parse_interval",
            "location": 16,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "_parse_int": {
            "name": "_parse_int",
            "location": 23,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "SpielenSpider.parse": {
            "name": "parse",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "SpielenSpider.parse_game": {
            "name": "parse_game",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/wikidata.py": {
        "WikidataSpider._api_url": {
            "name": "_api_url",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "WikidataSpider._entity_url": {
            "name": "_entity_url",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "wikidata_id": [],
                "fformat": []
            }
        },
        "WikidataSpider._type_requests": {
            "name": "_type_requests",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "types": [],
                "batch_size": []
            }
        },
        "WikidataSpider.start_requests": {
            "name": "start_requests",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WikidataSpider.parse": {
            "name": "parse",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "WikidataSpider.parse_games": {
            "name": "parse_games",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "WikidataSpider.parse_game": {
            "name": "parse_game",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "board-game-scraper-master/board_game_scraper/spiders/__init__.py": {}
}
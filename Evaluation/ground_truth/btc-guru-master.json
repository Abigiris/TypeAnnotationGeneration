{
    "btc-guru-master/btc_guru/config.py": {
        "create_influxdb_client": {
            "name": "create_influxdb_client",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "create_influxdb_dataframe_client": {
            "name": "create_influxdb_dataframe_client",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "setup_logging": {
            "name": "setup_logging",
            "location": 20,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "level": [
                    "int"
                ]
            }
        }
    },
    "btc-guru-master/btc_guru/job_runner.py": {
        "run_threaded": {
            "name": "run_threaded",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "job_func": [
                    "Callable"
                ]
            }
        },
        "coinapi_job_factory": {
            "name": "coinapi_job_factory",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "mletl_job_factory": {
            "name": "mletl_job_factory",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ml_training_job_factory": {
            "name": "ml_training_job_factory",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SafeScheduler.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reschedule_on_failure": [
                    "bool"
                ],
                "logger": [
                    "logging.Logger"
                ]
            }
        },
        "SafeScheduler._run_job": {
            "name": "_run_job",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "job": [
                    "Job"
                ]
            }
        }
    },
    "btc-guru-master/btc_guru/webserver.py": {
        "index": {
            "name": "index",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "timeseries": {
            "name": "timeseries",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "ReverseProxied.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "ReverseProxied.__call__": {
            "name": "__call__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "environ": [],
                "start_response": []
            }
        }
    },
    "btc-guru-master/btc_guru/etl/coinapi.py": {
        "CoinApiETL.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "exchange_id": [],
                "asset_id_base": [],
                "asset_id_quote": [],
                "period_id": [],
                "time_start": [],
                "time_end": []
            }
        },
        "CoinApiETL.endpoint": {
            "name": "endpoint",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETL._create_request_parameters": {
            "name": "_create_request_parameters",
            "location": 33,
            "return": [
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETL.extract": {
            "name": "extract",
            "location": 40,
            "return": [
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETL.transform": {
            "name": "transform",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "List[Dict]"
                ]
            }
        }
    },
    "btc-guru-master/btc_guru/etl/influxdb_etl.py": {
        "InfluxdbETL.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxdbETL.load": {
            "name": "load",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "iterable": [
                    "Collection"
                ],
                "batch_size": []
            }
        }
    },
    "btc-guru-master/btc_guru/etl/initialize_database.py": {
        "CryptoDataDownloadETL.extract": {
            "name": "extract",
            "location": 10,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoDataDownloadETL.transform": {
            "name": "transform",
            "location": 14,
            "return": [
                "List[Dict]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "DataFrame"
                ]
            }
        }
    },
    "btc-guru-master/btc_guru/etl/ml.py": {
        "MLETL.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MLETL.extract": {
            "name": "extract",
            "location": 28,
            "return": [
                "ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "MLETL.transform": {
            "name": "transform",
            "location": 42,
            "return": [
                "List[Dict]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "ndarray"
                ]
            }
        }
    },
    "btc-guru-master/btc_guru/etl/__init__.py": {
        "ETL.extract": {
            "name": "extract",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETL.transform": {
            "name": "transform",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Any"
                ]
            }
        },
        "ETL.load": {
            "name": "load",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Any"
                ]
            }
        },
        "ETL.job": {
            "name": "job",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/helpers/database.py": {
        "InfluxdbQuery.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request_parameters": [
                    "Dict"
                ]
            }
        },
        "InfluxdbQuery._transform_dataframe": {
            "name": "_transform_dataframe",
            "location": 17,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "self": [],
                "dataframe": [
                    "DataFrame"
                ]
            }
        },
        "InfluxdbQuery.query": {
            "name": "query",
            "location": 22,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/helpers/models.py": {
        "InfluxdbModel.schema": {
            "name": "schema",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/helpers/__init__.py": {
        "grouper": {
            "name": "grouper",
            "location": 21,
            "return": [],
            "arguments": {
                "iterable": [
                    "Iterable"
                ],
                "n": [
                    "int"
                ],
                "fillvalue": []
            }
        },
        "ApiJSONEncoder.default": {
            "name": "default",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "o": []
            }
        }
    },
    "btc-guru-master/btc_guru/helpers/ml/tools.py": {
        "MLTools.train_model": {
            "name": "train_model",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "btc-guru-master/btc_guru/helpers/ml/__init__.py": {
        "build_model": {
            "name": "build_model",
            "location": 12,
            "return": [],
            "arguments": {
                "input_shape": [],
                "output_neurons": []
            }
        },
        "create_target_scaler": {
            "name": "create_target_scaler",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "create_preprocess_pipeline": {
            "name": "create_preprocess_pipeline",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "split_dataframe_on_columns": {
            "name": "split_dataframe_on_columns",
            "location": 34,
            "return": [
                "Tuple[(DataFrame, DataFrame)]"
            ],
            "arguments": {
                "dataframe": [
                    "DataFrame"
                ],
                "column_names": [
                    "List"
                ]
            }
        },
        "create_target": {
            "name": "create_target",
            "location": 39,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "dataframe": [
                    "DataFrame"
                ]
            }
        },
        "extract_features": {
            "name": "extract_features",
            "location": 44,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "dataframe": [
                    "DataFrame"
                ],
                "lookahead": []
            }
        },
        "transform_rnn_sequences": {
            "name": "transform_rnn_sequences",
            "location": 51,
            "return": [
                "Tuple[(np.ndarray, ...)]"
            ],
            "arguments": {
                "X": [
                    "np.ndarray"
                ],
                "y": [
                    "np.ndarray"
                ],
                "lookback": [],
                "lookahead": []
            }
        }
    },
    "btc-guru-master/btc_guru/tests/test_etls.py": {
        "CoinApiETLTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETLTest.test_endpoint": {
            "name": "test_endpoint",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETLTest.test_request_parameters": {
            "name": "test_request_parameters",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoinApiETLTest.test_transform": {
            "name": "test_transform",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CryptoDataDownloadETLTest.setUp": {
            "name": "setUp",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CryptoDataDownloadETLTest.test_transform": {
            "name": "test_transform",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/tests/test_helpers.py": {
        "HelpersTest.test_grouper": {
            "name": "test_grouper",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxdbApiQueryTest.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxdbApiQueryTest.test_init": {
            "name": "test_init",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxdbApiQueryTest.test_transform_dataframe": {
            "name": "test_transform_dataframe",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxdbApiQueryTest.test_query_empty_res": {
            "name": "test_query_empty_res",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "mock_create": []
            }
        },
        "InfluxdbApiQueryTest.test_query": {
            "name": "test_query",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "mock_create": []
            }
        },
        "TestInfluxdbModel.test_create_default": {
            "name": "test_create_default",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInfluxdbModel.test_create": {
            "name": "test_create",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInfluxdbModel.test_immutable": {
            "name": "test_immutable",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/tests/test_ml_helpers.py": {
        "TestCreateTarget.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateTarget.test_transform": {
            "name": "test_transform",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTransformRNNSequences.setUp": {
            "name": "setUp",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTransformRNNSequences.test_transform": {
            "name": "test_transform",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTransformRNNSequences.test_transform_long": {
            "name": "test_transform_long",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSplitDataframe.setUp": {
            "name": "setUp",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSplitDataframe.test_split_dataframe_on_columns": {
            "name": "test_split_dataframe_on_columns",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBuildModel.test_return_type": {
            "name": "test_return_type",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "btc-guru-master/btc_guru/tests/__init__.py": {}
}
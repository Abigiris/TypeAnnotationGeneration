{
    "bynder-python-sdk-master/setup.py": {
        "_run_linters": {
            "name": "_run_linters",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "_run_type_linting": {
            "name": "_run_type_linting",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "_run_tests": {
            "name": "_run_tests",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "_run_listdeps": {
            "name": "_run_listdeps",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "PyTest.initialize_options": {
            "name": "initialize_options",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.finalize_options": {
            "name": "finalize_options",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.run": {
            "name": "run",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Linting.initialize_options": {
            "name": "initialize_options",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Linting.finalize_options": {
            "name": "finalize_options",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Linting.run": {
            "name": "run",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListDeps.initialize_options": {
            "name": "initialize_options",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListDeps.finalize_options": {
            "name": "finalize_options",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListDeps.run": {
            "name": "run",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeps.initialize_options": {
            "name": "initialize_options",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeps.finalize_options": {
            "name": "finalize_options",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeps.run": {
            "name": "run",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/oauth2.py": {
        "oauth2_url": {
            "name": "oauth2_url",
            "location": 9,
            "return": [],
            "arguments": {
                "bynder_domain": [],
                "endpoint": []
            }
        },
        "BynderOAuth2Session.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "bynder_domain": []
            }
        },
        "BynderOAuth2Session.authorization_url": {
            "name": "authorization_url",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BynderOAuth2Session.fetch_token": {
            "name": "fetch_token",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/permanent_token.py": {
        "PermanentTokenSession.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "bynder_domain": [],
                "permanent_token": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/util.py": {
        "api_endpoint_url": {
            "name": "api_endpoint_url",
            "location": 8,
            "return": [],
            "arguments": {
                "session": [],
                "endpoint": []
            }
        },
        "parse_json_for_response": {
            "name": "parse_json_for_response",
            "location": 12,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "SessionMixin.wrapped_request": {
            "name": "wrapped_request",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "endpoint": []
            }
        },
        "SessionMixin.get": {
            "name": "get",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SessionMixin.post": {
            "name": "post",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SessionMixin.put": {
            "name": "put",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SessionMixin.delete": {
            "name": "delete",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SessionMixin._set_ua_header": {
            "name": "_set_ua_header",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/version.py": {},
    "bynder-python-sdk-master/bynder_sdk/__init__.py": {},
    "bynder-python-sdk-master/bynder_sdk/client/asset_bank_client.py": {
        "AssetBankClient.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "AssetBankClient.brands": {
            "name": "brands",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClient.tags": {
            "name": "tags",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.meta_properties": {
            "name": "meta_properties",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.media_list": {
            "name": "media_list",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.media_info": {
            "name": "media_info",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "media_id": [],
                "versions": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.media_download_url": {
            "name": "media_download_url",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "media_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.set_media_properties": {
            "name": "set_media_properties",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "media_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.delete_media": {
            "name": "delete_media",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "media_id": []
            }
        },
        "AssetBankClient.create_usage": {
            "name": "create_usage",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "integration_id": [],
                "asset_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.usage": {
            "name": "usage",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.delete_usage": {
            "name": "delete_usage",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "integration_id": [],
                "asset_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "AssetBankClient.upload_file": {
            "name": "upload_file",
            "location": 86,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "brand_id": [
                    "str"
                ],
                "media_id": [
                    "str"
                ],
                "query": [
                    "dict"
                ]
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/bynder_client.py": {
        "BynderClient.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "domain": []
            }
        },
        "BynderClient.get_authorization_url": {
            "name": "get_authorization_url",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BynderClient.fetch_token": {
            "name": "fetch_token",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "BynderClient.derivatives": {
            "name": "derivatives",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/collection_client.py": {
        "CollectionClient.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "CollectionClient.collections": {
            "name": "collections",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "CollectionClient.collection_info": {
            "name": "collection_info",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": []
            }
        },
        "CollectionClient.create_collection": {
            "name": "create_collection",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "query": [
                    "dict"
                ]
            }
        },
        "CollectionClient.delete_collection": {
            "name": "delete_collection",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": []
            }
        },
        "CollectionClient.collection_media_ids": {
            "name": "collection_media_ids",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": []
            }
        },
        "CollectionClient.add_media_to_collection": {
            "name": "add_media_to_collection",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": [],
                "media_ids": [
                    "list"
                ]
            }
        },
        "CollectionClient.remove_media_from_collection": {
            "name": "remove_media_from_collection",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": [],
                "media_ids": [
                    "list"
                ]
            }
        },
        "CollectionClient.share_collection": {
            "name": "share_collection",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "collection_id": [],
                "collection_option": [],
                "recipients": [
                    "list"
                ],
                "query": [
                    "dict"
                ]
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/pim_client.py": {
        "PIMClient.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "PIMClient.metaproperties": {
            "name": "metaproperties",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClient.metaproperty_info": {
            "name": "metaproperty_info",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "metaproperty_id": []
            }
        },
        "PIMClient.metaproperty_options": {
            "name": "metaproperty_options",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "metaproperty_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "PIMClient.edit_metaproperty_option": {
            "name": "edit_metaproperty_option",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "metaproperty_option_id": [],
                "children": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/upload_client.py": {
        "UploadClient.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "UploadClient.upload": {
            "name": "upload",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [],
                "media_id": [],
                "upload_data": []
            }
        },
        "UploadClient._run_s3_upload": {
            "name": "_run_s3_upload",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "UploadClient._init_upload": {
            "name": "_init_upload",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "total_parts": []
            }
        },
        "UploadClient._register_part": {
            "name": "_register_part",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "init_data": [],
                "part_nr": []
            }
        },
        "UploadClient._finalise_file": {
            "name": "_finalise_file",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "init_data": [],
                "total_parts": []
            }
        },
        "UploadClient._save_media": {
            "name": "_save_media",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "import_id": [],
                "data": [],
                "media_id": []
            }
        },
        "UploadClient._poll_status": {
            "name": "_poll_status",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "import_id": []
            }
        },
        "UploadClient._init_upload.part_data": {
            "name": "part_data",
            "location": 72,
            "return": [],
            "arguments": {
                "part_nr": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/workflow_client.py": {
        "WorkflowClient.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "WorkflowClient.users": {
            "name": "users",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClient.campaigns": {
            "name": "campaigns",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict"
                ]
            }
        },
        "WorkflowClient.campaign_info": {
            "name": "campaign_info",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "campaign_id": []
            }
        },
        "WorkflowClient.create_campaign": {
            "name": "create_campaign",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "key": [],
                "description": [],
                "responsible_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "WorkflowClient.delete_campaign": {
            "name": "delete_campaign",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "campaign_id": []
            }
        },
        "WorkflowClient.edit_campaign": {
            "name": "edit_campaign",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "campaign_id": [],
                "name": [],
                "key": [],
                "description": [],
                "responsible_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "WorkflowClient.metaproperties": {
            "name": "metaproperties",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClient.metaproperty_info": {
            "name": "metaproperty_info",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "metaproperty_id": []
            }
        },
        "WorkflowClient.groups": {
            "name": "groups",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClient.group_info": {
            "name": "group_info",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "group_id": []
            }
        },
        "WorkflowClient.job_preset_info": {
            "name": "job_preset_info",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "job_preset_id": []
            }
        },
        "WorkflowClient.jobs": {
            "name": "jobs",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "campaign_id": [
                    "str"
                ]
            }
        },
        "WorkflowClient.create_job": {
            "name": "create_job",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "campaign_id": [],
                "accountable_id": [],
                "preset_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "WorkflowClient.job_info": {
            "name": "job_info",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": []
            }
        },
        "WorkflowClient.edit_job": {
            "name": "edit_job",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": [],
                "name": [],
                "campaign_id": [],
                "accountable_id": [],
                "preset_id": [],
                "query": [
                    "dict"
                ]
            }
        },
        "WorkflowClient.delete_job": {
            "name": "delete_job",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": []
            }
        }
    },
    "bynder-python-sdk-master/bynder_sdk/client/__init__.py": {},
    "bynder-python-sdk-master/example/app.py": {
        "token_saver": {
            "name": "token_saver",
            "location": 32,
            "return": [],
            "arguments": {
                "token": []
            }
        }
    },
    "bynder-python-sdk-master/test/asset_bank_client_test.py": {
        "AssetBankClientTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_brands": {
            "name": "test_brands",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_tags": {
            "name": "test_tags",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_meta_properties": {
            "name": "test_meta_properties",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_media_list": {
            "name": "test_media_list",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_media_info": {
            "name": "test_media_info",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_download_url": {
            "name": "test_download_url",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_set_media_properties": {
            "name": "test_set_media_properties",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_delete_media": {
            "name": "test_delete_media",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_create_usage": {
            "name": "test_create_usage",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_get_usage": {
            "name": "test_get_usage",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_delete_usage": {
            "name": "test_delete_usage",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssetBankClientTest.test_upload_file": {
            "name": "test_upload_file",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/test/bynder_client_test.py": {
        "BynderClientTest.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BynderClientTest.test_create_bynder_client": {
            "name": "test_create_bynder_client",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BynderClientTest.test_fetch_token": {
            "name": "test_fetch_token",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "oauth2_mock": []
            }
        }
    },
    "bynder-python-sdk-master/test/collection_client_test.py": {
        "CollectionClientTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_collections": {
            "name": "test_collections",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_collection_info": {
            "name": "test_collection_info",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_create_collection": {
            "name": "test_create_collection",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_delete_collection": {
            "name": "test_delete_collection",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_collection_media_ids": {
            "name": "test_collection_media_ids",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_add_media_to_collection": {
            "name": "test_add_media_to_collection",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_remove_media_from_collection": {
            "name": "test_remove_media_from_collection",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionClientTest.test_share_collection": {
            "name": "test_share_collection",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/test/oauth2_session_test.py": {
        "OAuth2Test.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OAuth2Test.test_oauth2_url": {
            "name": "test_oauth2_url",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OAuth2Test.test_api_endpoint_url": {
            "name": "test_api_endpoint_url",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OAuth2Test.test_authorization_url": {
            "name": "test_authorization_url",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "mocked_func": []
            }
        },
        "OAuth2Test.test_fetch_token": {
            "name": "test_fetch_token",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "mocked_func": []
            }
        },
        "OAuth2Test.test_user_agent_header": {
            "name": "test_user_agent_header",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/test/pim_client_test.py": {
        "PIMClientTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClientTest.tearDown": {
            "name": "tearDown",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClientTest.test_metaproperties": {
            "name": "test_metaproperties",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClientTest.test_metaproperty_info": {
            "name": "test_metaproperty_info",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClientTest.test_metaproperty_options": {
            "name": "test_metaproperty_options",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PIMClientTest.test_edit_metaproperty_option": {
            "name": "test_edit_metaproperty_option",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/test/workflow_client_test.py": {
        "WorkflowClientTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_users": {
            "name": "test_users",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_campaigns": {
            "name": "test_campaigns",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_campaign_info": {
            "name": "test_campaign_info",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_create_campaign": {
            "name": "test_create_campaign",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_edit_campaign": {
            "name": "test_edit_campaign",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_delete_campaign": {
            "name": "test_delete_campaign",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_metaproperties": {
            "name": "test_metaproperties",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_metaproperty_info": {
            "name": "test_metaproperty_info",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_groups": {
            "name": "test_groups",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_group_info": {
            "name": "test_group_info",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_job_preset_info": {
            "name": "test_job_preset_info",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_jobs": {
            "name": "test_jobs",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_create_job": {
            "name": "test_create_job",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_job_info": {
            "name": "test_job_info",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_edit_job": {
            "name": "test_edit_job",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkflowClientTest.test_delete_job": {
            "name": "test_delete_job",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bynder-python-sdk-master/test/__init__.py": {
        "create_bynder_client": {
            "name": "create_bynder_client",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    }
}
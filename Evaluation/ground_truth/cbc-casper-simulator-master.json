{
    "cbc-casper-simulator-master/main.py": {
        "main": {
            "name": "main",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/block.py": {
        "Block.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "active_validators": [
                    "List[Validator]"
                ],
                "parent_hash": [
                    "Optional[int]"
                ]
            }
        },
        "Block.genesis": {
            "name": "genesis",
            "location": 23,
            "return": [
                "Block"
            ],
            "arguments": {
                "cls": [],
                "active_validators": [
                    "List[Validator]"
                ]
            }
        },
        "Block.is_genesis": {
            "name": "is_genesis",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Block.is_checkpoint": {
            "name": "is_checkpoint",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "checkpoint_interval": [
                    "int"
                ]
            }
        },
        "Block.dump": {
            "name": "dump",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/block_proposer.py": {
        "BlockProposer.choose": {
            "name": "choose",
            "location": 9,
            "return": [
                "Optional[Validator]"
            ],
            "arguments": {
                "cls": [],
                "slot": [
                    "int"
                ],
                "validators": [
                    "List[Validator]"
                ]
            }
        },
        "BlockProposer.gen_hash": {
            "name": "gen_hash",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [],
                "slot": [
                    "int"
                ],
                "validators": [
                    "List[Validator]"
                ]
            }
        },
        "BlockProposer.sha256_digest": {
            "name": "sha256_digest",
            "location": 28,
            "return": [
                "bytes"
            ],
            "arguments": {
                "cls": [],
                "text": [
                    "str"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/error.py": {
        "Error.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "reason": [
                    "str"
                ]
            }
        },
        "Error.__repr__": {
            "name": "__repr__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageNotJustifiedError.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "message_hashes": [
                    "List[int]"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/justification.py": {
        "Justification.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "latest_message_hashes": [
                    "Dict[('Validator', int)]"
                ]
            }
        },
        "Justification.dump": {
            "name": "dump",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "state": [
                    "'State'"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/message.py": {
        "Message.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [
                    "Validator"
                ],
                "estimate": [
                    "Block"
                ],
                "justification": [
                    "Justification"
                ],
                "sender_slot": [
                    "int"
                ]
            }
        },
        "Message.genesis": {
            "name": "genesis",
            "location": 29,
            "return": [
                "Message"
            ],
            "arguments": {
                "cls": [],
                "sender": [
                    "Validator"
                ],
                "active_validators": [
                    "List[Validator]"
                ]
            }
        },
        "Message.is_genesis": {
            "name": "is_genesis",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.dump": {
            "name": "dump",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "state": [
                    "State"
                ],
                "parent_message": [
                    "Message"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/message_validator.py": {
        "MessageValidator.validate": {
            "name": "validate",
            "location": 15,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "message": [
                    "Message"
                ]
            }
        },
        "MessageValidator.justification_is_justified": {
            "name": "justification_is_justified",
            "location": 25,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "justification": [
                    "Justification"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/state.py": {
        "State.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "ticker": [
                    "Optional[Ticker]"
                ]
            }
        },
        "State.transition": {
            "name": "transition",
            "location": 20,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ]
            }
        },
        "State.check_message": {
            "name": "check_message",
            "location": 32,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ]
            }
        },
        "State.justify_message": {
            "name": "justify_message",
            "location": 43,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ]
            }
        },
        "State.justification": {
            "name": "justification",
            "location": 48,
            "return": [
                "Justification"
            ],
            "arguments": {
                "self": []
            }
        },
        "State.dump": {
            "name": "dump",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "State.tick": {
            "name": "tick",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "State.current_slot": {
            "name": "current_slot",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/store.py": {
        "Store.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Store.add": {
            "name": "add",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Store.message": {
            "name": "message",
            "location": 38,
            "return": [
                "Optional[Message]"
            ],
            "arguments": {
                "self": [],
                "hash": [
                    "int"
                ]
            }
        },
        "Store.latest_message_hashes": {
            "name": "latest_message_hashes",
            "location": 41,
            "return": [
                "Dict[('Validator', int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store.latest_messages": {
            "name": "latest_messages",
            "location": 44,
            "return": [
                "Dict[('Validator', Message)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store.parent_message": {
            "name": "parent_message",
            "location": 47,
            "return": [
                "Optional[Message]"
            ],
            "arguments": {
                "self": [],
                "hash_or_message": [
                    "Union[(int, Message)]"
                ]
            }
        },
        "Store.children_messages": {
            "name": "children_messages",
            "location": 53,
            "return": [
                "List[Message]"
            ],
            "arguments": {
                "self": [],
                "hash_or_message": [
                    "Union[(int, Message)]"
                ]
            }
        },
        "Store.parent_block": {
            "name": "parent_block",
            "location": 59,
            "return": [
                "Optional[Block]"
            ],
            "arguments": {
                "self": [],
                "hash_or_block": [
                    "Union[(int, Block)]"
                ]
            }
        },
        "Store.children_blocks": {
            "name": "children_blocks",
            "location": 67,
            "return": [
                "List[Block]"
            ],
            "arguments": {
                "self": [],
                "hash_or_block": [
                    "Union[(int, Block)]"
                ]
            }
        },
        "Store.has_children_blocks": {
            "name": "has_children_blocks",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "hash_or_block": [
                    "Union[(int, Block)]"
                ]
            }
        },
        "Store.to_message": {
            "name": "to_message",
            "location": 77,
            "return": [
                "Optional[Message]"
            ],
            "arguments": {
                "self": [],
                "hash_or_block": [
                    "Union[(int, Block)]"
                ]
            }
        },
        "Store.to_block": {
            "name": "to_block",
            "location": 83,
            "return": [
                "Optional[Block]"
            ],
            "arguments": {
                "self": [],
                "hash_or_message": [
                    "Union[(int, Message)]"
                ]
            }
        },
        "Store.justified": {
            "name": "justified",
            "location": 88,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "hash_or_message": [
                    "Union[(int, Message)]"
                ]
            }
        },
        "Store.genesis_block": {
            "name": "genesis_block",
            "location": 93,
            "return": [
                "Block"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store.dump": {
            "name": "dump",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/validator.py": {
        "Validator.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "initial_weight": [
                    "float"
                ],
                "ticker": [
                    "Ticker"
                ]
            }
        },
        "Validator.create_message": {
            "name": "create_message",
            "location": 28,
            "return": [
                "Message"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validator.create_estimate": {
            "name": "create_estimate",
            "location": 40,
            "return": [
                "Block"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validator.head": {
            "name": "head",
            "location": 51,
            "return": [
                "Block"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validator.add_message": {
            "name": "add_message",
            "location": 55,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ]
            }
        },
        "Validator.message_is_to_be_pending": {
            "name": "message_is_to_be_pending",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ]
            }
        },
        "Validator.tick": {
            "name": "tick",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Validator.gen_name": {
            "name": "gen_name",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "message": [
                    "Message"
                ],
                "slot": [
                    "int"
                ],
                "checkpoint_interval": [
                    "int"
                ],
                "checkpoint_rotation_count": [
                    "int"
                ]
            }
        },
        "Validator.dump": {
            "name": "dump",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Validator.__eq__": {
            "name": "__eq__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "other": [
                    "Validator"
                ]
            }
        },
        "Validator.__hash__": {
            "name": "__hash__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/validator_set.py": {
        "ValidatorSet.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "validators": [
                    "List[Validator]"
                ]
            }
        },
        "ValidatorSet.choice": {
            "name": "choice",
            "location": 19,
            "return": [
                "List[Validator]"
            ],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "ValidatorSet.choice_one": {
            "name": "choice_one",
            "location": 23,
            "return": [
                "Validator"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValidatorSet.all": {
            "name": "all",
            "location": 26,
            "return": [
                "List[Validator]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValidatorSet.dump": {
            "name": "dump",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ValidatorSet.with_random_weight": {
            "name": "with_random_weight",
            "location": 33,
            "return": [
                "ValidatorSet"
            ],
            "arguments": {
                "cls": [],
                "num": [],
                "ticker": []
            }
        },
        "ValidatorSet.with_equal_weight": {
            "name": "with_equal_weight",
            "location": 40,
            "return": [
                "ValidatorSet"
            ],
            "arguments": {
                "cls": [],
                "num": [],
                "ticker": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/__init__.py": {},
    "cbc-casper-simulator-master/cbc_casper_simulator/estimator/lmd_ghost_estimator.py": {
        "LMDGhostEstimator.head": {
            "name": "head",
            "location": 10,
            "return": [
                "Block"
            ],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "justification": [
                    "Justification"
                ]
            }
        },
        "LMDGhostEstimator.verify": {
            "name": "verify",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "block": [
                    "Block"
                ],
                "justification": [
                    "Justification"
                ]
            }
        },
        "LMDGhostEstimator.score": {
            "name": "score",
            "location": 26,
            "return": [
                "Dict[(Block, float)]"
            ],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "justification": [
                    "Justification"
                ]
            }
        },
        "LMDGhostEstimator.dump": {
            "name": "dump",
            "location": 39,
            "return": [],
            "arguments": {
                "cls": [],
                "state": [
                    "State"
                ],
                "justification": [
                    "Justification"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/estimator/__init__.py": {},
    "cbc-casper-simulator-master/cbc_casper_simulator/examples/broadcast.py": {
        "simulate": {
            "name": "simulate",
            "location": 7,
            "return": [],
            "arguments": {
                "render": []
            }
        },
        "visualize_validator_state": {
            "name": "visualize_validator_state",
            "location": 31,
            "return": [],
            "arguments": {
                "validator": [],
                "output": [],
                "render": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/examples/lmd_ghost.py": {
        "simulate": {
            "name": "simulate",
            "location": 8,
            "return": [],
            "arguments": {
                "render": []
            }
        },
        "visualize_block_score": {
            "name": "visualize_block_score",
            "location": 32,
            "return": [],
            "arguments": {
                "result": [],
                "output": [],
                "render": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/examples/simple.py": {
        "run": {
            "name": "run",
            "location": 6,
            "return": [],
            "arguments": {
                "input": [],
                "output": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/examples/__init__.py": {},
    "cbc-casper-simulator-master/cbc_casper_simulator/network/buffer.py": {
        "Buffer.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Buffer.add_packet_to_be_arrived": {
            "name": "add_packet_to_be_arrived",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "receiver": [
                    "Validator"
                ],
                "arrival_slot": [
                    "int"
                ],
                "packet": [
                    "Packet"
                ]
            }
        },
        "Buffer.read": {
            "name": "read",
            "location": 18,
            "return": [
                "List[Packet]"
            ],
            "arguments": {
                "self": [],
                "receiver": [
                    "Validator"
                ],
                "slot": [
                    "int"
                ]
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/network/model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "validator_set": [
                    "ValidatorSet"
                ],
                "ticker": [
                    "Ticker"
                ]
            }
        },
        "Model.send": {
            "name": "send",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ],
                "sender": [
                    "Validator"
                ],
                "receiver": [
                    "Validator"
                ]
            }
        },
        "Model.receive": {
            "name": "receive",
            "location": 30,
            "return": [
                "List[Packet]"
            ],
            "arguments": {
                "self": [],
                "receiver": [
                    "Validator"
                ]
            }
        },
        "Model.broadcast": {
            "name": "broadcast",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "message": [
                    "Message"
                ],
                "sender": [
                    "Validator"
                ]
            }
        },
        "Model.join": {
            "name": "join",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "new_validator": [
                    "Validator"
                ],
                "source_validator": [
                    "Optional[Validator]"
                ]
            }
        },
        "Model.exit": {
            "name": "exit",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "validator": [
                    "Validator"
                ]
            }
        },
        "Model.dump": {
            "name": "dump",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/network/packet.py": {},
    "cbc-casper-simulator-master/cbc_casper_simulator/safety_oracle/clique_oracle.py": {
        "CliqueOracle.check_safety": {
            "name": "check_safety",
            "location": 7,
            "return": [
                "Result[(Error, bool)]"
            ],
            "arguments": {
                "cls": [],
                "block": [],
                "state": [],
                "validator_set": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/simulator/broadcast_and_receive_simulator.py": {
        "BroadCastAndReceiveSimulator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ]
            }
        },
        "BroadCastAndReceiveSimulator.__iter__": {
            "name": "__iter__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BroadCastAndReceiveSimulator.__next__": {
            "name": "__next__",
            "location": 26,
            "return": [
                "NetworkModel"
            ],
            "arguments": {
                "self": []
            }
        },
        "BroadCastAndReceiveSimulator.validator_rotation": {
            "name": "validator_rotation",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "slot": [
                    "int"
                ],
                "message": [
                    "Message"
                ]
            }
        },
        "BroadCastAndReceiveSimulator.broadcast_from_random_validator": {
            "name": "broadcast_from_random_validator",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BroadCastAndReceiveSimulator.all_validators_receive_all_packets": {
            "name": "all_validators_receive_all_packets",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/simulator/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "validator_num": [
                    "int"
                ],
                "max_slot": [
                    "int"
                ],
                "checkpoint_interval": [
                    "int"
                ],
                "rotation_ratio": [
                    "float"
                ]
            }
        },
        "Config.default": {
            "name": "default",
            "location": 19,
            "return": [
                "Config"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Config.from_yaml": {
            "name": "from_yaml",
            "location": 23,
            "return": [
                "Config"
            ],
            "arguments": {
                "cls": [],
                "name": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/simulator/__init__.py": {},
    "cbc-casper-simulator-master/cbc_casper_simulator/util/ticker.py": {
        "Ticker.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "initial_slot": [
                    "int"
                ]
            }
        },
        "Ticker.tick": {
            "name": "tick",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ticker.current": {
            "name": "current",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cbc-casper-simulator-master/cbc_casper_simulator/util/__init__.py": {},
    "cbc-casper-simulator-master/tests/test_block_proposer.py": {
        "test_choose": {
            "name": "test_choose",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/test_store.py": {
        "test_store": {
            "name": "test_store",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/__init__.py": {},
    "cbc-casper-simulator-master/tests/estimator/test_lmd_ghost.py": {
        "test_head": {
            "name": "test_head",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_head_when_tie_exists": {
            "name": "test_head_when_tie_exists",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/estimator/__init__.py": {},
    "cbc-casper-simulator-master/tests/example/test_broadcast.py": {
        "test_simulate": {
            "name": "test_simulate",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/example/test_lmd_ghost.py": {
        "test_simulate": {
            "name": "test_simulate",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/example/__init__.py": {},
    "cbc-casper-simulator-master/tests/simulator/test_broadcast_and_receive_simulator.py": {
        "test_simulate": {
            "name": "test_simulate",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/util/test_ticker.py": {
        "test_tick": {
            "name": "test_tick",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "cbc-casper-simulator-master/tests/util/__init__.py": {}
}
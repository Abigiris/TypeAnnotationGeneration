{
    "celery-farmer-master/setup.py": {},
    "celery-farmer-master/example_celery_app/tasks.py": {
        "add": {
            "name": "add",
            "location": 9,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "celery-farmer-master/example_celery_app/__init__.py": {},
    "celery-farmer-master/src/celery_farmer/application.py": {
        "Farmer.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "broker_url": [
                    "str"
                ],
                "poll_time": [
                    "float"
                ],
                "statsd_config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Farmer.start": {
            "name": "start",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Farmer.stop": {
            "name": "stop",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/broker.py": {
        "Broker.get_queue_length": {
            "name": "get_queue_length",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "str"
                ]
            }
        },
        "RedisBroker.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_uri": [
                    "str"
                ]
            }
        },
        "RedisBroker.get_queue_length": {
            "name": "get_queue_length",
            "location": 14,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "str"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/cli.py": {
        "cli": {
            "name": "cli",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "start": {
            "name": "start",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str"
                ],
                "poll_time": [
                    "float"
                ],
                "statsd_host": [
                    "str"
                ],
                "statsd_port": [
                    "int"
                ],
                "statsd_prefix": [
                    "str"
                ]
            }
        },
        "start.stop_farmer": {
            "name": "stop_farmer",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "farmer": [
                    "Farmer"
                ],
                "signal": [
                    "int"
                ],
                "frame": [
                    "FrameInfo"
                ]
            }
        },
        "start.construct_statsd_configs": {
            "name": "construct_statsd_configs",
            "location": 33,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "host": [
                    "str"
                ],
                "port": [
                    "int"
                ],
                "prefix": [
                    "str"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/enable_events.py": {
        "EnableEvents.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "celery_app": [
                    "Celery"
                ],
                "poll_time": [
                    "float"
                ]
            }
        },
        "EnableEvents.stop": {
            "name": "stop",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnableEvents.run": {
            "name": "run",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/event_listener.py": {
        "EventListener.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "celery_app": [
                    "Celery"
                ],
                "statsd_client": [
                    "StatsClient"
                ]
            }
        },
        "EventListener.stop": {
            "name": "stop",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventListener.run": {
            "name": "run",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventListener.on_event": {
            "name": "on_event",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "EventListener.track_event": {
            "name": "track_event",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task": [
                    "State.Task"
                ]
            }
        },
        "EventListener.track_timing": {
            "name": "track_timing",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task": [
                    "State.Task"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/queue_lengths.py": {
        "QueueLengths.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "celery_app": [
                    "Celery"
                ],
                "statsd_client": [
                    "StatsClient"
                ],
                "poll_time": [
                    "float"
                ]
            }
        },
        "QueueLengths.stop": {
            "name": "stop",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueLengths.run": {
            "name": "run",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueLengths._get_active_queues": {
            "name": "_get_active_queues",
            "location": 48,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueLengths._track_queue_length": {
            "name": "_track_queue_length",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue_name": [
                    "str"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/statsd.py": {
        "StatsClient.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "StatsClient.timer": {
            "name": "timer",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "rate": [
                    "int"
                ]
            }
        },
        "StatsClient.timing": {
            "name": "timing",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "delta": [
                    "float"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "rate": [
                    "int"
                ]
            }
        },
        "StatsClient.incr": {
            "name": "incr",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "count": [
                    "int"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "rate": [
                    "int"
                ]
            }
        },
        "StatsClient.decr": {
            "name": "decr",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "count": [
                    "int"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "rate": [
                    "int"
                ]
            }
        },
        "StatsClient.gauge": {
            "name": "gauge",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "value": [
                    "float"
                ],
                "rate": [
                    "int"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "delta": [
                    "bool"
                ]
            }
        },
        "StatsClient.set": {
            "name": "set",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "value": [
                    "float"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ],
                "rate": [
                    "int"
                ]
            }
        },
        "StatsClient._get_stat": {
            "name": "_get_stat",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "str"
                ],
                "tags": [
                    "Optional[Dict[(str, str)]]"
                ]
            }
        },
        "StatsClient._format_tags": {
            "name": "_format_tags",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "tags": [
                    "Dict[(str, str)]"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/task.py": {
        "get_tags": {
            "name": "get_tags",
            "location": 6,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "task": [
                    "State.Task"
                ]
            }
        }
    },
    "celery-farmer-master/src/celery_farmer/__init__.py": {},
    "celery-farmer-master/tests/conftest.py": {
        "celery_app": {
            "name": "celery_app",
            "location": 8,
            "return": [
                "Celery"
            ],
            "arguments": {}
        },
        "statsd_mock": {
            "name": "statsd_mock",
            "location": 13,
            "return": [
                "Mock"
            ],
            "arguments": {}
        }
    },
    "celery-farmer-master/tests/fixtures.py": {},
    "celery-farmer-master/tests/helpers.py": {
        "wait_until_success": {
            "name": "wait_until_success",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "function": [
                    "Callable[([], None)]"
                ],
                "poll_time": [
                    "float"
                ],
                "poll_count": [
                    "int"
                ]
            }
        }
    },
    "celery-farmer-master/tests/test_cli.py": {
        "_runner": {
            "name": "_runner",
            "location": 10,
            "return": [
                "CliRunner"
            ],
            "arguments": {}
        },
        "test_start_gives_error_if_broker_is_missing": {
            "name": "test_start_gives_error_if_broker_is_missing",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "pause_mock": [
                    "Mock"
                ],
                "_runner": [
                    "CliRunner"
                ]
            }
        },
        "test_starts_farmer": {
            "name": "test_starts_farmer",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "pause_mock": [
                    "Mock"
                ],
                "start_patch": [
                    "Mock"
                ],
                "_runner": [
                    "CliRunner"
                ]
            }
        }
    },
    "celery-farmer-master/tests/test_enable_events.py": {
        "_enable_events_thread": {
            "name": "_enable_events_thread",
            "location": 12,
            "return": [
                "Iterator[EnableEvents]"
            ],
            "arguments": {
                "celery_app": [
                    "Celery"
                ]
            }
        },
        "test_enabling_events": {
            "name": "test_enabling_events",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "celery_enable_events": [
                    "Mock"
                ],
                "_enable_events_thread": [
                    "EnableEvents"
                ]
            }
        },
        "test_enabling_events.assert_enable_called": {
            "name": "assert_enable_called",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "celery-farmer-master/tests/test_event_listener.py": {
        "_listener": {
            "name": "_listener",
            "location": 11,
            "return": [
                "EventListener"
            ],
            "arguments": {
                "celery_app": [
                    "Celery"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "test_tracks_counts_of_events": {
            "name": "test_tracks_counts_of_events",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "_listener": [
                    "EventListener"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "test_tracks_times": {
            "name": "test_tracks_times",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "_listener": [
                    "EventListener"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "test_cleans_tracked_times": {
            "name": "test_cleans_tracked_times",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "_listener": [
                    "EventListener"
                ]
            }
        }
    },
    "celery-farmer-master/tests/test_queue_lengths.py": {
        "_queue_lengths": {
            "name": "_queue_lengths",
            "location": 13,
            "return": [
                "Iterator[QueueLengths]"
            ],
            "arguments": {
                "celery_app": [
                    "Celery"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "_active_queues": {
            "name": "_active_queues",
            "location": 28,
            "return": [
                "Iterator[Mock]"
            ],
            "arguments": {}
        },
        "test_tracks_counts_of_events": {
            "name": "test_tracks_counts_of_events",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "_active_queues": [
                    "Mock"
                ],
                "_queue_lengths": [
                    "QueueLengths"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "test_sends_heartbeats": {
            "name": "test_sends_heartbeats",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "_active_queues": [
                    "Mock"
                ],
                "_queue_lengths": [
                    "QueueLengths"
                ],
                "statsd_mock": [
                    "Mock"
                ]
            }
        },
        "test_tracks_counts_of_events.assert_mock_gauge_called": {
            "name": "assert_mock_gauge_called",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sends_heartbeats.assert_mock_incr_called": {
            "name": "assert_mock_incr_called",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "celery-farmer-master/tests/test_redis_broker.py": {
        "test_parses_full_uri": {
            "name": "test_parses_full_uri",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parses_uri_without_database": {
            "name": "test_parses_uri_without_database",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "celery-farmer-master/tests/__init__.py": {}
}
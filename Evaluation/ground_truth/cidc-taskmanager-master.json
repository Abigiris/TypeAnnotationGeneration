{
    "cidc-taskmanager-master/celeryconfig.py": {},
    "cidc-taskmanager-master/__init__.py": {},
    "cidc-taskmanager-master/framework/__init__.py": {},
    "cidc-taskmanager-master/framework/celery/celery.py": {
        "setup_periodic_tasks": {
            "name": "setup_periodic_tasks",
            "location": 31,
            "return": [],
            "arguments": {
                "sender": []
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/administrative_tasks.py": {
        "get_user_trials": {
            "name": "get_user_trials",
            "location": 37,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "user_email": [
                    "str"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "get_user_records": {
            "name": "get_user_records",
            "location": 53,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "permissions": [
                    "List[dict]"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "clear_permissions": {
            "name": "clear_permissions",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "user_id": [
                    "str"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "deactivate_account": {
            "name": "deactivate_account",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "dict"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "add_new_user": {
            "name": "add_new_user",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "new_user": [
                    "dict"
                ]
            }
        },
        "delete_user_account": {
            "name": "delete_user_account",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "dict"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "call_deactivate_account": {
            "name": "call_deactivate_account",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "dict"
                ],
                "method": [
                    "str"
                ]
            }
        },
        "test_eve_rate_limit": {
            "name": "test_eve_rate_limit",
            "location": 263,
            "return": [
                "bool"
            ],
            "arguments": {
                "num_requests": [
                    "int"
                ]
            }
        },
        "check_last_login": {
            "name": "check_last_login",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fetch_last_log_id": {
            "name": "fetch_last_log_id",
            "location": 312,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "update_last_id": {
            "name": "update_last_id",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "last_log": []
            }
        },
        "poll_auth0_logs": {
            "name": "poll_auth0_logs",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_authorized_users": {
            "name": "get_authorized_users",
            "location": 380,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "record_info": [
                    "dict"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "change_user_role": {
            "name": "change_user_role",
            "location": 408,
            "return": [
                "None"
            ],
            "arguments": {
                "user_id": [
                    "str"
                ],
                "token": [
                    "str"
                ],
                "new_role": [
                    "str"
                ],
                "authorizer": [
                    "str"
                ]
            }
        },
        "grant_trial_access": {
            "name": "grant_trial_access",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {
                "users": [
                    "List[str]"
                ],
                "admin": [
                    "str"
                ],
                "trial": [
                    "dict"
                ]
            }
        },
        "manage_bucket_acl": {
            "name": "manage_bucket_acl",
            "location": 476,
            "return": [
                "None"
            ],
            "arguments": {
                "bucket_name": [
                    "str"
                ],
                "gs_path": [
                    "str"
                ],
                "authorized_users": [
                    "List[str]"
                ]
            }
        },
        "change_upload_permission": {
            "name": "change_upload_permission",
            "location": 532,
            "return": [
                "None"
            ],
            "arguments": {
                "bucket_name": [
                    "str"
                ],
                "user_emails": [
                    "List[str]"
                ],
                "grant_or_revoke": [
                    "bool"
                ]
            }
        },
        "revoke_access": {
            "name": "revoke_access",
            "location": 565,
            "return": [
                "None"
            ],
            "arguments": {
                "bucket_name": [
                    "str"
                ],
                "gs_paths": [
                    "List[str]"
                ],
                "emails": [
                    "List[str]"
                ]
            }
        },
        "lock_trial": {
            "name": "lock_trial",
            "location": 595,
            "return": [
                "bool"
            ],
            "arguments": {
                "trial_id": [
                    "str"
                ],
                "admin": [
                    "str"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/analysis_tasks.py": {
        "create_input_json": {
            "name": "create_input_json",
            "location": 20,
            "return": [
                "dict"
            ],
            "arguments": {
                "sample_assay": [
                    "dict"
                ],
                "assay": [
                    "dict"
                ]
            }
        },
        "set_record_processed": {
            "name": "set_record_processed",
            "location": 72,
            "return": [
                "bool"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ],
                "condition": [
                    "bool"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "check_processed": {
            "name": "check_processed",
            "location": 102,
            "return": [
                "Tuple[(List[dict], bool)]"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ],
                "token": [
                    "str"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/authorized_task.py": {
        "get_token": {
            "name": "get_token",
            "location": 16,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "get_management_token": {
            "name": "get_management_token",
            "location": 37,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "AuthorizedTask.token": {
            "name": "token",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AuthorizedTask.api_token": {
            "name": "api_token",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/data_classes.py": {},
    "cidc-taskmanager-master/framework/tasks/hugo_tasks.py": {
        "mk_error": {
            "name": "mk_error",
            "location": 32,
            "return": [
                "dict"
            ],
            "arguments": {
                "explanation": [
                    "str"
                ],
                "affected_paths": [
                    "List[str]"
                ],
                "raw_or_parse": [
                    "str"
                ],
                "severity": [
                    "str"
                ]
            }
        },
        "chunked_upload": {
            "name": "chunked_upload",
            "location": 63,
            "return": [],
            "arguments": {
                "symbols": [
                    "List[dict]"
                ]
            }
        },
        "refresh_hugo_defs": {
            "name": "refresh_hugo_defs",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "check_symbols_valid": {
            "name": "check_symbols_valid",
            "location": 117,
            "return": [
                "dict"
            ],
            "arguments": {
                "symbols": [
                    "List[str]"
                ]
            }
        },
        "get_gz_ftp": {
            "name": "get_gz_ftp",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "server_url": [
                    "str"
                ],
                "directory": [
                    "str"
                ],
                "file_name": [
                    "str"
                ]
            }
        },
        "build_gene_collection": {
            "name": "build_gene_collection",
            "location": 173,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "tsv": [
                    "str"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/parallelize_tasks.py": {
        "execute_in_parallel": {
            "name": "execute_in_parallel",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "tasks": [
                    "List[object]"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/processing_tasks.py": {
        "add_record_context": {
            "name": "add_record_context",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        },
        "process_table": {
            "name": "process_table",
            "location": 58,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        },
        "reformat_maf": {
            "name": "reformat_maf",
            "location": 105,
            "return": [
                "dict"
            ],
            "arguments": {
                "new_record": [
                    "dict"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        },
        "combine_mafs": {
            "name": "combine_mafs",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "combined_file_name": [
                    "str"
                ]
            }
        },
        "create_new_maf": {
            "name": "create_new_maf",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "context": [
                    "RecordContext"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "process_maf": {
            "name": "process_maf",
            "location": 244,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        },
        "log_record_upload": {
            "name": "log_record_upload",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ],
                "endpoint": [
                    "str"
                ]
            }
        },
        "report_validation_issues": {
            "name": "report_validation_issues",
            "location": 344,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "response": [
                    "dict"
                ],
                "records": [
                    "List[dict]"
                ]
            }
        },
        "update_child_list": {
            "name": "update_child_list",
            "location": 382,
            "return": [
                "dict"
            ],
            "arguments": {
                "record_response": [
                    "dict"
                ],
                "endpoint": [
                    "str"
                ],
                "parent_id": [
                    "str"
                ]
            }
        },
        "process_file": {
            "name": "process_file",
            "location": 456,
            "return": [
                "bool"
            ],
            "arguments": {
                "rec": [
                    "dict"
                ],
                "pro": [
                    "str"
                ]
            }
        },
        "postprocessing": {
            "name": "postprocessing",
            "location": 562,
            "return": [
                "None"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/process_npx.py": {
        "mk_error": {
            "name": "mk_error",
            "location": 104,
            "return": [
                "dict"
            ],
            "arguments": {
                "explanation": [
                    "str"
                ],
                "affected_paths": [
                    "List[str]"
                ],
                "raw_or_parse": [
                    "str"
                ],
                "severity": [
                    "str"
                ]
            }
        },
        "add_file_extension": {
            "name": "add_file_extension",
            "location": 134,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "extension": [
                    "str"
                ]
            }
        },
        "lazy_remove": {
            "name": "lazy_remove",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "diff_fields": {
            "name": "diff_fields",
            "location": 167,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "actual": [
                    "List[str]"
                ],
                "expected": [
                    "List[str]"
                ]
            }
        },
        "bad_xlsx": {
            "name": "bad_xlsx",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "record_errs": [
                    "List[dict]"
                ],
                "path": [
                    "str"
                ],
                "err": [
                    "InvalidFileException"
                ]
            }
        },
        "validate_qc_info": {
            "name": "validate_qc_info",
            "location": 208,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "generators": [
                    "SampleInfo"
                ],
                "errors": [
                    "List[dict]"
                ]
            }
        },
        "extract_assay_data": {
            "name": "extract_assay_data",
            "location": 248,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "assay_obj": [
                    "AssayColumn"
                ],
                "sample_ids": [
                    "List[str]"
                ],
                "errors": [
                    "List[dict]"
                ]
            }
        },
        "process_sample_rows": {
            "name": "process_sample_rows",
            "location": 312,
            "return": [
                "Tuple[(int, int, int, int, List[str])]"
            ],
            "arguments": {
                "cell_gen": [
                    "Generator"
                ]
            }
        },
        "validate_row": {
            "name": "validate_row",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "row_details": [
                    "Tuple[(List[str], int, int)]"
                ],
                "wks_record": [
                    "dict"
                ]
            }
        },
        "validate_column": {
            "name": "validate_column",
            "location": 388,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "column_details": [
                    "Tuple[(List[str], int)]"
                ],
                "wks_record": [
                    "dict"
                ]
            }
        },
        "cast_cell_value": {
            "name": "cast_cell_value",
            "location": 447,
            "return": [
                "object"
            ],
            "arguments": {
                "cell": []
            }
        },
        "extract_cell_values": {
            "name": "extract_cell_values",
            "location": 469,
            "return": [
                "List[object]"
            ],
            "arguments": {
                "generator": [
                    "Generator"
                ]
            }
        },
        "parse_matched_column": {
            "name": "parse_matched_column",
            "location": 483,
            "return": [
                "dict"
            ],
            "arguments": {
                "column_details": [
                    "Tuple[(List[str], int)]"
                ],
                "wks_record": [
                    "dict"
                ]
            }
        },
        "find_row_wise": {
            "name": "find_row_wise",
            "location": 514,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "wks_record": [
                    "dict"
                ],
                "header_fields": [
                    "List[str]"
                ]
            }
        },
        "extract_row_sample": {
            "name": "extract_row_sample",
            "location": 545,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "generator": [
                    "Generator"
                ]
            }
        },
        "process_clinical_metadata": {
            "name": "process_clinical_metadata",
            "location": 576,
            "return": [
                "dict"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        },
        "run_validation": {
            "name": "run_validation",
            "location": 624,
            "return": [
                "None"
            ],
            "arguments": {
                "olink_record": [
                    "RecordContext"
                ]
            }
        },
        "process_olink_npx": {
            "name": "process_olink_npx",
            "location": 641,
            "return": [
                "dict"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "context": [
                    "RecordContext"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/rabbitmq_handler.py": {
        "RabbitMQHandler.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "uri": [],
                "queue": []
            }
        },
        "RabbitMQHandler.emit": {
            "name": "emit",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "RabbitMQHandler.close": {
            "name": "close",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/snakemake_tasks.py": {
        "check_for_runs": {
            "name": "check_for_runs",
            "location": 72,
            "return": [
                "Tuple[(List[dict], List[dict])]"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "find_valid_runs": {
            "name": "find_valid_runs",
            "location": 122,
            "return": [
                "List[Tuple[(dict, dict)]]"
            ],
            "arguments": {
                "record_response": [
                    "dict"
                ],
                "assay_dict": [
                    "dict"
                ]
            }
        },
        "clone_snakemake": {
            "name": "clone_snakemake",
            "location": 151,
            "return": [
                "str"
            ],
            "arguments": {
                "git_url": [
                    "str"
                ],
                "folder_name": [
                    "str"
                ]
            }
        },
        "run_snakefile": {
            "name": "run_snakefile",
            "location": 177,
            "return": [
                "bool"
            ],
            "arguments": {
                "snakefile_path": [
                    "str"
                ],
                "workdir": [
                    "str"
                ],
                "kube_settings": [
                    "SnakeJobSettings"
                ]
            }
        },
        "create_input_json": {
            "name": "create_input_json",
            "location": 213,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "records": [
                    "List[dict]"
                ],
                "run_id": [
                    "str"
                ],
                "cimac_sample_id": [
                    "str"
                ]
            }
        },
        "register_analysis": {
            "name": "register_analysis",
            "location": 273,
            "return": [
                "dict"
            ],
            "arguments": {
                "valid_run": [
                    "Tuple[(dict, dict)]"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "upload_snakelogs": {
            "name": "upload_snakelogs",
            "location": 291,
            "return": [
                "dict"
            ],
            "arguments": {
                "analysis_id": [
                    "str"
                ]
            }
        },
        "tail": {
            "name": "tail",
            "location": 328,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "lines": [
                    "int"
                ],
                "_buffer": []
            }
        },
        "tail_logs": {
            "name": "tail_logs",
            "location": 358,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "logs": [
                    "List[str]"
                ]
            }
        },
        "analyze_jobs": {
            "name": "analyze_jobs",
            "location": 383,
            "return": [
                "Tuple[(List[dict], List[str])]"
            ],
            "arguments": {
                "dag": []
            }
        },
        "get_data_format": {
            "name": "get_data_format",
            "location": 416,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "upload_results": {
            "name": "upload_results",
            "location": 434,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "valid_run": [
                    "dict"
                ],
                "outputs": [
                    "List[str]"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "add_inputs": {
            "name": "add_inputs",
            "location": 508,
            "return": [
                "str"
            ],
            "arguments": {
                "run_id": [
                    "str"
                ],
                "inputs": [
                    "List[dict]"
                ],
                "token": []
            }
        },
        "update_analysis": {
            "name": "update_analysis",
            "location": 538,
            "return": [
                "bool"
            ],
            "arguments": {
                "valid_run": [
                    "Tuple[(dict, dict)]"
                ],
                "token": [
                    "str"
                ],
                "analysis": [
                    "dict"
                ],
                "dag": [],
                "problem": []
            }
        },
        "execute_workflow": {
            "name": "execute_workflow",
            "location": 613,
            "return": [],
            "arguments": {
                "valid_run": [
                    "Tuple[(dict, dict)]"
                ]
            }
        },
        "manage_workflows": {
            "name": "manage_workflows",
            "location": 689,
            "return": [],
            "arguments": {}
        }
    },
    "cidc-taskmanager-master/framework/tasks/storage_tasks.py": {
        "run_subprocess_with_logs": {
            "name": "run_subprocess_with_logs",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "cl_args": [
                    "List[str]"
                ],
                "message": [
                    "str"
                ],
                "cwd": [
                    "str"
                ]
            }
        },
        "delete_from_bucket": {
            "name": "delete_from_bucket",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "gs_uri": [
                    "str"
                ]
            }
        },
        "move_files_from_staging": {
            "name": "move_files_from_staging",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_record": [
                    "dict"
                ],
                "google_path": [
                    "str"
                ]
            }
        }
    },
    "cidc-taskmanager-master/framework/tasks/variables.py": {},
    "cidc-taskmanager-master/framework/tasks/__init__.py": {},
    "cidc-taskmanager-master/tests/conftest.py": {},
    "cidc-taskmanager-master/tests/helper_functions.py": {
        "FakeFetcher.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "FakeFetcher.json": {
            "name": "json",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FakeBucket.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "bucket_name": [
                    "str"
                ]
            }
        },
        "FakeBucket.list_blobs": {
            "name": "list_blobs",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [
                    "str"
                ]
            }
        },
        "FakeClient.get_bucket": {
            "name": "get_bucket",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "bucket_name": [
                    "str"
                ]
            }
        }
    },
    "cidc-taskmanager-master/tests/test_hugo.py": {
        "test_build_gene_collection": {
            "name": "test_build_gene_collection",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "cidc-taskmanager-master/tests/test_processing_tasks.py": {
        "test_add_record_context": {
            "name": "test_add_record_context",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "cidc-taskmanager-master/tests/test_process_npx.py": {
        "test_bad_xlsx": {
            "name": "test_bad_xlsx",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_diff_fields": {
            "name": "test_diff_fields",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "test_mk_error": {
            "name": "test_mk_error",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "FileOpTestCase.setUp": {
            "name": "setUp",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileOpTestCase.tearDown": {
            "name": "tearDown",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileOpTestCase.test_add_file_extension": {
            "name": "test_add_file_extension",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileOpTestCase.test_lazy_remove": {
            "name": "test_lazy_remove",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cidc-taskmanager-master/tests/test_snakemake_tasks.py": {
        "test_create_input_json": {
            "name": "test_create_input_json",
            "location": 61,
            "return": [],
            "arguments": {}
        },
        "test_check_for_runs": {
            "name": "test_check_for_runs",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "test_clone_snakemake": {
            "name": "test_clone_snakemake",
            "location": 129,
            "return": [],
            "arguments": {}
        },
        "test_find_valid_runs": {
            "name": "test_find_valid_runs",
            "location": 141,
            "return": [],
            "arguments": {}
        }
    },
    "cidc-taskmanager-master/tests/__init__.py": {}
}
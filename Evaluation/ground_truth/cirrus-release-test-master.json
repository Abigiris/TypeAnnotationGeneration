{
    "cirrus-release-test-master/setup.py": {
        "requirements": {
            "name": "requirements",
            "location": 5,
            "return": [],
            "arguments": {
                "section": []
            }
        }
    },
    "cirrus-release-test-master/docs/conf.py": {},
    "cirrus-release-test-master/ppb_vector/__init__.py": {
        "Vector.__new__": {
            "name": "__new__",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Vector.__reduce__": {
            "name": "__reduce__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vector.update": {
            "name": "update",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "x": [
                    "typing.Optional[typing.SupportsFloat]"
                ],
                "y": [
                    "typing.Optional[typing.SupportsFloat]"
                ]
            }
        },
        "Vector._unpack": {
            "name": "_unpack",
            "location": 139,
            "return": [
                "typing.Tuple[(float, float)]"
            ],
            "arguments": {
                "value": [
                    "VectorLike"
                ]
            }
        },
        "Vector.__bool__": {
            "name": "__bool__",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.length": {
            "name": "length",
            "location": 153,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.asdict": {
            "name": "asdict",
            "location": 163,
            "return": [
                "typing.Mapping[(str, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__len__": {
            "name": "__len__",
            "location": 176,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__add__": {
            "name": "__add__",
            "location": 179,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector.__radd__": {
            "name": "__radd__",
            "location": 195,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector.__sub__": {
            "name": "__sub__",
            "location": 198,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector.dot": {
            "name": "dot",
            "location": 214,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector.scale_by": {
            "name": "scale_by",
            "location": 223,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "scalar": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.__mul__": {
            "name": "__mul__",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vector.__rmul__": {
            "name": "__rmul__",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vector.__truediv__": {
            "name": "__truediv__",
            "location": 290,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.__getitem__": {
            "name": "__getitem__",
            "location": 299,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "typing.Union[(str, int)]"
                ]
            }
        },
        "Vector.__repr__": {
            "name": "__repr__",
            "location": 319,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__eq__": {
            "name": "__eq__",
            "location": 322,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "typing.Any"
                ]
            }
        },
        "Vector.__iter__": {
            "name": "__iter__",
            "location": 338,
            "return": [
                "typing.Iterator[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__neg__": {
            "name": "__neg__",
            "location": 342,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.angle": {
            "name": "angle",
            "location": 353,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector.isclose": {
            "name": "isclose",
            "location": 379,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "VectorLike"
                ]
            }
        },
        "Vector._trig": {
            "name": "_trig",
            "location": 419,
            "return": [
                "typing.Tuple[(float, float)]"
            ],
            "arguments": {
                "angle": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.rotate": {
            "name": "rotate",
            "location": 436,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "angle": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.normalize": {
            "name": "normalize",
            "location": 452,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.truncate": {
            "name": "truncate",
            "location": 464,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "max_length": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.scale_to": {
            "name": "scale_to",
            "location": 497,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "length": [
                    "typing.SupportsFloat"
                ]
            }
        },
        "Vector.reflect": {
            "name": "reflect",
            "location": 514,
            "return": [
                "'Vector'"
            ],
            "arguments": {
                "self": [],
                "surface_normal": [
                    "VectorLike"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/benchmark.py": {},
    "cirrus-release-test-master/tests/conftest.py": {
        "setup_hypothesis": {
            "name": "setup_hypothesis",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "cirrus-release-test-master/tests/test_addition.py": {
        "test_multiples_values": {
            "name": "test_multiples_values",
            "location": 23,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "expected": []
            }
        },
        "test_addition_reverse": {
            "name": "test_addition_reverse",
            "location": 28,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_angle.py": {
        "test_angle": {
            "name": "test_angle",
            "location": 22,
            "return": [],
            "arguments": {
                "left": [],
                "right": [],
                "expected": []
            }
        },
        "test_angle_range": {
            "name": "test_angle_range",
            "location": 31,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "test_angle_additive": {
            "name": "test_angle_additive",
            "location": 44,
            "return": [],
            "arguments": {
                "left": [],
                "middle": [],
                "right": []
            }
        },
        "test_angle_aligned": {
            "name": "test_angle_aligned",
            "location": 53,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_convert.py": {
        "test_convert_class": {
            "name": "test_convert_class",
            "location": 11,
            "return": [],
            "arguments": {
                "vector_like": []
            }
        },
        "test_convert_tuple": {
            "name": "test_convert_tuple",
            "location": 18,
            "return": [],
            "arguments": {
                "vector": [
                    "Vector"
                ]
            }
        },
        "test_convert_list": {
            "name": "test_convert_list",
            "location": 23,
            "return": [],
            "arguments": {
                "vector": [
                    "Vector"
                ]
            }
        },
        "test_convert_dict": {
            "name": "test_convert_dict",
            "location": 28,
            "return": [],
            "arguments": {
                "vector": [
                    "Vector"
                ]
            }
        },
        "test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 34,
            "return": [],
            "arguments": {
                "coerce": [],
                "x": [
                    "Vector"
                ]
            }
        },
        "test_convert_roundtrip_positional": {
            "name": "test_convert_roundtrip_positional",
            "location": 40,
            "return": [],
            "arguments": {
                "coerce": [],
                "x": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_ctor.py": {
        "test_ctor_vector_like": {
            "name": "test_ctor_vector_like",
            "location": 10,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_ctor_noncopy_same": {
            "name": "test_ctor_noncopy_same",
            "location": 17,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_ctor_pickle": {
            "name": "test_ctor_pickle",
            "location": 22,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_ctor_copy": {
            "name": "test_ctor_copy",
            "location": 31,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_dot.py": {
        "test_dot_axis": {
            "name": "test_dot_axis",
            "location": 10,
            "return": [],
            "arguments": {
                "vector": [
                    "Vector"
                ]
            }
        },
        "test_dot_commutes": {
            "name": "test_dot_commutes",
            "location": 16,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        },
        "test_dot_length": {
            "name": "test_dot_length",
            "location": 21,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ]
            }
        },
        "test_cauchy_schwarz": {
            "name": "test_cauchy_schwarz",
            "location": 26,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        },
        "test_dot_rotational_invariance": {
            "name": "test_dot_rotational_invariance",
            "location": 32,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ],
                "angle": [
                    "float"
                ]
            }
        },
        "test_dot_linear": {
            "name": "test_dot_linear",
            "location": 53,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ],
                "z": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        },
        "test_dot_from_angle": {
            "name": "test_dot_from_angle",
            "location": 62,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        },
        "test_dot_rmul": {
            "name": "test_dot_rmul",
            "location": 81,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_equality.py": {
        "test_equal_self": {
            "name": "test_equal_self",
            "location": 8,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ]
            }
        },
        "test_equal_non_vector": {
            "name": "test_equal_non_vector",
            "location": 13,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ]
            }
        },
        "test_equal_symmetric": {
            "name": "test_equal_symmetric",
            "location": 19,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": []
            }
        },
        "test_non_zero_equal": {
            "name": "test_non_zero_equal",
            "location": 27,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ]
            }
        },
        "test_not_equal_equivalent": {
            "name": "test_not_equal_equivalent",
            "location": 34,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_isclose.py": {
        "test_isclose_to_self": {
            "name": "test_isclose_to_self",
            "location": 12,
            "return": [],
            "arguments": {
                "v": [],
                "abs_tol": [],
                "rel_tol": []
            }
        },
        "test_isclose_abs_error": {
            "name": "test_isclose_abs_error",
            "location": 20,
            "return": [],
            "arguments": {
                "v": [],
                "direction": [],
                "abs_tol": []
            }
        },
        "test_isclose_rel_error": {
            "name": "test_isclose_rel_error",
            "location": 44,
            "return": [],
            "arguments": {
                "v": [],
                "direction": [],
                "rel_tol": []
            }
        },
        "test_isclose_negative_tolerances": {
            "name": "test_isclose_negative_tolerances",
            "location": 88,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_length.py": {
        "test_length": {
            "name": "test_length",
            "location": 21,
            "return": [],
            "arguments": {
                "v": [],
                "expected": []
            }
        },
        "test_length_dot": {
            "name": "test_length_dot",
            "location": 27,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_length_zero": {
            "name": "test_length_zero",
            "location": 33,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_length_scalar": {
            "name": "test_length_scalar",
            "location": 39,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        },
        "test_length_triangle": {
            "name": "test_length_triangle",
            "location": 45,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "w": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_member_access.py": {
        "test_class_member_access": {
            "name": "test_class_member_access",
            "location": 8,
            "return": [],
            "arguments": {
                "x": [
                    "float"
                ],
                "y": [
                    "float"
                ]
            }
        },
        "test_index_access": {
            "name": "test_index_access",
            "location": 15,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_key_access": {
            "name": "test_key_access",
            "location": 21,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_memory.py": {
        "test_object_size": {
            "name": "test_object_size",
            "location": 25,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "test_weak_ref": {
            "name": "test_weak_ref",
            "location": 33,
            "return": [],
            "arguments": {
                "v": []
            }
        },
        "DummyVector.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        }
    },
    "cirrus-release-test-master/tests/test_negation.py": {
        "test_negation_scalar": {
            "name": "test_negation_scalar",
            "location": 8,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_negation_involutive": {
            "name": "test_negation_involutive",
            "location": 13,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        },
        "test_negation_addition": {
            "name": "test_negation_addition",
            "location": 18,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_normalize.py": {
        "test_normalize_length": {
            "name": "test_normalize_length",
            "location": 7,
            "return": [],
            "arguments": {
                "v": []
            }
        }
    },
    "cirrus-release-test-master/tests/test_reflect.py": {
        "test_reflect": {
            "name": "test_reflect",
            "location": 21,
            "return": [],
            "arguments": {
                "initial": [],
                "surface_normal": [],
                "expected": []
            }
        },
        "test_reflect_nan_inf": {
            "name": "test_reflect_nan_inf",
            "location": 26,
            "return": [],
            "arguments": {
                "initial": [
                    "Vector"
                ],
                "normal": [
                    "Vector"
                ]
            }
        },
        "test_reflect_length": {
            "name": "test_reflect_length",
            "location": 32,
            "return": [],
            "arguments": {
                "initial": [
                    "Vector"
                ],
                "normal": [
                    "Vector"
                ]
            }
        },
        "test_reflect_involutive": {
            "name": "test_reflect_involutive",
            "location": 38,
            "return": [],
            "arguments": {
                "initial": [
                    "Vector"
                ],
                "normal": [
                    "Vector"
                ]
            }
        },
        "test_reflect_angle": {
            "name": "test_reflect_angle",
            "location": 47,
            "return": [],
            "arguments": {
                "initial": [
                    "Vector"
                ],
                "normal": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_rotate.py": {
        "test_exact_rotations": {
            "name": "test_exact_rotations",
            "location": 22,
            "return": [],
            "arguments": {
                "input": [],
                "angle": [],
                "expected": []
            }
        },
        "test_remarkable_angles": {
            "name": "test_remarkable_angles",
            "location": 64,
            "return": [],
            "arguments": {
                "angle": [],
                "trig": []
            }
        },
        "test_close_rotations": {
            "name": "test_close_rotations",
            "location": 88,
            "return": [],
            "arguments": {
                "input": [],
                "angle": [],
                "expected": []
            }
        },
        "test_trig_stability": {
            "name": "test_trig_stability",
            "location": 94,
            "return": [],
            "arguments": {
                "angle": []
            }
        },
        "test_trig_invariance": {
            "name": "test_trig_invariance",
            "location": 107,
            "return": [],
            "arguments": {
                "angle": [
                    "float"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "test_rotation_invariance": {
            "name": "test_rotation_invariance",
            "location": 119,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "angle": [
                    "float"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "test_rotation_angle": {
            "name": "test_rotation_angle",
            "location": 128,
            "return": [],
            "arguments": {
                "initial": [],
                "angle": []
            }
        },
        "test_rotation_stability": {
            "name": "test_rotation_stability",
            "location": 135,
            "return": [],
            "arguments": {
                "angle": [],
                "loops": []
            }
        },
        "test_rotation_stability2": {
            "name": "test_rotation_stability2",
            "location": 152,
            "return": [],
            "arguments": {
                "initial": [],
                "angles": []
            }
        },
        "test_rotation_linearity": {
            "name": "test_rotation_linearity",
            "location": 175,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "scalar": [],
                "angle": []
            }
        }
    },
    "cirrus-release-test-master/tests/test_scalar_multiplication.py": {
        "test_scalar_coordinates": {
            "name": "test_scalar_coordinates",
            "location": 9,
            "return": [],
            "arguments": {
                "scalar": [
                    "float"
                ],
                "v": [
                    "Vector"
                ]
            }
        },
        "test_scalar_associative": {
            "name": "test_scalar_associative",
            "location": 15,
            "return": [],
            "arguments": {
                "scalar1": [
                    "float"
                ],
                "scalar2": [
                    "float"
                ],
                "v": [
                    "Vector"
                ]
            }
        },
        "test_scalar_linear": {
            "name": "test_scalar_linear",
            "location": 23,
            "return": [],
            "arguments": {
                "scalar": [
                    "float"
                ],
                "v": [
                    "Vector"
                ],
                "w": [
                    "Vector"
                ]
            }
        },
        "test_scalar_length": {
            "name": "test_scalar_length",
            "location": 31,
            "return": [],
            "arguments": {
                "scalar": [
                    "float"
                ],
                "v": [
                    "Vector"
                ]
            }
        },
        "test_scalar_division": {
            "name": "test_scalar_division",
            "location": 36,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        },
        "test_scalar_inverse": {
            "name": "test_scalar_inverse",
            "location": 43,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        },
        "test_scalar_rmul": {
            "name": "test_scalar_rmul",
            "location": 50,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "float"
                ]
            }
        },
        "test_integer_multiplication": {
            "name": "test_integer_multiplication",
            "location": 55,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "int"
                ]
            }
        },
        "test_integer_division": {
            "name": "test_integer_division",
            "location": 60,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "scalar": [
                    "int"
                ]
            }
        },
        "test_division_by_zero": {
            "name": "test_division_by_zero",
            "location": 66,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_scale.py": {
        "test_scale_negative_length": {
            "name": "test_scale_negative_length",
            "location": 9,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "length": [
                    "float"
                ]
            }
        },
        "test_scale_to_length": {
            "name": "test_scale_to_length",
            "location": 17,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "length": [
                    "float"
                ]
            }
        },
        "test_scale_aligned": {
            "name": "test_scale_aligned",
            "location": 24,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "length": [
                    "float"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_substraction.py": {
        "test_multiples_values": {
            "name": "test_multiples_values",
            "location": 24,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "expected": []
            }
        }
    },
    "cirrus-release-test-master/tests/test_truncate.py": {
        "test_truncate_length": {
            "name": "test_truncate_length",
            "location": 10,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "max_length": [
                    "float"
                ]
            }
        },
        "test_truncate_invariant": {
            "name": "test_truncate_invariant",
            "location": 15,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "max_length": [
                    "float"
                ]
            }
        },
        "test_truncate_equivalent_to_scale": {
            "name": "test_truncate_equivalent_to_scale",
            "location": 24,
            "return": [],
            "arguments": {
                "x": [
                    "Vector"
                ],
                "max_length": [
                    "float"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_typing.py": {
        "test_binop_vectorlike": {
            "name": "test_binop_vectorlike",
            "location": 10,
            "return": [],
            "arguments": {
                "op": [],
                "x": [
                    "Vector"
                ],
                "y": [
                    "Vector"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/test_update.py": {
        "test_update_x": {
            "name": "test_update_x",
            "location": 8,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "x": [
                    "float"
                ]
            }
        },
        "test_update_y": {
            "name": "test_update_y",
            "location": 13,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "y": [
                    "float"
                ]
            }
        },
        "test_update_xy": {
            "name": "test_update_xy",
            "location": 18,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ],
                "x": [
                    "float"
                ],
                "y": [
                    "float"
                ]
            }
        }
    },
    "cirrus-release-test-master/tests/utils.py": {
        "angles": {
            "name": "angles",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "floats": {
            "name": "floats",
            "location": 15,
            "return": [],
            "arguments": {
                "max_magnitude": []
            }
        },
        "lengths": {
            "name": "lengths",
            "location": 19,
            "return": [],
            "arguments": {
                "min_value": [],
                "max_value": []
            }
        },
        "vectors": {
            "name": "vectors",
            "location": 23,
            "return": [],
            "arguments": {
                "max_magnitude": []
            }
        },
        "units": {
            "name": "units",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "angle_isclose": {
            "name": "angle_isclose",
            "location": 35,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "epsilon": []
            }
        },
        "isclose": {
            "name": "isclose",
            "location": 40,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "abs_tol": [
                    "float"
                ],
                "rel_tol": [
                    "float"
                ],
                "rel_exp": [
                    "float"
                ],
                "rel_to": [
                    "Sequence[Union[(float, Vector)]]"
                ]
            }
        },
        "vector_likes": {
            "name": "vector_likes",
            "location": 88,
            "return": [],
            "arguments": {
                "v": [
                    "Vector"
                ]
            }
        }
    }
}
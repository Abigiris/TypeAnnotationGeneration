{
    "compilers-master/c/ccompiler.py": {
        "lex": {
            "name": "lex",
            "location": 27,
            "return": [
                "List[Token]"
            ],
            "arguments": {
                "program": [
                    "str"
                ]
            }
        },
        "is_token_valid": {
            "name": "is_token_valid",
            "location": 41,
            "return": [
                "bool"
            ],
            "arguments": {
                "potential_token": [
                    "str"
                ]
            }
        },
        "first_matching_regex": {
            "name": "first_matching_regex",
            "location": 47,
            "return": [
                "Tuple[(Token, int, int)]"
            ],
            "arguments": {
                "string": []
            }
        },
        "Token.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "regex_pattern": [
                    "str"
                ]
            }
        },
        "Token.__repr__": {
            "name": "__repr__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "compilers-master/c/helpers.py": {
        "get_test_directory": {
            "name": "get_test_directory",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_test_file_location": {
            "name": "get_test_file_location",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "create_test_tuple": {
            "name": "create_test_tuple",
            "location": 36,
            "return": [
                "Tuple[(str, str, str)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "ExampleProgram.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "source_location": [
                    "str"
                ]
            }
        },
        "ExampleProgram.get_text": {
            "name": "get_text",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "ExampleProgramWithTokens.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "source_location": [
                    "str"
                ],
                "tokens_location": [
                    "List[str]"
                ]
            }
        }
    },
    "compilers-master/c/lexer_test.py": {
        "TestTokenValidity.test_token_validity": {
            "name": "test_token_validity",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "token_input": [],
                "expected": []
            }
        },
        "TestTokenValidity.test_simple_token_validity": {
            "name": "test_simple_token_validity",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLexer.test_first_matching_regex": {
            "name": "test_first_matching_regex",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLexer.test_lexing_simple_program": {
            "name": "test_lexing_simple_program",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLexer.test_lexing": {
            "name": "test_lexing",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "source_location": [],
                "tokens_location": []
            }
        }
    },
    "compilers-master/c/tokens.py": {
        "Token.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "regex_pattern": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "Token.__eq__": {
            "name": "__eq__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Token.__hash__": {
            "name": "__hash__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OpenBrace.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "CloseBrace.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "OpenParen.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "CloseParen.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Semicolon.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "IntKeyword.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "ReturnKeyword.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Identifier.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "IntegerLiteral.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        }
    },
    "compilers-master/c/tokens_test.py": {
        "TestTokens.test_token_equality": {
            "name": "test_token_equality",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
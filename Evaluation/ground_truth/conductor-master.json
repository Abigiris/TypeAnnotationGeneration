{
    "conductor-master/.gunicorn.py": {},
    "conductor-master/manage.py": {},
    "conductor-master/setup.py": {},
    "conductor-master/conductor/celery.py": {
        "celery_base_data_hook": {
            "name": "celery_base_data_hook",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "data": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "handle_task_failure": {
            "name": "handle_task_failure",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "conductor-master/conductor/main.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_celery": {
            "name": "run_celery",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "list"
                ]
            }
        },
        "run_manage": {
            "name": "run_manage",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "list"
                ]
            }
        },
        "run_gunicorn": {
            "name": "run_gunicorn",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "list"
                ]
            }
        }
    },
    "conductor-master/conductor/urls.py": {},
    "conductor-master/conductor/wsgi.py": {},
    "conductor-master/conductor/__init__.py": {},
    "conductor-master/conductor/accounts/admin.py": {},
    "conductor-master/conductor/accounts/apps.py": {},
    "conductor-master/conductor/accounts/forms.py": {
        "SignupForm.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "product_plan": [
                    "ProductPlan"
                ]
            }
        },
        "SignupForm.clean_email": {
            "name": "clean_email",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignupForm.clean_username": {
            "name": "clean_username",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignupForm.clean": {
            "name": "clean",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignupForm.save": {
            "name": "save",
            "location": 64,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeactivateForm.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "DeactivateForm.clean_email": {
            "name": "clean_email",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeactivateForm.save": {
            "name": "save",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/accounts/models.py": {
        "create_profile": {
            "name": "create_profile",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "User"
                ],
                "instance": [
                    "Profile"
                ],
                "created": [
                    "bool"
                ]
            }
        },
        "User.has_google_drive_auth": {
            "name": "has_google_drive_auth",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveAuth.credentials": {
            "name": "credentials",
            "location": 67,
            "return": [
                "Credentials"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveAuth.authorized_user_info": {
            "name": "authorized_user_info",
            "location": 74,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductPlan.display_price": {
            "name": "display_price",
            "location": 92,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/accounts/views.py": {
        "index": {
            "name": "index",
            "location": 17,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "signup": {
            "name": "signup",
            "location": 24,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "dashboard": {
            "name": "dashboard",
            "location": 44,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "user_settings": {
            "name": "user_settings",
            "location": 56,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "authorize_google": {
            "name": "authorize_google",
            "location": 63,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "oauth2_callback": {
            "name": "oauth2_callback",
            "location": 78,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "deactivate": {
            "name": "deactivate",
            "location": 107,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        }
    },
    "conductor-master/conductor/accounts/__init__.py": {},
    "conductor-master/conductor/accounts/management/__init__.py": {},
    "conductor-master/conductor/accounts/management/commands/seed.py": {
        "Command.handle": {
            "name": "handle",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/accounts/management/commands/__init__.py": {},
    "conductor-master/conductor/accounts/migrations/0001_initial.py": {},
    "conductor-master/conductor/accounts/migrations/0002_inviteemail.py": {},
    "conductor-master/conductor/accounts/migrations/0003_inviteemail_created_date.py": {},
    "conductor-master/conductor/accounts/migrations/0004_auto_20170603_2152.py": {},
    "conductor-master/conductor/accounts/migrations/0005_profile.py": {},
    "conductor-master/conductor/accounts/migrations/0006_profile_postal_code.py": {},
    "conductor-master/conductor/accounts/migrations/0007_profile_stripe_customer_id.py": {},
    "conductor-master/conductor/accounts/migrations/0008_delete_inviteemail.py": {},
    "conductor-master/conductor/accounts/migrations/0009_googledriveauth.py": {},
    "conductor-master/conductor/accounts/migrations/0010_auto_20180630_0211.py": {},
    "conductor-master/conductor/accounts/migrations/0011_auto_20180831_0320.py": {},
    "conductor-master/conductor/accounts/migrations/0012_productplan.py": {},
    "conductor-master/conductor/accounts/migrations/0013_productplan_price.py": {},
    "conductor-master/conductor/accounts/migrations/__init__.py": {},
    "conductor-master/conductor/accounts/tests/factories.py": {},
    "conductor-master/conductor/accounts/tests/test_forms.py": {
        "TestSignupForm.test_valid": {
            "name": "test_valid",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignupForm.test_required": {
            "name": "test_required",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignupForm.test_invalid_password": {
            "name": "test_invalid_password",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignupForm.test_unique_email": {
            "name": "test_unique_email",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignupForm.test_unique_username": {
            "name": "test_unique_username",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignupForm.test_creates_user": {
            "name": "test_creates_user",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe_gateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSignupForm.test_missing_postal_code": {
            "name": "test_missing_postal_code",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe_gateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDeactivateForm.test_matching_email": {
            "name": "test_matching_email",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeactivateForm.test_mismatched_email": {
            "name": "test_mismatched_email",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeactivateForm.test_save": {
            "name": "test_save",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe_gateway": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/accounts/tests/test_models.py": {
        "TestUser.test_factory": {
            "name": "test_factory",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_unique_email": {
            "name": "test_unique_email",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_has_profile": {
            "name": "test_has_profile",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_has_google_drive_auth": {
            "name": "test_has_google_drive_auth",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_has_google_drive_auth_missing": {
            "name": "test_has_google_drive_auth_missing",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProfile.test_factory": {
            "name": "test_factory",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProfile.test_has_postal_code": {
            "name": "test_has_postal_code",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProfile.test_has_stripe_customer_id": {
            "name": "test_has_stripe_customer_id",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleDriveAuth.test_factory": {
            "name": "test_factory",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleDriveAuth.test_has_user": {
            "name": "test_has_user",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleDriveAuth.test_has_refresh_token": {
            "name": "test_has_refresh_token",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleDriveAuth.test_authorized_user_info": {
            "name": "test_authorized_user_info",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleDriveAuth.test_credentials_has_scope": {
            "name": "test_credentials_has_scope",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_factory": {
            "name": "test_factory",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_has_stripe_plan_id": {
            "name": "test_has_stripe_plan_id",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_has_active": {
            "name": "test_has_active",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_has_trial_days": {
            "name": "test_has_trial_days",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_has_price": {
            "name": "test_has_price",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductPlan.test_display_price": {
            "name": "test_display_price",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/accounts/tests/test_views.py": {
        "TestIndex.test_has_product_plan": {
            "name": "test_has_product_plan",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSignup.test_context": {
            "name": "test_context",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSignup.test_success": {
            "name": "test_success",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe_gateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSignup.test_failure": {
            "name": "test_failure",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDashboard.test_requires_login": {
            "name": "test_requires_login",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDashboard.test_get": {
            "name": "test_get",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDashboard.test_app_nav": {
            "name": "test_app_nav",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDashboard.test_students_in_context": {
            "name": "test_students_in_context",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestUserSettings.test_requires_login": {
            "name": "test_requires_login",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserSettings.test_get": {
            "name": "test_get",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserSettings.test_app_nav": {
            "name": "test_app_nav",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAuthorizeGoogle.test_requires_login": {
            "name": "test_requires_login",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuthorizeGoogle.test_get": {
            "name": "test_get",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOauth2Callback.test_requires_login": {
            "name": "test_requires_login",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOauth2Callback.test_get": {
            "name": "test_get",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "Flow": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestOauth2Callback.test_error": {
            "name": "test_error",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDeactivate.test_requires_login": {
            "name": "test_requires_login",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeactivate.test_requires_post": {
            "name": "test_requires_post",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeactivate.test_success": {
            "name": "test_success",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDeactivate.test_failure": {
            "name": "test_failure",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDeactivate.test_form_save_failure": {
            "name": "test_form_save_failure",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ],
                "rollbar": [
                    "mock.MagicMock"
                ],
                "stripe_gateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestDeactivated.test_ok": {
            "name": "test_ok",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/accounts/tests/__init__.py": {},
    "conductor-master/conductor/core/admin.py": {},
    "conductor-master/conductor/core/apps.py": {},
    "conductor-master/conductor/core/decorators.py": {
        "check_if_staff": {
            "name": "check_if_staff",
            "location": 5,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "conductor-master/conductor/core/exceptions.py": {},
    "conductor-master/conductor/core/managers.py": {
        "SoftDeleteQuerySet.delete": {
            "name": "delete",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoftDeleteManager.get_queryset": {
            "name": "get_queryset",
            "location": 16,
            "return": [
                "SoftDeleteQuerySet"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/core/models.py": {
        "SoftDeleteModel.delete": {
            "name": "delete",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/core/__init__.py": {},
    "conductor-master/conductor/core/migrations/0001_initial.py": {},
    "conductor-master/conductor/core/migrations/__init__.py": {},
    "conductor-master/conductor/core/tests/test_decorators.py": {
        "staff_view": {
            "name": "staff_view",
            "location": 9,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "TestStaffRequired.test_anonymous": {
            "name": "test_anonymous",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStaffRequired.test_redirect_non_staff": {
            "name": "test_redirect_non_staff",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStaffRequired.test_allow_staff_only": {
            "name": "test_allow_staff_only",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/admin.py": {
        "SchoolAdmin.clickable_url": {
            "name": "clickable_url",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "obj": [
                    "School"
                ]
            }
        },
        "TargetSchoolAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 81,
            "return": [
                "QuerySet"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/apps.py": {},
    "conductor-master/conductor/planner/forms.py": {
        "AddSchoolForm.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "student": [
                    "Student"
                ]
            }
        },
        "AddSchoolForm.clean_school": {
            "name": "clean_school",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddSchoolForm.save": {
            "name": "save",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoveSchoolForm.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "student": [
                    "Student"
                ]
            }
        },
        "RemoveSchoolForm.clean_school": {
            "name": "clean_school",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoveSchoolForm.save": {
            "name": "save",
            "location": 55,
            "return": [
                "School"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddStudentForm.save": {
            "name": "save",
            "location": 71,
            "return": [
                "Student"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/managers.py": {
        "SchoolManager.search": {
            "name": "search",
            "location": 11,
            "return": [
                "models.QuerySet"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/models.py": {
        "school_image_path": {
            "name": "school_image_path",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [
                    "'School'"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Milestone.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "School.__str__": {
            "name": "__str__",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Semester.__str__": {
            "name": "__str__",
            "location": 132,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Student.__str__": {
            "name": "__str__",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/tasks.py": {
        "audit_school": {
            "name": "audit_school",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "school_id": [
                    "int"
                ],
                "semester_id": [
                    "int"
                ]
            }
        },
        "build_schedule": {
            "name": "build_schedule",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "student_id": [
                    "int"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/views.py": {
        "school_detail": {
            "name": "school_detail",
            "location": 19,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "slug": [
                    "str"
                ]
            }
        },
        "add_student": {
            "name": "add_student",
            "location": 41,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "student_profile": {
            "name": "student_profile",
            "location": 56,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        },
        "add_school": {
            "name": "add_school",
            "location": 124,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        },
        "remove_school": {
            "name": "remove_school",
            "location": 148,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        },
        "export_schedule": {
            "name": "export_schedule",
            "location": 171,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        },
        "set_student_milestone": {
            "name": "set_student_milestone",
            "location": 196,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        },
        "set_student_school_application": {
            "name": "set_student_school_application",
            "location": 223,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ],
                "student_id": [
                    "int"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/__init__.py": {},
    "conductor-master/conductor/planner/migrations/0001_initial.py": {
        "current_year": {
            "name": "current_year",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "conductor-master/conductor/planner/migrations/0002_auto_20160822_1550.py": {},
    "conductor-master/conductor/planner/migrations/0003_semester.py": {},
    "conductor-master/conductor/planner/migrations/0004_auto_20161123_2102.py": {},
    "conductor-master/conductor/planner/migrations/0005_auto_20161128_0358.py": {
        "initial_semesters": {
            "name": "initial_semesters",
            "location": 9,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "conductor-master/conductor/planner/migrations/0006_auto_20161128_0430.py": {},
    "conductor-master/conductor/planner/migrations/0007_auto_20161214_0213.py": {},
    "conductor-master/conductor/planner/migrations/0008_auto_20170102_2216.py": {},
    "conductor-master/conductor/planner/migrations/0009_audit.py": {},
    "conductor-master/conductor/planner/migrations/0010_audit_status.py": {},
    "conductor-master/conductor/planner/migrations/0011_auto_20170129_2217.py": {},
    "conductor-master/conductor/planner/migrations/0012_auto_20170130_0037.py": {},
    "conductor-master/conductor/planner/migrations/0013_auto_20170220_2045.py": {},
    "conductor-master/conductor/planner/migrations/0014_school_audit_notes.py": {},
    "conductor-master/conductor/planner/migrations/0015_auto_20170221_0229.py": {},
    "conductor-master/conductor/planner/migrations/0016_auto_20171203_0524.py": {},
    "conductor-master/conductor/planner/migrations/0017_applicationstatus.py": {},
    "conductor-master/conductor/planner/migrations/0018_auto_20180617_0047.py": {},
    "conductor-master/conductor/planner/migrations/0019_school_image.py": {},
    "conductor-master/conductor/planner/migrations/0020_auto_20180901_0315.py": {},
    "conductor-master/conductor/planner/migrations/0021_targetschool_milestones.py": {},
    "conductor-master/conductor/planner/migrations/0022_milestone_semester.py": {},
    "conductor-master/conductor/planner/migrations/0023_auto_20180909_2054.py": {},
    "conductor-master/conductor/planner/migrations/0024_audit_semester.py": {},
    "conductor-master/conductor/planner/migrations/0025_auto_20180910_0003.py": {},
    "conductor-master/conductor/planner/migrations/0026_school_ipeds_id.py": {},
    "conductor-master/conductor/planner/migrations/0027_schoolapplication.py": {},
    "conductor-master/conductor/planner/migrations/0028_targetschool_school_application.py": {},
    "conductor-master/conductor/planner/migrations/0029_auto_20180928_0042.py": {},
    "conductor-master/conductor/planner/migrations/0030_targetschool_deleted_date.py": {},
    "conductor-master/conductor/planner/migrations/__init__.py": {},
    "conductor-master/conductor/planner/scrapers/base.py": {
        "Scraper.scrape": {
            "name": "scrape",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/scrapers/virginia.py": {
        "UVAScraper.scrape": {
            "name": "scrape",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/scrapers/__init__.py": {},
    "conductor-master/conductor/planner/templatetags/planner_tags.py": {
        "get_milestone_by_category": {
            "name": "get_milestone_by_category",
            "location": 11,
            "return": [
                "Optional[Milestone]"
            ],
            "arguments": {
                "category": [
                    "str"
                ],
                "milestones": [
                    "List[Milestone]"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/templatetags/__init__.py": {},
    "conductor-master/conductor/planner/tests/factories.py": {
        "StudentFactory.schools": {
            "name": "schools",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "bool"
                ],
                "extracted": [
                    "List[School]"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/tests/test_forms.py": {
        "TestAddSchoolForm.test_valid": {
            "name": "test_valid",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchoolForm.test_school_in_student_list": {
            "name": "test_school_in_student_list",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchoolForm.test_save": {
            "name": "test_save",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tasks": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddSchoolForm.test_save_with_soft_deleted": {
            "name": "test_save_with_soft_deleted",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tasks": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestRemoveSchoolForm.test_valid": {
            "name": "test_valid",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveSchoolForm.test_save": {
            "name": "test_save",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddStudentForm.test_save": {
            "name": "test_save",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/tests/test_models.py": {
        "TestAudit.test_factory": {
            "name": "test_factory",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAudit.test_has_created_date": {
            "name": "test_has_created_date",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAudit.test_has_school": {
            "name": "test_has_school",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAudit.test_has_status": {
            "name": "test_has_status",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_factory": {
            "name": "test_factory",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_has_active": {
            "name": "test_has_active",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_has_date": {
            "name": "test_has_date",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_has_school": {
            "name": "test_has_school",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_has_category": {
            "name": "test_has_category",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_has_semester": {
            "name": "test_has_semester",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMilestone.test_str": {
            "name": "test_str",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApplicationSchedule.test_factory": {
            "name": "test_factory",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApplicationSchedule.test_has_student": {
            "name": "test_has_student",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_factory": {
            "name": "test_factory",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_name": {
            "name": "test_has_name",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_slug": {
            "name": "test_has_slug",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_url": {
            "name": "test_has_url",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_milestones_url": {
            "name": "test_has_milestones_url",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_rolling": {
            "name": "test_has_rolling",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_city": {
            "name": "test_has_city",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_state": {
            "name": "test_has_state",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_image": {
            "name": "test_has_image",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchool.test_has_ipeds_id": {
            "name": "test_has_ipeds_id",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchoolApplication.test_has_school": {
            "name": "test_has_school",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchoolApplication.test_has_application_type": {
            "name": "test_has_application_type",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_factory": {
            "name": "test_factory",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_has_date": {
            "name": "test_has_date",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_has_active": {
            "name": "test_has_active",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_spring": {
            "name": "test_spring",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_summer": {
            "name": "test_summer",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_fall": {
            "name": "test_fall",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_factory": {
            "name": "test_factory",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_has_user": {
            "name": "test_has_user",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_has_first_name": {
            "name": "test_has_first_name",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_has_last_name": {
            "name": "test_has_last_name",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_has_matriculation_semester": {
            "name": "test_has_matriculation_semester",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_protect_student": {
            "name": "test_protect_student",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudent.test_has_schools": {
            "name": "test_has_schools",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSoftDeleteModel.test_initial_deleted_date": {
            "name": "test_initial_deleted_date",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSoftDeleteModel.test_soft_deleted": {
            "name": "test_soft_deleted",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSoftDeleteModel.test_soft_deleted_bulk": {
            "name": "test_soft_deleted_bulk",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTargetSchool.test_factory": {
            "name": "test_factory",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTargetSchool.test_has_school": {
            "name": "test_has_school",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTargetSchool.test_has_student": {
            "name": "test_has_student",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTargetSchool.test_has_school_application": {
            "name": "test_has_school_application",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/tests/test_scrapers.py": {
        "TestScraper.test_scrape_not_implemented": {
            "name": "test_scrape_not_implemented",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/tests/test_tasks.py": {
        "TestAuditSchool.test_creates_audit": {
            "name": "test_creates_audit",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuditSchool.test_skips_create_with_recent_audit": {
            "name": "test_skips_create_with_recent_audit",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuditSchool.test_creates_audit_with_old_audit": {
            "name": "test_creates_audit_with_old_audit",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuditSchool.test_emails_admin": {
            "name": "test_emails_admin",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBuildSchedule.test_creates_google_sheet": {
            "name": "test_creates_google_sheet",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "GoogleGateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestBuildSchedule.test_updates_refresh_token": {
            "name": "test_updates_refresh_token",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "GoogleGateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestBuildSchedule.test_creates_application_schedule": {
            "name": "test_creates_application_schedule",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "GoogleGateway": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestBuildSchedule.test_updates_refresh_token.change_refresh_token": {
            "name": "change_refresh_token",
            "location": 75,
            "return": [
                "mock.Mock"
            ],
            "arguments": {
                "credentials": [
                    "Credentials"
                ]
            }
        }
    },
    "conductor-master/conductor/planner/tests/test_views.py": {
        "TestSchoolDetail.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchoolDetail.test_bad_school": {
            "name": "test_bad_school",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchoolDetail.test_context": {
            "name": "test_context",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSchoolDetail.test_authenticated_teplate": {
            "name": "test_authenticated_teplate",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSchoolDetail.test_unauthenticated_teplate": {
            "name": "test_unauthenticated_teplate",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddStudent.test_requires_login": {
            "name": "test_requires_login",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddStudent.test_get": {
            "name": "test_get",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddStudent.test_has_form": {
            "name": "test_has_form",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddStudent.test_app_nav": {
            "name": "test_app_nav",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddStudent.test_success": {
            "name": "test_success",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddStudent.test_failure": {
            "name": "test_failure",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestStudentProfile.test_requires_login": {
            "name": "test_requires_login",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudentProfile.test_valid": {
            "name": "test_valid",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudentProfile.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudentProfile.test_context": {
            "name": "test_context",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestStudentProfile.test_schools_by_application_type": {
            "name": "test_schools_by_application_type",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddSchool.test_requires_login": {
            "name": "test_requires_login",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchool.test_valid_get": {
            "name": "test_valid_get",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchool.test_valid_post": {
            "name": "test_valid_post",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchool.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddSchool.test_student_in_context": {
            "name": "test_student_in_context",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddSchool.test_query_in_context": {
            "name": "test_query_in_context",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestAddSchool.test_form_in_context": {
            "name": "test_form_in_context",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestRemoveSchool.test_requires_login": {
            "name": "test_requires_login",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveSchool.test_requires_post": {
            "name": "test_requires_post",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveSchool.test_valid_post": {
            "name": "test_valid_post",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestRemoveSchool.test_invalid_post": {
            "name": "test_invalid_post",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestRemoveSchool.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExportSchedule.test_requires_login": {
            "name": "test_requires_login",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExportSchedule.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExportSchedule.test_no_google_auth": {
            "name": "test_no_google_auth",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestExportSchedule.test_trigger_task": {
            "name": "test_trigger_task",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_schedule": [
                    "mock.MagicMock"
                ],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestSetStudentMilestone.test_requires_login": {
            "name": "test_requires_login",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_requires_post": {
            "name": "test_requires_post",
            "location": 440,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_no_milestone": {
            "name": "test_no_milestone",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_no_target_school_for_student": {
            "name": "test_no_target_school_for_student",
            "location": 465,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_add_milestone": {
            "name": "test_add_milestone",
            "location": 476,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetStudentMilestone.test_remove_milestone": {
            "name": "test_remove_milestone",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_requires_login": {
            "name": "test_requires_login",
            "location": 515,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_requires_post": {
            "name": "test_requires_post",
            "location": 523,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_unauthorized_user": {
            "name": "test_unauthorized_user",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_no_school_application": {
            "name": "test_no_school_application",
            "location": 539,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_no_target_school_for_student": {
            "name": "test_no_target_school_for_student",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_add_school_application": {
            "name": "test_add_school_application",
            "location": 559,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSetSchoolApplication.test_remove_school_application": {
            "name": "test_remove_school_application",
            "location": 577,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/planner/tests/__init__.py": {},
    "conductor-master/conductor/support/admin.py": {},
    "conductor-master/conductor/support/apps.py": {},
    "conductor-master/conductor/support/forms.py": {},
    "conductor-master/conductor/support/models.py": {
        "SupportTicket.__str__": {
            "name": "__str__",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/support/views.py": {
        "contact": {
            "name": "contact",
            "location": 11,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "tools_dashboard": {
            "name": "tools_dashboard",
            "location": 28,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        }
    },
    "conductor-master/conductor/support/__init__.py": {},
    "conductor-master/conductor/support/management/__init__.py": {},
    "conductor-master/conductor/support/management/commands/makesitemap.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "ArgumentParser"
                ]
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.build_url": {
            "name": "build_url",
            "location": 36,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "change_frequency": [
                    "str"
                ],
                "priority": [
                    "float"
                ]
            }
        },
        "Command.write_sitemap": {
            "name": "write_sitemap",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sitemap": [
                    "Element"
                ],
                "sitemap_path": [
                    "str"
                ]
            }
        }
    },
    "conductor-master/conductor/support/management/commands/__init__.py": {},
    "conductor-master/conductor/support/migrations/0001_initial.py": {},
    "conductor-master/conductor/support/migrations/__init__.py": {},
    "conductor-master/conductor/support/templatetags/support_tags.py": {
        "startswith": {
            "name": "startswith",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "prefix": [
                    "str"
                ]
            }
        }
    },
    "conductor-master/conductor/support/templatetags/__init__.py": {},
    "conductor-master/conductor/support/tests/factories.py": {},
    "conductor-master/conductor/support/tests/test_models.py": {
        "TestSupportTicket.test_factory": {
            "name": "test_factory",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSupportTicket.test_str": {
            "name": "test_str",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSupportTicket.test_has_email": {
            "name": "test_has_email",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSupportTicket.test_has_subject": {
            "name": "test_has_subject",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSupportTicket.test_has_message": {
            "name": "test_has_message",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/support/tests/test_templatetags.py": {
        "TestStartswith.test_single_match": {
            "name": "test_single_match",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStartswith.test_single_no_match": {
            "name": "test_single_no_match",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStartswith.test_multiple_match": {
            "name": "test_multiple_match",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStartswith.test_multiple_no_match": {
            "name": "test_multiple_no_match",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/support/tests/test_views.py": {
        "TestContact.test_get": {
            "name": "test_get",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestContact.test_has_form": {
            "name": "test_has_form",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestContact.test_success": {
            "name": "test_success",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestContact.test_failure": {
            "name": "test_failure",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestToolDashboard.test_staff_only": {
            "name": "test_staff_only",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestToolDashboard.test_ok": {
            "name": "test_ok",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestToolDashboard.test_context": {
            "name": "test_context",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/support/tests/__init__.py": {},
    "conductor-master/conductor/tests/request_factory.py": {
        "RequestFactory.authenticated_get": {
            "name": "authenticated_get",
            "location": 11,
            "return": [
                "HttpRequest"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "RequestFactory.get": {
            "name": "get",
            "location": 18,
            "return": [
                "HttpRequest"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "session": [
                    "bool"
                ]
            }
        },
        "RequestFactory.authenticated_post": {
            "name": "authenticated_post",
            "location": 31,
            "return": [
                "HttpRequest"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "RequestFactory.post": {
            "name": "post",
            "location": 38,
            "return": [
                "HttpRequest"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "format": [
                    "str"
                ],
                "session": [
                    "bool"
                ]
            }
        }
    },
    "conductor-master/conductor/tests/testcase.py": {},
    "conductor-master/conductor/tests/__init__.py": {},
    "conductor-master/conductor/trackers/admin.py": {},
    "conductor-master/conductor/trackers/apps.py": {},
    "conductor-master/conductor/trackers/handlers.py": {
        "CommonAppHandler.handle": {
            "name": "handle",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "common_app_schools": [
                    "List[RawCommonAppSchool]"
                ]
            }
        },
        "CommonAppHandler.process_school": {
            "name": "process_school",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_common_app_school": [
                    "RawCommonAppSchool"
                ],
                "stats": [
                    "Dict[(str, List[CommonAppTracker])]"
                ]
            }
        },
        "CommonAppHandler.report": {
            "name": "report",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stats": [
                    "Dict[(str, List[CommonAppTracker])]"
                ]
            }
        }
    },
    "conductor-master/conductor/trackers/models.py": {},
    "conductor-master/conductor/trackers/tasks.py": {
        "scan_common_app_schools": {
            "name": "scan_common_app_schools",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "conductor-master/conductor/trackers/urls.py": {},
    "conductor-master/conductor/trackers/views.py": {
        "connect_common_apps": {
            "name": "connect_common_apps",
            "location": 14,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "HttpRequest"
                ]
            }
        }
    },
    "conductor-master/conductor/trackers/__init__.py": {},
    "conductor-master/conductor/trackers/migrations/0001_initial.py": {},
    "conductor-master/conductor/trackers/migrations/0002_auto_20181025_0210.py": {},
    "conductor-master/conductor/trackers/migrations/0003_auto_20190307_0312.py": {},
    "conductor-master/conductor/trackers/migrations/__init__.py": {},
    "conductor-master/conductor/trackers/tests/factories.py": {},
    "conductor-master/conductor/trackers/tests/test_handlers.py": {
        "TestCommonAppHandler.test_no_action_when_all_tracked": {
            "name": "test_no_action_when_all_tracked",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "process_school": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestCommonAppHandler.test_add_tracker": {
            "name": "test_add_tracker",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppHandler.test_modifies_tracker": {
            "name": "test_modifies_tracker",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppHandler.test_same_school_name": {
            "name": "test_same_school_name",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppHandler.test_tracker_removed": {
            "name": "test_tracker_removed",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "report": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestCommonAppHandler.test_report": {
            "name": "test_report",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/trackers/tests/test_models.py": {
        "TestCommonAppTracker.test_factory": {
            "name": "test_factory",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppTracker.test_has_name": {
            "name": "test_has_name",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppTracker.test_has_slug": {
            "name": "test_has_slug",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppTracker.test_has_status": {
            "name": "test_has_status",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommonAppTracker.test_has_school": {
            "name": "test_has_school",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/trackers/tests/test_tasks.py": {
        "TestScanCommonAppSchools.test_scan": {
            "name": "test_scan",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [
                    "mock.MagicMock"
                ],
                "mock_time": [
                    "mock.MagicMock"
                ],
                "common_app_handler": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/trackers/tests/test_views.py": {
        "TestConnectCommonApps.test_staff_only": {
            "name": "test_staff_only",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectCommonApps.test_ok": {
            "name": "test_ok",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectCommonApps.test_post_ok": {
            "name": "test_post_ok",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectCommonApps.test_context": {
            "name": "test_context",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestConnectCommonApps.test_find_matching_school": {
            "name": "test_find_matching_school",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "render": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/trackers/tests/__init__.py": {},
    "conductor-master/conductor/vendor/admin.py": {},
    "conductor-master/conductor/vendor/apps.py": {},
    "conductor-master/conductor/vendor/models.py": {},
    "conductor-master/conductor/vendor/services.py": {},
    "conductor-master/conductor/vendor/tasks.py": {
        "scan_prompt": {
            "name": "scan_prompt",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "conductor-master/conductor/vendor/views.py": {},
    "conductor-master/conductor/vendor/_google.py": {
        "GoogleGateway.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "credentials": [
                    "Credentials"
                ]
            }
        },
        "GoogleGateway.generate_schedule": {
            "name": "generate_schedule",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "student": [
                    "Student"
                ]
            }
        },
        "GoogleGateway.create_sheet": {
            "name": "create_sheet",
            "location": 56,
            "return": [
                "GoogleSpreadsheet"
            ],
            "arguments": {
                "self": [],
                "student": [
                    "Student"
                ],
                "spreadsheets_resource": [
                    "discovery.Resource"
                ]
            }
        },
        "GoogleGateway.build_header_row": {
            "name": "build_header_row",
            "location": 89,
            "return": [
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleGateway.build_school_rows": {
            "name": "build_school_rows",
            "location": 98,
            "return": [
                "List"
            ],
            "arguments": {
                "self": [],
                "target_schools": [
                    "QuerySet"
                ]
            }
        },
        "GoogleGateway.build_empty_row": {
            "name": "build_empty_row",
            "location": 141,
            "return": [
                "Dict[(str, List)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleGateway.format_sheet": {
            "name": "format_sheet",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "google_spreadsheet": [
                    "GoogleSpreadsheet"
                ],
                "spreadsheets_resource": [
                    "discovery.Resource"
                ]
            }
        },
        "GoogleGateway.border_column_right": {
            "name": "border_column_right",
            "location": 230,
            "return": [
                "Dict"
            ],
            "arguments": {
                "self": [],
                "column_index": [
                    "int"
                ],
                "sheet_id": [
                    "int"
                ]
            }
        },
        "GoogleGateway.border_row_bottom": {
            "name": "border_row_bottom",
            "location": 246,
            "return": [
                "Dict"
            ],
            "arguments": {
                "self": [],
                "row_index": [
                    "int"
                ],
                "sheet_id": [
                    "int"
                ]
            }
        }
    },
    "conductor-master/conductor/vendor/_stripe.py": {
        "StripeGateway.create_customer": {
            "name": "create_customer",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "stripe_token": [
                    "str"
                ],
                "product_plan": [
                    "ProductPlan"
                ]
            }
        },
        "StripeGateway.cancel_subscription": {
            "name": "cancel_subscription",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "conductor-master/conductor/vendor/__init__.py": {},
    "conductor-master/conductor/vendor/migrations/0001_initial.py": {},
    "conductor-master/conductor/vendor/migrations/0002_auto_20181220_0242.py": {},
    "conductor-master/conductor/vendor/migrations/__init__.py": {},
    "conductor-master/conductor/vendor/tests/factories.py": {},
    "conductor-master/conductor/vendor/tests/test_google.py": {
        "TestGoogleGateway.setup_mock_for_sheets": {
            "name": "setup_mock_for_sheets",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_discovery": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestGoogleGateway.get_create_data": {
            "name": "get_create_data",
            "location": 22,
            "return": [
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleGateway.test_sheet_title": {
            "name": "test_sheet_title",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_discovery": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/vendor/tests/test_models.py": {
        "TestPromptSchool.test_factory": {
            "name": "test_factory",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPromptSchool.test_has_name": {
            "name": "test_has_name",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPromptSchool.test_has_slug": {
            "name": "test_has_slug",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPromptSchool.test_has_school": {
            "name": "test_has_school",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "conductor-master/conductor/vendor/tests/test_stripe.py": {
        "TestStripeGateway.test_create_customer": {
            "name": "test_create_customer",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestStripeGateway.test_bad_token": {
            "name": "test_bad_token",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestStripeGateway.test_cancel_subscription": {
            "name": "test_cancel_subscription",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestStripeGateway.test_cancel_subscription_error": {
            "name": "test_cancel_subscription_error",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stripe": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/vendor/tests/test_tasks.py": {
        "TestScanPrompt.test_creates_prompt_school": {
            "name": "test_creates_prompt_school",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestScanPrompt.test_skip_existing_prompt_school": {
            "name": "test_skip_existing_prompt_school",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [
                    "mock.MagicMock"
                ]
            }
        }
    },
    "conductor-master/conductor/vendor/tests/__init__.py": {},
    "conductor-master/playbooks/roles/web/templates/_secrets.py": {},
    "conductor-master/settings/base.py": {},
    "conductor-master/settings/conf.py": {},
    "conductor-master/settings/development.py": {},
    "conductor-master/settings/production.py": {},
    "conductor-master/settings/staging.py": {},
    "conductor-master/settings/test.py": {
        "DisableMigrations.__contains__": {
            "name": "__contains__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "DisableMigrations.__getitem__": {
            "name": "__getitem__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "conductor-master/settings/__init__.py": {}
}
{
    "cpyfunctional-master/setup.py": {},
    "cpyfunctional-master/cpyfunctional/core.py": {},
    "cpyfunctional-master/cpyfunctional/cpyfunctional.py": {
        "compose": {
            "name": "compose",
            "location": 5,
            "return": [
                "Callable"
            ],
            "arguments": {}
        },
        "pipe": {
            "name": "pipe",
            "location": 12,
            "return": [
                "Callable"
            ],
            "arguments": {}
        },
        "func_curry": {
            "name": "func_curry",
            "location": 19,
            "return": [
                "Callable[([Any], Callable)]"
            ],
            "arguments": {
                "fn": [
                    "Callable"
                ]
            }
        }
    },
    "cpyfunctional-master/cpyfunctional/__init__.py": {},
    "cpyfunctional-master/tests/tests_compose.py": {
        "TestCompose.test_able_to_compose_multiple_callable": {
            "name": "test_able_to_compose_multiple_callable",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCompose.test_unable_to_accept_function": {
            "name": "test_unable_to_accept_function",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCompose.test_unable_to_accept_function.add": {
            "name": "add",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "number": [
                    "int"
                ],
                "prev_number": [
                    "int"
                ]
            }
        }
    },
    "cpyfunctional-master/tests/tests_func_curry.py": {
        "TestFuncCurry.test_func_curry_able_to_make_callable_accept_params": {
            "name": "test_func_curry_able_to_make_callable_accept_params",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFuncCurry.test_func_curry_able_to_make_callable_accept_params.add": {
            "name": "add",
            "location": 15,
            "return": [
                "int"
            ],
            "arguments": {
                "number1": [
                    "int"
                ],
                "number2": [
                    "int"
                ],
                "prev_number": [
                    "int"
                ]
            }
        }
    },
    "cpyfunctional-master/tests/tests_pipe.py": {
        "TestPipe.test_able_to_pipe_multiple_callable": {
            "name": "test_able_to_pipe_multiple_callable",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPipe.test_unable_to_accept_function": {
            "name": "test_unable_to_accept_function",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPipe.test_unable_to_accept_function.add": {
            "name": "add",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "number": [
                    "int"
                ],
                "prev_number": [
                    "int"
                ]
            }
        }
    },
    "cpyfunctional-master/tests/__init__.py": {}
}
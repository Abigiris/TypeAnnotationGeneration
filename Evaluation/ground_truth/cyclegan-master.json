{
    "cyclegan-master/cache-datasets.py": {
        "download_dataset": {
            "name": "download_dataset",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "cyclegan-master/floyd.py": {},
    "cyclegan-master/setup.py": {},
    "cyclegan-master/docs/conf.py": {},
    "cyclegan-master/src/cyclegan/cli.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "int"
            ],
            "arguments": {
                "cuda": [
                    "bool"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "train_step": {
            "name": "train_step",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "a_data": [
                    "torch.Tensor"
                ],
                "b_data": [
                    "torch.Tensor"
                ],
                "i": [
                    "int"
                ],
                "res_fs": [
                    "FS"
                ],
                "trainer": [
                    "training.CycleGanTrainer"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/datasets.py": {
        "mnist": {
            "name": "mnist",
            "location": 11,
            "return": [
                "torchvision.datasets.MNIST"
            ],
            "arguments": {
                "download": [
                    "bool"
                ]
            }
        },
        "fmnist": {
            "name": "fmnist",
            "location": 20,
            "return": [
                "torchvision.datasets.FashionMNIST"
            ],
            "arguments": {
                "download": [
                    "bool"
                ]
            }
        },
        "svhn": {
            "name": "svhn",
            "location": 29,
            "return": [
                "torchvision.datasets.SVHN"
            ],
            "arguments": {
                "download": [
                    "bool"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/discriminators.py": {
        "MNISTDiscriminator.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'MNISTDiscriminator'"
                ]
            }
        },
        "MNISTDiscriminator.forward": {
            "name": "forward",
            "location": 29,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "SVHNDiscriminator.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'SVHNDiscriminator'"
                ]
            }
        },
        "SVHNDiscriminator.forward": {
            "name": "forward",
            "location": 61,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/generators.py": {
        "MNISTMNISTTransform.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'MNISTMNISTTransform'"
                ]
            }
        },
        "MNISTMNISTTransform.forward": {
            "name": "forward",
            "location": 35,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "FashionMNISTMNISTTransform.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'MNISTMNISTTransform'"
                ]
            }
        },
        "FashionMNISTMNISTTransform.forward": {
            "name": "forward",
            "location": 73,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "MnistSvhnTransform.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'MnistSvhnTransform'"
                ]
            }
        },
        "MnistSvhnTransform.forward": {
            "name": "forward",
            "location": 115,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "SvhnMnistTransform.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "'SvhnMnistTransform'"
                ]
            }
        },
        "SvhnMnistTransform.forward": {
            "name": "forward",
            "location": 157,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/monitoring.py": {
        "Writer.add_scalar": {
            "name": "add_scalar",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "name": [
                    "str"
                ],
                "val": [
                    "float"
                ],
                "global_step": [
                    "typing.Optional[int]"
                ],
                "walltime": [
                    "typing.Optional[float]"
                ]
            }
        },
        "Writer.add_image": {
            "name": "add_image",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "tag": [
                    "str"
                ],
                "img_tensor": [
                    "np.ndarray"
                ],
                "global_step": [
                    "typing.Optional[int]"
                ],
                "walltime": [
                    "typing.Optional[float]"
                ]
            }
        },
        "Writer.add_graph": {
            "name": "add_graph",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "model": [
                    "torch.nn.Module"
                ],
                "input_to_model": [
                    "torch.Tensor"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "Writer.init": {
            "name": "init",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "out_dir": [
                    "typing.Optional[str]"
                ]
            }
        },
        "Writer.finish": {
            "name": "finish",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "results_fs": [
                    "typing.Optional[FS]"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/training.py": {
        "Domain.visualize_domain": {
            "name": "visualize_domain",
            "location": 20,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "MNISTDomain.visualize_domain": {
            "name": "visualize_domain",
            "location": 25,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "SVHNDomain.visualize_domain": {
            "name": "visualize_domain",
            "location": 31,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "CycleGanTrainer.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "a_dom": [
                    "Domain"
                ],
                "b_dom": [
                    "Domain"
                ],
                "batch_size": [
                    "int"
                ],
                "use_cuda": [
                    "int"
                ]
            }
        },
        "CycleGanTrainer.make_batch": {
            "name": "make_batch",
            "location": 65,
            "return": [
                "typing.Tuple[(torch.Tensor, torch.Tensor)]"
            ],
            "arguments": {
                "self": [],
                "a_data": [
                    "torch.Tensor"
                ],
                "b_data": [
                    "torch.Tensor"
                ]
            }
        },
        "CycleGanTrainer.step_discrim": {
            "name": "step_discrim",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a_data": [
                    "torch.Tensor"
                ],
                "b_data": [
                    "torch.Tensor"
                ]
            }
        },
        "CycleGanTrainer.step_gen": {
            "name": "step_gen",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a_data": [
                    "torch.Tensor"
                ],
                "b_data": [
                    "torch.Tensor"
                ]
            }
        },
        "CycleGanTrainer.save_sample": {
            "name": "save_sample",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a_data": [
                    "torch.Tensor"
                ],
                "b_data": [
                    "torch.Tensor"
                ],
                "results_fs": [
                    "FS"
                ]
            }
        }
    },
    "cyclegan-master/src/cyclegan/__init__.py": {},
    "cyclegan-master/tests/test_datasets.py": {
        "test_mnist_size": {
            "name": "test_mnist_size",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_svhn_size": {
            "name": "test_svhn_size",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cyclegan-master/tests/test_discriminators.py": {
        "test_mnist_is_zero": {
            "name": "test_mnist_is_zero",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fmnist_is_zero": {
            "name": "test_fmnist_is_zero",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_svhn_is_zero": {
            "name": "test_svhn_is_zero",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cyclegan-master/tests/test_generators.py": {
        "test_mnist_mnist": {
            "name": "test_mnist_mnist",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fmnist_mnist": {
            "name": "test_fmnist_mnist",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mnist_svhn": {
            "name": "test_mnist_svhn",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_svhn_mnist": {
            "name": "test_svhn_mnist",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cyclegan-master/tests/__init__.py": {}
}
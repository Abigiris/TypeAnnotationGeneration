{
    "demetsiiify-master/conftest.py": {},
    "demetsiiify-master/manage.py": {
        "_make_context": {
            "name": "_make_context",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "worker": {
            "name": "worker",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "oai_worker": {
            "name": "oai_worker",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "drop": {
            "name": "drop",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "create": {
            "name": "create",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "recreate": {
            "name": "recreate",
            "location": 52,
            "return": [],
            "arguments": {
                "default_data": [],
                "sample_data": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/extensions.py": {},
    "demetsiiify-master/demetsiiify/iiif.py": {
        "make_label": {
            "name": "make_label",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "mets_meta": [
                    "dict"
                ]
            }
        },
        "make_metadata": {
            "name": "make_metadata",
            "location": 68,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "mets_meta": [
                    "dict"
                ]
            }
        },
        "_get_canvases": {
            "name": "_get_canvases",
            "location": 83,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "toc_entry": [
                    "TocEntry"
                ],
                "manifest": [
                    "Manifest"
                ]
            }
        },
        "_add_toc_ranges": {
            "name": "_add_toc_ranges",
            "location": 105,
            "return": [],
            "arguments": {
                "manifest": [
                    "Manifest"
                ],
                "toc_entries": [
                    "Iterable[TocEntry]"
                ]
            }
        },
        "_make_empty_manifest": {
            "name": "_make_empty_manifest",
            "location": 122,
            "return": [
                "Manifest"
            ],
            "arguments": {
                "ident": [
                    "str"
                ],
                "label": [
                    "str"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "_fill_manifest_metadata": {
            "name": "_fill_manifest_metadata",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "manifest": [
                    "Manifest"
                ],
                "mets_metadata": [
                    "dict"
                ]
            }
        },
        "make_image_info": {
            "name": "make_image_info",
            "location": 156,
            "return": [
                "dict"
            ],
            "arguments": {
                "itm": [
                    "PhysicalItem"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "make_manifest": {
            "name": "make_manifest",
            "location": 171,
            "return": [
                "dict"
            ],
            "arguments": {
                "ident": [
                    "str"
                ],
                "mets_doc": [
                    "MetsDocument"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "make_manifest_collection": {
            "name": "make_manifest_collection",
            "location": 199,
            "return": [
                "dict"
            ],
            "arguments": {
                "pagination": [
                    "Pagination"
                ],
                "label": [
                    "str"
                ],
                "collection_id": [
                    "str"
                ],
                "per_page": [
                    "int"
                ],
                "base_url": [
                    "str"
                ],
                "page_num": [
                    "Optional[int]"
                ],
                "coll_counts": [
                    "Optional[Tuple[(int, str, int)]]"
                ]
            }
        },
        "make_annotation_list": {
            "name": "make_annotation_list",
            "location": 269,
            "return": [
                "dict"
            ],
            "arguments": {
                "pagination": [
                    "Pagination"
                ],
                "request_url": [
                    "str"
                ],
                "request_args": [
                    "dict"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "make_annotation_list._make_link": {
            "name": "_make_link",
            "location": 280,
            "return": [
                "str"
            ],
            "arguments": {
                "page_no": [
                    "int"
                ]
            }
        }
    },
    "demetsiiify-master/demetsiiify/imgfetch.py": {
        "_complete_image_info": {
            "name": "_complete_image_info",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "ImageInfo"
                ],
                "jpeg_only": [
                    "bool"
                ],
                "about_url": []
            }
        },
        "add_image_dimensions": {
            "name": "add_image_dimensions",
            "location": 81,
            "return": [
                "Iterable[Progress]"
            ],
            "arguments": {
                "files": [
                    "Iterable[ImageInfo]"
                ],
                "jpeg_only": [
                    "bool"
                ],
                "about_url": [
                    "str"
                ],
                "concurrency": [
                    "int"
                ]
            }
        },
        "ImageDownloadError.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "debug_info": [
                    "dict"
                ]
            }
        }
    },
    "demetsiiify-master/demetsiiify/mets.py": {
        "get_basic_info": {
            "name": "get_basic_info",
            "location": 325,
            "return": [],
            "arguments": {
                "mets_url": []
            }
        },
        "PhysicalItem.max_dimensions": {
            "name": "max_dimensions",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PhysicalItem.min_dimensions": {
            "name": "min_dimensions",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetsParseError.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "debug_info": [
                    "dict"
                ]
            }
        },
        "MetsDocument.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mets_tree": [
                    "etree.ElementTree"
                ],
                "url": [
                    "str"
                ],
                "primary_id": [
                    "str"
                ]
            }
        },
        "MetsDocument._xpath": {
            "name": "_xpath",
            "location": 119,
            "return": [
                "List[etree.Element]"
            ],
            "arguments": {
                "self": [],
                "xpath": [
                    "str"
                ],
                "elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._find": {
            "name": "_find",
            "location": 124,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._findall": {
            "name": "_findall",
            "location": 128,
            "return": [
                "List[etree.Element]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._findtext": {
            "name": "_findtext",
            "location": 133,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._parse_title": {
            "name": "_parse_title",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "title_elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._parse_name": {
            "name": "_parse_name",
            "location": 147,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name_elem": [
                    "etree.Element"
                ]
            }
        },
        "MetsDocument._read_persons": {
            "name": "_read_persons",
            "location": 154,
            "return": [
                "Mapping[(str, List[str])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._read_origin": {
            "name": "_read_origin",
            "location": 166,
            "return": [
                "Mapping[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._get_unique_identifier": {
            "name": "_get_unique_identifier",
            "location": 174,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._read_titles": {
            "name": "_read_titles",
            "location": 192,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._read_metadata": {
            "name": "_read_metadata",
            "location": 207,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._read_files": {
            "name": "_read_files",
            "location": 255,
            "return": [
                "Dict[(str, ImageInfo)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._read_physical_items": {
            "name": "_read_physical_items",
            "location": 262,
            "return": [
                "Dict[(str, PhysicalItem)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._parse_tocentry": {
            "name": "_parse_tocentry",
            "location": 288,
            "return": [
                "TocEntry"
            ],
            "arguments": {
                "self": [],
                "toc_elem": [
                    "etree.Element"
                ],
                "lmap": [
                    "Mapping[(str, List[str])]"
                ]
            }
        },
        "MetsDocument._read_toc_entries": {
            "name": "_read_toc_entries",
            "location": 300,
            "return": [
                "List[TocEntry]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetsDocument._get_image_specs": {
            "name": "_get_image_specs",
            "location": 316,
            "return": [
                "ImageInfo"
            ],
            "arguments": {
                "self": [],
                "file_elem": [
                    "etree.Element"
                ]
            }
        }
    },
    "demetsiiify-master/demetsiiify/models.py": {
        "Identifier.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "type_": [],
                "manifest_id": []
            }
        },
        "Identifier.save": {
            "name": "save",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Identifier.resolve": {
            "name": "resolve",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": [],
                "identifier": []
            }
        },
        "Manifest.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "origin": [],
                "manifest": [],
                "label": [],
                "id": []
            }
        },
        "Manifest.save": {
            "name": "save",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Manifest.get_latest": {
            "name": "get_latest",
            "location": 68,
            "return": [],
            "arguments": {
                "cls": [],
                "num": []
            }
        },
        "Manifest.get": {
            "name": "get",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [],
                "id": []
            }
        },
        "Manifest.by_origin": {
            "name": "by_origin",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [],
                "origin": []
            }
        },
        "Manifest.get_sequence": {
            "name": "get_sequence",
            "location": 93,
            "return": [],
            "arguments": {
                "cls": [],
                "manifest_id": [],
                "sequence_id": []
            }
        },
        "Manifest.get_canvas": {
            "name": "get_canvas",
            "location": 104,
            "return": [],
            "arguments": {
                "cls": [],
                "manifest_id": [],
                "canvas_id": []
            }
        },
        "Manifest.get_image_annotation": {
            "name": "get_image_annotation",
            "location": 116,
            "return": [],
            "arguments": {
                "cls": [],
                "manifest_id": [],
                "anno_id": []
            }
        },
        "Manifest.get_range": {
            "name": "get_range",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": [],
                "manifest_id": [],
                "range_id": []
            }
        },
        "IIIFImage.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "info": [],
                "id": []
            }
        },
        "IIIFImage.get_image_url": {
            "name": "get_image_url",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "format_": [],
                "width": [],
                "height": []
            }
        },
        "IIIFImage.get": {
            "name": "get",
            "location": 163,
            "return": [],
            "arguments": {
                "cls": [],
                "id": []
            }
        },
        "IIIFImage.save": {
            "name": "save",
            "location": 167,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "IIIFImage.delete_orphaned": {
            "name": "delete_orphaned",
            "location": 178,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Image.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "width": [],
                "height": [],
                "format": [],
                "iiif_id": []
            }
        },
        "Image.get": {
            "name": "get",
            "location": 213,
            "return": [],
            "arguments": {
                "cls": [],
                "id_": []
            }
        },
        "Image.by_url": {
            "name": "by_url",
            "location": 217,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "Image.save": {
            "name": "save",
            "location": 221,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Annotation.__init__": {
            "name": "__init__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "annotation": []
            }
        },
        "Annotation._extract_target": {
            "name": "_extract_target",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "on": []
            }
        },
        "Annotation.get": {
            "name": "get",
            "location": 262,
            "return": [],
            "arguments": {
                "cls": [],
                "id_": []
            }
        },
        "Annotation.delete": {
            "name": "delete",
            "location": 266,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Annotation.save": {
            "name": "save",
            "location": 272,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Annotation.search": {
            "name": "search",
            "location": 287,
            "return": [],
            "arguments": {
                "cls": [],
                "target": [],
                "motivation": [],
                "date_ranges": []
            }
        },
        "Collection.__init__": {
            "name": "__init__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "name": []
            }
        },
        "Collection.save": {
            "name": "save",
            "location": 330,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Collection.get": {
            "name": "get",
            "location": 339,
            "return": [],
            "arguments": {
                "cls": [],
                "id": []
            }
        },
        "Collection.get_child_collection_counts": {
            "name": "get_child_collection_counts",
            "location": 343,
            "return": [],
            "arguments": {
                "cls": [],
                "collection_id": []
            }
        },
        "OaiRepository.__init__": {
            "name": "__init__",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "name": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/oai.py": {
        "OaiRepository.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        },
        "OaiRepository._make_request": {
            "name": "_make_request",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "verb": []
            }
        },
        "OaiRepository._format_time": {
            "name": "_format_time",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "OaiRepository.metadata_formats": {
            "name": "metadata_formats",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OaiRepository.get_record": {
            "name": "get_record",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "metadata_format": []
            }
        },
        "OaiRepository.list_records": {
            "name": "list_records",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_format": [],
                "set_id": [],
                "since": []
            }
        },
        "OaiRepository.list_identifiers": {
            "name": "list_identifiers",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_format": [],
                "set_id": [],
                "since": [],
                "include_sets": []
            }
        },
        "OaiRepository.list_record_urls": {
            "name": "list_record_urls",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_format": [],
                "set_id": [],
                "since": [],
                "include_sets": []
            }
        },
        "OaiRepository.list_sets": {
            "name": "list_sets",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/tasks.py": {
        "get_redis": {
            "name": "get_redis",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "fetch_image_dimensions": {
            "name": "fetch_image_dimensions",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "doc": [
                    "MetsDocument"
                ],
                "job": [
                    "Optional[Job]"
                ],
                "concurrency": [
                    "int"
                ]
            }
        },
        "_parse_mets": {
            "name": "_parse_mets",
            "location": 56,
            "return": [
                "MetsDocument"
            ],
            "arguments": {
                "mets_url": [
                    "str"
                ]
            }
        },
        "_add_image_sizes": {
            "name": "_add_image_sizes",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "doc": [
                    "MetsDocument"
                ],
                "concurrency": [
                    "int"
                ]
            }
        },
        "_make_iiif_images": {
            "name": "_make_iiif_images",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "doc": [
                    "MetsDocument"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "_make_manifest": {
            "name": "_make_manifest",
            "location": 106,
            "return": [
                "Manifest"
            ],
            "arguments": {
                "doc": [
                    "MetsDocument"
                ],
                "base_url": [
                    "str"
                ]
            }
        },
        "_store_identifiers": {
            "name": "_store_identifiers",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "manifest": [
                    "Manifest"
                ],
                "doc": [
                    "MetsDocument"
                ]
            }
        },
        "import_mets_job": {
            "name": "import_mets_job",
            "location": 126,
            "return": [
                "str"
            ],
            "arguments": {
                "mets_url": [
                    "str"
                ],
                "collection_id": [
                    "Optional[str]"
                ],
                "concurrency": [
                    "int"
                ]
            }
        },
        "import_from_oai": {
            "name": "import_from_oai",
            "location": 151,
            "return": [],
            "arguments": {
                "oai_endpoint": [],
                "since": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/__init__.py": {
        "_force_preferred_scheme": {
            "name": "_force_preferred_scheme",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "create_app": {
            "name": "create_app",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "make_redis": {
            "name": "make_redis",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "make_queues": {
            "name": "make_queues",
            "location": 65,
            "return": [],
            "arguments": {
                "redis": []
            }
        },
        "_exception_handler": {
            "name": "_exception_handler",
            "location": 70,
            "return": [],
            "arguments": {
                "job": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "make_worker": {
            "name": "make_worker",
            "location": 82,
            "return": [],
            "arguments": {
                "redis": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/blueprints/api.py": {
        "handle_error": {
            "name": "handle_error",
            "location": 40,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "api_get_recent_manifests": {
            "name": "api_get_recent_manifests",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "api_resolve": {
            "name": "api_resolve",
            "location": 78,
            "return": [],
            "arguments": {
                "identifier": []
            }
        },
        "_extract_mets_from_dfgviewer": {
            "name": "_extract_mets_from_dfgviewer",
            "location": 91,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "api_import": {
            "name": "api_import",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "_get_job_status": {
            "name": "_get_job_status",
            "location": 138,
            "return": [],
            "arguments": {
                "job": []
            }
        },
        "api_list_tasks": {
            "name": "api_list_tasks",
            "location": 164,
            "return": [],
            "arguments": {}
        },
        "api_task_status": {
            "name": "api_task_status",
            "location": 175,
            "return": [],
            "arguments": {
                "task_id": []
            }
        },
        "sse_stream": {
            "name": "sse_stream",
            "location": 186,
            "return": [],
            "arguments": {
                "task_id": []
            }
        },
        "ServerSentEvent.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ServerSentEvent.encode": {
            "name": "encode",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sse_stream.gen": {
            "name": "gen",
            "location": 200,
            "return": [],
            "arguments": {
                "redis": []
            }
        }
    },
    "demetsiiify-master/demetsiiify/blueprints/iiif.py": {
        "cors": {
            "name": "cors",
            "location": 16,
            "return": [],
            "arguments": {
                "origin": []
            }
        },
        "get_collection": {
            "name": "get_collection",
            "location": 35,
            "return": [],
            "arguments": {
                "collection_id": [],
                "page_id": []
            }
        },
        "get_manifest": {
            "name": "get_manifest",
            "location": 72,
            "return": [],
            "arguments": {
                "manif_id": []
            }
        },
        "get_sequence": {
            "name": "get_sequence",
            "location": 85,
            "return": [],
            "arguments": {
                "manif_id": [],
                "sequence_id": []
            }
        },
        "get_canvas": {
            "name": "get_canvas",
            "location": 98,
            "return": [],
            "arguments": {
                "manif_id": [],
                "canvas_id": []
            }
        },
        "get_image_annotation": {
            "name": "get_image_annotation",
            "location": 111,
            "return": [],
            "arguments": {
                "manif_id": [],
                "anno_id": []
            }
        },
        "get_range": {
            "name": "get_range",
            "location": 124,
            "return": [],
            "arguments": {
                "manif_id": [],
                "range_id": []
            }
        },
        "get_image_info": {
            "name": "get_image_info",
            "location": 136,
            "return": [],
            "arguments": {
                "image_id": []
            }
        },
        "get_image": {
            "name": "get_image",
            "location": 149,
            "return": [],
            "arguments": {
                "image_id": [],
                "region": [],
                "size": [],
                "rotation": [],
                "quality": [],
                "format": []
            }
        },
        "get_annotation": {
            "name": "get_annotation",
            "location": 182,
            "return": [],
            "arguments": {
                "annotation_id": []
            }
        },
        "delete_annotation": {
            "name": "delete_annotation",
            "location": 193,
            "return": [],
            "arguments": {
                "annotation_id": []
            }
        },
        "update_annotation": {
            "name": "update_annotation",
            "location": 206,
            "return": [],
            "arguments": {
                "annotation_id": []
            }
        },
        "search_annotations": {
            "name": "search_annotations",
            "location": 221,
            "return": [],
            "arguments": {}
        },
        "create_annotation": {
            "name": "create_annotation",
            "location": 244,
            "return": [],
            "arguments": {}
        },
        "cors.decorator": {
            "name": "decorator",
            "location": 18,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "cors.decorator.decorated_function": {
            "name": "decorated_function",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/demetsiiify/blueprints/view.py": {
        "nl2br": {
            "name": "nl2br",
            "location": 19,
            "return": [],
            "arguments": {
                "eval_ctx": [],
                "value": []
            }
        },
        "inject_debug": {
            "name": "inject_debug",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "view_endpoint": {
            "name": "view_endpoint",
            "location": 33,
            "return": [],
            "arguments": {
                "manifest_id": []
            }
        },
        "index": {
            "name": "index",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "recent": {
            "name": "recent",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "browse": {
            "name": "browse",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "about": {
            "name": "about",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "apidocs": {
            "name": "apidocs",
            "location": 76,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/demetsiiify/blueprints/__init__.py": {},
    "demetsiiify-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 61,
            "return": [],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "demetsiiify-master/migrations/versions/0_add_annotation_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/1_add_collections_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/3_update_null_constraints.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 82,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/4_update_collection_constraints.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/5_add_oai_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 29,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/6_add_last_update_column.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/7_add_image_fk_index.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/8_more_indices.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 27,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/migrations/versions/initial.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "demetsiiify-master/tests/test_iiif.py": {
        "_add_mock_sizes": {
            "name": "_add_mock_sizes",
            "location": 8,
            "return": [],
            "arguments": {
                "mets_doc": []
            }
        },
        "test_make_manifest": {
            "name": "test_make_manifest",
            "location": 19,
            "return": [],
            "arguments": {
                "shared_datadir": []
            }
        }
    },
    "demetsiiify-master/tests/test_imgfetch.py": {
        "test_add_image_sizes": {
            "name": "test_add_image_sizes",
            "location": 8,
            "return": [],
            "arguments": {
                "shared_datadir": [],
                "monkeypatch": []
            }
        },
        "test_add_image_sizes_http_error": {
            "name": "test_add_image_sizes_http_error",
            "location": 38,
            "return": [],
            "arguments": {
                "shared_datadir": [],
                "monkeypatch": []
            }
        }
    },
    "demetsiiify-master/tests/test_mets.py": {
        "test_basic_mets": {
            "name": "test_basic_mets",
            "location": 6,
            "return": [],
            "arguments": {
                "shared_datadir": []
            }
        }
    }
}
{
    "denite.nvim-master/autoload/denite/_main.py": {
        "attach_vim": {
            "name": "attach_vim",
            "location": 17,
            "return": [],
            "arguments": {
                "serveraddr": []
            }
        },
        "main": {
            "name": "main",
            "location": 47,
            "return": [],
            "arguments": {
                "serveraddr": []
            }
        },
        "RedirectStream.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "handler": []
            }
        },
        "RedirectStream.write": {
            "name": "write",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "RedirectStream.writelines": {
            "name": "writelines",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/aprocess.py": {
        "Process.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "plugin": [
                    "typing.Any"
                ]
            }
        },
        "Process.connection_made": {
            "name": "connection_made",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "typing.Any"
                ]
            }
        },
        "Process.pipe_data_received": {
            "name": "pipe_data_received",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fd": [
                    "int"
                ],
                "data": [
                    "typing.Any"
                ]
            }
        },
        "Process.process_exited": {
            "name": "process_exited",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/child.py": {
        "Child.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Child.main_loop": {
            "name": "main_loop",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stdout": [
                    "typing.Any"
                ]
            }
        },
        "Child.main": {
            "name": "main",
            "location": 63,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ],
                "queue_id": [
                    "int"
                ]
            }
        },
        "Child.start": {
            "name": "start",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child.gather_candidates": {
            "name": "gather_candidates",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child.on_init": {
            "name": "on_init",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child.on_close": {
            "name": "on_close",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child.init_syntax": {
            "name": "init_syntax",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "is_multi": [
                    "bool"
                ]
            }
        },
        "Child.filter_candidates": {
            "name": "filter_candidates",
            "location": 202,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child.do_action": {
            "name": "do_action",
            "location": 245,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "Child.get_action": {
            "name": "get_action",
            "location": 271,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "Child.get_action_names": {
            "name": "get_action_names",
            "location": 284,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "Child.is_async": {
            "name": "is_async",
            "location": 309,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Child.debug": {
            "name": "debug",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Child.error": {
            "name": "error",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "Child._filter_candidates": {
            "name": "_filter_candidates",
            "location": 320,
            "return": [
                "typing.Generator[(typing.Tuple[(str, Candidates, typing.Any, int)], None, None)]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._filter_source_candidates": {
            "name": "_filter_source_candidates",
            "location": 363,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "UserContext"
                ],
                "source": [
                    "Source"
                ]
            }
        },
        "Child._gather_source_candidates": {
            "name": "_gather_source_candidates",
            "location": 397,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "source": [
                    "Source"
                ]
            }
        },
        "Child._get_action_targets": {
            "name": "_get_action_targets",
            "location": 405,
            "return": [
                "Action"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "Child._get_source_status": {
            "name": "_get_source_status",
            "location": 418,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "source": [
                    "Source"
                ],
                "entire": [
                    "Candidates"
                ],
                "partial": [
                    "Candidates"
                ]
            }
        },
        "Child._match_candidates": {
            "name": "_match_candidates",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "matchers": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "Child._call_matchers": {
            "name": "_call_matchers",
            "location": 439,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "UserContext"
                ],
                "matchers": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "Child._set_custom_attribute": {
            "name": "_set_custom_attribute",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kind": [
                    "str"
                ],
                "obj": [
                    "typing.Any"
                ],
                "attr": [
                    "str"
                ]
            }
        },
        "Child._load_sources": {
            "name": "_load_sources",
            "location": 450,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._load_filters": {
            "name": "_load_filters",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._load_kinds": {
            "name": "_load_kinds",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._get_kind": {
            "name": "_get_kind",
            "location": 544,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Child._get_action_target": {
            "name": "_get_action_target",
            "location": 560,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Child._get_custom_actions": {
            "name": "_get_custom_actions",
            "location": 607,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": [],
                "kind_name": [
                    "str"
                ]
            }
        },
        "Child._get_display_source_name": {
            "name": "_get_display_source_name",
            "location": 616,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "is_multi": [
                    "bool"
                ],
                "name": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Context.get": {
            "name": "get",
            "location": 20,
            "return": [
                "UserContext"
            ],
            "arguments": {
                "self": [],
                "user_context": [
                    "UserContext"
                ]
            }
        },
        "Context._internal_options": {
            "name": "_internal_options",
            "location": 85,
            "return": [
                "UserContext"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/parent.py": {
        "_Parent.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "_Parent._start_process": {
            "name": "_start_process",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Parent._put": {
            "name": "_put",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "_Parent._get": {
            "name": "_get",
            "location": 40,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ],
                "is_async": [
                    "bool"
                ]
            }
        },
        "_Parent.start": {
            "name": "start",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.gather_candidates": {
            "name": "gather_candidates",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.on_init": {
            "name": "on_init",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.on_close": {
            "name": "on_close",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.init_syntax": {
            "name": "init_syntax",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "is_multi": [
                    "bool"
                ]
            }
        },
        "_Parent.filter_candidates": {
            "name": "filter_candidates",
            "location": 59,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.do_action": {
            "name": "do_action",
            "location": 62,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "_Parent.get_action": {
            "name": "get_action",
            "location": 66,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "action_name": [
                    "str"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "_Parent.get_action_names": {
            "name": "get_action_names",
            "location": 70,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "targets": [
                    "Candidates"
                ]
            }
        },
        "SyncParent._start_process": {
            "name": "_start_process",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncParent._put": {
            "name": "_put",
            "location": 80,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "SyncParent._get": {
            "name": "_get",
            "location": 83,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ],
                "is_async": [
                    "bool"
                ]
            }
        },
        "ASyncParent._start_process": {
            "name": "_start_process",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ASyncParent._put": {
            "name": "_put",
            "location": 140,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "ASyncParent._get": {
            "name": "_get",
            "location": 160,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ],
                "is_async": [
                    "bool"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/process.py": {
        "Process.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commands": [
                    "typing.List[str]"
                ],
                "context": [
                    "UserContext"
                ],
                "cwd": [
                    "str"
                ]
            }
        },
        "Process.eof": {
            "name": "eof",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.kill": {
            "name": "kill",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.enqueue_output": {
            "name": "enqueue_output",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.communicate": {
            "name": "communicate",
            "location": 67,
            "return": [
                "typing.Tuple[(typing.List[str], typing.List[str])]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/rplugin.py": {
        "Rplugin.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Rplugin.init_channel": {
            "name": "init_channel",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "Rplugin.start": {
            "name": "start",
            "location": 25,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "Rplugin.do_action": {
            "name": "do_action",
            "location": 41,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "Rplugin.do_targets": {
            "name": "do_targets",
            "location": 54,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "Rplugin.do_map": {
            "name": "do_map",
            "location": 69,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "Rplugin.get_ui": {
            "name": "get_ui",
            "location": 113,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "buffer_name": [
                    "str"
                ]
            }
        },
        "Rplugin.resume": {
            "name": "resume",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buffer_name": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/scantree.py": {
        "scantree": {
            "name": "scantree",
            "location": 19,
            "return": [
                "typing.Generator[(typing.Union[(str, PermissionError)], None, None)]"
            ],
            "arguments": {
                "path_name": [
                    "str"
                ],
                "skip_list": [
                    "SkipList"
                ],
                "types": [
                    "str"
                ]
            }
        },
        "output_lines": {
            "name": "output_lines",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "out": [
                    "typing.List[str]"
                ],
                "err": [
                    "typing.List[str]"
                ]
            }
        },
        "is_ignored": {
            "name": "is_ignored",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "ignore_list": [
                    "typing.List[str]"
                ]
            }
        },
        "output_files": {
            "name": "output_files",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "denite.nvim-master/rplugin/python3/denite/socket.py": {
        "Socket.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "port": [
                    "int"
                ],
                "commands": [
                    "typing.List[str]"
                ],
                "context": [
                    "UserContext"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "Socket.welcome": {
            "name": "welcome",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Socket.eof": {
            "name": "eof",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Socket.kill": {
            "name": "kill",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Socket.sendall": {
            "name": "sendall",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commands": [
                    "typing.List[str]"
                ]
            }
        },
        "Socket.receive": {
            "name": "receive",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "int"
                ]
            }
        },
        "Socket.connect": {
            "name": "connect",
            "location": 63,
            "return": [
                "typing.Optional[socket.socket]"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "port": [
                    "int"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "Socket.enqueue_output": {
            "name": "enqueue_output",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Socket.communicate": {
            "name": "communicate",
            "location": 102,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "int"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/util.py": {
        "set_default": {
            "name": "set_default",
            "location": 26,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "var": [
                    "str"
                ],
                "val": [
                    "typing.Any"
                ]
            }
        },
        "convert2list": {
            "name": "convert2list",
            "location": 30,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "globruntime": {
            "name": "globruntime",
            "location": 34,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "runtimepath": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "echo": {
            "name": "echo",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "color": [
                    "str"
                ],
                "string": [
                    "str"
                ]
            }
        },
        "debug": {
            "name": "debug",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "error": {
            "name": "error",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "error_tb": {
            "name": "error_tb",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "clear_cmdline": {
            "name": "clear_cmdline",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ]
            }
        },
        "escape": {
            "name": "escape",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "expr": [
                    "str"
                ]
            }
        },
        "regex_convert_str_vim": {
            "name": "regex_convert_str_vim",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "regex_convert_py_vim": {
            "name": "regex_convert_py_vim",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "expr": [
                    "str"
                ]
            }
        },
        "escape_fuzzy": {
            "name": "escape_fuzzy",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "get_custom": {
            "name": "get_custom",
            "location": 94,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "custom": [
                    "typing.Dict[(str, typing.Any)]"
                ],
                "kind": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "typing.Any"
                ]
            }
        },
        "load_external_module": {
            "name": "load_external_module",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "base": [
                    "str"
                ],
                "module": [
                    "str"
                ]
            }
        },
        "readable": {
            "name": "readable",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "Path"
                ]
            }
        },
        "split_input": {
            "name": "split_input",
            "location": 123,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "path2dir": {
            "name": "path2dir",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "path2project": {
            "name": "path2project",
            "location": 132,
            "return": [
                "str"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "path": [
                    "str"
                ],
                "root_markers": [
                    "typing.List[str]"
                ]
            }
        },
        "parse_jump_line": {
            "name": "parse_jump_line",
            "location": 138,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "path_head": [
                    "str"
                ],
                "line": [
                    "str"
                ]
            }
        },
        "expand": {
            "name": "expand",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "abspath": {
            "name": "abspath",
            "location": 168,
            "return": [
                "str"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "pathstr": [
                    "str"
                ]
            }
        },
        "relpath": {
            "name": "relpath",
            "location": 177,
            "return": [
                "str"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "convert2fuzzy_pattern": {
            "name": "convert2fuzzy_pattern",
            "location": 181,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "convert2regex_pattern": {
            "name": "convert2regex_pattern",
            "location": 190,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "parse_command": {
            "name": "parse_command",
            "location": 194,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "array": [
                    "typing.List[str]"
                ]
            }
        },
        "find_rplugins": {
            "name": "find_rplugins",
            "location": 204,
            "return": [
                "typing.Generator[(typing.Tuple[(str, str)], None, None)]"
            ],
            "arguments": {
                "context": [
                    "UserContext"
                ],
                "source": [
                    "str"
                ],
                "loaded_paths": [
                    "typing.List[str]"
                ]
            }
        },
        "import_rplugins": {
            "name": "import_rplugins",
            "location": 265,
            "return": [
                "typing.Generator[(typing.Tuple[(typing.Any, str, str)], None, None)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "context": [
                    "UserContext"
                ],
                "source": [
                    "str"
                ],
                "loaded_paths": [
                    "typing.List[str]"
                ]
            }
        },
        "parse_tagline": {
            "name": "parse_tagline",
            "location": 290,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "tagpath": [
                    "str"
                ]
            }
        },
        "clearmatch": {
            "name": "clearmatch",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ]
            }
        },
        "strwidth": {
            "name": "strwidth",
            "location": 344,
            "return": [
                "int"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "word": [
                    "str"
                ]
            }
        },
        "truncate": {
            "name": "truncate",
            "location": 350,
            "return": [
                "str"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "word": [
                    "str"
                ],
                "max_length": [
                    "int"
                ]
            }
        },
        "get_python_exe": {
            "name": "get_python_exe",
            "location": 360,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "safe_call": {
            "name": "safe_call",
            "location": 381,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "fn": [
                    "typing.Callable[(..., typing.Any)]"
                ],
                "fallback": [
                    "typing.Any"
                ]
            }
        },
        "convert2fuzzy_pattern.esc": {
            "name": "esc",
            "location": 182,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "parse_command.parse_arg": {
            "name": "parse_arg",
            "location": 196,
            "return": [
                "str"
            ],
            "arguments": {
                "arg": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/__init__.py": {
        "_denite_init": {
            "name": "_denite_init",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_denite_start": {
            "name": "_denite_start",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "Args"
                ]
            }
        },
        "_denite_do_action": {
            "name": "_denite_do_action",
            "location": 62,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "args": [
                    "Args"
                ]
            }
        },
        "_denite_do_targets": {
            "name": "_denite_do_targets",
            "location": 65,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "args": [
                    "Args"
                ]
            }
        },
        "_denite_do_map": {
            "name": "_denite_do_map",
            "location": 68,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "args": [
                    "Args"
                ]
            }
        },
        "_denite_do_async_map": {
            "name": "_denite_do_async_map",
            "location": 71,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "DeniteHandlers.init_channel": {
            "name": "init_channel",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.start": {
            "name": "start",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.do_action": {
            "name": "do_action",
            "location": 37,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.do_targets": {
            "name": "do_targets",
            "location": 41,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.do_map": {
            "name": "do_map",
            "location": 45,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        },
        "DeniteHandlers.do_async_map": {
            "name": "do_async_map",
            "location": 49,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Args"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/base/filter.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Base.filter": {
            "name": "filter",
            "location": 24,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.convert_pattern": {
            "name": "convert_pattern",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        },
        "Base.debug": {
            "name": "debug",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "str"
                ]
            }
        },
        "Base.print_message": {
            "name": "print_message",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Base.error_message": {
            "name": "error_message",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/base/kind.py": {
        "_yank": {
            "name": "_yank",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "word": [
                    "str"
                ]
            }
        },
        "_ex": {
            "name": "_ex",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "word": [
                    "str"
                ]
            }
        },
        "_paste": {
            "name": "_paste",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "word": [
                    "str"
                ],
                "command": [
                    "str"
                ],
                "regtype": [
                    "str"
                ]
            }
        },
        "Base.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Base.debug": {
            "name": "debug",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "str"
                ]
            }
        },
        "Base.action_echo": {
            "name": "action_echo",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_yank": {
            "name": "action_yank",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_ex": {
            "name": "action_ex",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_replace": {
            "name": "action_replace",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_append": {
            "name": "action_append",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_insert": {
            "name": "action_insert",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.get_action_names": {
            "name": "get_action_names",
            "location": 63,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.action_preview": {
            "name": "action_preview",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_preview_bat": {
            "name": "action_preview_bat",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.action_defx": {
            "name": "action_defx",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.preview_terminal": {
            "name": "preview_terminal",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "cmd": [
                    "typing.List[str]"
                ],
                "action_name": [
                    "str"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/base/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/base/source/interactive.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.init_grep_args": {
            "name": "init_grep_args",
            "location": 27,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/base/source/__init__.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Base.highlight": {
            "name": "highlight",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.define_syntax": {
            "name": "define_syntax",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.print_message": {
            "name": "print_message",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Base.error_message": {
            "name": "error_message",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Base.gather_candidates": {
            "name": "gather_candidates",
            "location": 52,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.debug": {
            "name": "debug",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "str"
                ]
            }
        },
        "Base.get_status": {
            "name": "get_status",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/filter/converter/abbr_word.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/expand_input.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/relative_abbr.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/relative_word.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/tail_path.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/truncate_abbr.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/converter/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/clap.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 29,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        },
        "Filter._get_clap_result": {
            "name": "_get_clap_result",
            "location": 59,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "candidates": [
                    "Candidates"
                ],
                "pattern": [
                    "str"
                ],
                "winwidth": [
                    "int"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/cpsm.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 27,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        },
        "Filter._get_cpsm_result": {
            "name": "_get_cpsm_result",
            "location": 61,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "ispath": [
                    "bool"
                ],
                "candidates": [
                    "Candidates"
                ],
                "pattern": [
                    "str"
                ],
                "bufname": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/fuzzy.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 23,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/hide_hidden_files.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 23,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/ignore_current_buffer.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/ignore_globs.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 33,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/matchfuzzy.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/project_files.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/regexp.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/substring.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.convert_pattern": {
            "name": "convert_pattern",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "input_str": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/matcher/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/oldfiles.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.on_init": {
            "name": "on_init",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 28,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/path.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/rank.py": {
        "get_score": {
            "name": "get_score",
            "location": 44,
            "return": [
                "float"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "query_chars": [
                    "str"
                ]
            }
        },
        "find_end_of_match": {
            "name": "find_end_of_match",
            "location": 64,
            "return": [
                "typing.Tuple[(typing.Optional[float], typing.Optional[int])]"
            ],
            "arguments": {
                "to_match": [
                    "str"
                ],
                "chars": [
                    "str"
                ],
                "first_index": [
                    "int"
                ]
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 28,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/reverse.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/sublime.py": {
        "get_score": {
            "name": "get_score",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "pattern": [
                    "str"
                ],
                "candidate": [
                    "Candidates"
                ]
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 40,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/word.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/filter/sorter/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/kind/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/buffer.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_open": {
            "name": "action_open",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_delete": {
            "name": "action_delete",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_preview": {
            "name": "action_preview",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind._get_preview_window": {
            "name": "_get_preview_window",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kind._winid": {
            "name": "_winid",
            "location": 62,
            "return": [
                "typing.Optional[int]"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "Candidate"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/command.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_execute": {
            "name": "action_execute",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_edit": {
            "name": "action_edit",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind._execute": {
            "name": "_execute",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "command": [
                    "str"
                ],
                "histadd": [
                    "bool"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/directory.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_cd": {
            "name": "action_cd",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_narrow": {
            "name": "action_narrow",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_open": {
            "name": "action_open",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/file.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_open": {
            "name": "action_open",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_drop": {
            "name": "action_drop",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_new": {
            "name": "action_new",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_preview": {
            "name": "action_preview",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_preview_bat": {
            "name": "action_preview_bat",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_highlight": {
            "name": "action_highlight",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_quickfix": {
            "name": "action_quickfix",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_location": {
            "name": "action_location",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind._qfloc": {
            "name": "_qfloc",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "listtype": [
                    "str"
                ]
            }
        },
        "Kind._open": {
            "name": "_open",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "command": [
                    "str"
                ]
            }
        },
        "Kind._highlight": {
            "name": "_highlight",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Kind._get_preview_window": {
            "name": "_get_preview_window",
            "location": 192,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kind._winid": {
            "name": "_winid",
            "location": 196,
            "return": [
                "typing.Optional[int]"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Kind._add_previewed_buffer": {
            "name": "_add_previewed_buffer",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bufnr": [
                    "int"
                ]
            }
        },
        "Kind._remove_previewed_buffer": {
            "name": "_remove_previewed_buffer",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bufnr": [
                    "int"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/openable.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_open": {
            "name": "action_open",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind._winid": {
            "name": "_winid",
            "location": 31,
            "return": [
                "typing.Optional[int]"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Kind.action_split": {
            "name": "action_split",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_vsplit": {
            "name": "action_vsplit",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_tabopen": {
            "name": "action_tabopen",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_switch": {
            "name": "action_switch",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_tabswitch": {
            "name": "action_tabswitch",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_splitswitch": {
            "name": "action_splitswitch",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_vsplitswitch": {
            "name": "action_vsplitswitch",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind._action_switch": {
            "name": "_action_switch",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "fallback": [
                    "Fallback"
                ]
            }
        },
        "Kind._jump": {
            "name": "_jump",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "target": [
                    "Candidate"
                ]
            }
        },
        "Kind._is_current_buffer_empty": {
            "name": "_is_current_buffer_empty",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/source.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_start": {
            "name": "action_start",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/word.py": {
        "Kind.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/kind/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/source/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/buffer.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 58,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._is_excluded": {
            "name": "_is_excluded",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "buffer_attr": [
                    "typing.Dict[(str, typing.Any)]"
                ]
            }
        },
        "Source._convert": {
            "name": "_convert",
            "location": 93,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": [],
                "buffer_attr": [
                    "typing.Dict[(str, typing.Any)]"
                ],
                "rjust": [
                    "int"
                ],
                "ljustnm": [
                    "int"
                ],
                "rjustft": [
                    "int"
                ]
            }
        },
        "Source._get_attributes": {
            "name": "_get_attributes",
            "location": 114,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "buf": [
                    "Buffer"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/change.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source._parse": {
            "name": "_parse",
            "location": 38,
            "return": [
                "typing.List[typing.Dict[(str, typing.Any)]]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 71,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/colorscheme.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.on_close": {
            "name": "on_close",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 33,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_preview": {
            "name": "action_preview",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/command.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 23,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/command_history.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 41,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._get_histories": {
            "name": "_get_histories",
            "location": 50,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source._remove_duplicate_entry": {
            "name": "_remove_duplicate_entry",
            "location": 67,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "seq": [
                    "typing.List[str]"
                ]
            }
        },
        "Source._filter_candidates": {
            "name": "_filter_candidates",
            "location": 76,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "histories": [
                    "typing.List[str]"
                ]
            }
        },
        "Source._is_ignore_command": {
            "name": "_is_ignore_command",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        },
        "Source._convert": {
            "name": "_convert",
            "location": 89,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": [],
                "history": [
                    "str"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_delete": {
            "name": "action_delete",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/directory_rec.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 36,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/filetype.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/grep.py": {
        "_candidate": {
            "name": "_candidate",
            "location": 39,
            "return": [
                "Candidate"
            ],
            "arguments": {
                "result": [
                    "typing.List[typing.Any]"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Source.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.on_close": {
            "name": "on_close",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.define_syntax": {
            "name": "define_syntax",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 118,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._async_gather_candidates": {
            "name": "_async_gather_candidates",
            "location": 143,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "timeout": [
                    "float"
                ]
            }
        },
        "Source._init_grep_args": {
            "name": "_init_grep_args",
            "location": 177,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._init_paths": {
            "name": "_init_paths",
            "location": 195,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "args": [
                    "typing.Dict[(int, str)]"
                ]
            }
        },
        "Source._init_arguments": {
            "name": "_init_arguments",
            "location": 211,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "args": [
                    "typing.Dict[(int, str)]"
                ]
            }
        },
        "Source._init_patterns": {
            "name": "_init_patterns",
            "location": 228,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "args": [
                    "typing.Dict[(int, str)]"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/help.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 24,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_open": {
            "name": "action_open",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_vsplit": {
            "name": "action_vsplit",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.action_tabopen": {
            "name": "action_tabopen",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/jump.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._get_jumplist": {
            "name": "_get_jumplist",
            "location": 43,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._parse": {
            "name": "_parse",
            "location": 89,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 156,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/mark.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source._get_marks": {
            "name": "_get_marks",
            "location": 40,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 77,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.empty_mark": {
            "name": "empty_mark",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "mark_info": [
                    "typing.List[int]"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_delete": {
            "name": "action_delete",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/menu.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.filter_candidates": {
            "name": "filter_candidates",
            "location": 37,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "candidates": [
                    "typing.Any"
                ],
                "filetype": [
                    "str"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 45,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/outline.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 80,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates_universal": {
            "name": "gather_candidates_universal",
            "location": 88,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates_legacy": {
            "name": "gather_candidates_legacy",
            "location": 149,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/output.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.define_syntax": {
            "name": "define_syntax",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 29,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.define_syntax_for_highlight": {
            "name": "define_syntax_for_highlight",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/register.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 23,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_edit": {
            "name": "action_edit",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/source.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/spell.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 28,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/tag.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 46,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._get_candidate": {
            "name": "_get_candidate",
            "location": 59,
            "return": [
                "Candidate"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ],
                "line": [
                    "str"
                ]
            }
        },
        "Source._get_tagfiles": {
            "name": "_get_tagfiles",
            "location": 88,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/_action.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.get_status": {
            "name": "get_status",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_do": {
            "name": "action_do",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/__init__.py": {},
    "denite.nvim-master/rplugin/python3/denite/source/file/old.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 28,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Kind.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Kind.action_delete": {
            "name": "action_delete",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/file/point.py": {
        "_checkhost": {
            "name": "_checkhost",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "Source.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 29,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/file/rec.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.on_close": {
            "name": "on_close",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 62,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._async_gather_candidates": {
            "name": "_async_gather_candidates",
            "location": 93,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "timeout": [
                    "float"
                ]
            }
        },
        "Source.parse_command_for_scantree": {
            "name": "parse_command_for_scantree",
            "location": 126,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "typing.List[str]"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/file/__init__.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 30,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/line/external.py": {
        "_candidate": {
            "name": "_candidate",
            "location": 22,
            "return": [
                "Candidate"
            ],
            "arguments": {
                "result": [
                    "typing.List[typing.Any]"
                ],
                "bufnr": [
                    "int"
                ],
                "fmt": [
                    "str"
                ]
            }
        },
        "Source.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.on_close": {
            "name": "on_close",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 81,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._async_gather_candidates": {
            "name": "_async_gather_candidates",
            "location": 99,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "timeout": [
                    "float"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/source/line/__init__.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_init": {
            "name": "on_init",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.highlight": {
            "name": "highlight",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 61,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._getbufline": {
            "name": "_getbufline",
            "location": 93,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "bufnr": [
                    "int"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/ui/default.py": {
        "Default.is_async": {
            "name": "is_async",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Default.start": {
            "name": "start",
            "location": 58,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "sources": [
                    "typing.List[typing.Any]"
                ],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Default.do_action": {
            "name": "do_action",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_name": [
                    "str"
                ],
                "command": [
                    "str"
                ],
                "is_manual": [
                    "bool"
                ],
                "candidates": [
                    "Candidates"
                ]
            }
        },
        "Default.redraw": {
            "name": "redraw",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_force": [
                    "bool"
                ]
            }
        },
        "Default.quit": {
            "name": "quit",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default.debug": {
            "name": "debug",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Default._restart": {
            "name": "_restart",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._start_sources_queue": {
            "name": "_start_sources_queue",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Default._start": {
            "name": "_start",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sources": [
                    "typing.List[typing.Any]"
                ],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Default._init_buffer": {
            "name": "_init_buffer",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._switch_buffer": {
            "name": "_switch_buffer",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._get_direction": {
            "name": "_get_direction",
            "location": 408,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._get_wininfo": {
            "name": "_get_wininfo",
            "location": 421,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._switch_prev_buffer": {
            "name": "_switch_prev_buffer",
            "location": 427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._init_syntax": {
            "name": "_init_syntax",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._update_candidates": {
            "name": "_update_candidates",
            "location": 464,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._update_displayed_texts": {
            "name": "_update_displayed_texts",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._update_buffer": {
            "name": "_update_buffer",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._update_status": {
            "name": "_update_status",
            "location": 586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._get_display_source_name": {
            "name": "_get_display_source_name",
            "location": 625,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Default._get_candidate_display_text": {
            "name": "_get_candidate_display_text",
            "location": 635,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int"
                ]
            }
        },
        "Default._get_max_height": {
            "name": "_get_max_height",
            "location": 650,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._resize_buffer": {
            "name": "_resize_buffer",
            "location": 656,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_current_buffer": [
                    "bool"
                ]
            }
        },
        "Default._check_do_option": {
            "name": "_check_do_option",
            "location": 722,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._check_move_option": {
            "name": "_check_move_option",
            "location": 733,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._do_immediately": {
            "name": "_do_immediately",
            "location": 745,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._do_command": {
            "name": "_do_command",
            "location": 763,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        },
        "Default._cleanup": {
            "name": "_cleanup",
            "location": 772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._close_previewing_window": {
            "name": "_close_previewing_window",
            "location": 800,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._close_current_window": {
            "name": "_close_current_window",
            "location": 809,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._quit_buffer": {
            "name": "_quit_buffer",
            "location": 815,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._get_cursor_candidate": {
            "name": "_get_cursor_candidate",
            "location": 854,
            "return": [
                "Candidate"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._get_candidate": {
            "name": "_get_candidate",
            "location": 857,
            "return": [
                "Candidate"
            ],
            "arguments": {
                "self": [],
                "pos": [
                    "int"
                ]
            }
        },
        "Default._get_selected_candidates": {
            "name": "_get_selected_candidates",
            "location": 862,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._init_denite": {
            "name": "_init_denite",
            "location": 868,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._gather_candidates": {
            "name": "_gather_candidates",
            "location": 876,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._init_cursor": {
            "name": "_init_cursor",
            "location": 881,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._move_to_pos": {
            "name": "_move_to_pos",
            "location": 887,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos": [
                    "int"
                ]
            }
        },
        "Default._move_to_next_line": {
            "name": "_move_to_next_line",
            "location": 894,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._move_to_prev_line": {
            "name": "_move_to_prev_line",
            "location": 898,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._move_to_first_line": {
            "name": "_move_to_first_line",
            "location": 902,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._move_to_last_line": {
            "name": "_move_to_last_line",
            "location": 905,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Default._start_timer": {
            "name": "_start_timer",
            "location": 908,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "Default._split_floating": {
            "name": "_split_floating",
            "location": 916,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split": [
                    "str"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/ui/map.py": {
        "do_map": {
            "name": "do_map",
            "location": 18,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "name": [
                    "str"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_auto_action": {
            "name": "_auto_action",
            "location": 24,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_change_path": {
            "name": "_change_path",
            "location": 30,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_change_sorters": {
            "name": "_change_sorters",
            "location": 37,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_choose_action": {
            "name": "_choose_action",
            "location": 47,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_do_action": {
            "name": "_do_action",
            "location": 72,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_do_previous_action": {
            "name": "_do_previous_action",
            "location": 77,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_filter": {
            "name": "_filter",
            "location": 81,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_filter_async": {
            "name": "_filter_async",
            "location": 94,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_move_up_path": {
            "name": "_move_up_path",
            "location": 110,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_nop": {
            "name": "_nop",
            "location": 115,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_open_filter_buffer": {
            "name": "_open_filter_buffer",
            "location": 119,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_print_messages": {
            "name": "_print_messages",
            "location": 125,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_quick_move": {
            "name": "_quick_move",
            "location": 131,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_quit": {
            "name": "_quit",
            "location": 197,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_redraw": {
            "name": "_redraw",
            "location": 207,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_restart": {
            "name": "_restart",
            "location": 211,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_restore_sources": {
            "name": "_restore_sources",
            "location": 215,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_toggle_auto_action": {
            "name": "_toggle_auto_action",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_toggle_matchers": {
            "name": "_toggle_matchers",
            "location": 252,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_toggle_select": {
            "name": "_toggle_select",
            "location": 262,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_toggle_select_candidate": {
            "name": "_toggle_select_candidate",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "_toggle_select_all": {
            "name": "_toggle_select_all",
            "location": 276,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_update_buffer": {
            "name": "_update_buffer",
            "location": 283,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_update_candidates": {
            "name": "_update_candidates",
            "location": 293,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "denite": [
                    "Default"
                ],
                "params": [
                    "Params"
                ]
            }
        },
        "_quick_move.get_quick_move_table": {
            "name": "get_quick_move_table",
            "location": 135,
            "return": [
                "typing.Dict[(str, int)]"
            ],
            "arguments": {}
        },
        "_quick_move.quick_move_redraw": {
            "name": "quick_move_redraw",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "table": [
                    "typing.Dict[(str, int)]"
                ],
                "is_define": [
                    "bool"
                ]
            }
        }
    },
    "denite.nvim-master/rplugin/python3/denite/ui/__init__.py": {},
    "denite.nvim-master/rplugin/python3/deoplete/source/denite.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "vim": []
            }
        },
        "Source.get_complete_position": {
            "name": "get_complete_position",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        }
    },
    "denite.nvim-master/test/conftest.py": {},
    "denite.nvim-master/test/rplugin/python3/denite/test_util.py": {
        "test_convert2fuzzy_pattern": {
            "name": "test_convert2fuzzy_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_split_input": {
            "name": "test_split_input",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_convert2regex_pattern": {
            "name": "test_convert2regex_pattern",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_regex_convert_py_vim": {
            "name": "test_regex_convert_py_vim",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_regex_convert_str_vim": {
            "name": "test_regex_convert_str_vim",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_parse_jump_line": {
            "name": "test_parse_jump_line",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_parse_tag_line": {
            "name": "test_parse_tag_line",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_find_rplugins_kind": {
            "name": "test_find_rplugins_kind",
            "location": 90,
            "return": [],
            "arguments": {
                "walk": []
            }
        },
        "_walk_side_effect": {
            "name": "_walk_side_effect",
            "location": 135,
            "return": [],
            "arguments": {
                "top": [],
                "topdown": [],
                "onerror": [],
                "followlinks": []
            }
        }
    }
}
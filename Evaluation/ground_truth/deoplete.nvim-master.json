{
    "deoplete.nvim-master/autoload/deoplete/_main.py": {
        "attach_vim": {
            "name": "attach_vim",
            "location": 17,
            "return": [],
            "arguments": {
                "serveraddr": []
            }
        },
        "main": {
            "name": "main",
            "location": 47,
            "return": [],
            "arguments": {
                "serveraddr": []
            }
        },
        "RedirectStream.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "handler": []
            }
        },
        "RedirectStream.write": {
            "name": "write",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "RedirectStream.writelines": {
            "name": "writelines",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/child.py": {
        "Child.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Child.main_loop": {
            "name": "main_loop",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stdout": [
                    "typing.Any"
                ]
            }
        },
        "Child.main": {
            "name": "main",
            "location": 77,
            "return": [
                "typing.Optional[typing.Dict[(str, typing.Any)]]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ],
                "queue_id": [
                    "typing.Optional[int]"
                ]
            }
        },
        "Child._write": {
            "name": "_write",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stdout": [
                    "typing.Any"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Child._enable_logging": {
            "name": "_enable_logging",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Child._add_source": {
            "name": "_add_source",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Child._add_filter": {
            "name": "_add_filter",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Child._merge_results": {
            "name": "_merge_results",
            "location": 167,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "queue_id": [
                    "typing.Optional[int]"
                ]
            }
        },
        "Child._gather_results": {
            "name": "_gather_results",
            "location": 195,
            "return": [
                "typing.List[Result]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._get_result": {
            "name": "_get_result",
            "location": 213,
            "return": [
                "Result"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "source": [
                    "typing.Any"
                ]
            }
        },
        "Child._gather_async_results": {
            "name": "_gather_async_results",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "Result"
                ],
                "source": [
                    "typing.Any"
                ]
            }
        },
        "Child._set_context_case": {
            "name": "_set_context_case",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "typing.Any"
                ],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._handle_source_exception": {
            "name": "_handle_source_exception",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "typing.Any"
                ],
                "exc": [
                    "Exception"
                ]
            }
        },
        "Child._process_filter": {
            "name": "_process_filter",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "typing.Any"
                ],
                "context": [
                    "UserContext"
                ],
                "max_candidates": [
                    "int"
                ]
            }
        },
        "Child._get_candidates": {
            "name": "_get_candidates",
            "location": 358,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "Result"
                ],
                "context_input": [
                    "str"
                ],
                "next_input": [
                    "str"
                ]
            }
        },
        "Child._itersource": {
            "name": "_itersource",
            "location": 462,
            "return": [
                "typing.Generator[(typing.Any, None, None)]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._profile_start": {
            "name": "_profile_start",
            "location": 500,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "Child._profile_end": {
            "name": "_profile_end",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Child._use_previous_result": {
            "name": "_use_previous_result",
            "location": 521,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "result": [
                    "Result"
                ],
                "is_volatile": [
                    "bool"
                ],
                "is_async": [
                    "bool"
                ]
            }
        },
        "Child._is_skip": {
            "name": "_is_skip",
            "location": 539,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "source": [
                    "typing.Any"
                ]
            }
        },
        "Child._set_source_attributes": {
            "name": "_set_source_attributes",
            "location": 561,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._on_event": {
            "name": "_on_event",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Child._get_sources": {
            "name": "_get_sources",
            "location": 634,
            "return": [
                "typing.Dict[(str, typing.Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Context.get": {
            "name": "get",
            "location": 28,
            "return": [
                "UserContext"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "Context._init_cached_filetype": {
            "name": "_init_cached_filetype",
            "location": 64,
            "return": [
                "UserContext"
            ],
            "arguments": {
                "self": [],
                "filetype": [
                    "str"
                ]
            }
        },
        "Context._init_cached": {
            "name": "_init_cached",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context._get_context_filetype": {
            "name": "_get_context_filetype",
            "location": 100,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "event": [
                    "str"
                ],
                "filetype": [
                    "str"
                ]
            }
        },
        "Context._cache_context_filetype": {
            "name": "_cache_context_filetype",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "filetype": [
                    "str"
                ],
                "linenr": [
                    "int"
                ],
                "bufnr": [
                    "int"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/deoplete.py": {
        "Deoplete.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Deoplete.enable_logging": {
            "name": "enable_logging",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deoplete.init_context": {
            "name": "init_context",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deoplete.completion_begin": {
            "name": "completion_begin",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete.on_event": {
            "name": "on_event",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._get_results": {
            "name": "_get_results",
            "location": 155,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._merge_results": {
            "name": "_merge_results",
            "location": 173,
            "return": [
                "typing.Tuple[(bool, bool, int, typing.List[typing.Any])]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._add_parent": {
            "name": "_add_parent",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent_cls": [
                    "typing.Callable[([Nvim], Parent)]"
                ]
            }
        },
        "Deoplete._find_rplugins": {
            "name": "_find_rplugins",
            "location": 235,
            "return": [
                "typing.List[Path]"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "Deoplete._load_sources": {
            "name": "_load_sources",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._load_filters": {
            "name": "_load_filters",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._set_source_attributes": {
            "name": "_set_source_attributes",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Deoplete._check_recache": {
            "name": "_check_recache",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/exceptions.py": {},
    "deoplete.nvim-master/rplugin/python3/deoplete/logger.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 25,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "level": [
                    "str"
                ],
                "output_file": [
                    "str"
                ]
            }
        },
        "logmethod": {
            "name": "logmethod",
            "location": 64,
            "return": [
                "typing.Callable[([FUNC], FUNC)]"
            ],
            "arguments": {
                "func": [
                    "FUNC"
                ]
            }
        },
        "logmethod.wrapper": {
            "name": "wrapper",
            "location": 72,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggingMixin.debug": {
            "name": "debug",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "LoggingMixin.info": {
            "name": "info",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "LoggingMixin.warning": {
            "name": "warning",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "LoggingMixin.error": {
            "name": "error",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "LoggingMixin.exception": {
            "name": "exception",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "LoggingMixin.critical": {
            "name": "critical",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "DeopleteLogFilter.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "DeopleteLogFilter.filter": {
            "name": "filter",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "logging.LogRecord"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/parent.py": {
        "_Parent.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "_Parent.enable_logging": {
            "name": "enable_logging",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Parent.add_source": {
            "name": "add_source",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "_Parent.add_filter": {
            "name": "add_filter",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "_Parent.set_source_attributes": {
            "name": "set_source_attributes",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent.set_custom": {
            "name": "set_custom",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "custom": [
                    "typing.Any"
                ]
            }
        },
        "_Parent.on_event": {
            "name": "on_event",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "_Parent._start_process": {
            "name": "_start_process",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Parent._put": {
            "name": "_put",
            "location": 62,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "SyncParent._start_process": {
            "name": "_start_process",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncParent.merge_results": {
            "name": "merge_results",
            "location": 72,
            "return": [
                "typing.Tuple[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "SyncParent._put": {
            "name": "_put",
            "location": 79,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "AsyncParent._get_python_executable": {
            "name": "_get_python_executable",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncParent._start_process": {
            "name": "_start_process",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncParent._print_error": {
            "name": "_print_error",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ]
            }
        },
        "AsyncParent._connect_stdin": {
            "name": "_connect_stdin",
            "location": 153,
            "return": [
                "msgpack.Unpacker"
            ],
            "arguments": {
                "self": [],
                "stdin": [
                    "int"
                ]
            }
        },
        "AsyncParent.merge_results": {
            "name": "merge_results",
            "location": 157,
            "return": [
                "typing.Tuple[(typing.Any, ...)]"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "AsyncParent._put": {
            "name": "_put",
            "location": 181,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "AsyncParent._get": {
            "name": "_get",
            "location": 203,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "queue_id": [
                    "str"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/process.py": {
        "Process.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "plugin": [
                    "typing.Any"
                ]
            }
        },
        "Process.connection_made": {
            "name": "connection_made",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "typing.Any"
                ]
            }
        },
        "Process.pipe_data_received": {
            "name": "pipe_data_received",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fd": [
                    "int"
                ],
                "data": [
                    "typing.Any"
                ]
            }
        },
        "Process.process_exited": {
            "name": "process_exited",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/util.py": {
        "set_pattern": {
            "name": "set_pattern",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "variable": [
                    "typing.Dict[(str, str)]"
                ],
                "keys": [
                    "str"
                ],
                "pattern": [
                    "typing.Any"
                ]
            }
        },
        "convert2list": {
            "name": "convert2list",
            "location": 30,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "convert2candidates": {
            "name": "convert2candidates",
            "location": 34,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "li": [
                    "typing.Any"
                ]
            }
        },
        "globruntime": {
            "name": "globruntime",
            "location": 47,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "runtimepath": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "import_plugin": {
            "name": "import_plugin",
            "location": 54,
            "return": [
                "typing.Optional[typing.Any]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "source": [
                    "str"
                ],
                "classname": [
                    "str"
                ]
            }
        },
        "debug": {
            "name": "debug",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "error": {
            "name": "error",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "error_tb": {
            "name": "error_tb",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "error_vim": {
            "name": "error_vim",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "escape": {
            "name": "escape",
            "location": 115,
            "return": [
                "str"
            ],
            "arguments": {
                "expr": [
                    "str"
                ]
            }
        },
        "charpos2bytepos": {
            "name": "charpos2bytepos",
            "location": 119,
            "return": [
                "int"
            ],
            "arguments": {
                "encoding": [
                    "str"
                ],
                "text": [
                    "str"
                ],
                "pos": [
                    "int"
                ]
            }
        },
        "bytepos2charpos": {
            "name": "bytepos2charpos",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "encoding": [
                    "str"
                ],
                "text": [
                    "str"
                ],
                "pos": [
                    "int"
                ]
            }
        },
        "get_custom": {
            "name": "get_custom",
            "location": 128,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "custom": [
                    "typing.Dict[(str, typing.Any)]"
                ],
                "source_name": [
                    "str"
                ],
                "key": [
                    "str"
                ],
                "default": [
                    "typing.Any"
                ]
            }
        },
        "get_syn_names": {
            "name": "get_syn_names",
            "location": 142,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ]
            }
        },
        "parse_file_pattern": {
            "name": "parse_file_pattern",
            "location": 146,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "f": [
                    "typing.Iterable[str]"
                ],
                "pattern": [
                    "str"
                ]
            }
        },
        "parse_buffer_pattern": {
            "name": "parse_buffer_pattern",
            "location": 155,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "b": [
                    "Buffer"
                ],
                "pattern": [
                    "str"
                ]
            }
        },
        "fuzzy_escape": {
            "name": "fuzzy_escape",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "camelcase": [
                    "bool"
                ]
            }
        },
        "load_external_module": {
            "name": "load_external_module",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "base": [
                    "str"
                ],
                "module": [
                    "str"
                ]
            }
        },
        "truncate_skipping": {
            "name": "truncate_skipping",
            "location": 176,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "max_width": [
                    "int"
                ],
                "footer": [
                    "str"
                ],
                "footer_len": [
                    "int"
                ]
            }
        },
        "truncate": {
            "name": "truncate",
            "location": 190,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "max_width": [
                    "int"
                ]
            }
        },
        "strwidth": {
            "name": "strwidth",
            "location": 207,
            "return": [
                "int"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "charwidth": {
            "name": "charwidth",
            "location": 214,
            "return": [
                "int"
            ],
            "arguments": {
                "c": [
                    "str"
                ]
            }
        },
        "expand": {
            "name": "expand",
            "location": 219,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "exists_path": {
            "name": "exists_path",
            "location": 228,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "getlines": {
            "name": "getlines",
            "location": 236,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "vim": [
                    "Nvim"
                ],
                "start": [
                    "int"
                ],
                "end": [
                    "typing.Union[(int, str)]"
                ]
            }
        },
        "binary_search_begin": {
            "name": "binary_search_begin",
            "location": 251,
            "return": [
                "int"
            ],
            "arguments": {
                "li": [
                    "typing.List[Candidates]"
                ],
                "prefix": [
                    "str"
                ]
            }
        },
        "binary_search_end": {
            "name": "binary_search_end",
            "location": 278,
            "return": [
                "int"
            ],
            "arguments": {
                "li": [
                    "typing.List[Candidates]"
                ],
                "prefix": [
                    "str"
                ]
            }
        },
        "uniq_list_dict": {
            "name": "uniq_list_dict",
            "location": 305,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "li": [
                    "typing.List[typing.Any]"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/__init__.py": {
        "deoplete_init": {
            "name": "deoplete_init",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "deoplete_enable_logging": {
            "name": "deoplete_enable_logging",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "Context"
                ]
            }
        },
        "deoplete_auto_completion_begin": {
            "name": "deoplete_auto_completion_begin",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "Context"
                ]
            }
        },
        "deoplete_manual_completion_begin": {
            "name": "deoplete_manual_completion_begin",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "Context"
                ]
            }
        },
        "deoplete_on_event": {
            "name": "deoplete_on_event",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "Context"
                ]
            }
        },
        "DeopleteHandlers.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "_vim": [
                    "Nvim"
                ]
            }
        },
        "DeopleteHandlers.init_channel": {
            "name": "init_channel",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "typing.List[typing.Any]"
                ]
            }
        },
        "DeopleteHandlers.enable_logging": {
            "name": "enable_logging",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "Context"
                ]
            }
        },
        "DeopleteHandlers.auto_completion_begin": {
            "name": "auto_completion_begin",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "Context"
                ]
            }
        },
        "DeopleteHandlers.manual_completion_begin": {
            "name": "manual_completion_begin",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "Context"
                ]
            }
        },
        "DeopleteHandlers.on_event": {
            "name": "on_event",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "Context"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/base/filter.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Base.on_event": {
            "name": "on_event",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.get_var": {
            "name": "get_var",
            "location": 26,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "var_name": [
                    "str"
                ]
            }
        },
        "Base.filter": {
            "name": "filter",
            "location": 36,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.print_error": {
            "name": "print_error",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "typing.Any"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/base/source.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Base.get_complete_position": {
            "name": "get_complete_position",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.print": {
            "name": "print",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Base.print_error": {
            "name": "print_error",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": [
                    "typing.Any"
                ]
            }
        },
        "Base.gather_candidates": {
            "name": "gather_candidates",
            "location": 73,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.on_event": {
            "name": "on_event",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Base.get_var": {
            "name": "get_var",
            "location": 79,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "var_name": [
                    "str"
                ]
            }
        },
        "Base.get_filetype_var": {
            "name": "get_filetype_var",
            "location": 88,
            "return": [
                "typing.Optional[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "filetype": [
                    "str"
                ],
                "var_name": [
                    "str"
                ]
            }
        },
        "Base.get_input_pattern": {
            "name": "get_input_pattern",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "filetype": [
                    "str"
                ]
            }
        },
        "Base.get_buf_option": {
            "name": "get_buf_option",
            "location": 103,
            "return": [
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "option": [
                    "str"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/base/__init__.py": {},
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_auto_delimiter.py": {
        "last_find": {
            "name": "last_find",
            "location": 36,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "s": [
                    "str"
                ],
                "needles": [
                    "typing.List[str]"
                ]
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 24,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_auto_paren.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_case.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_remove_overlap.py": {
        "overlap_length": {
            "name": "overlap_length",
            "location": 56,
            "return": [
                "int"
            ],
            "arguments": {
                "left": [
                    "str"
                ],
                "next_input_words": [
                    "typing.List[str]"
                ]
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_remove_paren.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_reorder_attr.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter_attrs": {
            "name": "filter_attrs",
            "location": 26,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "candidates": [
                    "Candidates"
                ],
                "preferred_order_attrs": [
                    "typing.Dict[(str, typing.Any)]"
                ],
                "max_list_size": [
                    "int"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 66,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_truncate_abbr.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 20,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_truncate_info.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 20,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_truncate_kind.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 20,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_truncate_menu.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 20,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/converter_word_abbr.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 20,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_cpsm.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 27,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter._init_cpsm": {
            "name": "_init_cpsm",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter._get_cpsm_result": {
            "name": "_get_cpsm_result",
            "location": 73,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "candidates": [
                    "Candidates"
                ],
                "pattern": [
                    "str"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_fuzzy.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 23,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_head.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 22,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_length.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/matcher_matchfuzzy.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/sorter_rank.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.on_event": {
            "name": "on_event",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 40,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Filter.filter.compare": {
            "name": "compare",
            "location": 45,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "Candidate"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/sorter_word.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/filter/__init__.py": {},
    "deoplete.nvim-master/rplugin/python3/deoplete/source/around.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 33,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/buffer.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_event": {
            "name": "on_event",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 41,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._make_cache": {
            "name": "_make_cache",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/file.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.on_event": {
            "name": "on_event",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.get_complete_position": {
            "name": "get_complete_position",
            "location": 40,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 51,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._longest_path_that_exists": {
            "name": "_longest_path_that_exists",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "input_str": [
                    "str"
                ],
                "bufpath": [
                    "str"
                ]
            }
        },
        "Source._substitute_path": {
            "name": "_substitute_path",
            "location": 109,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "path": [
                    "str"
                ],
                "bufpath": [
                    "str"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/member.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.get_complete_position": {
            "name": "get_complete_position",
            "location": 46,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 61,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/omni.py": {
        "Source.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "Nvim"
                ]
            }
        },
        "Source.get_complete_position": {
            "name": "get_complete_position",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        },
        "Source._get_complete_position": {
            "name": "_get_complete_position",
            "location": 46,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ],
                "current_ft": [
                    "str"
                ],
                "filetype": [
                    "str"
                ]
            }
        },
        "Source.gather_candidates": {
            "name": "gather_candidates",
            "location": 86,
            "return": [
                "Candidates"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "UserContext"
                ]
            }
        }
    },
    "deoplete.nvim-master/rplugin/python3/deoplete/source/__init__.py": {},
    "deoplete.nvim-master/test/conftest.py": {},
    "deoplete.nvim-master/test/rplugin/python3/deoplete/test_converter_reorder_attr.py": {
        "test_reorder": {
            "name": "test_reorder",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_filter": {
            "name": "test_filter",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "deoplete.nvim-master/test/rplugin/python3/deoplete/test_filter.py": {
        "test_fuzzy_escapse": {
            "name": "test_fuzzy_escapse",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_overlap_length": {
            "name": "test_overlap_length",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_charwidth": {
            "name": "test_charwidth",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_strwidth": {
            "name": "test_strwidth",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_truncate": {
            "name": "test_truncate",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_skipping": {
            "name": "test_skipping",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "deoplete.nvim-master/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py": {
        "test_matcher_full_fuzzy": {
            "name": "test_matcher_full_fuzzy",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "deoplete.nvim-master/test/rplugin/python3/deoplete/test_matcher_fuzzy.py": {
        "_ctx": {
            "name": "_ctx",
            "location": 4,
            "return": [],
            "arguments": {
                "complete_str": [],
                "ignorecase": [],
                "camelcase": []
            }
        },
        "test_matcher_fuzzy": {
            "name": "test_matcher_fuzzy",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "deoplete.nvim-master/test/rplugin/python3/deoplete/test_util.py": {
        "test_pos": {
            "name": "test_pos",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_custom": {
            "name": "test_custom",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_globruntime": {
            "name": "test_globruntime",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_binary_search": {
            "name": "test_binary_search",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_uniq_list_dict": {
            "name": "test_uniq_list_dict",
            "location": 59,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "django-structlog-master/manage.py": {},
    "django-structlog-master/setup.py": {},
    "django-structlog-master/config/urls.py": {
        "uncaught_exception_view": {
            "name": "uncaught_exception_view",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "django-structlog-master/config/wsgi.py": {},
    "django-structlog-master/config/__init__.py": {},
    "django-structlog-master/config/settings/base.py": {},
    "django-structlog-master/config/settings/local.py": {},
    "django-structlog-master/config/settings/test.py": {},
    "django-structlog-master/config/settings/test_demo_app.py": {},
    "django-structlog-master/config/settings/__init__.py": {},
    "django-structlog-master/django_structlog/apps.py": {},
    "django-structlog-master/django_structlog/processors.py": {
        "inject_context_dict": {
            "name": "inject_context_dict",
            "location": 4,
            "return": [],
            "arguments": {
                "_": [],
                "__": [],
                "event_dict": []
            }
        }
    },
    "django-structlog-master/django_structlog/signals.py": {},
    "django-structlog-master/django_structlog/__init__.py": {},
    "django-structlog-master/django_structlog/celery/middlewares.py": {
        "CeleryMiddleware.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "CeleryMiddleware.__call__": {
            "name": "__call__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "django-structlog-master/django_structlog/celery/receivers.py": {
        "receiver_before_task_publish": {
            "name": "receiver_before_task_publish",
            "location": 9,
            "return": [],
            "arguments": {
                "sender": [],
                "headers": [],
                "body": []
            }
        },
        "receiver_after_task_publish": {
            "name": "receiver_after_task_publish",
            "location": 28,
            "return": [],
            "arguments": {
                "sender": [],
                "headers": [],
                "body": []
            }
        },
        "receiver_task_pre_run": {
            "name": "receiver_task_pre_run",
            "location": 36,
            "return": [],
            "arguments": {
                "task_id": [],
                "task": []
            }
        },
        "receiver_task_retry": {
            "name": "receiver_task_retry",
            "location": 46,
            "return": [],
            "arguments": {
                "request": [],
                "reason": [],
                "einfo": []
            }
        },
        "receiver_task_success": {
            "name": "receiver_task_success",
            "location": 50,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "receiver_task_failure": {
            "name": "receiver_task_failure",
            "location": 58,
            "return": [],
            "arguments": {
                "task_id": [],
                "exception": [],
                "traceback": [],
                "einfo": [],
                "sender": []
            }
        },
        "receiver_task_revoked": {
            "name": "receiver_task_revoked",
            "location": 81,
            "return": [],
            "arguments": {
                "request": [],
                "terminated": [],
                "signum": [],
                "expired": []
            }
        },
        "receiver_task_unknown": {
            "name": "receiver_task_unknown",
            "location": 89,
            "return": [],
            "arguments": {
                "message": [],
                "exc": [],
                "name": [],
                "id": []
            }
        },
        "receiver_task_rejected": {
            "name": "receiver_task_rejected",
            "location": 93,
            "return": [],
            "arguments": {
                "message": [],
                "exc": []
            }
        }
    },
    "django-structlog-master/django_structlog/celery/signals.py": {},
    "django-structlog-master/django_structlog/celery/steps.py": {
        "DjangoStructLogInitStep.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "django-structlog-master/django_structlog/celery/__init__.py": {},
    "django-structlog-master/django_structlog/middlewares/request.py": {
        "get_request_header": {
            "name": "get_request_header",
            "location": 12,
            "return": [],
            "arguments": {
                "request": [],
                "header_key": [],
                "meta_key": []
            }
        },
        "RequestMiddleware.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "RequestMiddleware.__call__": {
            "name": "__call__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RequestMiddleware.format_request": {
            "name": "format_request",
            "location": 80,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "RequestMiddleware.process_exception": {
            "name": "process_exception",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "exception": []
            }
        },
        "RequestMiddleware.bind_user_id": {
            "name": "bind_user_id",
            "location": 106,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "django-structlog-master/django_structlog/middlewares/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "django-structlog-master/django_structlog_demo_project/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/contrib/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/contrib/sites/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/contrib/sites/migrations/0001_initial.py": {},
    "django-structlog-master/django_structlog_demo_project/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "django-structlog-master/django_structlog_demo_project/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/contrib/sites/migrations/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/home/api_views.py": {
        "home_api_view": {
            "name": "home_api_view",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/home/views.py": {
        "enqueue_successful_task": {
            "name": "enqueue_successful_task",
            "location": 14,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "enqueue_failing_task": {
            "name": "enqueue_failing_task",
            "location": 20,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "enqueue_nesting_task": {
            "name": "enqueue_nesting_task",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "log_with_standard_logger": {
            "name": "log_with_standard_logger",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "raise_exception": {
            "name": "raise_exception",
            "location": 37,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/home/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/home/tests/test_api_views.py": {
        "TestApiView.test": {
            "name": "test",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "caplog": [],
                "request_factory": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/home/tests/test_views.py": {
        "TestEnqueueSuccessfulTask.test": {
            "name": "test",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEnqueueFailingTask.test": {
            "name": "test",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEnqueueNestingTask.test": {
            "name": "test",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRaiseException.test": {
            "name": "test",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLogWithStandardLogger.test": {
            "name": "test",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/home/tests/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/taskapp/celery.py": {
        "receiver_setup_logging": {
            "name": "receiver_setup_logging",
            "location": 28,
            "return": [],
            "arguments": {
                "loglevel": [],
                "logfile": [],
                "format": [],
                "colorize": []
            }
        },
        "debug_task": {
            "name": "debug_task",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "successful_task": {
            "name": "successful_task",
            "location": 68,
            "return": [],
            "arguments": {
                "foo": []
            }
        },
        "failing_task": {
            "name": "failing_task",
            "location": 76,
            "return": [],
            "arguments": {
                "foo": []
            }
        },
        "nesting_task": {
            "name": "nesting_task",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "nested_task": {
            "name": "nested_task",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "CeleryAppConfig.ready": {
            "name": "ready",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/taskapp/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/taskapp/tests/test_celery.py": {
        "TestSuccessfulTask.test": {
            "name": "test",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "caplog": []
            }
        },
        "TestFailingTask.test": {
            "name": "test",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNestingTask.test": {
            "name": "test",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "caplog": []
            }
        },
        "TestNestedTask.test": {
            "name": "test",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "caplog": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/taskapp/tests/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ],
                "sociallogin": [
                    "Any"
                ]
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/admin.py": {},
    "django-structlog-master/django_structlog_demo_project/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/urls.py": {},
    "django-structlog-master/django_structlog_demo_project/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/users/migrations/0001_initial.py": {},
    "django-structlog-master/django_structlog_demo_project/users/migrations/__init__.py": {},
    "django-structlog-master/django_structlog_demo_project/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [
                    "bool"
                ],
                "extracted": [
                    "Sequence[Any]"
                ]
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/test_adapters.py": {
        "TestUserCreationForm.test_account_adapter": {
            "name": "test_account_adapter",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserCreationForm.test_social_account_adapter": {
            "name": "test_social_account_adapter",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        }
    },
    "django-structlog-master/django_structlog_demo_project/users/tests/__init__.py": {},
    "django-structlog-master/docs/conf.py": {
        "get_version": {
            "name": "get_version",
            "location": 48,
            "return": [],
            "arguments": {
                "precision": []
            }
        }
    },
    "django-structlog-master/test_app/apps.py": {},
    "django-structlog-master/test_app/__init__.py": {},
    "django-structlog-master/test_app/migrations/__init__.py": {},
    "django-structlog-master/test_app/tests/test_processors.py": {
        "TestInjectContextDict.test": {
            "name": "test",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/test_app/tests/__init__.py": {},
    "django-structlog-master/test_app/tests/celery/test_receivers.py": {
        "TestReceivers.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_defer_task": {
            "name": "test_defer_task",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_before_task_publish_celery_4": {
            "name": "test_receiver_before_task_publish_celery_4",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_before_task_publish_celery_3": {
            "name": "test_receiver_before_task_publish_celery_3",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_signal_modify_context_before_task_publish_celery_4": {
            "name": "test_signal_modify_context_before_task_publish_celery_4",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_signal_modify_context_before_task_publish_celery_3": {
            "name": "test_signal_modify_context_before_task_publish_celery_3",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_after_task_publish": {
            "name": "test_receiver_after_task_publish",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_after_task_publish_celery_3": {
            "name": "test_receiver_after_task_publish_celery_3",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_pre_run": {
            "name": "test_receiver_task_pre_run",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_signal_bind_extra_task_metadata": {
            "name": "test_signal_bind_extra_task_metadata",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_retry": {
            "name": "test_receiver_task_retry",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_success": {
            "name": "test_receiver_task_success",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_failure": {
            "name": "test_receiver_task_failure",
            "location": 309,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_failure_with_throws": {
            "name": "test_receiver_task_failure_with_throws",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_revoked": {
            "name": "test_receiver_task_revoked",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_unknown": {
            "name": "test_receiver_task_unknown",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_receiver_task_rejected": {
            "name": "test_receiver_task_rejected",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.tearDown": {
            "name": "tearDown",
            "location": 393,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReceivers.test_defer_task.test_task": {
            "name": "test_task",
            "location": 26,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "TestReceivers.test_signal_modify_context_before_task_publish_celery_4.receiver_modify_context_before_task_publish": {
            "name": "receiver_modify_context_before_task_publish",
            "location": 110,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "context": []
            }
        },
        "TestReceivers.test_signal_modify_context_before_task_publish_celery_3.receiver_modify_context_before_task_publish": {
            "name": "receiver_modify_context_before_task_publish",
            "location": 147,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "context": []
            }
        },
        "TestReceivers.test_signal_bind_extra_task_metadata.receiver_bind_extra_request_metadata": {
            "name": "receiver_bind_extra_request_metadata",
            "location": 248,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "task": [],
                "logger": []
            }
        },
        "TestReceivers.test_receiver_task_success.receiver_pre_task_succeeded": {
            "name": "receiver_pre_task_succeeded",
            "location": 292,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "task": [],
                "logger": [],
                "result": []
            }
        }
    },
    "django-structlog-master/test_app/tests/celery/test_steps.py": {
        "TestDjangoStructLogInitStep.test_call": {
            "name": "test_call",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/test_app/tests/celery/__init__.py": {},
    "django-structlog-master/test_app/tests/middlewares/test_celery.py": {
        "TestCeleryMiddleware.test_call": {
            "name": "test_call",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-structlog-master/test_app/tests/middlewares/test_request.py": {
        "TestRequestMiddleware.setUp": {
            "name": "setUp",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_without_user": {
            "name": "test_process_request_without_user",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_with_null_user": {
            "name": "test_process_request_with_null_user",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_anonymous": {
            "name": "test_process_request_anonymous",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_user": {
            "name": "test_process_request_user",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_user_uuid": {
            "name": "test_process_request_user_uuid",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_log_user_in_request_finished": {
            "name": "test_log_user_in_request_finished",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_log_user_in_request_finished_with_exception": {
            "name": "test_log_user_in_request_finished_with_exception",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_metadata": {
            "name": "test_signal_bind_extra_request_metadata",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_finished_metadata": {
            "name": "test_signal_bind_extra_request_finished_metadata",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_failed_metadata": {
            "name": "test_signal_bind_extra_request_failed_metadata",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_error": {
            "name": "test_process_request_error",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_403_are_processed_as_regular_requests": {
            "name": "test_process_request_403_are_processed_as_regular_requests",
            "location": 457,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_404_are_processed_as_regular_requests": {
            "name": "test_process_request_404_are_processed_as_regular_requests",
            "location": 506,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_should_log_request_id_from_request_x_request_id_header": {
            "name": "test_should_log_request_id_from_request_x_request_id_header",
            "location": 555,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_should_log_correlation_id_from_request_x_correlation_id_header": {
            "name": "test_should_log_correlation_id_from_request_x_correlation_id_header",
            "location": 579,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.tearDown": {
            "name": "tearDown",
            "location": 603,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetRequestHeader.test_django_22_or_higher": {
            "name": "test_django_22_or_higher",
            "location": 608,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetRequestHeader.test_django_prior_to_22": {
            "name": "test_django_prior_to_22",
            "location": 613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequestMiddleware.test_process_request_without_user.get_response": {
            "name": "get_response",
            "location": 35,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_with_null_user.get_response": {
            "name": "get_response",
            "location": 65,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_anonymous.get_response": {
            "name": "get_response",
            "location": 96,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_user.get_response": {
            "name": "get_response",
            "location": 129,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_user_uuid.get_response": {
            "name": "get_response",
            "location": 165,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_log_user_in_request_finished.get_response": {
            "name": "get_response",
            "location": 197,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_log_user_in_request_finished_with_exception.get_response": {
            "name": "get_response",
            "location": 237,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_metadata.receiver_bind_extra_request_metadata": {
            "name": "receiver_bind_extra_request_metadata",
            "location": 275,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "request": [],
                "logger": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_metadata.get_response": {
            "name": "get_response",
            "location": 283,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_finished_metadata.receiver_bind_extra_request_metadata": {
            "name": "receiver_bind_extra_request_metadata",
            "location": 311,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "request": [],
                "logger": [],
                "response": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_finished_metadata.get_response": {
            "name": "get_response",
            "location": 317,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_failed_metadata.receiver_bind_extra_request_metadata": {
            "name": "receiver_bind_extra_request_metadata",
            "location": 357,
            "return": [],
            "arguments": {
                "sender": [],
                "signal": [],
                "request": [],
                "logger": [],
                "exception": []
            }
        },
        "TestRequestMiddleware.test_signal_bind_extra_request_failed_metadata.get_response": {
            "name": "get_response",
            "location": 372,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_error.get_response": {
            "name": "get_response",
            "location": 414,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_403_are_processed_as_regular_requests.get_response": {
            "name": "get_response",
            "location": 467,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_process_request_404_are_processed_as_regular_requests.get_response": {
            "name": "get_response",
            "location": 516,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_should_log_request_id_from_request_x_request_id_header.get_response": {
            "name": "get_response",
            "location": 560,
            "return": [],
            "arguments": {
                "_response": []
            }
        },
        "TestRequestMiddleware.test_should_log_correlation_id_from_request_x_correlation_id_header.get_response": {
            "name": "get_response",
            "location": 584,
            "return": [],
            "arguments": {
                "_response": []
            }
        }
    },
    "django-structlog-master/test_app/tests/middlewares/__init__.py": {}
}
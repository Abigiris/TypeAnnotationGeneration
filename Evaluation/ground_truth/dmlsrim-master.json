{
    "dev.py": {},
    "__init__.py": {},
    "src/ceria.py": {},
    "src/cli.py": {
        "hello": {
            "name": "hello",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "goodbye": {
            "name": "goodbye",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "formal": [
                    "bool"
                ]
            }
        },
        "run_dcf": {
            "name": "run_dcf",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "formal": [
                    "bool"
                ]
            }
        }
    },
    "src/dcf.py": {
        "make_element_subfolder_name": {
            "name": "make_element_subfolder_name",
            "location": 125,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "make_data_path": {
            "name": "make_data_path",
            "location": 164,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "data_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "make_image_path": {
            "name": "make_image_path",
            "location": 177,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "image_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "get_depth_damage_array": {
            "name": "get_depth_damage_array",
            "location": 189,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "str"
                ]
            }
        },
        "trunc_depth_damage_array": {
            "name": "trunc_depth_damage_array",
            "location": 206,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "get_damage_array": {
            "name": "get_damage_array",
            "location": 219,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "get_damage_stats": {
            "name": "get_damage_stats",
            "location": 225,
            "return": [
                "DamageStats"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "plot_damage_multi": {
            "name": "plot_damage_multi",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "List[Results]"
                ],
                "save_dir": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "plot_damage_multi_from_path": {
            "name": "plot_damage_multi_from_path",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "data_parent": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "plot_damage_energy_per_ion": {
            "name": "plot_damage_energy_per_ion",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "folder": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ]
            }
        },
        "plot_damage_energy_total": {
            "name": "plot_damage_energy_total",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "folder": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ]
            }
        },
        "run_srim": {
            "name": "run_srim",
            "location": 327,
            "return": [
                "Results"
            ],
            "arguments": {
                "ion": [
                    "Ion"
                ],
                "target": [
                    "Target"
                ],
                "data_out_dir": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "plot_srim": {
            "name": "plot_srim",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "image_out_dir": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ],
                "total": [
                    "bool"
                ],
                "per_ion": [
                    "bool"
                ]
            }
        },
        "combined_srim": {
            "name": "combined_srim",
            "location": 353,
            "return": [
                "SrimData"
            ],
            "arguments": {
                "ion": [
                    "Ion"
                ],
                "target": [
                    "Target"
                ],
                "data_path": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "create_ion_list": {
            "name": "create_ion_list",
            "location": 381,
            "return": [
                "List[Ion]"
            ],
            "arguments": {
                "ion_name": [
                    "Literal[('H', 'He', 'Li')]"
                ],
                "energy_list": [
                    "Union[(Sequence[int], Set[int])]"
                ],
                "units": [
                    "Literal[('ev', 'kev', 'mev')]"
                ]
            }
        },
        "pool_srim": {
            "name": "pool_srim",
            "location": 389,
            "return": [
                "List[SrimData]"
            ],
            "arguments": {
                "ions": [
                    "Union[(Sequence[Ion], Set[Ion])]"
                ],
                "target": [
                    "Target"
                ],
                "data_path": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "pickle_srim": {
            "name": "pickle_srim",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "srimdata": [
                    "Union[(SrimData, Sequence[SrimData])]"
                ]
            }
        },
        "json_srim": {
            "name": "json_srim",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "srimdata": [
                    "List[SrimData]"
                ]
            }
        },
        "SrimData.__post_init__": {
            "name": "__post_init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimData.__post_init_post_parse__": {
            "name": "__post_init_post_parse__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.__post_init__": {
            "name": "__post_init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.as_dict": {
            "name": "as_dict",
            "location": 92,
            "return": [
                "Dict[(str, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.as_typdict": {
            "name": "as_typdict",
            "location": 97,
            "return": [
                "ElemTD"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/dcfclass.py": {
        "make_element_subfolder_name": {
            "name": "make_element_subfolder_name",
            "location": 126,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "make_data_path": {
            "name": "make_data_path",
            "location": 167,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "data_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "make_image_path": {
            "name": "make_image_path",
            "location": 181,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "image_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "plot_damage_multi": {
            "name": "plot_damage_multi",
            "location": 662,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Sequence[Results]"
                ],
                "save_dir": [
                    "Path"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "get_ion_energy_damage_total": {
            "name": "get_ion_energy_damage_total",
            "location": 700,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "results": [
                    "Sequence[SrimResults]"
                ]
            }
        },
        "plot_ion_energy_damage": {
            "name": "plot_ion_energy_damage",
            "location": 707,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Sequence[SrimResults]"
                ],
                "save_dir": [
                    "Path"
                ]
            }
        },
        "plot_ion_energy_maxdmg_depth": {
            "name": "plot_ion_energy_maxdmg_depth",
            "location": 726,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Sequence[SrimResults]"
                ],
                "save_dir": [
                    "Path"
                ]
            }
        },
        "run_srim": {
            "name": "run_srim",
            "location": 747,
            "return": [
                "Results"
            ],
            "arguments": {
                "ion": [
                    "Ion"
                ],
                "target": [
                    "Target"
                ],
                "data_out_dir": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "combined_srim": {
            "name": "combined_srim",
            "location": 761,
            "return": [
                "SrimData"
            ],
            "arguments": {
                "ion": [
                    "Ion"
                ],
                "target": [
                    "Target"
                ],
                "data_path": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "create_ion_list": {
            "name": "create_ion_list",
            "location": 790,
            "return": [
                "List[Ion]"
            ],
            "arguments": {
                "ion_name": [
                    "Literal[('H', 'He', 'Li')]"
                ],
                "energy_list": [
                    "Union[(Sequence[int], Set[int])]"
                ],
                "units": [
                    "Literal[('ev', 'kev', 'mev')]"
                ]
            }
        },
        "pool_srim": {
            "name": "pool_srim",
            "location": 798,
            "return": [
                "List[SrimData]"
            ],
            "arguments": {
                "ions": [
                    "Union[(Sequence[Ion], Set[Ion])]"
                ],
                "target": [
                    "Target"
                ],
                "data_path": [
                    "Path"
                ],
                "num_ions": [
                    "int"
                ],
                "srim_dir": [
                    "Path"
                ]
            }
        },
        "pickle_srim": {
            "name": "pickle_srim",
            "location": 840,
            "return": [
                "None"
            ],
            "arguments": {
                "srimdata": [
                    "Union[(SrimData, Sequence[SrimData])]"
                ]
            }
        },
        "json_srim": {
            "name": "json_srim",
            "location": 853,
            "return": [
                "None"
            ],
            "arguments": {
                "srimdata": [
                    "List[SrimData]"
                ]
            }
        },
        "SrimData.__post_init__": {
            "name": "__post_init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimData.__post_init_post_parse__": {
            "name": "__post_init_post_parse__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.__post_init__": {
            "name": "__post_init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.as_dict": {
            "name": "as_dict",
            "location": 93,
            "return": [
                "Dict[(str, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElemClass.as_typdict": {
            "name": "as_typdict",
            "location": 98,
            "return": [
                "ElemTD"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.__init__": {
            "name": "__init__",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "inp": [
                    "Union[(Path, Results)]"
                ],
                "target": [
                    "Optional[Target]"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ],
                "savepath": [
                    "Union[(Path, str)]"
                ]
            }
        },
        "SrimResults.__str__": {
            "name": "__str__",
            "location": 236,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.__eq__": {
            "name": "__eq__",
            "location": 243,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "SrimResults.__lt__": {
            "name": "__lt__",
            "location": 249,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "SrimResults"
                ]
            }
        },
        "SrimResults._valid_units": {
            "name": "_valid_units",
            "location": 252,
            "return": [
                "Tuple[(Literal[('nm', 'A')], int)]"
            ],
            "arguments": {
                "self": [],
                "units": [
                    "precisionLitType"
                ]
            }
        },
        "SrimResults.target": {
            "name": "target",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "Target"
                ]
            }
        },
        "SrimResults.layers": {
            "name": "layers",
            "location": 272,
            "return": [
                "Optional[Target.layers]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults._get_layer_depths": {
            "name": "_get_layer_depths",
            "location": 278,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults._get_total_thickness": {
            "name": "_get_total_thickness",
            "location": 285,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.get_depth_damage_array": {
            "name": "get_depth_damage_array",
            "location": 288,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.trunc_depth_damage_array": {
            "name": "trunc_depth_damage_array",
            "location": 299,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.make_depth_damage_table": {
            "name": "make_depth_damage_table",
            "location": 312,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.make_depth_damage_csv": {
            "name": "make_depth_damage_csv",
            "location": 320,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "Union[(Path, str)]"
                ]
            }
        },
        "SrimResults.get_damage_array": {
            "name": "get_damage_array",
            "location": 330,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.get_depth_array": {
            "name": "get_depth_array",
            "location": 336,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults.get_index_from_depth": {
            "name": "get_index_from_depth",
            "location": 342,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "chosen_depth": [
                    "int"
                ]
            }
        },
        "SrimResults.get_damage_stats": {
            "name": "get_damage_stats",
            "location": 348,
            "return": [
                "DamageStats"
            ],
            "arguments": {
                "self": []
            }
        },
        "SrimResults._create_damage_depth_fig": {
            "name": "_create_damage_depth_fig",
            "location": 357,
            "return": [
                "Tuple[(mpl.figure.Figure, mpl.axes.Axes)]"
            ],
            "arguments": {
                "self": [],
                "depth_marker": [
                    "int"
                ],
                "plot_type": [
                    "Literal[('total', 'per_ion')]"
                ]
            }
        },
        "SrimResults._add_damage_depth_line": {
            "name": "_add_damage_depth_line",
            "location": 381,
            "return": [
                "mpl.axes.Axes"
            ],
            "arguments": {
                "self": [],
                "ax": [
                    "Optional[mpl.axes.Axes]"
                ],
                "plot_type": [
                    "Literal[('total', 'per_ion')]"
                ]
            }
        },
        "SrimResults.plot_damage_depth": {
            "name": "plot_damage_depth",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "Union[(Path, str, None)]"
                ],
                "depth_marker": [
                    "int"
                ],
                "plot_type": [
                    "Literal[('total', 'per_ion')]"
                ]
            }
        },
        "SrimResults.plot_srim": {
            "name": "plot_srim",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "Union[(Path, str, None)]"
                ],
                "depth_marker": [
                    "int"
                ],
                "total": [
                    "bool"
                ],
                "per_ion": [
                    "bool"
                ]
            }
        },
        "MultiSrimResults.__init__": {
            "name": "__init__",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "inp": [
                    "Union[(str, Path, typ.Sequence[Path], typ.Sequence[Results], typ.Sequence[SrimResults])]"
                ],
                "target": [
                    "Optional[Target]"
                ],
                "units": [
                    "precisionLitType"
                ],
                "depth": [
                    "int"
                ],
                "savepath": [
                    "Union[(Path, str)]"
                ]
            }
        },
        "MultiSrimResults.plot_damage_multi": {
            "name": "plot_damage_multi",
            "location": 473,
            "return": [
                "plt.figure.Figure"
            ],
            "arguments": {
                "self": [],
                "depth_marker": [
                    "int"
                ],
                "plot_type": [
                    "Literal[('total', 'per_ion')]"
                ]
            }
        },
        "MultiSrimResults.get_depth_damage_arrays": {
            "name": "get_depth_damage_arrays",
            "location": 491,
            "return": [
                "List[floatArray]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MultiSrimResults.get_damage_total_energy_array": {
            "name": "get_damage_total_energy_array",
            "location": 494,
            "return": [
                "floatArray"
            ],
            "arguments": {
                "self": [],
                "depth_marker": [
                    "int"
                ]
            }
        },
        "MultiSrimResults.plot_max_and_total_dmg": {
            "name": "plot_max_and_total_dmg",
            "location": 510,
            "return": [
                "mpl.figure.Figure"
            ],
            "arguments": {
                "self": [],
                "depth_marker": [
                    "int"
                ],
                "x_max": [
                    "int"
                ],
                "depth_max": [
                    "int"
                ],
                "damage_max": [
                    "int"
                ],
                "title": [
                    "bool"
                ]
            }
        },
        "MultiSrimResults.plot_damage_total_energy": {
            "name": "plot_damage_total_energy",
            "location": 574,
            "return": [
                "mpl.figure.Figure"
            ],
            "arguments": {
                "self": [],
                "x_max": [
                    "int"
                ],
                "y_max": [
                    "int"
                ],
                "title": [
                    "bool"
                ]
            }
        },
        "MultiSrimResults.plot_max_dmgdepth_energy": {
            "name": "plot_max_dmgdepth_energy",
            "location": 597,
            "return": [
                "Tuple[(mpl.figure.Figure, mpl.axes.Axes)]"
            ],
            "arguments": {
                "self": [],
                "depth_marker": [
                    "int"
                ],
                "x_max": [
                    "int"
                ],
                "y_max": [
                    "int"
                ]
            }
        },
        "MultiSrimResults.plot_surface_damage": {
            "name": "plot_surface_damage",
            "location": 637,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chosen_depth": [
                    "int"
                ]
            }
        }
    },
    "src/main.py": {
        "make_element_subfolder_name": {
            "name": "make_element_subfolder_name",
            "location": 79,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "precision": [
                    "'precisionLitType'"
                ]
            }
        },
        "make_data_path": {
            "name": "make_data_path",
            "location": 118,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "data_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "make_image_path": {
            "name": "make_image_path",
            "location": 131,
            "return": [
                "Path"
            ],
            "arguments": {
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ],
                "image_path": [
                    "Union[(Path, str)]"
                ],
                "precision": [
                    "precisionLitType"
                ]
            }
        },
        "get_energy_damage_array": {
            "name": "get_energy_damage_array",
            "location": 143,
            "return": [
                "'floatArray'"
            ],
            "arguments": {
                "results": [
                    "Results"
                ]
            }
        },
        "calc_energy_damage": {
            "name": "calc_energy_damage",
            "location": 151,
            "return": [
                "'floatArray'"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "precisionLitType"
                ]
            }
        },
        "save_damage_energy": {
            "name": "save_damage_energy",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "units": [
                    "precisionLitType"
                ]
            }
        },
        "plot_damage_energy": {
            "name": "plot_damage_energy",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "ax": [
                    "plt.Axes"
                ],
                "units": [
                    "precisionLitType"
                ],
                "plot_label": [
                    "str"
                ]
            }
        }
    },
    "src/mung.py": {},
    "src/parser.py": {
        "is_balanced": {
            "name": "is_balanced",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "formula": [
                    "FormulaType"
                ]
            }
        },
        "is_real_elements": {
            "name": "is_real_elements",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "formula": [
                    "FormulaType"
                ]
            }
        },
        "_dictify": {
            "name": "_dictify",
            "location": 113,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "tuples": [
                    "Iterable[Tuple[(str, str)]]"
                ]
            }
        },
        "_fuse": {
            "name": "_fuse",
            "location": 124,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "mol1": [
                    "Mapping[(str, int)]"
                ],
                "mol2": [
                    "Mapping[(str, int)]"
                ],
                "w": [
                    "int"
                ]
            }
        },
        "_parse": {
            "name": "_parse",
            "location": 137,
            "return": [
                "Tuple[(Dict[(str, int)], int)]"
            ],
            "arguments": {
                "formula": [
                    "FormulaType"
                ]
            }
        },
        "parse_formula": {
            "name": "parse_formula",
            "location": 177,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "formula": [
                    "FormulaType"
                ]
            }
        },
        "parse_print_from_input": {
            "name": "parse_print_from_input",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "src/reg.py": {
        "_read_target": {
            "name": "_read_target",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "output": [
                    "bytes"
                ]
            }
        }
    },
    "src/urania.py": {},
    "src/webgui.py": {},
    "src/__init__.py": {},
    "src/mytypes/__init__.py": {},
    "src/mytypes/srim/config.py": {},
    "src/mytypes/srim/input.py": {
        "AutoTRIM.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": [
                    "int"
                ],
                "restart_directroy": [
                    "Optional[str]"
                ]
            }
        },
        "AutoTRIM.write": {
            "name": "write",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trim": [
                    "TRIM"
                ]
            }
        },
        "TRIMInput.srim_num_elements": {
            "name": "srim_num_elements",
            "location": 44,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_title": {
            "name": "_write_title",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_ion": {
            "name": "_write_ion",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_cascade_options": {
            "name": "_write_cascade_options",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_plot_on_off": {
            "name": "_write_plot_on_off",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_target": {
            "name": "_write_target",
            "location": 92,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_plot_options": {
            "name": "_write_plot_options",
            "location": 101,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_elements": {
            "name": "_write_elements",
            "location": 111,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_layer": {
            "name": "_write_layer",
            "location": 127,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_solid_gas": {
            "name": "_write_solid_gas",
            "location": 148,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_bragg_correction": {
            "name": "_write_bragg_correction",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_displacement_energies": {
            "name": "_write_displacement_energies",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_lattice_binding": {
            "name": "_write_lattice_binding",
            "location": 168,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_surface_binding": {
            "name": "_write_surface_binding",
            "location": 178,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput._write_version": {
            "name": "_write_version",
            "location": 188,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMInput.write": {
            "name": "write",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sr": [
                    "SR"
                ]
            }
        },
        "SRInput._write_filename": {
            "name": "_write_filename",
            "location": 234,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput._write_ion": {
            "name": "_write_ion",
            "location": 243,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput._write_layer_info": {
            "name": "_write_layer_info",
            "location": 251,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput._write_elements": {
            "name": "_write_elements",
            "location": 264,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput._write_output_options": {
            "name": "_write_output_options",
            "location": 278,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput._write_ion_energy_range": {
            "name": "_write_ion_energy_range",
            "location": 285,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRInput.write": {
            "name": "write",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/mytypes/srim/output.py": {
        "buffered_findall": {
            "name": "buffered_findall",
            "location": 683,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "string": [
                    "bytes"
                ],
                "start": [
                    "int"
                ]
            }
        },
        "SRIM_Output._read_name": {
            "name": "_read_name",
            "location": 28,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRIM_Output._read_ion": {
            "name": "_read_ion",
            "location": 31,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRIM_Output._read_target": {
            "name": "_read_target",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRIM_Output._read_num_ions": {
            "name": "_read_num_ions",
            "location": 71,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRIM_Output._read_table": {
            "name": "_read_table",
            "location": 78,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "Results.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ]
            }
        },
        "Ioniz.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Ioniz.ion": {
            "name": "ion",
            "location": 155,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ioniz.num_ions": {
            "name": "num_ions",
            "location": 163,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ioniz.depth": {
            "name": "depth",
            "location": 168,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ioniz.ions": {
            "name": "ions",
            "location": 173,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ioniz.recoils": {
            "name": "recoils",
            "location": 179,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vacancy.__init__": {
            "name": "__init__",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Vacancy.ion": {
            "name": "ion",
            "location": 210,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vacancy.num_ions": {
            "name": "num_ions",
            "location": 218,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vacancy.depth": {
            "name": "depth",
            "location": 223,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vacancy.knock_ons": {
            "name": "knock_ons",
            "location": 228,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vacancy.vacancies": {
            "name": "vacancies",
            "location": 233,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoVacancy.__init__": {
            "name": "__init__",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "NoVacancy.ion": {
            "name": "ion",
            "location": 268,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoVacancy.num_ions": {
            "name": "num_ions",
            "location": 276,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoVacancy.depth": {
            "name": "depth",
            "location": 281,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoVacancy.number": {
            "name": "number",
            "location": 286,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyToRecoils.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "EnergyToRecoils.ion": {
            "name": "ion",
            "location": 316,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyToRecoils.num_ions": {
            "name": "num_ions",
            "location": 324,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyToRecoils.depth": {
            "name": "depth",
            "location": 329,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyToRecoils.ions": {
            "name": "ions",
            "location": 334,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyToRecoils.absorbed": {
            "name": "absorbed",
            "location": 339,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Phonons.__init__": {
            "name": "__init__",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Phonons.ion": {
            "name": "ion",
            "location": 372,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "Phonons.num_ions": {
            "name": "num_ions",
            "location": 380,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Phonons.depth": {
            "name": "depth",
            "location": 385,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Phonons.ions": {
            "name": "ions",
            "location": 390,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Phonons.recoils": {
            "name": "recoils",
            "location": 395,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.__init__": {
            "name": "__init__",
            "location": 412,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Range.ion": {
            "name": "ion",
            "location": 426,
            "return": [
                "Ion"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.num_ions": {
            "name": "num_ions",
            "location": 434,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Range.depth": {
            "name": "depth",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Range.ions": {
            "name": "ions",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Range.elements": {
            "name": "elements",
            "location": 449,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collision.__init__": {
            "name": "__init__",
            "location": 495,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Collision._read_header": {
            "name": "_read_header",
            "location": 503,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "TextIO"
                ]
            }
        },
        "Collision._read_ion": {
            "name": "_read_ion",
            "location": 518,
            "return": [
                "Dict[(str, Union[(int, float, List[Dict[(str, Any)]])])]"
            ],
            "arguments": {
                "self": [],
                "ion_str": [
                    "str"
                ]
            }
        },
        "Collision._read_ion_footer": {
            "name": "_read_ion_footer",
            "location": 581,
            "return": [
                "Dict[(str, Union[(int, float, List[Dict[(str, Any)]])])]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "Iterator[str]"
                ],
                "collisions": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        },
        "Collision._read_cascade": {
            "name": "_read_cascade",
            "location": 615,
            "return": [
                "Tuple[(float, float, float, float, List[Dict[(str, Union[(int, float)])]])]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "Iterator[str]"
                ]
            }
        },
        "Collision.__getitem__": {
            "name": "__getitem__",
            "location": 665,
            "return": [
                "Dict[(str, Union[(int, float, List[Dict[(str, Any)]])])]"
            ],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ]
            }
        },
        "Collision.__len__": {
            "name": "__len__",
            "location": 679,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRResults.__init__": {
            "name": "__init__",
            "location": 712,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "Union[(str, Path)]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "SRResults._read_stopping_units": {
            "name": "_read_stopping_units",
            "location": 722,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRResults._read_ion_info": {
            "name": "_read_ion_info",
            "location": 731,
            "return": [
                "Dict[(str, Union[(str, int, float)])]"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRResults._read_target_info": {
            "name": "_read_target_info",
            "location": 743,
            "return": [
                "Dict[(str, Union[(float, Dict[(str, float)])])]"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRResults._read_stopping_table": {
            "name": "_read_stopping_table",
            "location": 791,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "bytes"
                ]
            }
        },
        "SRResults.units": {
            "name": "units",
            "location": 866,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRResults.data": {
            "name": "data",
            "location": 870,
            "return": [
                "np.ndarray[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRResults.ion": {
            "name": "ion",
            "location": 884,
            "return": [
                "Dict[(str, Union[(str, int, float)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRResults.target": {
            "name": "target",
            "location": 895,
            "return": [
                "Dict[(str, Union[(float, Dict[(str, float)])])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRResults._read_stopping_table.energy_conversion": {
            "name": "energy_conversion",
            "location": 831,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "Sequence[str]"
                ]
            }
        },
        "SRResults._read_stopping_table.length_conversion": {
            "name": "length_conversion",
            "location": 838,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "Sequence[str]"
                ]
            }
        }
    },
    "src/mytypes/srim/plot.py": {
        "plot_damage_energy": {
            "name": "plot_damage_energy",
            "location": 6,
            "return": [
                "float"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "ax": [
                    "axes.Axes"
                ]
            }
        },
        "plot_ionization": {
            "name": "plot_ionization",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "ax": [
                    "axes.Axes"
                ]
            }
        },
        "plot_vacancies": {
            "name": "plot_vacancies",
            "location": 39,
            "return": [
                "float"
            ],
            "arguments": {
                "results": [
                    "Results"
                ],
                "ax": [
                    "axes.Axes"
                ]
            }
        }
    },
    "src/mytypes/srim/srim.py": {
        "TRIMSettings.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TRIMSettings.__getattr__": {
            "name": "__getattr__",
            "location": 122,
            "return": [
                "Union[(str, float, int)]"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str"
                ]
            }
        },
        "TRIMSettings.plot_xmin": {
            "name": "plot_xmin",
            "location": 126,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIMSettings.plot_xmax": {
            "name": "plot_xmax",
            "location": 132,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIM.__init__": {
            "name": "__init__",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "Target"
                ],
                "ion": [
                    "Ion"
                ],
                "calculation": [
                    "int"
                ],
                "number_ions": [
                    "int"
                ]
            }
        },
        "TRIM._write_input_files": {
            "name": "_write_input_files",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TRIM.copy_output_files": {
            "name": "copy_output_files",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "src_directory": [
                    "Union[(str, Path)]"
                ],
                "dest_directory": [
                    "Union[(str, Path)]"
                ],
                "check_srim_output": [
                    "bool"
                ]
            }
        },
        "TRIM.run": {
            "name": "run",
            "location": 224,
            "return": [
                "Results"
            ],
            "arguments": {
                "self": [],
                "srim_directory": [
                    "Union[(str, Path)]"
                ]
            }
        },
        "SRSettings.__init__": {
            "name": "__init__",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRSettings.correction": {
            "name": "correction",
            "location": 293,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRSettings.energy_min": {
            "name": "energy_min",
            "location": 299,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRSettings.output_filename": {
            "name": "output_filename",
            "location": 305,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SRSettings.__getattr__": {
            "name": "__getattr__",
            "location": 310,
            "return": [
                "Union[(str, int, float)]"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str"
                ]
            }
        },
        "SR.__init__": {
            "name": "__init__",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "layer": [
                    "Layer"
                ],
                "ion": [
                    "Ion"
                ]
            }
        },
        "SR._write_input_file": {
            "name": "_write_input_file",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SR.run": {
            "name": "run",
            "location": 338,
            "return": [
                "SRResults"
            ],
            "arguments": {
                "self": [],
                "srim_directory": [
                    "Union[(str, Path)]"
                ]
            }
        }
    },
    "src/mytypes/srim/__init__.py": {},
    "src/mytypes/srim/core/element.py": {
        "Element.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [
                    "Union[(str, int)]"
                ],
                "mass": [
                    "float"
                ]
            }
        },
        "Element.__eq__": {
            "name": "__eq__",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_element": [
                    "object"
                ]
            }
        },
        "Element.__repr__": {
            "name": "__repr__",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.__hash__": {
            "name": "__hash__",
            "location": 58,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.symbol": {
            "name": "symbol",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.name": {
            "name": "name",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.atomic_number": {
            "name": "atomic_number",
            "location": 76,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.mass": {
            "name": "mass",
            "location": 82,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/mytypes/srim/core/elementdb.py": {
        "create_elementdb": {
            "name": "create_elementdb",
            "location": 14,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "ElementDB.lookup": {
            "name": "lookup",
            "location": 25,
            "return": [
                "element_TD"
            ],
            "arguments": {
                "cls": [],
                "identifier": [
                    "Union[(str, int)]"
                ]
            }
        },
        "ElementDB._lookup_symbol": {
            "name": "_lookup_symbol",
            "location": 49,
            "return": [
                "element_TD"
            ],
            "arguments": {
                "cls": [],
                "symbol": [
                    "str"
                ]
            }
        },
        "ElementDB._lookup_name": {
            "name": "_lookup_name",
            "location": 58,
            "return": [
                "element_TD"
            ],
            "arguments": {
                "cls": [],
                "name": [
                    "str"
                ]
            }
        },
        "ElementDB._lookup_atomic_number": {
            "name": "_lookup_atomic_number",
            "location": 70,
            "return": [
                "element_TD"
            ],
            "arguments": {
                "cls": [],
                "atomic_number": [
                    "int"
                ]
            }
        }
    },
    "src/mytypes/srim/core/ion.py": {
        "Ion.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "Union[(str, int)]"
                ],
                "energy": [
                    "float"
                ],
                "mass": [
                    "float"
                ]
            }
        },
        "Ion.__repr__": {
            "name": "__repr__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ion.energy": {
            "name": "energy",
            "location": 48,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ion.velocity": {
            "name": "velocity",
            "location": 53,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/mytypes/srim/core/layer.py": {
        "Layer.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "elements": [
                    "Union[(Mapping[(Element, elemParamsType)], Mapping[(str, elemParamsType)])]"
                ],
                "density": [
                    "float"
                ],
                "width": [
                    "float"
                ],
                "phase": [
                    "int"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "Layer.from_formula_and_params": {
            "name": "from_formula_and_params",
            "location": 57,
            "return": [
                "'Layer'"
            ],
            "arguments": {
                "cls": [],
                "chemical_formula": [
                    "str"
                ],
                "density": [
                    "float"
                ],
                "width": [
                    "float"
                ],
                "phase": [
                    "int"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "Layer.width": {
            "name": "width",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float"
                ]
            }
        },
        "Layer.name": {
            "name": "name",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Layer.__repr__": {
            "name": "__repr__",
            "location": 109,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/mytypes/srim/core/material.py": {
        "Material.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elements": [
                    "Union[(Mapping[(Element, elemParamsType)], Mapping[(str, elemParamsType)])]"
                ],
                "density": [
                    "float"
                ],
                "phase": [
                    "int"
                ]
            }
        },
        "Material.from_formula": {
            "name": "from_formula",
            "location": 119,
            "return": [
                "'Material'"
            ],
            "arguments": {
                "cls": [],
                "chemical_formula": [
                    "str"
                ],
                "density": [
                    "float"
                ],
                "phase": [
                    "int"
                ]
            }
        },
        "Material._formula_to_elements": {
            "name": "_formula_to_elements",
            "location": 145,
            "return": [
                "Dict[(Element, Dict[(str, float)])]"
            ],
            "arguments": {
                "chemical_formula": [
                    "str"
                ]
            }
        },
        "Material.density": {
            "name": "density",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float"
                ]
            }
        },
        "Material.phase": {
            "name": "phase",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ]
            }
        },
        "Material.chemical_formula": {
            "name": "chemical_formula",
            "location": 189,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Material.__repr__": {
            "name": "__repr__",
            "location": 193,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Material.__eq__": {
            "name": "__eq__",
            "location": 196,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "material": [
                    "object"
                ]
            }
        }
    },
    "src/mytypes/srim/core/target.py": {
        "Target.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "layers": [
                    "List[Layer]"
                ]
            }
        },
        "Target.width": {
            "name": "width",
            "location": 37,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "src/mytypes/srim/core/types.py": {},
    "src/mytypes/srim/core/units.py": {},
    "src/mytypes/srim/core/utils.py": {
        "check_input": {
            "name": "check_input",
            "location": 36,
            "return": [
                "_inp"
            ],
            "arguments": {
                "input_converter": [
                    "Callable[([_inp], inp)]"
                ],
                "condition": [
                    "Callable[([inp], bool)]"
                ],
                "value": [
                    "_inp"
                ]
            }
        },
        "is_zero": {
            "name": "is_zero",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_zero_or_one": {
            "name": "is_zero_or_one",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_zero_to_two": {
            "name": "is_zero_to_two",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_zero_to_five": {
            "name": "is_zero_to_five",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_one_to_seven": {
            "name": "is_one_to_seven",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_one_to_eight": {
            "name": "is_one_to_eight",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "int"
                ]
            }
        },
        "is_srim_degrees": {
            "name": "is_srim_degrees",
            "location": 72,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "float"
                ]
            }
        },
        "is_positive": {
            "name": "is_positive",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "float"
                ]
            }
        },
        "is_greater_than_zero": {
            "name": "is_greater_than_zero",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "float"
                ]
            }
        },
        "is_quoteless": {
            "name": "is_quoteless",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        }
    },
    "src/mytypes/srim/core/__init__.py": {},
    "tests/dependancy_tree.py": {
        "captured_output": {
            "name": "captured_output",
            "location": 11,
            "return": [
                "Generator[(StringIO, None, None)]"
            ],
            "arguments": {
                "stream_name": [
                    "str"
                ]
            }
        },
        "captured_stdout": {
            "name": "captured_stdout",
            "location": 22,
            "return": [
                "ContextManager[StringIO]"
            ],
            "arguments": {}
        },
        "captured_stderr": {
            "name": "captured_stderr",
            "location": 27,
            "return": [
                "ContextManager[StringIO]"
            ],
            "arguments": {}
        },
        "captured_stdin": {
            "name": "captured_stdin",
            "location": 32,
            "return": [
                "ContextManager[StringIO]"
            ],
            "arguments": {}
        }
    },
    "tests/test_main.py": {
        "test_srim_directory_path": {
            "name": "test_srim_directory_path",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_data_path": {
            "name": "test_make_data_path",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_image_path": {
            "name": "test_make_image_path",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/__init__.py": {}
}
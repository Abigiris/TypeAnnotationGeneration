{
    "editorconfig-git-preserve-history-master/setup.py": {},
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/change.py": {
        "_sort_func": {
            "name": "_sort_func",
            "location": 38,
            "return": [
                "datetime"
            ],
            "arguments": {
                "info": [
                    "GitCommitInfoTuple"
                ]
            }
        },
        "Change.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Change.add_change": {
            "name": "add_change",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "line_number": [
                    "int"
                ]
            }
        },
        "Change.files": {
            "name": "files",
            "location": 21,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Change.line_numbers_for_file": {
            "name": "line_numbers_for_file",
            "location": 24,
            "return": [
                "Dict[(int, bool)]"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "Change.sort_by_date": {
            "name": "sort_by_date",
            "location": 28,
            "return": [
                "ChangeList"
            ],
            "arguments": {
                "cls": [],
                "changes_by_commit": [
                    "ChangesByCommit"
                ]
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/git.py": {
        "match_commit": {
            "name": "match_commit",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "commit_log": [
                    "str"
                ]
            }
        },
        "match_author": {
            "name": "match_author",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "commit_log": [
                    "str"
                ]
            }
        },
        "match_date": {
            "name": "match_date",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "commit_log": [
                    "str"
                ]
            }
        },
        "match_message": {
            "name": "match_message",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "commit_log": [
                    "str"
                ]
            }
        },
        "has_changes": {
            "name": "has_changes",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "list_text_files": {
            "name": "list_text_files",
            "location": 76,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "GitCommitInfo.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "str"
                ],
                "author": [
                    "str"
                ],
                "date": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "GitCommitInfo.from_commit": {
            "name": "from_commit",
            "location": 15,
            "return": [
                "'GitCommitInfo'"
            ],
            "arguments": {
                "cls": [],
                "commit": [
                    "str"
                ]
            }
        },
        "GitCommitInfo.from_commit_log": {
            "name": "from_commit_log",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": [],
                "commit": [
                    "str"
                ],
                "commit_log": [
                    "str"
                ]
            }
        },
        "GitCommitInfo.impersonate_and_write_commit": {
            "name": "impersonate_and_write_commit",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "files": [
                    "List[str]"
                ]
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/main.py": {
        "store_changes": {
            "name": "store_changes",
            "location": 16,
            "return": [],
            "arguments": {
                "change_file": [
                    "str"
                ],
                "old_contents": [
                    "bytes"
                ],
                "new_contents": [
                    "bytes"
                ]
            }
        },
        "generate_changes": {
            "name": "generate_changes",
            "location": 37,
            "return": [],
            "arguments": {
                "editorconfig": [
                    "dict"
                ],
                "abspath": [
                    "str"
                ],
                "relpath": [
                    "str"
                ]
            }
        },
        "find_and_write_commits": {
            "name": "find_and_write_commits",
            "location": 46,
            "return": [],
            "arguments": {}
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/replace.py": {
        "replace_editorconfig": {
            "name": "replace_editorconfig",
            "location": 13,
            "return": [
                "Tuple[(bytes, bytes)]"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ],
                "file_path": [
                    "str"
                ],
                "lines_to_change": [
                    "Dict[(int, bool)]"
                ]
            }
        },
        "expand_to_spaces": {
            "name": "expand_to_spaces",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ],
                "modified_line": [
                    "str"
                ]
            }
        },
        "expand_to_tabs": {
            "name": "expand_to_tabs",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ],
                "modified_line": [
                    "str"
                ]
            }
        },
        "get_indent_sizes": {
            "name": "get_indent_sizes",
            "location": 80,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ]
            }
        },
        "get_tab_size": {
            "name": "get_tab_size",
            "location": 86,
            "return": [
                "int"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ],
                "no_recurse": [
                    "bool"
                ]
            }
        },
        "get_indent_size": {
            "name": "get_indent_size",
            "location": 97,
            "return": [
                "int"
            ],
            "arguments": {
                "editorconfig": [
                    "dict"
                ]
            }
        },
        "replace_leading_tabs_with_spaces": {
            "name": "replace_leading_tabs_with_spaces",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "indent_size": [
                    "int"
                ]
            }
        },
        "replace_leading_spaces_with_tabs": {
            "name": "replace_leading_spaces_with_tabs",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "indent_size": [
                    "int"
                ],
                "tab_size": [
                    "int"
                ]
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/util.py": {
        "run": {
            "name": "run",
            "location": 6,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "cmd": [
                    "List[str]"
                ],
                "encoding": [
                    "str"
                ]
            }
        },
        "get_contents": {
            "name": "get_contents",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "encoding": [
                    "str"
                ]
            }
        },
        "get_lines": {
            "name": "get_lines",
            "location": 26,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "encoding": [
                    "str"
                ]
            }
        },
        "get_contents_binary": {
            "name": "get_contents_binary",
            "location": 35,
            "return": [
                "bytes"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/__init__.py": {},
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/tests/test_git.py": {
        "GitTest.test_match_commit": {
            "name": "test_match_commit",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitTest.test_match_author_at_beginning": {
            "name": "test_match_author_at_beginning",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitTest.test_match_author_after_something": {
            "name": "test_match_author_after_something",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitTest.test_match_author_in_middle": {
            "name": "test_match_author_in_middle",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitTest.test_match_date": {
            "name": "test_match_date",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitTest.test_match_message": {
            "name": "test_match_message",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/tests/test_replace.py": {
        "UtilTest.test_replace_leading_spaces_with_tabs_with_no_leading_space": {
            "name": "test_replace_leading_spaces_with_tabs_with_no_leading_space",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_replace_leading_spaces_with_tabs": {
            "name": "test_replace_leading_spaces_with_tabs",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_replace_leading_spaces_with_tab_in_middle": {
            "name": "test_replace_leading_spaces_with_tab_in_middle",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_replace_leading_spaces_with_tab_at_end": {
            "name": "test_replace_leading_spaces_with_tab_at_end",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_replace_leading_tabs_with_spaces": {
            "name": "test_replace_leading_tabs_with_spaces",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_replace_editorconfig_test_cases_in_data_dir": {
            "name": "test_replace_editorconfig_test_cases_in_data_dir",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/tests/test_util.py": {
        "UtilTest.test_get_contents": {
            "name": "test_get_contents",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_get_lines": {
            "name": "test_get_lines",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilTest.test_run": {
            "name": "test_run",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "editorconfig-git-preserve-history-master/editorconfig_git_preserve_history/tests/__init__.py": {}
}
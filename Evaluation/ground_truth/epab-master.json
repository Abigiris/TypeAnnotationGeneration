{
    "epab-master/setup.py": {
        "read_local_files": {
            "name": "read_local_files",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "read_local_files._read_single_file": {
            "name": "_read_single_file",
            "location": 77,
            "return": [],
            "arguments": {
                "file_path": []
            }
        }
    },
    "epab-master/epab/exc.py": {},
    "epab-master/epab/_logging.py": {
        "_setup_logging": {
            "name": "_setup_logging",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "_ClickHandler.emit": {
            "name": "emit",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "logging.LogRecord"
                ]
            }
        },
        "_AVHandler.emit": {
            "name": "emit",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "logging.LogRecord"
                ]
            }
        }
    },
    "epab-master/epab/__init__.py": {},
    "epab-master/epab/__main__.py": {
        "cli": {
            "name": "cli",
            "location": 53,
            "return": [],
            "arguments": {
                "dirty": [],
                "stash": []
            }
        },
        "_pre_push": {
            "name": "_pre_push",
            "location": 75,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.core.Context"
                ],
                "push": [
                    "bool"
                ]
            }
        },
        "pre_push": {
            "name": "pre_push",
            "location": 94,
            "return": [],
            "arguments": {
                "ctx": [],
                "push": [
                    "bool"
                ]
            }
        },
        "pp": {
            "name": "pp",
            "location": 104,
            "return": [],
            "arguments": {
                "ctx": [],
                "push": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/bases/repo.py": {
        "BaseRepo.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.get_current_branch": {
            "name": "get_current_branch",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.tag": {
            "name": "tag",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "overwrite": [
                    "bool"
                ]
            }
        },
        "BaseRepo.list_tags": {
            "name": "list_tags",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "BaseRepo.remove_tag": {
            "name": "remove_tag",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.get_latest_tag": {
            "name": "get_latest_tag",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.latest_commit": {
            "name": "latest_commit",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.get_current_tag": {
            "name": "get_current_tag",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.is_on_tag": {
            "name": "is_on_tag",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.stash": {
            "name": "stash",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "stash_name": []
            }
        },
        "BaseRepo.unstash": {
            "name": "unstash",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.ensure": {
            "name": "ensure",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "BaseRepo.last_commit_msg": {
            "name": "last_commit_msg",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.untracked_files": {
            "name": "untracked_files",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.status": {
            "name": "status",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.list_staged_files": {
            "name": "list_staged_files",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.index_is_empty": {
            "name": "index_is_empty",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.changed_files": {
            "name": "changed_files",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.reset_index": {
            "name": "reset_index",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.stage_all": {
            "name": "stage_all",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.stage_modified": {
            "name": "stage_modified",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.stage_subset": {
            "name": "stage_subset",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.add_skip_ci_to_commit_msg": {
            "name": "add_skip_ci_to_commit_msg",
            "location": 179,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "BaseRepo._sanitize_files_to_add": {
            "name": "_sanitize_files_to_add",
            "location": 191,
            "return": [],
            "arguments": {
                "files_to_add": []
            }
        },
        "BaseRepo.commit": {
            "name": "commit",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "files_to_add": [],
                "allow_empty": []
            }
        },
        "BaseRepo._sanitize_amend_commit_message": {
            "name": "_sanitize_amend_commit_message",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "append_to_msg": [],
                "new_message": [],
                "previous_message": []
            }
        },
        "BaseRepo.amend_commit": {
            "name": "amend_commit",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "append_to_msg": [
                    "typing.Optional[str]"
                ],
                "new_message": [
                    "typing.Optional[str]"
                ],
                "files_to_add": [
                    "typing.Optional[typing.Union[(typing.List[str], str)]]"
                ]
            }
        },
        "BaseRepo.merge": {
            "name": "merge",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "ref_name": []
            }
        },
        "BaseRepo.push": {
            "name": "push",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "set_upstream": [
                    "bool"
                ]
            }
        },
        "BaseRepo.push_tags": {
            "name": "push_tags",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.list_branches": {
            "name": "list_branches",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.get_sha": {
            "name": "get_sha",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo.get_short_sha": {
            "name": "get_short_sha",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRepo._validate_branch_name": {
            "name": "_validate_branch_name",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": []
            }
        },
        "BaseRepo.checkout": {
            "name": "checkout",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "reference": []
            }
        },
        "BaseRepo.create_branch": {
            "name": "create_branch",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": []
            }
        },
        "BaseRepo.create_branch_and_checkout": {
            "name": "create_branch_and_checkout",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": []
            }
        },
        "BaseRepo.is_dirty": {
            "name": "is_dirty",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "untracked": []
            }
        }
    },
    "epab-master/epab/bases/__init__.py": {},
    "epab-master/epab/cmd/_chglog.py": {
        "gitchangelog_config": {
            "name": "gitchangelog_config",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "temporary_tag": {
            "name": "temporary_tag",
            "location": 53,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "_chglog": {
            "name": "_chglog",
            "location": 69,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ],
                "next_version": [
                    "str"
                ],
                "auto_next_version": [
                    "bool"
                ]
            }
        },
        "chglog": {
            "name": "chglog",
            "location": 104,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ],
                "next_version": [
                    "str"
                ],
                "auto_next_version": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/cmd/_compile_qt.py": {
        "_compile_qt_resources": {
            "name": "_compile_qt_resources",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "compile_qt_resources": {
            "name": "compile_qt_resources",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/cmd/_doc.py": {
        "doc": {
            "name": "doc",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/cmd/_freeze.py": {
        "_get_site_package_directory": {
            "name": "_get_site_package_directory",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_format_data_file": {
            "name": "_format_data_file",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "data_file": [
                    "str"
                ]
            }
        },
        "_install_pyinstaller": {
            "name": "_install_pyinstaller",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "_patch": {
            "name": "_patch",
            "location": 65,
            "return": [],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "_freeze": {
            "name": "_freeze",
            "location": 92,
            "return": [],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "_clean_spec": {
            "name": "_clean_spec",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "freeze": {
            "name": "freeze",
            "location": 120,
            "return": [],
            "arguments": {
                "ctx": [],
                "version": [
                    "str"
                ],
                "clean": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/cmd/_graph.py": {
        "_graph": {
            "name": "_graph",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "graph": {
            "name": "graph",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/cmd/_install_hooks.py": {
        "_make_venv_path": {
            "name": "_make_venv_path",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_install_hooks": {
            "name": "_install_hooks",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "install_hooks": {
            "name": "install_hooks",
            "location": 59,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/cmd/_next_version.py": {
        "next_version": {
            "name": "next_version",
            "location": 14,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ],
                "_": [],
                "value": []
            }
        }
    },
    "epab-master/epab/cmd/_pipenv.py": {
        "_pipenv": {
            "name": "_pipenv",
            "location": 13,
            "return": [],
            "arguments": {
                "args": [
                    "str"
                ]
            }
        },
        "_check": {
            "name": "_check",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "_lock": {
            "name": "_lock",
            "location": 25,
            "return": [],
            "arguments": {
                "dev": [
                    "bool"
                ]
            }
        },
        "_update": {
            "name": "_update",
            "location": 31,
            "return": [],
            "arguments": {
                "dev": [
                    "bool"
                ]
            }
        },
        "_clean": {
            "name": "_clean",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "pipenv": {
            "name": "pipenv",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "check": {
            "name": "check",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "clean": {
            "name": "clean",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "update": {
            "name": "update",
            "location": 66,
            "return": [],
            "arguments": {
                "dev": []
            }
        },
        "lock": {
            "name": "lock",
            "location": 75,
            "return": [],
            "arguments": {
                "dev": []
            }
        }
    },
    "epab-master/epab/cmd/_print_version.py": {
        "print_version": {
            "name": "print_version",
            "location": 13,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ],
                "_": [],
                "value": []
            }
        }
    },
    "epab-master/epab/cmd/_push.py": {
        "_push": {
            "name": "_push",
            "location": 16,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ]
            }
        },
        "push": {
            "name": "push",
            "location": 26,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ]
            }
        }
    },
    "epab-master/epab/cmd/_pytest.py": {
        "upload_coverage": {
            "name": "upload_coverage",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "pytest_options": {
            "name": "pytest_options",
            "location": 141,
            "return": [],
            "arguments": {}
        },
        "_pytest": {
            "name": "_pytest",
            "location": 153,
            "return": [],
            "arguments": {
                "test": []
            }
        },
        "pytest": {
            "name": "pytest",
            "location": 197,
            "return": [],
            "arguments": {
                "test": [],
                "long": [],
                "show": [],
                "exitfirst": [],
                "last_failed": [],
                "failed_first": [],
                "rm_cov": []
            }
        },
        "_Coverage.install": {
            "name": "install",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "_Coverage.upload_coverage_to_codacy": {
            "name": "upload_coverage_to_codacy",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "_Coverage.remove_config_file": {
            "name": "remove_config_file",
            "location": 120,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/cmd/_release.py": {
        "_clean": {
            "name": "_clean",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "_copy_artifacts": {
            "name": "_copy_artifacts",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "_check_dirty": {
            "name": "_check_dirty",
            "location": 51,
            "return": [],
            "arguments": {
                "reason": [
                    "str"
                ]
            }
        },
        "_remove_av_artifacts": {
            "name": "_remove_av_artifacts",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "_print_build_info": {
            "name": "_print_build_info",
            "location": 66,
            "return": [],
            "arguments": {
                "current_branch": [
                    "str"
                ],
                "next_version": [
                    "str"
                ]
            }
        },
        "_run_linters": {
            "name": "_run_linters",
            "location": 76,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "_run_tests": {
            "name": "_run_tests",
            "location": 82,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "_create_wheel": {
            "name": "_create_wheel",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "_upload_to_twine": {
            "name": "_upload_to_twine",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "_update_av_build_name": {
            "name": "_update_av_build_name",
            "location": 99,
            "return": [],
            "arguments": {
                "next_version": []
            }
        },
        "_set_release_description": {
            "name": "_set_release_description",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "_release": {
            "name": "_release",
            "location": 118,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ]
            }
        },
        "release": {
            "name": "release",
            "location": 165,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "epab-master/epab/cmd/_reqs.py": {
        "_write_reqs_file": {
            "name": "_write_reqs_file",
            "location": 21,
            "return": [],
            "arguments": {
                "cmd": [],
                "file_path": []
            }
        },
        "_write_reqs": {
            "name": "_write_reqs",
            "location": 35,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        },
        "reqs": {
            "name": "reqs",
            "location": 59,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/cmd/__init__.py": {},
    "epab-master/epab/core/config.py": {
        "setup_config": {
            "name": "setup_config",
            "location": 100,
            "return": [],
            "arguments": {
                "epab_version": [
                    "str"
                ]
            }
        }
    },
    "epab-master/epab/core/context.py": {
        "CTX._reset": {
            "name": "_reset",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/core/__init__.py": {},
    "epab-master/epab/linters/_bandit.py": {
        "_bandit": {
            "name": "_bandit",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "bandit": {
            "name": "bandit",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/linters/_dead_fixtures.py": {
        "_pytest_dead_fixtures": {
            "name": "_pytest_dead_fixtures",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "pytest_dead_fixtures": {
            "name": "pytest_dead_fixtures",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/linters/_flake8.py": {
        "_flake8": {
            "name": "_flake8",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "flake8": {
            "name": "flake8",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/linters/_lint.py": {
        "_lint": {
            "name": "_lint",
            "location": 27,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ],
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        },
        "lint": {
            "name": "lint",
            "location": 44,
            "return": [],
            "arguments": {
                "ctx": [
                    "click.Context"
                ],
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/linters/_mypy.py": {
        "_mypy": {
            "name": "_mypy",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "mypy": {
            "name": "mypy",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/linters/_pep8.py": {
        "_pep8": {
            "name": "_pep8",
            "location": 15,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        },
        "pep8": {
            "name": "pep8",
            "location": 30,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/linters/_pylint.py": {
        "_pylint": {
            "name": "_pylint",
            "location": 35,
            "return": [],
            "arguments": {
                "src": [],
                "reports": []
            }
        },
        "pylint": {
            "name": "pylint",
            "location": 49,
            "return": [],
            "arguments": {
                "src": [],
                "reports": []
            }
        }
    },
    "epab-master/epab/linters/_safety.py": {
        "_safety": {
            "name": "_safety",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "safety": {
            "name": "safety",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/linters/_sort.py": {
        "_fix_newlines": {
            "name": "_fix_newlines",
            "location": 15,
            "return": [],
            "arguments": {
                "file_path": [
                    "Path"
                ]
            }
        },
        "_sort_file": {
            "name": "_sort_file",
            "location": 22,
            "return": [],
            "arguments": {
                "file_path": [
                    "Path"
                ]
            }
        },
        "_sort": {
            "name": "_sort",
            "location": 42,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        },
        "sort": {
            "name": "sort",
            "location": 57,
            "return": [],
            "arguments": {
                "amend": [
                    "bool"
                ],
                "stage": [
                    "bool"
                ]
            }
        }
    },
    "epab-master/epab/linters/__init__.py": {},
    "epab-master/epab/utils/_av.py": {
        "AV._out": {
            "name": "_out",
            "location": 16,
            "return": [],
            "arguments": {
                "level": [],
                "msg": [
                    "str"
                ],
                "details": [
                    "str"
                ]
            }
        },
        "AV.info": {
            "name": "info",
            "location": 25,
            "return": [],
            "arguments": {
                "msg": [
                    "str"
                ],
                "details": [
                    "str"
                ]
            }
        },
        "AV.error": {
            "name": "error",
            "location": 36,
            "return": [],
            "arguments": {
                "msg": [
                    "str"
                ],
                "details": [
                    "str"
                ]
            }
        },
        "AV.update_build_version": {
            "name": "update_build_version",
            "location": 47,
            "return": [],
            "arguments": {
                "build_version": [
                    "str"
                ]
            }
        },
        "AV.set_env_var": {
            "name": "set_env_var",
            "location": 57,
            "return": [],
            "arguments": {
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        }
    },
    "epab-master/epab/utils/_ensure_exe.py": {
        "ensure_exe": {
            "name": "ensure_exe",
            "location": 14,
            "return": [],
            "arguments": {
                "exe_name": [
                    "str"
                ]
            }
        }
    },
    "epab-master/epab/utils/_exe_version.py": {
        "_parse_file_info": {
            "name": "_parse_file_info",
            "location": 42,
            "return": [
                "typing.Optional['VersionInfo']"
            ],
            "arguments": {
                "file_info_list": []
            }
        },
        "get_product_version": {
            "name": "get_product_version",
            "location": 54,
            "return": [
                "VersionInfo"
            ],
            "arguments": {
                "path": [
                    "typing.Union[(str, Path)]"
                ]
            }
        },
        "VersionInfo.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "file_version": [],
                "full_version": []
            }
        },
        "VersionInfo.file_version": {
            "name": "file_version",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo.full_version": {
            "name": "full_version",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "epab-master/epab/utils/_gitignore.py": {
        "add_to_gitignore": {
            "name": "add_to_gitignore",
            "location": 11,
            "return": [],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "epab-master/epab/utils/_next_version.py": {
        "_get_datetime": {
            "name": "_get_datetime",
            "location": 91,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {}
        },
        "_get_calver": {
            "name": "_get_calver",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_next_stable_version": {
            "name": "_next_stable_version",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {
                "calver": [
                    "str"
                ],
                "list_of_tags": [
                    "typing.List[Tag]"
                ]
            }
        },
        "_next_alpha_version": {
            "name": "_next_alpha_version",
            "location": 112,
            "return": [
                "str"
            ],
            "arguments": {
                "next_stable_version": [
                    "str"
                ],
                "list_of_tags": [
                    "typing.List[Tag]"
                ]
            }
        },
        "_get_current_calver_tags": {
            "name": "_get_current_calver_tags",
            "location": 126,
            "return": [
                "typing.List[Tag]"
            ],
            "arguments": {
                "calver": [
                    "str"
                ]
            }
        },
        "get_next_version": {
            "name": "get_next_version",
            "location": 130,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_str": [
                    "str"
                ]
            }
        },
        "Tag.calver": {
            "name": "calver",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.quantifier": {
            "name": "quantifier",
            "location": 53,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.branch": {
            "name": "branch",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.alpha_quantifier": {
            "name": "alpha_quantifier",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.is_alpha": {
            "name": "is_alpha",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "epab-master/epab/utils/_repo.py": {
        "Repo.get_current_branch": {
            "name": "get_current_branch",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.tag": {
            "name": "tag",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "overwrite": [
                    "bool"
                ]
            }
        },
        "Repo.list_tags": {
            "name": "list_tags",
            "location": 54,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "str"
                ]
            }
        },
        "Repo.remove_tag": {
            "name": "remove_tag",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.get_latest_tag": {
            "name": "get_latest_tag",
            "location": 84,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.latest_commit": {
            "name": "latest_commit",
            "location": 99,
            "return": [
                "git.Commit"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.is_on_tag": {
            "name": "is_on_tag",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.get_current_tag": {
            "name": "get_current_tag",
            "location": 120,
            "return": [
                "typing.Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.stash": {
            "name": "stash",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "stash_name": [
                    "str"
                ]
            }
        },
        "Repo.unstash": {
            "name": "unstash",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.ensure": {
            "name": "ensure",
            "location": 175,
            "return": [],
            "arguments": {}
        },
        "Repo.last_commit_msg": {
            "name": "last_commit_msg",
            "location": 185,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.untracked_files": {
            "name": "untracked_files",
            "location": 194,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.status": {
            "name": "status",
            "location": 203,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.list_staged_files": {
            "name": "list_staged_files",
            "location": 212,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.index_is_empty": {
            "name": "index_is_empty",
            "location": 221,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.changed_files": {
            "name": "changed_files",
            "location": 230,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.reset_index": {
            "name": "reset_index",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.stage_all": {
            "name": "stage_all",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.stage_modified": {
            "name": "stage_modified",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.stage_subset": {
            "name": "stage_subset",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.add_skip_ci_to_commit_msg": {
            "name": "add_skip_ci_to_commit_msg",
            "location": 271,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "Repo._sanitize_files_to_add": {
            "name": "_sanitize_files_to_add",
            "location": 289,
            "return": [
                "typing.Optional[typing.List[str]]"
            ],
            "arguments": {
                "files_to_add": [
                    "typing.Optional[typing.Union[(typing.List[str], str)]]"
                ]
            }
        },
        "Repo.commit": {
            "name": "commit",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "files_to_add": [
                    "typing.Optional[typing.Union[(typing.List[str], str)]]"
                ],
                "allow_empty": [
                    "bool"
                ]
            }
        },
        "Repo._sanitize_amend_commit_message": {
            "name": "_sanitize_amend_commit_message",
            "location": 343,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "append_to_msg": [
                    "typing.Optional[str]"
                ],
                "new_message": [
                    "typing.Optional[str]"
                ],
                "previous_message": [
                    "str"
                ]
            }
        },
        "Repo.amend_commit": {
            "name": "amend_commit",
            "location": 366,
            "return": [],
            "arguments": {
                "self": [],
                "append_to_msg": [
                    "typing.Optional[str]"
                ],
                "new_message": [
                    "typing.Optional[str]"
                ],
                "files_to_add": [
                    "typing.Optional[typing.Union[(typing.List[str], str)]]"
                ]
            }
        },
        "Repo.merge": {
            "name": "merge",
            "location": 419,
            "return": [],
            "arguments": {
                "self": [],
                "ref_name": [
                    "str"
                ]
            }
        },
        "Repo.push": {
            "name": "push",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "set_upstream": [
                    "bool"
                ]
            }
        },
        "Repo.push_tags": {
            "name": "push_tags",
            "location": 447,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.list_branches": {
            "name": "list_branches",
            "location": 455,
            "return": [
                "typing.List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.get_sha": {
            "name": "get_sha",
            "location": 464,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.get_short_sha": {
            "name": "get_short_sha",
            "location": 473,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo._validate_branch_name": {
            "name": "_validate_branch_name",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": [
                    "str"
                ]
            }
        },
        "Repo.checkout": {
            "name": "checkout",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "reference": [
                    "str"
                ]
            }
        },
        "Repo.create_branch": {
            "name": "create_branch",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": [
                    "str"
                ]
            }
        },
        "Repo.create_branch_and_checkout": {
            "name": "create_branch_and_checkout",
            "location": 534,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": [
                    "str"
                ]
            }
        },
        "Repo.is_dirty": {
            "name": "is_dirty",
            "location": 544,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "untracked": []
            }
        }
    },
    "epab-master/epab/utils/_resource_path.py": {
        "_get_from_dev": {
            "name": "_get_from_dev",
            "location": 13,
            "return": [
                "Path"
            ],
            "arguments": {
                "package_name": [
                    "str"
                ],
                "relative_path": [
                    "Path"
                ]
            }
        },
        "_get_from_sys": {
            "name": "_get_from_sys",
            "location": 17,
            "return": [
                "Path"
            ],
            "arguments": {
                "_": [
                    "str"
                ],
                "relative_path": [
                    "Path"
                ]
            }
        },
        "_get_from_package": {
            "name": "_get_from_package",
            "location": 21,
            "return": [
                "Path"
            ],
            "arguments": {
                "package_name": [
                    "str"
                ],
                "relative_path": [
                    "Path"
                ]
            }
        },
        "resource_path": {
            "name": "resource_path",
            "location": 25,
            "return": [
                "Path"
            ],
            "arguments": {
                "package_name": [
                    "str"
                ],
                "relative_path": [
                    "typing.Union[(str, Path)]"
                ]
            }
        }
    },
    "epab-master/epab/utils/_run_once.py": {
        "run_once": {
            "name": "run_once",
            "location": 13,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "run_once._inner": {
            "name": "_inner",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/utils/_stashed.py": {
        "stashed": {
            "name": "stashed",
            "location": 11,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "stashed._wrapper": {
            "name": "_wrapper",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/utils/_timeit.py": {
        "timeit": {
            "name": "timeit",
            "location": 12,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "timeit._wrapper": {
            "name": "_wrapper",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/epab/utils/__init__.py": {},
    "epab-master/test/conftest.py": {
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 17,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "pytest_unconfigure": {
            "name": "pytest_unconfigure",
            "location": 29,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 35,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "pytest_runtest_setup": {
            "name": "pytest_runtest_setup",
            "location": 40,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "_global_tear_down": {
            "name": "_global_tear_down",
            "location": 47,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "monkeypatch": []
            }
        },
        "_logging": {
            "name": "_logging",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "_mockito": {
            "name": "_mockito",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "_clean_os_env": {
            "name": "_clean_os_env",
            "location": 89,
            "return": [],
            "arguments": {}
        },
        "dummy_git_repo": {
            "name": "dummy_git_repo",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "cli_runner": {
            "name": "cli_runner",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "dummy_git_repo._create": {
            "name": "_create",
            "location": 106,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_imports.py": {
        "patch_version": {
            "name": "patch_version",
            "location": 16,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_imports": {
            "name": "test_imports",
            "location": 23,
            "return": [],
            "arguments": {
                "module": []
            }
        },
        "test_imports_tests": {
            "name": "test_imports_tests",
            "location": 32,
            "return": [],
            "arguments": {
                "module": []
            }
        }
    },
    "epab-master/test/test_main.py": {
        "_succesfull_run": {
            "name": "_succesfull_run",
            "location": 19,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "_check_runner_result": {
            "name": "_check_runner_result",
            "location": 32,
            "return": [],
            "arguments": {
                "cmd": []
            }
        },
        "test_version": {
            "name": "test_version",
            "location": 41,
            "return": [],
            "arguments": {
                "param": []
            }
        },
        "test_next_version": {
            "name": "test_next_version",
            "location": 53,
            "return": [],
            "arguments": {
                "param": []
            }
        },
        "test_dirty": {
            "name": "test_dirty",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "test_stash_safety": {
            "name": "test_stash_safety",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "test_no_stash": {
            "name": "test_no_stash",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "test_pylint": {
            "name": "test_pylint",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "test_safety": {
            "name": "test_safety",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "test_lint": {
            "name": "test_lint",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "test_reqs": {
            "name": "test_reqs",
            "location": 152,
            "return": [],
            "arguments": {}
        },
        "test_mypy": {
            "name": "test_mypy",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "test_bandit": {
            "name": "test_bandit",
            "location": 169,
            "return": [],
            "arguments": {}
        },
        "test_reqs_changed": {
            "name": "test_reqs_changed",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "test_release": {
            "name": "test_release",
            "location": 202,
            "return": [],
            "arguments": {}
        },
        "test_chglog": {
            "name": "test_chglog",
            "location": 210,
            "return": [],
            "arguments": {}
        },
        "test_chglog_changed": {
            "name": "test_chglog_changed",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "test_pytest": {
            "name": "test_pytest",
            "location": 233,
            "return": [],
            "arguments": {}
        },
        "test_install_hooks": {
            "name": "test_install_hooks",
            "location": 241,
            "return": [],
            "arguments": {}
        },
        "test_dead_fixtures": {
            "name": "test_dead_fixtures",
            "location": 249,
            "return": [],
            "arguments": {}
        },
        "test_setup_config": {
            "name": "test_setup_config",
            "location": 257,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/__init__.py": {},
    "epab-master/test/test_cmd/test_changelog.py": {
        "test_changelog_config_disabled": {
            "name": "test_changelog_config_disabled",
            "location": 24,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_changelog": {
            "name": "test_changelog",
            "location": 44,
            "return": [],
            "arguments": {
                "src": [],
                "result": [],
                "caplog": []
            }
        },
        "test_straight_commit": {
            "name": "test_straight_commit",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_commit_amend": {
            "name": "test_commit_amend",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_flags_exclusion": {
            "name": "test_flags_exclusion",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "test_next_version": {
            "name": "test_next_version",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_auto_next_version": {
            "name": "test_auto_next_version",
            "location": 93,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_cmd/test_compile_qt_resources.py": {
        "test_compile_qt_resources": {
            "name": "test_compile_qt_resources",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_cmd/test_freeze.py": {
        "test_freeze_cli": {
            "name": "test_freeze_cli",
            "location": 17,
            "return": [],
            "arguments": {
                "cli_runner": []
            }
        },
        "test_freeze": {
            "name": "test_freeze",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_freeze_no_entry_point": {
            "name": "test_freeze_no_entry_point",
            "location": 34,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_patch": {
            "name": "test_patch",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_install_pyinstaller_installed": {
            "name": "test_install_pyinstaller_installed",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "test_install_pyinstaller_not_installed": {
            "name": "test_install_pyinstaller_not_installed",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "test_clean_spec": {
            "name": "test_clean_spec",
            "location": 85,
            "return": [],
            "arguments": {
                "cli_runner": []
            }
        },
        "test_with_data_files": {
            "name": "test_with_data_files",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "test_format_data_file": {
            "name": "test_format_data_file",
            "location": 122,
            "return": [],
            "arguments": {
                "data_file_src": [],
                "expected": []
            }
        }
    },
    "epab-master/test/test_cmd/test_git_hooks.py": {
        "test_git_hooks_venv": {
            "name": "test_git_hooks_venv",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_git_hooks": {
            "name": "test_git_hooks",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_cmd/test_linters.py": {
        "_all": {
            "name": "_all",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "_check_invocations": {
            "name": "_check_invocations",
            "location": 24,
            "return": [],
            "arguments": {
                "context": [],
                "amend": [],
                "stage": []
            }
        },
        "test_lint": {
            "name": "test_lint",
            "location": 42,
            "return": [],
            "arguments": {
                "amend_stage": []
            }
        },
        "test_lint_appveyor": {
            "name": "test_lint_appveyor",
            "location": 53,
            "return": [],
            "arguments": {
                "amend_stage": []
            }
        },
        "test_isort_package_dir": {
            "name": "test_isort_package_dir",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_isort_test_dir": {
            "name": "test_isort_test_dir",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "test_isort_ignore": {
            "name": "test_isort_ignore",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_isort_amend": {
            "name": "test_isort_amend",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "test_isort_stage": {
            "name": "test_isort_stage",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "test_safety": {
            "name": "test_safety",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "test_pylint": {
            "name": "test_pylint",
            "location": 130,
            "return": [],
            "arguments": {
                "params": [],
                "cmd": []
            }
        },
        "test_dead_fixtures": {
            "name": "test_dead_fixtures",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "test_bandit": {
            "name": "test_bandit",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "test_mypy": {
            "name": "test_mypy",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "test_mypy_fails": {
            "name": "test_mypy_fails",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "test_mypy_config": {
            "name": "test_mypy_config",
            "location": 162,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_cmd/test_push.py": {
        "test_push": {
            "name": "test_push",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_cmd/test_release.py": {
        "_create_dummy_release_artifacts": {
            "name": "_create_dummy_release_artifacts",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_release": {
            "name": "test_release",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_release_on_master": {
            "name": "test_release_on_master",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_dirty_initial_check": {
            "name": "test_dirty_initial_check",
            "location": 64,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_dirty_after_lint": {
            "name": "test_dirty_after_lint",
            "location": 76,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_dirty_final_check": {
            "name": "test_dirty_final_check",
            "location": 91,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_cleanup": {
            "name": "test_cleanup",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "test_appveyor": {
            "name": "test_appveyor",
            "location": 117,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_appveyor_artifacts": {
            "name": "test_appveyor_artifacts",
            "location": 143,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_appveyor_no_artifacts": {
            "name": "test_appveyor_no_artifacts",
            "location": 176,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "epab-master/test/test_cmd/test_requirements.py": {
        "_all": {
            "name": "_all",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_empty_requirements": {
            "name": "test_empty_requirements",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_requirements_no_dev_packages": {
            "name": "test_requirements_no_dev_packages",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_requirements_with_dev_packages": {
            "name": "test_requirements_with_dev_packages",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "test_requirements_run_invocation": {
            "name": "test_requirements_run_invocation",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "test_requirements_output": {
            "name": "test_requirements_output",
            "location": 69,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_straight_commit": {
            "name": "test_straight_commit",
            "location": 82,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend": {
            "name": "test_commit_amend",
            "location": 92,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_flags_exclusion": {
            "name": "test_flags_exclusion",
            "location": 102,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_cmd/test_test_runner.py": {
        "test_environ": {
            "name": "test_environ",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_coverage_config_creation": {
            "name": "test_coverage_config_creation",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_coverage_config_removal_despite_error": {
            "name": "test_coverage_config_removal_despite_error",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "test_cmd": {
            "name": "test_cmd",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "test_cmd_with_coverage": {
            "name": "test_cmd_with_coverage",
            "location": 58,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "caplog": []
            }
        },
        "test_cmd_with_coverage_no_xml": {
            "name": "test_cmd_with_coverage_no_xml",
            "location": 73,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "caplog": []
            }
        },
        "test_long": {
            "name": "test_long",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_show": {
            "name": "test_show",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "test_config_exit_first": {
            "name": "test_config_exit_first",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "test_config_last_failed": {
            "name": "test_config_last_failed",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "test_config_failed_first": {
            "name": "test_config_failed_first",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "test_output": {
            "name": "test_output",
            "location": 125,
            "return": [],
            "arguments": {
                "capsys": [],
                "caplog": []
            }
        },
        "test_output_on_appveyor": {
            "name": "test_output_on_appveyor",
            "location": 137,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_config_show": {
            "name": "test_config_show",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "test_config_appveyor": {
            "name": "test_config_appveyor",
            "location": 153,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_remove_coverage_dir_disabled": {
            "name": "test_remove_coverage_dir_disabled",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "test_remove_coverage": {
            "name": "test_remove_coverage",
            "location": 171,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_repo/conftest.py": {
        "pytest_collection_modifyitems": {
            "name": "pytest_collection_modifyitems",
            "location": 14,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "repo": {
            "name": "repo",
            "location": 21,
            "return": [],
            "arguments": {
                "dummy_git_repo": []
            }
        },
        "file_set": {
            "name": "file_set",
            "location": 28,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "epab-master/test/test_repo/test_branch.py": {
        "test_list_branches": {
            "name": "test_list_branches",
            "location": 5,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_active_branch": {
            "name": "test_active_branch",
            "location": 9,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_create_branch_and_checkout": {
            "name": "test_create_branch_and_checkout",
            "location": 17,
            "return": [],
            "arguments": {
                "repo": [],
                "branch": []
            }
        },
        "test_create_branch_invalid_name": {
            "name": "test_create_branch_invalid_name",
            "location": 31,
            "return": [],
            "arguments": {
                "repo": [],
                "branch": []
            }
        },
        "test_create_branch": {
            "name": "test_create_branch",
            "location": 36,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_checkout.py": {
        "test_checkout": {
            "name": "test_checkout",
            "location": 7,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_checkout_dirty": {
            "name": "test_checkout_dirty",
            "location": 17,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_checkout_dry": {
            "name": "test_checkout_dry",
            "location": 31,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_commit.py": {
        "_dummy_commit": {
            "name": "_dummy_commit",
            "location": 9,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit": {
            "name": "test_commit",
            "location": 17,
            "return": [],
            "arguments": {
                "repo": [],
                "message": []
            }
        },
        "test_empty_commit_message": {
            "name": "test_empty_commit_message",
            "location": 27,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_empty_commit": {
            "name": "test_empty_commit",
            "location": 33,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_appveyor": {
            "name": "test_commit_appveyor",
            "location": 40,
            "return": [],
            "arguments": {
                "repo": [],
                "monkeypatch": []
            }
        },
        "test_commit_subset": {
            "name": "test_commit_subset",
            "location": 46,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test_commit_amend_new_message": {
            "name": "test_commit_amend_new_message",
            "location": 61,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend_append_message": {
            "name": "test_commit_amend_append_message",
            "location": 69,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend_with_tag": {
            "name": "test_commit_amend_with_tag",
            "location": 80,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_amend_commit_add_files": {
            "name": "test_amend_commit_add_files",
            "location": 95,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend_root_commit": {
            "name": "test_commit_amend_root_commit",
            "location": 108,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend_wrong_params": {
            "name": "test_commit_amend_wrong_params",
            "location": 115,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_commit_amend_appveyor": {
            "name": "test_commit_amend_appveyor",
            "location": 122,
            "return": [],
            "arguments": {
                "repo": [],
                "monkeypatch": []
            }
        },
        "test_make_skip_ci_commit": {
            "name": "test_make_skip_ci_commit",
            "location": 131,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test__sanitize_amend_commit_message": {
            "name": "test__sanitize_amend_commit_message",
            "location": 138,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_index.py": {
        "test_stage_all": {
            "name": "test_stage_all",
            "location": 4,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test_stage_subset": {
            "name": "test_stage_subset",
            "location": 13,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test_stage_updated": {
            "name": "test_stage_updated",
            "location": 24,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test__sanitize_files_to_add": {
            "name": "test__sanitize_files_to_add",
            "location": 37,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_merge.py": {
        "test_merge": {
            "name": "test_merge",
            "location": 7,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_merge_dry_run": {
            "name": "test_merge_dry_run",
            "location": 19,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_merge_dirty": {
            "name": "test_merge_dirty",
            "location": 27,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_repo.py": {
        "test_ensure": {
            "name": "test_ensure",
            "location": 11,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_git_init": {
            "name": "test_git_init",
            "location": 19,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_push": {
            "name": "test_push",
            "location": 25,
            "return": [],
            "arguments": {
                "dummy_git_repo": []
            }
        },
        "test_list_of_untracked_files": {
            "name": "test_list_of_untracked_files",
            "location": 46,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test_list_of_changed_files": {
            "name": "test_list_of_changed_files",
            "location": 53,
            "return": [],
            "arguments": {
                "repo": [],
                "file_set": []
            }
        },
        "test_dirty_repo": {
            "name": "test_dirty_repo",
            "location": 69,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_status": {
            "name": "test_status",
            "location": 86,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_repo/test_stash.py": {
        "test_stash": {
            "name": "test_stash",
            "location": 12,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_unstash": {
            "name": "test_unstash",
            "location": 21,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_stash_decorator": {
            "name": "test_stash_decorator",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_stash_decorator_disabled": {
            "name": "test_stash_decorator_disabled",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_stash_untracked_files": {
            "name": "test_stash_untracked_files",
            "location": 59,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_stash_modified_index": {
            "name": "test_stash_modified_index",
            "location": 65,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_already_stashed": {
            "name": "test_already_stashed",
            "location": 74,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_stash_decorator._func": {
            "name": "_func",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_stash_decorator_disabled._func": {
            "name": "_func",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_repo/test_tag.py": {
        "test_tag": {
            "name": "test_tag",
            "location": 8,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_get_current_tag": {
            "name": "test_get_current_tag",
            "location": 19,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_existing_tag": {
            "name": "test_existing_tag",
            "location": 28,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_list_tags_no_tags": {
            "name": "test_list_tags_no_tags",
            "location": 39,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_list_tags": {
            "name": "test_list_tags",
            "location": 45,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_list_of_tags_pattern": {
            "name": "test_list_of_tags_pattern",
            "location": 53,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_utils/test_av.py": {
        "test_av_info": {
            "name": "test_av_info",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_av_info_details": {
            "name": "test_av_info_details",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_av_error": {
            "name": "test_av_error",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_av_error_details": {
            "name": "test_av_error_details",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_av_unknown_level": {
            "name": "test_av_unknown_level",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_update_build_version": {
            "name": "test_update_build_version",
            "location": 46,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_utils/test_exe_version.py": {
        "test_exe_version": {
            "name": "test_exe_version",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_exe_no_version": {
            "name": "test_exe_no_version",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_exe_missing_attrib": {
            "name": "test_exe_missing_attrib",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_utils/test_resource_path.py": {
        "test_from_dev": {
            "name": "test_from_dev",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_from_sys": {
            "name": "test_from_sys",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_from_package": {
            "name": "test_from_package",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_not_found": {
            "name": "test_not_found",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "epab-master/test/test_utils/test_next_version/conftest.py": {
        "_git_repo": {
            "name": "_git_repo",
            "location": 62,
            "return": [],
            "arguments": {
                "request": [],
                "dummy_git_repo": [],
                "monkeypatch": []
            }
        },
        "Repo.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repo.commit": {
            "name": "commit",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "files_to_add": [
                    "typing.Optional[typing.Union[(typing.List[str], str)]]"
                ],
                "allow_empty": [
                    "bool"
                ]
            }
        },
        "Repo.merge": {
            "name": "merge",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "ref_name": [
                    "str"
                ]
            }
        },
        "Repo.checkout": {
            "name": "checkout",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "reference": []
            }
        },
        "Repo.create_branch_and_checkout": {
            "name": "create_branch_and_checkout",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "branch_name": []
            }
        },
        "Repo.tag": {
            "name": "tag",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "overwrite": [
                    "bool"
                ]
            }
        },
        "Repo.mark": {
            "name": "mark",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_calver.py": {
        "test_calver": {
            "name": "test_calver",
            "location": 15,
            "return": [],
            "arguments": {
                "year": [],
                "month": [],
                "day": []
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_get_current_calver_tags.py": {
        "test_get_current_calver_tags": {
            "name": "test_get_current_calver_tags",
            "location": 9,
            "return": [],
            "arguments": {
                "repo": [
                    "epab.utils.Repo"
                ]
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_get_next_version.py": {
        "_mock_calver": {
            "name": "_mock_calver",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "_check_next_version": {
            "name": "_check_next_version",
            "location": 17,
            "return": [],
            "arguments": {
                "repo": [],
                "expected_version": []
            }
        },
        "test_next_version_empty_repo": {
            "name": "test_next_version_empty_repo",
            "location": 24,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_version_stable": {
            "name": "test_next_version_stable",
            "location": 30,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_version_stable_older_calver": {
            "name": "test_next_version_stable_older_calver",
            "location": 36,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_version_alpha_empty_repo": {
            "name": "test_next_version_alpha_empty_repo",
            "location": 44,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_version_alpha": {
            "name": "test_next_version_alpha",
            "location": 51,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_next_alpha_version.py": {
        "_check_next_version": {
            "name": "_check_next_version",
            "location": 8,
            "return": [],
            "arguments": {
                "repo": [],
                "expected_version": [],
                "calver": []
            }
        },
        "test_next_alpha_version": {
            "name": "test_next_alpha_version",
            "location": 17,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_alpha_version_with_existing_version": {
            "name": "test_next_alpha_version_with_existing_version",
            "location": 24,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_mixed_version": {
            "name": "test_next_stable_version_with_existing_mixed_version",
            "location": 32,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_alpha": {
            "name": "test_next_stable_version_with_existing_alpha",
            "location": 42,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_mixed_alpha": {
            "name": "test_next_stable_version_with_existing_mixed_alpha",
            "location": 52,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_next_stable_version.py": {
        "_check_next_version": {
            "name": "_check_next_version",
            "location": 8,
            "return": [],
            "arguments": {
                "repo": [],
                "expected_version": [],
                "calver": []
            }
        },
        "test_next_stable_version": {
            "name": "test_next_stable_version",
            "location": 16,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_version": {
            "name": "test_next_stable_version_with_existing_version",
            "location": 22,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_mixed_version": {
            "name": "test_next_stable_version_with_existing_mixed_version",
            "location": 29,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_alpha": {
            "name": "test_next_stable_version_with_existing_alpha",
            "location": 38,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_next_stable_version_with_existing_mixed_alpha": {
            "name": "test_next_stable_version_with_existing_mixed_alpha",
            "location": 47,
            "return": [],
            "arguments": {
                "repo": []
            }
        },
        "test_mismatched_tags": {
            "name": "test_mismatched_tags",
            "location": 65,
            "return": [],
            "arguments": {
                "repo": []
            }
        }
    },
    "epab-master/test/test_utils/test_next_version/test_next_version_tag.py": {
        "_check_types": {
            "name": "_check_types",
            "location": 7,
            "return": [],
            "arguments": {
                "tag": [
                    "nv.Tag"
                ]
            }
        },
        "test_version_tag": {
            "name": "test_version_tag",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_version_tag_alpha": {
            "name": "test_version_tag_alpha",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_version_tag_wrong_value": {
            "name": "test_version_tag_wrong_value",
            "location": 38,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "test_version_tag_wrong_type": {
            "name": "test_version_tag_wrong_type",
            "location": 47,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    }
}
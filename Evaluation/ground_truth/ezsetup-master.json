{
    "ezsetup-master/api/app.py": {},
    "ezsetup-master/api/create_root.py": {},
    "ezsetup-master/api/find_image_by_name.py": {},
    "ezsetup-master/api/helpers.py": {
        "get_user_info": {
            "name": "get_user_info",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/manage.py": {
        "create_root": {
            "name": "create_root",
            "location": 8,
            "return": [],
            "arguments": {
                "email": [],
                "password": [],
                "fullname": []
            }
        },
        "delete_user": {
            "name": "delete_user",
            "location": 21,
            "return": [],
            "arguments": {
                "email": []
            }
        }
    },
    "ezsetup-master/api/models.py": {},
    "ezsetup-master/api/permission.py": {
        "Permission.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource_class_name": [
                    "str"
                ],
                "method_name": [
                    "str"
                ]
            }
        },
        "Permission.equals": {
            "name": "equals",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "resource_class_name": [
                    "str"
                ],
                "method_name": [
                    "str"
                ]
            }
        },
        "PermissionGroup.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PermissionGroup.add": {
            "name": "add",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "resource_class_name": [],
                "method_name": []
            }
        },
        "PermissionGroup.contains": {
            "name": "contains",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "resource_class_name": [
                    "str"
                ],
                "method_name": [
                    "str"
                ]
            }
        }
    },
    "ezsetup-master/api/redisdb.py": {},
    "ezsetup-master/api/testraven.py": {},
    "ezsetup-master/api/tryboto3.py": {},
    "ezsetup-master/api/api/cloudconfig.py": {
        "Cloudconfigs.post": {
            "name": "post",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/api/configuration.py": {
        "Configurations.index": {
            "name": "index",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/api/flavor.py": {
        "Flavors.index": {
            "name": "index",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/api/scenario.py": {
        "_get_scenarios_private_only": {
            "name": "_get_scenarios_private_only",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "validate_network": {
            "name": "validate_network",
            "location": 26,
            "return": [
                "Tuple[(bool, List[str])]"
            ],
            "arguments": {
                "network_config": [
                    "dict"
                ]
            }
        },
        "validate_instance": {
            "name": "validate_instance",
            "location": 49,
            "return": [
                "Tuple[(bool, List[str])]"
            ],
            "arguments": {
                "instance_config": [
                    "dict"
                ]
            }
        },
        "validate_router": {
            "name": "validate_router",
            "location": 69,
            "return": [
                "Tuple[(bool, List[str])]"
            ],
            "arguments": {
                "router_config": [
                    "dict"
                ]
            }
        },
        "validate_links": {
            "name": "validate_links",
            "location": 89,
            "return": [
                "Tuple[(bool, List[str])]"
            ],
            "arguments": {
                "topo": [
                    "dict"
                ]
            }
        },
        "validate_topo": {
            "name": "validate_topo",
            "location": 159,
            "return": [
                "Tuple[(bool, List[str])]"
            ],
            "arguments": {
                "topo": [
                    "dict"
                ]
            }
        },
        "Scenarios.get": {
            "name": "get",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Scenarios.post": {
            "name": "post",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenarios.patch": {
            "name": "patch",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Scenarios.index": {
            "name": "index",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenarios.delete": {
            "name": "delete",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        }
    },
    "ezsetup-master/api/api/slice.py": {
        "Slices.get": {
            "name": "get",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Slices.index": {
            "name": "index",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/api/test_scenario.py": {
        "test_network_validation": {
            "name": "test_network_validation",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_instance_validation": {
            "name": "test_instance_validation",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_router_validation": {
            "name": "test_router_validation",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "test_link_validation": {
            "name": "test_link_validation",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "test_topo_validation": {
            "name": "test_topo_validation",
            "location": 168,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/api/user.py": {
        "Users.index": {
            "name": "index",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Users.get": {
            "name": "get",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Users.patch": {
            "name": "patch",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Users.delete": {
            "name": "delete",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Users.post": {
            "name": "post",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Users.get_self": {
            "name": "get_self",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Users.search": {
            "name": "search",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/api/__init__.py": {
        "_get_permission_group": {
            "name": "_get_permission_group",
            "location": 54,
            "return": [
                "PermissionGroup"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "_has_permission": {
            "name": "_has_permission",
            "location": 61,
            "return": [
                "bool"
            ],
            "arguments": {
                "permission_group_names": [
                    "List[str]"
                ],
                "resource_cls_name": [
                    "str"
                ],
                "method_name": [
                    "str"
                ]
            }
        },
        "permission_required": {
            "name": "permission_required",
            "location": 74,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "register": {
            "name": "register",
            "location": 94,
            "return": [],
            "arguments": {
                "app": [],
                "resource_classes": [
                    "List"
                ],
                "route_prefix": [
                    "str"
                ]
            }
        },
        "permission_required.decorated_function": {
            "name": "decorated_function",
            "location": 78,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/api/lab/helpers.py": {
        "randomword": {
            "name": "randomword",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {
                "length": [
                    "int"
                ]
            }
        }
    },
    "ezsetup-master/api/api/lab/__init__.py": {
        "_deploy_openstack": {
            "name": "_deploy_openstack",
            "location": 108,
            "return": [],
            "arguments": {
                "lab_id": [],
                "cloudconfig": [],
                "slices": [],
                "scenario": []
            }
        },
        "_destroy_openstack": {
            "name": "_destroy_openstack",
            "location": 144,
            "return": [],
            "arguments": {
                "lab_id": [],
                "cloudconfig": []
            }
        },
        "Labs.post": {
            "name": "post",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Labs.index": {
            "name": "index",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Labs.get": {
            "name": "get",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Labs.deploy": {
            "name": "deploy",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Labs.destroy": {
            "name": "destroy",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        }
    },
    "ezsetup-master/api/auth/decorators.py": {
        "login_required": {
            "name": "login_required",
            "location": 8,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "login_required.decorated_function": {
            "name": "decorated_function",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/auth/models.py": {},
    "ezsetup-master/api/auth/views.py": {
        "post_user": {
            "name": "post_user",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "_delete": {
            "name": "_delete",
            "location": 43,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "post_token": {
            "name": "post_token",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "_delete_token": {
            "name": "_delete_token",
            "location": 80,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/auth/__init__.py": {},
    "ezsetup-master/api/backgroundjobs/openstackjobs.py": {
        "create_sec_group": {
            "name": "create_sec_group",
            "location": 14,
            "return": [],
            "arguments": {
                "cloudconfig": [
                    "CloudConfig"
                ],
                "lab_id": [],
                "lab_slice": [
                    "Slice"
                ],
                "scenario": []
            }
        },
        "delete_sec_group": {
            "name": "delete_sec_group",
            "location": 34,
            "return": [],
            "arguments": {
                "cloudconfig": [
                    "CloudConfig"
                ],
                "lab_id": [],
                "lab_slice": [
                    "Slice"
                ]
            }
        },
        "create_vpc": {
            "name": "create_vpc",
            "location": 50,
            "return": [],
            "arguments": {
                "cloudconfig": [
                    "CloudConfig"
                ],
                "lab_id": []
            }
        },
        "delete_vpc": {
            "name": "delete_vpc",
            "location": 73,
            "return": [],
            "arguments": {
                "cloudconfig": [
                    "CloudConfig"
                ],
                "lab_id": []
            }
        },
        "set_lab_active": {
            "name": "set_lab_active",
            "location": 90,
            "return": [],
            "arguments": {
                "lab_id": [],
                "last_jobs_ids": []
            }
        },
        "delete_lab": {
            "name": "delete_lab",
            "location": 116,
            "return": [],
            "arguments": {
                "lab_id": [],
                "last_jobs_ids": []
            }
        },
        "create_networks": {
            "name": "create_networks",
            "location": 150,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": [],
                "topo": []
            }
        },
        "delete_networks": {
            "name": "delete_networks",
            "location": 186,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": []
            }
        },
        "create_instances": {
            "name": "create_instances",
            "location": 236,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": [],
                "topo": [],
                "create_sec_group_job_id": []
            }
        },
        "delete_instances": {
            "name": "delete_instances",
            "location": 296,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": []
            }
        },
        "create_routers": {
            "name": "create_routers",
            "location": 345,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": [],
                "topo": [],
                "create_sec_group_job_id": []
            }
        },
        "delete_routers": {
            "name": "delete_routers",
            "location": 407,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": []
            }
        },
        "update_allowed_address_pairs": {
            "name": "update_allowed_address_pairs",
            "location": 428,
            "return": [],
            "arguments": {
                "cloudconfig": [],
                "lab_id": [],
                "lab_slice": [],
                "topo": []
            }
        },
        "set_slice_active": {
            "name": "set_slice_active",
            "location": 477,
            "return": [],
            "arguments": {
                "lab_id": [],
                "lab_slice": []
            }
        },
        "_add_security_group_rule": {
            "name": "_add_security_group_rule",
            "location": 489,
            "return": [],
            "arguments": {
                "openstack": [
                    "Openstack"
                ],
                "security_group_id": [],
                "rule": [
                    "str"
                ]
            }
        },
        "_extract_links": {
            "name": "_extract_links",
            "location": 548,
            "return": [
                "List"
            ],
            "arguments": {
                "instance": [
                    "Dict[(str, Any)]"
                ],
                "topo": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "_extract_configurations": {
            "name": "_extract_configurations",
            "location": 557,
            "return": [
                "Tuple[(List[Dict[(str, Any)]], str)]"
            ],
            "arguments": {
                "lab_id": [],
                "slice": [
                    "Slice"
                ],
                "instance": [
                    "Dict[(str, Any)]"
                ],
                "topo": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "_extract_static_route": {
            "name": "_extract_static_route",
            "location": 591,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "instance": [
                    "Dict[(str, Any)]"
                ],
                "topo": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "CreateNetThread.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "net": []
            }
        },
        "CreateNetThread.run": {
            "name": "run",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteNetworkThread.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "net": []
            }
        },
        "DeleteNetworkThread.run": {
            "name": "run",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateInstanceThread.__init__": {
            "name": "__init__",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "lab_id": [],
                "instance": [],
                "lab_slice": [],
                "sec_group_id": []
            }
        },
        "CreateInstanceThread.run": {
            "name": "run",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteInstanceThread.__init__": {
            "name": "__init__",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "lab_id": [],
                "instance": []
            }
        },
        "DeleteInstanceThread.run": {
            "name": "run",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateRouterThread.__init__": {
            "name": "__init__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "lab_id": [],
                "router": [],
                "lab_slice": [],
                "sec_group_id": []
            }
        },
        "CreateRouterThread.run": {
            "name": "run",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteRouterThread.__init__": {
            "name": "__init__",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "openstack": [],
                "lab_id": [],
                "router": []
            }
        },
        "DeleteRouterThread.run": {
            "name": "run",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ezsetup-master/api/backgroundjobs/settings.py": {},
    "ezsetup-master/api/backgroundjobs/tests.py": {},
    "ezsetup-master/api/backgroundjobs/__init__.py": {},
    "ezsetup-master/api/cloudops/test_cloudops.py": {
        "test_generate_userdata_password": {
            "name": "test_generate_userdata_password",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_generate_userdata_two_configs": {
            "name": "test_generate_userdata_two_configs",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/cloudops/__init__.py": {
        "CloudOps.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "provider_name": [
                    "str"
                ],
                "detail": []
            }
        },
        "CloudOps.test_connection": {
            "name": "test_connection",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CloudOps.create_network": {
            "name": "create_network",
            "location": 49,
            "return": [
                "object"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "cidr": []
            }
        },
        "CloudOps.delete_network": {
            "name": "delete_network",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [
                    "dict"
                ]
            }
        },
        "CloudOps.create_instance": {
            "name": "create_instance",
            "location": 63,
            "return": [
                "Tuple[(str, object)]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "configurations": [],
                "sec_group_id": [],
                "image_name": [
                    "str"
                ],
                "flavor": [
                    "dict"
                ]
            }
        },
        "CloudOps.create_router": {
            "name": "create_router",
            "location": 77,
            "return": [
                "Tuple[(str, object)]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "configurations": [],
                "sec_group_id": [],
                "image_name": [
                    "str"
                ],
                "flavor": [
                    "dict"
                ]
            }
        },
        "CloudOps.delete_instance": {
            "name": "delete_instance",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [
                    "dict"
                ]
            }
        },
        "CloudOps.ex_create_vpc": {
            "name": "ex_create_vpc",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "CloudOps.ex_delete_vpc": {
            "name": "ex_delete_vpc",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "cloud_detail": [
                    "dict"
                ]
            }
        },
        "CloudOps.ex_create_security_group": {
            "name": "ex_create_security_group",
            "location": 107,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "CloudOps.ex_create_security_group_rule": {
            "name": "ex_create_security_group_rule",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "security_group_id": []
            }
        },
        "CloudOps.ex_delete_security_group": {
            "name": "ex_delete_security_group",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "id": [
                    "str"
                ]
            }
        },
        "CloudOps.update_allowed_address_pairs": {
            "name": "update_allowed_address_pairs",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "network": [],
                "device_id": [],
                "address_pairs": []
            }
        },
        "Openstack.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "auth_url": [],
                "project_name": [],
                "username": [],
                "password": [],
                "keystone_version": [],
                "project_domain_name": [],
                "user_domain_name": []
            }
        },
        "Openstack.test_connection": {
            "name": "test_connection",
            "location": 164,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Openstack.create_security_group_rule": {
            "name": "create_security_group_rule",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "security_group_id": []
            }
        },
        "Openstack.create_security_group": {
            "name": "create_security_group",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Openstack.delete_security_group": {
            "name": "delete_security_group",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Openstack.create_network": {
            "name": "create_network",
            "location": 233,
            "return": [
                "object"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "subnet_cidr": []
            }
        },
        "Openstack.delete_network": {
            "name": "delete_network",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "net_id": [],
                "router_id": []
            }
        },
        "Openstack._find_flavor": {
            "name": "_find_flavor",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Openstack.create_instance": {
            "name": "create_instance",
            "location": 302,
            "return": [
                "Tuple[(str, object)]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "configurations": [],
                "sec_group_id": [],
                "image_name": [],
                "flavor_dict": [
                    "dict"
                ]
            }
        },
        "Openstack.create_router": {
            "name": "create_router",
            "location": 362,
            "return": [
                "Tuple[(str, object)]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "configurations": [],
                "sec_group_id": [],
                "image_name": [
                    "str"
                ],
                "flavor_dict": [
                    "dict"
                ]
            }
        },
        "Openstack.delete_instance": {
            "name": "delete_instance",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Openstack.update_allowed_address_pairs": {
            "name": "update_allowed_address_pairs",
            "location": 439,
            "return": [],
            "arguments": {
                "self": [],
                "network": [],
                "device_id": [],
                "address_pairs": []
            }
        },
        "AWS.__init__": {
            "name": "__init__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "key_id": [],
                "secret": [],
                "region": []
            }
        },
        "AWS.test_connection": {
            "name": "test_connection",
            "location": 455,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AWS.create_vpc": {
            "name": "create_vpc",
            "location": 463,
            "return": [
                "Tuple[(str, str, str)]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "cidr": []
            }
        },
        "AWS.delete_vpc": {
            "name": "delete_vpc",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "vpc_id": [
                    "str"
                ],
                "rt_id": [
                    "str"
                ],
                "ig_id": [
                    "str"
                ]
            }
        },
        "AWS.create_security_group_rule": {
            "name": "create_security_group_rule",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "security_group_id": []
            }
        },
        "AWS.create_security_group": {
            "name": "create_security_group",
            "location": 493,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "AWS.delete_security_group": {
            "name": "delete_security_group",
            "location": 538,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "AWS.create_subnet": {
            "name": "create_subnet",
            "location": 542,
            "return": [
                "object"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "cidr": [
                    "str"
                ]
            }
        },
        "AWS.delete_subnet": {
            "name": "delete_subnet",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "AWS.create_instance": {
            "name": "create_instance",
            "location": 554,
            "return": [
                "Tuple[(str, object)]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "userdata": [],
                "sec_group_id": [],
                "image_name": [],
                "enable_routing": [],
                "flavor_name": []
            }
        },
        "AWS.delete_instance": {
            "name": "delete_instance",
            "location": 592,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "AWS.create_router": {
            "name": "create_router",
            "location": 597,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "networks": [],
                "ips": [],
                "userdata": [],
                "sec_group_id": []
            }
        }
    },
    "ezsetup-master/api/cloudops/configurations/__init__.py": {
        "generate_userdata": {
            "name": "generate_userdata",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "configurations": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        },
        "_get_template_path": {
            "name": "_get_template_path",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "templates": [],
                "name": [
                    "str"
                ]
            }
        },
        "_merge_user_data": {
            "name": "_merge_user_data",
            "location": 33,
            "return": [
                "Dict"
            ],
            "arguments": {
                "old_user_data": [],
                "new_user_data": []
            }
        }
    },
    "ezsetup-master/api/tests/conf.py": {
        "api_headers": {
            "name": "api_headers",
            "location": 61,
            "return": [],
            "arguments": {
                "email": [],
                "token": []
            }
        }
    },
    "ezsetup-master/api/tests/fixtures.py": {
        "_login": {
            "name": "_login",
            "location": 12,
            "return": [
                "Tuple[(str, str, str)]"
            ],
            "arguments": {
                "email": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "_signup_root_user": {
            "name": "_signup_root_user",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "_signup_test_user": {
            "name": "_signup_test_user",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "root_user_fixture": {
            "name": "root_user_fixture",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "ezsetup-master/api/tests/test_auth.py": {
        "test_correct_login": {
            "name": "test_correct_login",
            "location": 6,
            "return": [],
            "arguments": {
                "root_user_fixture": []
            }
        },
        "test_wrong_login": {
            "name": "test_wrong_login",
            "location": 18,
            "return": [],
            "arguments": {
                "root_user_fixture": []
            }
        }
    },
    "ezsetup-master/api/tests/test_lab.py": {
        "post_scenario": {
            "name": "post_scenario",
            "location": 12,
            "return": [],
            "arguments": {
                "root_user_fixture": []
            }
        },
        "post_lab": {
            "name": "post_lab",
            "location": 32,
            "return": [],
            "arguments": {
                "post_scenario": [],
                "root_user_fixture": []
            }
        },
        "test_deploy_destroy_lab": {
            "name": "test_deploy_destroy_lab",
            "location": 53,
            "return": [],
            "arguments": {
                "post_lab": [],
                "root_user_fixture": []
            }
        }
    },
    "ezsetup-master/api/tests/test_scenario.py": {
        "test_create_get_scenario": {
            "name": "test_create_get_scenario",
            "location": 6,
            "return": [],
            "arguments": {
                "root_user_fixture": []
            }
        }
    },
    "ezsetup-master/api/tests/__init__.py": {}
}
{
    "fingerprint-master/build_windows_exe.py": {},
    "fingerprint-master/conftest.py": {
        "pytest_cmdline_preparse": {
            "name": "pytest_cmdline_preparse",
            "location": 7,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "fingerprint-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 20,
            "return": [],
            "arguments": {
                "dist_directory": []
            }
        },
        "is_travis_deploy": {
            "name": "is_travis_deploy",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "strip_links_from_required": {
            "name": "strip_links_from_required",
            "location": 36,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "l_required": [
                    "List[str]"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/fingerprint.py": {
        "get_commandline_parameters": {
            "name": "get_commandline_parameters",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "get_logfile_fullpath": {
            "name": "get_logfile_fullpath",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "fingerprint_result_dir": [
                    "str"
                ],
                "fingerprint_name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [],
            "arguments": {
                "fingerprint_name": [
                    "str"
                ],
                "fingerprint_drive": [
                    "str"
                ],
                "fingerprint_result_dir": [
                    "str"
                ],
                "reg_save_parameters": [
                    "str"
                ],
                "field_length_limit": [
                    "int"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/fingerprint_diff.py": {
        "get_commandline_parameters": {
            "name": "get_commandline_parameters",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "get_logfile_fullpath": {
            "name": "get_logfile_fullpath",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "fingerprint_result_dir": [
                    "str"
                ],
                "fingerprint_name_1": [
                    "str"
                ],
                "fingerprint_name_2": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 53,
            "return": [],
            "arguments": {
                "fingerprint_name_1": [
                    "str"
                ],
                "fingerprint_name_2": [
                    "str"
                ],
                "fingerprint_drive": [
                    "str"
                ],
                "fingerprint_result_dir": [
                    "str"
                ],
                "field_length_limit": [
                    "int"
                ],
                "check_modified": [
                    "bool"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/fingerprint_filter.py": {
        "get_commandline_parameters": {
            "name": "get_commandline_parameters",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "get_logfile_fullpath": {
            "name": "get_logfile_fullpath",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "fingerprint_result_dir": [],
                "procmon_csv": [
                    "str"
                ],
                "fingerprint_file_csv": [
                    "str"
                ],
                "fingerprint_reg_csv": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 66,
            "return": [],
            "arguments": {
                "procmon_csv": [
                    "str"
                ],
                "fingerprint_result_dir": [
                    "str"
                ],
                "fingerprint_file_csv": [
                    "str"
                ],
                "fingerprint_reg_csv": [
                    "str"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/fp.py": {
        "fp": {
            "name": "fp",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "files": {
            "name": "files",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "files_diff": {
            "name": "files_diff",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "reg": {
            "name": "reg",
            "location": 138,
            "return": [],
            "arguments": {}
        },
        "files_save_commandline_options_to_conf": {
            "name": "files_save_commandline_options_to_conf",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "diff_files_save_commandline_options_to_conf": {
            "name": "diff_files_save_commandline_options_to_conf",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "reg_save_commandline_options_to_conf": {
            "name": "reg_save_commandline_options_to_conf",
            "location": 169,
            "return": [],
            "arguments": {}
        },
        "save_common_parameters_to_conf": {
            "name": "save_common_parameters_to_conf",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "check_or_request_fp_file": {
            "name": "check_or_request_fp_file",
            "location": 182,
            "return": [
                "str"
            ],
            "arguments": {
                "f_input_file": [
                    "str"
                ],
                "file_number": [
                    "int"
                ],
                "test_input": [
                    "str"
                ]
            }
        },
        "is_fp_input_file_ok": {
            "name": "is_fp_input_file_ok",
            "location": 218,
            "return": [
                "bool"
            ],
            "arguments": {
                "f_path": [
                    "str"
                ]
            }
        },
        "check_or_request_f_output": {
            "name": "check_or_request_f_output",
            "location": 240,
            "return": [],
            "arguments": {
                "test_input": [
                    "str"
                ]
            }
        },
        "check_or_request_fp_dir": {
            "name": "check_or_request_fp_dir",
            "location": 273,
            "return": [],
            "arguments": {
                "test_input": [
                    "str"
                ]
            }
        },
        "is_fp_dir_ok": {
            "name": "is_fp_dir_ok",
            "location": 310,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_f_output_ok": {
            "name": "is_f_output_ok",
            "location": 330,
            "return": [
                "bool"
            ],
            "arguments": {
                "f_path": [
                    "str"
                ]
            }
        },
        "log_files_parameter": {
            "name": "log_files_parameter",
            "location": 347,
            "return": [],
            "arguments": {}
        },
        "log_files_diff_parameter": {
            "name": "log_files_diff_parameter",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "log_reg_parameter": {
            "name": "log_reg_parameter",
            "location": 360,
            "return": [],
            "arguments": {}
        },
        "log_common_parameter": {
            "name": "log_common_parameter",
            "location": 367,
            "return": [],
            "arguments": {}
        },
        "exit_message": {
            "name": "exit_message",
            "location": 372,
            "return": [],
            "arguments": {}
        }
    },
    "fingerprint-master/fingerprint/fp_conf.py": {
        "FPConf.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPFilesConf.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPDiffFilesConf.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPRegConf.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/fingerprint/lib_data_structures.py": {
        "DataStructFileInfo.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataStructFileInfo.created_float": {
            "name": "created_float",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "created": [
                    "float"
                ]
            }
        },
        "DataStructFileInfo.created": {
            "name": "created",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "created": [
                    "datetime"
                ]
            }
        },
        "DataStructFileInfo.modified_float": {
            "name": "modified_float",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "modified": [
                    "float"
                ]
            }
        },
        "DataStructFileInfo.modified": {
            "name": "modified",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "modified": [
                    "datetime"
                ]
            }
        },
        "DataStructFileInfo.accessed_float": {
            "name": "accessed_float",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "accessed": [
                    "float"
                ]
            }
        },
        "DataStructFileInfo.accessed": {
            "name": "accessed",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "accessed": [
                    "datetime"
                ]
            }
        },
        "DataStructFileInfo.get_data_dict": {
            "name": "get_data_dict",
            "location": 125,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataStructFileInfo.get_data_dict_fieldnames": {
            "name": "get_data_dict_fieldnames",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataStructRegistryFileInfo.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataStructRegistryValue.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataStructRegistryEntry.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/fingerprint/lib_diff_files.py": {
        "get_hashed_dict_fp_1": {
            "name": "get_hashed_dict_fp_1",
            "location": 114,
            "return": [
                "{}"
            ],
            "arguments": {}
        },
        "FileDiff.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileDiff.__enter__": {
            "name": "__enter__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileDiff.__exit__": {
            "name": "__exit__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "FileDiff.create_diff_file": {
            "name": "create_diff_file",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileDiff.get_l_diff_fileinfo": {
            "name": "get_l_diff_fileinfo",
            "location": 33,
            "return": [
                "[lib_data_structures.DataStructFileInfo]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDiff.get_l_deleted_file_info": {
            "name": "get_l_deleted_file_info",
            "location": 89,
            "return": [
                "[lib_data_structures.DataStructFileInfo]"
            ],
            "arguments": {
                "self": [],
                "hashed_dict_fp_1": []
            }
        },
        "FileDiff.get_fileinfo_from_dict": {
            "name": "get_fileinfo_from_dict",
            "location": 99,
            "return": [
                "lib_data_structures.DataStructFileInfo"
            ],
            "arguments": {
                "dict_file_info": []
            }
        },
        "FileDiff.write_diff_csv_file": {
            "name": "write_diff_csv_file",
            "location": 106,
            "return": [],
            "arguments": {
                "l_fileinfo": [
                    "[lib_data_structures.DataStructFileInfo]"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/lib_diff_registry.py": {
        "RegistryDiff.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "fingerprint_name_1": [
                    "str"
                ],
                "fingerprint_name_2": [
                    "str"
                ],
                "fingerprint_result_dir": [
                    "str"
                ],
                "field_length_limit": [
                    "int"
                ],
                "check_modified": [
                    "bool"
                ]
            }
        },
        "RegistryDiff.__enter__": {
            "name": "__enter__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryDiff.__exit__": {
            "name": "__exit__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "RegistryDiff.create_diff_file": {
            "name": "create_diff_file",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryDiff.get_hashed_dict_fingerprint_1": {
            "name": "get_hashed_dict_fingerprint_1",
            "location": 49,
            "return": [
                "{}"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistryDiff.get_l_dict_diff_registry_info": {
            "name": "get_l_dict_diff_registry_info",
            "location": 67,
            "return": [
                "[{}]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistryDiff.get_l_deleted_registry_info": {
            "name": "get_l_deleted_registry_info",
            "location": 105,
            "return": [
                "[{}]"
            ],
            "arguments": {
                "hashed_dict_fingerprint_result_filename_1": []
            }
        },
        "RegistryDiff.get_fileinfo_from_dict": {
            "name": "get_fileinfo_from_dict",
            "location": 114,
            "return": [
                "DataStructFileInfo"
            ],
            "arguments": {
                "dict_file_info": []
            }
        },
        "RegistryDiff.write_diff_csv_file": {
            "name": "write_diff_csv_file",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "l_dict_registry_info": [
                    "[dict]"
                ]
            }
        },
        "RegistryDiff.get_diff_result_filename": {
            "name": "get_diff_result_filename",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/fingerprint/lib_filter_procmon.py": {
        "ProcmonDiff.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "procmon_csv": [
                    "str"
                ],
                "fingerprint_result_dir": [
                    "str"
                ],
                "fingerprint_file_csv": [
                    "str"
                ],
                "fingerprint_reg_csv": [
                    "str"
                ]
            }
        },
        "ProcmonDiff.__enter__": {
            "name": "__enter__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcmonDiff.__exit__": {
            "name": "__exit__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "ProcmonDiff.create_procmon_diff": {
            "name": "create_procmon_diff",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcmonDiff.is_registry_dict": {
            "name": "is_registry_dict",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "dict_data": [
                    "{}"
                ]
            }
        },
        "ProcmonDiff.add_map_hkcr_to_hkcu_software_classes": {
            "name": "add_map_hkcr_to_hkcu_software_classes",
            "location": 55,
            "return": [],
            "arguments": {
                "dict_key": [
                    "str"
                ],
                "hashed_dict": [
                    "{}"
                ],
                "dict_data": [
                    "{}"
                ]
            }
        },
        "ProcmonDiff.add_map_hku_to_hkcu": {
            "name": "add_map_hku_to_hkcu",
            "location": 63,
            "return": [],
            "arguments": {
                "dict_key": [
                    "str"
                ],
                "hashed_dict": [
                    "{}"
                ],
                "dict_data": [
                    "{}"
                ]
            }
        },
        "ProcmonDiff.get_hashed_dict_fingerprint": {
            "name": "get_hashed_dict_fingerprint",
            "location": 133,
            "return": [
                "{}"
            ],
            "arguments": {
                "self": [],
                "fingerprint_csv": [
                    "str"
                ]
            }
        },
        "ProcmonDiff.get_set_paths_procmon_accessed": {
            "name": "get_set_paths_procmon_accessed",
            "location": 164,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcmonDiff.create_filtered_procmon_csv": {
            "name": "create_filtered_procmon_csv",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "hashed_dict_reg": [
                    "{}"
                ],
                "hashed_dict_files": [
                    "{}"
                ]
            }
        },
        "ProcmonDiff.create_filtered_fingerprints": {
            "name": "create_filtered_fingerprints",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "hashed_dict_reg": [
                    "{}"
                ],
                "hashed_dict_files": [
                    "{}"
                ]
            }
        },
        "ProcmonDiff.get_fingerprint_files_filtered_fullpath": {
            "name": "get_fingerprint_files_filtered_fullpath",
            "location": 217,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcmonDiff.get_fingerprint_reg_filtered_fullpath": {
            "name": "get_fingerprint_reg_filtered_fullpath",
            "location": 229,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcmonDiff.get_procmon_output_fullpath": {
            "name": "get_procmon_output_fullpath",
            "location": 241,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/fingerprint/lib_fp_files.py": {
        "get_fileinfo": {
            "name": "get_fileinfo",
            "location": 110,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "hash_files": [
                    "bool"
                ]
            }
        },
        "get_file_iterator": {
            "name": "get_file_iterator",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "check_f_output_permission": {
            "name": "check_f_output_permission",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "format_fp_files_dir": {
            "name": "format_fp_files_dir",
            "location": 165,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "FingerPrintFiles.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintFiles.__enter__": {
            "name": "__enter__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintFiles.__exit__": {
            "name": "__exit__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "FingerPrintFiles.create_fp": {
            "name": "create_fp",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "FingerPrintFiles.create_fp_mp": {
            "name": "create_fp_mp",
            "location": 72,
            "return": [],
            "arguments": {}
        }
    },
    "fingerprint-master/fingerprint/lib_fp_registry.py": {
        "FingerPrintRegistry.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.__enter__": {
            "name": "__enter__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.__exit__": {
            "name": "__exit__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "FingerPrintRegistry.create_fingerprint_registry": {
            "name": "create_fingerprint_registry",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.write_registry_entries_to_csv": {
            "name": "write_registry_entries_to_csv",
            "location": 46,
            "return": [],
            "arguments": {
                "l_registry_entries": [
                    "[lib_data_structures.DataStructRegistryEntry]"
                ]
            }
        },
        "FingerPrintRegistry.parse_all_hives": {
            "name": "parse_all_hives",
            "location": 99,
            "return": [
                "[lib_data_structures.DataStructRegistryEntry]"
            ],
            "arguments": {
                "self": [],
                "registry_files_copied": [
                    "[lib_data_structures.DataStructRegistryFileInfo]"
                ]
            }
        },
        "FingerPrintRegistry.parse_hive": {
            "name": "parse_hive",
            "location": 107,
            "return": [
                "[lib_data_structures.DataStructRegistryEntry]"
            ],
            "arguments": {
                "self": [],
                "registry_file_info": [
                    "lib_data_structures.DataStructRegistryFileInfo"
                ]
            }
        },
        "FingerPrintRegistry.get_registry_entries": {
            "name": "get_registry_entries",
            "location": 123,
            "return": [
                "[lib_data_structures.DataStructRegistryEntry]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Registry.RegistryKey"
                ],
                "registry_file_info": [
                    "lib_data_structures.DataStructRegistryFileInfo"
                ]
            }
        },
        "FingerPrintRegistry.get_registry_value": {
            "name": "get_registry_value",
            "location": 151,
            "return": [
                "str"
            ],
            "arguments": {
                "value": []
            }
        },
        "FingerPrintRegistry.format_key_path": {
            "name": "format_key_path",
            "location": 161,
            "return": [
                "str"
            ],
            "arguments": {
                "registry_file_info": [
                    "lib_data_structures.DataStructRegistryFileInfo"
                ],
                "key_path": [
                    "str"
                ]
            }
        },
        "FingerPrintRegistry.copy_registry_files_and_return_copied": {
            "name": "copy_registry_files_and_return_copied",
            "location": 188,
            "return": [
                "[lib_data_structures.DataStructRegistryFileInfo]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.get_l_registry_file_infos": {
            "name": "get_l_registry_file_infos",
            "location": 210,
            "return": [
                "[lib_data_structures.DataStructRegistryFileInfo]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.get_registry_file_info": {
            "name": "get_registry_file_info",
            "location": 232,
            "return": [
                "lib_data_structures.DataStructRegistryFileInfo"
            ],
            "arguments": {
                "self": [],
                "registry_hive_name": [
                    "str"
                ],
                "comment": [
                    "str"
                ]
            }
        },
        "FingerPrintRegistry.delete_hive_copies": {
            "name": "delete_hive_copies",
            "location": 251,
            "return": [],
            "arguments": {
                "registry_files_copied": []
            }
        },
        "FingerPrintRegistry.get_l_hives": {
            "name": "get_l_hives",
            "location": 256,
            "return": [
                "[()]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FingerPrintRegistry.get_l_user_hives": {
            "name": "get_l_user_hives",
            "location": 277,
            "return": [
                "[()]"
            ],
            "arguments": {}
        },
        "FingerPrintRegistry.copy_registry_file": {
            "name": "copy_registry_file",
            "location": 296,
            "return": [],
            "arguments": {
                "registry_file_info": [
                    "lib_data_structures.DataStructRegistryFileInfo"
                ]
            }
        },
        "FingerPrintRegistry.get_registry_hive_copy_filename": {
            "name": "get_registry_hive_copy_filename",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "registry_hive_name": []
            }
        },
        "FingerPrintRegistry.get_f_out_short_name": {
            "name": "get_f_out_short_name",
            "location": 338,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "FingerPrintRegistry.get_f_out_dir": {
            "name": "get_f_out_dir",
            "location": 350,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "fingerprint-master/fingerprint/lib_hash.py": {
        "hash_bytestr_iter": {
            "name": "hash_bytestr_iter",
            "location": 6,
            "return": [],
            "arguments": {
                "bytesiter": [],
                "hasher": [],
                "ashexstr": []
            }
        },
        "file_as_blockiter": {
            "name": "file_as_blockiter",
            "location": 12,
            "return": [],
            "arguments": {
                "afile": [],
                "blocksize": []
            }
        },
        "get_file_hash": {
            "name": "get_file_hash",
            "location": 20,
            "return": [],
            "arguments": {
                "fname": [
                    "str"
                ]
            }
        },
        "get_file_hash_preserve_access_dates": {
            "name": "get_file_hash_preserve_access_dates",
            "location": 25,
            "return": [],
            "arguments": {
                "fname": [
                    "str"
                ]
            }
        },
        "get_atime_mtime": {
            "name": "get_atime_mtime",
            "location": 45,
            "return": [
                "(time.time, time.time)"
            ],
            "arguments": {
                "f_name": [
                    "str"
                ]
            }
        },
        "set_atime_mtime": {
            "name": "set_atime_mtime",
            "location": 51,
            "return": [],
            "arguments": {
                "f_name": [
                    "str"
                ],
                "atime": [
                    "time.time"
                ],
                "mtime": [
                    "time.time"
                ]
            }
        }
    },
    "fingerprint-master/fingerprint/lib_helper_functions.py": {
        "convert_path_to_posix": {
            "name": "convert_path_to_posix",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "convert_float_to_datetime": {
            "name": "convert_float_to_datetime",
            "location": 21,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "time_float": [
                    "float"
                ]
            }
        },
        "convert_datetime_or_datestr_to_float": {
            "name": "convert_datetime_or_datestr_to_float",
            "location": 35,
            "return": [
                "float"
            ],
            "arguments": {
                "time_datetime": [
                    "Union[(datetime.datetime, str)]"
                ]
            }
        },
        "convert_datestr_to_datetime": {
            "name": "convert_datestr_to_datetime",
            "location": 58,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "date_str": [
                    "str"
                ]
            }
        },
        "is_run_as_admin": {
            "name": "is_run_as_admin",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_run_as_admin2": {
            "name": "is_run_as_admin2",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "inform_if_not_run_as_admin": {
            "name": "inform_if_not_run_as_admin",
            "location": 104,
            "return": [],
            "arguments": {
                "exit_if_not_admin": [
                    "bool"
                ],
                "interactive": [
                    "bool"
                ]
            }
        },
        "log_exception_traceback": {
            "name": "log_exception_traceback",
            "location": 114,
            "return": [
                "str"
            ],
            "arguments": {
                "s_error": [
                    "str"
                ],
                "log_level": [
                    "int"
                ],
                "log_level_traceback": [
                    "int"
                ],
                "flush_handlers": [
                    "bool"
                ]
            }
        },
        "logger_flush_all_handlers": {
            "name": "logger_flush_all_handlers",
            "location": 127,
            "return": [],
            "arguments": {}
        },
        "setup_console_logger": {
            "name": "setup_console_logger",
            "location": 139,
            "return": [],
            "arguments": {
                "level": [
                    "int"
                ]
            }
        },
        "str2bool": {
            "name": "str2bool",
            "location": 148,
            "return": [
                "bool"
            ],
            "arguments": {
                "v": [
                    "str"
                ]
            }
        },
        "strip_extension": {
            "name": "strip_extension",
            "location": 156,
            "return": [
                "str"
            ],
            "arguments": {
                "file_fullpath": [
                    "str"
                ]
            }
        },
        "create_path_and_check_permission": {
            "name": "create_path_and_check_permission",
            "location": 166,
            "return": [],
            "arguments": {
                "f_path": [
                    "str"
                ]
            }
        },
        "SetupFileLogging.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "f_output": [
                    "str"
                ]
            }
        },
        "SetupFileLogging.get_logfile_name": {
            "name": "get_logfile_name",
            "location": 183,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupFileLogging.setup_file_logging_or_log_error": {
            "name": "setup_file_logging_or_log_error",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SetupFileLogging.setup_file_logging": {
            "name": "setup_file_logging",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SetupFileLogging.setup_file_logging_handler": {
            "name": "setup_file_logging_handler",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SetupFileLogging.log_error": {
            "name": "log_error",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/fingerprint/lib_runcommand.py": {
        "run_command": {
            "name": "run_command",
            "location": 18,
            "return": [
                "CommandResponse"
            ],
            "arguments": {
                "s_command": [
                    "str"
                ],
                "shell": [
                    "bool"
                ],
                "communicate": [
                    "bool"
                ],
                "wait_finish": [
                    "bool"
                ],
                "raise_on_error": [
                    "bool"
                ]
            }
        },
        "shlex_split_multi_platform": {
            "name": "shlex_split_multi_platform",
            "location": 69,
            "return": [
                "[str]"
            ],
            "arguments": {
                "s_commandline": [
                    "str"
                ],
                "n_platform": [
                    "int"
                ]
            }
        },
        "CommandResponse.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fingerprint-master/tests/test.py": {
        "create_testfiles_fingerprint_1": {
            "name": "create_testfiles_fingerprint_1",
            "location": 8,
            "return": [],
            "arguments": {
                "timestamp": [
                    "time"
                ]
            }
        },
        "modify_testfiles_fingerprint_2": {
            "name": "modify_testfiles_fingerprint_2",
            "location": 27,
            "return": [],
            "arguments": {
                "timestamp": [
                    "time"
                ]
            }
        },
        "set_atime": {
            "name": "set_atime",
            "location": 117,
            "return": [],
            "arguments": {
                "file": [
                    "str"
                ],
                "timestamp": [
                    "time"
                ]
            }
        },
        "set_mtime": {
            "name": "set_mtime",
            "location": 122,
            "return": [],
            "arguments": {
                "file": [
                    "str"
                ],
                "timestamp": [
                    "time"
                ]
            }
        }
    }
}
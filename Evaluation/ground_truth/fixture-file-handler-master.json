{
    "fixture-file-handler-master/setup.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "fixture-file-handler-master/tasks.py": {
        "_delete_file": {
            "name": "_delete_file",
            "location": 26,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "style": {
            "name": "style",
            "location": 38,
            "return": [],
            "arguments": {
                "context": [],
                "check": []
            }
        },
        "isort": {
            "name": "isort",
            "location": 51,
            "return": [
                "Result"
            ],
            "arguments": {
                "context": [],
                "check": []
            }
        },
        "pipenv_setup": {
            "name": "pipenv_setup",
            "location": 57,
            "return": [
                "Result"
            ],
            "arguments": {
                "context": [],
                "check": []
            }
        },
        "black": {
            "name": "black",
            "location": 63,
            "return": [
                "Result"
            ],
            "arguments": {
                "context": [],
                "check": []
            }
        },
        "lint_flake8": {
            "name": "lint_flake8",
            "location": 70,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "lint_pylint": {
            "name": "lint_pylint",
            "location": 78,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "lint_mypy": {
            "name": "lint_mypy",
            "location": 86,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "lint": {
            "name": "lint",
            "location": 94,
            "return": [],
            "arguments": {
                "_context": []
            }
        },
        "radon_cc": {
            "name": "radon_cc",
            "location": 101,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "radon_mi": {
            "name": "radon_mi",
            "location": 109,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "radon": {
            "name": "radon",
            "location": 117,
            "return": [],
            "arguments": {
                "_context": []
            }
        },
        "xenon": {
            "name": "xenon",
            "location": 124,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "test": {
            "name": "test",
            "location": 132,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "coverage": {
            "name": "coverage",
            "location": 141,
            "return": [],
            "arguments": {
                "context": [],
                "publish": [],
                "xml": []
            }
        },
        "clean_build": {
            "name": "clean_build",
            "location": 160,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "clean_python": {
            "name": "clean_python",
            "location": 172,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "clean_tests": {
            "name": "clean_tests",
            "location": 183,
            "return": [],
            "arguments": {
                "_context": []
            }
        },
        "clean": {
            "name": "clean",
            "location": 192,
            "return": [],
            "arguments": {
                "_context": []
            }
        },
        "dist": {
            "name": "dist",
            "location": 199,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "fixture-file-handler-master/fixturefilehandler/exceptions.py": {},
    "fixture-file-handler-master/fixturefilehandler/factories.py": {
        "VacatorFactory.create": {
            "name": "create",
            "location": 18,
            "return": [
                "Type[TargetFilePathVacator]"
            ],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "DeployerFactory.create": {
            "name": "create",
            "location": 33,
            "return": [
                "Type[ResourceFileDeployer]"
            ],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        }
    },
    "fixture-file-handler-master/fixturefilehandler/file_paths.py": {
        "VacateFilePathInterface.target": {
            "name": "target",
            "location": 22,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "VacateFilePathInterface.backup": {
            "name": "backup",
            "location": 27,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeployFilePathInterface.resource": {
            "name": "resource",
            "location": 36,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleVacateFilePath.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ]
            }
        },
        "SimpleVacateFilePath.target": {
            "name": "target",
            "location": 48,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleVacateFilePath.backup": {
            "name": "backup",
            "location": 52,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeployFilePath.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ],
                "resource": [
                    "Path"
                ]
            }
        },
        "SimpleDeployFilePath.resource": {
            "name": "resource",
            "location": 64,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "RelativeVacateFilePath.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ],
                "base": [
                    "Path"
                ]
            }
        },
        "RelativeVacateFilePath.target": {
            "name": "target",
            "location": 76,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "RelativeVacateFilePath.backup": {
            "name": "backup",
            "location": 80,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "RelativeDeployFilePath.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ],
                "resource": [
                    "Path"
                ],
                "base": [
                    "Path"
                ]
            }
        },
        "RelativeDeployFilePath.resource": {
            "name": "resource",
            "location": 92,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "YamlConfigFilePathBuilder.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "path_target_directory": [
                    "Path"
                ],
                "path_test_directory": [
                    "Path"
                ],
                "file_target": [
                    "Path"
                ],
                "file_backup": [
                    "Path"
                ],
                "file_resource": [
                    "Path"
                ]
            }
        },
        "YamlConfigFilePathBuilder.target": {
            "name": "target",
            "location": 118,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "YamlConfigFilePathBuilder.backup": {
            "name": "backup",
            "location": 122,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "YamlConfigFilePathBuilder.resource": {
            "name": "resource",
            "location": 126,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "YamlConfigFilePathBuilder.path_resource_directory": {
            "name": "path_resource_directory",
            "location": 130,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/fixturefilehandler/fixture_file_handler.py": {
        "FixtureFileHandler.vacate_target_if_exist": {
            "name": "vacate_target_if_exist",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "FixtureFileHandler.deploy_resource": {
            "name": "deploy_resource",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "FixtureFileHandler.restore_backup_if_exist": {
            "name": "restore_backup_if_exist",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "HandlerInterface.setup": {
            "name": "setup",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "file_path": [
                    "TVacateFilePathInterface"
                ]
            }
        },
        "HandlerInterface.teardown": {
            "name": "teardown",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "file_path": [
                    "TVacateFilePathInterface"
                ]
            }
        },
        "TargetFilePathVacator.setup": {
            "name": "setup",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "ResourceFileDeployer.setup": {
            "name": "setup",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        }
    },
    "fixture-file-handler-master/fixturefilehandler/__init__.py": {},
    "fixture-file-handler-master/tests/conftest.py": {},
    "fixture-file-handler-master/tests/test_factories.py": {
        "TestVacatorFactory.test": {
            "name": "test",
            "location": 23,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "TestDeployerFactory.test": {
            "name": "test",
            "location": 47,
            "return": [],
            "arguments": {
                "file_path": []
            }
        }
    },
    "fixture-file-handler-master/tests/test_file_paths.py": {
        "TestSimpleVacateFilePath.test": {
            "name": "test",
            "location": 23,
            "return": [],
            "arguments": {
                "path_target": [],
                "path_backup": []
            }
        },
        "TestSimpleDeployFilePath.test": {
            "name": "test",
            "location": 38,
            "return": [],
            "arguments": {
                "path_target": [],
                "path_backup": [],
                "path_resource": []
            }
        },
        "TestRelativeVacateFilePath.test_default": {
            "name": "test_default",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "TestRelativeVacateFilePath.test_customize": {
            "name": "test_customize",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "TestRelativeDeployFilePath.test_default": {
            "name": "test_default",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "TestRelativeDeployFilePath.test_customize": {
            "name": "test_customize",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "TestYamlConfigFilePathBuilder.test_default": {
            "name": "test_default",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "TestYamlConfigFilePathBuilder.test_specify_target_directory": {
            "name": "test_specify_target_directory",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "TestYamlConfigFilePathBuilder.test_customize": {
            "name": "test_customize",
            "location": 104,
            "return": [],
            "arguments": {}
        }
    },
    "fixture-file-handler-master/tests/test___init__.py": {
        "file_path_with_file": {
            "name": "file_path_with_file",
            "location": 80,
            "return": [],
            "arguments": {
                "request": [],
                "tmp_path": []
            }
        },
        "file_path_with_directory": {
            "name": "file_path_with_directory",
            "location": 89,
            "return": [],
            "arguments": {
                "request": [],
                "tmp_path": []
            }
        },
        "TestFixtureFileHandlerModules.test_file": {
            "name": "test_file",
            "location": 103,
            "return": [],
            "arguments": {
                "file_path_with_file": [
                    "VacateFilePathInterface"
                ],
                "action": [
                    "Act"
                ],
                "expect": [
                    "MultipleFilePathState"
                ]
            }
        },
        "TestFixtureFileHandlerModules.test_directory": {
            "name": "test_directory",
            "location": 111,
            "return": [],
            "arguments": {
                "file_path_with_directory": [
                    "VacateFilePathInterface"
                ],
                "action": [
                    "Act"
                ],
                "expect": [
                    "MultipleFilePathState"
                ]
            }
        }
    },
    "fixture-file-handler-master/tests/__init__.py": {},
    "fixture-file-handler-master/tests/testlibraries/__init__.py": {},
    "fixture-file-handler-master/tests/testlibraries/fixturefilehandlerfortest/file_paths_for_test.py": {
        "VacateFilePathBuilderForTest.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ],
                "backup_for_test": [
                    "Path"
                ],
                "base": [
                    "Path"
                ]
            }
        },
        "VacateFilePathBuilderForTest.target": {
            "name": "target",
            "location": 16,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "VacateFilePathBuilderForTest.backup": {
            "name": "backup",
            "location": 21,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "VacateFilePathBuilderForTest.backup_for_test": {
            "name": "backup_for_test",
            "location": 26,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeployFilePathBuilderForTest.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "Path"
                ],
                "backup": [
                    "Path"
                ],
                "backup_for_test": [
                    "Path"
                ],
                "resource": [
                    "Path"
                ],
                "base": [
                    "Path"
                ],
                "base_resource": [
                    "Path"
                ]
            }
        },
        "DeployFilePathBuilderForTest.resource": {
            "name": "resource",
            "location": 49,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/fixturefilehandlerfortest/fixture_file_handlers_for_test.py": {
        "FixtureFileHandlerForTest.vacate_target_if_exist_and_remove_backup_if_exist": {
            "name": "vacate_target_if_exist_and_remove_backup_if_exist",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": []
            }
        },
        "FixtureFileHandlerForTest.deploy_resource": {
            "name": "deploy_resource",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": []
            }
        },
        "FixtureFileHandlerForTest.restore_target_if_backup_for_test_exist": {
            "name": "restore_target_if_backup_for_test_exist",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "VacateFilePathBuilderForTest"
                ]
            }
        },
        "HandlerInterfaceForTest.set_up": {
            "name": "set_up",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "HandlerInterfaceForTest.do_cleanups": {
            "name": "do_cleanups",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TargetFilePathVacatorForTest.set_up": {
            "name": "set_up",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FixtureFileDeployerForTest.set_up": {
            "name": "set_up",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/fixturefilehandlerfortest/__init__.py": {},
    "fixture-file-handler-master/tests/testlibraries/parametrizer/action_executors.py": {
        "create_vacator_class": {
            "name": "create_vacator_class",
            "location": 19,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "create_deployer_class": {
            "name": "create_deployer_class",
            "location": 30,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "ActionExecutor.execute": {
            "name": "execute",
            "location": 46,
            "return": [],
            "arguments": {
                "file_path": [
                    "TypeVarVacateFilePathInterface"
                ]
            }
        },
        "VacateTargetIfExistExecutor.execute": {
            "name": "execute",
            "location": 54,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "VacateTargetIfExistAssertErrorExecutor.execute": {
            "name": "execute",
            "location": 62,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "DeployResourceExecutor.execute": {
            "name": "execute",
            "location": 71,
            "return": [],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "DeployResourceAssertErrorExecutor.execute": {
            "name": "execute",
            "location": 79,
            "return": [],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "RestoreBackupIfExistExecutor.execute": {
            "name": "execute",
            "location": 88,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "VacatorSetupExecutor.execute": {
            "name": "execute",
            "location": 96,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "VacatorSetupWithArgumentExecutor.execute": {
            "name": "execute",
            "location": 104,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "VacatorTeardownExecutor.execute": {
            "name": "execute",
            "location": 112,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "VacatorTeardownWithArgumentExecutor.execute": {
            "name": "execute",
            "location": 120,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "DeployerSetupExecutor.execute": {
            "name": "execute",
            "location": 128,
            "return": [],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "DeployerSetupWithArgumentExecutor.execute": {
            "name": "execute",
            "location": 136,
            "return": [],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "DeployerTeardownExecutor.execute": {
            "name": "execute",
            "location": 144,
            "return": [],
            "arguments": {
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "DeployerTeardownWithArgumentExecutor.execute": {
            "name": "execute",
            "location": 152,
            "return": [],
            "arguments": {
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "Action.execute": {
            "name": "execute",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "Action.value": {
            "name": "value",
            "location": 178,
            "return": [
                "Type[ActionExecutor[VacateFilePathInterface]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/parametrizer/checkers.py": {
        "AbstractChecker.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "Path"
                ]
            }
        },
        "AbstractChecker.do_assertion": {
            "name": "do_assertion",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotExistChecker.do_assertion": {
            "name": "do_assertion",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContentChecker.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "Path"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "ContentChecker.do_assertion": {
            "name": "do_assertion",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/parametrizer/file_path_state_handlers.py": {
        "FilePathStateHandler.create_checker": {
            "name": "create_checker",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "FilePathStateHandler.create_file": {
            "name": "create_file",
            "location": 21,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "FilePathStateHandler.create_directory": {
            "name": "create_directory",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "FilePathStateHandler.assert_file_state": {
            "name": "assert_file_state",
            "location": 30,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "FilePathStateHandler.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 36,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "NoExistHandler.create_checker": {
            "name": "create_checker",
            "location": 46,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "NoExistHandler.create_file": {
            "name": "create_file",
            "location": 50,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "NoExistHandler.create_directory": {
            "name": "create_directory",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "NoExistHandler.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "ContentExistingHandler.create_checker": {
            "name": "create_checker",
            "location": 70,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "ContentExistingHandler.create_file": {
            "name": "create_file",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "ContentExistingHandler.create_directory": {
            "name": "create_directory",
            "location": 78,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "ContentBackupHandler.create_checker": {
            "name": "create_checker",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "ContentBackupHandler.create_file": {
            "name": "create_file",
            "location": 93,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "ContentBackupHandler.create_directory": {
            "name": "create_directory",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "ContentResourceHandler.create_checker": {
            "name": "create_checker",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [
                    "Path"
                ]
            }
        },
        "ContentResourceHandler.create_file": {
            "name": "create_file",
            "location": 112,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        },
        "ContentResourceHandler.create_directory": {
            "name": "create_directory",
            "location": 116,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": [
                    "RelativeDeployFilePath"
                ]
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/parametrizer/file_path_with_resource_factories.py": {
        "AbstractFilePathWithResourceFactory.create": {
            "name": "create",
            "location": 20,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "file_state": [
                    "TypeVarTwoFilesState"
                ]
            }
        },
        "VacateFilePathWithFileFactory.create": {
            "name": "create",
            "location": 28,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "file_state": [
                    "TwoFilePathState"
                ]
            }
        },
        "DeployFilePathWithFileFactory.create": {
            "name": "create",
            "location": 39,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "file_state": [
                    "ThreeFilePathState"
                ]
            }
        },
        "VacateFilePathWithDirectoryFactory.create": {
            "name": "create",
            "location": 51,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "file_state": [
                    "TwoFilePathState"
                ]
            }
        },
        "DeployFilePathWithDirectoryFactory.create": {
            "name": "create",
            "location": 62,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "file_state": [
                    "ThreeFilePathState"
                ]
            }
        },
        "FilePathWithFileFactory.create": {
            "name": "create",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [],
                "tmp_path": [],
                "multi_file_state": []
            }
        },
        "FilePathWithFileFactory._create": {
            "name": "_create",
            "location": 80,
            "return": [
                "Type[AbstractFilePathWithResourceFactory]"
            ],
            "arguments": {
                "cls": [],
                "multi_file_state": [
                    "MultipleFilePathState"
                ]
            }
        },
        "FilePathWithDirectoryFactory.create": {
            "name": "create",
            "location": 92,
            "return": [],
            "arguments": {
                "cls": [],
                "tmp_path": [],
                "multi_file_state": []
            }
        },
        "FilePathWithDirectoryFactory._create": {
            "name": "_create",
            "location": 98,
            "return": [
                "Type[AbstractFilePathWithResourceFactory]"
            ],
            "arguments": {
                "cls": [],
                "multi_file_state": [
                    "MultipleFilePathState"
                ]
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/parametrizer/file_states.py": {
        "FilePathState.assert_file_state": {
            "name": "assert_file_state",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FilePathState.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FilePathState.create_file": {
            "name": "create_file",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FilePathState.create_directory": {
            "name": "create_directory",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FilePathState.value": {
            "name": "value",
            "location": 43,
            "return": [
                "Type[FilePathStateHandler]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MultipleFilePathState.assert_file_state": {
            "name": "assert_file_state",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "TypeVarVacateFilePathInterface"
                ]
            }
        },
        "MultipleFilePathState.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "TypeVarVacateFilePathInterface"
                ]
            }
        },
        "TwoFilePathState.assert_file_state": {
            "name": "assert_file_state",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "TwoFilePathState.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "VacateFilePathInterface"
                ]
            }
        },
        "ThreeFilePathState.assert_file_state": {
            "name": "assert_file_state",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        },
        "ThreeFilePathState.assert_directory_state": {
            "name": "assert_directory_state",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [
                    "DeployFilePathInterface"
                ]
            }
        }
    },
    "fixture-file-handler-master/tests/testlibraries/parametrizer/__init__.py": {},
    "fixture-file-handler-master/tests/testresources/pytest_code_pytest_context.py": {
        "test_something": {
            "name": "test_something",
            "location": 5,
            "return": [],
            "arguments": {
                "fixture_file": []
            }
        }
    },
    "fixture-file-handler-master/tests/testscenarios/test_config_handler_pytest.py": {
        "directory_testdir": {
            "name": "directory_testdir",
            "location": 33,
            "return": [],
            "arguments": {
                "testdir": []
            }
        },
        "directory_target_testdir": {
            "name": "directory_target_testdir",
            "location": 51,
            "return": [],
            "arguments": {
                "directory_testdir": []
            }
        },
        "TestConfigHandlerPytest.test": {
            "name": "test",
            "location": 27,
            "return": [],
            "arguments": {
                "fixture_file": []
            }
        },
        "TestConfigHandlerPytestBeforeAfter.test_case_when_target_exist": {
            "name": "test_case_when_target_exist",
            "location": 62,
            "return": [],
            "arguments": {
                "directory_target_testdir": []
            }
        },
        "TestConfigHandlerPytestBeforeAfter.test_case_when_target_not_exist": {
            "name": "test_case_when_target_not_exist",
            "location": 76,
            "return": [],
            "arguments": {
                "directory_testdir": []
            }
        },
        "TestAdvancedConfigHandlerPytest.test_advanced": {
            "name": "test_advanced",
            "location": 94,
            "return": [],
            "arguments": {
                "fixture_file_advanced": []
            }
        }
    },
    "fixture-file-handler-master/tests/testscenarios/test_config_handler_unittest.py": {
        "target_file": {
            "name": "target_file",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "target_file_empty": {
            "name": "target_file_empty",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "TestConfigHandlerUnittest.test": {
            "name": "test",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "TestConfigHandlerUnittestBeforeAfter.test_case_when_target_exist": {
            "name": "test_case_when_target_exist",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "target_file": []
            }
        },
        "TestConfigHandlerUnittestBeforeAfter.test_case_when_target_not_exist": {
            "name": "test_case_when_target_not_exist",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "target_file_empty": []
            }
        },
        "TestConfigHandlerUnittestBeforeAfter._set_up_by_unittest": {
            "name": "_set_up_by_unittest",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "TestConfigHandlerUnittestBeforeAfter._do_cleanups_by_unittest": {
            "name": "_do_cleanups_by_unittest",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "TestAdvancedConfigHandlerUnittest.test_advanced": {
            "name": "test_advanced",
            "location": 95,
            "return": [],
            "arguments": {}
        }
    },
    "fixture-file-handler-master/tests/testscenarios/__init__.py": {},
    "fixture-file-handler-master/yourproduct/pytest_context_advanced.py": {
        "fixture_file_advanced": {
            "name": "fixture_file_advanced",
            "location": 10,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test_something": {
            "name": "test_something",
            "location": 23,
            "return": [],
            "arguments": {
                "fixture_file_advanced": []
            }
        }
    },
    "fixture-file-handler-master/yourproduct/pytest_context_basic.py": {
        "fixture_file": {
            "name": "fixture_file",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_something": {
            "name": "test_something",
            "location": 24,
            "return": [],
            "arguments": {
                "fixture_file": []
            }
        }
    },
    "fixture-file-handler-master/yourproduct/unittest_context_advanced.py": {
        "AdvancedConfigurableTestCase.file_path": {
            "name": "file_path",
            "location": 11,
            "return": [
                "RelativeDeployFilePath"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdvancedConfigurableTestCase.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AdvancedConfigurableTestCase.doCleanups": {
            "name": "doCleanups",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/yourproduct/unittest_context_basic.py": {
        "ConfigurableTestCase.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigurableTestCase.doCleanups": {
            "name": "doCleanups",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fixture-file-handler-master/yourproduct/__init__.py": {}
}
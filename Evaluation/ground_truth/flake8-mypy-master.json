{
    "flake8-mypy-master/flake8_mypy.py": {
        "make_arguments": {
            "name": "make_arguments",
            "location": 39,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "calculate_mypypath": {
            "name": "calculate_mypypath",
            "location": 52,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "MypyChecker.run": {
            "name": "run",
            "location": 169,
            "return": [
                "Iterator[_Flake8Error]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyChecker._run": {
            "name": "_run",
            "location": 203,
            "return": [
                "Iterator[_Flake8Error]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyChecker.adapt_error": {
            "name": "adapt_error",
            "location": 237,
            "return": [
                "_Flake8Error"
            ],
            "arguments": {
                "cls": [],
                "e": [
                    "Any"
                ]
            }
        },
        "MypyChecker.omit_error": {
            "name": "omit_error",
            "location": 241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "e": [
                    "Error"
                ]
            }
        },
        "MypyChecker.add_options": {
            "name": "add_options",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "parser": [
                    "'flake8.options.manager.OptionManager'"
                ]
            }
        },
        "MypyChecker.make_error": {
            "name": "make_error",
            "location": 259,
            "return": [
                "Error"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ],
                "regex": [
                    "Pattern"
                ]
            }
        },
        "MypyChecker.build_mypy_cmdline": {
            "name": "build_mypy_cmdline",
            "location": 272,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ],
                "mypy_config": [
                    "Optional[str]"
                ]
            }
        },
        "MypyChecker.build_mypy_re": {
            "name": "build_mypy_re",
            "location": 280,
            "return": [
                "Pattern"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "Union[(str, Path)]"
                ]
            }
        },
        "TypingVisitor.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "ast.FunctionDef"
                ]
            }
        },
        "TypingVisitor.visit_Import": {
            "name": "visit_Import",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "ast.Import"
                ]
            }
        },
        "TypingVisitor.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "ast.ImportFrom"
                ]
            }
        },
        "TypingVisitor.generic_visit": {
            "name": "generic_visit",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "ast.AST"
                ]
            }
        }
    },
    "flake8-mypy-master/setup.py": {},
    "flake8-mypy-master/tests/invalid_types.py": {
        "no_return_value": {
            "name": "no_return_value",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "call_stdlib_and_wrong_type": {
            "name": "call_stdlib_and_wrong_type",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flake8-mypy-master/tests/profile_run.py": {},
    "flake8-mypy-master/tests/relative_imports.py": {
        "fun": {
            "name": "fun",
            "location": 7,
            "return": [
                "another_parent_module.Class"
            ],
            "arguments": {
                "elements": [
                    "List[another_sibling_module.Element]"
                ]
            }
        }
    },
    "flake8-mypy-master/tests/test_mypy.py": {
        "MypyTestCase.errors": {
            "name": "errors",
            "location": 15,
            "return": [
                "List[_Flake8Error]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.assert_visit": {
            "name": "assert_visit",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ],
                "should_type_check": [
                    "bool"
                ]
            }
        },
        "MypyTestCase.get_mypychecker": {
            "name": "get_mypychecker",
            "location": 24,
            "return": [
                "MypyChecker"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "Union[(Path, str)]"
                ]
            }
        },
        "MypyTestCase.test_imports": {
            "name": "test_imports",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_functions": {
            "name": "test_functions",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_invalid_types": {
            "name": "test_invalid_types",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_clash": {
            "name": "test_clash",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_relative_imports": {
            "name": "test_relative_imports",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_selfclean_flake8_mypy": {
            "name": "test_selfclean_flake8_mypy",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyTestCase.test_selfclean_test_mypy": {
            "name": "test_selfclean_test_mypy",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flake8-mypy-master/tests/__init__.py": {},
    "flake8-mypy-master/tests/clash/collections.py": {},
    "flake8-mypy-master/tests/clash/london_calling.py": {
        "fun": {
            "name": "fun",
            "location": 5,
            "return": [
                "Counter"
            ],
            "arguments": {}
        }
    }
}
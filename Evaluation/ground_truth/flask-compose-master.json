{
    "flask-compose-master/setup.py": {},
    "flask-compose-master/examples/basic_usage.py": {
        "create_user": {
            "name": "create_user",
            "location": 14,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "MyHandler.create": {
            "name": "create",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "A.create": {
            "name": "create",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "B.create": {
            "name": "create",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-compose-master/examples/app/run.py": {},
    "flask-compose-master/examples/app/app/common.py": {},
    "flask-compose-master/examples/app/app/components.py": {
        "ActiveUserComponent.make_query": {
            "name": "make_query",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "TypeComponent.query": {
            "name": "query",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeComponent.make_query": {
            "name": "make_query",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "UserComponent.schema_dump_options": {
            "name": "schema_dump_options",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserComponent.schema_load_options": {
            "name": "schema_load_options",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateComponent.schema_load_options": {
            "name": "schema_load_options",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserChildMixin.query": {
            "name": "query",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONAPIComponent.make_query": {
            "name": "make_query",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "JSONAPIComponent.deserialize": {
            "name": "deserialize",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "request": []
            }
        },
        "JSONAPIComponent.serialize": {
            "name": "serialize",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "model": []
            }
        },
        "JSONAPIComponent.deserialize.structure_errors": {
            "name": "structure_errors",
            "location": 101,
            "return": [],
            "arguments": {
                "errors": []
            }
        },
        "JSONAPIComponent.deserialize.structure_error": {
            "name": "structure_error",
            "location": 109,
            "return": [],
            "arguments": {
                "field_name": [],
                "message": [],
                "index": []
            }
        },
        "JSONAPIComponent.serialize.structure_contents": {
            "name": "structure_contents",
            "location": 156,
            "return": [],
            "arguments": {
                "item": []
            }
        }
    },
    "flask-compose-master/examples/app/app/controllers.py": {
        "browse_type": {
            "name": "browse_type",
            "location": 60,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "get_type": {
            "name": "get_type",
            "location": 80,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "create_type": {
            "name": "create_type",
            "location": 103,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "update_type": {
            "name": "update_type",
            "location": 132,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "delete_type": {
            "name": "delete_type",
            "location": 171,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "PlatformHandler.model": {
            "name": "model",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformHandler.schema": {
            "name": "schema",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformHandler.schema_dump_options": {
            "name": "schema_dump_options",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformHandler.schema_load_options": {
            "name": "schema_load_options",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformHandler.fetch_all": {
            "name": "fetch_all",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "PlatformHandler.fetch_one": {
            "name": "fetch_one",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "PlatformHandler.make_query": {
            "name": "make_query",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "PlatformHandler.deserialize": {
            "name": "deserialize",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "request": []
            }
        },
        "PlatformHandler.serialize": {
            "name": "serialize",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "model": []
            }
        }
    },
    "flask-compose-master/examples/app/app/middleware.py": {
        "render_response": {
            "name": "render_response",
            "location": 4,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "render_response.decorator": {
            "name": "decorator",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "flask-compose-master/examples/app/app/models.py": {},
    "flask-compose-master/examples/app/app/routes.py": {},
    "flask-compose-master/examples/app/app/schemas.py": {},
    "flask-compose-master/examples/app/app/__init__.py": {},
    "flask-compose-master/flask_compose/__init__.py": {
        "dispatch_request": {
            "name": "dispatch_request",
            "location": 53,
            "return": [],
            "arguments": {
                "fn": [
                    "Callable"
                ],
                "handler": [
                    "Handler"
                ],
                "components": [
                    "List[Component]"
                ]
            }
        },
        "Component.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "Any"
                ]
            }
        },
        "Component.__getattr__": {
            "name": "__getattr__",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Component.__repr__": {
            "name": "__repr__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Handler.__repr__": {
            "name": "__repr__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RouteLike.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "middleware": [
                    "Middlewares"
                ],
                "components": [
                    "Components"
                ],
                "ignored_middleware": [
                    "Middlewares"
                ],
                "ignored_components": [
                    "Components"
                ]
            }
        },
        "Route.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "controller": [
                    "Callable"
                ],
                "handler": [
                    "Handler"
                ],
                "method": [
                    "str"
                ]
            }
        },
        "Route.make_url_rule": {
            "name": "make_url_rule",
            "location": 89,
            "return": [
                "Rule"
            ],
            "arguments": {
                "self": [],
                "includes": [
                    "List['Include']"
                ]
            }
        },
        "Include.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "routes": [
                    "Routes"
                ]
            }
        },
        "Include.__iter__": {
            "name": "__iter__",
            "location": 159,
            "return": [
                "IterRoute"
            ],
            "arguments": {
                "self": []
            }
        },
        "Include.iter_route_set": {
            "name": "iter_route_set",
            "location": 162,
            "return": [
                "IterRoute"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "List['Include']"
                ]
            }
        },
        "Router.__init__": {
            "name": "__init__",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "flask.Flask"
                ]
            }
        },
        "Router.__iter__": {
            "name": "__iter__",
            "location": 177,
            "return": [
                "Generator[(str, None, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Router.__getitem__": {
            "name": "__getitem__",
            "location": 180,
            "return": [
                "Rule"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "Router.__contains__": {
            "name": "__contains__",
            "location": 183,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "Router.__len__": {
            "name": "__len__",
            "location": 186,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Router.add_routes": {
            "name": "add_routes",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items": [
                    "Routes"
                ]
            }
        },
        "Router.add_route": {
            "name": "add_route",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "includes": [
                    "List[Include]"
                ],
                "route": [
                    "Route"
                ]
            }
        },
        "Router.add_rule": {
            "name": "add_rule",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rule": [
                    "Rule"
                ]
            }
        },
        "Router.items": {
            "name": "items",
            "location": 208,
            "return": [
                "Generator[(Tuple[(str, Rule)], None, None)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-compose-master/tests/include_tests.py": {
        "IncludeTestCase.test_iter_include": {
            "name": "test_iter_include",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-compose-master/tests/router_tests.py": {
        "controller": {
            "name": "controller",
            "location": 10,
            "return": [],
            "arguments": {
                "handler": []
            }
        },
        "RouterTestCase.test_router_add_routes": {
            "name": "test_router_add_routes",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RouterTestCase.test_router_dict": {
            "name": "test_router_dict",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-compose-master/tests/route_tests.py": {
        "controller": {
            "name": "controller",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "a_middleware": {
            "name": "a_middleware",
            "location": 14,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "b_middleware": {
            "name": "b_middleware",
            "location": 15,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "c_middleware": {
            "name": "c_middleware",
            "location": 16,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "RouteTestCase.test_make_url_rule": {
            "name": "test_make_url_rule",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RouteTestCase.test_unnamed_make_url_rule": {
            "name": "test_unnamed_make_url_rule",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-compose-master/tests/type_tests.py": {
        "Handler.test": {
            "name": "test",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Handler.leak": {
            "name": "leak",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "A.leak": {
            "name": "leak",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "A.check_val": {
            "name": "check_val",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "B.leak": {
            "name": "leak",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeTestCase.test_component": {
            "name": "test_component",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeTestCase.test_component_leaking": {
            "name": "test_component_leaking",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeTestCase.test_dispatch_request": {
            "name": "test_dispatch_request",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeTestCase.test_dispatch_request.controller": {
            "name": "controller",
            "location": 57,
            "return": [],
            "arguments": {
                "handler": []
            }
        }
    },
    "flask-compose-master/tests/__init__.py": {}
}
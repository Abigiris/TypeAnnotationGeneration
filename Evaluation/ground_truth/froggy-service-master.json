{
    "froggy-service-master/backend/manage.py": {},
    "froggy-service-master/backend/__init__.py": {},
    "froggy-service-master/backend/apps/__init__.py": {},
    "froggy-service-master/backend/apps/arranges/apps.py": {},
    "froggy-service-master/backend/apps/arranges/models.py": {
        "Arrange.__str__": {
            "name": "__str__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.format_arrange_time": {
            "name": "format_arrange_time",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "format_": []
            }
        },
        "Arrange.html_content": {
            "name": "html_content",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.published": {
            "name": "published",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.email_content": {
            "name": "email_content",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.can_publish": {
            "name": "can_publish",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.send": {
            "name": "send",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Arrange.publish": {
            "name": "publish",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/arranges/serializers.py": {
        "FilteredPublishedArrangeSerializer.to_representation": {
            "name": "to_representation",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ArrangeSerializer.get_arrange_time": {
            "name": "get_arrange_time",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "froggy-service-master/backend/apps/arranges/tests.py": {},
    "froggy-service-master/backend/apps/arranges/views.py": {},
    "froggy-service-master/backend/apps/arranges/__init__.py": {},
    "froggy-service-master/backend/apps/arranges/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/arranges/migrations/0002_arrange_case.py": {},
    "froggy-service-master/backend/apps/arranges/migrations/0003_auto_20200303_2205.py": {},
    "froggy-service-master/backend/apps/arranges/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/cases/admin.py": {
        "ArrangeInlineForm.clean": {
            "name": "clean",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrangeInline.get_fields": {
            "name": "get_fields",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ArrangeInline.get_readonly_fields": {
            "name": "get_readonly_fields",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CaseForm.clean_mobile": {
            "name": "clean_mobile",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseAdmin.get_form": {
            "name": "get_form",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CaseAdmin.suit_form_tabs": {
            "name": "suit_form_tabs",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseAdmin.save_model": {
            "name": "save_model",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "form": [],
                "change": []
            }
        },
        "CaseAdmin.get_search_results": {
            "name": "get_search_results",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "search_term": []
            }
        },
        "CaseAdmin.get_date_hierarchy_drilldown": {
            "name": "get_date_hierarchy_drilldown",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "year_lookup": [],
                "month_lookup": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/apps.py": {
        "CasesConfig.ready": {
            "name": "ready",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/filters.py": {
        "ExcludeIDFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "ExcludeIDFilter.get_terms": {
            "name": "get_terms",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ExcludeIDFilter.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "CaseTypeFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "CaseTypeFilter.get_terms": {
            "name": "get_terms",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseTypeFilter.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "CaseRegionFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "CaseRegionFilter.get_terms": {
            "name": "get_terms",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseRegionFilter.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/insights.py": {
        "to_unix": {
            "name": "to_unix",
            "location": 28,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "get_case_state_pie_data": {
            "name": "get_case_state_pie_data",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "get_case_region_pie_data": {
            "name": "get_case_region_pie_data",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "get_case_type_pie_data": {
            "name": "get_case_type_pie_data",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "get_case_state_packed_bubble_data": {
            "name": "get_case_state_packed_bubble_data",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "get_case_region_packed_bubble_data": {
            "name": "get_case_region_packed_bubble_data",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "get_case_type_packed_bubble_data": {
            "name": "get_case_type_packed_bubble_data",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "get_case_line_data": {
            "name": "get_case_line_data",
            "location": 119,
            "return": [],
            "arguments": {
                "accumulative": []
            }
        },
        "get_case_type_line_data": {
            "name": "get_case_type_line_data",
            "location": 142,
            "return": [],
            "arguments": {
                "accumulative": []
            }
        },
        "get_case_region_line_data": {
            "name": "get_case_region_line_data",
            "location": 167,
            "return": [],
            "arguments": {
                "accumulative": []
            }
        },
        "get_case_content_wordcloud_data": {
            "name": "get_case_content_wordcloud_data",
            "location": 192,
            "return": [],
            "arguments": {}
        },
        "get_region_case_count_and_top_type_data": {
            "name": "get_region_case_count_and_top_type_data",
            "location": 220,
            "return": [],
            "arguments": {}
        }
    },
    "froggy-service-master/backend/apps/cases/models.py": {
        "Type.__str__": {
            "name": "__str__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Region.__str__": {
            "name": "__str__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseQuerySet.update": {
            "name": "update",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.save": {
            "name": "save",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.__str__": {
            "name": "__str__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.to_dict": {
            "name": "to_dict",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.migrate_files_from_temp_storage": {
            "name": "migrate_files_from_temp_storage",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.first_history": {
            "name": "first_history",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.state_title": {
            "name": "state_title",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.admin_absolute_url": {
            "name": "admin_absolute_url",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "Case.format_create_time": {
            "name": "format_create_time",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "format_": []
            }
        },
        "Case.can_disapprove": {
            "name": "can_disapprove",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.can_arrange": {
            "name": "can_arrange",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.can_close": {
            "name": "can_close",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.confirm": {
            "name": "confirm",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "template_name": []
            }
        },
        "Case.disapprove": {
            "name": "disapprove",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.arrange": {
            "name": "arrange",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.close": {
            "name": "close",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Case.rearrange": {
            "name": "rearrange",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseHistory.number": {
            "name": "number",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseHistory.__str__": {
            "name": "__str__",
            "location": 319,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/schemas.py": {},
    "froggy-service-master/backend/apps/cases/serializers.py": {
        "CaseSerializer.get_create_time": {
            "name": "get_create_time",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "CaseSerializer.get_type": {
            "name": "get_type",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "CaseSerializer.get_region": {
            "name": "get_region",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "CaseSerializer.get_state": {
            "name": "get_state",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/signals.py": {
        "create_history": {
            "name": "create_history",
            "location": 5,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": [
                    "Case"
                ]
            }
        },
        "new_case_notify": {
            "name": "new_case_notify",
            "location": 14,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": [
                    "Case"
                ],
                "created": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/slack.py": {
        "new_case_notify": {
            "name": "new_case_notify",
            "location": 5,
            "return": [],
            "arguments": {
                "case": [],
                "topic": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/tests.py": {
        "CaseModelTestCase.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseModelTestCase.test_manager_update": {
            "name": "test_manager_update",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseCrudTestCase.setUp": {
            "name": "setUp",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseCrudTestCase.test_set_up": {
            "name": "test_set_up",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseCrudTestCase.test_transition": {
            "name": "test_transition",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseCrudTestCase.test_case_update": {
            "name": "test_case_update",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseCrudTestCase.test_case_delete": {
            "name": "test_case_delete",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/views.py": {
        "RegionViewSet.dispatch": {
            "name": "dispatch",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "TypeViewSet.dispatch": {
            "name": "dispatch",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseViewSet.get_serializer_class": {
            "name": "get_serializer_class",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseViewSet.get_authenticators": {
            "name": "get_authenticators",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseViewSet.perform_create": {
            "name": "perform_create",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "CaseViewSet.vuetable": {
            "name": "vuetable",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.get_data_from_cache": {
            "name": "get_data_from_cache",
            "location": 143,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "CaseInsightViewSet.case_type_pie": {
            "name": "case_type_pie",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_state_pie": {
            "name": "case_state_pie",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_region_pie": {
            "name": "case_region_pie",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_state_packed_bubble": {
            "name": "case_state_packed_bubble",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_type_packed_bubble": {
            "name": "case_type_packed_bubble",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_region_packed_bubble": {
            "name": "case_region_packed_bubble",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_line": {
            "name": "case_line",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_type_line": {
            "name": "case_type_line",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_region_line": {
            "name": "case_region_line",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_content_wordcloud": {
            "name": "case_content_wordcloud",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaseInsightViewSet.case_region_case_count_and_top_type": {
            "name": "case_region_case_count_and_top_type",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/widgets.py": {
        "InsightWidget.content": {
            "name": "content",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/__init__.py": {},
    "froggy-service-master/backend/apps/cases/management/__init__.py": {},
    "froggy-service-master/backend/apps/cases/management/commands/cache_insights.py": {
        "Command.handle": {
            "name": "handle",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/cases/management/commands/__init__.py": {},
    "froggy-service-master/backend/apps/cases/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/cases/migrations/0002_auto_20190122_2131.py": {},
    "froggy-service-master/backend/apps/cases/migrations/0003_auto_20190226_1138.py": {},
    "froggy-service-master/backend/apps/cases/migrations/0004_auto_20190226_1439.py": {},
    "froggy-service-master/backend/apps/cases/migrations/0005_auto_20190326_1917.py": {},
    "froggy-service-master/backend/apps/cases/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/files/admin.py": {},
    "froggy-service-master/backend/apps/files/apps.py": {
        "FilesConfig.ready": {
            "name": "ready",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/models.py": {
        "TempFile.__str__": {
            "name": "__str__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.url": {
            "name": "url",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.check_duplicate": {
            "name": "check_duplicate",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.check_size_per_file": {
            "name": "check_size_per_file",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.check_size_per_case": {
            "name": "check_size_per_case",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.check_size_per_day": {
            "name": "check_size_per_day",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.save": {
            "name": "save",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFile.migrate_to_case": {
            "name": "migrate_to_case",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "case": []
            }
        },
        "CaseFile.__str__": {
            "name": "__str__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseFile.save": {
            "name": "save",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseFile.url": {
            "name": "url",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseFile.preview": {
            "name": "preview",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/serializers.py": {
        "TempFileSerializer.get_url": {
            "name": "get_url",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/signals.py": {
        "remove_file_from_storage": {
            "name": "remove_file_from_storage",
            "location": 3,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/tests.py": {
        "BaseTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TempFileTestCase.upload": {
            "name": "upload",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "file_name": [],
                "case_uuid": []
            }
        },
        "TempFileTestCase.test_delete": {
            "name": "test_delete",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempFileTestCase.test_duplicate_raise": {
            "name": "test_duplicate_raise",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseFileTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 55,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CaseFileTestCase.test": {
            "name": "test",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/views.py": {
        "TempFileViewSet.perform_create": {
            "name": "perform_create",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/__init__.py": {},
    "froggy-service-master/backend/apps/files/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/files/migrations/0002_auto_20190226_1138.py": {},
    "froggy-service-master/backend/apps/files/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/files/storages/gcloud.py": {},
    "froggy-service-master/backend/apps/files/storages/local.py": {
        "BaseFileSystemStorage.__new__": {
            "name": "__new__",
            "location": 10,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "froggy-service-master/backend/apps/files/storages/__init__.py": {},
    "froggy-service-master/backend/apps/mails/admin.py": {},
    "froggy-service-master/backend/apps/mails/apps.py": {},
    "froggy-service-master/backend/apps/mails/models.py": {
        "SendGridMailTemplate.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMailTemplate.save": {
            "name": "save",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMailTemplate.retrieve_template": {
            "name": "retrieve_template",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMail.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMail.save": {
            "name": "save",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMail.send": {
            "name": "send",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridMail.send_template": {
            "name": "send_template",
            "location": 90,
            "return": [],
            "arguments": {
                "from_email": [],
                "to_email": [],
                "data": [],
                "template_id": []
            }
        }
    },
    "froggy-service-master/backend/apps/mails/serializers.py": {},
    "froggy-service-master/backend/apps/mails/tests.py": {
        "SendGridTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridTestCase.test_template_save": {
            "name": "test_template_save",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridTestCase.test_template": {
            "name": "test_template",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendGridTestCase.test_send": {
            "name": "test_send",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/mails/utils.py": {
        "sendgrid_system_mail": {
            "name": "sendgrid_system_mail",
            "location": 5,
            "return": [],
            "arguments": {
                "message": []
            }
        }
    },
    "froggy-service-master/backend/apps/mails/views.py": {
        "MailViewSet.resend": {
            "name": "resend",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "pk": []
            }
        }
    },
    "froggy-service-master/backend/apps/mails/__init__.py": {},
    "froggy-service-master/backend/apps/mails/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/mails/migrations/0002_auto_20190122_2131.py": {},
    "froggy-service-master/backend/apps/mails/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/marquees/admin.py": {},
    "froggy-service-master/backend/apps/marquees/apps.py": {},
    "froggy-service-master/backend/apps/marquees/models.py": {
        "MarqueeMessage.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/marquees/serializers.py": {},
    "froggy-service-master/backend/apps/marquees/views.py": {
        "MarqueeMessageViewSet.dispatch": {
            "name": "dispatch",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "froggy-service-master/backend/apps/marquees/__init__.py": {},
    "froggy-service-master/backend/apps/marquees/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/marquees/migrations/0002_auto_20200303_2205.py": {},
    "froggy-service-master/backend/apps/marquees/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/users/admin.py": {
        "UserAdmin.get_search_results": {
            "name": "get_search_results",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "search_term": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/apps.py": {},
    "froggy-service-master/backend/apps/users/authentication.py": {
        "AccountKitUserAuthentication.authenticate": {
            "name": "authenticate",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AccountKitUserAuthentication.authenticate_credentials": {
            "name": "authenticate_credentials",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/forms.py": {
        "UserCreationForm.clean_password1": {
            "name": "clean_password1",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCreationForm.clean_password2": {
            "name": "clean_password2",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCreationForm.save": {
            "name": "save",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "commit": []
            }
        },
        "UserChangeForm.clean_password": {
            "name": "clean_password",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/models.py": {
        "UserManager._create_user": {
            "name": "_create_user",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": [],
                "is_staff": [],
                "is_superuser": []
            }
        },
        "UserManager.create_user": {
            "name": "create_user",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "UserManager.create_superuser": {
            "name": "create_superuser",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "UserManager.create_auth0_user": {
            "name": "create_auth0_user",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.first_name": {
            "name": "first_name",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.avatar_tag": {
            "name": "avatar_tag",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.clean": {
            "name": "clean",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.save": {
            "name": "save",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/utils.py": {
        "jwt_payload_handler": {
            "name": "jwt_payload_handler",
            "location": 8,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "jwt_encode_handler": {
            "name": "jwt_encode_handler",
            "location": 18,
            "return": [],
            "arguments": {
                "payload": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/views.py": {
        "UserViewSet.token_auth": {
            "name": "token_auth",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/__init__.py": {},
    "froggy-service-master/backend/apps/users/management/commands/init_superuser.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/migrations/0001_initial.py": {},
    "froggy-service-master/backend/apps/users/migrations/__init__.py": {},
    "froggy-service-master/backend/apps/users/tests/tests.py": {
        "UserModelTestCase.test_create_normal_user": {
            "name": "test_create_normal_user",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserModelTestCase.test_create_auth0_user": {
            "name": "test_create_auth0_user",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/apps/users/tests/__init__.py": {},
    "froggy-service-master/backend/config/api.py": {},
    "froggy-service-master/backend/config/auth.py": {
        "firebase_app": {
            "name": "firebase_app",
            "location": 8,
            "return": [],
            "arguments": {
                "credential_path": []
            }
        }
    },
    "froggy-service-master/backend/config/boxes.py": {},
    "froggy-service-master/backend/config/charts.py": {
        "get_highchart_pie": {
            "name": "get_highchart_pie",
            "location": 1,
            "return": [],
            "arguments": {
                "data": [],
                "title": []
            }
        },
        "get_highchart_line": {
            "name": "get_highchart_line",
            "location": 36,
            "return": [],
            "arguments": {
                "data": [],
                "y_title": [],
                "title": []
            }
        },
        "get_highchart_word_cloud": {
            "name": "get_highchart_word_cloud",
            "location": 87,
            "return": [],
            "arguments": {
                "data": [],
                "title": []
            }
        },
        "get_highchart_packed_bubble": {
            "name": "get_highchart_packed_bubble",
            "location": 100,
            "return": [],
            "arguments": {
                "data": [],
                "title": []
            }
        }
    },
    "froggy-service-master/backend/config/middlewares.py": {
        "HealthCheckMiddleware.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "HealthCheckMiddleware.__call__": {
            "name": "__call__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HealthCheckMiddleware.healthz": {
            "name": "healthz",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HealthCheckMiddleware.readiness": {
            "name": "readiness",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "froggy-service-master/backend/config/settings.py": {},
    "froggy-service-master/backend/config/site.py": {
        "DashboardSite.get_urls": {
            "name": "get_urls",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "froggy-service-master/backend/config/storages.py": {
        "MediaStorage.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MediaStorage.url": {
            "name": "url",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "StaticFileStorage.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticFileStorage.url": {
            "name": "url",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "froggy-service-master/backend/config/urls.py": {},
    "froggy-service-master/backend/config/views.py": {},
    "froggy-service-master/backend/config/wsgi.py": {},
    "froggy-service-master/backend/config/__init__.py": {}
}
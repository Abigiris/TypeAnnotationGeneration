{
    "functional-text-parser-master/app.py": {},
    "functional-text-parser-master/app/routes.py": {
        "encode": {
            "name": "encode",
            "location": 9,
            "return": [],
            "arguments": {
                "string": []
            }
        }
    },
    "functional-text-parser-master/app/__init__.py": {},
    "functional-text-parser-master/app/functions/rle.py": {
        "listify_string": {
            "name": "listify_string",
            "location": 7,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "group_consecutive_elements": {
            "name": "group_consecutive_elements",
            "location": 13,
            "return": [
                "List[tuple]"
            ],
            "arguments": {
                "l": [
                    "list"
                ]
            }
        },
        "compare_tuples": {
            "name": "compare_tuples",
            "location": 19,
            "return": [],
            "arguments": {
                "t": [
                    "List[tuple]"
                ]
            }
        },
        "get_break_points": {
            "name": "get_break_points",
            "location": 25,
            "return": [],
            "arguments": {
                "pair_comparison": [
                    "List[tuple]"
                ]
            }
        },
        "break_list": {
            "name": "break_list",
            "location": 35,
            "return": [],
            "arguments": {
                "list": [
                    "List"
                ],
                "break_points": []
            }
        },
        "aggregate_broken_list": {
            "name": "aggregate_broken_list",
            "location": 45,
            "return": [],
            "arguments": {
                "broken_list": []
            }
        },
        "rle": {
            "name": "rle",
            "location": 51,
            "return": [],
            "arguments": {
                "string": []
            }
        }
    },
    "functional-text-parser-master/app/functions/__init__.py": {},
    "functional-text-parser-master/app/tests/test_rle.py": {
        "test_listify_string": {
            "name": "test_listify_string",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_get_pairs": {
            "name": "test_get_pairs",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_compare_pairs": {
            "name": "test_compare_pairs",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_get_break_points": {
            "name": "test_get_break_points",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_break_list": {
            "name": "test_break_list",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_aggregate_broken_list": {
            "name": "test_aggregate_broken_list",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_rle": {
            "name": "test_rle",
            "location": 68,
            "return": [],
            "arguments": {}
        }
    },
    "functional-text-parser-master/app/tests/__init__.py": {}
}
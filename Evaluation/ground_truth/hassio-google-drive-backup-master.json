{
    "hassio-google-drive-backup-master/hassio-google-drive-backup/setup.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/const.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/debugworker.py": {
        "DebugWorker.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "info": [
                    "GlobalInfo"
                ],
                "config": [
                    "Config"
                ],
                "resolver": [
                    "Resolver"
                ],
                "session": [
                    "ClientSession"
                ],
                "ha": [
                    "HaRequests"
                ],
                "coord": [
                    "Coordinator"
                ],
                "ha_source": [
                    "HaSource"
                ]
            }
        },
        "DebugWorker.buildClearReport": {
            "name": "buildClearReport",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DebugWorker.formatDate": {
            "name": "formatDate",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "date": [
                    "datetime"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/logger.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 184,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "getHistory": {
            "name": "getHistory",
            "location": 188,
            "return": [],
            "arguments": {
                "index": [],
                "html": []
            }
        },
        "getLast": {
            "name": "getLast",
            "location": 192,
            "return": [
                "LogRecord"
            ],
            "arguments": {}
        },
        "reset": {
            "name": "reset",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "HistoryHandler.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HistoryHandler.reset": {
            "name": "reset",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HistoryHandler.emit": {
            "name": "emit",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "LogRecord"
                ]
            }
        },
        "HistoryHandler.getHistory": {
            "name": "getHistory",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "html": []
            }
        },
        "HistoryHandler.getLast": {
            "name": "getLast",
            "location": 55,
            "return": [
                "LogRecord"
            ],
            "arguments": {
                "self": []
            }
        },
        "StandardLogger.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "StandardLogger.trace": {
            "name": "trace",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "StandardLogger.printException": {
            "name": "printException",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "ex": [
                    "Exception"
                ]
            }
        },
        "StandardLogger.formatException": {
            "name": "formatException",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "e": [
                    "Exception"
                ]
            }
        },
        "StandardLogger._format": {
            "name": "_format",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "tbe": []
            }
        },
        "StandardLogger._formatStack": {
            "name": "_formatStack",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "tbe": []
            }
        },
        "StandardLogger.overrideLevel": {
            "name": "overrideLevel",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "history": []
            }
        },
        "StandardLogger._compressFrames": {
            "name": "_compressFrames",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "buffer": []
            }
        },
        "TraceLogger.__init__": {
            "name": "__init__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TraceLogger.log": {
            "name": "log",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "lvl": [],
                "msg": []
            }
        },
        "TraceLogger.info": {
            "name": "info",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraceLogger.error": {
            "name": "error",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraceLogger.warn": {
            "name": "warn",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/module.py": {
        "BaseModule.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "override_dns": []
            }
        },
        "BaseModule.getTriggers": {
            "name": "getTriggers",
            "location": 33,
            "return": [
                "List[Trigger]"
            ],
            "arguments": {
                "self": [],
                "coord": [
                    "Coordinator"
                ],
                "ha": [
                    "HaSource"
                ],
                "drive": [
                    "DriveSource"
                ],
                "watcher": [
                    "Watcher"
                ],
                "server": [
                    "UiServer"
                ]
            }
        },
        "BaseModule.getDrive": {
            "name": "getDrive",
            "location": 38,
            "return": [
                "BackupDestination"
            ],
            "arguments": {
                "self": [],
                "drive": [
                    "DriveSource"
                ]
            }
        },
        "BaseModule.getHa": {
            "name": "getHa",
            "location": 43,
            "return": [
                "BackupSource"
            ],
            "arguments": {
                "self": [],
                "ha": [
                    "HaSource"
                ]
            }
        },
        "BaseModule.getStartables": {
            "name": "getStartables",
            "location": 48,
            "return": [
                "List[Startable]"
            ],
            "arguments": {
                "self": [],
                "debug_server": [
                    "DebugServer"
                ],
                "ha_updater": [
                    "HaUpdater"
                ],
                "debugger": [
                    "DebugWorker"
                ],
                "ha_source": [
                    "HaSource"
                ],
                "server": [
                    "UiServer"
                ],
                "restarter": [
                    "Restarter"
                ],
                "syncer": [
                    "Scyncer"
                ],
                "watcher": [
                    "Watcher"
                ],
                "stopper": [
                    "AddonStopper"
                ]
            }
        },
        "BaseModule.getSession": {
            "name": "getSession",
            "location": 55,
            "return": [
                "ClientSession"
            ],
            "arguments": {
                "self": [],
                "resolver": [
                    "Resolver"
                ]
            }
        },
        "MainModule.getConfig": {
            "name": "getConfig",
            "location": 65,
            "return": [
                "Config"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/starter.py": {
        "Starter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "startables": [
                    "List[Startable]"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/time.py": {
        "Time.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "local_tz": []
            }
        },
        "Time.now": {
            "name": "now",
            "location": 19,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Time.nowLocal": {
            "name": "nowLocal",
            "location": 22,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Time.parse": {
            "name": "parse",
            "location": 26,
            "return": [
                "datetime"
            ],
            "arguments": {
                "cls": [],
                "text": [
                    "str"
                ]
            }
        },
        "Time.toLocal": {
            "name": "toLocal",
            "location": 32,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "datetime"
                ]
            }
        },
        "Time.toUtc": {
            "name": "toUtc",
            "location": 35,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "datetime"
                ]
            }
        },
        "Time.local": {
            "name": "local",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "year": [],
                "month": [],
                "day": [],
                "hour": [],
                "minute": [],
                "second": [],
                "ms": []
            }
        },
        "Time.formatDelta": {
            "name": "formatDelta",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "time": [
                    "datetime"
                ],
                "now": []
            }
        },
        "Time.asRfc3339String": {
            "name": "asRfc3339String",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "time": [
                    "datetime"
                ]
            }
        },
        "AcceleratedTime.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "dialation": []
            }
        },
        "AcceleratedTime.now": {
            "name": "now",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AcceleratedTime.nowLocal": {
            "name": "nowLocal",
            "location": 99,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/tracing_session.py": {
        "TracingSession.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TracingSession.record": {
            "name": "record",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "bool"
                ]
            }
        },
        "TracingSession.clearRecord": {
            "name": "clearRecord",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TracingSession.print_headers": {
            "name": "print_headers",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/__main__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/boolvalidator.py": {
        "BoolValidator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BoolValidator.validate": {
            "name": "validate",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BoolValidator.strToBool": {
            "name": "strToBool",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/byteformatter.py": {
        "ByteFormatter.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ByteFormatter.parse": {
            "name": "parse",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "ByteFormatter.format": {
            "name": "format",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "bytes": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/bytesizeasstringvalidator.py": {
        "BytesizeAsStringValidator.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "minimum": [],
                "maximum": []
            }
        },
        "BytesizeAsStringValidator.validate": {
            "name": "validate",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BytesizeAsStringValidator.formatForUi": {
            "name": "formatForUi",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/config.py": {
        "GenConfig.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "days": [],
                "weeks": [],
                "months": [],
                "years": [],
                "day_of_week": [],
                "day_of_month": [],
                "day_of_year": [],
                "aggressive": []
            }
        },
        "GenConfig.__eq__": {
            "name": "__eq__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "GenConfig.__hash__": {
            "name": "__hash__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.fromFile": {
            "name": "fromFile",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": [],
                "config_path": []
            }
        },
        "Config.withOverrides": {
            "name": "withOverrides",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": [],
                "overrides": []
            }
        },
        "Config.withFileOverrides": {
            "name": "withFileOverrides",
            "location": 104,
            "return": [],
            "arguments": {
                "cls": [],
                "override_path": []
            }
        },
        "Config.fromEnvironment": {
            "name": "fromEnvironment",
            "location": 113,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Config.getConfigFor": {
            "name": "getConfigFor",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "Config.validateUpdate": {
            "name": "validateUpdate",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "additions": []
            }
        },
        "Config.validate": {
            "name": "validate",
            "location": 149,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "new_config": []
            }
        },
        "Config.update": {
            "name": "update",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "new_config": []
            }
        },
        "Config.getServerOptions": {
            "name": "getServerOptions",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.subscribe": {
            "name": "subscribe",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "Config.clientIdentifier": {
            "name": "clientIdentifier",
            "location": 212,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.getGenerationalConfig": {
            "name": "getGenerationalConfig",
            "location": 226,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config._loadRetained": {
            "name": "_loadRetained",
            "location": 248,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.isRetained": {
            "name": "isRetained",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "Config.setRetained": {
            "name": "setRetained",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "slug": [],
                "retain": []
            }
        },
        "Config.isExplicit": {
            "name": "isExplicit",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "setting": []
            }
        },
        "Config.override": {
            "name": "override",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "setting": [
                    "Setting"
                ],
                "value": []
            }
        },
        "Config.get": {
            "name": "get",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "setting": [
                    "Setting"
                ]
            }
        },
        "Config.getForUi": {
            "name": "getForUi",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "setting": [
                    "Setting"
                ]
            }
        },
        "Config.getTokenServers": {
            "name": "getTokenServers",
            "location": 298,
            "return": [
                "List[URL]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Config.mustSaveUpgradeChanges": {
            "name": "mustSaveUpgradeChanges",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.getAllConfig": {
            "name": "getAllConfig",
            "location": 304,
            "return": [
                "Dict[(Setting, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.persistedChanges": {
            "name": "persistedChanges",
            "location": 307,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.useLegacyIgnoredBehavior": {
            "name": "useLegacyIgnoredBehavior",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "bool"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/createoptions.py": {
        "CreateOptions.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "when": [
                    "datetime"
                ],
                "name_template": [
                    "str"
                ],
                "retain_sources": [
                    "Dict[(str, bool)]"
                ],
                "note": [
                    "str"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/durationasstringvalidator.py": {
        "DurationAsStringValidator.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "minimum": [],
                "maximum": [],
                "base_seconds": [],
                "default_as_empty": []
            }
        },
        "DurationAsStringValidator.validate": {
            "name": "validate",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DurationAsStringValidator.formatForUi": {
            "name": "formatForUi",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/durationparser.py": {
        "DurationParser.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DurationParser.parse": {
            "name": "parse",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "DurationParser.format": {
            "name": "format",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "duration": [
                    "timedelta"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/floatvalidator.py": {
        "FloatValidator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "minimum": [],
                "maximum": []
            }
        },
        "FloatValidator.validate": {
            "name": "validate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/intvalidator.py": {
        "IntValidator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "minimum": [],
                "maximum": []
            }
        },
        "IntValidator.validate": {
            "name": "validate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/listvalidator.py": {
        "ListValidator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "values": []
            }
        },
        "ListValidator.validate": {
            "name": "validate",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/regexvalidator.py": {
        "RegexValidator.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "regex": []
            }
        },
        "RegexValidator.validate": {
            "name": "validate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/settings.py": {
        "getValidator": {
            "name": "getValidator",
            "location": 421,
            "return": [],
            "arguments": {
                "name": [],
                "schema": []
            }
        },
        "isStaging": {
            "name": "isStaging",
            "location": 484,
            "return": [],
            "arguments": {}
        },
        "Setting.default": {
            "name": "default",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Setting.validator": {
            "name": "validator",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Setting.key": {
            "name": "key",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/startable.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/stringvalidator.py": {
        "StringValidator.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "StringValidator.validate": {
            "name": "validate",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/validator.py": {
        "Validator.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Validator.validate": {
            "name": "validate",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Validator.raiseForValue": {
            "name": "raiseForValue",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Validator.formatForUi": {
            "name": "formatForUi",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/version.py": {
        "Version.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.default": {
            "name": "default",
            "location": 11,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Version.parse": {
            "name": "parse",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [],
                "version": [
                    "str"
                ]
            }
        },
        "Version._removeUnexpected": {
            "name": "_removeUnexpected",
            "location": 36,
            "return": [],
            "arguments": {
                "cls": [],
                "version": [
                    "str"
                ]
            }
        },
        "Version.__getitem__": {
            "name": "__getitem__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Version.length": {
            "name": "length",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version._compare": {
            "name": "_compare",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__lt__": {
            "name": "__lt__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__le__": {
            "name": "__le__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__eq__": {
            "name": "__eq__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__ne__": {
            "name": "__ne__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__gt__": {
            "name": "__gt__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__ge__": {
            "name": "__ge__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/config/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/creds/creds.py": {
        "Creds.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "id": [
                    "str"
                ],
                "expiration": [
                    "datetime"
                ],
                "access_token": [
                    "str"
                ],
                "refresh_token": [
                    "str"
                ],
                "secret": [
                    "Optional[str]"
                ],
                "original_expiration": [
                    "datetime"
                ]
            }
        },
        "Creds.id": {
            "name": "id",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.secret": {
            "name": "secret",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.refresh_token": {
            "name": "refresh_token",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.access_token": {
            "name": "access_token",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.expiration": {
            "name": "expiration",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.original_expiration": {
            "name": "original_expiration",
            "location": 49,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creds.is_expired": {
            "name": "is_expired",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Creds.serialize": {
            "name": "serialize",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "include_secret": []
            }
        },
        "Creds.load": {
            "name": "load",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": [],
                "time": [
                    "Time"
                ],
                "data": [],
                "id": [],
                "secret": [],
                "original_expiration": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/creds/driverequester.py": {
        "DriveRequester.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "session": [
                    "ClientSession"
                ],
                "resolver": [
                    "Resolver"
                ]
            }
        },
        "DriveRequester.buildTimeout": {
            "name": "buildTimeout",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/creds/exchanger.py": {
        "Exchanger.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "session": [
                    "ClientSession"
                ],
                "config": [
                    "Config"
                ],
                "drive": [
                    "DriveRequester"
                ],
                "client_id": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ],
                "redirect": [
                    "URL"
                ]
            }
        },
        "Exchanger.refreshCredentials": {
            "name": "refreshCredentials",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "refresh_token": []
            }
        },
        "Exchanger._get_expiration": {
            "name": "_get_expiration",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/creds/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/debug/debug_server.py": {
        "DebugServer.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/debug/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/authcodequery.py": {
        "AuthCodeQuery.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "session": [
                    "ClientSession"
                ],
                "time": [
                    "Time"
                ],
                "drive": [
                    "DriveRequester"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/driverequests.py": {
        "DriveRequests.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "drive": [
                    "DriveRequester"
                ],
                "session": [
                    "ClientSession"
                ],
                "exchanger": [
                    "Exchanger"
                ]
            }
        },
        "DriveRequests.might_be_oob_creds": {
            "name": "might_be_oob_creds",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests.isCustomCreds": {
            "name": "isCustomCreds",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests._getAuthHeaders": {
            "name": "_getAuthHeaders",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests.enabled": {
            "name": "enabled",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests._enabledCheck": {
            "name": "_enabledCheck",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests.tryLoadCredentials": {
            "name": "tryLoadCredentials",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveRequests.saveCredentials": {
            "name": "saveCredentials",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "creds": [
                    "Creds"
                ]
            }
        },
        "DriveRequests._getNextChunkSize": {
            "name": "_getNextChunkSize",
            "location": 335,
            "return": [],
            "arguments": {
                "self": [],
                "last_chunk_size": [],
                "last_chunk_seconds": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/drivesource.py": {
        "DriveSource.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "drive_requests": [
                    "DriveRequests"
                ],
                "info": [
                    "GlobalInfo"
                ],
                "session": [
                    "ClientSession"
                ],
                "folderfinder": [
                    "FolderFinder"
                ]
            }
        },
        "DriveSource.saveCreds": {
            "name": "saveCreds",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "creds": [
                    "Creds"
                ]
            }
        },
        "DriveSource.isCustomCreds": {
            "name": "isCustomCreds",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.might_be_oob_creds": {
            "name": "might_be_oob_creds",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.name": {
            "name": "name",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.title": {
            "name": "title",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.maxCount": {
            "name": "maxCount",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.upload": {
            "name": "upload",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.enabled": {
            "name": "enabled",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.needsConfiguration": {
            "name": "needsConfiguration",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.freeSpace": {
            "name": "freeSpace",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.checkBeforeChanges": {
            "name": "checkBeforeChanges",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.icon": {
            "name": "icon",
            "location": 105,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.isWorking": {
            "name": "isWorking",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.detail": {
            "name": "detail",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveSource.truncateAppProperty": {
            "name": "truncateAppProperty",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "DriveSource._validateBackup": {
            "name": "_validateBackup",
            "location": 271,
            "return": [
                "DriveBackup"
            ],
            "arguments": {
                "self": [],
                "backup": [
                    "Backup"
                ]
            }
        },
        "DriveSource._timeToRfc3339String": {
            "name": "_timeToRfc3339String",
            "location": 278,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "time": [
                    "datetime"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/folderfinder.py": {
        "FolderFinder.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "drive_requests": [
                    "DriveRequests"
                ]
            }
        },
        "FolderFinder.resolveExisting": {
            "name": "resolveExisting",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "FolderFinder._isSharedDrive": {
            "name": "_isSharedDrive",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "folder": []
            }
        },
        "FolderFinder.currentIsSharedDrive": {
            "name": "currentIsSharedDrive",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FolderFinder.getExisting": {
            "name": "getExisting",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FolderFinder.reset": {
            "name": "reset",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FolderFinder.getCachedFolder": {
            "name": "getCachedFolder",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FolderFinder.deCache": {
            "name": "deCache",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FolderFinder._isValidFolder": {
            "name": "_isValidFolder",
            "location": 176,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/thumbnail.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/drive/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/exceptions/exceptions.py": {
        "ensureKey": {
            "name": "ensureKey",
            "location": 16,
            "return": [],
            "arguments": {
                "key": [],
                "target": [],
                "name": []
            }
        },
        "KnownError.message": {
            "name": "message",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KnownError.code": {
            "name": "code",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KnownError.httpStatus": {
            "name": "httpStatus",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "KnownError.data": {
            "name": "data",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KnownError.retrySoon": {
            "name": "retrySoon",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedError.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "SimulatedError.code": {
            "name": "code",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedError.message": {
            "name": "message",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogicError.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "LogicError.message": {
            "name": "message",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogicError.code": {
            "name": "code",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtocolError.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "parameter": [],
                "object_name": [],
                "debug_object": []
            }
        },
        "ProtocolError.message": {
            "name": "message",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtocolError.code": {
            "name": "code",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupInProgress.message": {
            "name": "message",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupInProgress.code": {
            "name": "code",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupPasswordKeyInvalid.message": {
            "name": "message",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupPasswordKeyInvalid.code": {
            "name": "code",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupPasswordKeyInvalid.retrySoon": {
            "name": "retrySoon",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadFailed.message": {
            "name": "message",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadFailed.code": {
            "name": "code",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCredentialsExpired.message": {
            "name": "message",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCredentialsExpired.code": {
            "name": "code",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCredentialsExpired.retrySoon": {
            "name": "retrySoon",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoBackup.message": {
            "name": "message",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoBackup.code": {
            "name": "code",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotUploadable.message": {
            "name": "message",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotUploadable.code": {
            "name": "code",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PleaseWait.message": {
            "name": "message",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PleaseWait.code": {
            "name": "code",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidConfigurationValue.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "current": []
            }
        },
        "InvalidConfigurationValue.message": {
            "name": "message",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidConfigurationValue.code": {
            "name": "code",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteMutlipleBackupsError.__init__": {
            "name": "__init__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "delete_sources": []
            }
        },
        "DeleteMutlipleBackupsError.message": {
            "name": "message",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteMutlipleBackupsError.code": {
            "name": "code",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteMutlipleBackupsError.data": {
            "name": "data",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeleteMutlipleBackupsError.retrySoon": {
            "name": "retrySoon",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveQuotaExceeded.message": {
            "name": "message",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveQuotaExceeded.code": {
            "name": "code",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DriveQuotaExceeded.retrySoon": {
            "name": "retrySoon",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleDnsFailure.message": {
            "name": "message",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleDnsFailure.code": {
            "name": "code",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCantConnect.message": {
            "name": "message",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCantConnect.code": {
            "name": "code",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleInternalError.message": {
            "name": "message",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleInternalError.code": {
            "name": "code",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleTimeoutError.message": {
            "name": "message",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleTimeoutError.code": {
            "name": "code",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleTimeoutError.factory": {
            "name": "factory",
            "location": 219,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "GoogleRateLimitError.message": {
            "name": "message",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleRateLimitError.code": {
            "name": "code",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleSessionError.message": {
            "name": "message",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleSessionError.code": {
            "name": "code",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeAssistantDeleteError.message": {
            "name": "message",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeAssistantDeleteError.code": {
            "name": "code",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExistingBackupFolderError.__init__": {
            "name": "__init__",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "existing_id": [
                    "str"
                ],
                "existing_name": [
                    "str"
                ]
            }
        },
        "ExistingBackupFolderError.message": {
            "name": "message",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExistingBackupFolderError.code": {
            "name": "code",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExistingBackupFolderError.data": {
            "name": "data",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExistingBackupFolderError.retrySoon": {
            "name": "retrySoon",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderMissingError.message": {
            "name": "message",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderMissingError.code": {
            "name": "code",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderMissingError.retrySoon": {
            "name": "retrySoon",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderInaccessible.__init__": {
            "name": "__init__",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "existing_id": [
                    "str"
                ]
            }
        },
        "BackupFolderInaccessible.message": {
            "name": "message",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderInaccessible.data": {
            "name": "data",
            "location": 286,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupFolderInaccessible.code": {
            "name": "code",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleDrivePermissionDenied.message": {
            "name": "message",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleDrivePermissionDenied.code": {
            "name": "code",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LowSpaceError.__init__": {
            "name": "__init__",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "pct_used": [],
                "space_remaining": []
            }
        },
        "LowSpaceError.message": {
            "name": "message",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LowSpaceError.code": {
            "name": "code",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LowSpaceError.data": {
            "name": "data",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorConnectionError.message": {
            "name": "message",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorConnectionError.code": {
            "name": "code",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCancelledError.message": {
            "name": "message",
            "location": 330,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCancelledError.code": {
            "name": "code",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCancelledError.retrySoon": {
            "name": "retrySoon",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshGoogleError.__init__": {
            "name": "__init__",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "from_google": []
            }
        },
        "CredRefreshGoogleError.message": {
            "name": "message",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshGoogleError.code": {
            "name": "code",
            "location": 347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshGoogleError.data": {
            "name": "data",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshMyError.__init__": {
            "name": "__init__",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "reason": [
                    "str"
                ]
            }
        },
        "CredRefreshMyError.message": {
            "name": "message",
            "location": 360,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshMyError.code": {
            "name": "code",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CredRefreshMyError.data": {
            "name": "data",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogInToGoogleDriveError.message": {
            "name": "message",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogInToGoogleDriveError.code": {
            "name": "code",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogInToGoogleDriveError.retrySoon": {
            "name": "retrySoon",
            "location": 379,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorPermissionError.message": {
            "name": "message",
            "location": 384,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorPermissionError.code": {
            "name": "code",
            "location": 387,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorPermissionError.retrySoon": {
            "name": "retrySoon",
            "location": 390,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleUnexpectedError.message": {
            "name": "message",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleUnexpectedError.code": {
            "name": "code",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleUnexpectedError.factory": {
            "name": "factory",
            "location": 402,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SupervisorTimeoutError.message": {
            "name": "message",
            "location": 407,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorTimeoutError.code": {
            "name": "code",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorTimeoutError.factory": {
            "name": "factory",
            "location": 414,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SupervisorUnexpectedError.message": {
            "name": "message",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorUnexpectedError.code": {
            "name": "code",
            "location": 422,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorUnexpectedError.factory": {
            "name": "factory",
            "location": 426,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SupervisorFileSystemError.message": {
            "name": "message",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupervisorFileSystemError.code": {
            "name": "code",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCredGenerateError.__init__": {
            "name": "__init__",
            "location": 439,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "GoogleCredGenerateError.message": {
            "name": "message",
            "location": 442,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoogleCredGenerateError.code": {
            "name": "code",
            "location": 445,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/exceptions/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/addon_stopper.py": {
        "AddonStopper.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "requests": [
                    "HaRequests"
                ],
                "time": [
                    "Time"
                ]
            }
        },
        "AddonStopper.allowRun": {
            "name": "allowRun",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddonStopper.isBackingUp": {
            "name": "isBackingUp",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "backingUp": []
            }
        },
        "AddonStopper._save": {
            "name": "_save",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/backupname.py": {
        "BackupName.resolve": {
            "name": "resolve",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "backup_type": [
                    "str"
                ],
                "template": [
                    "str"
                ],
                "now_local": [
                    "datetime"
                ],
                "host_info": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/harequests.py": {
        "supervisor_call": {
            "name": "supervisor_call",
            "location": 28,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "HaRequests.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "session": [
                    "ClientSession"
                ],
                "time": [
                    "Time"
                ],
                "data_cache": [
                    "DataCache"
                ]
            }
        },
        "HaRequests.getSupervisorURL": {
            "name": "getSupervisorURL",
            "location": 58,
            "return": [
                "URL"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaRequests._getBackupPath": {
            "name": "_getBackupPath",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaRequests.supportsBackupPaths": {
            "name": "supportsBackupPaths",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaRequests._getToken": {
            "name": "_getToken",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaRequests._getHassioHeaders": {
            "name": "_getHassioHeaders",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaRequests._getHaHeaders": {
            "name": "_getHaHeaders",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/hasource.py": {
        "PendingBackup.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "backupType": [],
                "protected": [],
                "options": [
                    "CreateOptions"
                ],
                "request_info": [],
                "config": [],
                "time": []
            }
        },
        "PendingBackup.considerForPurge": {
            "name": "considerForPurge",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.startTime": {
            "name": "startTime",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.failed": {
            "name": "failed",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "exception": [],
                "time": []
            }
        },
        "PendingBackup.getFailureTime": {
            "name": "getFailureTime",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.complete": {
            "name": "complete",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "PendingBackup.setPendingUnknown": {
            "name": "setPendingUnknown",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.createdSlug": {
            "name": "createdSlug",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.isComplete": {
            "name": "isComplete",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.isFailed": {
            "name": "isFailed",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.status": {
            "name": "status",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.raiseIfNeeded": {
            "name": "raiseIfNeeded",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.isStale": {
            "name": "isStale",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PendingBackup.madeByTheAddon": {
            "name": "madeByTheAddon",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "ha": [
                    "HaRequests"
                ],
                "info": [
                    "GlobalInfo"
                ],
                "stopper": [
                    "AddonStopper"
                ],
                "estimator": [
                    "Estimator"
                ],
                "data_cache": [
                    "DataCache"
                ]
            }
        },
        "HaSource.isInitialized": {
            "name": "isInitialized",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.check": {
            "name": "check",
            "location": 157,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.icon": {
            "name": "icon",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.name": {
            "name": "name",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.title": {
            "name": "title",
            "location": 169,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.maxCount": {
            "name": "maxCount",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.enabled": {
            "name": "enabled",
            "location": 175,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HaSource.freeSpace": {
            "name": "freeSpace",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource._isHttp400": {
            "name": "_isHttp400",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "HaSource.setDataCacheInfo": {
            "name": "setDataCacheInfo",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "backup": [
                    "HABackup"
                ]
            }
        },
        "HaSource.addonHasLogo": {
            "name": "addonHasLogo",
            "location": 430,
            "return": [],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "HaSource.getAddonUrl": {
            "name": "getAddonUrl",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.getHostInfo": {
            "name": "getHostInfo",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.getFullAddonUrl": {
            "name": "getFullAddonUrl",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.getHomeAssistantUrl": {
            "name": "getHomeAssistantUrl",
            "location": 451,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource._haUrl": {
            "name": "_haUrl",
            "location": 456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource._validateBackup": {
            "name": "_validateBackup",
            "location": 463,
            "return": [
                "HABackup"
            ],
            "arguments": {
                "self": [],
                "backup": []
            }
        },
        "HaSource._killPending": {
            "name": "_killPending",
            "location": 470,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource.postSync": {
            "name": "postSync",
            "location": 475,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaSource._buildBackupInfo": {
            "name": "_buildBackupInfo",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "options": [
                    "CreateOptions"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/haupdater.py": {
        "HaUpdater.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "requests": [
                    "HaRequests"
                ],
                "coordinator": [
                    "Coordinator"
                ],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "global_info": [
                    "GlobalInfo"
                ]
            }
        },
        "HaUpdater._stale": {
            "name": "_stale",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaUpdater._state": {
            "name": "_state",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaUpdater.triggerRefresh": {
            "name": "triggerRefresh",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaUpdater._buildBackupUpdate": {
            "name": "_buildBackupUpdate",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HaUpdater._buildBackupUpdate.makeBackupData": {
            "name": "makeBackupData",
            "location": 120,
            "return": [],
            "arguments": {
                "backup": [
                    "Backup"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/password.py": {
        "Password.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ]
            }
        },
        "Password.resolve": {
            "name": "resolve",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "password": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ha/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/backups.py": {
        "AbstractBackup.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "slug": [
                    "str"
                ],
                "source": [
                    "str"
                ],
                "date": [
                    "str"
                ],
                "size": [
                    "int"
                ],
                "version": [
                    "str"
                ],
                "backupType": [
                    "str"
                ],
                "protected": [
                    "bool"
                ],
                "note": [],
                "retained": [
                    "bool"
                ],
                "uploadable": [
                    "bool"
                ],
                "details": []
            }
        },
        "AbstractBackup.setOptions": {
            "name": "setOptions",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "options": [
                    "CreateOptions"
                ]
            }
        },
        "AbstractBackup.getOptions": {
            "name": "getOptions",
            "location": 43,
            "return": [
                "CreateOptions"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.name": {
            "name": "name",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.slug": {
            "name": "slug",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.size": {
            "name": "size",
            "location": 52,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.note": {
            "name": "note",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.sizeInt": {
            "name": "sizeInt",
            "location": 58,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.date": {
            "name": "date",
            "location": 64,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.source": {
            "name": "source",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.retained": {
            "name": "retained",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.version": {
            "name": "version",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.backupType": {
            "name": "backupType",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.protected": {
            "name": "protected",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.setRetained": {
            "name": "setRetained",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "retained": []
            }
        },
        "AbstractBackup.uploadable": {
            "name": "uploadable",
            "location": 85,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.considerForPurge": {
            "name": "considerForPurge",
            "location": 88,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.setUploadable": {
            "name": "setUploadable",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "uploadable": []
            }
        },
        "AbstractBackup.details": {
            "name": "details",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.setNote": {
            "name": "setNote",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "note": [
                    "str"
                ]
            }
        },
        "AbstractBackup.status": {
            "name": "status",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.madeByTheAddon": {
            "name": "madeByTheAddon",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.ignore": {
            "name": "ignore",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBackup.setIgnore": {
            "name": "setIgnore",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "ignore": []
            }
        },
        "Backup.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "backup": [
                    "Optional[AbstractBackup]"
                ]
            }
        },
        "Backup.setOptions": {
            "name": "setOptions",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "Backup.getOptions": {
            "name": "getOptions",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.updatePurge": {
            "name": "updatePurge",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "purge": [
                    "bool"
                ]
            }
        },
        "Backup.addSource": {
            "name": "addSource",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "backup": [
                    "AbstractBackup"
                ]
            }
        },
        "Backup.getStatusDetail": {
            "name": "getStatusDetail",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.setStatusDetail": {
            "name": "setStatusDetail",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "Backup.removeSource": {
            "name": "removeSource",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Backup.getPurges": {
            "name": "getPurges",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.uploadInfo": {
            "name": "uploadInfo",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.getSource": {
            "name": "getSource",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "Backup.name": {
            "name": "name",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.note": {
            "name": "note",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.slug": {
            "name": "slug",
            "location": 186,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.size": {
            "name": "size",
            "location": 191,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.sizeInt": {
            "name": "sizeInt",
            "location": 196,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.backupType": {
            "name": "backupType",
            "location": 201,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.version": {
            "name": "version",
            "location": 206,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.details": {
            "name": "details",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.getUploadInfo": {
            "name": "getUploadInfo",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Backup.protected": {
            "name": "protected",
            "location": 233,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.ignore": {
            "name": "ignore",
            "location": 238,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.date": {
            "name": "date",
            "location": 244,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.sizeString": {
            "name": "sizeString",
            "location": 249,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.status": {
            "name": "status",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.isDeleted": {
            "name": "isDeleted",
            "location": 276,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.overrideStatus": {
            "name": "overrideStatus",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "Backup.setUploadSource": {
            "name": "setUploadSource",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "source_name": [
                    "str"
                ],
                "source": []
            }
        },
        "Backup.clearUploadSource": {
            "name": "clearUploadSource",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.uploadFailure": {
            "name": "uploadFailure",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "Backup.clearStatus": {
            "name": "clearStatus",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backup.__str__": {
            "name": "__str__",
            "location": 301,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Backup.__format__": {
            "name": "__format__",
            "location": 304,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "format_spec": [
                    "str"
                ]
            }
        },
        "Backup.__repr__": {
            "name": "__repr__",
            "location": 307,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/backupscheme.py": {
        "BackupScheme.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupScheme.getOldest": {
            "name": "getOldest",
            "location": 19,
            "return": [
                "Tuple[(str, Optional[Backup])]"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "BackupScheme.handleNaming": {
            "name": "handleNaming",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "DeleteAfterUploadScheme.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "destinations": [
                    "List[str]"
                ]
            }
        },
        "DeleteAfterUploadScheme.getOldest": {
            "name": "getOldest",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "backups": [
                    "Backup"
                ]
            }
        },
        "OldestScheme.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "OldestScheme.getOldest": {
            "name": "getOldest",
            "location": 54,
            "return": [
                "Optional[Backup]"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "OldestScheme.handleNaming": {
            "name": "handleNaming",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "Partition.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "prefer": [
                    "datetime"
                ],
                "time": [
                    "Time"
                ],
                "details": [],
                "delete_only": [
                    "bool"
                ]
            }
        },
        "Partition.select": {
            "name": "select",
            "location": 74,
            "return": [
                "Optional[Backup]"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "List[Backup]"
                ]
            }
        },
        "Partition.delta": {
            "name": "delta",
            "location": 86,
            "return": [
                "timedelta"
            ],
            "arguments": {
                "self": []
            }
        },
        "Partition.day": {
            "name": "day",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "date": [
                    "datetime"
                ]
            }
        },
        "Partition.is_delete_only": {
            "name": "is_delete_only",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.__hash__": {
            "name": "__hash__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerationalScheme.__init__": {
            "name": "__init__",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "config": [
                    "GenConfig"
                ],
                "count": []
            }
        },
        "GenerationalScheme._buildPartitions": {
            "name": "_buildPartitions",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "backups": []
            }
        },
        "GenerationalScheme.getOldest": {
            "name": "getOldest",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "GenerationalScheme.handleNaming": {
            "name": "handleNaming",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backups": [
                    "Sequence[Backup]"
                ]
            }
        },
        "GenerationalScheme.day": {
            "name": "day",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "date": [
                    "datetime"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/coordinator.py": {
        "Coordinator.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "model": [
                    "Model"
                ],
                "time": [
                    "Time"
                ],
                "config": [
                    "Config"
                ],
                "global_info": [
                    "GlobalInfo"
                ],
                "estimator": [
                    "Estimator"
                ]
            }
        },
        "Coordinator.saveCreds": {
            "name": "saveCreds",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "creds": [
                    "Creds"
                ]
            }
        },
        "Coordinator.name": {
            "name": "name",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.enabled": {
            "name": "enabled",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.isWaitingForStartup": {
            "name": "isWaitingForStartup",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.ignoreStartupDelay": {
            "name": "ignoreStartupDelay",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.check": {
            "name": "check",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.isSyncing": {
            "name": "isSyncing",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.isWorkingThroughUpload": {
            "name": "isWorkingThroughUpload",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.nextSyncAttempt": {
            "name": "nextSyncAttempt",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.nextBackupTime": {
            "name": "nextBackupTime",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.buildBackupMetrics": {
            "name": "buildBackupMetrics",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.handleError": {
            "name": "handleError",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "Coordinator.backups": {
            "name": "backups",
            "location": 215,
            "return": [
                "List[Backup]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coordinator.getBackup": {
            "name": "getBackup",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "Coordinator._ensureBackup": {
            "name": "_ensureBackup",
            "location": 290,
            "return": [
                "Backup"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "slug": []
            }
        },
        "Coordinator._ensureSource": {
            "name": "_ensureSource",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Coordinator._buildModel": {
            "name": "_buildModel",
            "location": 308,
            "return": [
                "Model"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coordinator._updateFreshness": {
            "name": "_updateFreshness",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/drivebackup.py": {
        "DriveBackup.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[(Any, Any)]"
                ]
            }
        },
        "DriveBackup.id": {
            "name": "id",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveBackup.canDeleteDirectly": {
            "name": "canDeleteDirectly",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveBackup.__str__": {
            "name": "__str__",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DriveBackup.__format__": {
            "name": "__format__",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "format_spec": [
                    "str"
                ]
            }
        },
        "DriveBackup.__repr__": {
            "name": "__repr__",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/dummybackup.py": {
        "DummyBackup.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "date": [],
                "source": [],
                "slug": [],
                "size": [],
                "ignore": [],
                "note": []
            }
        },
        "DummyBackup.size": {
            "name": "size",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DummyBackup.ignore": {
            "name": "ignore",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DummyBackup.note": {
            "name": "note",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/dummybackupsource.py": {
        "DummyBackupSource.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "date": [],
                "source": [],
                "slug": [],
                "retain": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/habackup.py": {
        "HABackup.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[(str, Any)]"
                ],
                "data_cache": [
                    "DataCache"
                ],
                "config": [
                    "Config"
                ],
                "retained": []
            }
        },
        "HABackup.madeByTheAddon": {
            "name": "madeByTheAddon",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HABackup.note": {
            "name": "note",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HABackup.ignore": {
            "name": "ignore",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HABackup.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HABackup.__format__": {
            "name": "__format__",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "format_spec": [
                    "str"
                ]
            }
        },
        "HABackup.__repr__": {
            "name": "__repr__",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/model.py": {
        "BackupSource.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.name": {
            "name": "name",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.title": {
            "name": "title",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.enabled": {
            "name": "enabled",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.needsConfiguration": {
            "name": "needsConfiguration",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.upload": {
            "name": "upload",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.icon": {
            "name": "icon",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.freeSpace": {
            "name": "freeSpace",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.maxCount": {
            "name": "maxCount",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.postSync": {
            "name": "postSync",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.detail": {
            "name": "detail",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupSource.checkBeforeChanges": {
            "name": "checkBeforeChanges",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupDestination.isWorking": {
            "name": "isWorking",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BackupDestination.might_be_oob_creds": {
            "name": "might_be_oob_creds",
            "location": 92,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Model.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "source": [
                    "BackupSource"
                ],
                "dest": [
                    "BackupDestination"
                ],
                "info": [
                    "GlobalInfo"
                ],
                "estimator": [
                    "Estimator"
                ],
                "data_cache": [
                    "DataCache"
                ]
            }
        },
        "Model.enabled": {
            "name": "enabled",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.allSources": {
            "name": "allSources",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.reinitialize": {
            "name": "reinitialize",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.getTimeOfDay": {
            "name": "getTimeOfDay",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._nextBackup": {
            "name": "_nextBackup",
            "location": 133,
            "return": [
                "Optional[datetime]"
            ],
            "arguments": {
                "self": [],
                "now": [
                    "datetime"
                ],
                "last_backup": [
                    "Optional[datetime]"
                ]
            }
        },
        "Model.nextBackup": {
            "name": "nextBackup",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "now": [
                    "datetime"
                ]
            }
        },
        "Model.isWorkingThroughUpload": {
            "name": "isWorkingThroughUpload",
            "location": 236,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.getNextPurges": {
            "name": "getNextPurges",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._parseTimeOfDay": {
            "name": "_parseTimeOfDay",
            "location": 265,
            "return": [
                "Optional[Tuple[(int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Model._buildDeleteScheme": {
            "name": "_buildDeleteScheme",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "findNext": []
            }
        },
        "Model._buildNamingScheme": {
            "name": "_buildNamingScheme",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._handleBackupDetails": {
            "name": "_handleBackupDetails",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._nextPurge": {
            "name": "_nextPurge",
            "location": 320,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "BackupSource"
                ],
                "backups": [],
                "findNext": []
            }
        },
        "Model._getPurgeStats": {
            "name": "_getPurgeStats",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._getPurgeList": {
            "name": "_getPurgeList",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "BackupSource"
                ],
                "pre_purge": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/simulatedsource.py": {
        "SimulatedSource.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SimulatedSource.setEnabled": {
            "name": "setEnabled",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SimulatedSource.needsConfiguration": {
            "name": "needsConfiguration",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.setNeedsConfiguration": {
            "name": "setNeedsConfiguration",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "bool"
                ]
            }
        },
        "SimulatedSource.setUpload": {
            "name": "setUpload",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SimulatedSource.upload": {
            "name": "upload",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.setMax": {
            "name": "setMax",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "SimulatedSource.isWorking": {
            "name": "isWorking",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.setIsWorking": {
            "name": "setIsWorking",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SimulatedSource.maxCount": {
            "name": "maxCount",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.insert": {
            "name": "insert",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "date": [],
                "slug": [],
                "retain": []
            }
        },
        "SimulatedSource.name": {
            "name": "name",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.enabled": {
            "name": "enabled",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSource.nameSetup": {
            "name": "nameSetup",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "host_info": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/simulation.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/syncer.py": {
        "Scyncer.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "coord": [
                    "Coordinator"
                ],
                "triggers": [
                    "List[Trigger]"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/model/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/server/cloudlogger.py": {
        "CloudLogger.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CloudLogger.log_struct": {
            "name": "log_struct",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/server/errorstore.py": {
        "ErrorStore.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "logger": [
                    "CloudLogger"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "ErrorStore.store": {
            "name": "store",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "error_data": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/server/server.py": {
        "Server.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "exchanger_builder": [
                    "ClassAssistedBuilder[Exchanger]"
                ],
                "logger": [
                    "CloudLogger"
                ],
                "error_store": [
                    "ErrorStore"
                ]
            }
        },
        "Server.base_context": {
            "name": "base_context",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ]
            }
        },
        "Server.buildApp": {
            "name": "buildApp",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "Server.logError": {
            "name": "logError",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "Server.logReport": {
            "name": "logReport",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "report": []
            }
        },
        "Server.getRequestInfo": {
            "name": "getRequestInfo",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/server/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/server/__main__.py": {
        "ServerModule.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServerModule.getConfig": {
            "name": "getConfig",
            "location": 15,
            "return": [
                "Config"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ui/debug.py": {
        "Debug.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "model": [
                    "Model"
                ],
                "coord": [
                    "Coordinator"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ui/restarter.py": {
        "Restarter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "server": [
                    "UiServer"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "Restarter.trigger": {
            "name": "trigger",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ui/uiserver.py": {
        "UiServer.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "debug": [
                    "Debug"
                ],
                "coord": [
                    "Coordinator"
                ],
                "ha_source": [
                    "HaSource"
                ],
                "harequests": [
                    "HaRequests"
                ],
                "time": [
                    "Time"
                ],
                "config": [
                    "Config"
                ],
                "global_info": [
                    "GlobalInfo"
                ],
                "estimator": [
                    "Estimator"
                ],
                "session": [
                    "ClientSession"
                ],
                "exchanger_builder": [
                    "ClassAssistedBuilder[Exchanger]"
                ],
                "debug_worker": [
                    "DebugWorker"
                ],
                "folder_finder": [
                    "FolderFinder"
                ],
                "data_cache": [
                    "DataCache"
                ],
                "haupdater": [
                    "HaUpdater"
                ],
                "custom_auth_provider": [
                    "ProviderOf[AuthCodeQuery]"
                ]
            }
        },
        "UiServer.name": {
            "name": "name",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UiServer.base_context": {
            "name": "base_context",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UiServer.getBackupDetails": {
            "name": "getBackupDetails",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "backup": [
                    "Backup"
                ]
            }
        },
        "UiServer.formatAddons": {
            "name": "formatAddons",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "backup_data": []
            }
        },
        "UiServer._addRoutes": {
            "name": "_addRoutes",
            "location": 670,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "UiServer._addRoute": {
            "name": "_addRoute",
            "location": 720,
            "return": [],
            "arguments": {
                "self": [],
                "app": [],
                "method": []
            }
        },
        "UiServer.processError": {
            "name": "processError",
            "location": 773,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "UiServer.filePath": {
            "name": "filePath",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "UiServer.cssElement": {
            "name": "cssElement",
            "location": 797,
            "return": [],
            "arguments": {
                "self": [],
                "selector": [],
                "keys": []
            }
        },
        "HomeAssistantLoginAuth.__init__": {
            "name": "__init__",
            "location": 846,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "harequests": []
            }
        },
        "HomeAssistantLoginAuth.parse_auth_header": {
            "name": "parse_auth_header",
            "location": 852,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HomeAssistantLoginAuth.challenge": {
            "name": "challenge",
            "location": 884,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UiServer.log.content": {
            "name": "content",
            "location": 378,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/ui/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/asynchttpgetter.py": {
        "Stupid.__len__": {
            "name": "__len__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "headers": [
                    "Dict[(str, str)]"
                ],
                "session": [],
                "size": [
                    "int"
                ],
                "timeout": [],
                "timeoutFactory": [],
                "otherErrorFactory": [],
                "time": [
                    "Time"
                ]
            }
        },
        "AsyncHttpGetter._ensureSetup": {
            "name": "_ensureSetup",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.size": {
            "name": "size",
            "location": 76,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.__len__": {
            "name": "__len__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.position": {
            "name": "position",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "AsyncHttpGetter.progress": {
            "name": "progress",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.speed": {
            "name": "speed",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "period": [
                    "timedelta"
                ]
            }
        },
        "AsyncHttpGetter.startTime": {
            "name": "startTime",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncHttpGetter.__format__": {
            "name": "__format__",
            "location": 156,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "format_spec": [
                    "str"
                ]
            }
        },
        "AsyncHttpGetter.__aiter__": {
            "name": "__aiter__",
            "location": 233,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/backoff.py": {
        "Backoff.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "initial": [],
                "base": [],
                "exp": [],
                "max": [],
                "attempts": []
            }
        },
        "Backoff.reset": {
            "name": "reset",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backoff.peek": {
            "name": "peek",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Backoff.backoff": {
            "name": "backoff",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "error": []
            }
        },
        "Backoff.maxOut": {
            "name": "maxOut",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/data_cache.py": {
        "DataCache.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ]
            }
        },
        "DataCache._load": {
            "name": "_load",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.save": {
            "name": "save",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DataCache.makeDirty": {
            "name": "makeDirty",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.dirty": {
            "name": "dirty",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataCache.backups": {
            "name": "backups",
            "location": 97,
            "return": [
                "Dict[(str, Dict[(str, str)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataCache.backup": {
            "name": "backup",
            "location": 102,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "DataCache.saveIfDirty": {
            "name": "saveIfDirty",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.previousVersion": {
            "name": "previousVersion",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.firstVersion": {
            "name": "firstVersion",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.currentVersion": {
            "name": "currentVersion",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.notifyForIgnoreUpgrades": {
            "name": "notifyForIgnoreUpgrades",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.checkFlag": {
            "name": "checkFlag",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "flag": [
                    "UpgradeFlags"
                ]
            }
        },
        "DataCache.TESTS_ONLY_clearFlags": {
            "name": "TESTS_ONLY_clearFlags",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataCache.addFlag": {
            "name": "addFlag",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "flag": [
                    "UpgradeFlags"
                ]
            }
        },
        "DataCache.getUpgradeTime": {
            "name": "getUpgradeTime",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "version": [
                    "Version"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/error_analyzer.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/estimator.py": {
        "Estimator.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "global_info": [
                    "GlobalInfo"
                ]
            }
        },
        "Estimator.refresh": {
            "name": "refresh",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.checkSpace": {
            "name": "checkSpace",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "backups": []
            }
        },
        "Estimator._checkSpace": {
            "name": "_checkSpace",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "backups": []
            }
        },
        "Estimator.getUsagePercent": {
            "name": "getUsagePercent",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBlocksUsed": {
            "name": "getBlocksUsed",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBlocksTotal": {
            "name": "getBlocksTotal",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBlocksFree": {
            "name": "getBlocksFree",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBytesFree": {
            "name": "getBytesFree",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBytesUsed": {
            "name": "getBytesUsed",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.getBytesTotal": {
            "name": "getBytesTotal",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Estimator.asSizeString": {
            "name": "asSizeString",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": [],
                "size": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/file.py": {
        "File.touch": {
            "name": "touch",
            "location": 3,
            "return": [],
            "arguments": {
                "cls": [],
                "file": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/globalinfo.py": {
        "GlobalInfo.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ]
            }
        },
        "GlobalInfo.ignoreErrorsForNow": {
            "name": "ignoreErrorsForNow",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.setIngoreErrorsForNow": {
            "name": "setIngoreErrorsForNow",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GlobalInfo.failureCount": {
            "name": "failureCount",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.refresh": {
            "name": "refresh",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.setDnsInfo": {
            "name": "setDnsInfo",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "GlobalInfo.getDnsInfo": {
            "name": "getDnsInfo",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.success": {
            "name": "success",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.sync": {
            "name": "sync",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.failed": {
            "name": "failed",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "error": []
            }
        },
        "GlobalInfo.suppressError": {
            "name": "suppressError",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.isErrorSuppressed": {
            "name": "isErrorSuppressed",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.upload": {
            "name": "upload",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "GlobalInfo.credsSaved": {
            "name": "credsSaved",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.isPermitMultipleDeletes": {
            "name": "isPermitMultipleDeletes",
            "location": 101,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.allowMultipleDeletes": {
            "name": "allowMultipleDeletes",
            "location": 104,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.addDebugInfo": {
            "name": "addDebugInfo",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "GlobalInfo.isSkipSpaceCheckOnce": {
            "name": "isSkipSpaceCheckOnce",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalInfo.setSkipSpaceCheckOnce": {
            "name": "setSkipSpaceCheckOnce",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "GlobalInfo.triggerBackupCooldown": {
            "name": "triggerBackupCooldown",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "delay": [
                    "timedelta"
                ]
            }
        },
        "GlobalInfo.backupCooldownTime": {
            "name": "backupCooldownTime",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/rangelookup.py": {
        "RangeLookup.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "List[T]"
                ],
                "mapping": [
                    "Mapping[(T, K)]"
                ]
            }
        },
        "RangeLookup.matches": {
            "name": "matches",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "start": [
                    "K@@"
                ],
                "end": [
                    "K@@"
                ]
            }
        },
        "RangeLookup.matchList": {
            "name": "matchList",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "RangeLookup._searchFirstGreaterOrEqual": {
            "name": "_searchFirstGreaterOrEqual",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "RangeLookup._searchLastLessOrEqual": {
            "name": "_searchLastLessOrEqual",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/resolver.py": {
        "Resolver.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ]
            }
        },
        "Resolver.updateConfig": {
            "name": "updateConfig",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.setAlternateResolver": {
            "name": "setAlternateResolver",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.toggle": {
            "name": "toggle",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/util/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/worker/trigger.py": {
        "Trigger.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Trigger.trigger": {
            "name": "trigger",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Trigger.reset": {
            "name": "reset",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Trigger.triggered": {
            "name": "triggered",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Trigger.name": {
            "name": "name",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Trigger.check": {
            "name": "check",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/worker/watcher.py": {
        "Watcher.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "Watcher.isStarted": {
            "name": "isStarted",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Watcher.name": {
            "name": "name",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Watcher.on_any_event": {
            "name": "on_any_event",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Watcher.on_moved": {
            "name": "on_moved",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Watcher.on_created": {
            "name": "on_created",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Watcher.on_deleted": {
            "name": "on_deleted",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Watcher.on_modified": {
            "name": "on_modified",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Watcher.haveFilesChanged": {
            "name": "haveFilesChanged",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Watcher.check": {
            "name": "check",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/worker/worker.py": {
        "Worker.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "method": [],
                "time": [
                    "Time"
                ],
                "interval": []
            }
        },
        "Worker.isRunning": {
            "name": "isRunning",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Worker.getLastError": {
            "name": "getLastError",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/backup/worker/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/apiingress.py": {
        "api_return_error": {
            "name": "api_return_error",
            "location": 40,
            "return": [
                "web.Response"
            ],
            "arguments": {
                "message": [
                    "Optional[str]"
                ]
            }
        },
        "api_return_ok": {
            "name": "api_return_ok",
            "location": 47,
            "return": [
                "web.Response"
            ],
            "arguments": {
                "data": [
                    "Optional[Dict[(str, Any)]]"
                ]
            }
        },
        "api_process": {
            "name": "api_process",
            "location": 52,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "_init_header": {
            "name": "_init_header",
            "location": 332,
            "return": [
                "Union[(CIMultiDict, Dict[(str, str)])]"
            ],
            "arguments": {
                "request": [
                    "web.Request"
                ],
                "addon": [
                    "str"
                ]
            }
        },
        "_response_header": {
            "name": "_response_header",
            "location": 361,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "response": [
                    "aiohttp.ClientResponse"
                ]
            }
        },
        "_is_websocket": {
            "name": "_is_websocket",
            "location": 378,
            "return": [
                "bool"
            ],
            "arguments": {
                "request": [
                    "web.Request"
                ]
            }
        },
        "Addon.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "ports": [
                    "Ports"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "SysIngress.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "ports": [
                    "Ports"
                ],
                "token": [
                    "str"
                ],
                "cookie_value": [
                    "str"
                ]
            }
        },
        "SysIngress.validate_session": {
            "name": "validate_session",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "SysIngress.get": {
            "name": "get",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CoreSysAttributes.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "ports": [
                    "Ports"
                ],
                "session": [
                    "ClientSession"
                ],
                "token": [
                    "str"
                ],
                "cookie_value": [
                    "str"
                ]
            }
        },
        "APIIngress.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "ports": [
                    "Ports"
                ],
                "session": [
                    "ClientSession"
                ],
                "supervisor": [
                    "SimulatedSupervisor"
                ]
            }
        },
        "APIIngress.routes": {
            "name": "routes",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIIngress.start_ingress": {
            "name": "start_ingress",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "web.Request"
                ]
            }
        },
        "APIIngress.ingress_panel": {
            "name": "ingress_panel",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "web.Request"
                ]
            }
        },
        "APIIngress._extract_addon": {
            "name": "_extract_addon",
            "location": 167,
            "return": [
                "Addon"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "web.Request"
                ]
            }
        },
        "APIIngress._check_ha_access": {
            "name": "_check_ha_access",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "web.Request"
                ]
            }
        },
        "APIIngress._create_url": {
            "name": "_create_url",
            "location": 183,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "addon": [
                    "Addon"
                ],
                "path": [
                    "str"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/base_server.py": {
        "BaseServer.generateId": {
            "name": "generateId",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "length": [
                    "int"
                ]
            }
        },
        "BaseServer.timeToRfc3339String": {
            "name": "timeToRfc3339String",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "BaseServer.serve_bytes": {
            "name": "serve_bytes",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ],
                "bytes": [
                    "bytearray"
                ],
                "include_length": [
                    "bool"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/deploy_addon.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/deploy_dev_addon.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/deploy_dev_server.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/deploy_server.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/http_exception.py": {
        "HttpMultiException.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/ports.py": {
        "Ports.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "server": [],
                "ui": [],
                "ingress": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/request_interceptor.py": {
        "UrlMatch.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "fail_after": [],
                "status": [],
                "response": [],
                "wait": [],
                "sleep": [],
                "fail_for": []
            }
        },
        "UrlMatch.addResponse": {
            "name": "addResponse",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "UrlMatch.isMatch": {
            "name": "isMatch",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UrlMatch.clear": {
            "name": "clear",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UrlMatch.callCount": {
            "name": "callCount",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestInterceptor.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestInterceptor.setError": {
            "name": "setError",
            "location": 86,
            "return": [
                "UrlMatch"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "status": [],
                "fail_after": [],
                "fail_for": [],
                "response": []
            }
        },
        "RequestInterceptor.clear": {
            "name": "clear",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestInterceptor.setWaiter": {
            "name": "setWaiter",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "attempts": []
            }
        },
        "RequestInterceptor.setSleep": {
            "name": "setSleep",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "attempts": [],
                "sleep": [],
                "wait_for": []
            }
        },
        "RequestInterceptor.record": {
            "name": "record",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ]
            }
        },
        "RequestInterceptor.urlWasCalled": {
            "name": "urlWasCalled",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/simulated_google.py": {
        "SimulatedGoogle.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "time": [
                    "Time"
                ],
                "ports": [
                    "Ports"
                ]
            }
        },
        "SimulatedGoogle.setDriveSpaceAvailable": {
            "name": "setDriveSpaceAvailable",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "bytes_available": []
            }
        },
        "SimulatedGoogle.generateNewAccessToken": {
            "name": "generateNewAccessToken",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.generateNewRefreshToken": {
            "name": "generateNewRefreshToken",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.expireCreds": {
            "name": "expireCreds",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.expireRefreshToken": {
            "name": "expireRefreshToken",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.resetDriveAuth": {
            "name": "resetDriveAuth",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.creds": {
            "name": "creds",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle.routes": {
            "name": "routes",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedGoogle._checkClientIdandSecret": {
            "name": "_checkClientIdandSecret",
            "location": 237,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ]
            }
        },
        "SimulatedGoogle.filter_fields": {
            "name": "filter_fields",
            "location": 277,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Dict[(str, Any)]"
                ],
                "fields": []
            }
        },
        "SimulatedGoogle.parseFields": {
            "name": "parseFields",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "SimulatedGoogle.formatItem": {
            "name": "formatItem",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "id": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/simulated_supervisor.py": {
        "SimulatedSupervisor.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "ports": [
                    "Ports"
                ],
                "time": [
                    "Time"
                ]
            }
        },
        "SimulatedSupervisor.defaultOptions": {
            "name": "defaultOptions",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSupervisor.routes": {
            "name": "routes",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSupervisor.getEvents": {
            "name": "getEvents",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSupervisor.getEntity": {
            "name": "getEntity",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "SimulatedSupervisor.clearEntities": {
            "name": "clearEntities",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSupervisor.addon": {
            "name": "addon",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "slug": []
            }
        },
        "SimulatedSupervisor.getAttributes": {
            "name": "getAttributes",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "SimulatedSupervisor.getNotification": {
            "name": "getNotification",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulatedSupervisor._formatErrorResponse": {
            "name": "_formatErrorResponse",
            "location": 134,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str"
                ]
            }
        },
        "SimulatedSupervisor._formatDataResponse": {
            "name": "_formatDataResponse",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Any"
                ]
            }
        },
        "SimulatedSupervisor.installAddon": {
            "name": "installAddon",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "slug": [],
                "name": [],
                "version": [],
                "boot": [],
                "started": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/simulationserver.py": {
        "SimulationServer.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "ports": [
                    "Ports"
                ],
                "time": [
                    "Time"
                ],
                "session": [
                    "ClientSession"
                ],
                "authserver": [
                    "Server"
                ],
                "config": [
                    "Config"
                ],
                "google": [
                    "SimulatedGoogle"
                ],
                "supervisor": [
                    "SimulatedSupervisor"
                ],
                "api_ingress": [
                    "APIIngress"
                ],
                "interceptor": [
                    "RequestInterceptor"
                ]
            }
        },
        "SimulationServer.wasUrlRequested": {
            "name": "wasUrlRequested",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "SimulationServer.blockBackups": {
            "name": "blockBackups",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulationServer.unBlockBackups": {
            "name": "unBlockBackups",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulationServer.createApp": {
            "name": "createApp",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimulationServer.routes": {
            "name": "routes",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimServerModule.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "base_url": [
                    "URL"
                ]
            }
        },
        "SimServerModule.getConfig": {
            "name": "getConfig",
            "location": 131,
            "return": [
                "Config"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimServerModule.getPorts": {
            "name": "getPorts",
            "location": 144,
            "return": [
                "Ports"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/dev/__init__.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/conftest.py": {
        "event_loop": {
            "name": "event_loop",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "reader": {
            "name": "reader",
            "location": 192,
            "return": [],
            "arguments": {
                "server": [],
                "ui_server": [],
                "session": [],
                "ui_port": [],
                "ingress_port": []
            }
        },
        "backup_helper": {
            "name": "backup_helper",
            "location": 399,
            "return": [],
            "arguments": {
                "uploader": [],
                "time": []
            }
        },
        "FsFaker.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FsFaker.start": {
            "name": "start",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FsFaker.stop": {
            "name": "stop",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FsFaker._hijack": {
            "name": "_hijack",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FsFaker.setFreeBytes": {
            "name": "setFreeBytes",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "bytes_free": [],
                "bytes_total": []
            }
        },
        "ReaderHelper.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "ui_port": [],
                "ingress_port": []
            }
        },
        "ReaderHelper.getUrl": {
            "name": "getUrl",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "ingress": [],
                "ssl": []
            }
        },
        "TestModule.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "ports": [
                    "Ports"
                ]
            }
        },
        "TestModule.getDriveCreds": {
            "name": "getDriveCreds",
            "location": 115,
            "return": [
                "Creds"
            ],
            "arguments": {
                "self": [],
                "time": [
                    "Time"
                ]
            }
        },
        "TestModule.getTime": {
            "name": "getTime",
            "location": 120,
            "return": [
                "Time"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModule.getPorts": {
            "name": "getPorts",
            "location": 125,
            "return": [
                "Ports"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModule.getConfig": {
            "name": "getConfig",
            "location": 130,
            "return": [
                "Config"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackupHelper.__init__": {
            "name": "__init__",
            "location": 387,
            "return": [],
            "arguments": {
                "self": [],
                "uploader": [],
                "time": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/faketime.py": {
        "FakeTime.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "now": [
                    "datetime"
                ]
            }
        },
        "FakeTime.setTimeZone": {
            "name": "setTimeZone",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FakeTime.setNow": {
            "name": "setNow",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "now": [
                    "datetime"
                ]
            }
        },
        "FakeTime.advanceDay": {
            "name": "advanceDay",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "days": []
            }
        },
        "FakeTime.advance": {
            "name": "advance",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "days": [],
                "hours": [],
                "minutes": [],
                "seconds": [],
                "duration": []
            }
        },
        "FakeTime.now": {
            "name": "now",
            "location": 36,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeTime.nowLocal": {
            "name": "nowLocal",
            "location": 39,
            "return": [
                "datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeTime.clearSleeps": {
            "name": "clearSleeps",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/helpers.py": {
        "skipForWindows": {
            "name": "skipForWindows",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "skipForRoot": {
            "name": "skipForRoot",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "createBackupTar": {
            "name": "createBackupTar",
            "location": 63,
            "return": [
                "BytesIO"
            ],
            "arguments": {
                "slug": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "date": [
                    "datetime"
                ],
                "padSize": [
                    "int"
                ],
                "included_folders": [],
                "included_addons": [],
                "password": []
            }
        },
        "add": {
            "name": "add",
            "location": 109,
            "return": [],
            "arguments": {
                "tar": [],
                "name": [],
                "stream": []
            }
        },
        "parseBackupInfo": {
            "name": "parseBackupInfo",
            "location": 116,
            "return": [],
            "arguments": {
                "stream": [
                    "BytesIO"
                ]
            }
        },
        "getTestStream": {
            "name": "getTestStream",
            "location": 127,
            "return": [],
            "arguments": {
                "size": [
                    "int"
                ]
            }
        },
        "HelperTestSource.__init__": {
            "name": "__init__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "HelperTestSource.reset": {
            "name": "reset",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelperTestSource.assertThat": {
            "name": "assertThat",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "created": [],
                "deleted": [],
                "saved": [],
                "current": []
            }
        },
        "HelperTestSource.assertUnchanged": {
            "name": "assertUnchanged",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Uploader.__init__": {
            "name": "__init__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "session": [
                    "ClientSession"
                ],
                "time": [
                    "Time"
                ]
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_addon_stopper.py": {
        "getSaved": {
            "name": "getSaved",
            "location": 15,
            "return": [],
            "arguments": {
                "config": [
                    "Config"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 21,
            "return": [],
            "arguments": {
                "config": [
                    "Config"
                ],
                "to_start": [],
                "to_watchdog_enable": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_asynchttpgetter.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_authcodequery.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_backoff.py": {
        "error": {
            "name": "error",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_defaults": {
            "name": "test_defaults",
            "location": 11,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_max": {
            "name": "test_max",
            "location": 29,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_initial": {
            "name": "test_initial",
            "location": 44,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_attempts": {
            "name": "test_attempts",
            "location": 63,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_start": {
            "name": "test_start",
            "location": 76,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_realistic": {
            "name": "test_realistic",
            "location": 84,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_maxOut": {
            "name": "test_maxOut",
            "location": 96,
            "return": [],
            "arguments": {
                "error": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_bytesizeasstring.py": {
        "test_minimum": {
            "name": "test_minimum",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_maximum": {
            "name": "test_maximum",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_ui_format": {
            "name": "test_ui_format",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_parsing": {
            "name": "test_parsing",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_config.py": {
        "test_validate_empty": {
            "name": "test_validate_empty",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_validate_int": {
            "name": "test_validate_int",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_validate_float": {
            "name": "test_validate_float",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_validate_bool": {
            "name": "test_validate_bool",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_validate_string": {
            "name": "test_validate_string",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "test_validate_url": {
            "name": "test_validate_url",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "test_validate_regex": {
            "name": "test_validate_regex",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "test_remove_ssl": {
            "name": "test_remove_ssl",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "test_send_error_reports": {
            "name": "test_send_error_reports",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "test_unrecognized_values_filter": {
            "name": "test_unrecognized_values_filter",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "test_removes_defaults": {
            "name": "test_removes_defaults",
            "location": 122,
            "return": [],
            "arguments": {}
        },
        "defaultAnd": {
            "name": "defaultAnd",
            "location": 127,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "test_GenerationalConfig": {
            "name": "test_GenerationalConfig",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_from_environment": {
            "name": "test_from_environment",
            "location": 156,
            "return": [],
            "arguments": {}
        },
        "test_config_upgrade": {
            "name": "test_config_upgrade",
            "location": 169,
            "return": [],
            "arguments": {}
        },
        "test_overwrite_on_upgrade": {
            "name": "test_overwrite_on_upgrade",
            "location": 216,
            "return": [],
            "arguments": {}
        },
        "test_overwrite_on_upgrade_default_value": {
            "name": "test_overwrite_on_upgrade_default_value",
            "location": 251,
            "return": [],
            "arguments": {}
        },
        "test_empty_colors": {
            "name": "test_empty_colors",
            "location": 276,
            "return": [],
            "arguments": {}
        },
        "test_ignore_upgrades_default": {
            "name": "test_ignore_upgrades_default",
            "location": 284,
            "return": [],
            "arguments": {}
        },
        "getGenConfig": {
            "name": "getGenConfig",
            "location": 296,
            "return": [],
            "arguments": {
                "update": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_coordinator.py": {
        "source": {
            "name": "source",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "dest": {
            "name": "dest",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "simple_config": {
            "name": "simple_config",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "model": {
            "name": "model",
            "location": 34,
            "return": [],
            "arguments": {
                "source": [],
                "dest": [],
                "time": [],
                "simple_config": [],
                "global_info": [],
                "estimator": [],
                "data_cache": [
                    "DataCache"
                ]
            }
        },
        "coord": {
            "name": "coord",
            "location": 39,
            "return": [],
            "arguments": {
                "model": [],
                "time": [],
                "simple_config": [],
                "global_info": [],
                "estimator": []
            }
        },
        "doRaise": {
            "name": "doRaise",
            "location": 112,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "test_save_creds": {
            "name": "test_save_creds",
            "location": 315,
            "return": [],
            "arguments": {
                "coord": [
                    "Coordinator"
                ],
                "source": [],
                "dest": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_data_cache.py": {
        "test_version_upgrades.UpgradeCache.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_version_upgrades.UpgradeCache.currentVersion": {
            "name": "currentVersion",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_debugworker.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_drivesource.py": {
        "backup_helper": {
            "name": "backup_helper",
            "location": 42,
            "return": [],
            "arguments": {
                "uploader": [],
                "time": []
            }
        },
        "test_chunk_size": {
            "name": "test_chunk_size",
            "location": 219,
            "return": [],
            "arguments": {
                "drive": [
                    "DriveSource"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "test_chunk_size_limits": {
            "name": "test_chunk_size_limits",
            "location": 235,
            "return": [],
            "arguments": {
                "drive": [
                    "DriveSource"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "BackupHelper.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "uploader": [],
                "time": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_durationasstringvalidator.py": {
        "test_minimum": {
            "name": "test_minimum",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_maximum": {
            "name": "test_maximum",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_base": {
            "name": "test_base",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_duration_parser.py": {
        "test_parse_days": {
            "name": "test_parse_days",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_parse_hours": {
            "name": "test_parse_hours",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_parse_minutes": {
            "name": "test_parse_minutes",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_parse_seconds": {
            "name": "test_parse_seconds",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_parse_multiple": {
            "name": "test_parse_multiple",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "test_format": {
            "name": "test_format",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "test_back_and_forth": {
            "name": "test_back_and_forth",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "doTestConvert": {
            "name": "doTestConvert",
            "location": 79,
            "return": [],
            "arguments": {
                "duration": []
            }
        },
        "test_convert_empty_seconds": {
            "name": "test_convert_empty_seconds",
            "location": 84,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_estimator.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_exceptions.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_exchanger.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_hasource.py": {
        "test_retryable_errors": {
            "name": "test_retryable_errors",
            "location": 338,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_haupdater.py": {
        "source": {
            "name": "source",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "dest": {
            "name": "dest",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "verifyEntity": {
            "name": "verifyEntity",
            "location": 347,
            "return": [],
            "arguments": {
                "backend": [
                    "SimulatedSupervisor"
                ],
                "name": [],
                "state": [],
                "attributes": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_model.py": {
        "source": {
            "name": "source",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "dest": {
            "name": "dest",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "simple_config": {
            "name": "simple_config",
            "location": 29,
            "return": [
                "Config"
            ],
            "arguments": {}
        },
        "model": {
            "name": "model",
            "location": 35,
            "return": [],
            "arguments": {
                "source": [],
                "dest": [],
                "time": [],
                "simple_config": [],
                "global_info": [],
                "estimator": [],
                "data_cache": []
            }
        },
        "createConfig": {
            "name": "createConfig",
            "location": 39,
            "return": [
                "Config"
            ],
            "arguments": {}
        },
        "test_timeOfDay": {
            "name": "test_timeOfDay",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "estimator": [],
                "model": [
                    "Model"
                ]
            }
        },
        "test_next_time": {
            "name": "test_next_time",
            "location": 87,
            "return": [],
            "arguments": {
                "estimator": [],
                "data_cache": []
            }
        },
        "test_next_time_of_day": {
            "name": "test_next_time_of_day",
            "location": 111,
            "return": [],
            "arguments": {
                "estimator": [],
                "data_cache": []
            }
        },
        "test_next_time_of_day_drift": {
            "name": "test_next_time_of_day_drift",
            "location": 134,
            "return": [],
            "arguments": {
                "estimator": [],
                "data_cache": []
            }
        },
        "test_next_time_of_day_dest_disabled": {
            "name": "test_next_time_of_day_dest_disabled",
            "location": 151,
            "return": [],
            "arguments": {
                "model": [],
                "time": [],
                "source": [],
                "dest": []
            }
        },
        "assertBackup": {
            "name": "assertBackup",
            "location": 552,
            "return": [],
            "arguments": {
                "model": [],
                "sources": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_rangelookup.py": {
        "test_lookup": {
            "name": "test_lookup",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_resolver.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_scheme.py": {
        "test_timezone": {
            "name": "test_timezone",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "time": []
            }
        },
        "test_trivial": {
            "name": "test_trivial",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "time": []
            }
        },
        "test_trivial_empty": {
            "name": "test_trivial_empty",
            "location": 27,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_trivial_oldest": {
            "name": "test_trivial_oldest",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "time": [
                    "Time"
                ]
            }
        },
        "test_duplicate_weeks": {
            "name": "test_duplicate_weeks",
            "location": 49,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_duplicate_months": {
            "name": "test_duplicate_months",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "time": []
            }
        },
        "test_duplicate_years": {
            "name": "test_duplicate_years",
            "location": 87,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_removal_order": {
            "name": "test_removal_order",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "time": []
            }
        },
        "test_simulate_daily_backup_for_4_years": {
            "name": "test_simulate_daily_backup_for_4_years",
            "location": 158,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_simulate_agressive_daily_backup_for_4_years": {
            "name": "test_simulate_agressive_daily_backup_for_4_years",
            "location": 193,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_count_limit": {
            "name": "test_count_limit",
            "location": 228,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_aggressive_removal_below_limit": {
            "name": "test_aggressive_removal_below_limit",
            "location": 240,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_aggressive_removal_at_limit_ok": {
            "name": "test_aggressive_removal_at_limit_ok",
            "location": 252,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_aggressive_removal_over_limit": {
            "name": "test_aggressive_removal_over_limit",
            "location": 262,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_removal_order_week": {
            "name": "test_removal_order_week",
            "location": 277,
            "return": [],
            "arguments": {
                "time": [
                    "Time"
                ]
            }
        },
        "test_removal_order_month": {
            "name": "test_removal_order_month",
            "location": 301,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_removal_order_many_months": {
            "name": "test_removal_order_many_months",
            "location": 327,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "test_removal_order_years": {
            "name": "test_removal_order_years",
            "location": 351,
            "return": [],
            "arguments": {
                "time": []
            }
        },
        "getRemovalOrder": {
            "name": "getRemovalOrder",
            "location": 387,
            "return": [],
            "arguments": {
                "scheme": [],
                "toCheck": []
            }
        },
        "assertRemovalOrder": {
            "name": "assertRemovalOrder",
            "location": 399,
            "return": [],
            "arguments": {
                "scheme": [],
                "toCheck": [],
                "expected": []
            }
        },
        "makeBackup": {
            "name": "makeBackup",
            "location": 420,
            "return": [
                "Backup"
            ],
            "arguments": {
                "slug": [],
                "date": [],
                "name": [],
                "ignore": []
            }
        },
        "simulate": {
            "name": "simulate",
            "location": 426,
            "return": [],
            "arguments": {
                "start": [
                    "datetime"
                ],
                "end": [
                    "datetime"
                ],
                "scheme": [
                    "GenerationalScheme"
                ],
                "backups": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_server.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_settings.py": {
        "test_defaults": {
            "name": "test_defaults",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_validators": {
            "name": "test_validators",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_defaults_are_valid": {
            "name": "test_defaults_are_valid",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_setting_configuration": {
            "name": "test_setting_configuration",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_settings_present": {
            "name": "test_settings_present",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_starter.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_timezone.py": {
        "test_parse": {
            "name": "test_parse",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_timezone": {
            "name": "test_parse_timezone",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "time": []
            }
        },
        "assertOffset": {
            "name": "assertOffset",
            "location": 25,
            "return": [],
            "arguments": {
                "time": [],
                "hours": []
            }
        },
        "assertUtc": {
            "name": "assertUtc",
            "location": 29,
            "return": [],
            "arguments": {
                "time": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_uiserver.py": {
        "source": {
            "name": "source",
            "location": 39,
            "return": [],
            "arguments": {
                "ha": []
            }
        },
        "dest": {
            "name": "dest",
            "location": 44,
            "return": [],
            "arguments": {
                "drive": []
            }
        },
        "simple_config": {
            "name": "simple_config",
            "location": 49,
            "return": [],
            "arguments": {
                "config": []
            }
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_version.py": {
        "test_default": {
            "name": "test_default",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_parse": {
            "name": "test_parse",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_parse_staging": {
            "name": "test_parse_staging",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_junk_strings": {
            "name": "test_junk_strings",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_broken_versions": {
            "name": "test_broken_versions",
            "location": 43,
            "return": [],
            "arguments": {}
        }
    },
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/test_worker.py": {},
    "hassio-google-drive-backup-master/hassio-google-drive-backup/tests/__init__.py": {}
}
{
    "histutils-main/ConvertDMC2h5.py": {
        "dmclooper": {
            "name": "dmclooper",
            "location": 30,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "plots": {
            "name": "plots",
            "location": 74,
            "return": [],
            "arguments": {
                "rawImgData": [],
                "rawind": [],
                "finf": []
            }
        }
    },
    "histutils-main/HDDcost.py": {
        "Cam.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "npix": [],
                "fps": [],
                "hddTB": [],
                "cost": [],
                "nbit": [],
                "goodfrac": []
            }
        }
    },
    "histutils-main/Playh5.py": {
        "playh5movie": {
            "name": "playh5movie",
            "location": 14,
            "return": [],
            "arguments": {
                "h5fn": [
                    "Path"
                ],
                "imgh5": [
                    "str"
                ],
                "outfn": [
                    "Path"
                ],
                "clim": [
                    "Tuple[(int, int)]"
                ]
            }
        },
        "hdf2video": {
            "name": "hdf2video",
            "location": 30,
            "return": [],
            "arguments": {
                "data": [
                    "np.ndarray"
                ],
                "outfn": [
                    "Path"
                ],
                "clim": [
                    "Tuple[(int, int)]"
                ]
            }
        },
        "gray2rgb": {
            "name": "gray2rgb",
            "location": 58,
            "return": [],
            "arguments": {
                "gray": []
            }
        }
    },
    "histutils-main/RunSimulFrame.py": {
        "getmulticam": {
            "name": "getmulticam",
            "location": 61,
            "return": [],
            "arguments": {
                "flist": [],
                "tstartstop": [],
                "framereq": [],
                "cpar": [],
                "odir": [],
                "cals": [],
                "cmdlog": []
            }
        },
        "Sim.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "dpath": [],
                "fn0": [],
                "tstartstop": [],
                "framereq": []
            }
        }
    },
    "histutils-main/setup.py": {},
    "histutils-main/WhenEnd.py": {},
    "histutils-main/WienerAurora.py": {},
    "histutils-main/XMLparamPrint.py": {},
    "histutils-main/src/histutils/camclass.py": {
        "Cam.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sim": [],
                "cp": [],
                "name": [
                    "str"
                ],
                "zmax": [],
                "xreq": [],
                "makeplot": [
                    "T.List[str]"
                ],
                "calfn": [
                    "Path"
                ],
                "verbose": [
                    "int"
                ]
            }
        },
        "Cam.arbanglemap": {
            "name": "arbanglemap",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cam.astrometrymap": {
            "name": "astrometrymap",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cam.toecef": {
            "name": "toecef",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "ranges": []
            }
        },
        "Cam.doorientimage": {
            "name": "doorientimage",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "frame": []
            }
        },
        "Cam.doorient": {
            "name": "doorient",
            "location": 339,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cam.debias": {
            "name": "debias",
            "location": 389,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.donoise": {
            "name": "donoise",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.dosmooth": {
            "name": "dosmooth",
            "location": 422,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.fixnegval": {
            "name": "fixnegval",
            "location": 433,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.scaleintens": {
            "name": "scaleintens",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.dolowerthres": {
            "name": "dolowerthres",
            "location": 459,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Cam.findLSQ": {
            "name": "findLSQ",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "nearrow": [],
                "nearcol": [],
                "odir": []
            }
        },
        "Cam.sky2beam": {
            "name": "sky2beam",
            "location": 522,
            "return": [],
            "arguments": {
                "self": [],
                "angledist_deg": []
            }
        },
        "Cam.findClosestAzel": {
            "name": "findClosestAzel",
            "location": 535,
            "return": [],
            "arguments": {
                "self": [],
                "odir": []
            }
        }
    },
    "histutils-main/src/histutils/cp_parents.py": {
        "cp_parents": {
            "name": "cp_parents",
            "location": 7,
            "return": [],
            "arguments": {
                "files": [],
                "target_dir": [
                    "Union[(str, Path)]"
                ]
            }
        }
    },
    "histutils-main/src/histutils/findnearest.py": {
        "findClosestAzel": {
            "name": "findClosestAzel",
            "location": 7,
            "return": [],
            "arguments": {
                "az": [],
                "el": [],
                "azpts": [],
                "elpts": []
            }
        },
        "_findindex": {
            "name": "_findindex",
            "location": 44,
            "return": [],
            "arguments": {
                "az0": [],
                "el0": [],
                "az": [],
                "el": []
            }
        }
    },
    "histutils-main/src/histutils/get1Dcut.py": {
        "get1Dcut": {
            "name": "get1Dcut",
            "location": 12,
            "return": [
                "List[Cam]"
            ],
            "arguments": {
                "cam": [
                    "List[Cam]"
                ],
                "odir": [
                    "Path"
                ],
                "verbose": [
                    "bool"
                ]
            }
        }
    },
    "histutils-main/src/histutils/hstxmlparse.py": {
        "xmlparam": {
            "name": "xmlparam",
            "location": 10,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "fn": [
                    "Path"
                ]
            }
        }
    },
    "histutils-main/src/histutils/index.py": {
        "getRawInd": {
            "name": "getRawInd",
            "location": 8,
            "return": [
                "T.Tuple[(int, int)]"
            ],
            "arguments": {
                "fn": [
                    "Path"
                ],
                "finf": [
                    "T.Dict[(str, int)]"
                ]
            }
        },
        "meta2rawInd": {
            "name": "meta2rawInd",
            "location": 41,
            "return": [
                "int"
            ],
            "arguments": {
                "f": [
                    "T.io.BinaryIO"
                ],
                "Nmetadata": [
                    "int"
                ]
            }
        },
        "req2frame": {
            "name": "req2frame",
            "location": 54,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "req": [
                    "T.Sequence[int]"
                ],
                "N": [
                    "int"
                ]
            }
        }
    },
    "histutils-main/src/histutils/io.py": {
        "dir2fn": {
            "name": "dir2fn",
            "location": 9,
            "return": [
                "Path"
            ],
            "arguments": {
                "ofn": [
                    "Path"
                ],
                "ifn": [
                    "Path"
                ],
                "suffix": [
                    "str"
                ]
            }
        },
        "imgwriteincr": {
            "name": "imgwriteincr",
            "location": 51,
            "return": [],
            "arguments": {
                "fn": [
                    "Path"
                ],
                "imgs": [
                    "np.ndarray"
                ],
                "imgslice": [
                    "Union[(int, slice)]"
                ]
            }
        },
        "vid2h5": {
            "name": "vid2h5",
            "location": 79,
            "return": [],
            "arguments": {
                "data": [
                    "np.ndarray"
                ]
            }
        },
        "setupimgh5": {
            "name": "setupimgh5",
            "location": 236,
            "return": [],
            "arguments": {
                "f": [
                    "Union[(Path, h5py.File)]"
                ],
                "params": [
                    "Dict[(str, int)]"
                ]
            }
        }
    },
    "histutils-main/src/histutils/nans.py": {
        "nans": {
            "name": "nans",
            "location": 4,
            "return": [],
            "arguments": {
                "shape": [],
                "dtype": [],
                "order": []
            }
        },
        "nans_like": {
            "name": "nans_like",
            "location": 10,
            "return": [],
            "arguments": {
                "arr": []
            }
        }
    },
    "histutils-main/src/histutils/plots.py": {
        "doPlayMovie": {
            "name": "doPlayMovie",
            "location": 21,
            "return": [],
            "arguments": {
                "data": [],
                "playMovie": [],
                "ut1_unix": [],
                "rawFrameInd": [],
                "clim": []
            }
        },
        "doplotsave": {
            "name": "doplotsave",
            "location": 80,
            "return": [],
            "arguments": {
                "bigfn": [],
                "data": [],
                "rawind": [],
                "clim": [],
                "dohist": [],
                "meanImg": []
            }
        },
        "animate": {
            "name": "animate",
            "location": 115,
            "return": [],
            "arguments": {
                "i": [],
                "data": [],
                "himg": [],
                "ht": []
            }
        },
        "plotLOSecef": {
            "name": "plotLOSecef",
            "location": 127,
            "return": [],
            "arguments": {
                "cam": [],
                "odir": []
            }
        },
        "plotnear_rc": {
            "name": "plotnear_rc",
            "location": 184,
            "return": [],
            "arguments": {
                "R": [],
                "C": [],
                "name": [],
                "shape": [],
                "odir": []
            }
        },
        "plotlsq_rc": {
            "name": "plotlsq_rc",
            "location": 202,
            "return": [],
            "arguments": {
                "nR": [],
                "nC": [],
                "R": [],
                "C": [],
                "ra": [],
                "dec": [],
                "angle": [],
                "name": [],
                "odir": []
            }
        }
    },
    "histutils-main/src/histutils/plotsimul.py": {
        "plotPlainImg": {
            "name": "plotPlainImg",
            "location": 27,
            "return": [],
            "arguments": {
                "sim": [],
                "cam": [],
                "rawdata": [],
                "t": [],
                "odir": []
            }
        },
        "plotRealImg": {
            "name": "plotRealImg",
            "location": 58,
            "return": [],
            "arguments": {
                "sim": [],
                "cam": [],
                "rawdata": [],
                "t": [
                    "int"
                ],
                "odir": [
                    "Path"
                ],
                "fg": []
            }
        },
        "updateframe": {
            "name": "updateframe",
            "location": 123,
            "return": [],
            "arguments": {
                "t": [],
                "raw": [],
                "wavelen": [],
                "cam": [],
                "ax": [],
                "fg": []
            }
        }
    },
    "histutils-main/src/histutils/rawDMCreader.py": {
        "goRead": {
            "name": "goRead",
            "location": 25,
            "return": [
                "T.Tuple[(np.ndarray, np.ndarray, T.Dict[(str, T.Any)])]"
            ],
            "arguments": {
                "infn": [
                    "Path"
                ],
                "params": [
                    "T.Dict[(str, T.Any)]"
                ]
            }
        },
        "getDMCparam": {
            "name": "getDMCparam",
            "location": 59,
            "return": [
                "T.Dict[(str, T.Any)]"
            ],
            "arguments": {
                "fn": [
                    "Path"
                ],
                "params": [
                    "T.Dict[(str, T.Any)]"
                ]
            }
        },
        "howbig": {
            "name": "howbig",
            "location": 88,
            "return": [
                "T.Dict[(str, int)]"
            ],
            "arguments": {
                "params": [
                    "T.Dict[(str, T.Any)]"
                ],
                "finf": [
                    "T.Dict[(str, T.Any)]"
                ]
            }
        },
        "whichframes": {
            "name": "whichframes",
            "location": 97,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "Path"
                ],
                "params": [
                    "T.Dict[(str, T.Any)]"
                ],
                "finf": [
                    "T.Dict[(str, T.Any)]"
                ]
            }
        },
        "getDMCframe": {
            "name": "getDMCframe",
            "location": 159,
            "return": [
                "T.Tuple[(np.ndarray, int)]"
            ],
            "arguments": {
                "f": [
                    "T.Union[(Tio.BinaryIO, Path)]"
                ],
                "iFrm": [
                    "int"
                ],
                "finf": [
                    "T.Dict[(str, int)]"
                ]
            }
        }
    },
    "histutils-main/src/histutils/simulFrame.py": {
        "getSimulData": {
            "name": "getSimulData",
            "location": 19,
            "return": [],
            "arguments": {
                "sim": [],
                "cam": [],
                "odir": [],
                "verbose": []
            }
        },
        "HSTsync": {
            "name": "HSTsync",
            "location": 27,
            "return": [],
            "arguments": {
                "sim": [],
                "cam": [],
                "verbose": []
            }
        },
        "HSTframeHandler": {
            "name": "HSTframeHandler",
            "location": 108,
            "return": [],
            "arguments": {
                "sim": [],
                "cam": [],
                "odir": [],
                "verbose": []
            }
        }
    },
    "histutils-main/src/histutils/solis.py": {
        "getNeoParam": {
            "name": "getNeoParam",
            "location": 19,
            "return": [],
            "arguments": {
                "fn": [
                    "Path"
                ],
                "FrameIndReq": [],
                "ut1req": [],
                "kineticsec": [],
                "startUTC": [],
                "cmosinit": [
                    "dict"
                ],
                "verbose": []
            }
        }
    },
    "histutils-main/src/histutils/timedmc.py": {
        "frame2ut1": {
            "name": "frame2ut1",
            "location": 19,
            "return": [],
            "arguments": {
                "tstart": [],
                "kineticsec": [],
                "rawind": []
            }
        },
        "ut12frame": {
            "name": "ut12frame",
            "location": 35,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "treq": [],
                "ind": [],
                "ut1_unix": []
            }
        },
        "datetime2unix": {
            "name": "datetime2unix",
            "location": 65,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "firetime": {
            "name": "firetime",
            "location": 92,
            "return": [],
            "arguments": {
                "tstart": [],
                "Tfire": []
            }
        }
    },
    "histutils-main/src/histutils/utils.py": {
        "write_quota": {
            "name": "write_quota",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "outbytes": [
                    "int"
                ],
                "outfn": [
                    "Path"
                ],
                "limitGB": [
                    "float"
                ]
            }
        },
        "sixteen2eight": {
            "name": "sixteen2eight",
            "location": 32,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "Clim": [
                    "T.Tuple[(int, int)]"
                ]
            }
        },
        "normframe": {
            "name": "normframe",
            "location": 47,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "Clim": [
                    "T.Tuple[(int, int)]"
                ]
            }
        },
        "splitconf": {
            "name": "splitconf",
            "location": 61,
            "return": [],
            "arguments": {
                "conf": [],
                "key": [],
                "i": [],
                "dtype": [],
                "fallback": [],
                "sep": [
                    "str"
                ]
            }
        },
        "get_camera_serial_number": {
            "name": "get_camera_serial_number",
            "location": 101,
            "return": [
                "T.Dict[(str, int)]"
            ],
            "arguments": {
                "files": [
                    "T.Iterable[Path]"
                ]
            }
        }
    },
    "histutils-main/src/histutils/__init__.py": {},
    "histutils-main/src/histutils/tests/test_all.py": {
        "test_rawread": {
            "name": "test_rawread",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "histutils-main/src/histutils/tests/test_scale.py": {
        "test_nearazel": {
            "name": "test_nearazel",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "histutils-main/src/histutils/tests/test_utils.py": {
        "test_xmlparse": {
            "name": "test_xmlparse",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_quota_too_small": {
            "name": "test_quota_too_small",
            "location": 21,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_quota_ok": {
            "name": "test_quota_ok",
            "location": 34,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        }
    }
}
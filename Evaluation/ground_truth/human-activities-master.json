{
    "human-activities-master/setup.py": {},
    "human-activities-master/human_activities/app.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.run_ui": {
            "name": "run_ui",
            "location": 45,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "ui": [
                    "Any"
                ]
            }
        },
        "Application._on_init": {
            "name": "_on_init",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "ui_app": [
                    "Any"
                ]
            }
        },
        "Application._scan_start": {
            "name": "_scan_start",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "interval_sec": [
                    "int"
                ]
            }
        },
        "Application._scan": {
            "name": "_scan",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application._on_scan": {
            "name": "_on_scan",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ],
                "directory": [
                    "Optional[Directory]"
                ]
            }
        },
        "Application._scan_stop": {
            "name": "_scan_stop",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application._redraw_start": {
            "name": "_redraw_start",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application._redraw": {
            "name": "_redraw",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application._redraw_stop": {
            "name": "_redraw_stop",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.set_config": {
            "name": "set_config",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ]
            }
        },
        "Application.show_setup": {
            "name": "show_setup",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.show_settings": {
            "name": "show_settings",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.show_about": {
            "name": "show_about",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.quit": {
            "name": "quit",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application._on_quit": {
            "name": "_on_quit",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/cli.py": {
        "is_appindicator_available": {
            "name": "is_appindicator_available",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_pyqt5_available": {
            "name": "is_pyqt5_available",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/config.py": {
        "get_fd_command": {
            "name": "get_fd_command",
            "location": 117,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "try_commands": [
                    "Sequence[str]"
                ]
            }
        },
        "get_fdignore_path": {
            "name": "get_fdignore_path",
            "location": 132,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "config_dir": [
                    "Path"
                ],
                "config_global_dir": [
                    "Optional[Path]"
                ]
            }
        },
        "_load_config_interval_sec": {
            "name": "_load_config_interval_sec",
            "location": 219,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_root_path": {
            "name": "_load_config_root_path",
            "location": 223,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_test": {
            "name": "_load_config_test",
            "location": 228,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_mode": {
            "name": "_load_config_mode",
            "location": 232,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_named_dirs": {
            "name": "_load_config_named_dirs",
            "location": 237,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_show_setup": {
            "name": "_load_config_show_setup",
            "location": 245,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_unit": {
            "name": "_load_config_unit",
            "location": 249,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "_load_config_threshold_days_ago": {
            "name": "_load_config_threshold_days_ago",
            "location": 254,
            "return": [],
            "arguments": {
                "config_json": [
                    "Any"
                ],
                "config": [
                    "Config"
                ]
            }
        },
        "load_config": {
            "name": "load_config",
            "location": 258,
            "return": [
                "Config"
            ],
            "arguments": {}
        },
        "save_config": {
            "name": "save_config",
            "location": 280,
            "return": [],
            "arguments": {
                "config": [
                    "Config"
                ]
            }
        },
        "find_user_dirs": {
            "name": "find_user_dirs",
            "location": 294,
            "return": [
                "UserDirs"
            ],
            "arguments": {}
        },
        "change_user_dirs": {
            "name": "change_user_dirs",
            "location": 313,
            "return": [
                "str"
            ],
            "arguments": {
                "orig": [
                    "str"
                ]
            }
        },
        "_process_file": {
            "name": "_process_file",
            "location": 317,
            "return": [],
            "arguments": {
                "path": [
                    "Path"
                ],
                "func": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "hide_user_dirs": {
            "name": "hide_user_dirs",
            "location": 323,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_dirs": [
                    "UserDirs"
                ]
            }
        },
        "restore_user_dirs": {
            "name": "restore_user_dirs",
            "location": 331,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_dirs": [
                    "UserDirs"
                ]
            }
        },
        "NamedDirs.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NamedDirs.append": {
            "name": "append",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "NamedDirs.extend": {
            "name": "extend",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NamedDirs.remove": {
            "name": "remove",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "NamedDirs.__delitem__": {
            "name": "__delitem__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "NamedDirs.copy": {
            "name": "copy",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirs.new": {
            "name": "new",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirs.set_path": {
            "name": "set_path",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "NamedDirs.set_name": {
            "name": "set_name",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "NamedDirs.get_label": {
            "name": "get_label",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "NamedDirs.max_reached": {
            "name": "max_reached",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "NamedDirs.paths": {
            "name": "paths",
            "location": 80,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NamedDirs.to_dict": {
            "name": "to_dict",
            "location": 87,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.copy": {
            "name": "copy",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.to_json": {
            "name": "to_json",
            "location": 178,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.list_configured_dirs": {
            "name": "list_configured_dirs",
            "location": 191,
            "return": [
                "ConfiguredDirs"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.reset_named_dirs": {
            "name": "reset_named_dirs",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.interval_hours": {
            "name": "interval_hours",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "interval_hours": [
                    "int"
                ]
            }
        }
    },
    "human-activities-master/human_activities/icon.py": {
        "_frac_to_rad": {
            "name": "_frac_to_rad",
            "location": 60,
            "return": [
                "float"
            ],
            "arguments": {
                "frac": [
                    "float"
                ]
            }
        },
        "_hash_to_fraction": {
            "name": "_hash_to_fraction",
            "location": 64,
            "return": [
                "float"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "_color_from_index": {
            "name": "_color_from_index",
            "location": 74,
            "return": [
                "Color"
            ],
            "arguments": {
                "i": [
                    "int"
                ]
            }
        },
        "_gen_colors": {
            "name": "_gen_colors",
            "location": 80,
            "return": [
                "Tuple[(Color, ...)]"
            ],
            "arguments": {
                "num": [
                    "int"
                ],
                "highlighted": [
                    "Optional[int]"
                ]
            }
        },
        "_pie_chart_shader": {
            "name": "_pie_chart_shader",
            "location": 90,
            "return": [
                "Color"
            ],
            "arguments": {
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "w": [
                    "int"
                ],
                "h": [
                    "int"
                ],
                "slices": [
                    "List[Slice]"
                ],
                "background_color": [
                    "Color"
                ]
            }
        },
        "_draw_image": {
            "name": "_draw_image",
            "location": 112,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "w": [
                    "int"
                ],
                "h": [
                    "int"
                ],
                "shader": [
                    "Callable"
                ],
                "background_color": [
                    "Color"
                ]
            }
        },
        "_create_slices": {
            "name": "_create_slices",
            "location": 126,
            "return": [
                "Iterator[Slice]"
            ],
            "arguments": {
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "highlighted": [
                    "Optional[int]"
                ]
            }
        },
        "draw_pie_chart_png": {
            "name": "draw_pie_chart_png",
            "location": 147,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "size": [
                    "int"
                ],
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "highlighted": [
                    "Optional[int]"
                ]
            }
        },
        "draw_pie_chart_svg": {
            "name": "draw_pie_chart_svg",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "highlighted": [
                    "Optional[int]"
                ]
            }
        },
        "gen_random_slices": {
            "name": "gen_random_slices",
            "location": 192,
            "return": [
                "Iterator[float]"
            ],
            "arguments": {
                "n_min": [
                    "int"
                ],
                "n_max": [
                    "int"
                ]
            }
        },
        "calc_icon_hash": {
            "name": "calc_icon_hash",
            "location": 201,
            "return": [
                "str"
            ],
            "arguments": {
                "fractions": [
                    "Tuple[(float, ...)]"
                ]
            }
        },
        "print_default_svg_icon": {
            "name": "print_default_svg_icon",
            "location": 207,
            "return": [],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/l10n.py": {},
    "human-activities-master/human_activities/model.py": {
        "create_database_engine": {
            "name": "create_database_engine",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "scan_directory": {
            "name": "scan_directory",
            "location": 185,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ],
                "unit": [
                    "str"
                ],
                "threshold_days_ago": [
                    "int"
                ],
                "event_stop": [
                    "Event"
                ],
                "fd_command": [
                    "Optional[str]"
                ],
                "fdignore_path": [
                    "Optional[str]"
                ],
                "callback": [
                    "Callable[([Directory], None)]"
                ],
                "test": [
                    "bool"
                ]
            }
        },
        "clean_cache": {
            "name": "clean_cache",
            "location": 239,
            "return": [],
            "arguments": {}
        },
        "Stat.__repr__": {
            "name": "__repr__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Directory.find_value": {
            "name": "find_value",
            "location": 60,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "unit": [
                    "str"
                ],
                "threshold_days_ago": [
                    "int"
                ]
            }
        },
        "Directory.__repr__": {
            "name": "__repr__",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Directories.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [
                    "Iterable[str]"
                ]
            }
        },
        "Directories.__del__": {
            "name": "__del__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryView.text": {
            "name": "text",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryView.value_str": {
            "name": "value_str",
            "location": 131,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DirectoryViews.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "unit": [
                    "str"
                ],
                "threshold_days_ago": [
                    "int"
                ],
                "configured_dirs": [
                    "ConfiguredDirs"
                ]
            }
        },
        "DirectoryViews.load": {
            "name": "load",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryViews.fractions": {
            "name": "fractions",
            "location": 169,
            "return": [
                "Tuple[(float, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DirectoryViews.tooltip": {
            "name": "tooltip",
            "location": 173,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DirectoryViews.copy": {
            "name": "copy",
            "location": 176,
            "return": [
                "'DirectoryViews'"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/texts.py": {},
    "human-activities-master/human_activities/__init__.py": {
        "is_win": {
            "name": "is_win",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_mac": {
            "name": "is_mac",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "_get_xdg_dir": {
            "name": "_get_xdg_dir",
            "location": 31,
            "return": [
                "Union[(Path, PurePosixPath)]"
            ],
            "arguments": {
                "xdg_var": [
                    "str"
                ],
                "fallback_dir": [
                    "str"
                ]
            }
        },
        "get_xdg_cache_dir": {
            "name": "get_xdg_cache_dir",
            "location": 40,
            "return": [
                "Union[(Path, PurePosixPath)]"
            ],
            "arguments": {}
        },
        "get_xdg_config_dir": {
            "name": "get_xdg_config_dir",
            "location": 44,
            "return": [
                "Union[(Path, PurePosixPath)]"
            ],
            "arguments": {}
        },
        "get_dir": {
            "name": "get_dir",
            "location": 48,
            "return": [
                "Union[(Path, PurePosixPath, PureWindowsPath)]"
            ],
            "arguments": {
                "mac_dir": [
                    "str"
                ],
                "xdg_func": [
                    "Callable[([], Union[(Path, PurePosixPath)])]"
                ]
            }
        },
        "get_cache_dir": {
            "name": "get_cache_dir",
            "location": 60,
            "return": [
                "Union[(Path, PurePosixPath, PureWindowsPath)]"
            ],
            "arguments": {}
        },
        "get_config_dir": {
            "name": "get_config_dir",
            "location": 64,
            "return": [
                "Union[(Path, PurePosixPath, PureWindowsPath)]"
            ],
            "arguments": {}
        },
        "get_config_global_dir": {
            "name": "get_config_global_dir",
            "location": 68,
            "return": [
                "Optional[Path]"
            ],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/__main__.py": {},
    "human-activities-master/human_activities/etc/__init__.py": {},
    "human-activities-master/human_activities/gtk/about.py": {
        "show_about": {
            "name": "show_about",
            "location": 13,
            "return": [],
            "arguments": {
                "image": [
                    "Image.Image"
                ],
                "title": [
                    "str"
                ],
                "version": [
                    "str"
                ],
                "copyright": [
                    "str"
                ],
                "uri": [
                    "str"
                ],
                "authors": [
                    "List[str]"
                ]
            }
        },
        "on_about_response": {
            "name": "on_about_response",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "dialog": [
                    "Gtk.Dialog"
                ],
                "response_id": [
                    "int"
                ]
            }
        }
    },
    "human-activities-master/human_activities/gtk/app.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "on_init": [
                    "Callable"
                ],
                "on_quit": [
                    "Callable"
                ]
            }
        },
        "Application.do_startup": {
            "name": "do_startup",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.do_activate": {
            "name": "do_activate",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.spawn_frame": {
            "name": "spawn_frame",
            "location": 34,
            "return": [
                "T"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable[(..., T)]"
                ]
            }
        },
        "Application.quit": {
            "name": "quit",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/gtk/lib.py": {
        "create_box": {
            "name": "create_box",
            "location": 20,
            "return": [
                "Gtk.Box"
            ],
            "arguments": {
                "orientation": [
                    "Gtk.Orientation"
                ],
                "homogeneous": [
                    "bool"
                ]
            }
        },
        "box_add": {
            "name": "box_add",
            "location": 31,
            "return": [],
            "arguments": {
                "box": [
                    "Gtk.Box"
                ],
                "widget": [
                    "Gtk.Widget"
                ],
                "expand": [
                    "bool"
                ],
                "fill": [
                    "bool"
                ],
                "padding": [
                    "int"
                ]
            }
        },
        "create_label": {
            "name": "create_label",
            "location": 42,
            "return": [
                "Gtk.Label"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "create_button": {
            "name": "create_button",
            "location": 49,
            "return": [
                "Gtk.Button"
            ],
            "arguments": {
                "callback": [
                    "Callable"
                ],
                "label": [
                    "Optional[str]"
                ],
                "stock_id": [
                    "Optional[str]"
                ]
            }
        },
        "on_button_clicked": {
            "name": "on_button_clicked",
            "location": 62,
            "return": [],
            "arguments": {
                "button": [
                    "Gtk.Button"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_radio_group": {
            "name": "create_radio_group",
            "location": 73,
            "return": [
                "Dict[(str, Gtk.RadioButton)]"
            ],
            "arguments": {
                "radio_configs": [
                    "Iterable[RadioConfig]"
                ],
                "active_value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ],
                "use_toggle_buttons": [
                    "bool"
                ]
            }
        },
        "on_radio_toggled": {
            "name": "on_radio_toggled",
            "location": 101,
            "return": [],
            "arguments": {
                "radio_button": [
                    "Gtk.RadioButton"
                ],
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_entry": {
            "name": "create_entry",
            "location": 107,
            "return": [
                "Gtk.Entry"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "on_entry_changed": {
            "name": "on_entry_changed",
            "location": 115,
            "return": [],
            "arguments": {
                "entry": [
                    "Gtk.Entry"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_spin_button": {
            "name": "create_spin_button",
            "location": 119,
            "return": [
                "Gtk.SpinButton"
            ],
            "arguments": {
                "value": [
                    "int"
                ],
                "callback": [
                    "Callable"
                ],
                "min_val": [
                    "int"
                ],
                "max_val": [
                    "int"
                ],
                "step": [
                    "int"
                ]
            }
        },
        "on_spin_button_changed": {
            "name": "on_spin_button_changed",
            "location": 135,
            "return": [],
            "arguments": {
                "spin_button": [
                    "Gtk.SpinButton"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_file_chooser_button": {
            "name": "create_file_chooser_button",
            "location": 139,
            "return": [
                "Gtk.FileChooserButton"
            ],
            "arguments": {
                "value": [
                    "Optional[str]"
                ],
                "callback": [
                    "Callable[([str], None)]"
                ]
            }
        },
        "on_file_set": {
            "name": "on_file_set",
            "location": 151,
            "return": [],
            "arguments": {
                "button": [
                    "Gtk.FileChooserButton"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "image_to_pixbuf": {
            "name": "image_to_pixbuf",
            "location": 155,
            "return": [
                "GdkPixbuf.Pixbuf"
            ],
            "arguments": {
                "image": [
                    "Image.Image"
                ]
            }
        },
        "RootPathForm.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "root_path": [
                    "Optional[str]"
                ],
                "on_change": [
                    "Callable[([str], None)]"
                ],
                "parent": [
                    "Gtk.Window"
                ]
            }
        },
        "RootPathForm._create_widgets": {
            "name": "_create_widgets",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RootPathForm._on_path_changed": {
            "name": "_on_path_changed",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "NamedDirsForm.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ],
                "on_change": [
                    "Callable[([NamedDirs], None)]"
                ],
                "parent": [
                    "Gtk.Window"
                ],
                "custom_names_enabled": [
                    "bool"
                ]
            }
        },
        "NamedDirsForm._create_widgets": {
            "name": "_create_widgets",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._changed": {
            "name": "_changed",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._recreate": {
            "name": "_recreate",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/gtk/settings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_accept": [
                    "Callable"
                ],
                "parent": [
                    "Gtk.Window"
                ]
            }
        },
        "Settings._init_window": {
            "name": "_init_window",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_widgets": {
            "name": "_create_widgets",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._add_widgets": {
            "name": "_add_widgets",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_unit_radios": {
            "name": "_create_unit_radios",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_interval_hours_changed": {
            "name": "_on_interval_hours_changed",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "interval_hours": [
                    "int"
                ]
            }
        },
        "Settings._on_unit_radio_toggled": {
            "name": "_on_unit_radio_toggled",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "unit": [
                    "str"
                ]
            }
        },
        "Settings._on_threshold_days_ago_changed": {
            "name": "_on_threshold_days_ago_changed",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "threshold_days_ago": [
                    "int"
                ]
            }
        },
        "Settings._create_mode_radios": {
            "name": "_create_mode_radios",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_mode_radio_toggled": {
            "name": "_on_mode_radio_toggled",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [
                    "str"
                ]
            }
        },
        "Settings._on_root_path_change": {
            "name": "_on_root_path_change",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "root_path": [
                    "str"
                ]
            }
        },
        "Settings._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Settings._create_user_dirs_form": {
            "name": "_create_user_dirs_form",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_hide_user_dirs_clicked": {
            "name": "_on_hide_user_dirs_clicked",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_restore_user_dirs_clicked": {
            "name": "_on_restore_user_dirs_clicked",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._toggle_user_dirs_buttons": {
            "name": "_toggle_user_dirs_buttons",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._show": {
            "name": "_show",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/gtk/setup.py": {
        "Setup.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_finish": [
                    "Callable"
                ],
                "parent": [
                    "Gtk.Window"
                ]
            }
        },
        "Setup._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Setup._on_assistant_apply": {
            "name": "_on_assistant_apply",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "assistant": [
                    "Gtk.Assistant"
                ]
            }
        },
        "Setup._on_assistant_cancel": {
            "name": "_on_assistant_cancel",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "assistant": [
                    "Gtk.Assistant"
                ]
            }
        }
    },
    "human-activities-master/human_activities/gtk/status_icon.py": {
        "create_menu_item": {
            "name": "create_menu_item",
            "location": 42,
            "return": [
                "Gtk.MenuItem"
            ],
            "arguments": {
                "label": [
                    "str"
                ],
                "callback": [
                    "Optional[Callable]"
                ],
                "tooltip": [
                    "Optional[str]"
                ],
                "icon_name": [
                    "Optional[str]"
                ],
                "icon_pixbuf": [
                    "Optional[GdkPixbuf.Pixbuf]"
                ],
                "markup": [
                    "Optional[str]"
                ]
            }
        },
        "create_indicator": {
            "name": "create_indicator",
            "location": 77,
            "return": [
                "AppIndicator3.Indicator"
            ],
            "arguments": {}
        },
        "write_temp_file": {
            "name": "write_temp_file",
            "location": 87,
            "return": [
                "tempfile.TemporaryDirectory"
            ],
            "arguments": {
                "svg": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "set_indicator_icon": {
            "name": "set_indicator_icon",
            "location": 95,
            "return": [],
            "arguments": {
                "indicator": [
                    "AppIndicator3.Indicator"
                ],
                "icon_theme_path": [
                    "str"
                ],
                "icon_name": [
                    "str"
                ],
                "tooltip": [
                    "str"
                ]
            }
        },
        "markup_italic": {
            "name": "markup_italic",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "StatusIcon.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "app": [
                    "'Application'"
                ]
            }
        },
        "StatusIcon._create_menu_items": {
            "name": "_create_menu_items",
            "location": 125,
            "return": [
                "Iterator[Gtk.MenuItem]"
            ],
            "arguments": {
                "self": [],
                "directory_views": [
                    "Optional[DirectoryViews]"
                ]
            }
        },
        "StatusIcon._init_menu": {
            "name": "_init_menu",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "Optional[DirectoryViews]"
                ]
            }
        },
        "StatusIcon.update": {
            "name": "update",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._on_update": {
            "name": "_on_update",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._set_icon": {
            "name": "_set_icon",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "tooltip": [
                    "str"
                ]
            }
        },
        "StatusIcon.destroy": {
            "name": "destroy",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/gtk/__init__.py": {},
    "human-activities-master/human_activities/qt/about.py": {
        "show_about": {
            "name": "show_about",
            "location": 10,
            "return": [],
            "arguments": {
                "image": [
                    "Image.Image"
                ],
                "title": [
                    "str"
                ],
                "version": [
                    "str"
                ],
                "copyright": [
                    "str"
                ],
                "uri": [
                    "str"
                ],
                "authors": [
                    "List[str]"
                ]
            }
        }
    },
    "human-activities-master/human_activities/qt/app.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "on_init": [
                    "Callable"
                ],
                "on_quit": [
                    "Callable"
                ]
            }
        },
        "Application.spawn_frame": {
            "name": "spawn_frame",
            "location": 21,
            "return": [
                "T"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable[(..., T)]"
                ]
            }
        },
        "Application.quit": {
            "name": "quit",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.run": {
            "name": "run",
            "location": 29,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/qt/lib.py": {
        "create_layout": {
            "name": "create_layout",
            "location": 42,
            "return": [
                "QVBoxLayout"
            ],
            "arguments": {}
        },
        "add_layout_items": {
            "name": "add_layout_items",
            "location": 46,
            "return": [],
            "arguments": {
                "layout": [
                    "QLayout"
                ],
                "items": [
                    "Iterable[Union[(QWidget, QLayout)]]"
                ]
            }
        },
        "get_layout_widgets": {
            "name": "get_layout_widgets",
            "location": 56,
            "return": [
                "Iterator[QWidget]"
            ],
            "arguments": {
                "layout": [
                    "QLayout"
                ]
            }
        },
        "toggle_layout_widgets": {
            "name": "toggle_layout_widgets",
            "location": 68,
            "return": [],
            "arguments": {
                "layout": [
                    "QLayout"
                ],
                "enabled": [
                    "bool"
                ]
            }
        },
        "remove_layout_items": {
            "name": "remove_layout_items",
            "location": 73,
            "return": [],
            "arguments": {
                "layout": [
                    "QLayout"
                ]
            }
        },
        "create_group_box": {
            "name": "create_group_box",
            "location": 81,
            "return": [
                "QGroupBox"
            ],
            "arguments": {
                "label": [
                    "str"
                ],
                "parent": [
                    "QWidget"
                ]
            }
        },
        "create_label": {
            "name": "create_label",
            "location": 88,
            "return": [
                "QLabel"
            ],
            "arguments": {
                "parent": [
                    "QWidget"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "create_button": {
            "name": "create_button",
            "location": 92,
            "return": [
                "QPushButton"
            ],
            "arguments": {
                "parent": [
                    "QWidget"
                ],
                "callback": [
                    "Callable"
                ],
                "label": [
                    "Optional[str]"
                ],
                "icon_pixmap": [
                    "Optional[QPixmap]"
                ]
            }
        },
        "on_button_clicked": {
            "name": "on_button_clicked",
            "location": 108,
            "return": [],
            "arguments": {
                "button": [
                    "QPushButton"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_radio_group": {
            "name": "create_radio_group",
            "location": 118,
            "return": [
                "Dict[(str, QRadioButton)]"
            ],
            "arguments": {
                "parent": [
                    "QWidget"
                ],
                "radio_configs": [
                    "Iterable[RadioConfig]"
                ],
                "active_value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "on_radio_toggled": {
            "name": "on_radio_toggled",
            "location": 140,
            "return": [],
            "arguments": {
                "checked": [
                    "bool"
                ],
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_line_edit": {
            "name": "create_line_edit",
            "location": 145,
            "return": [
                "QLineEdit"
            ],
            "arguments": {
                "parent": [
                    "QWidget"
                ],
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_spin_box": {
            "name": "create_spin_box",
            "location": 153,
            "return": [
                "QSpinBox"
            ],
            "arguments": {
                "parent": [
                    "QWidget"
                ],
                "value": [
                    "int"
                ],
                "callback": [
                    "Callable"
                ],
                "min_val": [
                    "int"
                ],
                "max_val": [
                    "int"
                ]
            }
        },
        "image_to_pixmap": {
            "name": "image_to_pixmap",
            "location": 210,
            "return": [
                "QPixmap"
            ],
            "arguments": {
                "image": [
                    "Image.Image"
                ]
            }
        },
        "create_icon_pixmap": {
            "name": "create_icon_pixmap",
            "location": 219,
            "return": [
                "QPixmap"
            ],
            "arguments": {
                "app": [
                    "QApplication"
                ],
                "standard_pixmap": [
                    "QStyle.StandardPixmap"
                ]
            }
        },
        "get_icon_size": {
            "name": "get_icon_size",
            "location": 227,
            "return": [
                "int"
            ],
            "arguments": {
                "app": [
                    "QApplication"
                ],
                "pixel_metric": [
                    "QStyle.PixelMetric"
                ]
            }
        },
        "create_icon": {
            "name": "create_icon",
            "location": 233,
            "return": [
                "QIcon"
            ],
            "arguments": {
                "pixmap": [
                    "QPixmap"
                ]
            }
        },
        "FileChooserForm.__init__": {
            "name": "__init__",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "ui_app": [
                    "QApplication"
                ],
                "parent": [
                    "QWidget"
                ],
                "value": [
                    "Optional[str]"
                ],
                "callback": [
                    "Callable[([str], None)]"
                ]
            }
        },
        "FileChooserForm._on_button_clicked": {
            "name": "_on_button_clicked",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileChooserForm._on_edit_changed": {
            "name": "_on_edit_changed",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "RootPathForm.__init__": {
            "name": "__init__",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "ui_app": [
                    "QApplication"
                ],
                "root_path": [
                    "Optional[str]"
                ],
                "on_change": [
                    "Callable[([str], None)]"
                ],
                "parent": [
                    "QWidget"
                ]
            }
        },
        "RootPathForm._create_widgets": {
            "name": "_create_widgets",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RootPathForm._on_dir_changed": {
            "name": "_on_dir_changed",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "NamedDirsForm.__init__": {
            "name": "__init__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "ui_app": [
                    "QApplication"
                ],
                "named_dirs": [
                    "NamedDirs"
                ],
                "on_change": [
                    "Callable[([NamedDirs], None)]"
                ],
                "parent": [
                    "QWidget"
                ],
                "custom_names_enabled": [
                    "bool"
                ]
            }
        },
        "NamedDirsForm._create_widgets": {
            "name": "_create_widgets",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._changed": {
            "name": "_changed",
            "location": 345,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._recreate": {
            "name": "_recreate",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/qt/settings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_accept": [
                    "Callable"
                ],
                "ui_app": [
                    "QApplication"
                ]
            }
        },
        "Settings.sizeHint": {
            "name": "sizeHint",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._init_window": {
            "name": "_init_window",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_interval_hours_box": {
            "name": "_create_interval_hours_box",
            "location": 72,
            "return": [
                "QWidget"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_interval_hours_changed": {
            "name": "_on_interval_hours_changed",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "interval_hours": [
                    "int"
                ]
            }
        },
        "Settings._create_unit_box": {
            "name": "_create_unit_box",
            "location": 86,
            "return": [
                "QWidget"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_unit_radio_toggled": {
            "name": "_on_unit_radio_toggled",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "unit": [
                    "str"
                ]
            }
        },
        "Settings._create_threshold_days_ago_box": {
            "name": "_create_threshold_days_ago_box",
            "location": 103,
            "return": [
                "QWidget"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_threshold_days_ago_changed": {
            "name": "_on_threshold_days_ago_changed",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "threshold_days_ago": [
                    "int"
                ]
            }
        },
        "Settings._create_mode_box": {
            "name": "_create_mode_box",
            "location": 116,
            "return": [
                "QWidget"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_mode_radio_toggled": {
            "name": "_on_mode_radio_toggled",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [
                    "str"
                ]
            }
        },
        "Settings._on_root_path_change": {
            "name": "_on_root_path_change",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "root_path": [
                    "str"
                ]
            }
        },
        "Settings._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Settings._toggle_forms": {
            "name": "_toggle_forms",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_dialog_buttons": {
            "name": "_create_dialog_buttons",
            "location": 170,
            "return": [
                "QWidget"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings._show": {
            "name": "_show",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/qt/setup.py": {
        "Setup.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_finish": [
                    "Callable"
                ],
                "ui_app": [
                    "QApplication"
                ]
            }
        },
        "Setup.sizeHint": {
            "name": "sizeHint",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Setup._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Setup._on_wizard_accept": {
            "name": "_on_wizard_accept",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/qt/status_icon.py": {
        "create_menu_item": {
            "name": "create_menu_item",
            "location": 20,
            "return": [],
            "arguments": {
                "menu": [
                    "QMenu"
                ],
                "label": [
                    "str"
                ],
                "callback": [
                    "Optional[Callable]"
                ],
                "tooltip": [
                    "Optional[str]"
                ],
                "icon_pixmap": [
                    "Optional[QPixmap]"
                ]
            }
        },
        "StatusIcon.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "app": [
                    "'Application'"
                ]
            }
        },
        "StatusIcon._init_menu": {
            "name": "_init_menu",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "Optional[DirectoryViews]"
                ]
            }
        },
        "StatusIcon.update": {
            "name": "update",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._on_update": {
            "name": "_on_update",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._set_icon": {
            "name": "_set_icon",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "tooltip": [
                    "str"
                ]
            }
        },
        "StatusIcon.icon_size": {
            "name": "icon_size",
            "location": 110,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusIcon.destroy": {
            "name": "destroy",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/qt/__init__.py": {},
    "human-activities-master/human_activities/qt/data/__init__.py": {},
    "human-activities-master/human_activities/tests/test_config.py": {
        "TestConfigWin.test_win": {
            "name": "test_win",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigWin.test_win_fallback": {
            "name": "test_win_fallback",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigMac.test_mac": {
            "name": "test_mac",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigLinux.test_linux": {
            "name": "test_linux",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigLinux.test_linux_fallback": {
            "name": "test_linux_fallback",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigUserDirs.test_create_new_dirs": {
            "name": "test_create_new_dirs",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigUserDirs.test_create_new_dirs_custom": {
            "name": "test_create_new_dirs_custom",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.setUp": {
            "name": "setUp",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.tearDown": {
            "name": "tearDown",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.test_user_fdignore": {
            "name": "test_user_fdignore",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.test_global_fdignore_on_windows_or_mac": {
            "name": "test_global_fdignore_on_windows_or_mac",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.test_global_fdignore_on_linux": {
            "name": "test_global_fdignore_on_linux",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfigFdignore.test_global_fdignore_on_linux_in_bundle": {
            "name": "test_global_fdignore_on_linux_in_bundle",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/tests/test_filesystem.py": {
        "TestFilesystem.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFilesystem.tearDown": {
            "name": "tearDown",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFilesystem.test_find_files_fd_with_default_fdignore": {
            "name": "test_find_files_fd_with_default_fdignore",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFilesystem.test_find_files_fd_with_custom_fdignore": {
            "name": "test_find_files_fd_with_custom_fdignore",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFilesystem.test_find_files_python": {
            "name": "test_find_files_python",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFilesystem.test_find_files_python_with_custom_fdignore": {
            "name": "test_find_files_python_with_custom_fdignore",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/tests/test_icon.py": {
        "TestIcon.test_gen_random_slices": {
            "name": "test_gen_random_slices",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/tests/__init__.py": {},
    "human-activities-master/human_activities/utils/filesystem.py": {
        "has_hidden_attribute": {
            "name": "has_hidden_attribute",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "entry": [
                    "TDirEntry"
                ]
            }
        },
        "is_hidden": {
            "name": "is_hidden",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "entry": [
                    "TDirEntry"
                ]
            }
        },
        "list_dirs": {
            "name": "list_dirs",
            "location": 70,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "humansize": {
            "name": "humansize",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "nbytes": [
                    "float"
                ]
            }
        },
        "parse_fdignore": {
            "name": "parse_fdignore",
            "location": 91,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {
                "b": [
                    "bytes"
                ]
            }
        },
        "find_files_fd": {
            "name": "find_files_fd",
            "location": 98,
            "return": [
                "Iterator[TDirEntry]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "fd_command": [
                    "str"
                ],
                "fdignore_path": [
                    "Optional[str]"
                ]
            }
        },
        "find_files_python": {
            "name": "find_files_python",
            "location": 136,
            "return": [
                "Iterator[TDirEntry]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "fdignore_path": [
                    "Optional[str]"
                ],
                "pathspec": [
                    "Optional[PathSpec]"
                ]
            }
        },
        "calc_entries_size": {
            "name": "calc_entries_size",
            "location": 178,
            "return": [
                "DirSize"
            ],
            "arguments": {
                "entries": [
                    "Iterable[TDirEntry]"
                ],
                "threshold_seconds": [
                    "float"
                ],
                "event_stop": [
                    "Event"
                ]
            }
        },
        "FdDirEntry.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "is_dir": [],
                "is_file": [],
                "is_symlink": []
            }
        },
        "FdDirEntry.name": {
            "name": "name",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FdDirEntry.inode": {
            "name": "inode",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FdDirEntry.is_file": {
            "name": "is_file",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "follow_symlinks": [
                    "bool"
                ]
            }
        },
        "FdDirEntry.is_dir": {
            "name": "is_dir",
            "location": 41,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "follow_symlinks": [
                    "bool"
                ]
            }
        },
        "FdDirEntry.is_symlink": {
            "name": "is_symlink",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FdDirEntry.stat": {
            "name": "stat",
            "location": 47,
            "return": [
                "os.stat_result"
            ],
            "arguments": {
                "self": [],
                "follow_symlinks": [
                    "bool"
                ]
            }
        }
    },
    "human-activities-master/human_activities/utils/func.py": {
        "measure_time": {
            "name": "measure_time",
            "location": 11,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "random_wait": {
            "name": "random_wait",
            "location": 23,
            "return": [],
            "arguments": {
                "event_stop": [
                    "Event"
                ],
                "min_sec": [
                    "int"
                ],
                "max_sec": [
                    "int"
                ]
            }
        },
        "after": {
            "name": "after",
            "location": 31,
            "return": [],
            "arguments": {
                "func": [
                    "Callable"
                ]
            }
        },
        "measure_time.wrapper": {
            "name": "wrapper",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "after.wrapper": {
            "name": "wrapper",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/utils/math.py": {
        "safe_div": {
            "name": "safe_div",
            "location": 4,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "Optional[Union[(int, float)]]"
                ],
                "b": [
                    "Optional[Union[(int, float)]]"
                ]
            }
        }
    },
    "human-activities-master/human_activities/utils/__init__.py": {},
    "human-activities-master/human_activities/vendor/gettext_windows.py": {
        "setup_env_windows": {
            "name": "setup_env_windows",
            "location": 54,
            "return": [],
            "arguments": {
                "system_lang": []
            }
        },
        "get_language_windows": {
            "name": "get_language_windows",
            "location": 65,
            "return": [],
            "arguments": {
                "system_lang": []
            }
        },
        "setup_env_other": {
            "name": "setup_env_other",
            "location": 83,
            "return": [],
            "arguments": {
                "system_lang": []
            }
        },
        "get_language_other": {
            "name": "get_language_other",
            "location": 87,
            "return": [],
            "arguments": {
                "system_lang": []
            }
        },
        "_get_lang_env_var": {
            "name": "_get_lang_env_var",
            "location": 94,
            "return": [],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/vendor/__init__.py": {},
    "human-activities-master/human_activities/wx/about.py": {
        "show_about": {
            "name": "show_about",
            "location": 9,
            "return": [],
            "arguments": {
                "image": [
                    "Image.Image"
                ],
                "title": [
                    "str"
                ],
                "version": [
                    "str"
                ],
                "copyright": [
                    "str"
                ],
                "uri": [
                    "str"
                ],
                "authors": [
                    "List[str]"
                ]
            }
        }
    },
    "human-activities-master/human_activities/wx/app.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "on_init": [
                    "Callable"
                ],
                "on_quit": [
                    "Callable"
                ]
            }
        },
        "Application.OnInit": {
            "name": "OnInit",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.spawn_frame": {
            "name": "spawn_frame",
            "location": 26,
            "return": [
                "T"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable[(..., T)]"
                ]
            }
        },
        "Application.quit": {
            "name": "quit",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.OnExit": {
            "name": "OnExit",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.run": {
            "name": "run",
            "location": 40,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/wx/lib.py": {
        "new_id_ref_compat": {
            "name": "new_id_ref_compat",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "create_sizer": {
            "name": "create_sizer",
            "location": 25,
            "return": [
                "wx.BoxSizer"
            ],
            "arguments": {
                "parent": [
                    "Union[(wx.Sizer, wx.Panel)]"
                ],
                "orientation": [
                    "int"
                ]
            }
        },
        "create_label": {
            "name": "create_label",
            "location": 39,
            "return": [
                "wx.StaticText"
            ],
            "arguments": {
                "parent": [
                    "wx.Window"
                ],
                "text": [
                    "str"
                ],
                "markup": [
                    "str"
                ]
            }
        },
        "create_button": {
            "name": "create_button",
            "location": 48,
            "return": [
                "wx.Button"
            ],
            "arguments": {
                "parent": [
                    "wx.Panel"
                ],
                "label": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "on_button_clicked": {
            "name": "on_button_clicked",
            "location": 60,
            "return": [],
            "arguments": {
                "event": [
                    "wx.MouseEvent"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_radio_group": {
            "name": "create_radio_group",
            "location": 70,
            "return": [
                "Dict[(str, wx.RadioButton)]"
            ],
            "arguments": {
                "parent": [
                    "wx.Panel"
                ],
                "radio_configs": [
                    "Iterable[RadioConfig]"
                ],
                "active_value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "on_radio_toggled": {
            "name": "on_radio_toggled",
            "location": 95,
            "return": [],
            "arguments": {
                "event": [
                    "wx.MouseEvent"
                ],
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_text_control": {
            "name": "create_text_control",
            "location": 99,
            "return": [
                "wx.TextCtrl"
            ],
            "arguments": {
                "parent": [
                    "wx.Panel"
                ],
                "value": [
                    "str"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "on_text_control_changed": {
            "name": "on_text_control_changed",
            "location": 111,
            "return": [],
            "arguments": {
                "event": [
                    "wx.KeyEvent"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_spin_control": {
            "name": "create_spin_control",
            "location": 115,
            "return": [
                "wx.SpinCtrl"
            ],
            "arguments": {
                "parent": [
                    "wx.Window"
                ],
                "value": [
                    "int"
                ],
                "callback": [
                    "Callable"
                ],
                "min_val": [
                    "int"
                ],
                "max_val": [
                    "int"
                ]
            }
        },
        "on_spin_control_changed": {
            "name": "on_spin_control_changed",
            "location": 137,
            "return": [],
            "arguments": {
                "event": [
                    "wx.KeyEvent"
                ],
                "spin_control": [
                    "wx.SpinCtrl"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "create_dir_browse_button": {
            "name": "create_dir_browse_button",
            "location": 148,
            "return": [],
            "arguments": {
                "parent": [
                    "wx.Window"
                ],
                "value": [
                    "Optional[str]"
                ],
                "callback": [
                    "Callable[([str], None)]"
                ]
            }
        },
        "on_dir_change": {
            "name": "on_dir_change",
            "location": 158,
            "return": [],
            "arguments": {
                "event": [
                    "wx.Event"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "image_to_bitmap": {
            "name": "image_to_bitmap",
            "location": 162,
            "return": [
                "wx.Bitmap"
            ],
            "arguments": {
                "image": [
                    "Image.Image"
                ]
            }
        },
        "image_to_icon": {
            "name": "image_to_icon",
            "location": 171,
            "return": [
                "wx.Icon"
            ],
            "arguments": {
                "image": [
                    "Image.Image"
                ]
            }
        },
        "DirBrowserButtonWithoutLabel.createLabel": {
            "name": "createLabel",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [
                    "wx.Window"
                ]
            }
        },
        "Form.toggle": {
            "name": "toggle",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": [
                    "bool"
                ]
            }
        },
        "RootPathForm.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "root_path": [
                    "Optional[str]"
                ],
                "on_change": [
                    "Callable[([str], None)]"
                ],
                "parent": [
                    "wx.Panel"
                ]
            }
        },
        "RootPathForm._create_widgets": {
            "name": "_create_widgets",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RootPathForm._on_dir_changed": {
            "name": "_on_dir_changed",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "NamedDirsForm.__init__": {
            "name": "__init__",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ],
                "on_change": [
                    "Callable[([NamedDirs], None)]"
                ],
                "parent": [
                    "wx.Panel"
                ],
                "on_redraw": [
                    "Optional[Callable[([], None)]]"
                ],
                "custom_names_enabled": [
                    "bool"
                ]
            }
        },
        "NamedDirsForm._create_widgets": {
            "name": "_create_widgets",
            "location": 238,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._changed": {
            "name": "_changed",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._recreate": {
            "name": "_recreate",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedDirsForm._recreate.wrapper": {
            "name": "wrapper",
            "location": 303,
            "return": [],
            "arguments": {}
        }
    },
    "human-activities-master/human_activities/wx/settings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_accept": [
                    "Callable"
                ],
                "parent": [
                    "wx.Frame"
                ]
            }
        },
        "Settings._init_window": {
            "name": "_init_window",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._init_dialog_buttons": {
            "name": "_init_dialog_buttons",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_widgets": {
            "name": "_create_widgets",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._add_widgets": {
            "name": "_add_widgets",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._create_unit_radios": {
            "name": "_create_unit_radios",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_interval_hours_changed": {
            "name": "_on_interval_hours_changed",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "interval_hours": [
                    "int"
                ]
            }
        },
        "Settings._on_unit_radio_toggled": {
            "name": "_on_unit_radio_toggled",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "unit": [
                    "str"
                ]
            }
        },
        "Settings._on_threshold_days_ago_changed": {
            "name": "_on_threshold_days_ago_changed",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "threshold_days_ago": [
                    "int"
                ]
            }
        },
        "Settings._create_mode_radios": {
            "name": "_create_mode_radios",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._toggle_forms": {
            "name": "_toggle_forms",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._on_mode_radio_toggled": {
            "name": "_on_mode_radio_toggled",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [
                    "str"
                ]
            }
        },
        "Settings._on_root_path_change": {
            "name": "_on_root_path_change",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "root_path": [
                    "str"
                ]
            }
        },
        "Settings._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Settings._fit": {
            "name": "_fit",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings._show": {
            "name": "_show",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/wx/setup.py": {
        "Setup.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "Config"
                ],
                "on_finish": [
                    "Callable"
                ],
                "parent": [
                    "wx.Frame"
                ]
            }
        },
        "Setup._on_named_dirs_change": {
            "name": "_on_named_dirs_change",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "named_dirs": [
                    "NamedDirs"
                ]
            }
        },
        "Setup._on_wizard_accept": {
            "name": "_on_wizard_accept",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Setup._fit": {
            "name": "_fit",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/wx/status_icon.py": {
        "create_menu_item": {
            "name": "create_menu_item",
            "location": 22,
            "return": [],
            "arguments": {
                "parent": [
                    "wx.Window"
                ],
                "menu": [
                    "wx.Menu"
                ],
                "text": [
                    "str"
                ],
                "tooltip": [
                    "str"
                ],
                "icon_image": [
                    "Optional[Image.Image]"
                ],
                "id": [
                    "int"
                ],
                "callback": [
                    "Optional[Callable]"
                ]
            }
        },
        "on_menu_item": {
            "name": "on_menu_item",
            "location": 50,
            "return": [],
            "arguments": {
                "event": [
                    "wx.MouseEvent"
                ],
                "callback": [
                    "Callable"
                ]
            }
        },
        "StatusIcon.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "app": [
                    "'Application'"
                ]
            }
        },
        "StatusIcon._init_menu": {
            "name": "_init_menu",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "Optional[DirectoryViews]"
                ]
            }
        },
        "StatusIcon._show_menu": {
            "name": "_show_menu",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StatusIcon.CreatePopupMenu": {
            "name": "CreatePopupMenu",
            "location": 112,
            "return": [
                "wx.Menu"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusIcon.update": {
            "name": "update",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._on_update": {
            "name": "_on_update",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "directory_views": [
                    "DirectoryViews"
                ]
            }
        },
        "StatusIcon._set_icon": {
            "name": "_set_icon",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "fractions": [
                    "Tuple[(float, ...)]"
                ],
                "tooltip": [
                    "str"
                ]
            }
        },
        "StatusIcon.icon_size": {
            "name": "icon_size",
            "location": 162,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusIcon.destroy": {
            "name": "destroy",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "human-activities-master/human_activities/wx/__init__.py": {}
}
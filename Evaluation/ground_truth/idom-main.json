{
    "idom-main/noxfile.py": {
        "do_first": {
            "name": "do_first",
            "location": 22,
            "return": [
                "Callable[([Callable[([Session], _Return)]], Callable[([Session], _Return)])]"
            ],
            "arguments": {
                "first_session_func": [
                    "Callable[([Session], None)]"
                ]
            }
        },
        "apply_standard_pip_upgrades": {
            "name": "apply_standard_pip_upgrades",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "install_latest_npm_in_ci": {
            "name": "install_latest_npm_in_ci",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "format": {
            "name": "format",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "example": {
            "name": "example",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "docs": {
            "name": "docs",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "docs_in_docker": {
            "name": "docs_in_docker",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_python": {
            "name": "test_python",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_javascript": {
            "name": "test_javascript",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_python_suite": {
            "name": "test_python_suite",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_python_types": {
            "name": "test_python_types",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_python_style": {
            "name": "test_python_style",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_python_build": {
            "name": "test_python_build",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_docs": {
            "name": "test_docs",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "setup_client_env": {
            "name": "setup_client_env",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_javascript_suite": {
            "name": "test_javascript_suite",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_javascript_build": {
            "name": "test_javascript_build",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "test_javascript_style": {
            "name": "test_javascript_style",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "build_js": {
            "name": "build_js",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "tag": {
            "name": "tag",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "changes_since_release": {
            "name": "changes_since_release",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        },
        "install_requirements_file": {
            "name": "install_requirements_file",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "install_idom_dev": {
            "name": "install_idom_dev",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "Session"
                ],
                "extras": [
                    "str"
                ]
            }
        },
        "get_version": {
            "name": "get_version",
            "location": 380,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "set_version": {
            "name": "set_version",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {
                "new": [
                    "str"
                ]
            }
        },
        "get_idom_script_env": {
            "name": "get_idom_script_env",
            "location": 388,
            "return": [
                "dict[(str, str)]"
            ],
            "arguments": {}
        },
        "do_first.setup": {
            "name": "setup",
            "location": 38,
            "return": [
                "Callable[([Session], _Return)]"
            ],
            "arguments": {
                "second_session_func": [
                    "Callable[([Session], _Return)]"
                ]
            }
        },
        "do_first.setup.wrapper": {
            "name": "wrapper",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "session": [
                    "Session"
                ]
            }
        }
    },
    "idom-main/setup.py": {
        "build_javascript_first": {
            "name": "build_javascript_first",
            "location": 145,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "list2cmdline": {
            "name": "list2cmdline",
            "location": 21,
            "return": [],
            "arguments": {
                "cmd_list": []
            }
        },
        "build_javascript_first.Command.run": {
            "name": "run",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/docs/app.py": {
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "Example": {
            "name": "Example",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "_get_examples": {
            "name": "_get_examples",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "reload_examples": {
            "name": "reload_examples",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "make_app": {
            "name": "make_app",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/examples.py": {
        "load_examples": {
            "name": "load_examples",
            "location": 18,
            "return": [
                "Iterator[tuple[(str, Callable[([], ComponentType)])]]"
            ],
            "arguments": {}
        },
        "all_example_names": {
            "name": "all_example_names",
            "location": 23,
            "return": [
                "set[str]"
            ],
            "arguments": {}
        },
        "load_one_example": {
            "name": "load_one_example",
            "location": 31,
            "return": [
                "Callable[([], ComponentType)]"
            ],
            "arguments": {
                "file_or_name": [
                    "(Path | str)"
                ]
            }
        },
        "get_normalized_example_name": {
            "name": "get_normalized_example_name",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "relative_to": [
                    "((str | Path) | None)"
                ]
            }
        },
        "get_main_example_file_by_name": {
            "name": "get_main_example_file_by_name",
            "location": 46,
            "return": [
                "Path"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "relative_to": [
                    "((str | Path) | None)"
                ]
            }
        },
        "get_example_files_by_name": {
            "name": "get_example_files_by_name",
            "location": 56,
            "return": [
                "list[Path]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "relative_to": [
                    "((str | Path) | None)"
                ]
            }
        },
        "_iter_example_files": {
            "name": "_iter_example_files",
            "location": 67,
            "return": [
                "Iterator[Path]"
            ],
            "arguments": {
                "root": [
                    "Path"
                ]
            }
        },
        "_load_one_example": {
            "name": "_load_one_example",
            "location": 76,
            "return": [
                "ComponentType"
            ],
            "arguments": {
                "file_or_name": [
                    "(Path | str)"
                ]
            }
        },
        "_get_root_example_path_by_name": {
            "name": "_get_root_example_path_by_name",
            "location": 130,
            "return": [
                "Path"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "relative_to": [
                    "((str | Path) | None)"
                ]
            }
        },
        "_make_example_did_not_run": {
            "name": "_make_example_did_not_run",
            "location": 161,
            "return": [],
            "arguments": {
                "example_name": []
            }
        },
        "_make_error_display": {
            "name": "_make_error_display",
            "location": 169,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "_load_one_example.capture_print": {
            "name": "capture_print",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "_load_one_example.capture_component": {
            "name": "capture_component",
            "location": 94,
            "return": [],
            "arguments": {
                "component_constructor": []
            }
        },
        "_load_one_example.Wrapper": {
            "name": "Wrapper",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "_load_one_example.PrintView": {
            "name": "PrintView",
            "location": 122,
            "return": [],
            "arguments": {}
        },
        "_PrintBuffer.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "max_lines": [
                    "int"
                ]
            }
        },
        "_PrintBuffer.set_callback": {
            "name": "set_callback",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable[([str], None)]"
                ]
            }
        },
        "_PrintBuffer.getvalue": {
            "name": "getvalue",
            "location": 149,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_PrintBuffer.write": {
            "name": "write",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "_make_example_did_not_run.ExampleDidNotRun": {
            "name": "ExampleDidNotRun",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "_make_error_display.ShowError": {
            "name": "ShowError",
            "location": 171,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/__init__.py": {},
    "idom-main/docs/source/conf.py": {},
    "idom-main/docs/source/guides/adding-interactivity/components-with-state/_examples/adding_state_variable/main.py": {
        "Gallery": {
            "name": "Gallery",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "Gallery.handle_click": {
            "name": "handle_click",
            "location": 16,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/components-with-state/_examples/isolated_state/main.py": {
        "Gallery": {
            "name": "Gallery",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "App": {
            "name": "App",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "Gallery.handle_next_click": {
            "name": "handle_next_click",
            "location": 17,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Gallery.handle_more_click": {
            "name": "handle_more_click",
            "location": 20,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/components-with-state/_examples/multiple_state_variables/main.py": {
        "Gallery": {
            "name": "Gallery",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "Gallery.handle_next_click": {
            "name": "handle_next_click",
            "location": 17,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Gallery.handle_more_click": {
            "name": "handle_more_click",
            "location": 20,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/components-with-state/_examples/when_variables_are_not_enough/main.py": {
        "Gallery": {
            "name": "Gallery",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "Gallery.handle_click": {
            "name": "handle_click",
            "location": 22,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/dict_remove.py": {
        "Definitions": {
            "name": "Definitions",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Definitions.handle_term_to_add_change": {
            "name": "handle_term_to_add_change",
            "location": 10,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Definitions.handle_definition_to_add_change": {
            "name": "handle_definition_to_add_change",
            "location": 13,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Definitions.handle_add_click": {
            "name": "handle_add_click",
            "location": 16,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Definitions.make_delete_click_handler": {
            "name": "make_delete_click_handler",
            "location": 22,
            "return": [],
            "arguments": {
                "term_to_delete": []
            }
        },
        "Definitions.make_delete_click_handler.handle_click": {
            "name": "handle_click",
            "location": 23,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/dict_update.py": {
        "Form": {
            "name": "Form",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Form.handle_first_name_change": {
            "name": "handle_first_name_change",
            "location": 14,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Form.handle_last_name_change": {
            "name": "handle_last_name_change",
            "location": 17,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "Form.handle_email_change": {
            "name": "handle_email_change",
            "location": 20,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/list_insert.py": {
        "ArtistList": {
            "name": "ArtistList",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "ArtistList.handle_change": {
            "name": "handle_change",
            "location": 9,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "ArtistList.handle_click": {
            "name": "handle_click",
            "location": 12,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/list_remove.py": {
        "ArtistList": {
            "name": "ArtistList",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "ArtistList.handle_change": {
            "name": "handle_change",
            "location": 11,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "ArtistList.handle_add_click": {
            "name": "handle_add_click",
            "location": 14,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "ArtistList.make_handle_delete_click": {
            "name": "make_handle_delete_click",
            "location": 19,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "ArtistList.make_handle_delete_click.handle_click": {
            "name": "handle_click",
            "location": 20,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/list_replace.py": {
        "CounterList": {
            "name": "CounterList",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "CounterList.make_increment_click_handler": {
            "name": "make_increment_click_handler",
            "location": 8,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "CounterList.make_increment_click_handler.handle_click": {
            "name": "handle_click",
            "location": 9,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/list_re_order.py": {
        "ArtistList": {
            "name": "ArtistList",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "ArtistList.handle_sort_click": {
            "name": "handle_sort_click",
            "location": 10,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "ArtistList.handle_reverse_click": {
            "name": "handle_reverse_click",
            "location": 13,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/moving_dot.py": {
        "MovingDot": {
            "name": "MovingDot",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/moving_dot_broken.py": {
        "MovingDot": {
            "name": "MovingDot",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "MovingDot.handle_pointer_move": {
            "name": "handle_pointer_move",
            "location": 10,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/set_remove.py": {
        "Grid": {
            "name": "Grid",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Grid.make_handle_click": {
            "name": "make_handle_click",
            "location": 9,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "Grid.make_handle_click.handle_click": {
            "name": "handle_click",
            "location": 10,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/dangers-of-mutability/_examples/set_update.py": {
        "Grid": {
            "name": "Grid",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Grid.make_handle_click": {
            "name": "make_handle_click",
            "location": 9,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "Grid.make_handle_click.handle_click": {
            "name": "handle_click",
            "location": 10,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/multiple-state-updates/_examples/delay_before_count_updater.py": {
        "Counter": {
            "name": "Counter",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/multiple-state-updates/_examples/delay_before_set_count.py": {
        "Counter": {
            "name": "Counter",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/multiple-state-updates/_examples/set_color_3_times.py": {
        "ColorButton": {
            "name": "ColorButton",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "ColorButton.handle_click": {
            "name": "handle_click",
            "location": 8,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "ColorButton.handle_reset": {
            "name": "handle_reset",
            "location": 13,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/multiple-state-updates/_examples/set_state_function.py": {
        "increment": {
            "name": "increment",
            "location": 4,
            "return": [],
            "arguments": {
                "old_number": []
            }
        },
        "Counter": {
            "name": "Counter",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "Counter.handle_click": {
            "name": "handle_click",
            "location": 13,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/audio_player.py": {
        "PlayDinosaurSound": {
            "name": "PlayDinosaurSound",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/button_async_handlers.py": {
        "ButtonWithDelay": {
            "name": "ButtonWithDelay",
            "location": 7,
            "return": [],
            "arguments": {
                "message": [],
                "delay": []
            }
        },
        "App": {
            "name": "App",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/button_does_nothing.py": {
        "Button": {
            "name": "Button",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/button_handler_as_arg.py": {
        "Button": {
            "name": "Button",
            "location": 5,
            "return": [],
            "arguments": {
                "display_text": [],
                "on_click": []
            }
        },
        "PlayButton": {
            "name": "PlayButton",
            "location": 10,
            "return": [],
            "arguments": {
                "movie_name": []
            }
        },
        "FastForwardButton": {
            "name": "FastForwardButton",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "App": {
            "name": "App",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "PlayButton.handle_click": {
            "name": "handle_click",
            "location": 11,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "FastForwardButton.handle_click": {
            "name": "handle_click",
            "location": 19,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/button_prints_event.py": {
        "Button": {
            "name": "Button",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Button.handle_event": {
            "name": "handle_event",
            "location": 6,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/button_prints_message.py": {
        "PrintButton": {
            "name": "PrintButton",
            "location": 5,
            "return": [],
            "arguments": {
                "display_text": [],
                "message_text": []
            }
        },
        "App": {
            "name": "App",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "PrintButton.handle_event": {
            "name": "handle_event",
            "location": 6,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/prevent_default_event_actions.py": {
        "DoNotChangePages": {
            "name": "DoNotChangePages",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/responding-to-events/_examples/stop_event_propagation.py": {
        "DivInDiv": {
            "name": "DivInDiv",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/state-as-a-snapshot/_examples/delayed_print_after_set.py": {
        "Counter": {
            "name": "Counter",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/state-as-a-snapshot/_examples/print_chat_message.py": {
        "App": {
            "name": "App",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/state-as-a-snapshot/_examples/print_count_after_set.py": {
        "Counter": {
            "name": "Counter",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Counter.handle_click": {
            "name": "handle_click",
            "location": 8,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/state-as-a-snapshot/_examples/send_message.py": {
        "App": {
            "name": "App",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "App.handle_submit": {
            "name": "handle_submit",
            "location": 18,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/adding-interactivity/state-as-a-snapshot/_examples/set_counter_3_times.py": {
        "Counter": {
            "name": "Counter",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Counter.handle_click": {
            "name": "handle_click",
            "location": 8,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/rendering-data/_examples/sorted_and_filtered_todo_list.py": {
        "DataList": {
            "name": "DataList",
            "location": 5,
            "return": [],
            "arguments": {
                "items": [],
                "filter_by_priority": [],
                "sort_by_priority": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/rendering-data/_examples/todo_from_list.py": {
        "DataList": {
            "name": "DataList",
            "location": 5,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/rendering-data/_examples/todo_list_with_keys.py": {
        "DataList": {
            "name": "DataList",
            "location": 5,
            "return": [],
            "arguments": {
                "items": [],
                "filter_by_priority": [],
                "sort_by_priority": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/bad_conditional_todo_list.py": {
        "Item": {
            "name": "Item",
            "location": 5,
            "return": [],
            "arguments": {
                "name": [],
                "done": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/good_conditional_todo_list.py": {
        "Item": {
            "name": "Item",
            "location": 5,
            "return": [],
            "arguments": {
                "name": [],
                "done": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/nested_photos.py": {
        "Photo": {
            "name": "Photo",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Gallery": {
            "name": "Gallery",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/parametrized_photos.py": {
        "Photo": {
            "name": "Photo",
            "location": 5,
            "return": [],
            "arguments": {
                "alt_text": [],
                "image_id": []
            }
        },
        "Gallery": {
            "name": "Gallery",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/simple_photo.py": {
        "Photo": {
            "name": "Photo",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/todo_list.py": {
        "Item": {
            "name": "Item",
            "location": 5,
            "return": [],
            "arguments": {
                "name": [],
                "done": []
            }
        },
        "TodoList": {
            "name": "TodoList",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/wrap_in_div.py": {
        "MyTodoList": {
            "name": "MyTodoList",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/creating-interfaces/your-first-components/_examples/wrap_in_fragment.py": {
        "MyTodoList": {
            "name": "MyTodoList",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/escape-hatches/_examples/material_ui_button_no_action.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/escape-hatches/_examples/material_ui_button_on_click.py": {
        "ViewButtonEvents": {
            "name": "ViewButtonEvents",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/escape-hatches/_examples/super_simple_chart/main.py": {
        "App": {
            "name": "App",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/debug_error_example.py": {
        "App": {
            "name": "App",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "GoodComponent": {
            "name": "GoodComponent",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "BadComponent": {
            "name": "BadComponent",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/hello_world.py": {
        "App": {
            "name": "App",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/run_fastapi.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/run_flask.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/run_sanic.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/run_starlette.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/run_tornado.py": {
        "HelloWorld": {
            "name": "HelloWorld",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "make_app": {
            "name": "make_app",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/getting-started/_examples/sample_app.py": {},
    "idom-main/docs/source/guides/getting-started/_static/embed-idom-view/main.py": {
        "IdomView": {
            "name": "IdomView",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/guides/managing-state/sharing-component-state/_examples/filterable_list/main.py": {
        "FilterableList": {
            "name": "FilterableList",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "Search": {
            "name": "Search",
            "location": 19,
            "return": [],
            "arguments": {
                "value": [],
                "set_value": []
            }
        },
        "Table": {
            "name": "Table",
            "location": 29,
            "return": [],
            "arguments": {
                "value": [],
                "set_value": []
            }
        },
        "Search.handle_change": {
            "name": "handle_change",
            "location": 20,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/guides/managing-state/sharing-component-state/_examples/synced_inputs/main.py": {
        "SyncedInputs": {
            "name": "SyncedInputs",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Input": {
            "name": "Input",
            "location": 14,
            "return": [],
            "arguments": {
                "label": [],
                "value": [],
                "set_value": []
            }
        },
        "Input.handle_change": {
            "name": "handle_change",
            "location": 15,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/click_count.py": {
        "ClickCount": {
            "name": "ClickCount",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/material_ui_switch.py": {
        "DayNightSwitch": {
            "name": "DayNightSwitch",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/matplotlib_plot.py": {
        "PolynomialPlot": {
            "name": "PolynomialPlot",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "ExpandableNumberInputs": {
            "name": "ExpandableNumberInputs",
            "location": 23,
            "return": [],
            "arguments": {
                "values": [],
                "set_values": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 49,
            "return": [],
            "arguments": {
                "title": [],
                "x": [],
                "y": []
            }
        },
        "poly_coef_input": {
            "name": "poly_coef_input",
            "location": 59,
            "return": [],
            "arguments": {
                "index": [],
                "callback": []
            }
        },
        "polynomial": {
            "name": "polynomial",
            "location": 78,
            "return": [],
            "arguments": {
                "x": [],
                "coefficients": []
            }
        },
        "linspace": {
            "name": "linspace",
            "location": 82,
            "return": [],
            "arguments": {
                "start": [],
                "stop": [],
                "n": []
            }
        },
        "ExpandableNumberInputs.add_input": {
            "name": "add_input",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "ExpandableNumberInputs.del_input": {
            "name": "del_input",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "ExpandableNumberInputs.set_value_at_index": {
            "name": "set_value_at_index",
            "location": 27,
            "return": [],
            "arguments": {
                "event": [],
                "index": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/network_graph.py": {
        "RandomNetworkGraph": {
            "name": "RandomNetworkGraph",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "random_network": {
            "name": "random_network",
            "location": 25,
            "return": [],
            "arguments": {
                "number_of_nodes": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/pigeon_maps.py": {
        "MapWithMarkers": {
            "name": "MapWithMarkers",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "use_set": {
            "name": "use_set",
            "location": 37,
            "return": [],
            "arguments": {
                "initial_value": []
            }
        },
        "use_set.add_value": {
            "name": "add_value",
            "location": 40,
            "return": [],
            "arguments": {
                "lat_lon": []
            }
        },
        "use_set.remove_value": {
            "name": "remove_value",
            "location": 43,
            "return": [],
            "arguments": {
                "lat_lon": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/simple_dashboard.py": {
        "RandomWalk": {
            "name": "RandomWalk",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "RandomWalkGraph": {
            "name": "RandomWalkGraph",
            "location": 49,
            "return": [],
            "arguments": {
                "mu": [],
                "sigma": []
            }
        },
        "NumberInput": {
            "name": "NumberInput",
            "location": 75,
            "return": [],
            "arguments": {
                "label": [],
                "value": [],
                "set_value_callback": [],
                "domain": []
            }
        },
        "use_interval": {
            "name": "use_interval",
            "location": 93,
            "return": [],
            "arguments": {
                "rate": []
            }
        },
        "NumberInput.update_value": {
            "name": "update_value",
            "location": 81,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/slideshow.py": {
        "Slideshow": {
            "name": "Slideshow",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "Slideshow.next_image": {
            "name": "next_image",
            "location": 8,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/docs/source/reference/_examples/snake_game.py": {
        "GameView": {
            "name": "GameView",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "GameLoop": {
            "name": "GameLoop",
            "location": 54,
            "return": [],
            "arguments": {
                "grid_size": [],
                "block_scale": [],
                "set_game_state": []
            }
        },
        "use_snake_food": {
            "name": "use_snake_food",
            "location": 118,
            "return": [],
            "arguments": {
                "grid_size": [],
                "current_snake": []
            }
        },
        "use_interval": {
            "name": "use_interval",
            "location": 130,
            "return": [],
            "arguments": {
                "rate": []
            }
        },
        "create_grid": {
            "name": "create_grid",
            "location": 140,
            "return": [],
            "arguments": {
                "grid_size": [],
                "block_scale": []
            }
        },
        "create_grid_block": {
            "name": "create_grid_block",
            "location": 168,
            "return": [],
            "arguments": {
                "color": [],
                "block_scale": [],
                "key": []
            }
        },
        "assign_grid_block_color": {
            "name": "assign_grid_block_color",
            "location": 182,
            "return": [],
            "arguments": {
                "grid": [],
                "point": [],
                "color": []
            }
        },
        "GameLoop.on_direction_change": {
            "name": "on_direction_change",
            "location": 66,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "use_snake_food.set_food": {
            "name": "set_food",
            "location": 124,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/todo.py": {
        "Todo": {
            "name": "Todo",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/use_reducer_counter.py": {
        "reducer": {
            "name": "reducer",
            "location": 4,
            "return": [],
            "arguments": {
                "count": [],
                "action": []
            }
        },
        "Counter": {
            "name": "Counter",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/use_state_counter.py": {
        "increment": {
            "name": "increment",
            "location": 4,
            "return": [],
            "arguments": {
                "last_count": []
            }
        },
        "decrement": {
            "name": "decrement",
            "location": 8,
            "return": [],
            "arguments": {
                "last_count": []
            }
        },
        "Counter": {
            "name": "Counter",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/reference/_examples/victory_chart.py": {},
    "idom-main/docs/source/reference/_examples/character_movement/main.py": {
        "rotate": {
            "name": "rotate",
            "location": 18,
            "return": [],
            "arguments": {
                "degrees": []
            }
        },
        "translate": {
            "name": "translate",
            "location": 26,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "Scene": {
            "name": "Scene",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/docs/source/_exts/async_doctest.py": {
        "setup": {
            "name": "setup",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        },
        "TestRunnerWrapper.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "runner": [
                    "DocTestRunner"
                ]
            }
        },
        "TestRunnerWrapper.__getattr__": {
            "name": "__getattr__",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "TestRunnerWrapper.run": {
            "name": "run",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "DocTest"
                ]
            }
        },
        "AsyncDoctestBuilder.test_runner": {
            "name": "test_runner",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "DocTestRunner"
                ]
            }
        }
    },
    "idom-main/docs/source/_exts/autogen_api_docs.py": {
        "generate_api_docs": {
            "name": "generate_api_docs",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "make_package_section": {
            "name": "make_package_section",
            "location": 53,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "Path"
                ]
            }
        },
        "make_module_section": {
            "name": "make_module_section",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "Path"
                ]
            }
        },
        "get_module_name": {
            "name": "get_module_name",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "Path"
                ]
            }
        },
        "get_section_symbol": {
            "name": "get_section_symbol",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "Path"
                ]
            }
        },
        "walk_python_files": {
            "name": "walk_python_files",
            "location": 90,
            "return": [
                "Iterator[Path]"
            ],
            "arguments": {
                "root": [
                    "Path"
                ],
                "ignore_dirs": [
                    "Collection[str]"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        }
    },
    "idom-main/docs/source/_exts/build_custom_js.py": {
        "setup": {
            "name": "setup",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        }
    },
    "idom-main/docs/source/_exts/copy_vdom_json_schema.py": {
        "setup": {
            "name": "setup",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        }
    },
    "idom-main/docs/source/_exts/custom_autosectionlabel.py": {
        "get_node_depth": {
            "name": "get_node_depth",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "node": [
                    "Node"
                ]
            }
        },
        "register_sections_as_label": {
            "name": "register_sections_as_label",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ],
                "document": [
                    "Node"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 70,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        }
    },
    "idom-main/docs/source/_exts/idom_example.py": {
        "_make_tab_items": {
            "name": "_make_tab_items",
            "location": 100,
            "return": [],
            "arguments": {
                "labeled_content_tuples": []
            }
        },
        "_literal_include": {
            "name": "_literal_include",
            "location": 110,
            "return": [],
            "arguments": {
                "path": [
                    "Path"
                ],
                "linenos": [
                    "bool"
                ]
            }
        },
        "_join_options": {
            "name": "_join_options",
            "location": 127,
            "return": [
                "str"
            ],
            "arguments": {
                "option_strings": [
                    "list[str]"
                ]
            }
        },
        "_get_file_options": {
            "name": "_get_file_options",
            "location": 134,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "file": [
                    "Path"
                ]
            }
        },
        "_interactive_widget": {
            "name": "_interactive_widget",
            "location": 151,
            "return": [],
            "arguments": {
                "name": [],
                "with_activate_button": []
            }
        },
        "_string_to_nested_lines": {
            "name": "_string_to_nested_lines",
            "location": 178,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        },
        "WidgetExample.run": {
            "name": "run",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/docs/source/_exts/idom_view.py": {
        "setup": {
            "name": "setup",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sphinx"
                ]
            }
        },
        "IteractiveWidget.run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/docs/source/_exts/patched_html_translator.py": {
        "setup": {
            "name": "setup",
            "location": 23,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "PatchedHTMLTranslator.starttag": {
            "name": "starttag",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "tagname": []
            }
        }
    },
    "idom-main/scripts/changes_since_release.py": {
        "show_issues": {
            "name": "show_issues",
            "location": 33,
            "return": [],
            "arguments": {
                "format": [
                    "str"
                ]
            }
        },
        "show_pull_requests": {
            "name": "show_pull_requests",
            "location": 41,
            "return": [],
            "arguments": {
                "format": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [],
            "arguments": {
                "format": [
                    "str"
                ]
            }
        }
    },
    "idom-main/scripts/live_docs.py": {
        "wrap_builder": {
            "name": "wrap_builder",
            "location": 28,
            "return": [],
            "arguments": {
                "old_builder": []
            }
        },
        "main": {
            "name": "main",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "wrap_builder.run_in_thread": {
            "name": "run_in_thread",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "wrap_builder.new_builder": {
            "name": "new_builder",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "main.opener": {
            "name": "opener",
            "location": 101,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/scripts/one_example.py": {
        "on_file_change": {
            "name": "on_file_change",
            "location": 15,
            "return": [],
            "arguments": {
                "path": [],
                "callback": []
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "_example_name_input": {
            "name": "_example_name_input",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_print_error": {
            "name": "_print_error",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_print_available_options": {
            "name": "_print_available_options",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "on_file_change.watch_for_change": {
            "name": "watch_for_change",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "main.update_component": {
            "name": "update_component",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/scripts/run_docs.py": {},
    "idom-main/scripts/update_versions.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "update_py_version": {
            "name": "update_py_version",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "str"
                ]
            }
        },
        "update_js_versions": {
            "name": "update_js_versions",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "str"
                ]
            }
        },
        "update_changelog_version": {
            "name": "update_changelog_version",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "str"
                ]
            }
        }
    },
    "idom-main/scripts/common/github_utils.py": {
        "last_release_date": {
            "name": "last_release_date",
            "location": 13,
            "return": [
                "datetime"
            ],
            "arguments": {}
        },
        "date_range_query": {
            "name": "date_range_query",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "start": [
                    "Optional[datetime]"
                ],
                "stop": [
                    "Optional[datetime]"
                ]
            }
        },
        "search_idom_repo": {
            "name": "search_idom_repo",
            "location": 33,
            "return": [
                "Iterator[Any]"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        }
    },
    "idom-main/scripts/common/__init__.py": {},
    "idom-main/src/idom/config.py": {},
    "idom-main/src/idom/html.py": {
        "_": {
            "name": "_",
            "location": 167,
            "return": [
                "VdomDict"
            ],
            "arguments": {}
        },
        "script": {
            "name": "script",
            "location": 279,
            "return": [
                "VdomDict"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/logging.py": {},
    "idom-main/src/idom/sample.py": {
        "SampleApp": {
            "name": "SampleApp",
            "location": 9,
            "return": [
                "VdomDict"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/types.py": {},
    "idom-main/src/idom/utils.py": {
        "html_to_vdom": {
            "name": "html_to_vdom",
            "location": 55,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "source": [
                    "str"
                ]
            }
        },
        "Ref.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_value": [
                    "_RefValue@@"
                ]
            }
        },
        "Ref.set_current": {
            "name": "set_current",
            "location": 27,
            "return": [
                "_RefValue@@"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "_RefValue@@"
                ]
            }
        },
        "Ref.__eq__": {
            "name": "__eq__",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Ref.__repr__": {
            "name": "__repr__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HtmlParser.model": {
            "name": "model",
            "location": 105,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HtmlParser.feed": {
            "name": "feed",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str"
                ]
            }
        },
        "HtmlParser.reset": {
            "name": "reset",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HtmlParser.handle_starttag": {
            "name": "handle_starttag",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "attrs": [
                    "List[Tuple[(str, Optional[str])]]"
                ]
            }
        },
        "HtmlParser.handle_endtag": {
            "name": "handle_endtag",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ]
            }
        },
        "HtmlParser.handle_data": {
            "name": "handle_data",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str"
                ]
            }
        },
        "HtmlParser._make_vdom": {
            "name": "_make_vdom",
            "location": 132,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "tag": [
                    "str"
                ],
                "attrs": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "idom-main/src/idom/widgets.py": {
        "image": {
            "name": "image",
            "location": 28,
            "return": [
                "VdomDict"
            ],
            "arguments": {
                "format": [
                    "str"
                ],
                "value": [
                    "Union[(str, bytes)]"
                ],
                "attributes": [
                    "Optional[Dict[(str, Any)]]"
                ]
            }
        },
        "use_linked_inputs": {
            "name": "use_linked_inputs",
            "location": 54,
            "return": [
                "List[VdomDict]"
            ],
            "arguments": {
                "attributes": [
                    "Sequence[Dict[(str, Any)]]"
                ],
                "on_change": [
                    "Callable[([_Value], None)]"
                ],
                "cast": [
                    "_CastFunc[_Value]"
                ],
                "initial_value": [
                    "str"
                ],
                "ignore_empty": [
                    "bool"
                ]
            }
        },
        "hotswap": {
            "name": "hotswap",
            "location": 113,
            "return": [
                "Tuple[(MountFunc, ComponentConstructor)]"
            ],
            "arguments": {
                "update_on_change": [
                    "bool"
                ]
            }
        },
        "_use_callable": {
            "name": "_use_callable",
            "location": 189,
            "return": [
                "Tuple[(_Func, Callable[([_Func], None)])]"
            ],
            "arguments": {
                "initial_func": [
                    "_Func"
                ]
            }
        },
        "use_linked_inputs.sync_inputs": {
            "name": "sync_inputs",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "_CastFunc.__call__": {
            "name": "__call__",
            "location": 106,
            "return": [
                "_CastTo@@"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "hotswap.HotSwap": {
            "name": "HotSwap",
            "location": 176,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "hotswap.swap": {
            "name": "swap",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "constructor": [
                    "(Callable[([], Any)] | None)"
                ]
            }
        },
        "hotswap.HotSwap.add_callback": {
            "name": "add_callback",
            "location": 157,
            "return": [
                "Callable[([], None)]"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/_option.py": {
        "Option.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "default": [
                    "_O@@"
                ],
                "mutable": [
                    "bool"
                ],
                "validator": [
                    "Callable[([Any], _O)]"
                ]
            }
        },
        "Option.name": {
            "name": "name",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.mutable": {
            "name": "mutable",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.default": {
            "name": "default",
            "location": 42,
            "return": [
                "_O@@"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.current": {
            "name": "current",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "_O@@"
                ]
            }
        },
        "Option.is_set": {
            "name": "is_set",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.set_current": {
            "name": "set_current",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "Any"
                ]
            }
        },
        "Option.set_default": {
            "name": "set_default",
            "location": 72,
            "return": [
                "_O@@"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "_O@@"
                ]
            }
        },
        "Option.reload": {
            "name": "reload",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.unset": {
            "name": "unset",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Option.__repr__": {
            "name": "__repr__",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeprecatedOption.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_opt": [
                    "Option[_O]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "DeprecatedOption._current": {
            "name": "_current",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "_O@@"
                ]
            }
        }
    },
    "idom-main/src/idom/__init__.py": {},
    "idom-main/src/idom/backend/default.py": {
        "configure": {
            "name": "configure",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Any"
                ],
                "component": [
                    "RootComponentConstructor"
                ],
                "options": [
                    "None"
                ]
            }
        },
        "create_development_app": {
            "name": "create_development_app",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "use_scope": {
            "name": "use_scope",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "use_location": {
            "name": "use_location",
            "location": 43,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "_default_implementation": {
            "name": "_default_implementation",
            "location": 51,
            "return": [
                "BackendImplementation[Any]"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/backend/fastapi.py": {
        "create_development_app": {
            "name": "create_development_app",
            "location": 30,
            "return": [
                "FastAPI"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/backend/flask.py": {
        "configure": {
            "name": "configure",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Flask"
                ],
                "component": [
                    "RootComponentConstructor"
                ],
                "options": [
                    "(Options | None)"
                ]
            }
        },
        "create_development_app": {
            "name": "create_development_app",
            "location": 66,
            "return": [
                "Flask"
            ],
            "arguments": {}
        },
        "use_location": {
            "name": "use_location",
            "location": 112,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "use_scope": {
            "name": "use_scope",
            "location": 119,
            "return": [
                "dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "use_request": {
            "name": "use_request",
            "location": 124,
            "return": [
                "Request"
            ],
            "arguments": {}
        },
        "use_connection": {
            "name": "use_connection",
            "location": 129,
            "return": [
                "Connection"
            ],
            "arguments": {}
        },
        "_setup_common_routes": {
            "name": "_setup_common_routes",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "blueprint": [
                    "Blueprint"
                ],
                "options": [
                    "Options"
                ]
            }
        },
        "_setup_single_view_dispatcher_route": {
            "name": "_setup_single_view_dispatcher_route",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "blueprint": [
                    "Blueprint"
                ],
                "options": [
                    "Options"
                ],
                "constructor": [
                    "RootComponentConstructor"
                ]
            }
        },
        "_dispatch_in_thread": {
            "name": "_dispatch_in_thread",
            "location": 210,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "websocket": [
                    "WebSocket"
                ],
                "path": [
                    "str"
                ],
                "component": [
                    "ComponentType"
                ],
                "send": [
                    "Callable[([Any], None)]"
                ],
                "recv": [
                    "Callable[([], Optional[LayoutEvent])]"
                ]
            }
        },
        "serve_development_app.run_server": {
            "name": "run_server",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_setup_single_view_dispatcher_route.model_stream": {
            "name": "model_stream",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "ws": [
                    "WebSocket"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "_dispatch_in_thread.run_dispatcher": {
            "name": "run_dispatcher",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_dispatch_in_thread.run_send": {
            "name": "run_send",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_setup_common_routes.send_client_dir": {
            "name": "send_client_dir",
            "location": 180,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "_setup_common_routes.send_modules_dir": {
            "name": "send_modules_dir",
            "location": 185,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "_": [
                    "str"
                ]
            }
        },
        "_setup_single_view_dispatcher_route.model_stream.send": {
            "name": "send",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [
                    "Any"
                ]
            }
        },
        "_setup_single_view_dispatcher_route.model_stream.recv": {
            "name": "recv",
            "location": 201,
            "return": [
                "LayoutEvent"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/backend/sanic.py": {
        "configure": {
            "name": "configure",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Sanic"
                ],
                "component": [
                    "RootComponentConstructor"
                ],
                "options": [
                    "(Options | None)"
                ]
            }
        },
        "create_development_app": {
            "name": "create_development_app",
            "location": 55,
            "return": [
                "Sanic"
            ],
            "arguments": {}
        },
        "use_location": {
            "name": "use_location",
            "location": 70,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "use_scope": {
            "name": "use_scope",
            "location": 77,
            "return": [
                "ASGIScope"
            ],
            "arguments": {}
        },
        "use_request": {
            "name": "use_request",
            "location": 87,
            "return": [
                "request.Request"
            ],
            "arguments": {}
        },
        "use_connection": {
            "name": "use_connection",
            "location": 92,
            "return": [
                "Connection"
            ],
            "arguments": {}
        },
        "_setup_common_routes": {
            "name": "_setup_common_routes",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "blueprint": [
                    "Blueprint"
                ],
                "options": [
                    "Options"
                ]
            }
        },
        "_setup_single_view_dispatcher_route": {
            "name": "_setup_single_view_dispatcher_route",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "blueprint": [
                    "Blueprint"
                ],
                "constructor": [
                    "RootComponentConstructor"
                ]
            }
        },
        "_make_send_recv_callbacks": {
            "name": "_make_send_recv_callbacks",
            "location": 184,
            "return": [
                "Tuple[(SendCoroutine, RecvCoroutine)]"
            ],
            "arguments": {
                "socket": [
                    "WebSocketCommonProtocol"
                ]
            }
        }
    },
    "idom-main/src/idom/backend/starlette.py": {
        "configure": {
            "name": "configure",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Starlette"
                ],
                "constructor": [
                    "RootComponentConstructor"
                ],
                "options": [
                    "(Options | None)"
                ]
            }
        },
        "create_development_app": {
            "name": "create_development_app",
            "location": 58,
            "return": [
                "Starlette"
            ],
            "arguments": {}
        },
        "use_location": {
            "name": "use_location",
            "location": 73,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "use_scope": {
            "name": "use_scope",
            "location": 81,
            "return": [
                "Scope"
            ],
            "arguments": {}
        },
        "use_websocket": {
            "name": "use_websocket",
            "location": 86,
            "return": [
                "WebSocket"
            ],
            "arguments": {}
        },
        "_setup_common_routes": {
            "name": "_setup_common_routes",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "options": [
                    "Options"
                ],
                "app": [
                    "Starlette"
                ]
            }
        },
        "single_page_app_files": {
            "name": "single_page_app_files",
            "location": 135,
            "return": [
                "Callable[(..., Awaitable[None])]"
            ],
            "arguments": {}
        },
        "_setup_single_view_dispatcher_route": {
            "name": "_setup_single_view_dispatcher_route",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "options": [
                    "Options"
                ],
                "app": [
                    "Starlette"
                ],
                "constructor": [
                    "RootComponentConstructor"
                ]
            }
        },
        "_make_send_recv_callbacks": {
            "name": "_make_send_recv_callbacks",
            "location": 169,
            "return": [
                "Tuple[(SendCoroutine, RecvCoroutine)]"
            ],
            "arguments": {
                "socket": [
                    "WebSocket"
                ]
            }
        }
    },
    "idom-main/src/idom/backend/tornado.py": {
        "configure": {
            "name": "configure",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Application"
                ],
                "component": [
                    "ComponentConstructor"
                ],
                "options": [
                    "(Options | None)"
                ]
            }
        },
        "create_development_app": {
            "name": "create_development_app",
            "location": 58,
            "return": [
                "Application"
            ],
            "arguments": {}
        },
        "use_location": {
            "name": "use_location",
            "location": 90,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "use_scope": {
            "name": "use_scope",
            "location": 97,
            "return": [
                "dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "use_request": {
            "name": "use_request",
            "location": 102,
            "return": [
                "HTTPServerRequest"
            ],
            "arguments": {}
        },
        "use_connection": {
            "name": "use_connection",
            "location": 107,
            "return": [
                "Connection"
            ],
            "arguments": {}
        },
        "_setup_common_routes": {
            "name": "_setup_common_routes",
            "location": 141,
            "return": [
                "_RouteHandlerSpecs"
            ],
            "arguments": {
                "options": [
                    "Options"
                ]
            }
        },
        "_add_handler": {
            "name": "_add_handler",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Application"
                ],
                "options": [
                    "Options"
                ],
                "handlers": [
                    "_RouteHandlerSpecs"
                ]
            }
        },
        "_setup_single_view_dispatcher_route": {
            "name": "_setup_single_view_dispatcher_route",
            "location": 175,
            "return": [
                "_RouteHandlerSpecs"
            ],
            "arguments": {
                "constructor": [
                    "ComponentConstructor"
                ]
            }
        },
        "ModelStreamHandler.initialize": {
            "name": "initialize",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "component_constructor": [
                    "ComponentConstructor"
                ]
            }
        },
        "ModelStreamHandler.on_close": {
            "name": "on_close",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/backend/types.py": {
        "BackendImplementation.configure": {
            "name": "configure",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "_App@@"
                ],
                "component": [
                    "RootComponentConstructor"
                ],
                "options": [
                    "(Any | None)"
                ]
            }
        },
        "BackendImplementation.create_development_app": {
            "name": "create_development_app",
            "location": 27,
            "return": [
                "_App@@"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackendImplementation.use_scope": {
            "name": "use_scope",
            "location": 39,
            "return": [
                "MutableMapping[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackendImplementation.use_location": {
            "name": "use_location",
            "location": 42,
            "return": [
                "Location"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/backend/utils.py": {
        "run": {
            "name": "run",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "component": [
                    "RootComponentConstructor"
                ],
                "host": [
                    "str"
                ],
                "port": [
                    "(int | None)"
                ],
                "implementation": [
                    "(BackendImplementation[Any] | None)"
                ]
            }
        },
        "safe_client_build_dir_path": {
            "name": "safe_client_build_dir_path",
            "location": 61,
            "return": [
                "Path"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "safe_web_modules_dir_path": {
            "name": "safe_web_modules_dir_path",
            "location": 69,
            "return": [
                "Path"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "traversal_safe_path": {
            "name": "traversal_safe_path",
            "location": 74,
            "return": [
                "Path"
            ],
            "arguments": {
                "root": [
                    "(str | Path)"
                ]
            }
        },
        "find_available_port": {
            "name": "find_available_port",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "host": [
                    "str"
                ],
                "port_min": [
                    "int"
                ],
                "port_max": [
                    "int"
                ],
                "allow_reuse_waiting_ports": [
                    "bool"
                ]
            }
        },
        "all_implementations": {
            "name": "all_implementations",
            "location": 116,
            "return": [
                "Iterator[BackendImplementation[Any]]"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/backend/_asgi.py": {},
    "idom-main/src/idom/backend/__init__.py": {},
    "idom-main/src/idom/core/component.py": {
        "component": {
            "name": "component",
            "location": 10,
            "return": [
                "Callable[(..., Component)]"
            ],
            "arguments": {
                "function": [
                    "Callable[(..., Union[(ComponentType, (VdomDict | None))])]"
                ]
            }
        },
        "component.constructor": {
            "name": "constructor",
            "location": 29,
            "return": [
                "Component"
            ],
            "arguments": {}
        },
        "Component.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable[(..., ((ComponentType | VdomDict) | None))]"
                ],
                "key": [
                    "Optional[Any]"
                ],
                "args": [
                    "Tuple[(Any, ...)]"
                ],
                "kwargs": [
                    "Dict[(str, Any)]"
                ],
                "sig": [
                    "inspect.Signature"
                ]
            }
        },
        "Component.render": {
            "name": "render",
            "location": 54,
            "return": [
                "((VdomDict | ComponentType) | None)"
            ],
            "arguments": {
                "self": []
            }
        },
        "Component.should_render": {
            "name": "should_render",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "Component"
                ]
            }
        },
        "Component.__repr__": {
            "name": "__repr__",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/core/events.py": {
        "event": {
            "name": "event",
            "location": 32,
            "return": [
                "(EventHandler | Callable[([Callable[(..., Any)]], EventHandler)])"
            ],
            "arguments": {
                "function": [
                    "(Callable[(..., Any)] | None)"
                ]
            }
        },
        "to_event_handler_function": {
            "name": "to_event_handler_function",
            "location": 133,
            "return": [
                "EventHandlerFunc"
            ],
            "arguments": {
                "function": [
                    "Callable[(..., Any)]"
                ],
                "positional_args": [
                    "bool"
                ]
            }
        },
        "merge_event_handlers": {
            "name": "merge_event_handlers",
            "location": 167,
            "return": [
                "EventHandlerType"
            ],
            "arguments": {
                "event_handlers": [
                    "Sequence[EventHandlerType]"
                ]
            }
        },
        "merge_event_handler_funcs": {
            "name": "merge_event_handler_funcs",
            "location": 206,
            "return": [
                "EventHandlerFunc"
            ],
            "arguments": {
                "functions": [
                    "Sequence[EventHandlerFunc]"
                ]
            }
        },
        "event.setup": {
            "name": "setup",
            "location": 67,
            "return": [
                "EventHandler"
            ],
            "arguments": {
                "function": [
                    "Callable[(..., Any)]"
                ]
            }
        },
        "EventHandler.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "EventHandlerFunc"
                ],
                "stop_propagation": [
                    "bool"
                ],
                "prevent_default": [
                    "bool"
                ],
                "target": [
                    "Optional[str]"
                ]
            }
        },
        "EventHandler.__eq__": {
            "name": "__eq__",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "EventHandler.__repr__": {
            "name": "__repr__",
            "location": 127,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/core/hooks.py": {
        "use_state": {
            "name": "use_state",
            "location": 74,
            "return": [
                "Tuple[(_StateType, Callable[([(_StateType | Callable[([_StateType], _StateType)])], None)])]"
            ],
            "arguments": {
                "initial_value": [
                    "(_StateType | Callable[([], _StateType)])"
                ]
            }
        },
        "use_effect": {
            "name": "use_effect",
            "location": 146,
            "return": [
                "Optional[Callable[([_EffectApplyFunc], None)]]"
            ],
            "arguments": {
                "function": [
                    "Optional[_EffectApplyFunc]"
                ],
                "dependencies": [
                    "((Sequence[Any] | ellipsis) | None)"
                ]
            }
        },
        "use_debug_value": {
            "name": "use_debug_value",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "(Any | Callable[([], Any)])"
                ],
                "dependencies": [
                    "((Sequence[Any] | ellipsis) | None)"
                ]
            }
        },
        "create_context": {
            "name": "create_context",
            "location": 242,
            "return": [
                "type[Context[_StateType]]"
            ],
            "arguments": {
                "default_value": [
                    "_StateType@@"
                ],
                "name": [
                    "(str | None)"
                ]
            }
        },
        "use_context": {
            "name": "use_context",
            "location": 255,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "context_type": [
                    "type[Context[_StateType]]"
                ]
            }
        },
        "use_reducer": {
            "name": "use_reducer",
            "location": 349,
            "return": [
                "Tuple[(_StateType, Callable[([_ActionType], None)])]"
            ],
            "arguments": {
                "reducer": [
                    "Callable[([_StateType, _ActionType], _StateType)]"
                ],
                "initial_value": [
                    "_StateType@@"
                ]
            }
        },
        "_create_dispatcher": {
            "name": "_create_dispatcher",
            "location": 369,
            "return": [
                "Callable[([_ActionType], None)]"
            ],
            "arguments": {
                "reducer": [
                    "Callable[([_StateType, _ActionType], _StateType)]"
                ],
                "set_state": [
                    "Callable[([Callable[([_StateType], _StateType)]], None)]"
                ]
            }
        },
        "use_callback": {
            "name": "use_callback",
            "location": 398,
            "return": [
                "Union[(_CallbackFunc, Callable[([_CallbackFunc], _CallbackFunc)])]"
            ],
            "arguments": {
                "function": [
                    "Optional[_CallbackFunc]"
                ],
                "dependencies": [
                    "((Sequence[Any] | ellipsis) | None)"
                ]
            }
        },
        "use_memo": {
            "name": "use_memo",
            "location": 451,
            "return": [
                "Union[(_StateType, Callable[([Callable[([], _StateType)]], _StateType)])]"
            ],
            "arguments": {
                "function": [
                    "Optional[Callable[([], _StateType)]]"
                ],
                "dependencies": [
                    "((Sequence[Any] | ellipsis) | None)"
                ]
            }
        },
        "use_ref": {
            "name": "use_ref",
            "location": 526,
            "return": [
                "Ref[_StateType]"
            ],
            "arguments": {
                "initial_value": [
                    "_StateType@@"
                ]
            }
        },
        "_use_const": {
            "name": "_use_const",
            "location": 538,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "function": [
                    "Callable[([], _StateType)]"
                ]
            }
        },
        "_try_to_infer_closure_values": {
            "name": "_try_to_infer_closure_values",
            "location": 542,
            "return": [
                "(Sequence[Any] | None)"
            ],
            "arguments": {
                "func": [
                    "(Callable[(..., Any)] | None)"
                ],
                "values": [
                    "((Sequence[Any] | ellipsis) | None)"
                ]
            }
        },
        "current_hook": {
            "name": "current_hook",
            "location": 559,
            "return": [
                "LifeCycleHook"
            ],
            "arguments": {}
        },
        "_CurrentState.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_value": [
                    "Union[(_StateType, Callable[([], _StateType)])]"
                ]
            }
        },
        "use_effect.add_effect": {
            "name": "add_effect",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "function": [
                    "_EffectApplyFunc"
                ]
            }
        },
        "use_context.subscribe_to_context_change": {
            "name": "subscribe_to_context_change",
            "location": 280,
            "return": [
                "Callable[([], None)]"
            ],
            "arguments": {}
        },
        "Context.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Context.__init__": {
            "name": "__init__",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.render": {
            "name": "render",
            "location": 321,
            "return": [
                "VdomDict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.should_render": {
            "name": "should_render",
            "location": 334,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "Context[_StateType]"
                ]
            }
        },
        "Context.__repr__": {
            "name": "__repr__",
            "location": 342,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_create_dispatcher.dispatch": {
            "name": "dispatch",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "action": [
                    "_ActionType@@"
                ]
            }
        },
        "use_callback.setup": {
            "name": "setup",
            "location": 419,
            "return": [
                "_CallbackFunc@@Callable[(..., Any)]@@"
            ],
            "arguments": {
                "function": [
                    "_CallbackFunc@@Callable[(..., Any)]@@"
                ]
            }
        },
        "_LambdaCaller.__call__": {
            "name": "__call__",
            "location": 431,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable[([], _StateType)]"
                ]
            }
        },
        "_Memo.empty": {
            "name": "empty",
            "location": 517,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.__init__": {
            "name": "__init__",
            "location": 665,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schedule_render": [
                    "Callable[([], None)]"
                ]
            }
        },
        "LifeCycleHook.schedule_render": {
            "name": "schedule_render",
            "location": 681,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.use_state": {
            "name": "use_state",
            "location": 688,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable[([], _StateType)]"
                ]
            }
        },
        "LifeCycleHook.add_effect": {
            "name": "add_effect",
            "location": 699,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "effect_type": [
                    "EffectType"
                ],
                "function": [
                    "Callable[([], None)]"
                ]
            }
        },
        "LifeCycleHook.affect_component_will_render": {
            "name": "affect_component_will_render",
            "location": 703,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "component": [
                    "ComponentType"
                ]
            }
        },
        "LifeCycleHook.affect_component_did_render": {
            "name": "affect_component_did_render",
            "location": 710,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.affect_layout_did_render": {
            "name": "affect_layout_did_render",
            "location": 726,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.affect_component_will_unmount": {
            "name": "affect_component_will_unmount",
            "location": 740,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.set_current": {
            "name": "set_current",
            "location": 750,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook.unset_current": {
            "name": "unset_current",
            "location": 758,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifeCycleHook._schedule_render": {
            "name": "_schedule_render",
            "location": 764,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_CurrentState.__init__.dispatch": {
            "name": "dispatch",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "new": [
                    "Union[(_StateType, Callable[([_StateType], _StateType)])]"
                ]
            }
        },
        "use_effect.add_effect.effect": {
            "name": "effect",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "use_context.subscribe_to_context_change.set_context": {
            "name": "set_context",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "new": [
                    "Context[_StateType]"
                ]
            }
        },
        "Context.render.reset_ctx": {
            "name": "reset_ctx",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "use_memo.setup": {
            "name": "setup",
            "location": 500,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "function": [
                    "Callable[([], _StateType)]"
                ]
            }
        },
        "use_effect.add_effect.sync_function": {
            "name": "sync_function",
            "location": 178,
            "return": [
                "Optional[_EffectCleanFunc]"
            ],
            "arguments": {}
        },
        "use_effect.add_effect.sync_function.clean_future": {
            "name": "clean_future",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/core/layout.py": {
        "_check_should_render": {
            "name": "_check_should_render",
            "location": 468,
            "return": [
                "bool"
            ],
            "arguments": {
                "old": [
                    "ComponentType"
                ],
                "new": [
                    "ComponentType"
                ]
            }
        },
        "_iter_model_state_children": {
            "name": "_iter_model_state_children",
            "location": 476,
            "return": [
                "Iterator[_ModelState]"
            ],
            "arguments": {
                "model_state": [
                    "_ModelState"
                ]
            }
        },
        "_new_root_model_state": {
            "name": "_new_root_model_state",
            "location": 482,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "component": [
                    "ComponentType"
                ],
                "schedule_render": [
                    "Callable[([_LifeCycleStateId], None)]"
                ]
            }
        },
        "_make_component_model_state": {
            "name": "_make_component_model_state",
            "location": 497,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "parent": [
                    "_ModelState"
                ],
                "index": [
                    "int"
                ],
                "key": [
                    "Any"
                ],
                "component": [
                    "ComponentType"
                ],
                "schedule_render": [
                    "Callable[([_LifeCycleStateId], None)]"
                ]
            }
        },
        "_copy_component_model_state": {
            "name": "_copy_component_model_state",
            "location": 516,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "old_model_state": [
                    "_ModelState"
                ]
            }
        },
        "_update_component_model_state": {
            "name": "_update_component_model_state",
            "location": 535,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "old_model_state": [
                    "_ModelState"
                ],
                "new_parent": [
                    "_ModelState"
                ],
                "new_index": [
                    "int"
                ],
                "new_component": [
                    "ComponentType"
                ],
                "schedule_render": [
                    "Callable[([_LifeCycleStateId], None)]"
                ]
            }
        },
        "_make_element_model_state": {
            "name": "_make_element_model_state",
            "location": 558,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "parent": [
                    "_ModelState"
                ],
                "index": [
                    "int"
                ],
                "key": [
                    "Any"
                ]
            }
        },
        "_update_element_model_state": {
            "name": "_update_element_model_state",
            "location": 574,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "old_model_state": [
                    "_ModelState"
                ],
                "new_parent": [
                    "_ModelState"
                ],
                "new_index": [
                    "int"
                ]
            }
        },
        "_make_life_cycle_state": {
            "name": "_make_life_cycle_state",
            "location": 659,
            "return": [
                "_LifeCycleState"
            ],
            "arguments": {
                "component": [
                    "ComponentType"
                ],
                "schedule_render": [
                    "Callable[([_LifeCycleStateId], None)]"
                ]
            }
        },
        "_update_life_cycle_state": {
            "name": "_update_life_cycle_state",
            "location": 671,
            "return": [
                "_LifeCycleState"
            ],
            "arguments": {
                "old_life_cycle_state": [
                    "_LifeCycleState"
                ],
                "new_component": [
                    "ComponentType"
                ]
            }
        },
        "_process_child_type_and_key": {
            "name": "_process_child_type_and_key",
            "location": 730,
            "return": [
                "Iterator[Tuple[(Any, _ElementType, Any)]]"
            ],
            "arguments": {
                "children": [
                    "List[Any]"
                ]
            }
        },
        "Layout.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "'ComponentType'"
                ]
            }
        },
        "Layout._create_layout_update": {
            "name": "_create_layout_update",
            "location": 159,
            "return": [
                "LayoutUpdate"
            ],
            "arguments": {
                "self": [],
                "old_state": [
                    "_ModelState"
                ]
            }
        },
        "Layout._render_component": {
            "name": "_render_component",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_state": [
                    "Optional[_ModelState]"
                ],
                "new_state": [
                    "_ModelState"
                ],
                "component": [
                    "ComponentType"
                ]
            }
        },
        "Layout._render_model": {
            "name": "_render_model",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_state": [
                    "Optional[_ModelState]"
                ],
                "new_state": [
                    "_ModelState"
                ],
                "raw_model": [
                    "Any"
                ]
            }
        },
        "Layout._render_model_attributes": {
            "name": "_render_model_attributes",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_state": [
                    "Optional[_ModelState]"
                ],
                "new_state": [
                    "_ModelState"
                ],
                "raw_model": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Layout._render_model_event_handlers_without_old_state": {
            "name": "_render_model_event_handlers_without_old_state",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_state": [
                    "_ModelState"
                ],
                "handlers_by_event": [
                    "EventHandlerDict"
                ]
            }
        },
        "Layout._render_model_children": {
            "name": "_render_model_children",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_state": [
                    "Optional[_ModelState]"
                ],
                "new_state": [
                    "_ModelState"
                ],
                "raw_children": [
                    "Any"
                ]
            }
        },
        "Layout._render_model_children_without_old_state": {
            "name": "_render_model_children_without_old_state",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_state": [
                    "_ModelState"
                ],
                "raw_children": [
                    "List[Any]"
                ]
            }
        },
        "Layout._unmount_model_states": {
            "name": "_unmount_model_states",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_states": [
                    "List[_ModelState]"
                ]
            }
        },
        "Layout.__repr__": {
            "name": "__repr__",
            "location": 464,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ModelState.__init__": {
            "name": "__init__",
            "location": 605,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [
                    "Optional[_ModelState]"
                ],
                "index": [
                    "int"
                ],
                "key": [
                    "Any"
                ],
                "model": [
                    "Ref[VdomJson]"
                ],
                "patch_path": [
                    "str"
                ],
                "children_by_key": [
                    "Dict[(str, _ModelState)]"
                ],
                "targets_by_event": [
                    "Dict[(str, str)]"
                ],
                "life_cycle_state": [
                    "Optional[_LifeCycleState]"
                ]
            }
        },
        "_ModelState.is_component_state": {
            "name": "is_component_state",
            "location": 646,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ModelState.parent": {
            "name": "parent",
            "location": 650,
            "return": [
                "_ModelState"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ModelState.__repr__": {
            "name": "__repr__",
            "location": 655,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ThreadSafeQueue.__init__": {
            "name": "__init__",
            "location": 706,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ThreadSafeQueue.put": {
            "name": "put",
            "location": 711,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_Type@@"
                ]
            }
        },
        "_ThreadSafeQueue.remove_if_pending": {
            "name": "remove_if_pending",
            "location": 717,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_Type@@"
                ]
            }
        },
        "_default_key": {
            "name": "_default_key",
            "location": 765,
            "return": [
                "Any"
            ],
            "arguments": {
                "index": [
                    "int"
                ]
            }
        }
    },
    "idom-main/src/idom/core/serve.py": {
        "VdomJsonPatch.apply_to": {
            "name": "apply_to",
            "location": 65,
            "return": [
                "VdomJson"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "VdomJson"
                ]
            }
        },
        "VdomJsonPatch.create_from": {
            "name": "create_from",
            "location": 75,
            "return": [
                "VdomJsonPatch"
            ],
            "arguments": {
                "cls": [],
                "update": [
                    "LayoutUpdate"
                ]
            }
        }
    },
    "idom-main/src/idom/core/types.py": {
        "ComponentType.render": {
            "name": "render",
            "location": 47,
            "return": [
                "((VdomDict | ComponentType) | None)"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComponentType.should_render": {
            "name": "should_render",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [
                    "_OwnType@@"
                ],
                "new": [
                    "_OwnType@@"
                ]
            }
        },
        "VdomDictConstructor.__call__": {
            "name": "__call__",
            "location": 194,
            "return": [
                "VdomDict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/core/vdom.py": {
        "validate_vdom_json": {
            "name": "validate_vdom_json",
            "location": 100,
            "return": [
                "VdomJson"
            ],
            "arguments": {
                "value": [
                    "Any"
                ]
            }
        },
        "is_vdom": {
            "name": "is_vdom",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "Any"
                ]
            }
        },
        "vdom": {
            "name": "vdom",
            "location": 129,
            "return": [
                "VdomDict"
            ],
            "arguments": {
                "tag": [
                    "str"
                ]
            }
        },
        "make_vdom_constructor": {
            "name": "make_vdom_constructor",
            "location": 192,
            "return": [
                "_VdomDictConstructor"
            ],
            "arguments": {
                "tag": [
                    "str"
                ],
                "allow_children": [
                    "bool"
                ]
            }
        },
        "coalesce_attributes_and_children": {
            "name": "coalesce_attributes_and_children",
            "location": 237,
            "return": [
                "Tuple[(Mapping[(str, Any)], List[Any])]"
            ],
            "arguments": {
                "values": [
                    "Sequence[Any]"
                ]
            }
        },
        "separate_attributes_and_event_handlers": {
            "name": "separate_attributes_and_event_handlers",
            "location": 259,
            "return": [
                "Tuple[(Dict[(str, Any)], EventHandlerDict)]"
            ],
            "arguments": {
                "attributes": [
                    "Mapping[(str, Any)]"
                ],
                "event_handlers": [
                    "EventHandlerMapping"
                ]
            }
        },
        "_is_attributes": {
            "name": "_is_attributes",
            "location": 304,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "Any"
                ]
            }
        },
        "_is_single_child": {
            "name": "_is_single_child",
            "location": 319,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "Any"
                ]
            }
        },
        "_VdomDictConstructor.__call__": {
            "name": "__call__",
            "location": 182,
            "return": [
                "VdomDict"
            ],
            "arguments": {
                "self": []
            }
        },
        "make_vdom_constructor.constructor": {
            "name": "constructor",
            "location": 201,
            "return": [
                "VdomDict"
            ],
            "arguments": {}
        },
        "_EllipsisRepr.__repr__": {
            "name": "__repr__",
            "location": 342,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "idom-main/src/idom/core/_event_proxy.py": {
        "_wrap_in_warning_event_proxies": {
            "name": "_wrap_in_warning_event_proxies",
            "location": 5,
            "return": [
                "Sequence[Any]"
            ],
            "arguments": {
                "values": [
                    "Sequence[Any]"
                ]
            }
        },
        "_EventProxy.__getitem__": {
            "name": "__getitem__",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Any"
                ]
            }
        },
        "_EventProxy.get": {
            "name": "get",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Any"
                ],
                "default": [
                    "Any"
                ]
            }
        }
    },
    "idom-main/src/idom/core/_fixed_jsonpatch.py": {
        "apply_patch": {
            "name": "apply_patch",
            "location": 18,
            "return": [],
            "arguments": {
                "doc": [],
                "patch": [],
                "in_place": [],
                "pointer_cls": []
            }
        },
        "make_patch": {
            "name": "make_patch",
            "location": 26,
            "return": [],
            "arguments": {
                "src": [],
                "dst": [],
                "pointer_cls": []
            }
        },
        "JsonPatch.from_diff": {
            "name": "from_diff",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": [],
                "src": [],
                "dst": [],
                "optimization": [],
                "dumps": [],
                "pointer_cls": []
            }
        },
        "DiffBuilder._item_removed": {
            "name": "_item_removed",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "key": [],
                "item": []
            }
        }
    },
    "idom-main/src/idom/core/_thread_local.py": {
        "ThreadLocal.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "default": [
                    "Callable[([], _StateType)]"
                ]
            }
        },
        "ThreadLocal.get": {
            "name": "get",
            "location": 16,
            "return": [
                "_StateType@@"
            ],
            "arguments": {
                "self": []
            }
        },
        "ThreadLocal.set": {
            "name": "set",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "_StateType@@"
                ]
            }
        }
    },
    "idom-main/src/idom/core/__init__.py": {},
    "idom-main/src/idom/testing/backend.py": {
        "BackendFixture.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "port": [
                    "Optional[int]"
                ],
                "app": [
                    "(Any | None)"
                ],
                "implementation": [
                    "(BackendImplementation[Any] | None)"
                ],
                "options": [
                    "(Any | None)"
                ]
            }
        },
        "BackendFixture.log_records": {
            "name": "log_records",
            "location": 58,
            "return": [
                "list[logging.LogRecord]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BackendFixture.url": {
            "name": "url",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "query": [
                    "Optional[Any]"
                ]
            }
        },
        "BackendFixture.list_logged_exceptions": {
            "name": "list_logged_exceptions",
            "location": 80,
            "return": [
                "list[BaseException]"
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "str"
                ],
                "types": [
                    "Union[(Type[Any], Tuple[(Type[Any], ...)])]"
                ],
                "log_level": [
                    "int"
                ],
                "del_log_records": [
                    "bool"
                ]
            }
        }
    },
    "idom-main/src/idom/testing/common.py": {
        "clear_idom_web_modules_dir": {
            "name": "clear_idom_web_modules_dir",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "poll.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable[(_P, (Awaitable[_R] | _R))]"
                ]
            }
        },
        "HookCatcher.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "index_by_kwarg": [
                    "Optional[str]"
                ]
            }
        },
        "HookCatcher.capture": {
            "name": "capture",
            "location": 122,
            "return": [
                "Callable[(..., Any)]"
            ],
            "arguments": {
                "self": [],
                "render_function": [
                    "Callable[(..., Any)]"
                ]
            }
        },
        "StaticEventHandler.__init__": {
            "name": "__init__",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticEventHandler.use": {
            "name": "use",
            "location": 190,
            "return": [
                "EventHandler"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable[(..., Any)]"
                ],
                "stop_propagation": [
                    "bool"
                ],
                "prevent_default": [
                    "bool"
                ]
            }
        },
        "HookCatcher.capture.wrapper": {
            "name": "wrapper",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "idom-main/src/idom/testing/display.py": {
        "DisplayFixture.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backend": [
                    "(BackendFixture | None)"
                ],
                "driver": [
                    "(((Browser | BrowserContext) | Page) | None)"
                ]
            }
        }
    },
    "idom-main/src/idom/testing/logs.py": {
        "assert_idom_did_log": {
            "name": "assert_idom_did_log",
            "location": 17,
            "return": [
                "Iterator[None]"
            ],
            "arguments": {
                "match_message": [
                    "str"
                ],
                "error_type": [
                    "(type[Exception] | None)"
                ],
                "match_error": [
                    "str"
                ]
            }
        },
        "assert_idom_did_not_log": {
            "name": "assert_idom_did_not_log",
            "location": 73,
            "return": [
                "Iterator[None]"
            ],
            "arguments": {
                "match_message": [
                    "str"
                ],
                "error_type": [
                    "(type[Exception] | None)"
                ],
                "match_error": [
                    "str"
                ]
            }
        },
        "list_logged_exceptions": {
            "name": "list_logged_exceptions",
            "location": 93,
            "return": [
                "list[BaseException]"
            ],
            "arguments": {
                "log_records": [
                    "list[logging.LogRecord]"
                ],
                "pattern": [
                    "str"
                ],
                "types": [
                    "(type[Any] | tuple[(type[Any], ...)])"
                ],
                "log_level": [
                    "int"
                ],
                "del_log_records": [
                    "bool"
                ]
            }
        },
        "capture_idom_logs": {
            "name": "capture_idom_logs",
            "location": 124,
            "return": [
                "Iterator[list[logging.LogRecord]]"
            ],
            "arguments": {}
        },
        "_raise_log_message_error": {
            "name": "_raise_log_message_error",
            "location": 164,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "prefix": [
                    "str"
                ],
                "match_message": [
                    "str"
                ],
                "error_type": [
                    "(type[Exception] | None)"
                ],
                "match_error": [
                    "str"
                ]
            }
        },
        "_LogRecordCaptor.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_LogRecordCaptor.handle": {
            "name": "handle",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "logging.LogRecord"
                ]
            }
        }
    },
    "idom-main/src/idom/testing/__init__.py": {},
    "idom-main/src/idom/web/module.py": {
        "module_from_url": {
            "name": "module_from_url",
            "location": 35,
            "return": [
                "WebModule"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "resolve_exports": [
                    "bool"
                ],
                "resolve_exports_depth": [
                    "int"
                ],
                "unmount_before_update": [
                    "bool"
                ]
            }
        },
        "module_from_template": {
            "name": "module_from_template",
            "location": 77,
            "return": [
                "WebModule"
            ],
            "arguments": {
                "template": [
                    "str"
                ],
                "package": [
                    "str"
                ],
                "cdn": [
                    "str"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "resolve_exports": [
                    "bool"
                ],
                "resolve_exports_depth": [
                    "int"
                ],
                "unmount_before_update": [
                    "bool"
                ]
            }
        },
        "module_from_file": {
            "name": "module_from_file",
            "location": 152,
            "return": [
                "WebModule"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "file": [
                    "Union[(str, Path)]"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "resolve_exports": [
                    "bool"
                ],
                "resolve_exports_depth": [
                    "int"
                ],
                "unmount_before_update": [
                    "bool"
                ],
                "symlink": [
                    "bool"
                ]
            }
        },
        "_equal_files": {
            "name": "_equal_files",
            "location": 213,
            "return": [
                "bool"
            ],
            "arguments": {
                "f1": [
                    "Path"
                ],
                "f2": [
                    "Path"
                ]
            }
        },
        "_copy_file": {
            "name": "_copy_file",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "Path"
                ],
                "source": [
                    "Path"
                ],
                "symlink": [
                    "bool"
                ]
            }
        },
        "module_from_string": {
            "name": "module_from_string",
            "location": 229,
            "return": [
                "WebModule"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "content": [
                    "str"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "resolve_exports": [
                    "bool"
                ],
                "resolve_exports_depth": [
                    "int"
                ],
                "unmount_before_update": [
                    "bool"
                ]
            }
        },
        "export": {
            "name": "export",
            "location": 314,
            "return": [
                "Union[(VdomDictConstructor, List[VdomDictConstructor])]"
            ],
            "arguments": {
                "web_module": [
                    "WebModule"
                ],
                "export_names": [
                    "Union[(str, List[str], Tuple[(str, ...)])]"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "allow_children": [
                    "bool"
                ]
            }
        },
        "_make_export": {
            "name": "_make_export",
            "location": 352,
            "return": [
                "VdomDictConstructor"
            ],
            "arguments": {
                "web_module": [
                    "WebModule"
                ],
                "name": [
                    "str"
                ],
                "fallback": [
                    "Optional[Any]"
                ],
                "allow_children": [
                    "bool"
                ]
            }
        },
        "_web_module_path": {
            "name": "_web_module_path",
            "location": 372,
            "return": [
                "Path"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "idom-main/src/idom/web/utils.py": {
        "module_name_suffix": {
            "name": "module_name_suffix",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "resolve_module_exports_from_file": {
            "name": "resolve_module_exports_from_file",
            "location": 21,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "file": [
                    "Path"
                ],
                "max_depth": [
                    "int"
                ],
                "is_re_export": [
                    "bool"
                ]
            }
        },
        "resolve_module_exports_from_url": {
            "name": "resolve_module_exports_from_url",
            "location": 51,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "max_depth": [
                    "int"
                ],
                "is_re_export": [
                    "bool"
                ]
            }
        },
        "resolve_module_exports_from_source": {
            "name": "resolve_module_exports_from_source",
            "location": 80,
            "return": [
                "Tuple[(Set[str], Set[str])]"
            ],
            "arguments": {
                "content": [
                    "str"
                ],
                "exclude_default": [
                    "bool"
                ]
            }
        },
        "_resolve_relative_url": {
            "name": "_resolve_relative_url",
            "location": 133,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ],
                "rel_url": [
                    "str"
                ]
            }
        }
    },
    "idom-main/src/idom/web/__init__.py": {},
    "idom-main/tests/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "Parser"
                ]
            }
        },
        "event_loop": {
            "name": "event_loop",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "clear_web_modules_dir_after_test": {
            "name": "clear_web_modules_dir_after_test",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "assert_no_logged_exceptions": {
            "name": "assert_no_logged_exceptions",
            "location": 71,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_client.py": {
        "test_automatic_reconnect.OldComponent": {
            "name": "OldComponent",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_automatic_reconnect.NewComponent": {
            "name": "NewComponent",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "test_style_can_be_changed.ButtonWithChangingColor": {
            "name": "ButtonWithChangingColor",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "test_slow_server_response_on_input_change.SomeComponent": {
            "name": "SomeComponent",
            "location": 110,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_html.py": {
        "use_toggle": {
            "name": "use_toggle",
            "location": 8,
            "return": [],
            "arguments": {
                "initial": []
            }
        },
        "use_counter": {
            "name": "use_counter",
            "location": 13,
            "return": [],
            "arguments": {
                "initial_value": []
            }
        },
        "test_script_may_only_have_one_child": {
            "name": "test_script_may_only_have_one_child",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "test_child_of_script_must_be_string": {
            "name": "test_child_of_script_must_be_string",
            "location": 144,
            "return": [],
            "arguments": {}
        },
        "test_simple_fragment": {
            "name": "test_simple_fragment",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "test_fragment_can_have_no_attributes": {
            "name": "test_fragment_can_have_no_attributes",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "test_script_mount_unmount.Root": {
            "name": "Root",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_script_mount_unmount.HasScript": {
            "name": "HasScript",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_script_re_run_on_content_change.HasScript": {
            "name": "HasScript",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "test_script_from_src.HasScript": {
            "name": "HasScript",
            "location": 106,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_sample.py": {},
    "idom-main/tests/test_testing.py": {
        "test_assert_idom_logged_does_not_supress_errors": {
            "name": "test_assert_idom_logged_does_not_supress_errors",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_assert_idom_logged_message": {
            "name": "test_assert_idom_logged_message",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_assert_idom_logged_error": {
            "name": "test_assert_idom_logged_error",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_assert_idom_logged_assertion_error_message": {
            "name": "test_assert_idom_logged_assertion_error_message",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_assert_idom_logged_ignores_level": {
            "name": "test_assert_idom_logged_ignores_level",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "test_assert_idom_did_not_log": {
            "name": "test_assert_idom_did_not_log",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "test_if_app_is_given_implementation_must_be_too": {
            "name": "test_if_app_is_given_implementation_must_be_too",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "test_list_logged_excptions": {
            "name": "test_list_logged_excptions",
            "location": 152,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_utils.py": {
        "test_basic_ref_behavior": {
            "name": "test_basic_ref_behavior",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_ref_equivalence": {
            "name": "test_ref_equivalence",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_ref_repr": {
            "name": "test_ref_repr",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_html_to_vdom": {
            "name": "test_html_to_vdom",
            "location": 62,
            "return": [],
            "arguments": {
                "case": []
            }
        },
        "test_html_to_vdom_transform": {
            "name": "test_html_to_vdom_transform",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_html_to_vdom_transform.make_links_blue": {
            "name": "make_links_blue",
            "location": 72,
            "return": [],
            "arguments": {
                "node": []
            }
        }
    },
    "idom-main/tests/test_widgets.py": {
        "test_hostwap_update_on_change.make_next_count_constructor": {
            "name": "make_next_count_constructor",
            "location": 21,
            "return": [],
            "arguments": {
                "count": []
            }
        },
        "test_hostwap_update_on_change.ButtonSwapsDivs": {
            "name": "ButtonSwapsDivs",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_use_linked_inputs.SomeComponent": {
            "name": "SomeComponent",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "test_use_linked_inputs_on_change.SomeComponent": {
            "name": "SomeComponent",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "test_use_linked_inputs_on_change_with_cast.SomeComponent": {
            "name": "SomeComponent",
            "location": 133,
            "return": [],
            "arguments": {}
        },
        "test_use_linked_inputs_ignore_empty.SomeComponent": {
            "name": "SomeComponent",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "test_hostwap_update_on_change.make_next_count_constructor.constructor": {
            "name": "constructor",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test__option.py": {
        "test_option_repr": {
            "name": "test_option_repr",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_option_from_os_environ": {
            "name": "test_option_from_os_environ",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_option_from_default": {
            "name": "test_option_from_default",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_option_validator": {
            "name": "test_option_validator",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_immutable_option": {
            "name": "test_immutable_option",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_option_reset": {
            "name": "test_option_reset",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_option_reload": {
            "name": "test_option_reload",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "test_option_set": {
            "name": "test_option_set",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_option_set_default": {
            "name": "test_option_set_default",
            "location": 72,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/__init__.py": {},
    "idom-main/tests/test_backend/test_common.py": {
        "test_display_simple_hello_world.Hello": {
            "name": "Hello",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_display_simple_click_counter.Counter": {
            "name": "Counter",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "test_use_scope.ShowScope": {
            "name": "ShowScope",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "test_use_location.ShowRoute": {
            "name": "ShowRoute",
            "location": 90,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_backend/test_utils.py": {
        "exit_stack": {
            "name": "exit_stack",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_find_available_port": {
            "name": "test_find_available_port",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_catch_unsafe_relative_path_traversal": {
            "name": "test_catch_unsafe_relative_path_traversal",
            "location": 63,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "bad_path": []
            }
        },
        "test_run.run_in_thread": {
            "name": "run_in_thread",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_backend/__init__.py": {},
    "idom-main/tests/test_core/test_component.py": {
        "test_component_repr": {
            "name": "test_component_repr",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_component_repr.MyComponent": {
            "name": "MyComponent",
            "location": 7,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "test_simple_component.SimpleDiv": {
            "name": "SimpleDiv",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_simple_parameterized_component.SimpleParamComponent": {
            "name": "SimpleParamComponent",
            "location": 29,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "test_component_with_var_args.ComponentWithVarArgsAndKwargs": {
            "name": "ComponentWithVarArgsAndKwargs",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_display_simple_hello_world.Hello": {
            "name": "Hello",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_pre_tags_are_rendered_correctly.PreFormated": {
            "name": "PreFormated",
            "location": 59,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_core/test_dispatcher.py": {
        "test_vdom_json_patch_create_from_apply_to": {
            "name": "test_vdom_json_patch_create_from_apply_to",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "make_send_recv_callbacks": {
            "name": "make_send_recv_callbacks",
            "location": 21,
            "return": [],
            "arguments": {
                "events_to_inject": []
            }
        },
        "make_events_and_expected_model": {
            "name": "make_events_and_expected_model",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "assert_changes_produce_expected_model": {
            "name": "assert_changes_produce_expected_model",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "changes": [
                    "Sequence[LayoutUpdate]"
                ],
                "expected_model": [
                    "Any"
                ]
            }
        },
        "Counter": {
            "name": "Counter",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "test_dispatcher_handles_more_than_one_event_at_a_time.ComponentWithTwoEventHandlers": {
            "name": "ComponentWithTwoEventHandlers",
            "location": 105,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_core/test_events.py": {
        "test_event_handler_repr": {
            "name": "test_event_handler_repr",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_event_handler_props": {
            "name": "test_event_handler_props",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_event_handler_equivalence": {
            "name": "test_event_handler_equivalence",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_merge_event_handler_funcs_empty_list": {
            "name": "test_merge_event_handler_funcs_empty_list",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "test_to_event_handler_function.func": {
            "name": "func",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_merge_event_handlers_raises_on_mismatch.func": {
            "name": "func",
            "location": 98,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "test_can_prevent_event_default_operation.Input": {
            "name": "Input",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "test_simple_click_event.Button": {
            "name": "Button",
            "location": 165,
            "return": [],
            "arguments": {}
        },
        "test_can_stop_event_propogation.DivInDiv": {
            "name": "DivInDiv",
            "location": 187,
            "return": [],
            "arguments": {}
        },
        "test_can_stop_event_propogation.DivInDiv.inner_click_no_op": {
            "name": "inner_click_no_op",
            "location": 189,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "test_can_stop_event_propogation.DivInDiv.outer_click_is_not_triggered": {
            "name": "outer_click_is_not_triggered",
            "location": 192,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "idom-main/tests/test_core/test_hooks.py": {
        "test_bad_schedule_render_callback": {
            "name": "test_bad_schedule_render_callback",
            "location": 844,
            "return": [],
            "arguments": {}
        },
        "test_context_repr": {
            "name": "test_context_repr",
            "location": 937,
            "return": [],
            "arguments": {}
        },
        "test_must_be_rendering_in_layout_to_use_hooks.SimpleComponentWithHook": {
            "name": "SimpleComponentWithHook",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_simple_stateful_component.SimpleStatefulComponent": {
            "name": "SimpleStatefulComponent",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_set_state_callback_identity_is_preserved.SimpleStatefulComponent": {
            "name": "SimpleStatefulComponent",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "test_use_state_with_constructor.make_default": {
            "name": "make_default",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "test_use_state_with_constructor.Outer": {
            "name": "Outer",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "test_use_state_with_constructor.Inner": {
            "name": "Inner",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "test_set_state_with_reducer_instead_of_value.increment": {
            "name": "increment",
            "location": 138,
            "return": [],
            "arguments": {
                "count": []
            }
        },
        "test_set_state_with_reducer_instead_of_value.Counter": {
            "name": "Counter",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_set_state_checks_identity_not_equality.event_count_tracker": {
            "name": "event_count_tracker",
            "location": 166,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "test_set_state_checks_identity_not_equality.TestComponent": {
            "name": "TestComponent",
            "location": 174,
            "return": [],
            "arguments": {}
        },
        "test_simple_input_with_use_state.Input": {
            "name": "Input",
            "location": 227,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "test_double_set_state.SomeComponent": {
            "name": "SomeComponent",
            "location": 251,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_callback_occurs_after_full_render_is_complete.OuterComponent": {
            "name": "OuterComponent",
            "location": 294,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_callback_occurs_after_full_render_is_complete.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 301,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_callback_occurs_after_full_render_is_complete.CheckNoEffectYet": {
            "name": "CheckNoEffectYet",
            "location": 309,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_before_next_effect.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 328,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_on_will_unmount.OuterComponent": {
            "name": "OuterComponent",
            "location": 360,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_on_will_unmount.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 365,
            "return": [],
            "arguments": {}
        },
        "test_memoized_effect_on_recreated_if_dependencies_change.ComponentWithMemoizedEffect": {
            "name": "ComponentWithMemoizedEffect",
            "location": 402,
            "return": [],
            "arguments": {}
        },
        "test_memoized_effect_cleanup_only_triggered_before_new_effect.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 442,
            "return": [],
            "arguments": {}
        },
        "test_use_async_effect.ComponentWithAsyncEffect": {
            "name": "ComponentWithAsyncEffect",
            "location": 474,
            "return": [],
            "arguments": {}
        },
        "test_use_async_effect_cleanup.ComponentWithAsyncEffect": {
            "name": "ComponentWithAsyncEffect",
            "location": 493,
            "return": [],
            "arguments": {}
        },
        "test_use_async_effect_cancel.ComponentWithLongWaitingEffect": {
            "name": "ComponentWithLongWaitingEffect",
            "location": 520,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_is_gracefully_handled.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 551,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_cleanup_is_gracefully_handled.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 1133,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_pre_unmount_cleanup_is_gracefully_handled.OuterComponent": {
            "name": "OuterComponent",
            "location": 590,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_pre_unmount_cleanup_is_gracefully_handled.ComponentWithEffect": {
            "name": "ComponentWithEffect",
            "location": 595,
            "return": [],
            "arguments": {}
        },
        "test_use_reducer.reducer": {
            "name": "reducer",
            "location": 619,
            "return": [],
            "arguments": {
                "count": [],
                "action": []
            }
        },
        "test_use_reducer.Counter": {
            "name": "Counter",
            "location": 628,
            "return": [],
            "arguments": {
                "initial_count": []
            }
        },
        "test_use_reducer_dispatch_callback_identity_is_preserved.reducer": {
            "name": "reducer",
            "location": 653,
            "return": [],
            "arguments": {
                "count": [],
                "action": []
            }
        },
        "test_use_reducer_dispatch_callback_identity_is_preserved.ComponentWithUseReduce": {
            "name": "ComponentWithUseReduce",
            "location": 660,
            "return": [],
            "arguments": {}
        },
        "test_use_callback_identity.ComponentWithRef": {
            "name": "ComponentWithRef",
            "location": 680,
            "return": [],
            "arguments": {}
        },
        "test_use_callback_memoization.ComponentWithRef": {
            "name": "ComponentWithRef",
            "location": 700,
            "return": [],
            "arguments": {}
        },
        "test_use_memo.ComponentWithMemo": {
            "name": "ComponentWithMemo",
            "location": 729,
            "return": [],
            "arguments": {}
        },
        "test_use_memo_always_runs_if_dependencies_are_none.ComponentWithMemo": {
            "name": "ComponentWithMemo",
            "location": 758,
            "return": [],
            "arguments": {}
        },
        "test_use_memo_with_stored_deps_is_empty_tuple_after_deps_are_none.ComponentWithMemo": {
            "name": "ComponentWithMemo",
            "location": 782,
            "return": [],
            "arguments": {}
        },
        "test_use_memo_never_runs_if_deps_is_empty_list.ComponentWithMemo": {
            "name": "ComponentWithMemo",
            "location": 810,
            "return": [],
            "arguments": {}
        },
        "test_use_ref.ComponentWithRef": {
            "name": "ComponentWithRef",
            "location": 831,
            "return": [],
            "arguments": {}
        },
        "test_bad_schedule_render_callback.bad_callback": {
            "name": "bad_callback",
            "location": 845,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_automatically_infers_closure_values.CounterWithEffect": {
            "name": "CounterWithEffect",
            "location": 859,
            "return": [],
            "arguments": {}
        },
        "test_use_memo_automatically_infers_closure_values.CounterWithEffect": {
            "name": "CounterWithEffect",
            "location": 887,
            "return": [],
            "arguments": {}
        },
        "test_use_context_default_value.ComponentProvidesContext": {
            "name": "ComponentProvidesContext",
            "location": 915,
            "return": [],
            "arguments": {}
        },
        "test_use_context_default_value.ComponentUsesContext": {
            "name": "ComponentUsesContext",
            "location": 928,
            "return": [],
            "arguments": {}
        },
        "test_use_context_only_renders_for_value_change.ComponentProvidesContext": {
            "name": "ComponentProvidesContext",
            "location": 954,
            "return": [],
            "arguments": {}
        },
        "test_use_context_only_renders_for_value_change.ComponentInContext": {
            "name": "ComponentInContext",
            "location": 959,
            "return": [],
            "arguments": {}
        },
        "test_use_context_updates_components_even_if_memoized.ComponentProvidesContext": {
            "name": "ComponentProvidesContext",
            "location": 986,
            "return": [],
            "arguments": {}
        },
        "test_use_context_updates_components_even_if_memoized.ComponentInContext": {
            "name": "ComponentInContext",
            "location": 991,
            "return": [],
            "arguments": {}
        },
        "test_use_context_updates_components_even_if_memoized.MemoizedComponentUsesContext": {
            "name": "MemoizedComponentUsesContext",
            "location": 995,
            "return": [],
            "arguments": {}
        },
        "test_nested_contexts_do_not_conflict.Root": {
            "name": "Root",
            "location": 1029,
            "return": [],
            "arguments": {}
        },
        "test_nested_contexts_do_not_conflict.Outer": {
            "name": "Outer",
            "location": 1034,
            "return": [],
            "arguments": {}
        },
        "test_nested_contexts_do_not_conflict.Inner": {
            "name": "Inner",
            "location": 1041,
            "return": [],
            "arguments": {}
        },
        "test_neighboring_contexts_do_not_conflict.Root": {
            "name": "Root",
            "location": 1082,
            "return": [],
            "arguments": {}
        },
        "test_neighboring_contexts_do_not_conflict.Left": {
            "name": "Left",
            "location": 1091,
            "return": [],
            "arguments": {}
        },
        "test_neighboring_contexts_do_not_conflict.Right": {
            "name": "Right",
            "location": 1097,
            "return": [],
            "arguments": {}
        },
        "test_set_state_during_render.SetStateDuringRender": {
            "name": "SetStateDuringRender",
            "location": 1157,
            "return": [],
            "arguments": {}
        },
        "test_use_debug_mode.SomeComponent": {
            "name": "SomeComponent",
            "location": 1182,
            "return": [],
            "arguments": {}
        },
        "test_use_debug_mode_with_factory.SomeComponent": {
            "name": "SomeComponent",
            "location": 1210,
            "return": [],
            "arguments": {}
        },
        "test_use_debug_mode_does_not_log_if_not_in_debug_mode.SomeComponent": {
            "name": "SomeComponent",
            "location": 1236,
            "return": [],
            "arguments": {}
        },
        "test_set_state_checks_identity_not_equality.event_count_tracker.tracker": {
            "name": "tracker",
            "location": 167,
            "return": [],
            "arguments": {}
        },
        "test_double_set_state.SomeComponent.double_set_state": {
            "name": "double_set_state",
            "location": 255,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "test_use_effect_callback_occurs_after_full_render_is_complete.ComponentWithEffect.effect": {
            "name": "effect",
            "location": 303,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_before_next_effect.ComponentWithEffect.effect": {
            "name": "effect",
            "location": 330,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_on_will_unmount.ComponentWithEffect.effect": {
            "name": "effect",
            "location": 372,
            "return": [],
            "arguments": {}
        },
        "test_memoized_effect_on_recreated_if_dependencies_change.ComponentWithMemoizedEffect.effect": {
            "name": "effect",
            "location": 406,
            "return": [],
            "arguments": {}
        },
        "test_memoized_effect_cleanup_only_triggered_before_new_effect.ComponentWithEffect.effect": {
            "name": "effect",
            "location": 446,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_is_gracefully_handled.ComponentWithEffect.bad_effect": {
            "name": "bad_effect",
            "location": 553,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_cleanup_is_gracefully_handled.ComponentWithEffect.ok_effect": {
            "name": "ok_effect",
            "location": 571,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_pre_unmount_cleanup_is_gracefully_handled.ComponentWithEffect.ok_effect": {
            "name": "ok_effect",
            "location": 597,
            "return": [],
            "arguments": {}
        },
        "test_use_callback_memoization.ComponentWithRef.cb": {
            "name": "cb",
            "location": 704,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_automatically_infers_closure_values.CounterWithEffect.some_effect_that_uses_count": {
            "name": "some_effect_that_uses_count",
            "location": 863,
            "return": [],
            "arguments": {}
        },
        "test_use_memo_automatically_infers_closure_values.CounterWithEffect.some_memo_func_that_uses_count": {
            "name": "some_memo_func_that_uses_count",
            "location": 891,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_cleanup_is_gracefully_handled.ComponentWithEffect.bad_effect": {
            "name": "bad_effect",
            "location": 1136,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_before_next_effect.ComponentWithEffect.effect.cleanup": {
            "name": "cleanup",
            "location": 334,
            "return": [],
            "arguments": {}
        },
        "test_use_effect_cleanup_occurs_on_will_unmount.ComponentWithEffect.effect.cleanup": {
            "name": "cleanup",
            "location": 373,
            "return": [],
            "arguments": {}
        },
        "test_memoized_effect_cleanup_only_triggered_before_new_effect.ComponentWithEffect.effect.cleanup": {
            "name": "cleanup",
            "location": 447,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_cleanup_is_gracefully_handled.ComponentWithEffect.ok_effect.bad_cleanup": {
            "name": "bad_cleanup",
            "location": 572,
            "return": [],
            "arguments": {}
        },
        "test_error_in_effect_pre_unmount_cleanup_is_gracefully_handled.ComponentWithEffect.ok_effect.bad_cleanup": {
            "name": "bad_cleanup",
            "location": 598,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_core/test_layout.py": {
        "no_logged_errors": {
            "name": "no_logged_errors",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_layout_repr": {
            "name": "test_layout_repr",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_layout_expects_abstract_component": {
            "name": "test_layout_expects_abstract_component",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "use_toggle": {
            "name": "use_toggle",
            "location": 514,
            "return": [],
            "arguments": {
                "init": []
            }
        },
        "test_layout_repr.MyComponent": {
            "name": "MyComponent",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_layout_cannot_be_used_outside_context_manager.Component": {
            "name": "Component",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "test_simple_layout.SimpleComponent": {
            "name": "SimpleComponent",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_component_can_return_none.SomeComponent": {
            "name": "SomeComponent",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "test_nested_component_layout.Parent": {
            "name": "Parent",
            "location": 114,
            "return": [],
            "arguments": {}
        },
        "test_nested_component_layout.Child": {
            "name": "Child",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_with_error_message.Main": {
            "name": "Main",
            "location": 173,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_with_error_message.OkChild": {
            "name": "OkChild",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_with_error_message.BadChild": {
            "name": "BadChild",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_without_error_message.Main": {
            "name": "Main",
            "location": 229,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_without_error_message.OkChild": {
            "name": "OkChild",
            "location": 233,
            "return": [],
            "arguments": {}
        },
        "test_layout_render_error_has_partial_update_without_error_message.BadChild": {
            "name": "BadChild",
            "location": 237,
            "return": [],
            "arguments": {}
        },
        "test_render_raw_vdom_dict_with_single_component_object_as_children.Main": {
            "name": "Main",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "test_render_raw_vdom_dict_with_single_component_object_as_children.Child": {
            "name": "Child",
            "location": 282,
            "return": [],
            "arguments": {}
        },
        "test_components_are_garbage_collected.add_to_live_components": {
            "name": "add_to_live_components",
            "location": 319,
            "return": [],
            "arguments": {
                "constructor": []
            }
        },
        "test_components_are_garbage_collected.Outer": {
            "name": "Outer",
            "location": 332,
            "return": [],
            "arguments": {}
        },
        "test_components_are_garbage_collected.Inner": {
            "name": "Inner",
            "location": 337,
            "return": [],
            "arguments": {}
        },
        "test_root_component_life_cycle_hook_is_garbage_collected.add_to_live_hooks": {
            "name": "add_to_live_hooks",
            "location": 367,
            "return": [],
            "arguments": {
                "constructor": []
            }
        },
        "test_root_component_life_cycle_hook_is_garbage_collected.Root": {
            "name": "Root",
            "location": 380,
            "return": [],
            "arguments": {}
        },
        "test_life_cycle_hooks_are_garbage_collected.add_to_live_hooks": {
            "name": "add_to_live_hooks",
            "location": 399,
            "return": [],
            "arguments": {
                "constructor": []
            }
        },
        "test_life_cycle_hooks_are_garbage_collected.Outer": {
            "name": "Outer",
            "location": 412,
            "return": [],
            "arguments": {}
        },
        "test_life_cycle_hooks_are_garbage_collected.Inner": {
            "name": "Inner",
            "location": 419,
            "return": [],
            "arguments": {}
        },
        "test_double_updated_component_is_not_double_rendered.AnyComponent": {
            "name": "AnyComponent",
            "location": 455,
            "return": [],
            "arguments": {}
        },
        "test_update_path_to_component_that_is_not_direct_child_is_correct.Parent": {
            "name": "Parent",
            "location": 483,
            "return": [],
            "arguments": {}
        },
        "test_update_path_to_component_that_is_not_direct_child_is_correct.Child": {
            "name": "Child",
            "location": 488,
            "return": [],
            "arguments": {}
        },
        "test_log_on_dispatch_to_missing_event_handler.SomeComponent": {
            "name": "SomeComponent",
            "location": 502,
            "return": [],
            "arguments": {}
        },
        "test_model_key_preserves_callback_identity_for_common_elements.MyComponent": {
            "name": "MyComponent",
            "location": 525,
            "return": [],
            "arguments": {}
        },
        "test_model_key_preserves_callback_identity_for_components.RootComponent": {
            "name": "RootComponent",
            "location": 570,
            "return": [],
            "arguments": {}
        },
        "test_model_key_preserves_callback_identity_for_components.Trigger": {
            "name": "Trigger",
            "location": 584,
            "return": [],
            "arguments": {
                "set_reverse_children": [],
                "name": []
            }
        },
        "test_component_can_return_another_component_directly.Outer": {
            "name": "Outer",
            "location": 615,
            "return": [],
            "arguments": {}
        },
        "test_component_can_return_another_component_directly.Inner": {
            "name": "Inner",
            "location": 619,
            "return": [],
            "arguments": {}
        },
        "test_hooks_for_keyed_components_get_garbage_collected.Outer": {
            "name": "Outer",
            "location": 648,
            "return": [],
            "arguments": {}
        },
        "test_hooks_for_keyed_components_get_garbage_collected.Inner": {
            "name": "Inner",
            "location": 654,
            "return": [],
            "arguments": {
                "finalizer_id": []
            }
        },
        "test_event_handler_at_component_root_is_garbage_collected.HasEventHandlerAtRoot": {
            "name": "HasEventHandlerAtRoot",
            "location": 681,
            "return": [],
            "arguments": {}
        },
        "test_event_handler_deep_in_component_layout_is_garbage_collected.HasNestedEventHandler": {
            "name": "HasNestedEventHandler",
            "location": 703,
            "return": [],
            "arguments": {}
        },
        "test_duplicate_sibling_keys_causes_error.ComponentReturnsDuplicateKeys": {
            "name": "ComponentReturnsDuplicateKeys",
            "location": 727,
            "return": [],
            "arguments": {}
        },
        "test_keyed_components_preserve_hook_on_parent_update.Outer": {
            "name": "Outer",
            "location": 763,
            "return": [],
            "arguments": {}
        },
        "test_keyed_components_preserve_hook_on_parent_update.Inner": {
            "name": "Inner",
            "location": 768,
            "return": [],
            "arguments": {}
        },
        "test_log_error_on_bad_event_handler.ComponentWithBadEventHandler": {
            "name": "ComponentWithBadEventHandler",
            "location": 784,
            "return": [],
            "arguments": {}
        },
        "test_schedule_render_from_unmounted_hook.Parent": {
            "name": "Parent",
            "location": 803,
            "return": [],
            "arguments": {}
        },
        "test_schedule_render_from_unmounted_hook.Child": {
            "name": "Child",
            "location": 811,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "test_elements_and_components_with_the_same_key_can_be_interchanged.use_toggle": {
            "name": "use_toggle",
            "location": 841,
            "return": [],
            "arguments": {}
        },
        "test_elements_and_components_with_the_same_key_can_be_interchanged.Root": {
            "name": "Root",
            "location": 846,
            "return": [],
            "arguments": {}
        },
        "test_elements_and_components_with_the_same_key_can_be_interchanged.SomeComponent": {
            "name": "SomeComponent",
            "location": 854,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "test_layout_does_not_copy_element_children_by_key.SomeComponent": {
            "name": "SomeComponent",
            "location": 885,
            "return": [],
            "arguments": {}
        },
        "test_changing_key_of_parent_element_unmounts_children.Root": {
            "name": "Root",
            "location": 921,
            "return": [],
            "arguments": {}
        },
        "test_changing_key_of_parent_element_unmounts_children.HasState": {
            "name": "HasState",
            "location": 925,
            "return": [],
            "arguments": {}
        },
        "test_switching_node_type_with_event_handlers.Root": {
            "name": "Root",
            "location": 945,
            "return": [],
            "arguments": {}
        },
        "test_switching_node_type_with_event_handlers.SomeComponent": {
            "name": "SomeComponent",
            "location": 954,
            "return": [],
            "arguments": {}
        },
        "test_switching_component_definition.Root": {
            "name": "Root",
            "location": 983,
            "return": [],
            "arguments": {}
        },
        "test_switching_component_definition.FirstComponent": {
            "name": "FirstComponent",
            "location": 991,
            "return": [],
            "arguments": {}
        },
        "test_switching_component_definition.SecondComponent": {
            "name": "SecondComponent",
            "location": 998,
            "return": [],
            "arguments": {}
        },
        "test_element_keys_inside_components_do_not_reset_state_of_component.Parent": {
            "name": "Parent",
            "location": 1035,
            "return": [],
            "arguments": {}
        },
        "test_element_keys_inside_components_do_not_reset_state_of_component.Child": {
            "name": "Child",
            "location": 1047,
            "return": [],
            "arguments": {
                "child_key": []
            }
        },
        "test_changing_key_of_component_resets_state.Root": {
            "name": "Root",
            "location": 1083,
            "return": [],
            "arguments": {}
        },
        "test_changing_key_of_component_resets_state.Child": {
            "name": "Child",
            "location": 1088,
            "return": [],
            "arguments": {}
        },
        "test_changing_event_handlers_in_the_next_render.Root": {
            "name": "Root",
            "location": 1110,
            "return": [],
            "arguments": {}
        },
        "test_change_element_to_string_causes_unmount.Root": {
            "name": "Root",
            "location": 1134,
            "return": [],
            "arguments": {}
        },
        "test_change_element_to_string_causes_unmount.Child": {
            "name": "Child",
            "location": 1142,
            "return": [],
            "arguments": {}
        },
        "ComponentShouldRender.__init__": {
            "name": "__init__",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "child": [],
                "should_render": []
            }
        },
        "ComponentShouldRender.render": {
            "name": "render",
            "location": 1162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_component_should_render_always_true.Root": {
            "name": "Root",
            "location": 1172,
            "return": [],
            "arguments": {}
        },
        "test_component_should_render_always_true.SomeComponent": {
            "name": "SomeComponent",
            "location": 1176,
            "return": [],
            "arguments": {}
        },
        "test_component_should_render_always_false.Root": {
            "name": "Root",
            "location": 1194,
            "return": [],
            "arguments": {}
        },
        "test_component_should_render_always_false.SomeComponent": {
            "name": "SomeComponent",
            "location": 1198,
            "return": [],
            "arguments": {}
        },
        "test_component_error_in_should_render_is_handled_gracefully.Root": {
            "name": "Root",
            "location": 1215,
            "return": [],
            "arguments": {}
        },
        "test_components_are_garbage_collected.add_to_live_components.wrapper": {
            "name": "wrapper",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "test_root_component_life_cycle_hook_is_garbage_collected.add_to_live_hooks.wrapper": {
            "name": "wrapper",
            "location": 368,
            "return": [],
            "arguments": {}
        },
        "test_life_cycle_hooks_are_garbage_collected.add_to_live_hooks.wrapper": {
            "name": "wrapper",
            "location": 400,
            "return": [],
            "arguments": {}
        },
        "test_model_key_preserves_callback_identity_for_common_elements.MyComponent.good_trigger": {
            "name": "good_trigger",
            "location": 529,
            "return": [],
            "arguments": {}
        },
        "test_model_key_preserves_callback_identity_for_common_elements.MyComponent.bad_trigger": {
            "name": "bad_trigger",
            "location": 534,
            "return": [],
            "arguments": {}
        },
        "test_log_error_on_bad_event_handler.ComponentWithBadEventHandler.raise_error": {
            "name": "raise_error",
            "location": 786,
            "return": [],
            "arguments": {}
        },
        "test_elements_and_components_with_the_same_key_can_be_interchanged.SomeComponent.some_effect": {
            "name": "some_effect",
            "location": 856,
            "return": [],
            "arguments": {}
        },
        "test_component_error_in_should_render_is_handled_gracefully.Root.bad_should_render": {
            "name": "bad_should_render",
            "location": 1216,
            "return": [],
            "arguments": {
                "new": []
            }
        },
        "test_model_key_preserves_callback_identity_for_components.Trigger.callback": {
            "name": "callback",
            "location": 595,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_core/test_vdom.py": {
        "test_is_vdom": {
            "name": "test_is_vdom",
            "location": 25,
            "return": [],
            "arguments": {
                "result": [],
                "value": []
            }
        },
        "test_simple_node_construction": {
            "name": "test_simple_node_construction",
            "location": 93,
            "return": [],
            "arguments": {
                "actual": [],
                "expected": []
            }
        },
        "test_make_vdom_constructor": {
            "name": "test_make_vdom_constructor",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "test_valid_vdom": {
            "name": "test_valid_vdom",
            "location": 212,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "test_invalid_vdom": {
            "name": "test_invalid_vdom",
            "location": 310,
            "return": [],
            "arguments": {
                "value": [],
                "error_message_pattern": []
            }
        },
        "test_debug_log_if_children_in_attributes": {
            "name": "test_debug_log_if_children_in_attributes",
            "location": 316,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_debug_log_cannot_verify_keypath_for_genereators": {
            "name": "test_debug_log_cannot_verify_keypath_for_genereators",
            "location": 326,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_debug_log_dynamic_children_must_have_keys": {
            "name": "test_debug_log_dynamic_children_must_have_keys",
            "location": 336,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_debug_log_dynamic_children_must_have_keys.MyComponent": {
            "name": "MyComponent",
            "location": 344,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_core/__init__.py": {},
    "idom-main/tests/test_web/test_module.py": {
        "test_module_from_template_where_template_does_not_exist": {
            "name": "test_module_from_template_where_template_does_not_exist",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "test_module_from_file_source_conflict": {
            "name": "test_module_from_file_source_conflict",
            "location": 118,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_web_module_from_file_symlink": {
            "name": "test_web_module_from_file_symlink",
            "location": 141,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_web_module_from_file_symlink_twice": {
            "name": "test_web_module_from_file_symlink_twice",
            "location": 154,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_web_module_from_file_replace_existing": {
            "name": "test_web_module_from_file_replace_existing",
            "location": 170,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_module_missing_exports": {
            "name": "test_module_missing_exports",
            "location": 183,
            "return": [],
            "arguments": {}
        },
        "test_module_from_string": {
            "name": "test_module_from_string",
            "location": 233,
            "return": [],
            "arguments": {}
        },
        "test_that_js_module_unmount_is_called.ShowCurrentComponent": {
            "name": "ShowCurrentComponent",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_module_from_url.ShowSimpleButton": {
            "name": "ShowSimpleButton",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_module_from_file.ShowSimpleButton": {
            "name": "ShowSimpleButton",
            "location": 106,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_web/test_utils.py": {
        "test_module_name_suffix": {
            "name": "test_module_name_suffix",
            "location": 31,
            "return": [],
            "arguments": {
                "name": [],
                "suffix": []
            }
        },
        "test_resolve_module_exports_from_file": {
            "name": "test_resolve_module_exports_from_file",
            "location": 36,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_resolve_module_exports_from_file_log_on_max_depth": {
            "name": "test_resolve_module_exports_from_file_log_on_max_depth",
            "location": 51,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_resolve_module_exports_from_file_log_on_unknown_file_location": {
            "name": "test_resolve_module_exports_from_file_log_on_unknown_file_location",
            "location": 64,
            "return": [],
            "arguments": {
                "caplog": [],
                "tmp_path": []
            }
        },
        "test_resolve_module_exports_from_url": {
            "name": "test_resolve_module_exports_from_url",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "test_resolve_module_exports_from_url_log_on_max_depth": {
            "name": "test_resolve_module_exports_from_url_log_on_max_depth",
            "location": 107,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_resolve_module_exports_from_url_log_on_bad_response": {
            "name": "test_resolve_module_exports_from_url_log_on_bad_response",
            "location": 113,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_resolve_module_default_exports_from_source": {
            "name": "test_resolve_module_default_exports_from_source",
            "location": 130,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "test_resolve_module_exports_from_source": {
            "name": "test_resolve_module_exports_from_source",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "test_log_on_unknown_export_type": {
            "name": "test_log_on_unknown_export_type",
            "location": 149,
            "return": [],
            "arguments": {}
        }
    },
    "idom-main/tests/test_web/__init__.py": {},
    "idom-main/tests/tooling/asserts.py": {
        "assert_same_items": {
            "name": "assert_same_items",
            "location": 1,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        }
    },
    "idom-main/tests/tooling/loop.py": {
        "open_event_loop": {
            "name": "open_event_loop",
            "location": 16,
            "return": [
                "Iterator[asyncio.AbstractEventLoop]"
            ],
            "arguments": {
                "as_current": [
                    "bool"
                ]
            }
        },
        "_cancel_all_tasks": {
            "name": "_cancel_all_tasks",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": [
                    "asyncio.AbstractEventLoop"
                ],
                "is_current": [
                    "bool"
                ]
            }
        },
        "_cancel_all_tasks.one_task_finished": {
            "name": "one_task_finished",
            "location": 60,
            "return": [],
            "arguments": {
                "future": []
            }
        }
    },
    "idom-main/tests/tooling/__init__.py": {}
}
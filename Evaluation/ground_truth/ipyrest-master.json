{
    "ipyrest-master/setup.py": {},
    "ipyrest-master/docs/conf.py": {},
    "ipyrest-master/ipyrest/codegen.py": {
        "create_code": {
            "name": "create_code",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "template": [
                    "str"
                ],
                "config": [
                    "dict"
                ]
            }
        },
        "create_code_from_api": {
            "name": "create_code_from_api",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "template": [
                    "str"
                ],
                "api": [
                    "Api"
                ]
            }
        }
    },
    "ipyrest-master/ipyrest/extendedtab.py": {
        "ExtendedTab.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtendedTab.add_child_named": {
            "name": "add_child_named",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "child": [
                    "Widget"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "ExtendedTab.get_child_named": {
            "name": "get_child_named",
            "location": 50,
            "return": [
                "Widget"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "ExtendedTab.remove_child_named": {
            "name": "remove_child_named",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "ExtendedTab.select_child_named": {
            "name": "select_child_named",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "ExtendedTab.replace_child_named": {
            "name": "replace_child_named",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "child": [
                    "Widget"
                ]
            }
        }
    },
    "ipyrest-master/ipyrest/ipyrest.py": {
        "execute_request": {
            "name": "execute_request",
            "location": 69,
            "return": [
                "Tuple[(requests.models.Response, bool)]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "headers": [
                    "Dict"
                ],
                "params": [
                    "Dict"
                ],
                "json": [
                    "Dict"
                ],
                "recorder": [
                    "Optional[vcr.VCR]"
                ],
                "cassette_path": [
                    "str"
                ],
                "logger": [
                    "Optional[MyLogger]"
                ]
            }
        },
        "mask_credentials": {
            "name": "mask_credentials",
            "location": 115,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "field_names": [
                    "List[str]"
                ]
            }
        },
        "update_qs": {
            "name": "update_qs",
            "location": 123,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "MyLogger.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Api.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "args": [
                    "Dict"
                ],
                "params": [
                    "Dict"
                ],
                "data": [
                    "Dict"
                ],
                "headers": [
                    "Dict"
                ],
                "cookies": [
                    "Dict"
                ],
                "click_send": [
                    "bool"
                ],
                "timeout": [
                    "float"
                ],
                "cassette_path": [
                    "str"
                ],
                "views": [
                    "List[ResponseView]"
                ],
                "additional_views": [
                    "List[ResponseView]"
                ],
                "post_process_resp": [
                    "Optional[Callable]"
                ],
                "config": []
            }
        },
        "Api.execute_request": {
            "name": "execute_request",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Api.url_changed": {
            "name": "url_changed",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Api.param_changed": {
            "name": "param_changed",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Api.click_send": {
            "name": "click_send",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Api.update_ui": {
            "name": "update_ui",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Api.req_clicked": {
            "name": "req_clicked",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "btn": [
                    "Button"
                ]
            }
        },
        "Api.rep_clicked": {
            "name": "rep_clicked",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "btn": [
                    "Button"
                ]
            }
        },
        "Api.send_clicked": {
            "name": "send_clicked",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "btn": [
                    "Button"
                ]
            }
        },
        "Api.show_response": {
            "name": "show_response",
            "location": 370,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ],
                "is_cached": [
                    "bool"
                ],
                "views": [
                    "Optional[List[ResponseView]]"
                ]
            }
        },
        "Api.clear_all": {
            "name": "clear_all",
            "location": 451,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ipyrest-master/ipyrest/responseviews.py": {
        "geojson_bbox": {
            "name": "geojson_bbox",
            "location": 26,
            "return": [
                "Tuple[(Tuple[(float, float)], Tuple[(float, float)])]"
            ],
            "arguments": {
                "gj_object": []
            }
        },
        "bbox_center": {
            "name": "bbox_center",
            "location": 39,
            "return": [
                "Tuple[(float, float)]"
            ],
            "arguments": {
                "p": [
                    "Tuple[(float, float)]"
                ],
                "q": [
                    "Tuple[(float, float)]"
                ]
            }
        },
        "zoom_for_bbox": {
            "name": "zoom_for_bbox",
            "location": 50,
            "return": [
                "int"
            ],
            "arguments": {
                "lon_min": [
                    "float"
                ],
                "lat_min": [
                    "float"
                ],
                "lon_max": [
                    "float"
                ],
                "lat_max": [
                    "float"
                ]
            }
        },
        "ResponseView.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "owner": []
            }
        },
        "ResponseView.render": {
            "name": "render",
            "location": 84,
            "return": [
                "Optional[Widget]"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "RawResponseView.render": {
            "name": "render",
            "location": 97,
            "return": [
                "Optional[Widget]"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "HTMLResponseView.render": {
            "name": "render",
            "location": 121,
            "return": [
                "HTML"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "SVGResponseView.render": {
            "name": "render",
            "location": 141,
            "return": [
                "HTML"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "ImageResponseView.render": {
            "name": "render",
            "location": 161,
            "return": [
                "Image"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "JSONResponseView.render": {
            "name": "render",
            "location": 180,
            "return": [
                "Textarea"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "CSVResponseView.render": {
            "name": "render",
            "location": 201,
            "return": [
                "QGridWidget"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "GeoJSONResponseView.render": {
            "name": "render",
            "location": 218,
            "return": [
                "ipyleaflet.Map"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "GPXResponseView.render": {
            "name": "render",
            "location": 243,
            "return": [
                "ipyleaflet.Map"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "Scatter3DResponseView.render": {
            "name": "render",
            "location": 283,
            "return": [
                "Widget"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        },
        "ProtobufResponseView.render": {
            "name": "render",
            "location": 304,
            "return": [
                "Textarea"
            ],
            "arguments": {
                "self": [],
                "resp": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "ipyrest-master/ipyrest/utils.py": {
        "tree": {
            "name": "tree",
            "location": 17,
            "return": [],
            "arguments": {
                "widget": [],
                "level": []
            }
        },
        "find_free_port": {
            "name": "find_free_port",
            "location": 29,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "run_flask_app": {
            "name": "run_flask_app",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Flask"
                ],
                "kwargs": [
                    "dict"
                ],
                "daemon": [
                    "bool"
                ]
            }
        }
    },
    "ipyrest-master/ipyrest/__init__.py": {},
    "ipyrest-master/tests/api_server.py": {
        "home": {
            "name": "home",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "head": {
            "name": "head",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_json": {
            "name": "get_json",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_json_param": {
            "name": "get_json_param",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "param": [
                    "int"
                ]
            }
        },
        "get_json_query": {
            "name": "get_json_query",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "post_json_data": {
            "name": "post_json_data",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_json_3d": {
            "name": "get_json_3d",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_image": {
            "name": "get_image",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_header": {
            "name": "get_header",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_header_echo": {
            "name": "get_header_echo",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_mimetype": {
            "name": "get_mimetype",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_slow": {
            "name": "get_slow",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "period": [
                    "float"
                ]
            }
        },
        "get_protobuf": {
            "name": "get_protobuf",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_protobuf_person": {
            "name": "get_protobuf_person",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "id": [
                    "int"
                ]
            }
        },
        "get_svg": {
            "name": "get_svg",
            "location": 130,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_gpx": {
            "name": "get_gpx",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "post_data_echo": {
            "name": "post_data_echo",
            "location": 147,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "echo": {
            "name": "echo",
            "location": 154,
            "return": [
                "str"
            ],
            "arguments": {
                "subpath": [
                    "str"
                ]
            }
        }
    },
    "ipyrest-master/tests/test_codegen.py": {
        "test_py_req_template_config": {
            "name": "test_py_req_template_config",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_py_req_template_api": {
            "name": "test_py_req_template_api",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/test_dynamic.py": {
        "get_ipyrest_widget": {
            "name": "get_ipyrest_widget",
            "location": 23,
            "return": [
                "Optional[Api]"
            ],
            "arguments": {
                "module": [
                    "ModuleType"
                ]
            }
        },
        "test_usecase_jupyter_header": {
            "name": "test_usecase_jupyter_header",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_usecase_here_geocoder": {
            "name": "test_usecase_here_geocoder",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/test_extendedtab.py": {
        "test_extended_tab": {
            "name": "test_extended_tab",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/test_local.py": {
        "test_empty": {
            "name": "test_empty",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_gpx": {
            "name": "test_gpx",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_vcr": {
            "name": "test_vcr",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_api_local": {
            "name": "test_api_local",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_timeout": {
            "name": "test_timeout",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "test_do_timeout": {
            "name": "test_do_timeout",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/test_remote.py": {
        "test_osm_tile": {
            "name": "test_osm_tile",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_jupyter": {
            "name": "test_jupyter",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_google_header": {
            "name": "test_google_header",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_here_maptile_image": {
            "name": "test_here_maptile_image",
            "location": 53,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/test_typing.py": {
        "type_scan": {
            "name": "type_scan",
            "location": 17,
            "return": [
                "TypeComplaint"
            ],
            "arguments": {
                "paths": [
                    "List[str]"
                ],
                "flags": [
                    "List[str]"
                ]
            }
        },
        "test_static_typing": {
            "name": "test_static_typing",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "ipyrest-master/tests/usecase_here_geocoder.py": {},
    "ipyrest-master/tests/usecase_jupyter_header.py": {},
    "ipyrest-master/tests/resources/addressbook_pb2.py": {}
}
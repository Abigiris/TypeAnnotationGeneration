{
    "jezik-master/__init__.py": {
        "index": {
            "name": "index",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "results": {
            "name": "results",
            "location": 25,
            "return": [],
            "arguments": {
                "word": []
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 52,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "random": {
            "name": "random",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "about": {
            "name": "about",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "favicon": {
            "name": "favicon",
            "location": 70,
            "return": [],
            "arguments": {}
        }
    },
    "jezik-master/gui/__init__.py": {},
    "jezik-master/gui/__main__.py": {
        "f": {
            "name": "f",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "jezik-master/lookup/characters.py": {},
    "jezik-master/lookup/charutils.py": {},
    "jezik-master/lookup/paradigm_helpers.py": {
        "nice_name": {
            "name": "nice_name",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "str_find": {
            "name": "str_find",
            "location": 15,
            "return": [
                "int"
            ],
            "arguments": {
                "word": [
                    "str"
                ],
                "substr": [
                    "str"
                ]
            }
        },
        "has": {
            "name": "has",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "word": [
                    "Union[(str, List[str])]"
                ]
            }
        },
        "append_def": {
            "name": "append_def",
            "location": 31,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "target_list": [
                    "List[str]"
                ],
                "input_list": [
                    "List[str]"
                ],
                "appendable": [
                    "List[str]"
                ],
                "default_item": [
                    "str"
                ]
            }
        },
        "accentize": {
            "name": "accentize",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [
                    "str"
                ]
            }
        },
        "cut_AP": {
            "name": "cut_AP",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "str"
                ]
            }
        },
        "uniq": {
            "name": "uniq",
            "location": 128,
            "return": [
                "List[T]"
            ],
            "arguments": {
                "i": [
                    "Iterable[T]"
                ]
            }
        },
        "make_caption": {
            "name": "make_caption",
            "location": 140,
            "return": [
                "TableCaption"
            ],
            "arguments": {
                "caption": [
                    "Tuple[(str, str)]"
                ],
                "n": [
                    "int"
                ],
                "i": [
                    "int"
                ]
            }
        },
        "GramInfo.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kind": [
                    "str"
                ],
                "infos": [
                    "List[str]"
                ]
            }
        },
        "OrderedSet.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "i": [
                    "Iterable[T]"
                ]
            }
        },
        "OrderedSet.__repr__": {
            "name": "__repr__",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/pos.py": {
        "_swap": {
            "name": "_swap",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "trunk": [
                    "str"
                ]
            }
        },
        "PartOfSpeech.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "accented_keys": [
                    "str"
                ],
                "kind": [
                    "str"
                ],
                "info": [
                    "str"
                ],
                "replacements": [
                    "Tuple[(Replacement, ...)]"
                ],
                "amendments": [
                    "Tuple[(Replacement, ...)]"
                ]
            }
        },
        "PartOfSpeech.label": {
            "name": "label",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "lbl": [
                    "str"
                ]
            }
        },
        "PartOfSpeech.accentize": {
            "name": "accentize",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "current_AP": [
                    "str"
                ],
                "word": [
                    "str"
                ]
            }
        },
        "PartOfSpeech.swap": {
            "name": "swap",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "trunk": [
                    "str"
                ],
                "length_inconstant": [
                    "bool"
                ],
                "AP": [
                    "str"
                ],
                "target_AP": [
                    "str"
                ]
            }
        },
        "PartOfSpeech._delete_left_bracket": {
            "name": "_delete_left_bracket",
            "location": 67,
            "return": [
                "List[List[str]]"
            ],
            "arguments": {
                "self": [],
                "stem": [
                    "str"
                ],
                "morpheme": [
                    "str"
                ],
                "accent": [
                    "str"
                ],
                "current_AP": [
                    "str"
                ]
            }
        },
        "PartOfSpeech._connectendum": {
            "name": "_connectendum",
            "location": 80,
            "return": [
                "List[List[str]]"
            ],
            "arguments": {
                "self": [],
                "current_AP": [
                    "str"
                ],
                "stem": [
                    "str"
                ],
                "ending_part": [
                    "AccentedTuple"
                ]
            }
        },
        "PartOfSpeech._append_morpheme": {
            "name": "_append_morpheme",
            "location": 128,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "current_AP": [
                    "str"
                ],
                "stems": [
                    "List[str]"
                ],
                "ending_part": [
                    "AccentedTuple"
                ]
            }
        },
        "PartOfSpeech.process_one_form": {
            "name": "process_one_form",
            "location": 183,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "current_AP": [
                    "str"
                ],
                "stem": [
                    "str"
                ],
                "morph_chain": [
                    "MorphemeChain"
                ],
                "iterative": [
                    "bool"
                ]
            }
        }
    },
    "jezik-master/lookup/table.py": {
        "Table.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos": [
                    "str"
                ],
                "caption": [
                    "TableCaption"
                ],
                "data": [
                    "Iterable[LabeledMultiform]"
                ]
            }
        },
        "Table.__getitem__": {
            "name": "__getitem__",
            "location": 15,
            "return": [
                "Table"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str"
                ]
            }
        },
        "Table.multiform": {
            "name": "multiform",
            "location": 34,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.__repr__": {
            "name": "__repr__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.__iter__": {
            "name": "__iter__",
            "location": 52,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.__len__": {
            "name": "__len__",
            "location": 55,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Multitable.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_word": [
                    "str"
                ],
                "tables": [
                    "Iterator[Table]"
                ]
            }
        },
        "Multitable.__repr__": {
            "name": "__repr__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Multitable.__getitem__": {
            "name": "__getitem__",
            "location": 68,
            "return": [
                "Union[(Multitable, Table)]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "Union[(int, str)]"
                ]
            }
        },
        "Multitable.__len__": {
            "name": "__len__",
            "location": 81,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Multitable.__bool__": {
            "name": "__bool__",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/utils.py": {
        "cyr2lat": {
            "name": "cyr2lat",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "lowertext": [
                    "str"
                ]
            }
        },
        "last_vowel_index": {
            "name": "last_vowel_index",
            "location": 55,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "trunk": [
                    "str"
                ]
            }
        },
        "first_vowel_index": {
            "name": "first_vowel_index",
            "location": 62,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "trunk": [
                    "str"
                ]
            }
        },
        "indices": {
            "name": "indices",
            "location": 68,
            "return": [
                "Tuple[(Optional[int], Optional[int], Optional[int])]"
            ],
            "arguments": {
                "trunk": [
                    "str"
                ]
            }
        },
        "swap": {
            "name": "swap",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [
                    "str"
                ],
                "c1": [
                    "str"
                ],
                "c2": [
                    "str"
                ]
            }
        },
        "insert": {
            "name": "insert",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [
                    "str"
                ],
                "position_to_accent": [
                    "Dict[(int, str)]"
                ]
            }
        },
        "palatalize": {
            "name": "palatalize",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "sequence": [
                    "str"
                ],
                "mode": [
                    "str"
                ]
            }
        },
        "decurlyerify": {
            "name": "decurlyerify",
            "location": 131,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "deyerify": {
            "name": "deyerify",
            "location": 136,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "prettify": {
            "name": "prettify",
            "location": 249,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "yat": [
                    "str"
                ]
            }
        },
        "deaccentize": {
            "name": "deaccentize",
            "location": 285,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "garde": {
            "name": "garde",
            "location": 294,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [
                    "str"
                ]
            }
        },
        "zeroify": {
            "name": "zeroify",
            "location": 359,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "purify": {
            "name": "purify",
            "location": 372,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "ungarde": {
            "name": "ungarde",
            "location": 375,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "debracketify": {
            "name": "debracketify",
            "location": 411,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "je2ije": {
            "name": "je2ije",
            "location": 420,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "deancientify": {
            "name": "deancientify",
            "location": 431,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ]
            }
        },
        "compose1": {
            "name": "compose1",
            "location": 448,
            "return": [
                "_Transform[_T]"
            ],
            "arguments": {}
        },
        "apply_yat_and_latin": {
            "name": "apply_yat_and_latin",
            "location": 468,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "expose": {
            "name": "expose",
            "location": 487,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "expose_replacement": {
            "name": "expose_replacement",
            "location": 495,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "strip_suffix": {
            "name": "strip_suffix",
            "location": 503,
            "return": [
                "Tuple[(str, bool)]"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "suffixes": [
                    "Iterable[str]"
                ]
            }
        },
        "insert.pieces": {
            "name": "pieces",
            "location": 84,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {}
        },
        "compose1.composition": {
            "name": "composition",
            "location": 457,
            "return": [],
            "arguments": {
                "arg": []
            }
        }
    },
    "jezik-master/lookup/__init__.py": {
        "part_of_speech": {
            "name": "part_of_speech",
            "location": 21,
            "return": [
                "Optional[PartOfSpeech]"
            ],
            "arguments": {
                "kind": [
                    "str"
                ]
            }
        },
        "lazy_lookup": {
            "name": "lazy_lookup",
            "location": 35,
            "return": [
                "Iterator[Table]"
            ],
            "arguments": {
                "key": [
                    "str"
                ],
                "input_yat": [
                    "str"
                ],
                "output_yat": [
                    "str"
                ]
            }
        },
        "lookup": {
            "name": "lookup",
            "location": 69,
            "return": [
                "Multitable"
            ],
            "arguments": {
                "outer_key": [
                    "str"
                ],
                "input_yat": [
                    "str"
                ],
                "output_yat": [
                    "Optional[str]"
                ]
            }
        },
        "random_key": {
            "name": "random_key",
            "location": 77,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {}
        }
    },
    "jezik-master/lookup/adjective/paradigms.py": {},
    "jezik-master/lookup/adjective/__init__.py": {
        "Adjective.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "accented_keys": [
                    "str"
                ],
                "kind": [
                    "str"
                ],
                "info": [
                    "str"
                ],
                "replacements": [
                    "Tuple[(Replacement, ...)]"
                ],
                "amendments": [
                    "Tuple[(Replacement, ...)]"
                ]
            }
        },
        "Adjective._expose": {
            "name": "_expose",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Adjective._trunk": {
            "name": "_trunk",
            "location": 59,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Adjective._adj_form_is_possible": {
            "name": "_adj_form_is_possible",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "adj_form": [
                    "str"
                ]
            }
        },
        "Adjective._paradigm_to_forms": {
            "name": "_paradigm_to_forms",
            "location": 91,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": [],
                "paradigm": [
                    "AdjParadigm"
                ],
                "i": [
                    "int"
                ],
                "length_inconstant": [
                    "bool"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Adjective.multiforms": {
            "name": "multiforms",
            "location": 145,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/adverb/__init__.py": {
        "Adverb.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "accented_keys": [
                    "str"
                ],
                "kind": [
                    "str"
                ],
                "info": [
                    "str"
                ],
                "replacements": [
                    "Tuple[(Replacement, ...)]"
                ],
                "amendments": [
                    "Tuple[(Replacement, ...)]"
                ]
            }
        },
        "Adverb._expose": {
            "name": "_expose",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Adverb.multiforms": {
            "name": "multiforms",
            "location": 23,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/data/multidict.py": {
        "inner_to_outer": {
            "name": "inner_to_outer",
            "location": 63,
            "return": [
                "Iterator[Tuple[(str, str)]]"
            ],
            "arguments": {
                "accented_keys": [
                    "str"
                ],
                "extra_key": [
                    "str"
                ]
            }
        },
        "Multidict.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Multidict.__getitem__": {
            "name": "__getitem__",
            "location": 22,
            "return": [
                "List[VT]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "KT@@"
                ]
            }
        },
        "Multidict.__setitem__": {
            "name": "__setitem__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "KT@@"
                ],
                "value": [
                    "VT@@"
                ]
            }
        },
        "Multidict.__iter__": {
            "name": "__iter__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Multidict.__len__": {
            "name": "__len__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FancyLookup.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FancyLookup.__getitem__": {
            "name": "__getitem__",
            "location": 107,
            "return": [
                "Iterator[Tuple[(str, Entry)]]"
            ],
            "arguments": {
                "self": [],
                "key_with_mode": [
                    "Tuple[(str, str)]"
                ]
            }
        },
        "FancyLookup.__setitem__": {
            "name": "__setitem__",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inner_key": [
                    "str"
                ],
                "value": [
                    "Entry"
                ]
            }
        },
        "FancyLookup.random_key": {
            "name": "random_key",
            "location": 120,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/data/sort_data.py": {
        "lemma": {
            "name": "lemma",
            "location": 12,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "reversed_lemma": {
            "name": "reversed_lemma",
            "location": 15,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "print_entry": {
            "name": "print_entry",
            "location": 18,
            "return": [],
            "arguments": {
                "header": [],
                "data": [],
                "file": []
            }
        },
        "print_yaml_header": {
            "name": "print_yaml_header",
            "location": 28,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "to_sorted": {
            "name": "to_sorted",
            "location": 32,
            "return": [],
            "arguments": {
                "in_file": [],
                "out_file": [],
                "key": []
            }
        },
        "to_reverse": {
            "name": "to_reverse",
            "location": 40,
            "return": [],
            "arguments": {
                "in_file": [],
                "out_file": []
            }
        },
        "to_direct": {
            "name": "to_direct",
            "location": 43,
            "return": [],
            "arguments": {
                "in_file": [],
                "out_file": []
            }
        }
    },
    "jezik-master/lookup/data/__init__.py": {},
    "jezik-master/lookup/noun/paradigms.py": {
        "m_plural": {
            "name": "m_plural",
            "location": 46,
            "return": [
                "List[List[MorphemeChain]]"
            ],
            "arguments": {
                "suff": [
                    "str"
                ]
            }
        },
        "m_instr": {
            "name": "m_instr",
            "location": 81,
            "return": [
                "List[List[AccentedTuple]]"
            ],
            "arguments": {
                "stem": [
                    "str"
                ]
            }
        },
        "m_voc": {
            "name": "m_voc",
            "location": 104,
            "return": [
                "List[List[AccentedTuple]]"
            ],
            "arguments": {
                "stem": [
                    "str"
                ],
                "anim": [
                    "str"
                ]
            }
        },
        "stem_male": {
            "name": "stem_male",
            "location": 128,
            "return": [
                "NounStem"
            ],
            "arguments": {
                "stem": [
                    "str"
                ],
                "suff": [
                    "str"
                ],
                "anim": [
                    "str"
                ]
            }
        },
        "stem_female": {
            "name": "stem_female",
            "location": 178,
            "return": [
                "NounStem"
            ],
            "arguments": {
                "a": [
                    "bool"
                ]
            }
        },
        "stem_neutral": {
            "name": "stem_neutral",
            "location": 184,
            "return": [
                "NounStem"
            ],
            "arguments": {}
        },
        "NounStem.labeled_endings": {
            "name": "labeled_endings",
            "location": 25,
            "return": [
                "Iterator[LabeledEnding]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/noun/__init__.py": {
        "_apply_neocirk": {
            "name": "_apply_neocirk",
            "location": 15,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "stem": [
                    "str"
                ],
                "lvi": [
                    "Optional[int]"
                ],
                "pvi": [
                    "Optional[int]"
                ],
                "morpheme": [
                    "str"
                ],
                "retraction": [
                    "int"
                ]
            }
        },
        "Noun.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "accented_keys": [
                    "str"
                ],
                "kind": [
                    "str"
                ],
                "info": [
                    "str"
                ],
                "replacements": [
                    "Tuple[(Replacement, ...)]"
                ],
                "amendments": [
                    "Tuple[(Replacement, ...)]"
                ]
            }
        },
        "Noun._expose": {
            "name": "_expose",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Noun._trunk": {
            "name": "_trunk",
            "location": 74,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Noun._noun_form_is_possible": {
            "name": "_noun_form_is_possible",
            "location": 131,
            "return": [
                "bool"
            ],
            "arguments": {
                "noun_form": [
                    "str"
                ],
                "variation": [
                    "List[AccentedTuple]"
                ],
                "paradigm": [
                    "str"
                ]
            }
        },
        "Noun._delete_left_bracket": {
            "name": "_delete_left_bracket",
            "location": 144,
            "return": [
                "List[List[str]]"
            ],
            "arguments": {
                "self": [],
                "stem": [
                    "str"
                ],
                "morpheme": [
                    "str"
                ],
                "accent": [
                    "str"
                ],
                "current_AP": [
                    "str"
                ]
            }
        },
        "Noun._paradigm_to_forms": {
            "name": "_paradigm_to_forms",
            "location": 262,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ],
                "length_inconstant": [
                    "bool"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Noun.multiforms": {
            "name": "multiforms",
            "location": 364,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/verb/paradigms.py": {
        "Present.labeled_endings": {
            "name": "labeled_endings",
            "location": 18,
            "return": [
                "Iterator[LabeledEnding]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Past.labeled_endings": {
            "name": "labeled_endings",
            "location": 44,
            "return": [
                "Iterator[LabeledEnding]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stems.labeled_endings": {
            "name": "labeled_endings",
            "location": 54,
            "return": [
                "Iterator[LabeledEnding]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/lookup/verb/__init__.py": {
        "Verb.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "accented_keys": [
                    "str"
                ],
                "kind": [
                    "str"
                ],
                "info": [
                    "str"
                ],
                "replacements": [
                    "Tuple[(Replacement, ...)]"
                ],
                "amendments": [
                    "Tuple[(Replacement, ...)]"
                ]
            }
        },
        "Verb._verb_form_is_possible": {
            "name": "_verb_form_is_possible",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "label": [
                    "str"
                ],
                "aspect": [
                    "List[str]"
                ]
            }
        },
        "Verb._expose": {
            "name": "_expose",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "form": [
                    "str"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Verb._trunk": {
            "name": "_trunk",
            "location": 49,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Verb._trunk2": {
            "name": "_trunk2",
            "location": 72,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Verb._current_trunk": {
            "name": "_current_trunk",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ],
                "label": [
                    "str"
                ]
            }
        },
        "Verb._paradigm_to_forms": {
            "name": "_paradigm_to_forms",
            "location": 103,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": [],
                "i": [
                    "int"
                ],
                "length_inconstancy": [
                    "bool"
                ],
                "yat": [
                    "str"
                ],
                "latin": [
                    "bool"
                ]
            }
        },
        "Verb.multiforms": {
            "name": "multiforms",
            "location": 141,
            "return": [
                "Iterator[LabeledMultiform]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jezik-master/tests/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 3,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 11,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "pytest_collection_modifyitems": {
            "name": "pytest_collection_modifyitems",
            "location": 14,
            "return": [],
            "arguments": {
                "config": [],
                "items": []
            }
        }
    },
    "jezik-master/tests/test_data.py": {
        "test_no_exceptions": {
            "name": "test_no_exceptions",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_paradigms": {
            "name": "test_paradigms",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_yaml_suffixes": {
            "name": "test_yaml_suffixes",
            "location": 71,
            "return": [],
            "arguments": {}
        }
    },
    "jezik-master/tests/test_lookup.py": {
        "test_nonsense": {
            "name": "test_nonsense",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_inner_notation": {
            "name": "test_inner_notation",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_ije": {
            "name": "test_ije",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_ije2": {
            "name": "test_ije2",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "test_drven": {
            "name": "test_drven",
            "location": 73,
            "return": [],
            "arguments": {}
        },
        "test_gvozden": {
            "name": "test_gvozden",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "test_magarciti": {
            "name": "test_magarciti",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "test_dub": {
            "name": "test_dub",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "test_srp": {
            "name": "test_srp",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "test_sluchaj": {
            "name": "test_sluchaj",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "test_apB": {
            "name": "test_apB",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "test_gpl": {
            "name": "test_gpl",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "test_snjegovi": {
            "name": "test_snjegovi",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "test_multiple_results": {
            "name": "test_multiple_results",
            "location": 121,
            "return": [],
            "arguments": {}
        },
        "test_different_ije": {
            "name": "test_different_ije",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "test_advokatirati": {
            "name": "test_advokatirati",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "test_lll": {
            "name": "test_lll",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "test_abang_paradigm": {
            "name": "test_abang_paradigm",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "test_krnjeme": {
            "name": "test_krnjeme",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "test_mo_mo": {
            "name": "test_mo_mo",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "test_latin": {
            "name": "test_latin",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "test_hmeljem_hmeljom": {
            "name": "test_hmeljem_hmeljom",
            "location": 168,
            "return": [],
            "arguments": {}
        },
        "test_boj_se": {
            "name": "test_boj_se",
            "location": 171,
            "return": [],
            "arguments": {}
        },
        "test_vocative": {
            "name": "test_vocative",
            "location": 175,
            "return": [],
            "arguments": {}
        },
        "test_igla": {
            "name": "test_igla",
            "location": 185,
            "return": [],
            "arguments": {}
        },
        "test_multiple_accents": {
            "name": "test_multiple_accents",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "test_plavosiv": {
            "name": "test_plavosiv",
            "location": 211,
            "return": [],
            "arguments": {}
        },
        "test_predci": {
            "name": "test_predci",
            "location": 216,
            "return": [],
            "arguments": {}
        },
        "test_ambijeenat": {
            "name": "test_ambijeenat",
            "location": 224,
            "return": [],
            "arguments": {}
        },
        "test_gori_gore": {
            "name": "test_gori_gore",
            "location": 231,
            "return": [],
            "arguments": {}
        },
        "test_uzeti": {
            "name": "test_uzeti",
            "location": 244,
            "return": [],
            "arguments": {}
        },
        "test_elong_ov": {
            "name": "test_elong_ov",
            "location": 268,
            "return": [],
            "arguments": {}
        },
        "test_3decl": {
            "name": "test_3decl",
            "location": 274,
            "return": [],
            "arguments": {}
        },
        "test_gen_pl_i": {
            "name": "test_gen_pl_i",
            "location": 280,
            "return": [],
            "arguments": {}
        },
        "test_vol": {
            "name": "test_vol",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "test_poslova": {
            "name": "test_poslova",
            "location": 295,
            "return": [],
            "arguments": {}
        }
    },
    "jezik-master/tests/test_utils.py": {
        "test_ungarde": {
            "name": "test_ungarde",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_ungarde_additional_bang": {
            "name": "test_ungarde_additional_bang",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_garde": {
            "name": "test_garde",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_deyerify": {
            "name": "test_deyerify",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "test_insert": {
            "name": "test_insert",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_prettify": {
            "name": "test_prettify",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_strip_suffix": {
            "name": "test_strip_suffix",
            "location": 76,
            "return": [],
            "arguments": {}
        }
    },
    "jezik-master/tests/__init__.py": {}
}
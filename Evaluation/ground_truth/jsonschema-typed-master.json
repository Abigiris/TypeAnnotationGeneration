{
    "jsonschema-typed-master/setup.py": {},
    "jsonschema-typed-master/jsonschema_typed/plugin.py": {
        "formatwarning": {
            "name": "formatwarning",
            "location": 26,
            "return": [],
            "arguments": {
                "message": [],
                "category": [],
                "filepath": [],
                "lineno": [],
                "line": []
            }
        },
        "plugin": {
            "name": "plugin",
            "location": 417,
            "return": [],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "named_builtin_type": {
            "name": "named_builtin_type",
            "location": 425,
            "return": [
                "Type"
            ],
            "arguments": {
                "ctx": [
                    "Union[(AnalyzeTypeContext, DynamicClassDefContext)]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "API.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resolver": [
                    "RefResolver"
                ],
                "outer_name": [
                    "str"
                ]
            }
        },
        "API.get_type_handler": {
            "name": "get_type_handler",
            "location": 46,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "schema_type": [
                    "str"
                ]
            }
        },
        "API.get_type": {
            "name": "get_type",
            "location": 57,
            "return": [
                "Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "outer": []
            }
        },
        "API._get_type": {
            "name": "_get_type",
            "location": 117,
            "return": [
                "Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "schema_type": [
                    "str"
                ],
                "outer": []
            }
        },
        "APIv4.const": {
            "name": "const",
            "location": 131,
            "return": [
                "LiteralType"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "const": [
                    "Union[(int, str, bool)]"
                ]
            }
        },
        "APIv4.enum": {
            "name": "enum",
            "location": 137,
            "return": [
                "UnionType"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "values": [
                    "List[Union[(str, int)]]"
                ]
            }
        },
        "APIv4.boolean": {
            "name": "boolean",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "schema": []
            }
        },
        "APIv4.object": {
            "name": "object",
            "location": 154,
            "return": [
                "Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "outer": [
                    "bool"
                ]
            }
        },
        "APIv4.array": {
            "name": "array",
            "location": 195,
            "return": [
                "Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "schema": [
                    "Optional[Union[(bool, dict)]]"
                ]
            }
        },
        "APIv4.allOf": {
            "name": "allOf",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "subschema": [
                    "List[dict]"
                ]
            }
        },
        "APIv4.anyOf": {
            "name": "anyOf",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "subschema": [
                    "List"
                ]
            }
        },
        "APIv4.any": {
            "name": "any",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "subschema": []
            }
        },
        "APIv4.ref": {
            "name": "ref",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "ref": [
                    "str"
                ]
            }
        },
        "APIv4.string": {
            "name": "string",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "APIv4.number": {
            "name": "number",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "APIv4.integer": {
            "name": "integer",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "APIv4.default": {
            "name": "default",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "APIv4._basic_new_typeinfo": {
            "name": "_basic_new_typeinfo",
            "location": 285,
            "return": [
                "TypeInfo"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "name": [
                    "str"
                ],
                "basetype_or_fallback": [
                    "Instance"
                ]
            }
        },
        "APIv4._build_typeddict_typeinfo": {
            "name": "_build_typeddict_typeinfo",
            "location": 305,
            "return": [
                "TypeInfo"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ],
                "name": [
                    "str"
                ],
                "items": [
                    "List[str]"
                ],
                "types": [
                    "List[Type]"
                ],
                "required_keys": [
                    "Set[str]"
                ]
            }
        },
        "APIv6.integer": {
            "name": "integer",
            "location": 326,
            "return": [
                "UnionType"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "JSONSchemaPlugin.get_type_analyze_hook": {
            "name": "get_type_analyze_hook",
            "location": 342,
            "return": [
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "JSONSchemaPlugin.get_dynamic_class_hook": {
            "name": "get_dynamic_class_hook",
            "location": 357,
            "return": [
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "JSONSchemaPlugin._load_schema": {
            "name": "_load_schema",
            "location": 363,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "JSONSchemaPlugin.get_additional_deps": {
            "name": "get_additional_deps",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "JSONSchemaPlugin.dyn_class_hook": {
            "name": "dyn_class_hook",
            "location": 371,
            "return": [
                "TypedDictType"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "DynamicClassDefContext"
                ]
            }
        },
        "TypeMaker.__init__": {
            "name": "__init__",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema_path": [
                    "str"
                ],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "api_version": [
                    "type"
                ]
            }
        },
        "TypeMaker._sanitize_name": {
            "name": "_sanitize_name",
            "location": 409,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "TypeMaker.__call__": {
            "name": "__call__",
            "location": 412,
            "return": [
                "Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        },
        "JSONSchemaPlugin.get_type_analyze_hook.callback": {
            "name": "callback",
            "location": 345,
            "return": [
                "TypedDictType"
            ],
            "arguments": {
                "ctx": [
                    "AnalyzeTypeContext"
                ]
            }
        }
    },
    "jsonschema-typed-master/jsonschema_typed/types.py": {
        "JSONSchemaBase": {
            "name": "JSONSchemaBase",
            "location": 11,
            "return": [
                "Type[dict]"
            ],
            "arguments": {
                "schema_path": [
                    "str"
                ]
            }
        }
    },
    "jsonschema-typed-master/jsonschema_typed/__init__.py": {}
}
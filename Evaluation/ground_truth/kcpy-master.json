{
    "kcpy-master/setup.py": {},
    "kcpy-master/kcpy/checkpoint.py": {
        "Checkpoint.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sqlite_file_path": [],
                "db_name": [],
                "consumer_name": [
                    "str"
                ],
                "stream_name": [
                    "str"
                ],
                "shard_id": [
                    "str"
                ]
            }
        },
        "Checkpoint.init_db": {
            "name": "init_db",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Checkpoint.set": {
            "name": "set",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seq_no": [
                    "str"
                ]
            }
        },
        "Checkpoint.get": {
            "name": "get",
            "location": 44,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Checkpoint.reset": {
            "name": "reset",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kcpy-master/kcpy/core.py": {
        "ShardConsumer.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "stream_name": [],
                "shard_id": [],
                "options": [],
                "checkpoint": [
                    "Optional[Checkpoint]"
                ]
            }
        },
        "ShardConsumer.__iter__": {
            "name": "__iter__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "shard_iter_type": [],
                "seq": [
                    "Optional[str]"
                ]
            }
        },
        "ShardConsumerProcess.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "stream_name": [],
                "shard_id": [],
                "options": [],
                "checkpoint": [
                    "Optional[Checkpoint]"
                ]
            }
        },
        "ShardConsumerProcess.run": {
            "name": "run",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShardConsumerProcess.empty": {
            "name": "empty",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShardConsumerProcess.get_record": {
            "name": "get_record",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamConsumer.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream_name": [
                    "str"
                ],
                "consumer_name": [
                    "Optional[str]"
                ],
                "checkpoint": [
                    "bool"
                ],
                "checkpoint_db_file_path": [
                    "str"
                ],
                "checkpoint_db_name": [
                    "str"
                ]
            }
        },
        "StreamConsumer.__iter__": {
            "name": "__iter__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kcpy-master/kcpy/__init__.py": {},
    "kcpy-master/t/__init__.py": {},
    "kcpy-master/t/unit/test_core.py": {
        "TestCaseKcpy.setup": {
            "name": "setup",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.teardown": {
            "name": "teardown",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.get_kinesis_client": {
            "name": "get_kinesis_client",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.create_stream": {
            "name": "create_stream",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "stream_name": [],
                "num_of_shards": []
            }
        },
        "TestCaseKcpy.fake_records": {
            "name": "fake_records",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "stream_name": [],
                "count": []
            }
        },
        "TestCaseKcpy.test_get_records_from_stream_with_single_shard": {
            "name": "test_get_records_from_stream_with_single_shard",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.test_get_records_from_stream_with_two_shards": {
            "name": "test_get_records_from_stream_with_two_shards",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.test_checkpoint_storage": {
            "name": "test_checkpoint_storage",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCaseKcpy.test_get_records_with_checkpoint": {
            "name": "test_get_records_with_checkpoint",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kcpy-master/t/unit/__init__.py": {}
}
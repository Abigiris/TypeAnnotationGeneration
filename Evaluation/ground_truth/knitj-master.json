{
    "knitj-master/knitj/cell.py": {
        "Hash.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Hash.__eq__": {
            "name": "__eq__",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "Hash.__hash__": {
            "name": "__hash__",
            "location": 33,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.__repr__": {
            "name": "__repr__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.value": {
            "name": "value",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.from_string": {
            "name": "from_string",
            "location": 47,
            "return": [
                "'Hash'"
            ],
            "arguments": {
                "cls": [],
                "s": [
                    "str"
                ]
            }
        },
        "BaseCell.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ]
            }
        },
        "BaseCell.hashid": {
            "name": "hashid",
            "location": 57,
            "return": [
                "Hash"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseCell.html": {
            "name": "html",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseCell.to_html": {
            "name": "to_html",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ]
            }
        },
        "TextCell.__repr__": {
            "name": "__repr__",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.to_html": {
            "name": "to_html",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.__eq__": {
            "name": "__eq__",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "CodeCell.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "CodeCell.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.__eq__": {
            "name": "__eq__",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "CodeCell.code": {
            "name": "code",
            "location": 120,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.update_flags": {
            "name": "update_flags",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "'CodeCell'"
                ]
            }
        },
        "CodeCell.append_stream": {
            "name": "append_stream",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str"
                ]
            }
        },
        "CodeCell.set_output": {
            "name": "set_output",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "Dict[(MIME, str)]"
                ]
            }
        },
        "CodeCell.set_error": {
            "name": "set_error",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str"
                ]
            }
        },
        "CodeCell.reset": {
            "name": "reset",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.set_done": {
            "name": "set_done",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.done": {
            "name": "done",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.to_html": {
            "name": "to_html",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "JinjaCell.__init__": {
            "name": "__init__",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "template": [
                    "str"
                ]
            }
        },
        "JinjaCell.append_stream": {
            "name": "append_stream",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/knitj/cli.py": {
        "parse_cli": {
            "name": "parse_cli",
            "location": 28,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "maybe_input": {
            "name": "maybe_input",
            "location": 93,
            "return": [
                "Iterator[IO[str]]"
            ],
            "arguments": {
                "path": [
                    "Optional[Path]"
                ]
            }
        },
        "maybe_output": {
            "name": "maybe_output",
            "location": 102,
            "return": [
                "Iterator[IO[str]]"
            ],
            "arguments": {
                "path": [
                    "Optional[Path]"
                ]
            }
        }
    },
    "knitj-master/knitj/convert.py": {
        "render_index": {
            "name": "render_index",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "cells": [
                    "str"
                ],
                "client": [
                    "bool"
                ],
                "template": [
                    "Path"
                ]
            }
        }
    },
    "knitj-master/knitj/document.py": {
        "Document.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "Parser"
                ]
            }
        },
        "Document.items": {
            "name": "items",
            "location": 27,
            "return": [
                "Iterator[Tuple[(Hash, BaseCell)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__iter__": {
            "name": "__iter__",
            "location": 30,
            "return": [
                "Iterator[BaseCell]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__getitem__": {
            "name": "__getitem__",
            "location": 33,
            "return": [
                "BaseCell"
            ],
            "arguments": {
                "self": [],
                "hashid": [
                    "Hash"
                ]
            }
        },
        "Document.__len__": {
            "name": "__len__",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.frontmatter": {
            "name": "frontmatter",
            "location": 40,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.hashes": {
            "name": "hashes",
            "location": 43,
            "return": [
                "List[Hash]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.process_message": {
            "name": "process_message",
            "location": 46,
            "return": [
                "Optional[BaseCell]"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "jupy.Message"
                ],
                "hashid": [
                    "Optional[Hash]"
                ]
            }
        },
        "Document.load_output_from_html": {
            "name": "load_output_from_html",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": [
                    "str"
                ]
            }
        },
        "Document.update_from_source": {
            "name": "update_from_source",
            "location": 105,
            "return": [
                "Tuple[(List[BaseCell], List[BaseCell])]"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/knitj/kernel.py": {
        "Kernel.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "Callable[([jupy.Message, Optional[Hash]], object)]"
                ],
                "kernel": [
                    "str"
                ]
            }
        },
        "Kernel.start": {
            "name": "start",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.restart": {
            "name": "restart",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.interrupt": {
            "name": "interrupt",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.execute": {
            "name": "execute",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hashid": [
                    "Hash"
                ],
                "code": [
                    "str"
                ]
            }
        },
        "Kernel._iopub_receiver.partial": {
            "name": "partial",
            "location": 78,
            "return": [
                "Dict"
            ],
            "arguments": {}
        },
        "Kernel._shell_receiver.partial": {
            "name": "partial",
            "location": 89,
            "return": [
                "Dict"
            ],
            "arguments": {}
        }
    },
    "knitj-master/knitj/parser.py": {
        "parse_markdown": {
            "name": "parse_markdown",
            "location": 32,
            "return": [
                "Tuple[(Optional[str], List[BaseCell])]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "parse_python": {
            "name": "parse_python",
            "location": 68,
            "return": [
                "Tuple[(Optional[str], List[BaseCell])]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "Parser.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fmt": [
                    "str"
                ]
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 25,
            "return": [
                "Tuple[(Optional[Dict[(str, Any)]], List[BaseCell])]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/knitj/server.py": {
        "Broadcaster.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wss": [
                    "Set[web.WebSocketResponse]"
                ]
            }
        },
        "Broadcaster.register_message": {
            "name": "register_message",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Dict"
                ]
            }
        },
        "KnitjServer.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "os.PathLike"
                ],
                "output": [
                    "os.PathLike"
                ],
                "fmt": [
                    "str"
                ],
                "browser": [
                    "webbrowser.BaseBrowser"
                ],
                "kernel": [
                    "str"
                ]
            }
        },
        "KnitjServer.update_all": {
            "name": "update_all",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Dict"
                ]
            }
        },
        "KnitjServer.get_index": {
            "name": "get_index",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "bool"
                ]
            }
        },
        "KnitjServer._kernel_handler": {
            "name": "_kernel_handler",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "jupy.Message"
                ],
                "hashid": [
                    "Optional[Hash]"
                ]
            }
        },
        "KnitjServer._ws_msg_handler": {
            "name": "_ws_msg_handler",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Dict"
                ]
            }
        },
        "KnitjServer._source_handler": {
            "name": "_source_handler",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/knitj/source.py": {
        "FileChangedHandler.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "'Queue[str]'"
                ]
            }
        },
        "FileChangedHandler._queue_modified": {
            "name": "_queue_modified",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "FileSystemEvent"
                ]
            }
        },
        "FileChangedHandler.on_modified": {
            "name": "on_modified",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "FileSystemEvent"
                ]
            }
        },
        "FileChangedHandler.on_created": {
            "name": "on_created",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "FileSystemEvent"
                ]
            }
        },
        "SourceWatcher.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "Callable[([str], None)]"
                ],
                "path": [
                    "os.PathLike"
                ]
            }
        }
    },
    "knitj-master/knitj/webserver.py": {
        "init_webapp": {
            "name": "init_webapp",
            "location": 39,
            "return": [
                "web.Application"
            ],
            "arguments": {
                "get_index": [
                    "Callable[([], str)]"
                ],
                "ws_msg_handler": [
                    "Callable[([Dict], None)]"
                ]
            }
        }
    },
    "knitj-master/knitj/__init__.py": {},
    "knitj-master/knitj/jupyter_messaging/message.py": {
        "parse": {
            "name": "parse",
            "location": 164,
            "return": [
                "BaseMessage"
            ],
            "arguments": {
                "msg": [
                    "Dict"
                ]
            }
        },
        "MsgType.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Header.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Header.__repr__": {
            "name": "__repr__",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.__repr__": {
            "name": "__repr__",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.msg_id": {
            "name": "msg_id",
            "location": 88,
            "return": [
                "UUID"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.msg_type": {
            "name": "msg_type",
            "location": 92,
            "return": [
                "MsgType"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteRequestMessage.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyMessage.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamMessage.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayDataMessage.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteInputMessage.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteResultMessage.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorMessage.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelStatusMessage.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShutdownReplyMessage.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "colstr.__new__": {
            "name": "__new__",
            "location": 183,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "s": [
                    "Any"
                ],
                "color": [
                    "str"
                ]
            }
        },
        "colstr.__init__": {
            "name": "__init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "Any"
                ],
                "color": [
                    "str"
                ]
            }
        },
        "colstr.__len__": {
            "name": "__len__",
            "location": 192,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/knitj/jupyter_messaging/__init__.py": {},
    "knitj-master/knitj/jupyter_messaging/content/content.py": {
        "parse_execute_reply": {
            "name": "parse_execute_reply",
            "location": 105,
            "return": [
                "BaseExecuteReplyContent"
            ],
            "arguments": {
                "content": [
                    "Dict"
                ]
            }
        },
        "BaseContent.__repr__": {
            "name": "__repr__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteRequestContent.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyOkContent.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyErrorContent.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyAbortedContent.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamContent.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayDataContent.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteInputContent.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteResultContent.__init__": {
            "name": "__init__",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelStatusContent.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShutdownReplyContent.__init__": {
            "name": "__init__",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/knitj/jupyter_messaging/content/__init__.py": {},
    "knitj-master/stubs/bs4.py": {
        "_Tag.find": {
            "name": "find",
            "location": 6,
            "return": [
                "'_Tag'"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "id": [
                    "str"
                ],
                "class_": [
                    "str"
                ]
            }
        },
        "_Tag.find_all": {
            "name": "find_all",
            "location": 7,
            "return": [
                "List['_Tag']"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "class_": [
                    "str"
                ]
            }
        },
        "_Tag.__getitem__": {
            "name": "__getitem__",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str"
                ]
            }
        },
        "BeautifulSoup.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": [
                    "str"
                ],
                "parser": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/stubs/jupyter_client.py": {
        "KernelClient.execute": {
            "name": "execute",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "KernelClient.shutdown": {
            "name": "shutdown",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelClient.get_shell_msg": {
            "name": "get_shell_msg",
            "location": 7,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "KernelClient.get_iopub_msg": {
            "name": "get_iopub_msg",
            "location": 8,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "KernelClient.start_channels": {
            "name": "start_channels",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelManager.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kernel_name": [
                    "str"
                ]
            }
        },
        "KernelManager.start_kernel": {
            "name": "start_kernel",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelManager.restart_kernel": {
            "name": "restart_kernel",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelManager.interrupt_kernel": {
            "name": "interrupt_kernel",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelManager.shutdown_kernel": {
            "name": "shutdown_kernel",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelManager.client": {
            "name": "client",
            "location": 18,
            "return": [
                "KernelClient"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/stubs/misaka.py": {
        "Markdown.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rndr": [
                    "HtmlRenderer"
                ],
                "extensions": [
                    "List[str]"
                ]
            }
        },
        "Markdown.__call__": {
            "name": "__call__",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "markdown": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/stubs/aiohttp/web.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "Handler"
                ]
            }
        },
        "Router.add_static": {
            "name": "add_static",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "append_version": [
                    "bool"
                ]
            }
        },
        "Router.add_get": {
            "name": "add_get",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "handler": [
                    "Handler"
                ]
            }
        },
        "Application.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.__getitem__": {
            "name": "__getitem__",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "Application.__setitem__": {
            "name": "__setitem__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "Any"
                ]
            }
        },
        "AppRunner.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "Application"
                ]
            }
        },
        "WebSocketResponse.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "autoclose": [
                    "bool"
                ]
            }
        },
        "WebSocketResponse.__aiter__": {
            "name": "__aiter__",
            "location": 51,
            "return": [
                "'WebSocketResponse'"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPSite.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "runner": [
                    "AppRunner"
                ],
                "address": [
                    "str"
                ],
                "port": [
                    "int"
                ]
            }
        }
    },
    "knitj-master/stubs/aiohttp/__init__.py": {
        "WSMessage.json": {
            "name": "json",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/stubs/ansi2html/style.py": {
        "get_styles": {
            "name": "get_styles",
            "location": 6,
            "return": [
                "List[Rule]"
            ],
            "arguments": {}
        }
    },
    "knitj-master/stubs/ansi2html/__init__.py": {
        "Ansi2HTMLConverter.convert": {
            "name": "convert",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ansi": [
                    "str"
                ],
                "full": [
                    "bool"
                ]
            }
        }
    },
    "knitj-master/stubs/pygments/formatters.py": {
        "Formatter.get_style_defs": {
            "name": "get_style_defs",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style": [
                    "Style"
                ]
            }
        }
    },
    "knitj-master/stubs/pygments/lexers.py": {},
    "knitj-master/stubs/pygments/styles.py": {
        "get_style_by_name": {
            "name": "get_style_by_name",
            "location": 3,
            "return": [
                "Style"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "knitj-master/stubs/pygments/__init__.py": {
        "highlight": {
            "name": "highlight",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "code": [
                    "str"
                ],
                "lexer": [
                    "Lexer"
                ],
                "formatter": [
                    "Formatter"
                ]
            }
        }
    },
    "knitj-master/stubs/watchdog/events.py": {},
    "knitj-master/stubs/watchdog/observers.py": {
        "Observer.start": {
            "name": "start",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Observer.schedule": {
            "name": "schedule",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_handler": [
                    "FileSystemEventHandler"
                ],
                "path": [
                    "str"
                ],
                "recursive": [
                    "bool"
                ]
            }
        }
    },
    "knitj-master/stubs/watchdog/__init__.py": {},
    "knitj-master/stubs/zmq/asyncio.py": {
        "Poller.register": {
            "name": "register",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "socket": [
                    "Any"
                ]
            }
        }
    },
    "knitj-master/stubs/zmq/__init__.py": {}
}
{
    "librium-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 47,
            "return": [],
            "arguments": {}
        }
    },
    "librium-master/librium/__init__.py": {},
    "librium-master/librium/__main__.py": {},
    "librium-master/librium/__version__.py": {},
    "librium-master/librium/core/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "create_app.send_favicon": {
            "name": "send_favicon",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "create_app.url_for_self": {
            "name": "url_for_self",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "librium-master/librium/core/assets.py": {},
    "librium-master/librium/core/utils.py": {
        "parse_read_arg": {
            "name": "parse_read_arg",
            "location": 4,
            "return": [
                "Tuple[(str, Optional[bool])]"
            ],
            "arguments": {
                "status": [
                    "Union[(int, bool, str, None)]"
                ]
            }
        }
    },
    "librium-master/librium/core/__init__.py": {},
    "librium-master/librium/database/__init__.py": {},
    "librium-master/librium/database/pony/db.py": {
        "Book.hex_uuid": {
            "name": "hex_uuid",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.name": {
            "name": "name",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Book.authors_deep": {
            "name": "authors_deep",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.a_id": {
            "name": "a_id",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.g_id": {
            "name": "g_id",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.p_id": {
            "name": "p_id",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.l_id": {
            "name": "l_id",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Book.s_id": {
            "name": "s_id",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Author.make_uuid": {
            "name": "make_uuid",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Author.books_in_series": {
            "name": "books_in_series",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Author.books_standalone": {
            "name": "books_standalone",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Series.has_unread_books": {
            "name": "has_unread_books",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Series.has_read_books": {
            "name": "has_read_books",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Series.books_read": {
            "name": "books_read",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Series.books_unread": {
            "name": "books_unread",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeriesIndex.index": {
            "name": "index",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "librium-master/librium/database/pony/__init__.py": {},
    "librium-master/librium/database/sqlalchemy/db.py": {
        "init_db": {
            "name": "init_db",
            "location": 29,
            "return": [],
            "arguments": {}
        }
    },
    "librium-master/librium/database/sqlalchemy/models.py": {
        "make_author_name": {
            "name": "make_author_name",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "context": []
            }
        },
        "Book.add": {
            "name": "add",
            "location": 96,
            "return": [],
            "arguments": {
                "rel": [
                    "InstrumentedList"
                ],
                "table": [
                    "Base"
                ],
                "value": [
                    "dict"
                ]
            }
        },
        "Book.remove": {
            "name": "remove",
            "location": 104,
            "return": [],
            "arguments": {
                "rel": [
                    "InstrumentedList"
                ],
                "table": [
                    "Base"
                ],
                "value": [
                    "dict"
                ]
            }
        },
        "Book.price_": {
            "name": "price_",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "librium-master/librium/database/sqlalchemy/__init__.py": {},
    "librium-master/librium/views/api.py": {
        "get_data": {
            "name": "get_data",
            "location": 12,
            "return": [],
            "arguments": {
                "table": []
            }
        },
        "series": {
            "name": "series",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "genres": {
            "name": "genres",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "languages": {
            "name": "languages",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "publishers": {
            "name": "publishers",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "add": {
            "name": "add",
            "location": 40,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "librium-master/librium/views/book.py": {
        "add_or_update": {
            "name": "add_or_update",
            "location": 10,
            "return": [],
            "arguments": {
                "book": [
                    "Book"
                ],
                "args": []
            }
        },
        "index": {
            "name": "index",
            "location": 46,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "add": {
            "name": "add",
            "location": 68,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "librium-master/librium/views/covers.py": {},
    "librium-master/librium/views/main.py": {
        "paginate": {
            "name": "paginate",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "length": [
                    "int"
                ]
            }
        },
        "get_raw": {
            "name": "get_raw",
            "location": 26,
            "return": [
                "Tuple[(Union[(list, Any)], List[str], int)]"
            ],
            "arguments": {
                "table": [
                    "db.Entity"
                ],
                "args": [
                    "dict"
                ],
                "filters": [
                    "dict"
                ],
                "attrib": [
                    "str"
                ],
                "order": [
                    "LambdaType"
                ]
            }
        },
        "get_authors": {
            "name": "get_authors",
            "location": 54,
            "return": [
                "Dict[(str, Union[(List[AuthorType], int)])]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_series": {
            "name": "get_series",
            "location": 132,
            "return": [
                "Dict[(str, Union[(List[SeriesType], int)])]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_books": {
            "name": "get_books",
            "location": 153,
            "return": [
                "Dict[(str, Union[(List[BookType], int)])]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_years": {
            "name": "get_years",
            "location": 165,
            "return": [
                "Dict[(str, Union[(List[YearType], int)])]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_genres": {
            "name": "get_genres",
            "location": 192,
            "return": [
                "Dict[(str, Union[(List[GenreType], int)])]"
            ],
            "arguments": {
                "args": []
            }
        },
        "index": {
            "name": "index",
            "location": 213,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "authors": {
            "name": "authors",
            "location": 222,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "series": {
            "name": "series",
            "location": 228,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "books": {
            "name": "books",
            "location": 234,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "years": {
            "name": "years",
            "location": 240,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "genres": {
            "name": "genres",
            "location": 246,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "get_authors._add_book": {
            "name": "_add_book",
            "location": 68,
            "return": [
                "dict"
            ],
            "arguments": {
                "book": [
                    "Book"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "index.url_for_self": {
            "name": "url_for_self",
            "location": 214,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "get_authors._read": {
            "name": "_read",
            "location": 94,
            "return": [
                "int"
            ],
            "arguments": {
                "series": []
            }
        },
        "get_authors._unread": {
            "name": "_unread",
            "location": 105,
            "return": [
                "int"
            ],
            "arguments": {
                "series": []
            }
        },
        "get_authors._series": {
            "name": "_series",
            "location": 116,
            "return": [
                "dict"
            ],
            "arguments": {
                "series": [],
                "books": []
            }
        }
    },
    "librium-master/librium/views/utilities.py": {
        "SeriesSchema.clean": {
            "name": "clean",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BookSchema.parse_series": {
            "name": "parse_series",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BookSchema.parse_isbn": {
            "name": "parse_isbn",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "librium-master/librium/views/__init__.py": {},
    "librium-master/utils/covers.py": {
        "run": {
            "name": "run",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "librium-master/utils/export.py": {
        "make_author": {
            "name": "make_author",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "author": [
                    "Author"
                ]
            }
        },
        "make_series": {
            "name": "make_series",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "series": [
                    "SeriesIndex"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 56,
            "return": [],
            "arguments": {}
        }
    }
}
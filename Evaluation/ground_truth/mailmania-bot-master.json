{
    "mailmania-bot-master/app.py": {
        "prepare_email": {
            "name": "prepare_email",
            "location": 29,
            "return": [
                "Dict[('str', object)]"
            ],
            "arguments": {
                "subject": [
                    "Text"
                ],
                "body": [
                    "Text"
                ]
            }
        },
        "prepare_destination": {
            "name": "prepare_destination",
            "location": 45,
            "return": [
                "Dict[(Text, Iterable[Text])]"
            ],
            "arguments": {
                "recipients": [
                    "Iterable[Text]"
                ]
            }
        },
        "send_email_ses": {
            "name": "send_email_ses",
            "location": 49,
            "return": [
                "Dict[(Text, Text)]"
            ],
            "arguments": {
                "ses_client": [
                    "BaseClient"
                ],
                "recipient": [
                    "Text"
                ],
                "subject": [
                    "Text"
                ],
                "body": [
                    "Text"
                ]
            }
        },
        "get_ses_client": {
            "name": "get_ses_client",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "send_email": {
            "name": "send_email",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "notify_admin": {
            "name": "notify_admin",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "error_trace": [
                    "Text"
                ]
            }
        },
        "create_new_branch": {
            "name": "create_new_branch",
            "location": 96,
            "return": [
                "ProjectBranch"
            ],
            "arguments": {
                "project": [
                    "Project"
                ],
                "mr_id": [
                    "Text"
                ]
            }
        },
        "do_backport": {
            "name": "do_backport",
            "location": 120,
            "return": [
                "ProjectMergeRequest"
            ],
            "arguments": {
                "project": [
                    "Project"
                ],
                "mr_id": [
                    "Text"
                ]
            }
        },
        "has_label": {
            "name": "has_label",
            "location": 141,
            "return": [
                "bool"
            ],
            "arguments": {
                "labels": [
                    "Iterable[Text]"
                ],
                "label_name": [
                    "Text"
                ]
            }
        },
        "is_backport_required": {
            "name": "is_backport_required",
            "location": 148,
            "return": [
                "Tuple[(bool, Text)]"
            ],
            "arguments": {
                "request_body": [
                    "Dict[(Any, Any)]"
                ]
            }
        },
        "_decide_backport": {
            "name": "_decide_backport",
            "location": 160,
            "return": [
                "Tuple[(bool, Text)]"
            ],
            "arguments": {
                "target_branch": [
                    "Text"
                ],
                "labels": [
                    "Iterable[Text]"
                ],
                "state": [
                    "Text"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 174,
            "return": [
                "Text"
            ],
            "arguments": {}
        }
    },
    "mailmania-bot-master/test_app.py": {
        "captured_output": {
            "name": "captured_output",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_prepare_email": {
            "name": "test_prepare_email",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_prepare_destination": {
            "name": "test_prepare_destination",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "AWSTests.setUp": {
            "name": "setUp",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AWSTests.tearDown": {
            "name": "tearDown",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AWSTests.test_get_ses_client": {
            "name": "test_get_ses_client",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AWSTests.test_send_email": {
            "name": "test_send_email",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "mock_method": [],
                "mock_client": []
            }
        },
        "AWSTests.test_send_email_ses": {
            "name": "test_send_email_ses",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AWSTests.test_send_email_ses_with_bad_email": {
            "name": "test_send_email_ses_with_bad_email",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AWSTests.test_send_email_ses_uses_sender_env": {
            "name": "test_send_email_ses_uses_sender_env",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "mock_client": []
            }
        },
        "AWSTests.test_send_email_ses_new_sender": {
            "name": "test_send_email_ses_new_sender",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "mock_client": []
            }
        },
        "AWSTests.test_notify_admin": {
            "name": "test_notify_admin",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "mock_client": []
            }
        },
        "AWSTests.test_notify_admin_silenced": {
            "name": "test_notify_admin_silenced",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "mock_client": []
            }
        },
        "GitlabTests.setUp": {
            "name": "setUp",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.tearDown": {
            "name": "tearDown",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_create_new_branch": {
            "name": "test_create_new_branch",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_create_new_branch_when_exists": {
            "name": "test_create_new_branch_when_exists",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_create_new_branch_gitlab_error": {
            "name": "test_create_new_branch_gitlab_error",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_do_backport": {
            "name": "test_do_backport",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_do_backport_with_errors": {
            "name": "test_do_backport_with_errors",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_backport_if_new_branch_creation_fails": {
            "name": "test_backport_if_new_branch_creation_fails",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_has_label": {
            "name": "test_has_label",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_has_label_with_no_matches": {
            "name": "test_has_label_with_no_matches",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_label_with_multiple_matches": {
            "name": "test_label_with_multiple_matches",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_is_backport_required_simple": {
            "name": "test_is_backport_required_simple",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "mock_method": []
            }
        },
        "GitlabTests.test_decide_backport": {
            "name": "test_decide_backport",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_decide_backport_non_master_destination": {
            "name": "test_decide_backport_non_master_destination",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_decide_backport_with_no_labels": {
            "name": "test_decide_backport_with_no_labels",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_decide_backport_non_merged_request": {
            "name": "test_decide_backport_non_merged_request",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index": {
            "name": "test_index",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_correct_response_for_request": {
            "name": "test_index_correct_response_for_request",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_backport_not_required": {
            "name": "test_index_backport_not_required",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_backport_required": {
            "name": "test_index_backport_required",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_logs_error_tracebacks": {
            "name": "test_index_logs_error_tracebacks",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_notifies_admin_when_backport_fails": {
            "name": "test_index_notifies_admin_when_backport_fails",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_with_no_gitlab_token": {
            "name": "test_index_with_no_gitlab_token",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_when_gitlab_token_match_fails": {
            "name": "test_index_when_gitlab_token_match_fails",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitlabTests.test_index_with_get_requests": {
            "name": "test_index_with_get_requests",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "morning-cd-listens-master/faasport.py": {
        "always_": {
            "name": "always_",
            "location": 34,
            "return": [
                "Generator"
            ],
            "arguments": {}
        },
        "no_listens_in_db": {
            "name": "no_listens_in_db",
            "location": 57,
            "return": [
                "Generator"
            ],
            "arguments": {}
        },
        "a_listen_exists": {
            "name": "a_listen_exists",
            "location": 62,
            "return": [
                "Generator"
            ],
            "arguments": {
                "fields": [
                    "Dict"
                ]
            }
        },
        "a_spotify_song_exists_with_the_id": {
            "name": "a_spotify_song_exists_with_the_id",
            "location": 89,
            "return": [
                "Generator"
            ],
            "arguments": {
                "id": [
                    "str"
                ]
            }
        },
        "its_day": {
            "name": "its_day",
            "location": 97,
            "return": [
                "Generator"
            ],
            "arguments": {}
        },
        "its_night": {
            "name": "its_night",
            "location": 111,
            "return": [
                "Generator"
            ],
            "arguments": {}
        },
        "port": {
            "name": "port",
            "location": 125,
            "return": [
                "Response"
            ],
            "arguments": {
                "request": [
                    "Request"
                ]
            }
        },
        "_build_aws_event": {
            "name": "_build_aws_event",
            "location": 131,
            "return": [
                "Dict"
            ],
            "arguments": {
                "request": [
                    "Request"
                ]
            }
        },
        "_pluck_response": {
            "name": "_pluck_response",
            "location": 144,
            "return": [
                "Response"
            ],
            "arguments": {
                "aws_response": [
                    "Dict"
                ]
            }
        }
    },
    "morning-cd-listens-master/features/environment.py": {
        "before_scenario": {
            "name": "before_scenario",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "behave.runner.Context"
                ],
                "scenario": [
                    "behave.model.Scenario"
                ]
            }
        }
    },
    "morning-cd-listens-master/features/__init__.py": {},
    "morning-cd-listens-master/features/fixtures/spotify.py": {
        "make_post_client_credentials": {
            "name": "make_post_client_credentials",
            "location": 4,
            "return": [
                "Response"
            ],
            "arguments": {}
        },
        "make_get_track_whispers_request": {
            "name": "make_get_track_whispers_request",
            "location": 16,
            "return": [
                "Response"
            ],
            "arguments": {}
        }
    },
    "morning-cd-listens-master/features/fixtures/__init__.py": {},
    "morning-cd-listens-master/features/steps/submit_listen_steps.py": {
        "step_impl": {
            "name": "step_impl",
            "location": 144,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "submit_listen_mock_network": {
            "name": "submit_listen_mock_network",
            "location": 149,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "morning-cd-listens-master/features/support/fixtures.py": {
        "with_aws_lambda_environment_variables": {
            "name": "with_aws_lambda_environment_variables",
            "location": 14,
            "return": [
                "Generator"
            ],
            "arguments": {
                "context": [
                    "behave.runner.Context"
                ],
                "database_connection_string": [
                    "str"
                ]
            }
        },
        "with_empty_db": {
            "name": "with_empty_db",
            "location": 29,
            "return": [
                "Generator"
            ],
            "arguments": {
                "context": [
                    "behave.runner.Context"
                ],
                "database_connection_string": [
                    "str"
                ]
            }
        }
    },
    "morning-cd-listens-master/features/support/__init__.py": {},
    "morning-cd-listens-master/listens/context.py": {},
    "morning-cd-listens-master/listens/use_listens.py": {
        "get_listen": {
            "name": "get_listen",
            "location": 11,
            "return": [
                "Listen"
            ],
            "arguments": {
                "context": [
                    "Context"
                ],
                "listen_id": [
                    "str"
                ]
            }
        },
        "get_listens": {
            "name": "get_listens",
            "location": 15,
            "return": [
                "List[Listen]"
            ],
            "arguments": {
                "context": [
                    "Context"
                ],
                "limit": [
                    "int"
                ],
                "sort_order": [
                    "SortOrder"
                ],
                "before_utc": [
                    "Optional[datetime]"
                ],
                "after_utc": [
                    "Optional[datetime]"
                ]
            }
        },
        "submit_listen": {
            "name": "submit_listen",
            "location": 28,
            "return": [
                "Listen"
            ],
            "arguments": {
                "context": [
                    "Context"
                ],
                "listen_input": [
                    "ListenInput"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/__init__.py": {},
    "morning-cd-listens-master/listens/abc/db_gateway.py": {
        "DbGateway.add_listen": {
            "name": "add_listen",
            "location": 11,
            "return": [
                "Listen"
            ],
            "arguments": {
                "self": [],
                "listen_input": [
                    "ListenInput"
                ]
            }
        },
        "DbGateway.fetch_listen": {
            "name": "fetch_listen",
            "location": 15,
            "return": [
                "Listen"
            ],
            "arguments": {
                "self": [],
                "listen_id": [
                    "str"
                ]
            }
        },
        "DbGateway.fetch_listens": {
            "name": "fetch_listens",
            "location": 19,
            "return": [
                "List[Listen]"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "int"
                ],
                "sort_time": [
                    "SortOrder"
                ],
                "before_utc": [
                    "Optional[datetime]"
                ],
                "after_utc": [
                    "Optional[datetime]"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/abc/music_gateway.py": {
        "MusicGateway.song_exists": {
            "name": "song_exists",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "song_id": [
                    "str"
                ],
                "song_provider": [
                    "MusicProvider"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/abc/notification_gateway.py": {
        "NotificationGateway.announce_listen_added": {
            "name": "announce_listen_added",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listen": [
                    "Listen"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/abc/sunlight_gateway.py": {
        "SunlightGateway.fetch_sunlight_window": {
            "name": "fetch_sunlight_window",
            "location": 10,
            "return": [
                "SunlightWindow"
            ],
            "arguments": {
                "self": [],
                "iana_timezone": [
                    "str"
                ],
                "on_date": [
                    "date"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/abc/__init__.py": {},
    "morning-cd-listens-master/listens/definitions/exceptions.py": {},
    "morning-cd-listens-master/listens/definitions/invalid_reason.py": {},
    "morning-cd-listens-master/listens/definitions/listen.py": {},
    "morning-cd-listens-master/listens/definitions/listen_input.py": {},
    "morning-cd-listens-master/listens/definitions/music_provider.py": {},
    "morning-cd-listens-master/listens/definitions/sort_order.py": {},
    "morning-cd-listens-master/listens/definitions/sunlight_window.py": {},
    "morning-cd-listens-master/listens/definitions/__init__.py": {},
    "morning-cd-listens-master/listens/delivery/__init__.py": {},
    "morning-cd-listens-master/listens/delivery/aws_lambda/rest.py": {
        "handler": {
            "name": "handler",
            "location": 29,
            "return": [
                "Dict"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ],
                "context": [
                    "Dict"
                ]
            }
        },
        "submit_listen_handler": {
            "name": "submit_listen_handler",
            "location": 36,
            "return": [
                "Dict"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ],
                "context": [
                    "Dict"
                ]
            }
        },
        "get_listen_handler": {
            "name": "get_listen_handler",
            "location": 65,
            "return": [
                "Dict"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ],
                "context": [
                    "Dict"
                ]
            }
        },
        "get_listens_handler": {
            "name": "get_listens_handler",
            "location": 93,
            "return": [
                "Dict"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ],
                "context": [
                    "Dict"
                ]
            }
        },
        "router": {
            "name": "router",
            "location": 120,
            "return": [
                "util.AwsHandler"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/delivery/aws_lambda/types.py": {},
    "morning-cd-listens-master/listens/delivery/aws_lambda/util.py": {
        "create_default_context": {
            "name": "create_default_context",
            "location": 24,
            "return": [
                "Context"
            ],
            "arguments": {
                "db_connection_string": [
                    "str"
                ],
                "sunlight_service_api_key": [
                    "str"
                ],
                "spotify_client_id": [
                    "str"
                ],
                "spotify_client_secret": [
                    "str"
                ],
                "listen_added_topic_arn": [
                    "str"
                ]
            }
        },
        "pluck_get_listens_params": {
            "name": "pluck_get_listens_params",
            "location": 40,
            "return": [
                "GetListensParams"
            ],
            "arguments": {
                "query_string_parameters": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "_pluck_datetime": {
            "name": "_pluck_datetime",
            "location": 52,
            "return": [
                "datetime"
            ],
            "arguments": {
                "dt_str": [
                    "str"
                ]
            }
        },
        "build_listen": {
            "name": "build_listen",
            "location": 56,
            "return": [
                "Dict"
            ],
            "arguments": {
                "listen": [
                    "Listen"
                ]
            }
        },
        "pluck_listen_input": {
            "name": "pluck_listen_input",
            "location": 68,
            "return": [
                "ListenInput"
            ],
            "arguments": {
                "raw_listen_input": [
                    "Dict"
                ],
                "current_time_utc": [
                    "datetime"
                ]
            }
        },
        "catch_listens_service_errors": {
            "name": "catch_listens_service_errors",
            "location": 79,
            "return": [
                "AwsHandler"
            ],
            "arguments": {
                "func": [
                    "AwsHandler"
                ]
            }
        },
        "catch_listens_service_errors.inner": {
            "name": "inner",
            "location": 82,
            "return": [
                "Dict"
            ],
            "arguments": {
                "event": [
                    "Dict"
                ],
                "context": [
                    "Dict"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/delivery/aws_lambda/__init__.py": {},
    "morning-cd-listens-master/listens/entities/day.py": {
        "is_day": {
            "name": "is_day",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "datetime_utc": [
                    "datetime"
                ],
                "sunlight_window": [
                    "SunlightWindow"
                ]
            }
        },
        "local_date": {
            "name": "local_date",
            "location": 13,
            "return": [
                "date"
            ],
            "arguments": {
                "datetime_utc": [
                    "datetime"
                ],
                "iana_timezone": [
                    "str"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/entities/listen.py": {
        "check_invalid": {
            "name": "check_invalid",
            "location": 10,
            "return": [
                "Optional[InvalidReason]"
            ],
            "arguments": {
                "listen_input": [
                    "ListenInput"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/entities/listen_test.py": {
        "listen_input_factory": {
            "name": "listen_input_factory",
            "location": 68,
            "return": [
                "ListenInput"
            ],
            "arguments": {}
        },
        "TestCheckInvalid.test_checks_name_length": {
            "name": "test_checks_name_length",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener_name": [
                    "str"
                ],
                "invalid_fields": [
                    "Optional[List[str]]"
                ]
            }
        },
        "TestCheckInvalid.test_checks_note_length": {
            "name": "test_checks_note_length",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note": [
                    "str"
                ],
                "invalid_fields": [
                    "Optional[List[str]]"
                ]
            }
        },
        "TestCheckInvalid.test_invalidates_multiple_fields_in_one_pass": {
            "name": "test_invalidates_multiple_fields_in_one_pass",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "morning-cd-listens-master/listens/entities/__init__.py": {},
    "morning-cd-listens-master/listens/gateways/sns_notification_gateway.py": {
        "SnsNotificationGateway.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listen_added_topic_arn": [
                    "str"
                ]
            }
        },
        "SnsNotificationGateway.announce_listen_added": {
            "name": "announce_listen_added",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listen": [
                    "Listen"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/gateways/spotify_gateway.py": {
        "SpotifyGateway.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ]
            }
        },
        "SpotifyGateway.song_exists": {
            "name": "song_exists",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "song_id": [
                    "str"
                ],
                "song_provider": [
                    "MusicProvider"
                ]
            }
        },
        "SpotifyGateway.fetch_bearer_token": {
            "name": "fetch_bearer_token",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "client_id": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/gateways/sunlight_service_gateway.py": {
        "_pluck_sunlight_window": {
            "name": "_pluck_sunlight_window",
            "location": 36,
            "return": [
                "SunlightWindow"
            ],
            "arguments": {
                "raw_sunlight_window": [
                    "Dict"
                ]
            }
        },
        "_pluck_datetime": {
            "name": "_pluck_datetime",
            "location": 43,
            "return": [
                "datetime"
            ],
            "arguments": {
                "raw_datetime": [
                    "str"
                ]
            }
        },
        "SunlightServiceGateway.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_key": [
                    "str"
                ]
            }
        },
        "SunlightServiceGateway.fetch_sunlight_window": {
            "name": "fetch_sunlight_window",
            "location": 16,
            "return": [
                "SunlightWindow"
            ],
            "arguments": {
                "self": [],
                "iana_timezone": [
                    "str"
                ],
                "on_date": [
                    "date"
                ]
            }
        }
    },
    "morning-cd-listens-master/listens/gateways/__init__.py": {},
    "morning-cd-listens-master/listens/gateways/sqlalchemy_db_gateway/models.py": {},
    "morning-cd-listens-master/listens/gateways/sqlalchemy_db_gateway/sqlalchemy_db_gateway.py": {
        "SqlAlchemyDbGateway.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_name": [
                    "str"
                ],
                "echo": [
                    "bool"
                ]
            }
        },
        "SqlAlchemyDbGateway.add_listen": {
            "name": "add_listen",
            "location": 20,
            "return": [
                "Listen"
            ],
            "arguments": {
                "self": [],
                "listen_input": [
                    "ListenInput"
                ]
            }
        },
        "SqlAlchemyDbGateway.fetch_listen": {
            "name": "fetch_listen",
            "location": 27,
            "return": [
                "Listen"
            ],
            "arguments": {
                "self": [],
                "listen_id": [
                    "str"
                ]
            }
        },
        "SqlAlchemyDbGateway.fetch_listens": {
            "name": "fetch_listens",
            "location": 37,
            "return": [
                "List[Listen]"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "int"
                ],
                "sort_time": [
                    "SortOrder"
                ],
                "before_utc": [
                    "Optional[datetime]"
                ],
                "after_utc": [
                    "Optional[datetime]"
                ]
            }
        },
        "SqlAlchemyDbGateway._build_sql_listen": {
            "name": "_build_sql_listen",
            "location": 58,
            "return": [
                "SqlListen"
            ],
            "arguments": {
                "listen_input": [
                    "ListenInput"
                ]
            }
        },
        "SqlAlchemyDbGateway._pluck_listens": {
            "name": "_pluck_listens",
            "location": 69,
            "return": [
                "List[Listen]"
            ],
            "arguments": {
                "sql_listens": [
                    "Iterable[SqlListen]"
                ]
            }
        },
        "SqlAlchemyDbGateway._pluck_listen": {
            "name": "_pluck_listen",
            "location": 73,
            "return": [
                "Listen"
            ],
            "arguments": {
                "sql_listen": [
                    "SqlListen"
                ]
            }
        },
        "SqlAlchemyDbGateway._sql_order_function": {
            "name": "_sql_order_function",
            "location": 85,
            "return": [
                "Callable"
            ],
            "arguments": {
                "sort_order": [
                    "SortOrder"
                ]
            }
        },
        "SqlAlchemyDbGateway.persist_schema": {
            "name": "persist_schema",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SqlAlchemyDbGateway.close_connections": {
            "name": "close_connections",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "morning-cd-listens-master/listens/gateways/sqlalchemy_db_gateway/__init__.py": {},
    "morning-cd-listens-master/scripts/can-i-deploy-consumer.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    }
}
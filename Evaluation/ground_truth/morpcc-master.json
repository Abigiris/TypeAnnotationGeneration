{
    "morpcc-master/bootstrap-buildout.py": {
        "_final_version": {
            "name": "_final_version",
            "location": 157,
            "return": [],
            "arguments": {
                "parsed_version": []
            }
        }
    },
    "morpcc-master/download-resources.py": {},
    "morpcc-master/setup.py": {
        "readfile": {
            "name": "readfile",
            "location": 6,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "morpcc-master/docs/conf.py": {},
    "morpcc-master/docs/_code/app.py": {
        "get_approot": {
            "name": "get_approot",
            "location": 17,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_template_directory": {
            "name": "get_template_directory",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    },
    "morpcc-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 90,
            "return": [],
            "arguments": {}
        }
    },
    "morpcc-master/morpcc/app.py": {
        "WebAppRequest.notify": {
            "name": "notify",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "title": [],
                "message": []
            }
        },
        "WebAppRequest.messages": {
            "name": "messages",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebAppRequest.get_license": {
            "name": "get_license",
            "location": 44,
            "return": [
                "typing.Optional[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "App.get_indexer": {
            "name": "get_indexer",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "name": []
            }
        },
        "App.get_structure_column": {
            "name": "get_structure_column",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "request": [],
                "name": []
            }
        },
        "App.get_portletprovider": {
            "name": "get_portletprovider",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_contextportletprovider": {
            "name": "get_contextportletprovider",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "name": []
            }
        },
        "App.get_schemaextender": {
            "name": "get_schemaextender",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "schema": []
            }
        },
        "App.get_messagingprovider": {
            "name": "get_messagingprovider",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "App.get_vocabulary": {
            "name": "get_vocabulary",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "App.get_behavior_factory": {
            "name": "get_behavior_factory",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_application_behavior_factory": {
            "name": "get_application_behavior_factory",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_default_factory": {
            "name": "get_default_factory",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_index_resolver": {
            "name": "get_index_resolver",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_restricted_module": {
            "name": "get_restricted_module",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_breadcrumb": {
            "name": "get_breadcrumb",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "request": []
            }
        },
        "App.get_license_cert": {
            "name": "get_license_cert",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "App.get_license_key": {
            "name": "get_license_key",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "App.get_copyright_notice": {
            "name": "get_copyright_notice",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "App.get_datasource_factory": {
            "name": "get_datasource_factory",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "App.get_datasource": {
            "name": "get_datasource",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "App.resolve_permissionassignment": {
            "name": "resolve_permissionassignment",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "model": [],
                "permission": [],
                "identity": []
            }
        },
        "App.render_view": {
            "name": "render_view",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "name": []
            }
        },
        "AuthnPolicy.get_identity_policy": {
            "name": "get_identity_policy",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        }
    },
    "morpcc-master/morpcc/authz_rule.py": {
        "group_rule": {
            "name": "group_rule",
            "location": 7,
            "return": [],
            "arguments": {
                "groupname": [],
                "identity": [],
                "model": [],
                "permission": []
            }
        }
    },
    "morpcc-master/morpcc/breadcrumb.py": {
        "get_root_breadcrumb": {
            "name": "get_root_breadcrumb",
            "location": 9,
            "return": [],
            "arguments": {
                "model": [],
                "request": []
            }
        },
        "get_model_breadcrumb": {
            "name": "get_model_breadcrumb",
            "location": 25,
            "return": [],
            "arguments": {
                "model": [],
                "request": []
            }
        },
        "get_collection_breadcrumb": {
            "name": "get_collection_breadcrumb",
            "location": 62,
            "return": [],
            "arguments": {
                "model": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/caching_tween.py": {
        "make_tween": {
            "name": "make_tween",
            "location": 6,
            "return": [],
            "arguments": {
                "app": [],
                "handler": []
            }
        },
        "make_tween.set_caching_headers": {
            "name": "set_caching_headers",
            "location": 7,
            "return": [],
            "arguments": {
                "request": [
                    "morepath.Request"
                ]
            }
        }
    },
    "morpcc-master/morpcc/directive.py": {
        "PortletFactoryAction.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "template": [],
                "permission": []
            }
        },
        "PortletFactoryAction.identifier": {
            "name": "identifier",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "portlet_registry": [
                    "PortletRegistry"
                ]
            }
        },
        "PortletFactoryAction.perform": {
            "name": "perform",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "portlet_registry": [
                    "PortletRegistry"
                ]
            }
        },
        "PortletProviderFactoryAction.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "permission": []
            }
        },
        "PortletProviderFactoryAction.identifier": {
            "name": "identifier",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "portletprovider_registry": [
                    "PortletProviderRegistry"
                ]
            }
        },
        "PortletProviderFactoryAction.perform": {
            "name": "perform",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "portletprovider_registry": [
                    "PortletProviderRegistry"
                ]
            }
        },
        "ContextPortletProviderFactoryAction.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "name": [],
                "permission": []
            }
        },
        "ContextPortletProviderFactoryAction.identifier": {
            "name": "identifier",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "ContextPortletProviderFactoryAction.perform": {
            "name": "perform",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "StructureColumnAction.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "name": []
            }
        },
        "StructureColumnAction.identifier": {
            "name": "identifier",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "StructureColumnAction.perform": {
            "name": "perform",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "SchemaExtenderAction.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "schema": []
            }
        },
        "SchemaExtenderAction.identifier": {
            "name": "identifier",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "SchemaExtenderAction.perform": {
            "name": "perform",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "MessagingProviderAction.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "MessagingProviderAction.identifier": {
            "name": "identifier",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "MessagingProviderAction.perform": {
            "name": "perform",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "VocabularyAction.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "VocabularyAction.identifier": {
            "name": "identifier",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "VocabularyAction.perform": {
            "name": "perform",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "IndexerAction.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "name": []
            }
        },
        "IndexerAction.identifier": {
            "name": "identifier",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "IndexerAction.perform": {
            "name": "perform",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "BehaviorAction.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BehaviorAction.identifier": {
            "name": "identifier",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "behavior_registry": [
                    "BehaviorRegistry"
                ]
            }
        },
        "BehaviorAction.perform": {
            "name": "perform",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "behavior_registry": [
                    "BehaviorRegistry"
                ]
            }
        },
        "ApplicationBehaviorAction.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ApplicationBehaviorAction.identifier": {
            "name": "identifier",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "application_behavior_registry": [
                    "ApplicationBehaviorRegistry"
                ]
            }
        },
        "ApplicationBehaviorAction.perform": {
            "name": "perform",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "application_behavior_registry": [
                    "ApplicationBehaviorRegistry"
                ]
            }
        },
        "DefaultFactoryAction.__init__": {
            "name": "__init__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DefaultFactoryAction.identifier": {
            "name": "identifier",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "default_factory_registry": [
                    "DefaultFactoryRegistry"
                ]
            }
        },
        "DefaultFactoryAction.perform": {
            "name": "perform",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "default_factory_registry": [
                    "DefaultFactoryRegistry"
                ]
            }
        },
        "IndexResolverAction.__init__": {
            "name": "__init__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "IndexResolverAction.identifier": {
            "name": "identifier",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "IndexResolverAction.perform": {
            "name": "perform",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "RestrictedModuleAction.__init__": {
            "name": "__init__",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RestrictedModuleAction.identifier": {
            "name": "identifier",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "RestrictedModuleAction.perform": {
            "name": "perform",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "BreadcrumbAction.__init__": {
            "name": "__init__",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "BreadcrumbAction.identifier": {
            "name": "identifier",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "BreadcrumbAction.perform": {
            "name": "perform",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "SettingPageAction.__init__": {
            "name": "__init__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "permission": [],
                "title": [],
                "order": []
            }
        },
        "SettingPageAction.identifier": {
            "name": "identifier",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "setting_page_registry": [
                    "SettingPageRegistry"
                ]
            }
        },
        "SettingPageAction.perform": {
            "name": "perform",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "setting_page_registry": [
                    "SettingPageRegistry"
                ]
            }
        },
        "LicenseCertAction.identifier": {
            "name": "identifier",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "LicenseCertAction.perform": {
            "name": "perform",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "LicenseKeyAction.identifier": {
            "name": "identifier",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "LicenseKeyAction.perform": {
            "name": "perform",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "CopyrightNoticeAction.identifier": {
            "name": "identifier",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": []
            }
        },
        "CopyrightNoticeAction.perform": {
            "name": "perform",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": []
            }
        },
        "DataSourceAction.__init__": {
            "name": "__init__",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DataSourceAction.identifier": {
            "name": "identifier",
            "location": 360,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "datasource_registry": [
                    "DataSourceRegistry"
                ]
            }
        },
        "DataSourceAction.perform": {
            "name": "perform",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "datasource_registry": [
                    "DataSourceRegistry"
                ]
            }
        },
        "PermissionResolverAction.__init__": {
            "name": "__init__",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "under": [],
                "over": [],
                "name": []
            }
        },
        "PermissionResolverAction.identifier": {
            "name": "identifier",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "permissionresolver_registry": []
            }
        },
        "PermissionResolverAction.perform": {
            "name": "perform",
            "location": 398,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "permissionresolver_registry": []
            }
        },
        "SettingModuleAction.__init__": {
            "name": "__init__",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "title": [],
                "under": [],
                "over": []
            }
        },
        "SettingModuleAction.identifier": {
            "name": "identifier",
            "location": 422,
            "return": [],
            "arguments": {
                "self": [],
                "app_class": [],
                "setting_module_registry": [
                    "SettingModuleRegistry"
                ]
            }
        },
        "SettingModuleAction.perform": {
            "name": "perform",
            "location": 425,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "app_class": [],
                "setting_module_registry": [
                    "SettingModuleRegistry"
                ]
            }
        },
        "ContextPortletProviderFactoryAction.perform.get_provider": {
            "name": "get_provider",
            "location": 71,
            "return": [],
            "arguments": {
                "model": [],
                "name": []
            }
        },
        "BehaviorAction.perform.factory": {
            "name": "factory",
            "location": 177,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "ApplicationBehaviorAction.perform.factory": {
            "name": "factory",
            "location": 203,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "DefaultFactoryAction.perform.factory": {
            "name": "factory",
            "location": 227,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IndexResolverAction.perform.factory": {
            "name": "factory",
            "location": 245,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "DataSourceAction.perform.factory": {
            "name": "factory",
            "location": 364,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "morpcc-master/morpcc/luigi.py": {
        "MorpTask.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MorpTask.request": {
            "name": "request",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MorpSparkTask.spark_session": {
            "name": "spark_session",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "app_name": []
            }
        },
        "MorpSparkTask.spark_session_builder": {
            "name": "spark_session_builder",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "app_name": []
            }
        }
    },
    "morpcc-master/morpcc/patches.py": {
        "patch": {
            "name": "patch",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "patch.prototype": {
            "name": "prototype",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        }
    },
    "morpcc-master/morpcc/permission.py": {},
    "morpcc-master/morpcc/permission_rule.py": {
        "root_view_permission": {
            "name": "root_view_permission",
            "location": 17,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "resolve_model_permission": {
            "name": "resolve_model_permission",
            "location": 37,
            "return": [],
            "arguments": {
                "request": [],
                "model": [],
                "permission": [],
                "identity": []
            }
        }
    },
    "morpcc-master/morpcc/portlet.py": {
        "left_portlets": {
            "name": "left_portlets",
            "location": 16,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "topnav_portlets": {
            "name": "topnav_portlets",
            "location": 21,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "abovecontent_portlets": {
            "name": "abovecontent_portlets",
            "location": 26,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "topleft_portlets": {
            "name": "topleft_portlets",
            "location": 31,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "style_portlets": {
            "name": "style_portlets",
            "location": 36,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "header_scripts_portlets": {
            "name": "header_scripts_portlets",
            "location": 41,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "footer_scripts_portlets": {
            "name": "footer_scripts_portlets",
            "location": 46,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "footer_portlets": {
            "name": "footer_portlets",
            "location": 51,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "navigation_portlet": {
            "name": "navigation_portlet",
            "location": 56,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "profile_portlet": {
            "name": "profile_portlet",
            "location": 73,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "topnav_portlet": {
            "name": "topnav_portlet",
            "location": 91,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "breadcrumb_portlet": {
            "name": "breadcrumb_portlet",
            "location": 144,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "timezone_portlet": {
            "name": "timezone_portlet",
            "location": 158,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "logo_portlet": {
            "name": "logo_portlet",
            "location": 164,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "footer_portlet": {
            "name": "footer_portlet",
            "location": 169,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "custom_styles_portlet": {
            "name": "custom_styles_portlet",
            "location": 175,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "custom_header_scripts_portlet": {
            "name": "custom_header_scripts_portlet",
            "location": 183,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "custom_footer_scripts_portlet": {
            "name": "custom_footer_scripts_portlet",
            "location": 191,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "topnav_portlet._timeago": {
            "name": "_timeago",
            "location": 119,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "topnav_portlet.get_icon_url": {
            "name": "get_icon_url",
            "location": 122,
            "return": [],
            "arguments": {
                "txt": []
            }
        }
    },
    "morpcc-master/morpcc/root.py": {
        "get_root": {
            "name": "get_root",
            "location": 16,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "index": {
            "name": "index",
            "location": 21,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "Root.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/static.py": {
        "get_staticroot": {
            "name": "get_staticroot",
            "location": 22,
            "return": [],
            "arguments": {
                "absorb": []
            }
        },
        "get_deformstaticroot": {
            "name": "get_deformstaticroot",
            "location": 33,
            "return": [],
            "arguments": {
                "absorb": []
            }
        }
    },
    "morpcc-master/morpcc/templating.py": {
        "get_chameleon_render": {
            "name": "get_chameleon_render",
            "location": 19,
            "return": [],
            "arguments": {
                "loader": [],
                "name": [],
                "original_render": []
            }
        },
        "get_template_directory": {
            "name": "get_template_directory",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "set_deform_override": {
            "name": "set_deform_override",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "get_chameleon_render.render": {
            "name": "render",
            "location": 23,
            "return": [],
            "arguments": {
                "content": [],
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "get_chameleon_render.render._permits": {
            "name": "_permits",
            "location": 29,
            "return": [],
            "arguments": {
                "permission": [],
                "request": [],
                "context": []
            }
        }
    },
    "morpcc-master/morpcc/util.py": {
        "permits": {
            "name": "permits",
            "location": 16,
            "return": [],
            "arguments": {
                "request": [],
                "context": [],
                "permission": []
            }
        },
        "validate_form": {
            "name": "validate_form",
            "location": 26,
            "return": [],
            "arguments": {
                "request": [],
                "obj": [],
                "schema": [],
                "form": []
            }
        },
        "typeinfo_link": {
            "name": "typeinfo_link",
            "location": 69,
            "return": [],
            "arguments": {
                "request": [],
                "type_name": []
            }
        },
        "types_navigation": {
            "name": "types_navigation",
            "location": 80,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/vocabulary.py": {
        "behaviors": {
            "name": "behaviors",
            "location": 8,
            "return": [],
            "arguments": {
                "request": [],
                "name": []
            }
        },
        "application_behaviors": {
            "name": "application_behaviors",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "name": []
            }
        },
        "default_factories": {
            "name": "default_factories",
            "location": 20,
            "return": [],
            "arguments": {
                "request": [],
                "name": []
            }
        },
        "fa_icons": {
            "name": "fa_icons",
            "location": 29,
            "return": [],
            "arguments": {
                "request": [],
                "name": []
            }
        }
    },
    "morpcc-master/morpcc/__init__.py": {},
    "morpcc-master/morpcc/activitylog/model.py": {
        "ActivityLogModel.ui": {
            "name": "ui",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ActivityLogCollection.ui": {
            "name": "ui",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ActivityLogCollection.log": {
            "name": "log",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "activity": []
            }
        }
    },
    "morpcc-master/morpcc/activitylog/modelui.py": {},
    "morpcc-master/morpcc/activitylog/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/activitylog/permission_rule.py": {
        "allow_collection_access": {
            "name": "allow_collection_access",
            "location": 9,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_model_access": {
            "name": "allow_model_access",
            "location": 14,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_collection_ui_access": {
            "name": "allow_collection_ui_access",
            "location": 21,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_model_ui_access": {
            "name": "allow_model_ui_access",
            "location": 26,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        }
    },
    "morpcc-master/morpcc/activitylog/schema.py": {},
    "morpcc-master/morpcc/activitylog/storage.py": {},
    "morpcc-master/morpcc/activitylog/subscriber.py": {
        "log_create": {
            "name": "log_create",
            "location": 11,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "log_updated": {
            "name": "log_updated",
            "location": 17,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "log_deleted": {
            "name": "log_deleted",
            "location": 23,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        }
    },
    "morpcc-master/morpcc/activitylog/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/activitylog/view.py": {},
    "morpcc-master/morpcc/activitylog/__init__.py": {},
    "morpcc-master/morpcc/apikey/model.py": {
        "APIKeyModelUI.view_exclude_fields": {
            "name": "view_exclude_fields",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/apikey/path.py": {
        "get_apikey_collection_ui": {
            "name": "get_apikey_collection_ui",
            "location": 7,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_apikey_model_ui": {
            "name": "get_apikey_model_ui",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/apikey/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 10,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/apikey/view.py": {
        "process_create": {
            "name": "process_create",
            "location": 31,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_process_create": {
            "name": "modal_process_create",
            "location": 103,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_create.set_header": {
            "name": "set_header",
            "location": 82,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/apikey/__init__.py": {},
    "morpcc-master/morpcc/authn/policy.py": {
        "ItsDangerousIdentityPolicy.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ItsDangerousIdentityPolicy.secret": {
            "name": "secret",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ItsDangerousIdentityPolicy.identify": {
            "name": "identify",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "IdentityPolicy.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "jwt_settings": [],
                "itsdangerous_settings": [],
                "api_root": [],
                "development_mode": []
            }
        },
        "IdentityPolicy.getpolicy": {
            "name": "getpolicy",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "IdentityPolicy.identify": {
            "name": "identify",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "IdentityPolicy.remember": {
            "name": "remember",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "request": [],
                "identity": []
            }
        },
        "IdentityPolicy.forget": {
            "name": "forget",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "request": []
            }
        },
        "ItsDangerousIdentityPolicy.identify.update_expiry": {
            "name": "update_expiry",
            "location": 28,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/authn/settingpage.py": {
        "get_encrypted_field": {
            "name": "get_encrypted_field",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "valid_dn": {
            "name": "valid_dn",
            "location": 16,
            "return": [],
            "arguments": {
                "request": [],
                "schema": [],
                "field": [],
                "value": [],
                "mode": []
            }
        },
        "valid_ldapurl": {
            "name": "valid_ldapurl",
            "location": 21,
            "return": [],
            "arguments": {
                "request": [],
                "schema": [],
                "field": [],
                "value": [],
                "mode": []
            }
        },
        "get_schema": {
            "name": "get_schema",
            "location": 128,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/authn/storage.py": {
        "get_user_sqlstorage": {
            "name": "get_user_sqlstorage",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "request": [],
                "blobstorage": []
            }
        }
    },
    "morpcc-master/morpcc/authn/__init__.py": {},
    "morpcc-master/morpcc/authz/permission_rule.py": {
        "rule_from_config": {
            "name": "rule_from_config",
            "location": 22,
            "return": [],
            "arguments": {
                "request": [],
                "key": [],
                "default": []
            }
        },
        "import_name": {
            "name": "import_name",
            "location": 28,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "eval_permissions": {
            "name": "eval_permissions",
            "location": 34,
            "return": [],
            "arguments": {
                "request": [],
                "model": [],
                "permission": [],
                "permissions": [],
                "identity": []
            }
        },
        "rule_from_assignment": {
            "name": "rule_from_assignment",
            "location": 86,
            "return": [],
            "arguments": {
                "request": [],
                "model": [],
                "permission": [],
                "identity": []
            }
        },
        "_rule_from_assignment": {
            "name": "_rule_from_assignment",
            "location": 113,
            "return": [],
            "arguments": {
                "request": [],
                "model": [],
                "permission": [],
                "identity": []
            }
        },
        "collection_permission": {
            "name": "collection_permission",
            "location": 132,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "collectionui_permission": {
            "name": "collectionui_permission",
            "location": 137,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "modelui_permission": {
            "name": "modelui_permission",
            "location": 142,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "model_permission": {
            "name": "model_permission",
            "location": 147,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "profile_permission": {
            "name": "profile_permission",
            "location": 152,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "user_permission": {
            "name": "user_permission",
            "location": 157,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "rule_from_assignment.create": {
            "name": "create",
            "location": 105,
            "return": [],
            "arguments": {}
        }
    },
    "morpcc-master/morpcc/authz/policy.py": {},
    "morpcc-master/morpcc/authz/rule_policies.py": {
        "readonly_policy": {
            "name": "readonly_policy",
            "location": 8,
            "return": [],
            "arguments": {
                "groupname": [],
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "full_access_policy": {
            "name": "full_access_policy",
            "location": 28,
            "return": [],
            "arguments": {
                "groupname": [],
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "content_submission_policy": {
            "name": "content_submission_policy",
            "location": 44,
            "return": [],
            "arguments": {
                "groupname": [],
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "content_approval_policy": {
            "name": "content_approval_policy",
            "location": 73,
            "return": [],
            "arguments": {
                "groupname": [],
                "identity": [],
                "model": [],
                "permission": []
            }
        }
    },
    "morpcc-master/morpcc/authz/subscriber.py": {
        "_clear": {
            "name": "_clear",
            "location": 8,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "created": {
            "name": "created",
            "location": 14,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "updated": {
            "name": "updated",
            "location": 19,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "deleted": {
            "name": "deleted",
            "location": 24,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "op_created": {
            "name": "op_created",
            "location": 29,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "op_updated": {
            "name": "op_updated",
            "location": 34,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        },
        "op_deleted": {
            "name": "op_deleted",
            "location": 39,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "obj": [],
                "signal": []
            }
        }
    },
    "morpcc-master/morpcc/authz/__init__.py": {},
    "morpcc-master/morpcc/crud/columns.py": {
        "get_type_column": {
            "name": "get_type_column",
            "location": 11,
            "return": [],
            "arguments": {
                "model": [],
                "request": [],
                "name": []
            }
        },
        "get_state_column": {
            "name": "get_state_column",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "request": [],
                "name": []
            }
        },
        "get_objectstring_column": {
            "name": "get_objectstring_column",
            "location": 26,
            "return": [],
            "arguments": {
                "model": [],
                "request": [],
                "name": []
            }
        },
        "get_buttons_column": {
            "name": "get_buttons_column",
            "location": 31,
            "return": [],
            "arguments": {
                "model": [],
                "request": [],
                "name": []
            }
        }
    },
    "morpcc-master/morpcc/crud/model.py": {
        "ModelUI.edit_exclude_fields": {
            "name": "edit_exclude_fields",
            "location": 15,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.view_exclude_fields": {
            "name": "view_exclude_fields",
            "location": 24,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.default_view": {
            "name": "default_view",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.update_view_enabled": {
            "name": "update_view_enabled",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.delete_view_enabled": {
            "name": "delete_view_enabled",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.identifier": {
            "name": "identifier",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.uuid": {
            "name": "uuid",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.schema": {
            "name": "schema",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "model": [],
                "collection_ui": []
            }
        },
        "ModelUI.transitions": {
            "name": "transitions",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelUI.__getitem__": {
            "name": "__getitem__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ModelUI.__setitem__": {
            "name": "__setitem__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "ModelUI.__delitem__": {
            "name": "__delitem__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CollectionUI.create_exclude_fields": {
            "name": "create_exclude_fields",
            "location": 80,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.create_view_enabled": {
            "name": "create_view_enabled",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.page_title": {
            "name": "page_title",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.listing_title": {
            "name": "listing_title",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.columns": {
            "name": "columns",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.columns_order": {
            "name": "columns_order",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectionUI.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "collection": []
            }
        },
        "CollectionUI.get_structure_column": {
            "name": "get_structure_column",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "request": [],
                "column_type": []
            }
        },
        "CollectionUI.search": {
            "name": "search",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "query": [],
                "offset": [],
                "limit": [],
                "order_by": [],
                "secure": []
            }
        },
        "CollectionUI.get": {
            "name": "get",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": []
            }
        },
        "CollectionUI.render_column": {
            "name": "render_column",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "record": [],
                "name": []
            }
        },
        "CollectionUI.render_column.render_column": {
            "name": "render_column",
            "location": 175,
            "return": [],
            "arguments": {
                "rec": [],
                "colname": []
            }
        }
    },
    "morpcc-master/morpcc/crud/tempstore.py": {
        "UIDFSBlobStorage._uuid_path": {
            "name": "_uuid_path",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "uuid": []
            }
        },
        "FSBlobFileUploadTempStore.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "context": [],
                "request": [],
                "path": []
            }
        },
        "FSBlobFileUploadTempStore.__setitem__": {
            "name": "__setitem__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "FSBlobFileUploadTempStore.__getitem__": {
            "name": "__getitem__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FSBlobFileUploadTempStore.get": {
            "name": "get",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "FSBlobFileUploadTempStore.__contains__": {
            "name": "__contains__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FSBlobFileUploadTempStore.preview_url": {
            "name": "preview_url",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "morpcc-master/morpcc/crud/workflow.py": {},
    "morpcc-master/morpcc/crud/__init__.py": {},
    "morpcc-master/morpcc/crud/view/create.py": {
        "create": {
            "name": "create",
            "location": 22,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_create": {
            "name": "modal_create",
            "location": 58,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_create": {
            "name": "process_create",
            "location": 69,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_process_create": {
            "name": "modal_process_create",
            "location": 131,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_create.set_header": {
            "name": "set_header",
            "location": 110,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/delete.py": {
        "delete": {
            "name": "delete",
            "location": 19,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_delete": {
            "name": "modal_delete",
            "location": 44,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_delete": {
            "name": "process_delete",
            "location": 55,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_process_delete": {
            "name": "modal_process_delete",
            "location": 69,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/edit.py": {
        "edit": {
            "name": "edit",
            "location": 21,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_edit": {
            "name": "modal_edit",
            "location": 52,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_edit": {
            "name": "process_edit",
            "location": 63,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_process_edit": {
            "name": "modal_process_edit",
            "location": 123,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "xattredit": {
            "name": "xattredit",
            "location": 136,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_xattredit": {
            "name": "modal_xattredit",
            "location": 166,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_xattredit": {
            "name": "process_xattredit",
            "location": 177,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_process_xattredit": {
            "name": "modal_process_xattredit",
            "location": 224,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_edit.set_header": {
            "name": "set_header",
            "location": 105,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/listing.py": {
        "listing": {
            "name": "listing",
            "location": 26,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "_parse_dtdata": {
            "name": "_parse_dtdata",
            "location": 91,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "_dt_result_render": {
            "name": "_dt_result_render",
            "location": 178,
            "return": [],
            "arguments": {
                "context": [],
                "request": [],
                "columns": [],
                "objs": []
            }
        },
        "datatable_search": {
            "name": "datatable_search",
            "location": 221,
            "return": [],
            "arguments": {
                "context": [],
                "request": [],
                "additional_filters": [],
                "renderer": [],
                "request_method": []
            }
        },
        "datatable": {
            "name": "datatable",
            "location": 351,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/reference.py": {
        "get_filters": {
            "name": "get_filters",
            "location": 18,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "_term_search": {
            "name": "_term_search",
            "location": 28,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "root_term_search": {
            "name": "root_term_search",
            "location": 65,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/relationship.py": {
        "_reference_content_search": {
            "name": "_reference_content_search",
            "location": 10,
            "return": [],
            "arguments": {
                "context": [],
                "request": [],
                "request_method": []
            }
        },
        "reference_content_search": {
            "name": "reference_content_search",
            "location": 29,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "reference_content_search_port": {
            "name": "reference_content_search_port",
            "location": 39,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/upload.py": {
        "upload_form": {
            "name": "upload_form",
            "location": 17,
            "return": [
                "deform.Form"
            ],
            "arguments": {
                "context": [
                    "ModelUI"
                ],
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "upload": {
            "name": "upload",
            "location": 41,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_upload": {
            "name": "process_upload",
            "location": 71,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "download": {
            "name": "download",
            "location": 105,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/view.py": {
        "collection_index": {
            "name": "collection_index",
            "location": 18,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "model_index": {
            "name": "model_index",
            "location": 23,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "base_view": {
            "name": "base_view",
            "location": 27,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "view": {
            "name": "view",
            "location": 104,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "preview": {
            "name": "preview",
            "location": 180,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_view": {
            "name": "modal_view",
            "location": 204,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "modal_close": {
            "name": "modal_close",
            "location": 214,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "collection_modal_close": {
            "name": "collection_modal_close",
            "location": 224,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "statemachine": {
            "name": "statemachine",
            "location": 234,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/vocabulary.py": {
        "vocabulary_search": {
            "name": "vocabulary_search",
            "location": 13,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "root_vocabulary_search": {
            "name": "root_vocabulary_search",
            "location": 35,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/crud/view/__init__.py": {},
    "morpcc-master/morpcc/dashboard/base.py": {
        "BaseWidget.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseWidget.render": {
            "name": "render",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "BaseWidget.render_script": {
            "name": "render_script",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "ContainerWidget.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContainerWidget.add": {
            "name": "add",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "widget": []
            }
        },
        "ContainerWidget.get_css_class": {
            "name": "get_css_class",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContainerWidget.get_css_style": {
            "name": "get_css_style",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContainerWidget.render": {
            "name": "render",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "ContainerWidget.render_script": {
            "name": "render_script",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "Row.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Column.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "contents": [],
                "css_class": [
                    "typing.Optional[str]"
                ],
                "xs_size": [],
                "sm_size": [],
                "md_size": [],
                "lg_size": [],
                "xl_size": []
            }
        },
        "Column.get_css_class": {
            "name": "get_css_class",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Widget.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "Widget.get_css_class": {
            "name": "get_css_class",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Widget.get_datasource": {
            "name": "get_datasource",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Widget.render": {
            "name": "render",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        }
    },
    "morpcc-master/morpcc/dashboard/widget.py": {
        "TileStatsCount.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "TileStatsCount.chart_data": {
            "name": "chart_data",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PercentChart.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "PercentChart.chart_data": {
            "name": "chart_data",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PercentChart.human_value": {
            "name": "human_value",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "EChart.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "EChart.render_script": {
            "name": "render_script",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "EChart.get_css_style": {
            "name": "get_css_style",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EChart.chart_config": {
            "name": "chart_config",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PieChart.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "PieChart.chart_config": {
            "name": "chart_config",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DoughnutChart.chart_config": {
            "name": "chart_config",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "LineChart.__init__": {
            "name": "__init__",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "datasource": []
            }
        },
        "LineChart.chart_config": {
            "name": "chart_config",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "HorizontalBar.chart_config": {
            "name": "chart_config",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "morpcc-master/morpcc/dashboard/__init__.py": {},
    "morpcc-master/morpcc/deform/codewidget.py": {
        "CodeWidget.highlight": {
            "name": "highlight",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "CodeWidget.editarea_syntax": {
            "name": "editarea_syntax",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONCodeWidget.deserialize": {
            "name": "deserialize",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "pstruct": []
            }
        },
        "JSONCodeWidget.serialize": {
            "name": "serialize",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "cstruct": []
            }
        }
    },
    "morpcc-master/morpcc/deform/referencewidget.py": {
        "ReferenceWidget.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "resource_type": [],
                "term_field": [],
                "value_field": [],
                "get_search_url": [],
                "filter_fields": [
                    "dict"
                ]
            }
        },
        "ReferenceWidget.deserialize": {
            "name": "deserialize",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReferenceWidget.get_resource_search_url": {
            "name": "get_resource_search_url",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "ReferenceWidget.get_resource_url": {
            "name": "get_resource_url",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        },
        "ReferenceWidget.get_resource": {
            "name": "get_resource",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        },
        "ReferenceWidget.get_resource_term": {
            "name": "get_resource_term",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        },
        "UserReferenceWidget.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "resource_type": [],
                "term_field": [],
                "value_field": []
            }
        },
        "UserReferenceWidget.get_resource": {
            "name": "get_resource",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/deform/richtextwidget.py": {},
    "morpcc-master/morpcc/deform/vocabularywidget.py": {
        "VocabularyWidget.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "vocabulary": []
            }
        },
        "VocabularyWidget.search_url": {
            "name": "search_url",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "VocabularyWidget.get_label": {
            "name": "get_label",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": [],
                "html": []
            }
        },
        "VocabularyWidget.get_data": {
            "name": "get_data",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        },
        "VocabularyWidget.get_data_json": {
            "name": "get_data_json",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": [],
                "selected": []
            }
        }
    },
    "morpcc-master/morpcc/deform/__init__.py": {},
    "morpcc-master/morpcc/emailverification/view.py": {
        "send_verification": {
            "name": "send_verification",
            "location": 64,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "verify": {
            "name": "verify",
            "location": 86,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "SignedTokenProvider.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "signature_field": []
            }
        },
        "SignedTokenProvider._construct_message": {
            "name": "_construct_message",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "payload": [
                    "dict"
                ]
            }
        },
        "SignedTokenProvider._compute_signature": {
            "name": "_compute_signature",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "SignedTokenProvider.generate_token": {
            "name": "generate_token",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "payload": [
                    "dict"
                ]
            }
        },
        "SignedTokenProvider.load_token": {
            "name": "load_token",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "token": [
                    "str"
                ]
            }
        },
        "SignedTokenProvider.verify_payload": {
            "name": "verify_payload",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "payload": [
                    "dict"
                ]
            }
        }
    },
    "morpcc-master/morpcc/emailverification/__init__.py": {},
    "morpcc-master/morpcc/firstlogin/tween.py": {
        "make_tween": {
            "name": "make_tween",
            "location": 11,
            "return": [],
            "arguments": {
                "app": [],
                "handler": []
            }
        },
        "make_tween.redirect_to_firstlogin": {
            "name": "redirect_to_firstlogin",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "make_tween.activate_user": {
            "name": "activate_user",
            "location": 15,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/firstlogin/view.py": {
        "firstlogin": {
            "name": "firstlogin",
            "location": 98,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "firstlogin_process": {
            "name": "firstlogin_process",
            "location": 107,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "SplashStep.splash_url": {
            "name": "splash_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EmailVerificationStep.validate": {
            "name": "validate",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PersonalInfoStep.schema": {
            "name": "schema",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PersonalInfoStep.finalize": {
            "name": "finalize",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TNCStep.agreement_text": {
            "name": "agreement_text",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TNCStep.finalize": {
            "name": "finalize",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FirstLoginWizard.finalize": {
            "name": "finalize",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/firstlogin/__init__.py": {},
    "morpcc-master/morpcc/group/model.py": {},
    "morpcc-master/morpcc/group/path.py": {
        "get_group_collection_ui": {
            "name": "get_group_collection_ui",
            "location": 8,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_group_model_ui": {
            "name": "get_group_model_ui",
            "location": 15,
            "return": [],
            "arguments": {
                "request": [],
                "groupname": []
            }
        }
    },
    "morpcc-master/morpcc/group/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 10,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/group/view.py": {
        "member_select_widget": {
            "name": "member_select_widget",
            "location": 17,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "group_schema": {
            "name": "group_schema",
            "location": 26,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "edit": {
            "name": "edit",
            "location": 62,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_edit": {
            "name": "process_edit",
            "location": 96,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_edit.set_header": {
            "name": "set_header",
            "location": 126,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/group/__init__.py": {},
    "morpcc-master/morpcc/index/adapter.py": {
        "render_python_code": {
            "name": "render_python_code",
            "location": 32,
            "return": [],
            "arguments": {
                "up_or_down_op": [],
                "sqlalchemy_module_prefix": [],
                "alembic_module_prefix": [],
                "render_as_batch": [],
                "imports": [],
                "render_item": []
            }
        },
        "_get_migrate_function": {
            "name": "_get_migrate_function",
            "location": 60,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "IndexDatabaseSyncAdapter.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "context": [
                    "IndexCollection"
                ],
                "request": []
            }
        },
        "IndexDatabaseSyncAdapter.get_upgrade_steps": {
            "name": "get_upgrade_steps",
            "location": 97,
            "return": [
                "typing.List"
            ],
            "arguments": {
                "self": [],
                "migration_context": []
            }
        },
        "IndexDatabaseSyncAdapter.get_migration_code": {
            "name": "get_migration_code",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexDatabaseSyncAdapter.update": {
            "name": "update",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexDatabaseSyncAdapter.list_update_actions": {
            "name": "list_update_actions",
            "location": 135,
            "return": [
                "typing.List[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexDatabaseSyncAdapter.close": {
            "name": "close",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/index/model.py": {
        "IndexContentModel.ui": {
            "name": "ui",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexContentModel.json": {
            "name": "json",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexContentModel.get_object": {
            "name": "get_object",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexContentCollection.index": {
            "name": "index",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "IndexContentCollection.unindex": {
            "name": "unindex",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "IndexContentCollection.unindex_raw": {
            "name": "unindex_raw",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "IndexModel.ui": {
            "name": "ui",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.ui": {
            "name": "ui",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.content_metadata": {
            "name": "content_metadata",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.content_collection": {
            "name": "content_collection",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.index_attrs": {
            "name": "index_attrs",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.dataclass": {
            "name": "dataclass",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCollection.content_collection.Collection.__init__": {
            "name": "__init__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "IndexCollection.content_collection.Storage.session": {
            "name": "session",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/index/modelui.py": {
        "IndexContentCollectionUI.columns": {
            "name": "columns",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/index/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 16,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 22,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/index/schema.py": {},
    "morpcc-master/morpcc/index/searchprovider.py": {
        "get_searchprovider": {
            "name": "get_searchprovider",
            "location": 40,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "IndexSearchProvider.parse_query": {
            "name": "parse_query",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        },
        "IndexSearchProvider.search": {
            "name": "search",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "query": [],
                "offset": [],
                "limit": [],
                "order_by": []
            }
        }
    },
    "morpcc-master/morpcc/index/storage.py": {},
    "morpcc-master/morpcc/index/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/index/view.py": {
        "schema_upgrade": {
            "name": "schema_upgrade",
            "location": 24,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_schema_upgrade": {
            "name": "process_schema_upgrade",
            "location": 46,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "_search": {
            "name": "_search",
            "location": 58,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "search_json": {
            "name": "search_json",
            "location": 86,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "search": {
            "name": "search",
            "location": 96,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "listing": {
            "name": "listing",
            "location": 111,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/index/__init__.py": {},
    "morpcc-master/morpcc/licensing/view.py": {
        "view": {
            "name": "view",
            "location": 13,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/licensing/__init__.py": {},
    "morpcc-master/morpcc/messaging/base.py": {
        "send_email": {
            "name": "send_email",
            "location": 29,
            "return": [],
            "arguments": {
                "request_options": [],
                "obj": []
            }
        },
        "get_email_provider": {
            "name": "get_email_provider",
            "location": 61,
            "return": [],
            "arguments": {
                "request": [],
                "name": []
            }
        },
        "EmailMessagingProvider.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EmailMessagingProvider.send": {
            "name": "send",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "to": [],
                "subject": [],
                "message": []
            }
        }
    },
    "morpcc-master/morpcc/messaging/__init__.py": {},
    "morpcc-master/morpcc/notification/model.py": {
        "NotificationModel.ui": {
            "name": "ui",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationModel.title": {
            "name": "title",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationCollection.ui": {
            "name": "ui",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationCollection.search": {
            "name": "search",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        }
    },
    "morpcc-master/morpcc/notification/modelui.py": {},
    "morpcc-master/morpcc/notification/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 16,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 22,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/notification/permission_rule.py": {
        "collection_search_permission": {
            "name": "collection_search_permission",
            "location": 8,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "collection_view_permission": {
            "name": "collection_view_permission",
            "location": 15,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "model_view_permission": {
            "name": "model_view_permission",
            "location": 22,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        }
    },
    "morpcc-master/morpcc/notification/schema.py": {
        "default_user": {
            "name": "default_user",
            "location": 12,
            "return": [],
            "arguments": {
                "request": [],
                "data": [],
                "model": []
            }
        }
    },
    "morpcc-master/morpcc/notification/storage.py": {},
    "morpcc-master/morpcc/notification/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/notification/view.py": {
        "view": {
            "name": "view",
            "location": 20,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "listing": {
            "name": "listing",
            "location": 50,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "listing.get_icon_url": {
            "name": "get_icon_url",
            "location": 56,
            "return": [],
            "arguments": {
                "txt": []
            }
        },
        "listing._timeago": {
            "name": "_timeago",
            "location": 65,
            "return": [],
            "arguments": {
                "dt": []
            }
        }
    },
    "morpcc-master/morpcc/notification/__init__.py": {},
    "morpcc-master/morpcc/objectpermissionassignment/model.py": {
        "ObjectPermissionAssignmentModel.ui": {
            "name": "ui",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ObjectPermissionAssignmentModel.permission_class": {
            "name": "permission_class",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ObjectPermissionAssignmentModel.match": {
            "name": "match",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "ObjectPermissionAssignmentCollection.ui": {
            "name": "ui",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/objectpermissionassignment/modelui.py": {},
    "morpcc-master/morpcc/objectpermissionassignment/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/objectpermissionassignment/schema.py": {},
    "morpcc-master/morpcc/objectpermissionassignment/storage.py": {},
    "morpcc-master/morpcc/objectpermissionassignment/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 18,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/objectpermissionassignment/view.py": {
        "manage_permission": {
            "name": "manage_permission",
            "location": 27,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/objectpermissionassignment/__init__.py": {},
    "morpcc-master/morpcc/permissionassignment/model.py": {
        "PermissionAssignmentModel.ui": {
            "name": "ui",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionAssignmentModel.permission_class": {
            "name": "permission_class",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionAssignmentModel.model_class": {
            "name": "model_class",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionAssignmentModel.match": {
            "name": "match",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "PermissionAssignmentCollection.ui": {
            "name": "ui",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionAssignmentCollection.lookup_permission": {
            "name": "lookup_permission",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "model_name": []
            }
        },
        "PermissionAssignmentCollection.all_enabled": {
            "name": "all_enabled",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/permissionassignment/modelui.py": {},
    "morpcc-master/morpcc/permissionassignment/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/permissionassignment/schema.py": {
        "permission_select_widget": {
            "name": "permission_select_widget",
            "location": 14,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "model_select_widget": {
            "name": "model_select_widget",
            "location": 24,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "group_select_widget": {
            "name": "group_select_widget",
            "location": 42,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "roles_select_widget": {
            "name": "roles_select_widget",
            "location": 48,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "user_select_widget": {
            "name": "user_select_widget",
            "location": 59,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/permissionassignment/storage.py": {},
    "morpcc-master/morpcc/permissionassignment/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/permissionassignment/view.py": {},
    "morpcc-master/morpcc/permissionassignment/__init__.py": {},
    "morpcc-master/morpcc/preparer/html.py": {
        "HTMLSanitizer.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        },
        "HTMLSanitizer.__call__": {
            "name": "__call__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "schema": [],
                "value": [],
                "mode": []
            }
        }
    },
    "morpcc-master/morpcc/preparer/__init__.py": {},
    "morpcc-master/morpcc/process/model.py": {
        "ProcessModel.ui": {
            "name": "ui",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessCollection.ui": {
            "name": "ui",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessCollection.cleanup_running": {
            "name": "cleanup_running",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "age_hours": []
            }
        },
        "ProcessCollection.vacuum": {
            "name": "vacuum",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "age_days": []
            }
        }
    },
    "morpcc-master/morpcc/process/modelui.py": {},
    "morpcc-master/morpcc/process/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 17,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 23,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 28,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 36,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 42,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/process/schema.py": {},
    "morpcc-master/morpcc/process/statemachine.py": {
        "get_statemachine": {
            "name": "get_statemachine",
            "location": 38,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "ProcessStateMachine.on_enter_running": {
            "name": "on_enter_running",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessStateMachine.on_exit_running": {
            "name": "on_exit_running",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessStateMachine.on_enter_cancelled": {
            "name": "on_enter_cancelled",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/process/storage.py": {},
    "morpcc-master/morpcc/process/subscriber.py": {
        "handle_task_submitted": {
            "name": "handle_task_submitted",
            "location": 112,
            "return": [],
            "arguments": {
                "request": [],
                "task_type": [],
                "task_id": [],
                "signal": [],
                "params": []
            }
        },
        "handle_task_starting": {
            "name": "handle_task_starting",
            "location": 129,
            "return": [],
            "arguments": {
                "request": [],
                "task_type": [],
                "task_id": [],
                "signal": []
            }
        },
        "put_output": {
            "name": "put_output",
            "location": 166,
            "return": [],
            "arguments": {
                "request": [],
                "task_id": [],
                "path": []
            }
        },
        "handle_task_completed": {
            "name": "handle_task_completed",
            "location": 183,
            "return": [],
            "arguments": {
                "request": [],
                "task_type": [],
                "task_id": []
            }
        },
        "handle_task_failed": {
            "name": "handle_task_failed",
            "location": 200,
            "return": [],
            "arguments": {
                "request": [],
                "task_type": [],
                "task_id": []
            }
        },
        "task_submitted": {
            "name": "task_submitted",
            "location": 220,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "task_starting": {
            "name": "task_starting",
            "location": 231,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "task_completed": {
            "name": "task_completed",
            "location": 236,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "task_failed": {
            "name": "task_failed",
            "location": 241,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "task_finalized": {
            "name": "task_finalized",
            "location": 246,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "scheduled_task_starting": {
            "name": "scheduled_task_starting",
            "location": 251,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "scheduled_task_completed": {
            "name": "scheduled_task_completed",
            "location": 258,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "scheduled_task_failed": {
            "name": "scheduled_task_failed",
            "location": 263,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "scheduled_task_finalized": {
            "name": "scheduled_task_finalized",
            "location": 268,
            "return": [],
            "arguments": {
                "app": [],
                "request": [],
                "context": [],
                "signal": []
            }
        },
        "OutputRouter.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OutputRouter.write": {
            "name": "write",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "IOHandler.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "task_id": []
            }
        },
        "IOHandler.redirect": {
            "name": "redirect",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOHandler.restore": {
            "name": "restore",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOHandler.package_task": {
            "name": "package_task",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOHandler.clear_task_dir": {
            "name": "clear_task_dir",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOHandler._open": {
            "name": "_open",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOHandler._close": {
            "name": "_close",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/process/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/process/view.py": {
        "signal_widget_factory": {
            "name": "signal_widget_factory",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "state_widget_factory": {
            "name": "state_widget_factory",
            "location": 35,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "listing": {
            "name": "listing",
            "location": 57,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/process/__init__.py": {},
    "morpcc-master/morpcc/registry/applicationbehavior.py": {
        "ApplicationBehaviorRegistry.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApplicationBehaviorRegistry.register_behavior": {
            "name": "register_behavior",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ApplicationBehaviorRegistry.get_behavior": {
            "name": "get_behavior",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "ApplicationBehaviorRegistry.get_behaviors": {
            "name": "get_behaviors",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/registry/behavior.py": {
        "BehaviorRegistry.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BehaviorRegistry.register_behavior": {
            "name": "register_behavior",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BehaviorRegistry.get_behavior": {
            "name": "get_behavior",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "BehaviorRegistry.get_behaviors": {
            "name": "get_behaviors",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/registry/datasource.py": {
        "DataSource.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "factory": [],
                "request": [],
                "cache_config": []
            }
        },
        "DataSource.get_cache": {
            "name": "get_cache",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSource.compute": {
            "name": "compute",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSource.clear_cache": {
            "name": "clear_cache",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSourceRegistry.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSourceRegistry.register": {
            "name": "register",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DataSourceRegistry.get": {
            "name": "get",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "DataSourceRegistry.get_factory": {
            "name": "get_factory",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "DataSourceRegistry.get_factories": {
            "name": "get_factories",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DataSource.compute.create": {
            "name": "create",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "morpcc-master/morpcc/registry/default_factory.py": {
        "DefaultFactoryRegistry.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DefaultFactoryRegistry.register": {
            "name": "register",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DefaultFactoryRegistry.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "request": []
            }
        },
        "DefaultFactoryRegistry.get_factories": {
            "name": "get_factories",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/registry/permissionresolver.py": {
        "PermissionResolverRegistry.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionResolverRegistry.register_factory": {
            "name": "register_factory",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "over": [],
                "under": []
            }
        },
        "PermissionResolverRegistry.sorted_factories": {
            "name": "sorted_factories",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PermissionResolverRegistry.resolve": {
            "name": "resolve",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "model": [],
                "permission": [],
                "identity": []
            }
        }
    },
    "morpcc-master/morpcc/registry/portlet.py": {
        "PortletRegistry.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PortletRegistry.register": {
            "name": "register",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "portlet_factory": [],
                "name": [],
                "template": [],
                "permission": []
            }
        },
        "PortletRegistry.get_portlet": {
            "name": "get_portlet",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PortletProviderRegistry.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PortletProviderRegistry.register": {
            "name": "register",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "provider_factory": [],
                "name": [],
                "permission": []
            }
        },
        "PortletProviderRegistry.get_provider": {
            "name": "get_provider",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Portlet.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "factory": [],
                "template": [],
                "permission": []
            }
        },
        "Portlet.render": {
            "name": "render",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "PortletProvider.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "permission": [],
                "name": []
            }
        },
        "PortletProvider.render": {
            "name": "render",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "load_template": []
            }
        },
        "Portlet.render._permits": {
            "name": "_permits",
            "location": 53,
            "return": [],
            "arguments": {
                "permission": [],
                "request": [],
                "context": []
            }
        }
    },
    "morpcc-master/morpcc/registry/settingmodule.py": {
        "SettingModuleRegistry.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingModuleRegistry.register": {
            "name": "register",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "name": [],
                "title": [],
                "under": [],
                "over": []
            }
        },
        "SettingModuleRegistry._get": {
            "name": "_get",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "SettingModuleRegistry._keys": {
            "name": "_keys",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingModuleRegistry.modules": {
            "name": "modules",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/registry/settingpage.py": {
        "SettingPageRegistry.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingPageRegistry.register": {
            "name": "register",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "name": [],
                "title": [],
                "permission": [],
                "order": []
            }
        },
        "SettingPageRegistry.get": {
            "name": "get",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "SettingPageRegistry.keys": {
            "name": "keys",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingPageRegistry.values": {
            "name": "values",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SettingPageRegistry.items": {
            "name": "items",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SettingPage.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "name": [],
                "title": [],
                "permission": [],
                "order": []
            }
        },
        "SettingPage.enabled": {
            "name": "enabled",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "SettingPage.formschema": {
            "name": "formschema",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "SettingPage.jsonformschema": {
            "name": "jsonformschema",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "SettingPage.form": {
            "name": "form",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "SettingPage.form_data": {
            "name": "form_data",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        },
        "SettingPage.process_form": {
            "name": "process_form",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/registry/__init__.py": {},
    "morpcc-master/morpcc/restrictedpython/compiler.py": {
        "default_inplacevar": {
            "name": "default_inplacevar",
            "location": 19,
            "return": [],
            "arguments": {
                "op": [],
                "x": [],
                "y": []
            }
        },
        "get_restricted_function": {
            "name": "get_restricted_function",
            "location": 79,
            "return": [],
            "arguments": {
                "app": [],
                "bytecode": [],
                "name": [],
                "local_vars": []
            }
        },
        "ImportGuard.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "ImportGuard.__call__": {
            "name": "__call__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "globals": [],
                "locals": [],
                "fromlist": [],
                "level": []
            }
        },
        "Print._call_print": {
            "name": "_call_print",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/restrictedpython/modules.py": {
        "get_datetime": {
            "name": "get_datetime",
            "location": 8,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_time": {
            "name": "get_time",
            "location": 13,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "morpcc-master/morpcc/restrictedpython/__init__.py": {},
    "morpcc-master/morpcc/settings/model.py": {
        "SettingModel.ui": {
            "name": "ui",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingCollection.ui": {
            "name": "ui",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SettingCollection.get_by_key": {
            "name": "get_by_key",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SettingCollection.resolve_raw": {
            "name": "resolve_raw",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "SettingCollection.resolve": {
            "name": "resolve",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "SettingCollection.store": {
            "name": "store",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "morpcc-master/morpcc/settings/modelui.py": {},
    "morpcc-master/morpcc/settings/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 16,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 22,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 39,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/settings/schema.py": {},
    "morpcc-master/morpcc/settings/settingpage.py": {
        "get_schema": {
            "name": "get_schema",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/settings/site_settings.py": {
        "site_settings": {
            "name": "site_settings",
            "location": 14,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "get_modules": {
            "name": "get_modules",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/settings/storage.py": {},
    "morpcc-master/morpcc/settings/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/settings/view.py": {
        "listing": {
            "name": "listing",
            "location": 14,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_listing": {
            "name": "process_listing",
            "location": 38,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/settings/__init__.py": {},
    "morpcc-master/morpcc/static_files/gentelella/vendors/jqvmap/create/jqvmap.py": {
        "JQVMap.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "language": []
            }
        },
        "JQVMap.addPath": {
            "name": "addPath",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "code": [],
                "name": []
            }
        },
        "JQVMap.getJSCode": {
            "name": "getJSCode",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Converter.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Converter.convert": {
            "name": "convert",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "data_source": [],
                "output_file": []
            }
        },
        "Converter.renderMapInset": {
            "name": "renderMapInset",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "data_source": [],
                "codes": [],
                "left": [],
                "top": [],
                "width": []
            }
        },
        "Geometry.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "geometry": [],
                "properties": []
            }
        },
        "GeometryProperty.__init__": {
            "name": "__init__",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GeometryProperty.equals": {
            "name": "equals",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "context": []
            }
        },
        "GeometryProperty.belongs_to": {
            "name": "belongs_to",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "context": []
            }
        },
        "GeometryProperty.is_subset": {
            "name": "is_subset",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "context": []
            }
        },
        "GeometryProperty.to_python": {
            "name": "to_python",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DataSource.__init__": {
            "name": "__init__",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "DataSource.load_data": {
            "name": "load_data",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSource.create_grammar": {
            "name": "create_grammar",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataSource.output": {
            "name": "output",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "output": []
            }
        },
        "DataSource.output_ogr": {
            "name": "output_ogr",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "output": []
            }
        },
        "DataSource.output_jvm": {
            "name": "output_jvm",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "output": []
            }
        },
        "PolygonSimplifier.__init__": {
            "name": "__init__",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "geometries": []
            }
        },
        "PolygonSimplifier.simplifyRing": {
            "name": "simplifyRing",
            "location": 389,
            "return": [],
            "arguments": {
                "self": [],
                "ring": []
            }
        },
        "PolygonSimplifier.simplifyPolygon": {
            "name": "simplifyPolygon",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "polygon": []
            }
        },
        "PolygonSimplifier.simplify": {
            "name": "simplify",
            "location": 445,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.__init__": {
            "name": "__init__",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Processor.process": {
            "name": "process",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.read_data": {
            "name": "read_data",
            "location": 478,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.write_data": {
            "name": "write_data",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.union": {
            "name": "union",
            "location": 485,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.merge": {
            "name": "merge",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.join_data": {
            "name": "join_data",
            "location": 510,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.remove": {
            "name": "remove",
            "location": 527,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.remove_fields": {
            "name": "remove_fields",
            "location": 531,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.remove_other_fields": {
            "name": "remove_other_fields",
            "location": 534,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.buffer": {
            "name": "buffer",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.simplify_adjancent_polygons": {
            "name": "simplify_adjancent_polygons",
            "location": 541,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.intersect_rect": {
            "name": "intersect_rect",
            "location": 546,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        },
        "Processor.remove_small_polygons": {
            "name": "remove_small_polygons",
            "location": 554,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "data_source": []
            }
        }
    },
    "morpcc-master/morpcc/tests/conftest.py": {},
    "morpcc-master/morpcc/tests/democms_common.py": {
        "get_democms_client": {
            "name": "get_democms_client",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "follow": {
            "name": "follow",
            "location": 50,
            "return": [],
            "arguments": {
                "resp": []
            }
        }
    },
    "morpcc-master/morpcc/tests/test_democms.py": {
        "test_democms": {
            "name": "test_democms",
            "location": 32,
            "return": [],
            "arguments": {
                "pgsql_db": [],
                "pgsql_db_warehouse": [],
                "pgsql_db_cache": []
            }
        }
    },
    "morpcc-master/morpcc/tests/test_permissionrule.py": {
        "cache_test": {
            "name": "cache_test",
            "location": 8,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "test_permissionrule": {
            "name": "test_permissionrule",
            "location": 21,
            "return": [],
            "arguments": {
                "pgsql_db": [],
                "pgsql_db_warehouse": [],
                "pgsql_db_cache": []
            }
        }
    },
    "morpcc-master/morpcc/tests/__init__.py": {},
    "morpcc-master/morpcc/tests/democms/app.py": {
        "get_approot": {
            "name": "get_approot",
            "location": 15,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_template_directory": {
            "name": "get_template_directory",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "morpcc-master/morpcc/tests/democms/portlets.py": {
        "new_main_nav": {
            "name": "new_main_nav",
            "location": 6,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/wizard.py": {
        "pagewizard": {
            "name": "pagewizard",
            "location": 87,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "pagewizard_process": {
            "name": "pagewizard_process",
            "location": 97,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "Step3.handle": {
            "name": "handle",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/__init__.py": {},
    "morpcc-master/morpcc/tests/democms/page/model.py": {
        "PageModel.ui": {
            "name": "ui",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageCollection.ui": {
            "name": "ui",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/modelui.py": {},
    "morpcc-master/morpcc/tests/democms/page/path.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_model": {
            "name": "get_model",
            "location": 15,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection": {
            "name": "_get_collection",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model": {
            "name": "_get_model",
            "location": 26,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        },
        "_get_collection_ui": {
            "name": "_get_collection_ui",
            "location": 31,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "_get_model_ui": {
            "name": "_get_model_ui",
            "location": 37,
            "return": [],
            "arguments": {
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/permission_rule.py": {
        "allow_collection_access": {
            "name": "allow_collection_access",
            "location": 8,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_model_access": {
            "name": "allow_model_access",
            "location": 13,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_collection_ui_access": {
            "name": "allow_collection_ui_access",
            "location": 18,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        },
        "allow_model_ui_access": {
            "name": "allow_model_ui_access",
            "location": 23,
            "return": [],
            "arguments": {
                "identity": [],
                "model": [],
                "permission": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/schema.py": {},
    "morpcc-master/morpcc/tests/democms/page/statemachine.py": {
        "get_dataasset_statemachine": {
            "name": "get_dataasset_statemachine",
            "location": 16,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/storage.py": {},
    "morpcc-master/morpcc/tests/democms/page/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/xattrprovider.py": {
        "get_xattrprovider": {
            "name": "get_xattrprovider",
            "location": 21,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "morpcc-master/morpcc/tests/democms/page/__init__.py": {},
    "morpcc-master/morpcc/users/breadcrumb.py": {
        "get_profile_breadcrumb": {
            "name": "get_profile_breadcrumb",
            "location": 6,
            "return": [],
            "arguments": {
                "model": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/users/model.py": {
        "get_user_blobstorage": {
            "name": "get_user_blobstorage",
            "location": 11,
            "return": [],
            "arguments": {
                "model": [],
                "request": []
            }
        },
        "get_usercol_ui": {
            "name": "get_usercol_ui",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_usermodel_ui": {
            "name": "get_usermodel_ui",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserModelUI.view_exclude_fields": {
            "name": "view_exclude_fields",
            "location": 17,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/users/path.py": {
        "get_user_collection_ui": {
            "name": "get_user_collection_ui",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_user_model_ui": {
            "name": "get_user_model_ui",
            "location": 19,
            "return": [],
            "arguments": {
                "request": [],
                "username": []
            }
        },
        "get_current_user_model_ui": {
            "name": "get_current_user_model_ui",
            "location": 28,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/users/rulesprovider.py": {
        "get_user_rulesprovider": {
            "name": "get_user_rulesprovider",
            "location": 17,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "UserRulesProvider.validate": {
            "name": "validate",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ],
                "check_state": [
                    "bool"
                ]
            }
        }
    },
    "morpcc-master/morpcc/users/statemachine.py": {
        "userstatemachine": {
            "name": "userstatemachine",
            "location": 32,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "UserStateMachine.is_validated": {
            "name": "is_validated",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/users/typeinfo.py": {
        "get_typeinfo": {
            "name": "get_typeinfo",
            "location": 9,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/users/view.py": {
        "view": {
            "name": "view",
            "location": 11,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        }
    },
    "morpcc-master/morpcc/users/xattrprovider.py": {
        "get_xattr_provider": {
            "name": "get_xattr_provider",
            "location": 39,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "morpcc-master/morpcc/users/__init__.py": {},
    "morpcc-master/morpcc/validator/field.py": {
        "valid_refdatakey": {
            "name": "valid_refdatakey",
            "location": 6,
            "return": [],
            "arguments": {
                "request": [],
                "schema": [],
                "field": [],
                "value": [],
                "mode": []
            }
        }
    },
    "morpcc-master/morpcc/validator/reference.py": {
        "ReferenceValidator.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "resource_type": [],
                "attribute": []
            }
        },
        "ReferenceValidator.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "schema": [],
                "field": [],
                "value": [],
                "mode": []
            }
        },
        "ReferenceValidator.get_resource": {
            "name": "get_resource",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "identifier": []
            }
        }
    },
    "morpcc-master/morpcc/validator/vocabulary.py": {
        "VocabularyValidator.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "vocabulary": []
            }
        },
        "VocabularyValidator.__call__": {
            "name": "__call__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "schema": [],
                "field": [],
                "value": [],
                "mode": []
            }
        }
    },
    "morpcc-master/morpcc/validator/__init__.py": {},
    "morpcc-master/morpcc/view/auth.py": {
        "login": {
            "name": "login",
            "location": 26,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_login": {
            "name": "process_login",
            "location": 52,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "logout": {
            "name": "logout",
            "location": 101,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "register": {
            "name": "register",
            "location": 124,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "process_register": {
            "name": "process_register",
            "location": 152,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "logout.forget": {
            "name": "forget",
            "location": 103,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "process_login.remember": {
            "name": "remember",
            "location": 80,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "process_register.remember": {
            "name": "remember",
            "location": 200,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/view/exc_views.py": {
        "httpnotfound_error": {
            "name": "httpnotfound_error",
            "location": 26,
            "return": [],
            "arguments": {
                "context": [],
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "forbidden_error": {
            "name": "forbidden_error",
            "location": 44,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "internalserver_error": {
            "name": "internalserver_error",
            "location": 79,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "unauthorized_error": {
            "name": "unauthorized_error",
            "location": 106,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "unauthorized_nouser_error": {
            "name": "unauthorized_nouser_error",
            "location": 118,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "httpnotfound_error.adjust_status": {
            "name": "adjust_status",
            "location": 28,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "forbidden_error.nocache": {
            "name": "nocache",
            "location": 46,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "forbidden_error.adjust_status": {
            "name": "adjust_status",
            "location": 62,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "internalserver_error.adjust_status": {
            "name": "adjust_status",
            "location": 81,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "unauthorized_error.nocache": {
            "name": "nocache",
            "location": 108,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "unauthorized_nouser_error.nocache": {
            "name": "nocache",
            "location": 120,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "forbidden_error.forget": {
            "name": "forget",
            "location": 52,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "morpcc-master/morpcc/view/personal_settings.py": {
        "get_user_info_schema": {
            "name": "get_user_info_schema",
            "location": 20,
            "return": [],
            "arguments": {
                "user": [],
                "request": []
            }
        },
        "userinfo_form": {
            "name": "userinfo_form",
            "location": 118,
            "return": [
                "deform.Form"
            ],
            "arguments": {
                "user": [],
                "request": []
            }
        },
        "attributes_form": {
            "name": "attributes_form",
            "location": 124,
            "return": [
                "deform.Form"
            ],
            "arguments": {
                "context": [],
                "request": [],
                "mode": []
            }
        },
        "password_form": {
            "name": "password_form",
            "location": 138,
            "return": [
                "deform.Form"
            ],
            "arguments": {
                "request": []
            }
        },
        "upload_form": {
            "name": "upload_form",
            "location": 151,
            "return": [
                "deform.Form"
            ],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "profile": {
            "name": "profile",
            "location": 173,
            "return": [],
            "arguments": {
                "context": [],
                "request": [
                    "morepath.Request"
                ]
            }
        },
        "process_profile": {
            "name": "process_profile",
            "location": 215,
            "return": [],
            "arguments": {
                "context": [],
                "request": []
            }
        },
        "PasswordSchema.validator": {
            "name": "validator",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "node": [
                    "'PasswordSchema'"
                ],
                "appstruct": [
                    "dict"
                ]
            }
        },
        "AdminPasswordSchema.validator": {
            "name": "validator",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "node": [
                    "'PasswordSchema'"
                ],
                "appstruct": [
                    "dict"
                ]
            }
        }
    },
    "morpcc-master/morpcc/view/__init__.py": {},
    "morpcc-master/morpcc/wizard/wizard.py": {
        "WizardStep.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "wizard": [],
                "index": []
            }
        },
        "WizardStep.macro": {
            "name": "macro",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "load_template": []
            }
        },
        "WizardStep.handler_macro": {
            "name": "handler_macro",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "load_template": []
            }
        },
        "WizardStep.can_handle": {
            "name": "can_handle",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WizardStep.finalize": {
            "name": "finalize",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WizardStep.completed": {
            "name": "completed",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WizardStep.sessiondata": {
            "name": "sessiondata",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "WizardStep.clear_sessiondata": {
            "name": "clear_sessiondata",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WizardStep.handle": {
            "name": "handle",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormWizardStep.get_form": {
            "name": "get_form",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "formid": []
            }
        },
        "FormWizardStep.can_handle": {
            "name": "can_handle",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormWizardStep.process_form": {
            "name": "process_form",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormWizardStep.completed": {
            "name": "completed",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormWizardStep.handle": {
            "name": "handle",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConditionalBlockerWizardStep.can_handle": {
            "name": "can_handle",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConditionalBlockerWizardStep.validate": {
            "name": "validate",
            "location": 159,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConditionalBlockerWizardStep.completed": {
            "name": "completed",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConditionalBlockerWizardStep.handle": {
            "name": "handle",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AgreementWizardStep.completed": {
            "name": "completed",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AgreementWizardStep.handle": {
            "name": "handle",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wizard.__init__": {
            "name": "__init__",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "request": [],
                "identifier": [],
                "style": []
            }
        },
        "Wizard.macro": {
            "name": "macro",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "load_template": [],
                "macro": []
            }
        },
        "Wizard.finalize": {
            "name": "finalize",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wizard.clear": {
            "name": "clear",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wizard.handle": {
            "name": "handle",
            "location": 238,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "morpcc-master/morpcc/wizard/__init__.py": {}
}
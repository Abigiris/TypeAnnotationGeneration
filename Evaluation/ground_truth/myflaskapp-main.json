{
    "myflaskapp-main/wsgi.py": {},
    "myflaskapp-main/app/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 24,
            "return": [],
            "arguments": {
                "config_name": []
            }
        },
        "register_extensions": {
            "name": "register_extensions",
            "location": 70,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_blueprints": {
            "name": "register_blueprints",
            "location": 84,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_errorhandlers": {
            "name": "register_errorhandlers",
            "location": 91,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_shellcontext": {
            "name": "register_shellcontext",
            "location": 100,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_commands": {
            "name": "register_commands",
            "location": 111,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_locale": {
            "name": "get_locale",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "create_app.before_request": {
            "name": "before_request",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "create_app.set_secure_headers": {
            "name": "set_secure_headers",
            "location": 42,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "create_app.init_rollbar": {
            "name": "init_rollbar",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "create_app.log_email_message": {
            "name": "log_email_message",
            "location": 58,
            "return": [],
            "arguments": {
                "message": [],
                "app": []
            }
        },
        "register_errorhandlers.render_error": {
            "name": "render_error",
            "location": 92,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "register_shellcontext.shell_context": {
            "name": "shell_context",
            "location": 101,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/app/commands.py": {
        "test": {
            "name": "test",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "check": {
            "name": "check",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "clean": {
            "name": "clean",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "translate": {
            "name": "translate",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "init": {
            "name": "init",
            "location": 47,
            "return": [],
            "arguments": {
                "lang": []
            }
        },
        "update": {
            "name": "update",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "compile": {
            "name": "compile",
            "location": 68,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/app/database.py": {
        "reference_col": {
            "name": "reference_col",
            "location": 64,
            "return": [],
            "arguments": {
                "tablename": [],
                "nullable": [],
                "pk_name": []
            }
        },
        "CRUDMixin.create": {
            "name": "create",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CRUDMixin.update": {
            "name": "update",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "commit": []
            }
        },
        "CRUDMixin.save": {
            "name": "save",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "commit": []
            }
        },
        "CRUDMixin.delete": {
            "name": "delete",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "commit": []
            }
        },
        "SurrogatePK.get_by_id": {
            "name": "get_by_id",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": [],
                "record_id": []
            }
        }
    },
    "myflaskapp-main/app/email.py": {
        "send_async_email": {
            "name": "send_async_email",
            "location": 10,
            "return": [],
            "arguments": {
                "app": [],
                "msg": []
            }
        },
        "send_email": {
            "name": "send_email",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "subject": [
                    "str"
                ],
                "sender": [
                    "str"
                ],
                "recipients": [
                    "List[str]"
                ],
                "text_body": [
                    "str"
                ],
                "html_body": [
                    "str"
                ],
                "attachments": [
                    "List"
                ],
                "sync": [
                    "bool"
                ]
            }
        }
    },
    "myflaskapp-main/app/extensions.py": {},
    "myflaskapp-main/app/settings.py": {},
    "myflaskapp-main/app/utils.py": {
        "flash_errors": {
            "name": "flash_errors",
            "location": 8,
            "return": [],
            "arguments": {
                "form": [],
                "category": []
            }
        },
        "development_only": {
            "name": "development_only",
            "location": 15,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "development_only.wrapped": {
            "name": "wrapped",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/app/__init__.py": {},
    "myflaskapp-main/app/auth/email.py": {
        "send_password_reset_email": {
            "name": "send_password_reset_email",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "'User'"
                ]
            }
        },
        "send_confirm_email": {
            "name": "send_confirm_email",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "'User'"
                ]
            }
        }
    },
    "myflaskapp-main/app/auth/forms.py": {
        "RegisterForm.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegisterForm.validate": {
            "name": "validate",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoginForm.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoginForm.validate": {
            "name": "validate",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myflaskapp-main/app/auth/views.py": {
        "logout": {
            "name": "logout",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "reset_password_request": {
            "name": "reset_password_request",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "reset_password": {
            "name": "reset_password",
            "location": 81,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "confirm_email": {
            "name": "confirm_email",
            "location": 98,
            "return": [],
            "arguments": {
                "token": []
            }
        }
    },
    "myflaskapp-main/app/auth/__init__.py": {},
    "myflaskapp-main/app/messages/models.py": {
        "Message.__repr__": {
            "name": "__repr__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myflaskapp-main/app/messages/views.py": {
        "messages": {
            "name": "messages",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/app/messages/__init__.py": {},
    "myflaskapp-main/app/notification/models.py": {
        "Notification.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "user": [
                    "'User'"
                ],
                "payload": [
                    "Dict"
                ]
            }
        },
        "Notification.update": {
            "name": "update",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "commit": []
            }
        }
    },
    "myflaskapp-main/app/notification/__init__.py": {},
    "myflaskapp-main/app/public/views.py": {
        "about": {
            "name": "about",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "home": {
            "name": "home",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "robots_txt": {
            "name": "robots_txt",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "show_database_diagram": {
            "name": "show_database_diagram",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/app/public/__init__.py": {},
    "myflaskapp-main/app/task/models.py": {
        "Task.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "description": [
                    "str"
                ],
                "user": [
                    "'User'"
                ]
            }
        },
        "Task.get_rq_job": {
            "name": "get_rq_job",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.get_progress": {
            "name": "get_progress",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myflaskapp-main/app/task/tasks.py": {
        "_set_task_progress": {
            "name": "_set_task_progress",
            "location": 19,
            "return": [],
            "arguments": {
                "progress": []
            }
        },
        "example": {
            "name": "example",
            "location": 34,
            "return": [],
            "arguments": {
                "seconds": []
            }
        }
    },
    "myflaskapp-main/app/task/__init__.py": {},
    "myflaskapp-main/app/user/forms.py": {},
    "myflaskapp-main/app/user/models.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str"
                ],
                "email": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "User.set_password": {
            "name": "set_password",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "User.check_password": {
            "name": "check_password",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "User.full_name": {
            "name": "full_name",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_reset_password_token": {
            "name": "get_reset_password_token",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "expires_in": [
                    "int"
                ]
            }
        },
        "User.verify_reset_password_token": {
            "name": "verify_reset_password_token",
            "location": 77,
            "return": [
                "Union[('User', None)]"
            ],
            "arguments": {
                "token": []
            }
        },
        "User.confirm_email": {
            "name": "confirm_email",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_confirmation_token": {
            "name": "get_confirmation_token",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.verify_confirmation_token": {
            "name": "verify_confirmation_token",
            "location": 97,
            "return": [
                "Union[('User', None)]"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "User.avatar": {
            "name": "avatar",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "User.add_notification": {
            "name": "add_notification",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": []
            }
        },
        "User.launch_task": {
            "name": "launch_task",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "description": []
            }
        },
        "User.get_tasks_in_progress": {
            "name": "get_tasks_in_progress",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_task_in_progress": {
            "name": "get_task_in_progress",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "User.add_message": {
            "name": "add_message",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "contents": []
            }
        },
        "User.new_messages": {
            "name": "new_messages",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myflaskapp-main/app/user/views.py": {
        "load_user": {
            "name": "load_user",
            "location": 20,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "members": {
            "name": "members",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "profile": {
            "name": "profile",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "notifications": {
            "name": "notifications",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "example_task": {
            "name": "example_task",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "notifications.to_date": {
            "name": "to_date",
            "location": 58,
            "return": [],
            "arguments": {
                "date_string": []
            }
        }
    },
    "myflaskapp-main/app/user/__init__.py": {},
    "myflaskapp-main/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 64,
            "return": [],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "myflaskapp-main/migrations/versions/107f0f6ae508_add_users.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 43,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/migrations/versions/37fb54649ac2_add_tasks.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/migrations/versions/3b87320ffdc5_add_messages.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/migrations/versions/40a38ea39210_add_notifications.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/tests/conftest.py": {
        "app": {
            "name": "app",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "testapp": {
            "name": "testapp",
            "location": 32,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "postgres_db": {
            "name": "postgres_db",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "db": {
            "name": "db",
            "location": 43,
            "return": [],
            "arguments": {
                "app": [],
                "postgres_db": []
            }
        },
        "user": {
            "name": "user",
            "location": 60,
            "return": [],
            "arguments": {
                "db": []
            }
        },
        "authenticated_user": {
            "name": "authenticated_user",
            "location": 67,
            "return": [],
            "arguments": {
                "user": [],
                "testapp": []
            }
        },
        "app.set_locale": {
            "name": "set_locale",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "myflaskapp-main/tests/factories.py": {},
    "myflaskapp-main/tests/__init__.py": {},
    "myflaskapp-main/tests/auth/test_forms.py": {
        "TestRegisterForm.test_validate_user_already_registered": {
            "name": "test_validate_user_already_registered",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "TestRegisterForm.test_validate_email_already_registered": {
            "name": "test_validate_email_already_registered",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "TestRegisterForm.test_validate_success": {
            "name": "test_validate_success",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "TestLoginForm.test_validate_success": {
            "name": "test_validate_success",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "TestLoginForm.test_validate_unknown_username": {
            "name": "test_validate_unknown_username",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "TestLoginForm.test_validate_invalid_password": {
            "name": "test_validate_invalid_password",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "TestLoginForm.test_validate_inactive_user": {
            "name": "test_validate_inactive_user",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        }
    },
    "myflaskapp-main/tests/auth/test_views.py": {
        "TestLoggingIn.test_login_return_200": {
            "name": "test_login_return_200",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": [],
                "endpoint": []
            }
        },
        "TestLoggingIn.test_alert_on_logout": {
            "name": "test_alert_on_logout",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": []
            }
        },
        "TestLoggingIn.test_error_message_incorrect_password": {
            "name": "test_error_message_incorrect_password",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": [],
                "endpoint": []
            }
        },
        "TestLoggingIn.test_error_message_username_doesnt_exist": {
            "name": "test_error_message_username_doesnt_exist",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": [],
                "endpoint": []
            }
        },
        "TestRegistering.test_can_register": {
            "name": "test_can_register",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": []
            }
        },
        "TestRegistering.test_error_message_passwords_dont_match": {
            "name": "test_error_message_passwords_dont_match",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": []
            }
        },
        "TestRegistering.test_error_message_user_already_registered": {
            "name": "test_error_message_user_already_registered",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "testapp": []
            }
        },
        "TestRegistering.test_confirm_email_sent": {
            "name": "test_confirm_email_sent",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "db": [],
                "testapp": []
            }
        },
        "TestRegistering.test_email_confirmation": {
            "name": "test_email_confirmation",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "db": [],
                "testapp": []
            }
        },
        "TestRegistering.test_email_confirmation_no_user_redirect": {
            "name": "test_email_confirmation_no_user_redirect",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "db": [],
                "testapp": []
            }
        },
        "TestRegistering.test_email_already_confirmed_redirect": {
            "name": "test_email_already_confirmed_redirect",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "db": [],
                "testapp": []
            }
        }
    },
    "myflaskapp-main/tests/auth/__init__.py": {},
    "myflaskapp-main/tests/messages/test_views.py": {
        "TestNotifications.test_set_last_read_time": {
            "name": "test_set_last_read_time",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "testapp": [],
                "authenticated_user": []
            }
        }
    },
    "myflaskapp-main/tests/messages/__init__.py": {},
    "myflaskapp-main/tests/public/test_views.py": {
        "test_get_robots_txt": {
            "name": "test_get_robots_txt",
            "location": 6,
            "return": [],
            "arguments": {
                "testapp": []
            }
        },
        "test_get_erd": {
            "name": "test_get_erd",
            "location": 14,
            "return": [],
            "arguments": {
                "testapp": []
            }
        }
    },
    "myflaskapp-main/tests/public/__init__.py": {},
    "myflaskapp-main/tests/user/test_models.py": {
        "TestUser.test_get_by_id": {
            "name": "test_get_by_id",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_created_at_defaults_to_datetime": {
            "name": "test_created_at_defaults_to_datetime",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_password_is_nullable": {
            "name": "test_password_is_nullable",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_factory": {
            "name": "test_factory",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "TestUser.test_check_password": {
            "name": "test_check_password",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_full_name": {
            "name": "test_full_name",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_add_notification": {
            "name": "test_add_notification",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_verify_reset_password": {
            "name": "test_verify_reset_password",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_add_message": {
            "name": "test_add_message",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myflaskapp-main/tests/user/test_views.py": {
        "TestNotifications.test_get_notifications": {
            "name": "test_get_notifications",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "testapp": [],
                "authenticated_user": []
            }
        },
        "TestNotifications.test_get_notifications_since_yesterday": {
            "name": "test_get_notifications_since_yesterday",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "testapp": [],
                "authenticated_user": []
            }
        },
        "TestNotifications.test_get_notifications_since_tomorrow": {
            "name": "test_get_notifications_since_tomorrow",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "testapp": [],
                "authenticated_user": []
            }
        }
    },
    "myflaskapp-main/tests/user/__init__.py": {}
}
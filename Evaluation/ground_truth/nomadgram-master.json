{
    "nomadgram-master/manage.py": {},
    "nomadgram-master/config/urls.py": {},
    "nomadgram-master/config/wsgi.py": {},
    "nomadgram-master/config/__init__.py": {},
    "nomadgram-master/config/settings/base.py": {},
    "nomadgram-master/config/settings/local.py": {},
    "nomadgram-master/config/settings/production.py": {},
    "nomadgram-master/config/settings/test.py": {},
    "nomadgram-master/config/settings/__init__.py": {},
    "nomadgram-master/nomadgram/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "nomadgram-master/nomadgram/__init__.py": {},
    "nomadgram-master/nomadgram/contrib/__init__.py": {},
    "nomadgram-master/nomadgram/contrib/sites/__init__.py": {},
    "nomadgram-master/nomadgram/contrib/sites/migrations/0001_initial.py": {},
    "nomadgram-master/nomadgram/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "nomadgram-master/nomadgram/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "nomadgram-master/nomadgram/contrib/sites/migrations/__init__.py": {},
    "nomadgram-master/nomadgram/images/admin.py": {},
    "nomadgram-master/nomadgram/images/apps.py": {},
    "nomadgram-master/nomadgram/images/models.py": {
        "Image.like_count": {
            "name": "like_count",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.comment_count": {
            "name": "comment_count",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Like.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/images/serializers.py": {},
    "nomadgram-master/nomadgram/images/tests.py": {},
    "nomadgram-master/nomadgram/images/urls.py": {},
    "nomadgram-master/nomadgram/images/views.py": {
        "get_key": {
            "name": "get_key",
            "location": 66,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "Images.get": {
            "name": "get",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "Images.post": {
            "name": "post",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "LikeImage.get": {
            "name": "get",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "LikeImage.post": {
            "name": "post",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "UnLikeImage.delete": {
            "name": "delete",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "CommentOnImage.post": {
            "name": "post",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "Comment.delete": {
            "name": "delete",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "comment_id": [],
                "format": []
            }
        },
        "Search.get": {
            "name": "get",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "ModerateComment.delete": {
            "name": "delete",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "comment_id": [],
                "format": []
            }
        },
        "ImageDetail.find_on_image": {
            "name": "find_on_image",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "image_id": [],
                "user": []
            }
        },
        "ImageDetail.get": {
            "name": "get",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "ImageDetail.put": {
            "name": "put",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        },
        "ImageDetail.delete": {
            "name": "delete",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": []
            }
        }
    },
    "nomadgram-master/nomadgram/images/__init__.py": {},
    "nomadgram-master/nomadgram/images/migrations/0001_initial.py": {},
    "nomadgram-master/nomadgram/images/migrations/0002_auto_20190310_2019.py": {},
    "nomadgram-master/nomadgram/images/migrations/0003_auto_20190311_1446.py": {},
    "nomadgram-master/nomadgram/images/migrations/0004_auto_20190312_1353.py": {},
    "nomadgram-master/nomadgram/images/migrations/0005_auto_20190312_1517.py": {},
    "nomadgram-master/nomadgram/images/migrations/0006_auto_20190312_1521.py": {},
    "nomadgram-master/nomadgram/images/migrations/0007_image_tags.py": {},
    "nomadgram-master/nomadgram/images/migrations/__init__.py": {},
    "nomadgram-master/nomadgram/notifications/admin.py": {},
    "nomadgram-master/nomadgram/notifications/apps.py": {},
    "nomadgram-master/nomadgram/notifications/models.py": {
        "Notification.__str__": {
            "name": "__str__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/notifications/serializers.py": {},
    "nomadgram-master/nomadgram/notifications/tests.py": {},
    "nomadgram-master/nomadgram/notifications/urls.py": {},
    "nomadgram-master/nomadgram/notifications/views.py": {
        "create_notification": {
            "name": "create_notification",
            "location": 23,
            "return": [],
            "arguments": {
                "creator": [],
                "to": [],
                "notification_type": [],
                "image": [],
                "comment": []
            }
        },
        "Notifications.get": {
            "name": "get",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        }
    },
    "nomadgram-master/nomadgram/notifications/__init__.py": {},
    "nomadgram-master/nomadgram/notifications/migrations/0001_initial.py": {},
    "nomadgram-master/nomadgram/notifications/migrations/0002_auto_20190314_1205.py": {},
    "nomadgram-master/nomadgram/notifications/migrations/0003_notification_comment.py": {},
    "nomadgram-master/nomadgram/notifications/migrations/0004_auto_20190316_2126.py": {},
    "nomadgram-master/nomadgram/notifications/migrations/__init__.py": {},
    "nomadgram-master/nomadgram/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ],
                "sociallogin": [
                    "Any"
                ]
            }
        }
    },
    "nomadgram-master/nomadgram/users/admin.py": {},
    "nomadgram-master/nomadgram/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.post_count": {
            "name": "post_count",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.followers_count": {
            "name": "followers_count",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.following_count": {
            "name": "following_count",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/users/serializers.py": {},
    "nomadgram-master/nomadgram/users/urls.py": {},
    "nomadgram-master/nomadgram/users/views.py": {
        "UserFollowingFBV": {
            "name": "UserFollowingFBV",
            "location": 147,
            "return": [],
            "arguments": {
                "request": [],
                "username": []
            }
        },
        "ExploreUsers.get": {
            "name": "get",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "FollowUser.post": {
            "name": "post",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": []
            }
        },
        "UnFollowUser.post": {
            "name": "post",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": []
            }
        },
        "UserProfile.get_user": {
            "name": "get_user",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "UserProfile.get": {
            "name": "get",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserProfile.put": {
            "name": "put",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserFollwers.get": {
            "name": "get",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserFollwing.get": {
            "name": "get",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "Search.get": {
            "name": "get",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "ChangePassword.put": {
            "name": "put",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        }
    },
    "nomadgram-master/nomadgram/users/__init__.py": {},
    "nomadgram-master/nomadgram/users/migrations/0001_initial.py": {},
    "nomadgram-master/nomadgram/users/migrations/0002_auto_20190310_1936.py": {},
    "nomadgram-master/nomadgram/users/migrations/0003_auto_20190310_1947.py": {},
    "nomadgram-master/nomadgram/users/migrations/0004_auto_20190310_2019.py": {},
    "nomadgram-master/nomadgram/users/migrations/0005_auto_20190310_2019.py": {},
    "nomadgram-master/nomadgram/users/migrations/0006_auto_20190311_1446.py": {},
    "nomadgram-master/nomadgram/users/migrations/0007_auto_20190312_1353.py": {},
    "nomadgram-master/nomadgram/users/migrations/0008_auto_20190312_1517.py": {},
    "nomadgram-master/nomadgram/users/migrations/0009_auto_20190312_1521.py": {},
    "nomadgram-master/nomadgram/users/migrations/0010_auto_20190312_1533.py": {},
    "nomadgram-master/nomadgram/users/migrations/0011_auto_20190314_0211.py": {},
    "nomadgram-master/nomadgram/users/migrations/0012_auto_20190314_1200.py": {},
    "nomadgram-master/nomadgram/users/migrations/0013_auto_20190314_1205.py": {},
    "nomadgram-master/nomadgram/users/migrations/0014_auto_20190314_1205.py": {},
    "nomadgram-master/nomadgram/users/migrations/0015_auto_20190314_1232.py": {},
    "nomadgram-master/nomadgram/users/migrations/0016_auto_20190316_2126.py": {},
    "nomadgram-master/nomadgram/users/migrations/__init__.py": {},
    "nomadgram-master/nomadgram/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [
                    "bool"
                ],
                "extracted": [
                    "Sequence[Any]"
                ]
            }
        }
    },
    "nomadgram-master/nomadgram/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nomadgram-master/nomadgram/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "nomadgram-master/nomadgram/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [],
            "arguments": {
                "user": [
                    "settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "nomadgram-master/nomadgram/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "RequestFactory"
                ]
            }
        }
    },
    "nomadgram-master/nomadgram/users/tests/__init__.py": {}
}
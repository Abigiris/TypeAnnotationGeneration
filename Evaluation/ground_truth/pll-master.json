{
    "pll-master/setup.py": {},
    "pll-master/pll/fmap.py": {
        "compose": {
            "name": "compose",
            "location": 19,
            "return": [
                "Callable[(..., B)]"
            ],
            "arguments": {
                "f": [
                    "Callable[([A], B)]"
                ],
                "g": [
                    "Callable[(..., A)]"
                ]
            }
        },
        "fmap": {
            "name": "fmap",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ],
                "obj": [
                    "Any"
                ]
            }
        },
        "_fmap": {
            "name": "_fmap",
            "location": 36,
            "return": [],
            "arguments": {
                "obj": [],
                "f": []
            }
        },
        "_": {
            "name": "_",
            "location": 79,
            "return": [],
            "arguments": {
                "obj": [],
                "f": []
            }
        }
    },
    "pll-master/pll/util.py": {
        "as_submitted": {
            "name": "as_submitted",
            "location": 14,
            "return": [
                "Iterable[Awaitable[A]]"
            ],
            "arguments": {
                "it": [
                    "Iterable[Awaitable[A]]"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 27,
            "return": [
                "A"
            ],
            "arguments": {
                "coro": [
                    "Awaitable[A]"
                ]
            }
        },
        "update_pbar": {
            "name": "update_pbar",
            "location": 34,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ],
                "pbar": [
                    "tqdm.tqdm"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "update_pbar._update_pbar": {
            "name": "_update_pbar",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "pll-master/pll/__init__.py": {
        "Pll.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "it": [
                    "Iterable[Awaitable[A]]"
                ]
            }
        },
        "Pll.from_non_coroutines": {
            "name": "from_non_coroutines",
            "location": 32,
            "return": [
                "'Pll[A]'"
            ],
            "arguments": {
                "cls": [],
                "it": [
                    "Iterable[A]"
                ]
            }
        },
        "Pll.__reconstruct": {
            "name": "__reconstruct",
            "location": 37,
            "return": [
                "'Pll[B]'"
            ],
            "arguments": {
                "self": [],
                "it": [
                    "Iterable[Awaitable[B]]"
                ],
                "executor": [
                    "Executor"
                ],
                "pbars": [
                    "List[tqdm.tqdm]"
                ]
            }
        },
        "Pll.__iter__": {
            "name": "__iter__",
            "location": 52,
            "return": [
                "Iterator[A]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pll.map": {
            "name": "map",
            "location": 61,
            "return": [
                "'Pll[B]'"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Callable[([A], B)]"
                ]
            }
        },
        "Pll.map_in_executor": {
            "name": "map_in_executor",
            "location": 70,
            "return": [
                "'Pll[B]'"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Callable[([A], B)]"
                ],
                "executor": [
                    "Executor"
                ],
                "loop": [
                    "AbstractEventLoop"
                ]
            }
        },
        "Pll.bind": {
            "name": "bind",
            "location": 90,
            "return": [
                "'Pll[B]'"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Callable[([A], Awaitable[B])]"
                ]
            }
        },
        "Pll.show_progress": {
            "name": "show_progress",
            "location": 102,
            "return": [
                "'Pll[A]'"
            ],
            "arguments": {
                "self": [],
                "style": [
                    "Optional[str]"
                ]
            }
        },
        "Pll.as_completed": {
            "name": "as_completed",
            "location": 120,
            "return": [
                "'Pll[A]'"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pll.reduce": {
            "name": "reduce",
            "location": 134,
            "return": [
                "B"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Callable[([B, A], B)]"
                ]
            }
        },
        "Pll.aggregate": {
            "name": "aggregate",
            "location": 140,
            "return": [
                "B"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Callable[([Iterable[A]], B)]"
                ]
            }
        }
    },
    "pll-master/test/test_basic.py": {
        "test_doesnt_break": {
            "name": "test_doesnt_break",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "pll-master/test/__init__.py": {}
}
{
    "postgrespy-master/setup.py": {},
    "postgrespy-master/postgrespy/db.py": {
        "get_pool": {
            "name": "get_pool",
            "location": 20,
            "return": [],
            "arguments": {
                "minconn": [],
                "maxconn": [],
                "database": [],
                "user": [],
                "password": [],
                "host": [],
                "port": []
            }
        },
        "get_conn_cur": {
            "name": "get_conn_cur",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "close": {
            "name": "close",
            "location": 64,
            "return": [],
            "arguments": {
                "conn": [],
                "cur": []
            }
        }
    },
    "postgrespy-master/postgrespy/fields.py": {
        "BaseField.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextField.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "EnumField.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "IntegerField.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ]
            }
        },
        "BooleanField.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "bool"
                ]
            }
        },
        "BooleanField.__eq__": {
            "name": "__eq__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "val": [
                    "object"
                ]
            }
        },
        "JsonBField.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "object"
                ]
            }
        },
        "JsonBField.__getitem__": {
            "name": "__getitem__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "JsonBField.__setitem__": {
            "name": "__setitem__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "ArrayField.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "list"
                ]
            }
        },
        "ArrayField.__len__": {
            "name": "__len__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayField.__getitem__": {
            "name": "__getitem__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "ArrayField.__iter__": {
            "name": "__iter__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayField.__next__": {
            "name": "__next__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateTimeField.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "datetime"
                ]
            }
        }
    },
    "postgrespy-master/postgrespy/models.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Model.__setattr__": {
            "name": "__setattr__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Model.save": {
            "name": "save",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.insert": {
            "name": "insert",
            "location": 53,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Model.update": {
            "name": "update",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._update": {
            "name": "_update",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.fetchone": {
            "name": "fetchone",
            "location": 164,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Model.fetchall": {
            "name": "fetchall",
            "location": 181,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Model.fetchmany": {
            "name": "fetchmany",
            "location": 195,
            "return": [],
            "arguments": {
                "cls": [],
                "size": []
            }
        },
        "Model.delete": {
            "name": "delete",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._insert": {
            "name": "_insert",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "postgrespy-master/postgrespy/queries.py": {
        "Query.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "model_cls": []
            }
        },
        "Query.__enter__": {
            "name": "__enter__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Query.__exit__": {
            "name": "__exit__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "tb": []
            }
        },
        "Query.order_by": {
            "name": "order_by",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Query.execute": {
            "name": "execute",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "values": [
                    "Tuple"
                ]
            }
        },
        "Query.fetchone": {
            "name": "fetchone",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Query.fetchall": {
            "name": "fetchall",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Query.fetchmany": {
            "name": "fetchmany",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "Select.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model_cls": [],
                "where": [
                    "str"
                ]
            }
        },
        "Join.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model_cls_0": [],
                "join_type_0": [
                    "str"
                ],
                "model_cls_1": [],
                "on_clause_0": [
                    "str"
                ],
                "join_type_1": [],
                "model_cls_2": [],
                "on_clause_1": []
            }
        },
        "Join.fetchone": {
            "name": "fetchone",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Join.fetchmany": {
            "name": "fetchmany",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "Join.fetchall": {
            "name": "fetchall",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "postgrespy-master/postgrespy/__init__.py": {},
    "postgrespy-master/tests/models.py": {},
    "postgrespy-master/tests/test_fields.py": {
        "ArrayFieldTestCase.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayFieldTestCase.tearDown": {
            "name": "tearDown",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayFieldTestCase.test_array_field": {
            "name": "test_array_field",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayOfJsonTestCase.setUp": {
            "name": "setUp",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayOfJsonTestCase.tearDown": {
            "name": "tearDown",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayOfJsonTestCase.test_array_of_json_field": {
            "name": "test_array_of_json_field",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateTimeFieldTestCase.setUp": {
            "name": "setUp",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateTimeFieldTestCase.tearDown": {
            "name": "tearDown",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateTimeFieldTestCase.test_date_time_field": {
            "name": "test_date_time_field",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BooleanTestCase.setUp": {
            "name": "setUp",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BooleanTestCase.test_boolean_field": {
            "name": "test_boolean_field",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BooleanTestCase.tearDown": {
            "name": "tearDown",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonBTestCase.setUp": {
            "name": "setUp",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonBTestCase.test_jsonb_field": {
            "name": "test_jsonb_field",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonBTestCase.tearDown": {
            "name": "tearDown",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "postgrespy-master/tests/test_others.py": {
        "SelectTestCase": {
            "name": "SelectTestCase",
            "location": 60,
            "return": [],
            "arguments": {
                "TestCase": []
            }
        },
        "JoinTestCase": {
            "name": "JoinTestCase",
            "location": 80,
            "return": [],
            "arguments": {
                "TestCase": []
            }
        },
        "SaveLoadDeleteTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SaveLoadDeleteTestCase.test_save_load_delete": {
            "name": "test_save_load_delete",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SaveLoadDeleteTestCase.tearDown": {
            "name": "tearDown",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelFetchTestCase.setUp": {
            "name": "setUp",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelFetchTestCase.test_fetch_all": {
            "name": "test_fetch_all",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelFetchTestCase.test_fetch_many": {
            "name": "test_fetch_many",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelFetchTestCase.tearDown": {
            "name": "tearDown",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectTestCase.setUp": {
            "name": "setUp",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectTestCase.test_select_with_order": {
            "name": "test_select_with_order",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "SelectTestCase.tearDown": {
            "name": "tearDown",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JoinTestCase.setUp": {
            "name": "setUp",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JoinTestCase.test_joins": {
            "name": "test_joins",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JoinTestCase.tearDown": {
            "name": "tearDown",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NothingTestCase.setUp": {
            "name": "setUp",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NothingTestCase.test_nothing": {
            "name": "test_nothing",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NothingTestCase.tearDown": {
            "name": "tearDown",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "postgrespy-master/tests/__init__.py": {}
}
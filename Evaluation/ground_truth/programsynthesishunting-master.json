{
    "programsynthesishunting-master/src/PonyGE2/datasets/process_banknote.py": {},
    "programsynthesishunting-master/src/PonyGE2/datasets/process_housing.py": {
        "normalise": {
            "name": "normalise",
            "location": 31,
            "return": [],
            "arguments": {
                "x": [],
                "minv": [],
                "maxv": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/datasets/process_tower.py": {
        "scale": {
            "name": "scale",
            "location": 39,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "normalise": {
            "name": "normalise",
            "location": 66,
            "return": [],
            "arguments": {
                "x": [],
                "minv": [],
                "maxv": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/datasets/progsys/modifyData.py": {
        "read_file": {
            "name": "read_file",
            "location": 3,
            "return": [],
            "arguments": {
                "filename": [],
                "train": []
            }
        },
        "remove_newlines": {
            "name": "remove_newlines",
            "location": 13,
            "return": [],
            "arguments": {
                "inval_string": []
            }
        },
        "replace_space_with_newline": {
            "name": "replace_space_with_newline",
            "location": 21,
            "return": [],
            "arguments": {
                "inval_string": []
            }
        },
        "even_squares_append_0": {
            "name": "even_squares_append_0",
            "location": 37,
            "return": [],
            "arguments": {
                "outval_string": []
            }
        },
        "pig_latin": {
            "name": "pig_latin",
            "location": 45,
            "return": [],
            "arguments": {
                "sentences": []
            }
        },
        "write_file": {
            "name": "write_file",
            "location": 61,
            "return": [],
            "arguments": {
                "filename": [],
                "data": [],
                "train": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/grammars/progsys_solutions.py": {
        "checksum": {
            "name": "checksum",
            "location": 2,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "compare_string_lenghths": {
            "name": "compare_string_lenghths",
            "location": 12,
            "return": [],
            "arguments": {
                "n1": [],
                "n2": [],
                "n3": []
            }
        },
        "count_odds": {
            "name": "count_odds",
            "location": 18,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "digits": {
            "name": "digits",
            "location": 26,
            "return": [],
            "arguments": {
                "i1": []
            }
        },
        "double_letters": {
            "name": "double_letters",
            "location": 38,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "even_squares": {
            "name": "even_squares",
            "location": 49,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "for_loop_index": {
            "name": "for_loop_index",
            "location": 60,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "step": []
            }
        },
        "grade": {
            "name": "grade",
            "location": 70,
            "return": [],
            "arguments": {
                "a_thresh": [],
                "b_thresh": [],
                "c_thresh": [],
                "d_thresh": [],
                "grade": []
            }
        },
        "last_index_of_zero": {
            "name": "last_index_of_zero",
            "location": 85,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "median": {
            "name": "median",
            "location": 93,
            "return": [],
            "arguments": {
                "in0": [],
                "in1": [],
                "in2": []
            }
        },
        "mirror_image": {
            "name": "mirror_image",
            "location": 98,
            "return": [],
            "arguments": {
                "vec1": [],
                "vec2": []
            }
        },
        "negative_to_zero": {
            "name": "negative_to_zero",
            "location": 104,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "number_IO": {
            "name": "number_IO",
            "location": 114,
            "return": [],
            "arguments": {
                "int": [],
                "float": []
            }
        },
        "pig_latin": {
            "name": "pig_latin",
            "location": 118,
            "return": [],
            "arguments": {
                "sentence": []
            }
        },
        "replace_space_with_newline": {
            "name": "replace_space_with_newline",
            "location": 128,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "small_or_large": {
            "name": "small_or_large",
            "location": 140,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "smallest": {
            "name": "smallest",
            "location": 149,
            "return": [],
            "arguments": {
                "in0": [],
                "in1": [],
                "in2": [],
                "in3": []
            }
        },
        "string_lengths_backwards": {
            "name": "string_lengths_backwards",
            "location": 154,
            "return": [],
            "arguments": {
                "vec": []
            }
        },
        "sum_of_squares": {
            "name": "sum_of_squares",
            "location": 162,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "super_anagrams": {
            "name": "super_anagrams",
            "location": 169,
            "return": [],
            "arguments": {
                "stringx": [],
                "stringy": []
            }
        },
        "syllables": {
            "name": "syllables",
            "location": 177,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "vector_average": {
            "name": "vector_average",
            "location": 185,
            "return": [],
            "arguments": {
                "vector": []
            }
        },
        "vectors_summed": {
            "name": "vectors_summed",
            "location": 193,
            "return": [],
            "arguments": {
                "vector1": [],
                "vector2": []
            }
        },
        "x_word_lines": {
            "name": "x_word_lines",
            "location": 200,
            "return": [],
            "arguments": {
                "string": [],
                "wordsPerLine": []
            }
        },
        "digits.int_to_int_array": {
            "name": "int_to_int_array",
            "location": 27,
            "return": [],
            "arguments": {
                "integer": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/grammars/progsysAutogen/GrammarGenerator.py": {
        "write_ind_grammar": {
            "name": "write_ind_grammar",
            "location": 3,
            "return": [],
            "arguments": {
                "problem_name": []
            }
        },
        "grammarFromDic": {
            "name": "grammarFromDic",
            "location": 10,
            "return": [],
            "arguments": {
                "metadata_dic": []
            }
        },
        "makePredefined": {
            "name": "makePredefined",
            "location": 110,
            "return": [],
            "arguments": {
                "data_types": [],
                "output_types": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/grammars/progsysNLP/NLP_grammar_mod.py": {
        "get_problem_words": {
            "name": "get_problem_words",
            "location": 4,
            "return": [],
            "arguments": {
                "problem_name": []
            }
        },
        "match_words": {
            "name": "match_words",
            "location": 10,
            "return": [],
            "arguments": {
                "word_list": []
            }
        },
        "modify_grammar": {
            "name": "modify_grammar",
            "location": 19,
            "return": [],
            "arguments": {
                "problem_name": [],
                "matched_words": []
            }
        },
        "apply_rules": {
            "name": "apply_rules",
            "location": 44,
            "return": [],
            "arguments": {
                "problem_name": []
            }
        },
        "modify_grammar_with_problem_keywords": {
            "name": "modify_grammar_with_problem_keywords",
            "location": 50,
            "return": [],
            "arguments": {
                "problem_name": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/ponyge.py": {
        "mane": {
            "name": "mane",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/agent/agent.py": {
        "Agent.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "ip": []
            }
        },
        "Agent.sense": {
            "name": "sense",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "agents": []
            }
        },
        "Agent.act": {
            "name": "act",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Agent.update": {
            "name": "update",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/hill_climbing.py": {
        "LAHC_search_loop": {
            "name": "LAHC_search_loop",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "SCHC_search_loop": {
            "name": "SCHC_search_loop",
            "location": 150,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/mapper.py": {
        "mapper": {
            "name": "mapper",
            "location": 9,
            "return": [],
            "arguments": {
                "genome": [],
                "tree": []
            }
        },
        "derivation_dic_from_tree": {
            "name": "derivation_dic_from_tree",
            "location": 71,
            "return": [],
            "arguments": {
                "tree": []
            }
        },
        "map_ind_from_genome": {
            "name": "map_ind_from_genome",
            "location": 87,
            "return": [],
            "arguments": {
                "genome": []
            }
        },
        "map_tree_from_genome": {
            "name": "map_tree_from_genome",
            "location": 203,
            "return": [],
            "arguments": {
                "genome": []
            }
        },
        "genome_tree_map": {
            "name": "genome_tree_map",
            "location": 231,
            "return": [],
            "arguments": {
                "tree": [],
                "genome": [],
                "output": [],
                "index": [],
                "depth": [],
                "max_depth": [],
                "nodes": [],
                "invalid": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/parameters.py": {
        "load_params": {
            "name": "load_params",
            "location": 199,
            "return": [],
            "arguments": {
                "file_name": []
            }
        },
        "set_params": {
            "name": "set_params",
            "location": 241,
            "return": [],
            "arguments": {
                "command_line_args": [],
                "create_files": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/search_loop.py": {
        "search_loop": {
            "name": "search_loop",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "set_max_cache_size": {
            "name": "set_max_cache_size",
            "location": 55,
            "return": [],
            "arguments": {
                "individuals": []
            }
        },
        "search_loop_from_state": {
            "name": "search_loop_from_state",
            "location": 67,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/step.py": {
        "step": {
            "name": "step",
            "location": 8,
            "return": [],
            "arguments": {
                "individuals": []
            }
        },
        "steady_state_step": {
            "name": "steady_state_step",
            "location": 42,
            "return": [],
            "arguments": {
                "individuals": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/distributed_algorithm/search_loop.py": {
        "create_agents": {
            "name": "create_agents",
            "location": 9,
            "return": [],
            "arguments": {
                "n": [],
                "p": []
            }
        },
        "search_loop": {
            "name": "search_loop",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/distributed_algorithm/step.py": {
        "step": {
            "name": "step",
            "location": 2,
            "return": [],
            "arguments": {
                "agents": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/algorithm/distributed_algorithm/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/experimental/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/evaluation.py": {
        "evaluate_fitness": {
            "name": "evaluate_fitness",
            "location": 9,
            "return": [],
            "arguments": {
                "individuals": []
            }
        },
        "eval_or_append": {
            "name": "eval_or_append",
            "location": 116,
            "return": [],
            "arguments": {
                "ind": [],
                "results": [],
                "pool": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/minimise_nodes.py": {
        "minimise_nodes.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "minimise_nodes.evaluate": {
            "name": "evaluate",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/novelty.py": {
        "novelty.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "novelty.evaluate": {
            "name": "evaluate",
            "location": 17,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "ind": [
                    "Individual"
                ]
            }
        },
        "novelty.basic": {
            "name": "basic",
            "location": 26,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "ind": [
                    "Individual"
                ]
            }
        },
        "novelty.evaluate_distance": {
            "name": "evaluate_distance",
            "location": 32,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "ind": [
                    "Individual"
                ],
                "novelty_alg": [
                    "str"
                ],
                "max_comparisons": [
                    "int"
                ]
            }
        },
        "novelty.compare_tree_dicts": {
            "name": "compare_tree_dicts",
            "location": 110,
            "return": [
                "float"
            ],
            "arguments": {
                "tree_dic1": [
                    "dict"
                ],
                "tree_dic2": [
                    "dict"
                ]
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/progsys.py": {
        "progsys.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "progsys.evaluate": {
            "name": "evaluate",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        },
        "progsys.run_program": {
            "name": "run_program",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "program": []
            }
        },
        "progsys.create_flat_AST": {
            "name": "create_flat_AST",
            "location": 114,
            "return": [
                "dict"
            ],
            "arguments": {
                "program": [
                    "str"
                ]
            }
        },
        "progsys.create_eval_process": {
            "name": "create_eval_process",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "progsys.format_program": {
            "name": "format_program",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "individual": [],
                "header": [],
                "footer": []
            }
        },
        "progsys.format_individual": {
            "name": "format_individual",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "additional_indent": []
            }
        },
        "progsys.get_data": {
            "name": "get_data",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "train": [],
                "test": [],
                "grammar": []
            }
        },
        "progsys.evaluate_code": {
            "name": "evaluate_code",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/pymax.py": {
        "pymax.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pymax.evaluate": {
            "name": "evaluate",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/scanner_eval.py": {
        "scanner_eval.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "scanner_eval.evaluate": {
            "name": "evaluate",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/sequence_match.py": {
        "succ": {
            "name": "succ",
            "location": 31,
            "return": [],
            "arguments": {
                "n": [],
                "maxv": []
            }
        },
        "pred": {
            "name": "pred",
            "location": 43,
            "return": [],
            "arguments": {
                "n": [],
                "minv": []
            }
        },
        "truncate": {
            "name": "truncate",
            "location": 55,
            "return": [],
            "arguments": {
                "n": [],
                "g": []
            }
        },
        "dist": {
            "name": "dist",
            "location": 69,
            "return": [],
            "arguments": {
                "t0": [],
                "x0": []
            }
        },
        "dtw_dist": {
            "name": "dtw_dist",
            "location": 81,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "lev_dist": {
            "name": "lev_dist",
            "location": 97,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "compress": {
            "name": "compress",
            "location": 112,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "compressibility": {
            "name": "compressibility",
            "location": 125,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "proglen": {
            "name": "proglen",
            "location": 137,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "sequence_match.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sequence_match.evaluate": {
            "name": "evaluate",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/string_match.py": {
        "string_match.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "string_match.evaluate": {
            "name": "evaluate",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/TCPScanner.py": {
        "TCPScanner.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "TCPScanner.set_timeout": {
            "name": "set_timeout",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "new_timeout": []
            }
        },
        "TCPScanner.TCP_connect": {
            "name": "TCP_connect",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "ip": [],
                "port_number": [],
                "retries": []
            }
        },
        "TCPScanner.scan_ports": {
            "name": "scan_ports",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "host_ip": [],
                "ports_os": [],
                "wait_btw_ports": [],
                "retries": []
            }
        },
        "TCPScanner.scan_ips": {
            "name": "scan_ips",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "ip_string": [],
                "ports_os": [],
                "wait_btw_ips": [],
                "wait_btw_ports": [],
                "retries": []
            }
        },
        "TCPScanner.print_results": {
            "name": "print_results",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TCPScanner.get_num_open_ports": {
            "name": "get_num_open_ports",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TCPScanner.clear_scan_dic": {
            "name": "clear_scan_dic",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TCPScanner.get_num_ports": {
            "name": "get_num_ports",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "ports_os": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/base_ff_classes/base_ff.py": {
        "base_ff.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "base_ff.__call__": {
            "name": "__call__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        },
        "base_ff.evaluate": {
            "name": "evaluate",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/base_ff_classes/ff_template.py": {
        "ff_template.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ff_template.evaluate": {
            "name": "evaluate",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/base_ff_classes/moo_ff.py": {
        "moo_ff.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "fitness_functions": []
            }
        },
        "moo_ff.__call__": {
            "name": "__call__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        },
        "moo_ff.value": {
            "name": "value",
            "location": 61,
            "return": [],
            "arguments": {
                "fitness_vector": [],
                "objective_index": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/base_ff_classes/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/multi_objective/binary_phenotype_to_float.py": {
        "binary_phenotype_to_float.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "binary_phenotype_to_float.evaluate": {
            "name": "evaluate",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/multi_objective/singlefit_multiobj.py": {
        "singlefit_multiobj.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "singlefit_multiobj.evaluate": {
            "name": "evaluate",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        },
        "singlefit_multiobj.value": {
            "name": "value",
            "location": 52,
            "return": [],
            "arguments": {
                "fitness_vector": [],
                "objective_index": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/multi_objective/zdt1.py": {
        "zdt1.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "zdt1.evaluate": {
            "name": "evaluate",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/multi_objective/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/RegexEval.py": {
        "RegexEval.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegexEval.call_fitness": {
            "name": "call_fitness",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "individual": [],
                "q": []
            }
        },
        "RegexEval.calculate_fitness": {
            "name": "calculate_fitness",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "eval_results": []
            }
        },
        "RegexEval.test_regex": {
            "name": "test_regex",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "compiled_regex": []
            }
        },
        "RegexEval.evaluate": {
            "name": "evaluate",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/testing/RegexTest.py": {
        "RegexTest.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "search_string": []
            }
        },
        "RegexTest.calc_match_errors": {
            "name": "calc_match_errors",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "match_candidates": []
            }
        },
        "RegexTest.find_missing_range": {
            "name": "find_missing_range",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "a_known_match": [],
                "match_ranges": []
            }
        },
        "RegexTest.find_undesired_range": {
            "name": "find_undesired_range",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "match_candidate": [],
                "known_matches": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/testing/RegexTestGenerator.py": {
        "generate_equivalence_test_suite_replacement": {
            "name": "generate_equivalence_test_suite_replacement",
            "location": 7,
            "return": [],
            "arguments": {
                "a_match": [],
                "compiled_regex": []
            }
        },
        "generate_equivalence_test_suite_length": {
            "name": "generate_equivalence_test_suite_length",
            "location": 40,
            "return": [],
            "arguments": {
                "a_match": [],
                "compiled_regex": []
            }
        },
        "add_test_case_if_fails": {
            "name": "add_test_case_if_fails",
            "location": 75,
            "return": [],
            "arguments": {
                "new_search_string": [],
                "compiled_regex": [],
                "test_cases": []
            }
        },
        "generate_test_suite": {
            "name": "generate_test_suite",
            "location": 89,
            "return": [],
            "arguments": {
                "regex_string": []
            }
        },
        "add_re_match_to_test": {
            "name": "add_re_match_to_test",
            "location": 183,
            "return": [],
            "arguments": {
                "matches": [],
                "passing_test_string": []
            }
        },
        "generate_tests_if_string_match": {
            "name": "generate_tests_if_string_match",
            "location": 199,
            "return": [],
            "arguments": {
                "compiled_regex": [],
                "test_string": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/testing/RegexTimer.py": {
        "time_regex_test_case": {
            "name": "time_regex_test_case",
            "location": 17,
            "return": [],
            "arguments": {
                "compiled_regex": [],
                "test_case": [],
                "iterations": []
            }
        },
        "time_regex_test_case.wrap": {
            "name": "wrap",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/regex/testing/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/boolean_problem.py": {
        "boolean_true": {
            "name": "boolean_true",
            "location": 66,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "comparator": {
            "name": "comparator",
            "location": 69,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "multiplexer": {
            "name": "multiplexer",
            "location": 77,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "nparity": {
            "name": "nparity",
            "location": 91,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "make_random_boolean_fn": {
            "name": "make_random_boolean_fn",
            "location": 96,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "binlist2int": {
            "name": "binlist2int",
            "location": 108,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "boolean_problem.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "make_random_boolean_fn.f": {
            "name": "f",
            "location": 100,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/classification.py": {
        "classification.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/if_else_classifier.py": {
        "target_classifier": {
            "name": "target_classifier",
            "location": 79,
            "return": [],
            "arguments": {
                "n_vars": [],
                "n_is": [],
                "n_os": []
            }
        },
        "if_else_classifier.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "target_classifier.target": {
            "name": "target",
            "location": 80,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/regression.py": {
        "regression.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/regression_random_polynomial.py": {
        "regression_random_polynomial.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Polynomial.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "degree": [],
                "n_vars": [],
                "coefs": []
            }
        },
        "Polynomial.from_random": {
            "name": "from_random",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": [],
                "degree": [],
                "n_vars": []
            }
        },
        "Polynomial.terms": {
            "name": "terms",
            "location": 86,
            "return": [],
            "arguments": {
                "degree": [],
                "n_vars": []
            }
        },
        "Polynomial.eval": {
            "name": "eval",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Polynomial.__str__": {
            "name": "__str__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Polynomial.__str__.s": {
            "name": "s",
            "location": 107,
            "return": [],
            "arguments": {
                "pows": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/supervised_learning.py": {
        "supervised_learning.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "supervised_learning.evaluate": {
            "name": "evaluate",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "ind": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/fitness/supervised_learning/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/operators/crossover.py": {
        "crossover": {
            "name": "crossover",
            "location": 11,
            "return": [],
            "arguments": {
                "parents": []
            }
        },
        "crossover_inds": {
            "name": "crossover_inds",
            "location": 49,
            "return": [],
            "arguments": {
                "parent_0": [],
                "parent_1": []
            }
        },
        "variable_onepoint": {
            "name": "variable_onepoint",
            "location": 85,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "fixed_onepoint": {
            "name": "fixed_onepoint",
            "location": 122,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "fixed_twopoint": {
            "name": "fixed_twopoint",
            "location": 158,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "variable_twopoint": {
            "name": "variable_twopoint",
            "location": 194,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "subtree": {
            "name": "subtree",
            "location": 232,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "get_max_genome_index": {
            "name": "get_max_genome_index",
            "location": 407,
            "return": [],
            "arguments": {
                "ind_0": [],
                "ind_1": []
            }
        },
        "LTGE_crossover": {
            "name": "LTGE_crossover",
            "location": 443,
            "return": [],
            "arguments": {
                "p_0": [],
                "p_1": []
            }
        },
        "subtree.do_crossover": {
            "name": "do_crossover",
            "location": 243,
            "return": [],
            "arguments": {
                "tree0": [],
                "tree1": [],
                "shared_nodes": []
            }
        },
        "subtree.intersect": {
            "name": "intersect",
            "location": 325,
            "return": [],
            "arguments": {
                "l0": [],
                "l1": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/initialisation.py": {
        "initialisation": {
            "name": "initialisation",
            "location": 15,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "sample_genome": {
            "name": "sample_genome",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "uniform_genome": {
            "name": "uniform_genome",
            "location": 50,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "uniform_tree": {
            "name": "uniform_tree",
            "location": 61,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "seed_individuals": {
            "name": "seed_individuals",
            "location": 73,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "rhh": {
            "name": "rhh",
            "location": 117,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "PI_grow": {
            "name": "PI_grow",
            "location": 206,
            "return": [],
            "arguments": {
                "size": []
            }
        },
        "generate_ind_tree": {
            "name": "generate_ind_tree",
            "location": 275,
            "return": [],
            "arguments": {
                "max_depth": [],
                "method": []
            }
        },
        "generate_PI_ind_tree": {
            "name": "generate_PI_ind_tree",
            "location": 313,
            "return": [],
            "arguments": {
                "max_depth": []
            }
        },
        "load_population": {
            "name": "load_population",
            "location": 351,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "LTGE_initialisation": {
            "name": "LTGE_initialisation",
            "location": 460,
            "return": [],
            "arguments": {
                "size": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/mutation.py": {
        "mutation": {
            "name": "mutation",
            "location": 11,
            "return": [],
            "arguments": {
                "pop": []
            }
        },
        "int_flip_per_codon": {
            "name": "int_flip_per_codon",
            "location": 62,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "int_flip_per_ind": {
            "name": "int_flip_per_ind",
            "location": 107,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "subtree": {
            "name": "subtree",
            "location": 135,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "get_effective_length": {
            "name": "get_effective_length",
            "location": 204,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "LTGE_mutation": {
            "name": "LTGE_mutation",
            "location": 230,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "subtree.subtree_mutate": {
            "name": "subtree_mutate",
            "location": 145,
            "return": [],
            "arguments": {
                "ind_tree": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/replacement.py": {
        "replacement": {
            "name": "replacement",
            "location": 9,
            "return": [],
            "arguments": {
                "new_pop": [],
                "old_pop": []
            }
        },
        "generational": {
            "name": "generational",
            "location": 22,
            "return": [],
            "arguments": {
                "new_pop": [],
                "old_pop": []
            }
        },
        "steady_state": {
            "name": "steady_state",
            "location": 49,
            "return": [],
            "arguments": {
                "individuals": []
            }
        },
        "nsga2_replacement": {
            "name": "nsga2_replacement",
            "location": 106,
            "return": [],
            "arguments": {
                "new_pop": [],
                "old_pop": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/selection.py": {
        "selection": {
            "name": "selection",
            "location": 13,
            "return": [],
            "arguments": {
                "population": []
            }
        },
        "novelty_tournament": {
            "name": "novelty_tournament",
            "location": 52,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": []
            }
        },
        "tournament": {
            "name": "tournament",
            "location": 102,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": []
            }
        },
        "lexicase": {
            "name": "lexicase",
            "location": 133,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": []
            }
        },
        "fitness_novelty": {
            "name": "fitness_novelty",
            "location": 217,
            "return": [],
            "arguments": {
                "population": []
            }
        },
        "lexicase_and_novelty": {
            "name": "lexicase_and_novelty",
            "location": 268,
            "return": [],
            "arguments": {
                "population": []
            }
        },
        "update_bandit_tracker": {
            "name": "update_bandit_tracker",
            "location": 432,
            "return": [],
            "arguments": {
                "ind_fitness": []
            }
        },
        "truncation": {
            "name": "truncation",
            "location": 438,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": []
            }
        },
        "nsga2_selection": {
            "name": "nsga2_selection",
            "location": 456,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": []
            }
        },
        "pareto_tournament": {
            "name": "pareto_tournament",
            "location": 494,
            "return": [
                "List[Individual]"
            ],
            "arguments": {
                "population": [],
                "pareto": [],
                "tournament_size": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/subtree_parse.py": {
        "combine_snippets": {
            "name": "combine_snippets",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "reduce_trees": {
            "name": "reduce_trees",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "generate_key_and_check": {
            "name": "generate_key_and_check",
            "location": 467,
            "return": [],
            "arguments": {
                "pre": [],
                "aft": [],
                "reduce": [],
                "children": []
            }
        },
        "remove_old_snippets": {
            "name": "remove_old_snippets",
            "location": 507,
            "return": [],
            "arguments": {}
        },
        "delete_snippet": {
            "name": "delete_snippet",
            "location": 522,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "create_snippet": {
            "name": "create_snippet",
            "location": 547,
            "return": [],
            "arguments": {
                "parent": [],
                "children": [],
                "choice": [],
                "key": []
            }
        },
        "get_num_from_str": {
            "name": "get_num_from_str",
            "location": 580,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "get_NT_from_str": {
            "name": "get_NT_from_str",
            "location": 598,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "check_snippets_for_solution": {
            "name": "check_snippets_for_solution",
            "location": 615,
            "return": [],
            "arguments": {}
        },
        "reduce_trees.check_reductions": {
            "name": "check_reductions",
            "location": 161,
            "return": [],
            "arguments": {
                "alt_cs": [],
                "pre": [],
                "aft": [],
                "idx": [],
                "children": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/operators/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/representation/derivation.py": {
        "generate_tree": {
            "name": "generate_tree",
            "location": 8,
            "return": [],
            "arguments": {
                "tree": [],
                "genome": [],
                "output": [],
                "method": [],
                "nodes": [],
                "depth": [],
                "max_depth": [],
                "depth_limit": []
            }
        },
        "legal_productions": {
            "name": "legal_productions",
            "location": 95,
            "return": [],
            "arguments": {
                "method": [],
                "depth_limit": [],
                "root": [],
                "productions": []
            }
        },
        "pi_random_derivation": {
            "name": "pi_random_derivation",
            "location": 182,
            "return": [],
            "arguments": {
                "tree": [],
                "max_depth": []
            }
        },
        "pi_grow": {
            "name": "pi_grow",
            "location": 273,
            "return": [],
            "arguments": {
                "tree": [],
                "max_depth": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/representation/grammar.py": {
        "Grammar.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "Grammar.read_bnf_file": {
            "name": "read_bnf_file",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "Grammar.check_depths": {
            "name": "check_depths",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.check_recursion": {
            "name": "check_recursion",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "cur_symbol": [],
                "seen": []
            }
        },
        "Grammar.set_arity": {
            "name": "set_arity",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.set_grammar_properties": {
            "name": "set_grammar_properties",
            "location": 374,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.check_permutations": {
            "name": "check_permutations",
            "location": 409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.check_all_permutations": {
            "name": "check_all_permutations",
            "location": 440,
            "return": [],
            "arguments": {
                "self": [],
                "depth": []
            }
        },
        "Grammar.get_min_ramp_depth": {
            "name": "get_min_ramp_depth",
            "location": 545,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.find_concatenation_NTs": {
            "name": "find_concatenation_NTs",
            "location": 586,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Grammar.__str__": {
            "name": "__str__",
            "location": 633,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/representation/individual.py": {
        "Individual.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "genome": [],
                "ind_tree": [],
                "map_ind": []
            }
        },
        "Individual.get_mem_size": {
            "name": "get_mem_size",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.__lt__": {
            "name": "__lt__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Individual.__le__": {
            "name": "__le__",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Individual.__str__": {
            "name": "__str__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.deep_copy": {
            "name": "deep_copy",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Individual.evaluate": {
            "name": "evaluate",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/representation/latent_tree.py": {
        "latent_tree_random_ind": {
            "name": "latent_tree_random_ind",
            "location": 36,
            "return": [],
            "arguments": {
                "grammar": [],
                "maxdepth": [],
                "old_genome": []
            }
        },
        "latent_tree_repair": {
            "name": "latent_tree_repair",
            "location": 103,
            "return": [],
            "arguments": {
                "genome": [],
                "gram": [],
                "maxdepth": []
            }
        },
        "latent_tree_crossover": {
            "name": "latent_tree_crossover",
            "location": 114,
            "return": [],
            "arguments": {
                "g1": [],
                "g2": []
            }
        },
        "latent_tree_mutate": {
            "name": "latent_tree_mutate",
            "location": 139,
            "return": [],
            "arguments": {
                "g": []
            }
        },
        "latent_tree_random_ind._random_ind": {
            "name": "_random_ind",
            "location": 49,
            "return": [],
            "arguments": {
                "gram": [],
                "genome": [],
                "depth": [],
                "s": [],
                "name": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/representation/tree.py": {
        "Tree.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "parent": []
            }
        },
        "Tree.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tree.__copy__": {
            "name": "__copy__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tree.__eq__": {
            "name": "__eq__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "same": []
            }
        },
        "Tree.get_memory_size": {
            "name": "get_memory_size",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tree.get_target_nodes": {
            "name": "get_target_nodes",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "array": [],
                "target": []
            }
        },
        "Tree.get_node_labels": {
            "name": "get_node_labels",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "labels": []
            }
        },
        "Tree.get_tree_info": {
            "name": "get_tree_info",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "nt_keys": [],
                "genome": [],
                "output": [],
                "invalid": [],
                "max_depth": [],
                "nodes": []
            }
        },
        "Tree.print_tree": {
            "name": "print_tree",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/representation/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/scripts/baselines.py": {
        "pprint": {
            "name": "pprint",
            "location": 11,
            "return": [],
            "arguments": {
                "a": [],
                "format_string": []
            }
        },
        "fit_maj_class": {
            "name": "fit_maj_class",
            "location": 26,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_y": [],
                "test_X": []
            }
        },
        "fit_const": {
            "name": "fit_const",
            "location": 55,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_y": [],
                "test_X": []
            }
        },
        "fit_lr": {
            "name": "fit_lr",
            "location": 72,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_y": [],
                "test_X": []
            }
        },
        "fit_enet": {
            "name": "fit_enet",
            "location": 90,
            "return": [],
            "arguments": {
                "train_X": [],
                "train_y": [],
                "test_X": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/experiment_manager.py": {
        "execute_run": {
            "name": "execute_run",
            "location": 23,
            "return": [],
            "arguments": {
                "seed": []
            }
        },
        "execute_runs": {
            "name": "execute_runs",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "check_params": {
            "name": "check_params",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "testing": {
            "name": "testing",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 116,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/GE_LR_parser.py": {
        "parse_terminals": {
            "name": "parse_terminals",
            "location": 19,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "reduce": {
            "name": "reduce",
            "location": 97,
            "return": [],
            "arguments": {
                "solution": []
            }
        },
        "parse_target_string": {
            "name": "parse_target_string",
            "location": 303,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 325,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/grammar_analyser.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [],
            "arguments": {
                "command_line_args": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/python_script_evaluation.py": {
        "Worker.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "consume": [],
                "produce": []
            }
        },
        "Worker.run": {
            "name": "run",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Worker.stop_current": {
            "name": "stop_current",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/stats_parser.py": {
        "help_message": {
            "name": "help_message",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "parse_opts": {
            "name": "parse_opts",
            "location": 47,
            "return": [],
            "arguments": {
                "command_line_args": []
            }
        },
        "parse_stats_from_runs": {
            "name": "parse_stats_from_runs",
            "location": 94,
            "return": [],
            "arguments": {
                "experiment_name": []
            }
        },
        "save_average_plot_across_runs": {
            "name": "save_average_plot_across_runs",
            "location": 220,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/scripts/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/stats/stats.py": {
        "get_stats": {
            "name": "get_stats",
            "location": 59,
            "return": [],
            "arguments": {
                "individuals": [],
                "end": []
            }
        },
        "get_soo_stats": {
            "name": "get_soo_stats",
            "location": 91,
            "return": [],
            "arguments": {
                "individuals": [],
                "end": []
            }
        },
        "get_moo_stats": {
            "name": "get_moo_stats",
            "location": 181,
            "return": [],
            "arguments": {
                "individuals": [],
                "end": []
            }
        },
        "update_stats": {
            "name": "update_stats",
            "location": 309,
            "return": [],
            "arguments": {
                "individuals": [],
                "end": []
            }
        },
        "print_generation_stats": {
            "name": "print_generation_stats",
            "location": 452,
            "return": [],
            "arguments": {}
        },
        "print_first_front_stats": {
            "name": "print_first_front_stats",
            "location": 465,
            "return": [],
            "arguments": {}
        },
        "print_final_stats": {
            "name": "print_final_stats",
            "location": 477,
            "return": [],
            "arguments": {}
        },
        "print_final_moo_stats": {
            "name": "print_final_moo_stats",
            "location": 496,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/stats/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/command_line_parser.py": {
        "parse_cmd_args": {
            "name": "parse_cmd_args",
            "location": 18,
            "return": [],
            "arguments": {
                "arguments": []
            }
        },
        "SortingHelpFormatter.add_arguments": {
            "name": "add_arguments",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "actions": []
            }
        },
        "parse_cmd_args.ListAction.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "option_strings": []
            }
        },
        "parse_cmd_args.ListAction.__call__": {
            "name": "__call__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "namespace": [],
                "value": [],
                "option_string": []
            }
        },
        "parse_cmd_args.FloatAction.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "option_strings": []
            }
        },
        "parse_cmd_args.FloatAction.__call__": {
            "name": "__call__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "namespace": [],
                "value": [],
                "option_string": []
            }
        },
        "parse_cmd_args.CatchTabStr.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "option_strings": []
            }
        },
        "parse_cmd_args.CatchTabStr.__call__": {
            "name": "__call__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "namespace": [],
                "value": [],
                "option_string": []
            }
        },
        "parse_cmd_args.CachingAction.__init__": {
            "name": "__init__",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "option_strings": [],
                "CACHE": [],
                "LOOKUP_FITNESS": [],
                "LOOKUP_BAD_FITNESS": [],
                "MUTATE_DUPLICATES": []
            }
        },
        "parse_cmd_args.CachingAction.__call__": {
            "name": "__call__",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "namespace": [],
                "values": [],
                "option_string": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/general.py": {
        "check_python_version": {
            "name": "check_python_version",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/initialise_run.py": {
        "initialise_run_params": {
            "name": "initialise_run_params",
            "location": 13,
            "return": [],
            "arguments": {
                "create_files": []
            }
        },
        "set_param_imports": {
            "name": "set_param_imports",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "get_fit_func_imports": {
            "name": "get_fit_func_imports",
            "location": 179,
            "return": [],
            "arguments": {}
        },
        "return_attr_from_module": {
            "name": "return_attr_from_module",
            "location": 247,
            "return": [],
            "arguments": {
                "module_name": [],
                "attr_name": []
            }
        },
        "pool_init": {
            "name": "pool_init",
            "location": 278,
            "return": [],
            "arguments": {
                "params_": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/NSGA2.py": {
        "compute_pareto_metrics": {
            "name": "compute_pareto_metrics",
            "location": 8,
            "return": [],
            "arguments": {
                "population": []
            }
        },
        "sort_non_dominated": {
            "name": "sort_non_dominated",
            "location": 25,
            "return": [],
            "arguments": {
                "population": []
            }
        },
        "dominates": {
            "name": "dominates",
            "location": 101,
            "return": [],
            "arguments": {
                "individual1": [],
                "individual2": []
            }
        },
        "compare_fitnesses": {
            "name": "compare_fitnesses",
            "location": 146,
            "return": [],
            "arguments": {
                "ind1_value": [],
                "ind2_value": [],
                "ff": []
            }
        },
        "calculate_crowding_distance": {
            "name": "calculate_crowding_distance",
            "location": 170,
            "return": [],
            "arguments": {
                "pareto": []
            }
        },
        "crowded_comparison_operator": {
            "name": "crowded_comparison_operator",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "pareto": []
            }
        },
        "get_population_iqr": {
            "name": "get_population_iqr",
            "location": 251,
            "return": [],
            "arguments": {
                "population": [],
                "n_objectives": []
            }
        },
        "ParetoInfo.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParetoInfo.compute_iqr": {
            "name": "compute_iqr",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "population": []
            }
        },
        "ParetoInfo.update_domination_count": {
            "name": "update_domination_count",
            "location": 320,
            "return": [],
            "arguments": {
                "self": [],
                "individual": [],
                "should_increment": []
            }
        },
        "ParetoInfo.get_domination_count": {
            "name": "get_domination_count",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "individual": []
            }
        },
        "ParetoInfo.get_crowding_distance": {
            "name": "get_crowding_distance",
            "location": 360,
            "return": [],
            "arguments": {
                "self": [],
                "individual": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/state.py": {
        "create_state": {
            "name": "create_state",
            "location": 6,
            "return": [],
            "arguments": {
                "individuals": []
            }
        },
        "save_state": {
            "name": "save_state",
            "location": 47,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "load_state": {
            "name": "load_state",
            "location": 66,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "set_state": {
            "name": "set_state",
            "location": 91,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "check_name": {
            "name": "check_name",
            "location": 136,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/algorithm/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/fitness/error_metric.py": {
        "mae": {
            "name": "mae",
            "location": 7,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        },
        "rmse": {
            "name": "rmse",
            "location": 22,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        },
        "mse": {
            "name": "mse",
            "location": 37,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        },
        "hinge": {
            "name": "hinge",
            "location": 52,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        },
        "f1_score": {
            "name": "f1_score",
            "location": 70,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        },
        "Hamming_error": {
            "name": "Hamming_error",
            "location": 100,
            "return": [],
            "arguments": {
                "y": [],
                "yhat": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/fitness/get_data.py": {
        "get_Xy_train_test_separate": {
            "name": "get_Xy_train_test_separate",
            "location": 8,
            "return": [],
            "arguments": {
                "train_filename": [],
                "test_filename": [],
                "skip_header": []
            }
        },
        "get_data": {
            "name": "get_data",
            "location": 84,
            "return": [],
            "arguments": {
                "train": [],
                "test": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/fitness/math_functions.py": {
        "return_one_percent": {
            "name": "return_one_percent",
            "location": 6,
            "return": [],
            "arguments": {
                "num": [],
                "pop_size": []
            }
        },
        "return_percent": {
            "name": "return_percent",
            "location": 28,
            "return": [],
            "arguments": {
                "num": [],
                "pop_size": []
            }
        },
        "aq": {
            "name": "aq",
            "location": 40,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "pdiv": {
            "name": "pdiv",
            "location": 54,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "rlog": {
            "name": "rlog",
            "location": 91,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ppow": {
            "name": "ppow",
            "location": 108,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "ppow2": {
            "name": "ppow2",
            "location": 120,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "psqrt": {
            "name": "psqrt",
            "location": 132,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "psqrt2": {
            "name": "psqrt2",
            "location": 142,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "plog": {
            "name": "plog",
            "location": 153,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ave": {
            "name": "ave",
            "location": 163,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "percentile": {
            "name": "percentile",
            "location": 174,
            "return": [],
            "arguments": {
                "sorted_list": [],
                "p": []
            }
        },
        "binary_phen_to_float": {
            "name": "binary_phen_to_float",
            "location": 187,
            "return": [],
            "arguments": {
                "phen": [],
                "n_codon": [],
                "min_value": [],
                "max_value": []
            }
        },
        "ilog": {
            "name": "ilog",
            "location": 222,
            "return": [],
            "arguments": {
                "n": [],
                "base": []
            }
        },
        "sci_notation": {
            "name": "sci_notation",
            "location": 238,
            "return": [],
            "arguments": {
                "n": [],
                "prec": []
            }
        },
        "sample_guassian": {
            "name": "sample_guassian",
            "location": 253,
            "return": [],
            "arguments": {
                "mu": [],
                "sigma": [],
                "rectify_min": [],
                "rectify_max": []
            }
        },
        "sample_guassian.rectify": {
            "name": "rectify",
            "location": 257,
            "return": [],
            "arguments": {
                "num": [],
                "bot": [],
                "top": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/fitness/optimize_constants.py": {
        "optimize_constants": {
            "name": "optimize_constants",
            "location": 9,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "ind": []
            }
        },
        "make_consts_consecutive": {
            "name": "make_consts_consecutive",
            "location": 62,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "replace_consts_with_values": {
            "name": "replace_consts_with_values",
            "location": 86,
            "return": [],
            "arguments": {
                "s": [],
                "c": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/fitness/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/representation/check_methods.py": {
        "check_ind": {
            "name": "check_ind",
            "location": 6,
            "return": [],
            "arguments": {
                "ind": [],
                "check": []
            }
        },
        "check_genome_mapping": {
            "name": "check_genome_mapping",
            "location": 38,
            "return": [],
            "arguments": {
                "ind": []
            }
        },
        "check_ind_from_parser": {
            "name": "check_ind_from_parser",
            "location": 85,
            "return": [],
            "arguments": {
                "ind": [],
                "target": []
            }
        },
        "check_genome_from_tree": {
            "name": "check_genome_from_tree",
            "location": 122,
            "return": [],
            "arguments": {
                "ind_tree": []
            }
        },
        "check_expansion": {
            "name": "check_expansion",
            "location": 171,
            "return": [],
            "arguments": {
                "tree": [],
                "nt_keys": []
            }
        },
        "build_genome": {
            "name": "build_genome",
            "location": 201,
            "return": [],
            "arguments": {
                "tree": [],
                "genome": []
            }
        },
        "get_nodes_and_depth": {
            "name": "get_nodes_and_depth",
            "location": 221,
            "return": [],
            "arguments": {
                "tree": [],
                "nodes": [],
                "max_depth": []
            }
        },
        "get_max_tree_depth": {
            "name": "get_max_tree_depth",
            "location": 265,
            "return": [],
            "arguments": {
                "tree": [],
                "max_depth": []
            }
        },
        "get_current_depth": {
            "name": "get_current_depth",
            "location": 282,
            "return": [],
            "arguments": {
                "tree": []
            }
        },
        "get_output": {
            "name": "get_output",
            "location": 309,
            "return": [],
            "arguments": {
                "ind_tree": []
            }
        },
        "ret_true": {
            "name": "ret_true",
            "location": 345,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "generate_codon": {
            "name": "generate_codon",
            "location": 360,
            "return": [],
            "arguments": {
                "NT": [],
                "choice": []
            }
        },
        "check_tree": {
            "name": "check_tree",
            "location": 386,
            "return": [],
            "arguments": {
                "tree": []
            }
        },
        "get_output.build_output": {
            "name": "build_output",
            "location": 320,
            "return": [],
            "arguments": {
                "tree": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/representation/python_filter.py": {
        "python_filter": {
            "name": "python_filter",
            "location": 1,
            "return": [],
            "arguments": {
                "txt": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/representation/__init__.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/stats/clean_stats.py": {
        "clean_stats": {
            "name": "clean_stats",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/stats/file_io.py": {
        "save_stats_to_file": {
            "name": "save_stats_to_file",
            "location": 9,
            "return": [],
            "arguments": {
                "stats": [],
                "end": []
            }
        },
        "save_stats_headers": {
            "name": "save_stats_headers",
            "location": 37,
            "return": [],
            "arguments": {
                "stats": []
            }
        },
        "save_best_ind_to_file": {
            "name": "save_best_ind_to_file",
            "location": 53,
            "return": [],
            "arguments": {
                "stats": [],
                "ind": [],
                "end": [],
                "name": []
            }
        },
        "save_first_front_to_file": {
            "name": "save_first_front_to_file",
            "location": 82,
            "return": [],
            "arguments": {
                "stats": [],
                "end": [],
                "name": []
            }
        },
        "generate_folders_and_files": {
            "name": "generate_folders_and_files",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "save_params_to_file": {
            "name": "save_params_to_file",
            "location": 153,
            "return": [],
            "arguments": {}
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/stats/save_plots.py": {
        "save_pareto_fitness_plot": {
            "name": "save_pareto_fitness_plot",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "save_plot_from_data": {
            "name": "save_plot_from_data",
            "location": 68,
            "return": [],
            "arguments": {
                "data": [],
                "name": []
            }
        },
        "save_plot_from_file": {
            "name": "save_plot_from_file",
            "location": 98,
            "return": [],
            "arguments": {
                "filename": [],
                "stat_name": []
            }
        },
        "save_box_plot": {
            "name": "save_box_plot",
            "location": 134,
            "return": [],
            "arguments": {
                "data": [],
                "names": [],
                "title": []
            }
        }
    },
    "programsynthesishunting-master/src/PonyGE2/src/utilities/stats/trackers.py": {},
    "programsynthesishunting-master/src/PonyGE2/src/utilities/stats/__init__.py": {}
}
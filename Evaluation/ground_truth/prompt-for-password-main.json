{
    "prompt-for-password-main/setup.py": {
        "CoverageRatchetCommand.finalize_options": {
            "name": "finalize_options",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CoverageRatchetCommand.run": {
            "name": "run",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCoverageRatchetCommand.initialize_options": {
            "name": "initialize_options",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCoverageRatchetCommand.initialize_options": {
            "name": "initialize_options",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "prompt-for-password-main/docs/conf.py": {},
    "prompt-for-password-main/prompt_for_password/prompt_for_password.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "prompt-for-password-main/prompt_for_password/__init__.py": {},
    "prompt-for-password-main/tests/conftest.py": {},
    "prompt-for-password-main/tests/test_prompt_for_password.py": {
        "response": {
            "name": "response",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_content": {
            "name": "test_content",
            "location": 23,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "test_cli_no_command": {
            "name": "test_cli_no_command",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_cli_help": {
            "name": "test_cli_help",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "prompt-for-password-main/tests/__init__.py": {},
    "prompt-for-password-main/types/stubs/pysectools/__init__.py": {
        "cap_enter": {
            "name": "cap_enter",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "disallow_swap": {
            "name": "disallow_swap",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "disallow_core_dumps": {
            "name": "disallow_core_dumps",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "zero": {
            "name": "zero",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "drop_privileges": {
            "name": "drop_privileges",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "username": [
                    "Optional[str]"
                ],
                "groupname": [
                    "Optional[str]"
                ]
            }
        },
        "goodrandom": {
            "name": "goodrandom",
            "location": 25,
            "return": [
                "Union[(bool, bytes)]"
            ],
            "arguments": {
                "size": [
                    "int"
                ]
            }
        }
    },
    "prompt-for-password-main/types/stubs/pysectools/pinentry/__init__.py": {
        "Pinentry.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pinentry_path": [
                    "str"
                ],
                "fallback_to_getpass": [
                    "bool"
                ]
            }
        },
        "Pinentry.ask": {
            "name": "ask",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "prompt": [
                    "str"
                ],
                "description": [
                    "Optional[str]"
                ],
                "error": [
                    "str"
                ],
                "validator": [
                    "Callable[([Optional[object]], bool)]"
                ]
            }
        },
        "Pinentry.close": {
            "name": "close",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "prompt-for-password-main/types/stubs/setuptools/__init__.py": {
        "setup": {
            "name": "setup",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "find_packages": {
            "name": "find_packages",
            "location": 5,
            "return": [],
            "arguments": {
                "where": [
                    "str"
                ],
                "exclude": [],
                "include": []
            }
        }
    }
}
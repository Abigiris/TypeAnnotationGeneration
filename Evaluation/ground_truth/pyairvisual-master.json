{
    "pyairvisual-master/examples/test_cloud_api.py": {},
    "pyairvisual-master/examples/test_node_pro.py": {},
    "pyairvisual-master/examples/__init__.py": {},
    "pyairvisual-master/pyairvisual/air_quality.py": {
        "AirQuality.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Callable[(..., Coroutine)]"
                ]
            }
        }
    },
    "pyairvisual-master/pyairvisual/cloud_api.py": {
        "raise_on_data_error": {
            "name": "raise_on_data_error",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict"
                ]
            }
        },
        "CloudAPI.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_key": [
                    "str"
                ],
                "session": [
                    "ClientSession"
                ]
            }
        }
    },
    "pyairvisual-master/pyairvisual/const.py": {},
    "pyairvisual-master/pyairvisual/errors.py": {},
    "pyairvisual-master/pyairvisual/node.py": {
        "_calculate_trends": {
            "name": "_calculate_trends",
            "location": 70,
            "return": [
                "dict"
            ],
            "arguments": {
                "history": [
                    "List[OrderedDict]"
                ],
                "measurements_to_use": [
                    "int"
                ]
            }
        },
        "_get_normalized_metric_name": {
            "name": "_get_normalized_metric_name",
            "location": 112,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        },
        "NodeCloudAPI.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Callable[(..., Coroutine)]"
                ]
            }
        },
        "NodeSamba.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ip_or_hostname": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "NodeSamba._async_get_file.get": {
            "name": "get",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "NodeSamba.async_connect.connect": {
            "name": "connect",
            "location": 190,
            "return": [],
            "arguments": {}
        },
        "NodeSamba.async_disconnect.disconnect": {
            "name": "disconnect",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "NodeSamba.async_get_history.search_history": {
            "name": "search_history",
            "location": 246,
            "return": [],
            "arguments": {}
        },
        "NodeSamba.async_get_history.load_history": {
            "name": "load_history",
            "location": 265,
            "return": [],
            "arguments": {}
        }
    },
    "pyairvisual-master/pyairvisual/supported.py": {
        "Supported.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Callable[(..., Coroutine)]"
                ]
            }
        }
    },
    "pyairvisual-master/pyairvisual/__init__.py": {},
    "pyairvisual-master/tests/async_mock.py": {},
    "pyairvisual-master/tests/common.py": {
        "load_fixture": {
            "name": "load_fixture",
            "location": 16,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "pyairvisual-master/tests/test_cloud_api.py": {},
    "pyairvisual-master/tests/test_errors.py": {},
    "pyairvisual-master/tests/test_node.py": {},
    "pyairvisual-master/tests/__init__.py": {},
    "pyairvisual-master/tests/fixtures/__init__.py": {}
}
{
    "pycells-master/setup.py": {},
    "pycells-master/simulate.py": {},
    "pycells-master/pycells/cli.py": {
        "cli": {
            "name": "cli",
            "location": 137,
            "return": [],
            "arguments": {
                "dimensions": [],
                "method": [],
                "rule": [],
                "iterations": [],
                "neighborhood_radius": [],
                "initial_state": [],
                "parallelize": [],
                "skip_initial_state": [],
                "scaling": [],
                "out": [],
                "format": []
            }
        },
        "CustomCommand.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomCommand.invoke": {
            "name": "invoke",
            "location": 57,
            "return": [],
            "arguments": {
                "sefl": [],
                "ctx": []
            }
        }
    },
    "pycells-master/pycells/render.py": {
        "gif": {
            "name": "gif",
            "location": 16,
            "return": [],
            "arguments": {
                "iterations": [
                    "int"
                ],
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "scaling": [
                    "int"
                ],
                "path": [
                    "str"
                ],
                "simulation": [
                    "Iterator[int]"
                ],
                "tpf": [
                    "int"
                ],
                "loop": [
                    "bool"
                ]
            }
        },
        "png": {
            "name": "png",
            "location": 48,
            "return": [],
            "arguments": {
                "iterations": [
                    "int"
                ],
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "scaling": [
                    "int"
                ],
                "path": [
                    "str"
                ],
                "simulation": [
                    "Iterator[int]"
                ]
            }
        },
        "state_to_array": {
            "name": "state_to_array",
            "location": 74,
            "return": [],
            "arguments": {
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "state": [
                    "int"
                ]
            }
        },
        "npy": {
            "name": "npy",
            "location": 83,
            "return": [],
            "arguments": {
                "iterations": [
                    "int"
                ],
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "scaling": [
                    "int"
                ],
                "path": [
                    "str"
                ],
                "simulation": [
                    "Iterator[int]"
                ]
            }
        },
        "txt": {
            "name": "txt",
            "location": 101,
            "return": [],
            "arguments": {
                "iterations": [
                    "int"
                ],
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "scaling": [
                    "int"
                ],
                "path": [
                    "str"
                ],
                "simulation": [
                    "Iterator[int]"
                ]
            }
        }
    },
    "pycells-master/pycells/simulations.py": {
        "_get_pool": {
            "name": "_get_pool",
            "location": 12,
            "return": [],
            "arguments": {
                "workers": [
                    "int"
                ]
            }
        },
        "product": {
            "name": "product",
            "location": 40,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "make_simulation": {
            "name": "make_simulation",
            "location": 53,
            "return": [
                "Simulation"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "setup_func": [
                    "SetupFunc"
                ],
                "worker_func": [
                    "WorkerFunc"
                ]
            }
        },
        "count_setup": {
            "name": "count_setup",
            "location": 143,
            "return": [],
            "arguments": {
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "rule": [
                    "int"
                ],
                "neighborhood_radius": [
                    "int"
                ]
            }
        },
        "count_worker": {
            "name": "count_worker",
            "location": 151,
            "return": [],
            "arguments": {
                "dimensions": [],
                "slice_sizes": [],
                "neighborhood_radius": [],
                "b": [],
                "s": [],
                "state": [],
                "i": []
            }
        },
        "pattern_setup": {
            "name": "pattern_setup",
            "location": 205,
            "return": [],
            "arguments": {
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "rule": [
                    "int"
                ],
                "neighborhood_radius": [
                    "int"
                ]
            }
        },
        "pattern_worker": {
            "name": "pattern_worker",
            "location": 212,
            "return": [],
            "arguments": {
                "dimensions": [],
                "slice_sizes": [],
                "neighborhood_radius": [],
                "patterns": [],
                "state": [],
                "i": []
            }
        },
        "make_simulation.simulation": {
            "name": "simulation",
            "location": 77,
            "return": [],
            "arguments": {
                "dimensions": [
                    "Tuple[(int, ...)]"
                ],
                "rule": [
                    "int"
                ],
                "neighborhood_radius": [
                    "int"
                ],
                "initial_state": [
                    "int"
                ],
                "iterations": [
                    "int"
                ],
                "parallel": [
                    "bool"
                ],
                "skip_initial_state": [
                    "bool"
                ]
            }
        },
        "_get_pool.cls.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_get_pool.cls.imap_unordered": {
            "name": "imap_unordered",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "iterable": []
            }
        },
        "_get_pool.cls.__enter__": {
            "name": "__enter__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_get_pool.cls.__exit__": {
            "name": "__exit__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "pycells-master/pycells/yaml.py": {
        "sbin_to_int": {
            "name": "sbin_to_int",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "binary_loader": {
            "name": "binary_loader",
            "location": 11,
            "return": [],
            "arguments": {
                "loader": [],
                "node": []
            }
        },
        "rev_binary_loader": {
            "name": "rev_binary_loader",
            "location": 19,
            "return": [],
            "arguments": {
                "loader": [],
                "node": []
            }
        },
        "load_yaml": {
            "name": "load_yaml",
            "location": 27,
            "return": [],
            "arguments": {
                "fp": []
            }
        }
    },
    "pycells-master/pycells/__init__.py": {}
}
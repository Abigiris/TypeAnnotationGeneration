{
    "pysumix-main/demosaic_file.py": {
        "readimages": {
            "name": "readimages",
            "location": 12,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "showimages": {
            "name": "showimages",
            "location": 39,
            "return": [],
            "arguments": {
                "data": [],
                "demosalg": []
            }
        }
    },
    "pysumix-main/setup.py": {},
    "pysumix-main/sumix_demo.py": {
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "Tuple[(np.ndarray, float, Dict[(str, int)])]"
            ],
            "arguments": {
                "w": [
                    "int"
                ],
                "h": [
                    "int"
                ],
                "nframe": [
                    "int"
                ],
                "expos": [
                    "float"
                ],
                "gain": [
                    "int"
                ],
                "decim": [
                    "int"
                ],
                "color": [
                    "bool"
                ],
                "tenbit": [
                    "bool"
                ],
                "preview": [
                    "bool"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "freewheel": {
            "name": "freewheel",
            "location": 93,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "cam": [],
                "color": [
                    "bool"
                ],
                "hirw": []
            }
        },
        "fixedframe": {
            "name": "fixedframe",
            "location": 123,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "nframe": [
                    "int"
                ],
                "cam": [],
                "color": [
                    "bool"
                ],
                "hirw": []
            }
        },
        "saveframes": {
            "name": "saveframes",
            "location": 150,
            "return": [],
            "arguments": {
                "ofn": [
                    "Path"
                ],
                "frames": [],
                "color": [
                    "bool"
                ],
                "exptime": [
                    "float"
                ],
                "gain": [
                    "Dict[(str, int)]"
                ]
            }
        }
    },
    "pysumix-main/src/pysumix/api.py": {
        "Camera.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "decim": [
                    "int"
                ],
                "tenbit": [],
                "startx": [
                    "int"
                ],
                "starty": [
                    "int"
                ],
                "mirrorv": [],
                "mirrorh": [],
                "verbose": [
                    "bool"
                ],
                "dll": []
            }
        },
        "Camera.setParams": {
            "name": "setParams",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "decim": [
                    "int"
                ],
                "startx": [
                    "int"
                ],
                "starty": [
                    "int"
                ],
                "mirrorv": [],
                "mirrorh": []
            }
        },
        "Camera.openCamera": {
            "name": "openCamera",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "cid": []
            }
        },
        "Camera.open": {
            "name": "open",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "cid": []
            }
        },
        "Camera.close": {
            "name": "close",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.closeCamera": {
            "name": "closeCamera",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.setFrequency": {
            "name": "setFrequency",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "freqbyte": [
                    "int"
                ]
            }
        },
        "Camera.getFrequency": {
            "name": "getFrequency",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.getExposureMinMax": {
            "name": "getExposureMinMax",
            "location": 199,
            "return": [
                "Tuple[(float, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Camera.getExposure": {
            "name": "getExposure",
            "location": 210,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Camera.setExposure": {
            "name": "setExposure",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "expreq": [
                    "float"
                ]
            }
        },
        "Camera.getGain": {
            "name": "getGain",
            "location": 234,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Camera.setGain": {
            "name": "setGain",
            "location": 248,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "self": [],
                "greq": [
                    "int"
                ]
            }
        },
        "Camera.setAllGain": {
            "name": "setAllGain",
            "location": 275,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "self": [],
                "gainreq": [
                    "int"
                ]
            }
        },
        "Camera.setBrightnessContrastGamma": {
            "name": "setBrightnessContrastGamma",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "bright": [
                    "int"
                ],
                "contrast": [
                    "int"
                ],
                "gamma": [
                    "int"
                ]
            }
        },
        "Camera.getConversionTable": {
            "name": "getConversionTable",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.startStream": {
            "name": "startStream",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.stopStream": {
            "name": "stopStream",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.getStreamMode": {
            "name": "getStreamMode",
            "location": 344,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Camera.grabFrame": {
            "name": "grabFrame",
            "location": 359,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.get10BitsOutput": {
            "name": "get10BitsOutput",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.set10BitsOutput": {
            "name": "set10BitsOutput",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "useten": []
            }
        },
        "Camera.getParams": {
            "name": "getParams",
            "location": 403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.getCameraInfoEx": {
            "name": "getCameraInfoEx",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.getCameraInfo": {
            "name": "getCameraInfo",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.getFrameCounter": {
            "name": "getFrameCounter",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Camera.guiStartVideo": {
            "name": "guiStartVideo",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "hwnd": []
            }
        },
        "Convert.__init__": {
            "name": "__init__",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "dll": []
            }
        },
        "Convert.BayerToRgb": {
            "name": "BayerToRgb",
            "location": 503,
            "return": [],
            "arguments": {
                "self": [],
                "bayerimg": [
                    "np.ndarray"
                ],
                "bayerint": [
                    "int"
                ]
            }
        }
    },
    "pysumix-main/src/pysumix/demosaic.py": {
        "demosaic": {
            "name": "demosaic",
            "location": 29,
            "return": [],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "method": [
                    "str"
                ],
                "alg": [
                    "int"
                ],
                "color": [
                    "bool"
                ]
            }
        },
        "grbg2rgb": {
            "name": "grbg2rgb",
            "location": 52,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "alg": [
                    "int"
                ],
                "color": [
                    "bool"
                ]
            }
        }
    },
    "pysumix-main/src/pysumix/rgb2gray.py": {
        "rgb2gray": {
            "name": "rgb2gray",
            "location": 5,
            "return": [],
            "arguments": {
                "rgb": []
            }
        }
    },
    "pysumix-main/src/pysumix/__init__.py": {},
    "pysumix-main/src/pysumix/tests/test_all.py": {
        "test_demosaic_color": {
            "name": "test_demosaic_color",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_demosaic_gray": {
            "name": "test_demosaic_gray",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_rgb2gray": {
            "name": "test_rgb2gray",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "python-example-elasticsearch-develop/conftest.py": {},
    "python-example-elasticsearch-develop/manage.py": {},
    "python-example-elasticsearch-develop/apps/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/admin.py": {},
    "python-example-elasticsearch-develop/apps/comment/apps.py": {},
    "python-example-elasticsearch-develop/apps/comment/models.py": {
        "Comment.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/comment/serializers.py": {},
    "python-example-elasticsearch-develop/apps/comment/views.py": {},
    "python-example-elasticsearch-develop/apps/comment/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/migrations/0001_initial.py": {},
    "python-example-elasticsearch-develop/apps/comment/migrations/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/factories/test_factory.py": {
        "test_instance": {
            "name": "test_instance",
            "location": 11,
            "return": [],
            "arguments": {
                "factory": [],
                "class_name": [],
                "django_db_setup": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/comment/tests/factories/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/functional/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/functional/views/__init__.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/unit/test_models.py": {},
    "python-example-elasticsearch-develop/apps/comment/tests/unit/__init__.py": {},
    "python-example-elasticsearch-develop/apps/common/apps.py": {},
    "python-example-elasticsearch-develop/apps/common/constants.py": {},
    "python-example-elasticsearch-develop/apps/common/models.py": {
        "CommonModel.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/common/resize.py": {
        "ResizeToCircle.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "diameter": []
            }
        },
        "ResizeToCircle.process": {
            "name": "process",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "img": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/common/serializers.py": {
        "InvalidFieldsMixin.validate_invalid_fields": {
            "name": "validate_invalid_fields",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidFieldsMixin.update": {
            "name": "update",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/common/validators.py": {
        "GreaterThanValidator.compare": {
            "name": "compare",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "LessThanValidator.compare": {
            "name": "compare",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/common/__init__.py": {},
    "python-example-elasticsearch-develop/apps/common/tests/functional/test_resize.py": {
        "test_resize_circle": {
            "name": "test_resize_circle",
            "location": 8,
            "return": [],
            "arguments": {
                "django_db_setup": [],
                "media_storage": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "HttpRequest"
                ],
                "sociallogin": [
                    "Any"
                ]
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/admin.py": {
        "PermissionAdmin.natural_key": {
            "name": "natural_key",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/apps.py": {},
    "python-example-elasticsearch-develop/apps/customuser/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/models.py": {
        "create_auth_token": {
            "name": "create_auth_token",
            "location": 97,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": [],
                "created": []
            }
        },
        "UserManager.create_user": {
            "name": "create_user",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "first_name": [],
                "last_name": [],
                "password": []
            }
        },
        "UserManager.create_superuser": {
            "name": "create_superuser",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "first_name": [],
                "last_name": [],
                "password": []
            }
        },
        "UserManager.create_user_register": {
            "name": "create_user_register",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "UserQuerySet.actives": {
            "name": "actives",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/serializers.py": {},
    "python-example-elasticsearch-develop/apps/customuser/urls.py": {},
    "python-example-elasticsearch-develop/apps/customuser/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ObtainAuthToken.post": {
            "name": "post",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/migrations/0001_initial.py": {},
    "python-example-elasticsearch-develop/apps/customuser/migrations/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/factories/test_factory.py": {
        "test_make_user": {
            "name": "test_make_user",
            "location": 7,
            "return": [],
            "arguments": {
                "django_db_setup": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/tests/factories/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/functional/test_permissions.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/functional/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/functional/views/test_api.py": {
        "test_list_user": {
            "name": "test_list_user",
            "location": 7,
            "return": [],
            "arguments": {
                "django_db_setup": [],
                "staff_client": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/customuser/tests/functional/views/test_register.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/functional/views/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/unit/__init__.py": {},
    "python-example-elasticsearch-develop/apps/customuser/tests/unit/models/test_users.py": {
        "test_make_user": {
            "name": "test_make_user",
            "location": 7,
            "return": [],
            "arguments": {
                "django_db_setup": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/post/admin.py": {},
    "python-example-elasticsearch-develop/apps/post/apps.py": {},
    "python-example-elasticsearch-develop/apps/post/models.py": {
        "Post.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/post/serializers.py": {},
    "python-example-elasticsearch-develop/apps/post/views.py": {},
    "python-example-elasticsearch-develop/apps/post/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/migrations/0001_initial.py": {},
    "python-example-elasticsearch-develop/apps/post/migrations/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/factories/test_factory.py": {
        "test_instance": {
            "name": "test_instance",
            "location": 11,
            "return": [],
            "arguments": {
                "factory": [],
                "class_name": [],
                "django_db_setup": []
            }
        }
    },
    "python-example-elasticsearch-develop/apps/post/tests/factories/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/functional/test_permissions.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/functional/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/functional/views/test_api.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/functional/views/__init__.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/unit/test_models.py": {},
    "python-example-elasticsearch-develop/apps/post/tests/unit/__init__.py": {},
    "python-example-elasticsearch-develop/blog/mixins.py": {
        "ConvertEnumMixin.to_list": {
            "name": "to_list",
            "location": 4,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ConvertEnumMixin.to_dict": {
            "name": "to_dict",
            "location": 8,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/__init__.py": {},
    "python-example-elasticsearch-develop/blog/contrib/__init__.py": {},
    "python-example-elasticsearch-develop/blog/contrib/sites/__init__.py": {},
    "python-example-elasticsearch-develop/blog/contrib/sites/migrations/0001_initial.py": {},
    "python-example-elasticsearch-develop/blog/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "python-example-elasticsearch-develop/blog/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 11,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 20,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/contrib/sites/migrations/__init__.py": {},
    "python-example-elasticsearch-develop/blog/fixtures/core.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 11,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 16,
            "return": [
                "settings.AUTH_USER_MODEL"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 21,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        },
        "celery_app": {
            "name": "celery_app",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "anonymous_client": {
            "name": "anonymous_client",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "api_client": {
            "name": "api_client",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "staff_client": {
            "name": "staff_client",
            "location": 48,
            "return": [],
            "arguments": {}
        }
    },
    "python-example-elasticsearch-develop/blog/fixtures/data.py": {},
    "python-example-elasticsearch-develop/blog/fixtures/db.py": {
        "django_db_setup": {
            "name": "django_db_setup",
            "location": 9,
            "return": [],
            "arguments": {
                "db": [],
                "django_db_blocker": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/fixtures/__init__.py": {},
    "python-example-elasticsearch-develop/blog/management/__init__.py": {},
    "python-example-elasticsearch-develop/blog/management/commands/create_permissions.py": {
        "Command.create_rest_permissions": {
            "name": "create_rest_permissions",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/management/commands/populate.py": {
        "Command._get_list_files": {
            "name": "_get_list_files",
            "location": 23,
            "return": [
                "List"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Command.get_fixture_paths": {
            "name": "get_fixture_paths",
            "location": 43,
            "return": [
                "List"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.get_fixtures": {
            "name": "get_fixtures",
            "location": 55,
            "return": [
                "List"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/management/commands/__init__.py": {},
    "python-example-elasticsearch-develop/blog/taskapp/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CeleryAppConfig.ready": {
            "name": "ready",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-example-elasticsearch-develop/blog/taskapp/__init__.py": {},
    "python-example-elasticsearch-develop/blog/tests/__init__.py": {},
    "python-example-elasticsearch-develop/blog/tests/functional/__init__.py": {},
    "python-example-elasticsearch-develop/blog/tests/unit/test_mixins.py": {
        "test_mixins_instance": {
            "name": "test_mixins_instance",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_mixins_dict": {
            "name": "test_mixins_dict",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_mixins_list": {
            "name": "test_mixins_list",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "python-example-elasticsearch-develop/blog/tests/unit/__init__.py": {},
    "python-example-elasticsearch-develop/config/urls.py": {},
    "python-example-elasticsearch-develop/config/wsgi.py": {},
    "python-example-elasticsearch-develop/config/__init__.py": {},
    "python-example-elasticsearch-develop/config/settings/base.py": {},
    "python-example-elasticsearch-develop/config/settings/local.py": {},
    "python-example-elasticsearch-develop/config/settings/test.py": {},
    "python-example-elasticsearch-develop/config/settings/__init__.py": {},
    "python-example-elasticsearch-develop/docs/conf.py": {},
    "python-example-elasticsearch-develop/docs/__init__.py": {},
    "python-example-elasticsearch-develop/testing/cases.py": {},
    "python-example-elasticsearch-develop/testing/constants.py": {},
    "python-example-elasticsearch-develop/testing/drf.py": {},
    "python-example-elasticsearch-develop/testing/environment.py": {
        "before_scenario": {
            "name": "before_scenario",
            "location": 5,
            "return": [],
            "arguments": {
                "context": [],
                "scenario": []
            }
        },
        "after_scenario": {
            "name": "after_scenario",
            "location": 10,
            "return": [],
            "arguments": {
                "context": [],
                "scenario": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/mixins.py": {
        "TestCaseMixin.assert_test_database": {
            "name": "assert_test_database",
            "location": 11,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCaseMixin.setUpClass": {
            "name": "setUpClass",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCaseMixin.tearDownClass": {
            "name": "tearDownClass",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCaseMixin.sync": {
            "name": "sync",
            "location": 38,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCaseMixin.populate": {
            "name": "populate",
            "location": 47,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RequestFactoryMixin.get": {
            "name": "get",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "RequestFactoryMixin.post": {
            "name": "post",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "RequestFactoryMixin.patch": {
            "name": "patch",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "RequestFactoryMixin.put": {
            "name": "put",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "RequestFactoryMixin.delete": {
            "name": "delete",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "content_type": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/tools.py": {
        "convert_list": {
            "name": "convert_list",
            "location": 7,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "normalize_data": {
            "name": "normalize_data",
            "location": 14,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "del_key_by_value": {
            "name": "del_key_by_value",
            "location": 54,
            "return": [],
            "arguments": {
                "item": [],
                "clean": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/validation.py": {
        "assert_test_database": {
            "name": "assert_test_database",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "python-example-elasticsearch-develop/testing/__init__.py": {},
    "python-example-elasticsearch-develop/testing/steps/background.py": {
        "load_data_filename": {
            "name": "load_data_filename",
            "location": 8,
            "return": [],
            "arguments": {
                "context": [],
                "filename": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/steps/common.py": {
        "factory_append": {
            "name": "factory_append",
            "location": 9,
            "return": [],
            "arguments": {
                "context": [],
                "var": []
            }
        },
        "append_one": {
            "name": "append_one",
            "location": 16,
            "return": [],
            "arguments": {
                "context": [],
                "var": []
            }
        },
        "append_some": {
            "name": "append_some",
            "location": 23,
            "return": [],
            "arguments": {
                "context": [],
                "var": []
            }
        },
        "make_var_with": {
            "name": "make_var_with",
            "location": 32,
            "return": [],
            "arguments": {
                "context": [],
                "var": []
            }
        },
        "make_var_with_field": {
            "name": "make_var_with_field",
            "location": 40,
            "return": [],
            "arguments": {
                "context": [],
                "var": [],
                "field": []
            }
        },
        "make_var_with_some_field": {
            "name": "make_var_with_some_field",
            "location": 59,
            "return": [],
            "arguments": {
                "context": [],
                "var": [],
                "field": []
            }
        },
        "and_the_var_with_attributes_mus_be_value": {
            "name": "and_the_var_with_attributes_mus_be_value",
            "location": 77,
            "return": [],
            "arguments": {
                "context": [],
                "var": [],
                "attribute": [],
                "value": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/steps/request.py": {
        "factory_method_request": {
            "name": "factory_method_request",
            "location": 9,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "url": [],
                "format_type": []
            }
        },
        "response_to_dict": {
            "name": "response_to_dict",
            "location": 22,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "request_method_get": {
            "name": "request_method_get",
            "location": 36,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "url": [],
                "format_type": []
            }
        },
        "request_method_post": {
            "name": "request_method_post",
            "location": 47,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "url": [],
                "format_type": []
            }
        },
        "method_the_var_to_the_url_with_format": {
            "name": "method_the_var_to_the_url_with_format",
            "location": 67,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "var": [],
                "url": [],
                "format_type": []
            }
        },
        "method_the_var_with_resource": {
            "name": "method_the_var_with_resource",
            "location": 80,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "var": [],
                "url": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/steps/request_api.py": {
        "factory_method_request": {
            "name": "factory_method_request",
            "location": 10,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "resource": []
            }
        },
        "response_to_dict": {
            "name": "response_to_dict",
            "location": 27,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "request_method_get": {
            "name": "request_method_get",
            "location": 40,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "resource": []
            }
        },
        "request_method_post": {
            "name": "request_method_post",
            "location": 52,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "resource": []
            }
        },
        "request_method_patch": {
            "name": "request_method_patch",
            "location": 65,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "resource": []
            }
        },
        "request_method_delete": {
            "name": "request_method_delete",
            "location": 82,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "items": [],
                "resource": []
            }
        },
        "method_the_var_with_resource": {
            "name": "method_the_var_with_resource",
            "location": 100,
            "return": [],
            "arguments": {
                "context": [],
                "method": [],
                "var": [],
                "resource": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/steps/validation.py": {
        "the_resource_with_field_value_should_have": {
            "name": "the_resource_with_field_value_should_have",
            "location": 11,
            "return": [],
            "arguments": {
                "context": [],
                "resource": [],
                "field": [],
                "value": []
            }
        },
        "the_resource_should_have": {
            "name": "the_resource_should_have",
            "location": 23,
            "return": [],
            "arguments": {
                "context": [],
                "resource": []
            }
        },
        "the_response_of_var_must_be": {
            "name": "the_response_of_var_must_be",
            "location": 35,
            "return": [],
            "arguments": {
                "context": [],
                "var": []
            }
        },
        "the_model_should_have": {
            "name": "the_model_should_have",
            "location": 43,
            "return": [],
            "arguments": {
                "context": [],
                "app_model": []
            }
        }
    },
    "python-example-elasticsearch-develop/testing/steps/__init__.py": {}
}
{
    "python-onemapsg-dev/setup.py": {},
    "python-onemapsg-dev/docs/conf.py": {},
    "python-onemapsg-dev/onemapsg/api.py": {
        "APISingleton.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-onemapsg-dev/onemapsg/client.py": {
        "OneMap.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "Optional[str]"
                ],
                "password": [
                    "Optional[str]"
                ]
            }
        },
        "OneMap.email": {
            "name": "email",
            "location": 40,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneMap.password": {
            "name": "password",
            "location": 44,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneMap.authenticate": {
            "name": "authenticate",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "OneMap._connect": {
            "name": "_connect",
            "location": 57,
            "return": [
                "Types.TokenPair"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneMap.execute": {
            "name": "execute",
            "location": 75,
            "return": [
                "Optional[Any]"
            ],
            "arguments": {
                "self": [],
                "action_type": [
                    "str"
                ]
            }
        },
        "OneMap.search": {
            "name": "search",
            "location": 122,
            "return": [
                "Optional[SearchResult]"
            ],
            "arguments": {
                "self": [],
                "search_val": [
                    "str"
                ],
                "return_geometry": [
                    "bool"
                ],
                "get_address_details": [
                    "bool"
                ],
                "page_number": [
                    "Optional[int]"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "OneMap.route": {
            "name": "route",
            "location": 149,
            "return": [
                "Optional[RouteResult]"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "str"
                ],
                "end": [
                    "str"
                ],
                "route_type": [
                    "str"
                ],
                "public_transport_options": [
                    "Optional[str]"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "OneMap.reverse_geocode": {
            "name": "reverse_geocode",
            "location": 177,
            "return": [
                "Optional[GeocodeInfo]"
            ],
            "arguments": {
                "self": [],
                "reverse_type": [
                    "str"
                ],
                "location": [
                    "str"
                ],
                "buffer": [
                    "int"
                ],
                "address_type": [
                    "str"
                ],
                "other_features": [
                    "bool"
                ],
                "timeout": [
                    "int"
                ]
            }
        }
    },
    "python-onemapsg-dev/onemapsg/exceptions.py": {},
    "python-onemapsg-dev/onemapsg/response.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "BaseResource.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseResource.to_dict": {
            "name": "to_dict",
            "location": 27,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchResultItem.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchResult.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeocodeInfoItem.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeocodeInfo.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RouteResult.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RouteResult.lat_longs": {
            "name": "lat_longs",
            "location": 140,
            "return": [
                "Optional[List[Tuple[(float, float)]]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-onemapsg-dev/onemapsg/status.py": {
        "is_informational": {
            "name": "is_informational",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": [
                    "int"
                ]
            }
        },
        "is_success": {
            "name": "is_success",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": [
                    "int"
                ]
            }
        },
        "is_redirect": {
            "name": "is_redirect",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": [
                    "int"
                ]
            }
        },
        "is_client_error": {
            "name": "is_client_error",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": [
                    "int"
                ]
            }
        },
        "is_server_error": {
            "name": "is_server_error",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": [
                    "int"
                ]
            }
        }
    },
    "python-onemapsg-dev/onemapsg/types.py": {},
    "python-onemapsg-dev/onemapsg/utils.py": {
        "to_dict": {
            "name": "to_dict",
            "location": 22,
            "return": [
                "dict"
            ],
            "arguments": {
                "obj": [
                    "Any"
                ]
            }
        },
        "make_request": {
            "name": "make_request",
            "location": 40,
            "return": [
                "Response"
            ],
            "arguments": {
                "endpoint": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "data": [
                    "Optional[dict]"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "construct_search_query": {
            "name": "construct_search_query",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "search_val": [
                    "str"
                ],
                "return_geometry": [
                    "str"
                ],
                "get_address_details": [
                    "str"
                ],
                "page_number": [
                    "int"
                ]
            }
        },
        "get_search_class": {
            "name": "get_search_class",
            "location": 73,
            "return": [
                "Type[SearchResult]"
            ],
            "arguments": {}
        },
        "validate_address_type": {
            "name": "validate_address_type",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "address_type": [
                    "str"
                ]
            }
        },
        "construct_reverse_geocode_svy21_query": {
            "name": "construct_reverse_geocode_svy21_query",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "location": [
                    "str"
                ],
                "token": [
                    "str"
                ],
                "buffer": [
                    "int"
                ],
                "address_type": [
                    "str"
                ],
                "other_features": [
                    "bool"
                ]
            }
        },
        "get_reverse_geocode_svy21_class": {
            "name": "get_reverse_geocode_svy21_class",
            "location": 105,
            "return": [
                "Type[GeocodeInfo]"
            ],
            "arguments": {}
        },
        "construct_route_query": {
            "name": "construct_route_query",
            "location": 114,
            "return": [
                "str"
            ],
            "arguments": {
                "start": [
                    "str"
                ],
                "end": [
                    "str"
                ],
                "route_type": [
                    "str"
                ],
                "public_transport_options": [
                    "dict"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "get_route_class": {
            "name": "get_route_class",
            "location": 126,
            "return": [
                "Type[RouteResult]"
            ],
            "arguments": {}
        },
        "coerce_response": {
            "name": "coerce_response",
            "location": 131,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "Type[Any]"
                ],
                "data": [
                    "dict"
                ]
            }
        }
    },
    "python-onemapsg-dev/onemapsg/__init__.py": {},
    "python-onemapsg-dev/tests/test_api.py": {
        "test_api_singleton": {
            "name": "test_api_singleton",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "python-onemapsg-dev/tests/test_client.py": {
        "test_client_noauth": {
            "name": "test_client_noauth",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_client_authenticate": {
            "name": "test_client_authenticate",
            "location": 20,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_connect": {
            "name": "test_client_connect",
            "location": 34,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_connect_error_bad_request": {
            "name": "test_client_connect_error_bad_request",
            "location": 47,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_connect_error_server_error": {
            "name": "test_client_connect_error_server_error",
            "location": 57,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_connect_return_none": {
            "name": "test_client_connect_return_none",
            "location": 68,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_execute_protected_noauth": {
            "name": "test_client_execute_protected_noauth",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "test_client_execute_return_none": {
            "name": "test_client_execute_return_none",
            "location": 86,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_refresh_token": {
            "name": "test_client_refresh_token",
            "location": 96,
            "return": [],
            "arguments": {
                "mock_request": []
            }
        },
        "test_client_search": {
            "name": "test_client_search",
            "location": 185,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_client_search_bad_request": {
            "name": "test_client_search_bad_request",
            "location": 228,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_client_search_server_error": {
            "name": "test_client_search_server_error",
            "location": 245,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_client_search_return_none": {
            "name": "test_client_search_return_none",
            "location": 257,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_client_route": {
            "name": "test_client_route",
            "location": 267,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_client_route_return_none": {
            "name": "test_client_route_return_none",
            "location": 350,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_reverse_geocode_svy21": {
            "name": "test_reverse_geocode_svy21",
            "location": 360,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_reverse_geocode_wsg84": {
            "name": "test_reverse_geocode_wsg84",
            "location": 389,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        },
        "test_reverse_geocode_return_none": {
            "name": "test_reverse_geocode_return_none",
            "location": 418,
            "return": [],
            "arguments": {
                "mock_request": [],
                "mock_connect": []
            }
        }
    },
    "python-onemapsg-dev/tests/test_response.py": {
        "test_response": {
            "name": "test_response",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_base_resource": {
            "name": "test_base_resource",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_search_result": {
            "name": "test_search_result",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_search_result_item": {
            "name": "test_search_result_item",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "test_route_result": {
            "name": "test_route_result",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "test_geocode_info_item": {
            "name": "test_geocode_info_item",
            "location": 315,
            "return": [],
            "arguments": {}
        },
        "test_geocode_info": {
            "name": "test_geocode_info",
            "location": 335,
            "return": [],
            "arguments": {}
        }
    },
    "python-onemapsg-dev/tests/test_status.py": {
        "test_is_informational": {
            "name": "test_is_informational",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_is_success": {
            "name": "test_is_success",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_is_redirect": {
            "name": "test_is_redirect",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_is_client_error": {
            "name": "test_is_client_error",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_is_server_error": {
            "name": "test_is_server_error",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "python-onemapsg-dev/tests/test_utils.py": {
        "test_coerce_response": {
            "name": "test_coerce_response",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_to_dict": {
            "name": "test_to_dict",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_make_get_request": {
            "name": "test_make_get_request",
            "location": 57,
            "return": [],
            "arguments": {
                "mock_get": []
            }
        },
        "test_make_post_request": {
            "name": "test_make_post_request",
            "location": 69,
            "return": [],
            "arguments": {
                "mock_post": []
            }
        },
        "test_make_post_request_without_data": {
            "name": "test_make_post_request_without_data",
            "location": 83,
            "return": [],
            "arguments": {
                "mock_post": []
            }
        },
        "test_construct_search_query": {
            "name": "test_construct_search_query",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "test_get_search_class": {
            "name": "test_get_search_class",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "test_construct_route_query": {
            "name": "test_construct_route_query",
            "location": 111,
            "return": [],
            "arguments": {}
        },
        "test_get_route_class": {
            "name": "test_get_route_class",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "test_validate_address_type": {
            "name": "test_validate_address_type",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "test_construct_reverse_geocode_svy21_query": {
            "name": "test_construct_reverse_geocode_svy21_query",
            "location": 158,
            "return": [],
            "arguments": {}
        },
        "test_get_reverse_geocode_svy21_class": {
            "name": "test_get_reverse_geocode_svy21_class",
            "location": 174,
            "return": [],
            "arguments": {}
        },
        "test_coerce_response.TestClass.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": []
            }
        },
        "test_to_dict.TestClass.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": []
            }
        }
    },
    "python-onemapsg-dev/tests/__init__.py": {}
}
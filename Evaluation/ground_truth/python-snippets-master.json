{
    "python-snippets-master/standard_lib/abc_class.py": {
        "BaseClass.foo": {
            "name": "foo",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseClass.bar": {
            "name": "bar",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConcreteClass.foo": {
            "name": "foo",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConcreteClass.bar": {
            "name": "bar",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-snippets-master/standard_lib/async_sleep_async.py": {},
    "python-snippets-master/standard_lib/async_sleep_sync.py": {},
    "python-snippets-master/standard_lib/binary_search.py": {
        "binary_search": {
            "name": "binary_search",
            "location": 4,
            "return": [],
            "arguments": {
                "lst": [],
                "integer": []
            }
        }
    },
    "python-snippets-master/standard_lib/bitmask.py": {
        "BitMask.AND": {
            "name": "AND",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "bm": []
            }
        },
        "BitMask.OR": {
            "name": "OR",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "bm": []
            }
        },
        "BitMask.XOR": {
            "name": "XOR",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "bm": []
            }
        },
        "BitMask.NOT": {
            "name": "NOT",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitMask.shiftleft": {
            "name": "shiftleft",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "BitMask.shiftright": {
            "name": "shiftright",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "BitMask.bit": {
            "name": "bit",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "BitMask.setbit": {
            "name": "setbit",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "BitMask.zerobit": {
            "name": "zerobit",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "BitMask.listbits": {
            "name": "listbits",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        }
    },
    "python-snippets-master/standard_lib/bit_flipper.py": {
        "bit_flipper": {
            "name": "bit_flipper",
            "location": 7,
            "return": [],
            "arguments": {
                "s": [],
                "salt": []
            }
        }
    },
    "python-snippets-master/standard_lib/builtins_manipulation.py": {
        "print": {
            "name": "print",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/capture_output.py": {},
    "python-snippets-master/standard_lib/chained_assignments.py": {},
    "python-snippets-master/standard_lib/chained_comparison.py": {},
    "python-snippets-master/standard_lib/check_pattern.py": {},
    "python-snippets-master/standard_lib/combine_iterables.py": {},
    "python-snippets-master/standard_lib/compare_strings.py": {},
    "python-snippets-master/standard_lib/count_thresholds.py": {},
    "python-snippets-master/standard_lib/crazy_dict_expression.py": {},
    "python-snippets-master/standard_lib/deprecated_decorator.py": {
        "deprecated": {
            "name": "deprecated",
            "location": 4,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "some_old_function": {
            "name": "some_old_function",
            "location": 26,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "deprecated.new_func": {
            "name": "new_func",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "SomeClass.some_old_method": {
            "name": "some_old_method",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        }
    },
    "python-snippets-master/standard_lib/dict_based_on_lists.py": {},
    "python-snippets-master/standard_lib/disassemble_bytecode.py": {
        "f_string": {
            "name": "f_string",
            "location": 4,
            "return": [],
            "arguments": {
                "number": [
                    "int"
                ]
            }
        },
        "str_string": {
            "name": "str_string",
            "location": 8,
            "return": [],
            "arguments": {
                "number": [
                    "int"
                ]
            }
        }
    },
    "python-snippets-master/standard_lib/drawing_turtle.py": {},
    "python-snippets-master/standard_lib/empty_set_literal.py": {},
    "python-snippets-master/standard_lib/emulate_switch_case.py": {
        "dispatch_func": {
            "name": "dispatch_func",
            "location": 12,
            "return": [],
            "arguments": {
                "op": [],
                "x": [],
                "y": []
            }
        }
    },
    "python-snippets-master/standard_lib/file_matching_regex.py": {},
    "python-snippets-master/standard_lib/fill_zeros.py": {},
    "python-snippets-master/standard_lib/flatten.py": {
        "flatten": {
            "name": "flatten",
            "location": 4,
            "return": [],
            "arguments": {
                "input_arr": [],
                "output_arr": []
            }
        }
    },
    "python-snippets-master/standard_lib/for_loop_index.py": {},
    "python-snippets-master/standard_lib/function_arguments.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "positional": {
            "name": "positional",
            "location": 9,
            "return": [],
            "arguments": {
                "arg1": [
                    "str"
                ],
                "arg2": [
                    "int"
                ],
                "arg3": [
                    "str"
                ]
            }
        },
        "optional_keyword": {
            "name": "optional_keyword",
            "location": 13,
            "return": [],
            "arguments": {
                "arg1": [
                    "str"
                ],
                "arg2": [
                    "int"
                ],
                "arg3": [
                    "str"
                ]
            }
        },
        "force_keyword": {
            "name": "force_keyword",
            "location": 17,
            "return": [],
            "arguments": {
                "arg1": [
                    "str"
                ],
                "arg2": [
                    "int"
                ]
            }
        }
    },
    "python-snippets-master/standard_lib/get_password_input.py": {},
    "python-snippets-master/standard_lib/hash_file.py": {},
    "python-snippets-master/standard_lib/hex_decode.py": {},
    "python-snippets-master/standard_lib/human_readable_bytecode.py": {
        "foo": {
            "name": "foo",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/iterable_unpacking.py": {},
    "python-snippets-master/standard_lib/keep_metadata_on_decorator_usage.py": {
        "tags": {
            "name": "tags",
            "location": 4,
            "return": [],
            "arguments": {
                "tag_name": []
            }
        },
        "get_text": {
            "name": "get_text",
            "location": 18,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "tags.tags_decorator": {
            "name": "tags_decorator",
            "location": 7,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "tags.tags_decorator.func_wrapper": {
            "name": "func_wrapper",
            "location": 9,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "python-snippets-master/standard_lib/list_unpacking.py": {},
    "python-snippets-master/standard_lib/max_int_in_list_of_str.py": {},
    "python-snippets-master/standard_lib/merge_arbitrary_number_of_dicts.py": {},
    "python-snippets-master/standard_lib/MicroWebServer.py": {
        "WebServer.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "hostname": [],
                "port": [],
                "document_root": []
            }
        },
        "WebServer.server_forever": {
            "name": "server_forever",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebServer.clean_exit": {
            "name": "clean_exit",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebServer.route": {
            "name": "route",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "data": {
            "name": "data",
            "location": 240,
            "return": [],
            "arguments": {
                "client": []
            }
        },
        "WebServer.route.decorator": {
            "name": "decorator",
            "location": 24,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "WebServer.ConnectionHandler.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "hostname": [],
                "port": [],
                "document_root": []
            }
        },
        "WebServer.ConnectionHandler.stop": {
            "name": "stop",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebServer.ConnectionHandler.run": {
            "name": "run",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebServer.HTTPRequest.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "http_ver": [],
                "host": [],
                "request_type": [],
                "uri": [],
                "header": []
            }
        },
        "WebServer.HTTPRequest.parse": {
            "name": "parse",
            "location": 117,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "WebServer.HTTPResponse.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "content_type": [],
                "code": []
            }
        },
        "WebServer.HTTPResponse.file_extension_to_content_type": {
            "name": "file_extension_to_content_type",
            "location": 171,
            "return": [],
            "arguments": {
                "file_extension": []
            }
        }
    },
    "python-snippets-master/standard_lib/multidict_with_default_init.py": {},
    "python-snippets-master/standard_lib/multi_open_files.py": {
        "multi_open": {
            "name": "multi_open",
            "location": 5,
            "return": [],
            "arguments": {
                "paths": [],
                "mode": []
            }
        }
    },
    "python-snippets-master/standard_lib/open_browser_tab.py": {},
    "python-snippets-master/standard_lib/overwrite_dictionary.py": {},
    "python-snippets-master/standard_lib/parse_query_string.py": {},
    "python-snippets-master/standard_lib/partial_function.py": {},
    "python-snippets-master/standard_lib/pass_multiple_dicts.py": {
        "f": {
            "name": "f",
            "location": 4,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        }
    },
    "python-snippets-master/standard_lib/pathlib_relpath.py": {},
    "python-snippets-master/standard_lib/port_scanner.py": {},
    "python-snippets-master/standard_lib/print_human_friendly_numbers.py": {},
    "python-snippets-master/standard_lib/priority_queue.py": {
        "PriorityQueue.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PriorityQueue.add": {
            "name": "add",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "priority": []
            }
        },
        "PriorityQueue.pop": {
            "name": "pop",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-snippets-master/standard_lib/provide_default_config_values.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "get_command_line_args": {
            "name": "get_command_line_args",
            "location": 12,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "get_config": {
            "name": "get_config",
            "location": 16,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "get_default_config": {
            "name": "get_default_config",
            "location": 20,
            "return": [
                "dict"
            ],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/read_files_using_iterator.py": {},
    "python-snippets-master/standard_lib/reduce_memory_consumption.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "get_size": {
            "name": "get_size",
            "location": 50,
            "return": [],
            "arguments": {
                "obj": [],
                "seen": []
            }
        },
        "DataItem.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "age": [],
                "address": []
            }
        },
        "DataItemWithoutSlots.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "age": [],
                "address": []
            }
        }
    },
    "python-snippets-master/standard_lib/reduce_memory_consumption_iterator.py": {},
    "python-snippets-master/standard_lib/regular_expression_debug.py": {},
    "python-snippets-master/standard_lib/remove_duplicates_list.py": {},
    "python-snippets-master/standard_lib/remove_elements_list.py": {},
    "python-snippets-master/standard_lib/reverse_iterables.py": {},
    "python-snippets-master/standard_lib/save_dict_update_without_loosing_original.py": {},
    "python-snippets-master/standard_lib/scopes_namespaces.py": {
        "scope_test": {
            "name": "scope_test",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "scope_test.do_local": {
            "name": "do_local",
            "location": 2,
            "return": [],
            "arguments": {}
        },
        "scope_test.do_nonlocal": {
            "name": "do_nonlocal",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "scope_test.do_global": {
            "name": "do_global",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/set_union_intersection.py": {},
    "python-snippets-master/standard_lib/slice_generators.py": {
        "fibonacci": {
            "name": "fibonacci",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/sort_complex_tuples.py": {},
    "python-snippets-master/standard_lib/split_preserving_sub-strings.py": {},
    "python-snippets-master/standard_lib/string_capitalize.py": {},
    "python-snippets-master/standard_lib/temptable_contextmanager.py": {
        "temptable": {
            "name": "temptable",
            "location": 6,
            "return": [],
            "arguments": {
                "cur": []
            }
        }
    },
    "python-snippets-master/standard_lib/timing_context_manager.py": {
        "timing": {
            "name": "timing",
            "location": 7,
            "return": [],
            "arguments": {
                "description": [
                    "str"
                ]
            }
        }
    },
    "python-snippets-master/standard_lib/trace_decorator.py": {
        "trace": {
            "name": "trace",
            "location": 4,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "greet": {
            "name": "greet",
            "location": 21,
            "return": [],
            "arguments": {
                "name": [],
                "phrase": []
            }
        },
        "trace.wrapper": {
            "name": "wrapper",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/standard_lib/tree_clone.py": {
        "tree": {
            "name": "tree",
            "location": 4,
            "return": [],
            "arguments": {
                "directory": []
            }
        }
    },
    "python-snippets-master/standard_lib/tuple_comprehension.py": {},
    "python-snippets-master/standard_lib/unicode_source_code.py": {},
    "python-snippets-master/standard_lib/update_dict_using_tuples.py": {},
    "python-snippets-master/standard_lib/uuid1_example.py": {},
    "python-snippets-master/standard_lib/variable_swapping.py": {},
    "python-snippets-master/standard_lib/zip_safe.py": {},
    "python-snippets-master/third_party/animated_graphics.py": {},
    "python-snippets-master/third_party/attention_message.py": {},
    "python-snippets-master/third_party/auto_login_website.py": {},
    "python-snippets-master/third_party/change_bg.py": {},
    "python-snippets-master/third_party/clint_cli_tool.py": {},
    "python-snippets-master/third_party/cli_help_strings.py": {
        "say_hello": {
            "name": "say_hello",
            "location": 15,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "python-snippets-master/third_party/colored_python.py": {},
    "python-snippets-master/third_party/complex_list_ops.py": {
        "complex_list_ops": {
            "name": "complex_list_ops",
            "location": 5,
            "return": [
                "list"
            ],
            "arguments": {
                "x": [
                    "list"
                ]
            }
        }
    },
    "python-snippets-master/third_party/cooked_input_example.py": {},
    "python-snippets-master/third_party/count_python_bytes.py": {},
    "python-snippets-master/third_party/display_tables.py": {},
    "python-snippets-master/third_party/f-strings_vs_str.py": {},
    "python-snippets-master/third_party/fancy_cli_header.py": {},
    "python-snippets-master/third_party/folium_snippet.py": {},
    "python-snippets-master/third_party/formatted_json.py": {
        "sample_request": {
            "name": "sample_request",
            "location": 5,
            "return": [],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        }
    },
    "python-snippets-master/third_party/img_to_ascii.py": {
        "getAverageL": {
            "name": "getAverageL",
            "location": 18,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "covertImageToAscii": {
            "name": "covertImageToAscii",
            "location": 32,
            "return": [],
            "arguments": {
                "fileName": [],
                "cols": [],
                "scale": [],
                "moreLevels": []
            }
        },
        "main": {
            "name": "main",
            "location": 106,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/third_party/img_to_ascii_2.py": {
        "scale_image": {
            "name": "scale_image",
            "location": 5,
            "return": [],
            "arguments": {
                "image": [],
                "new_width": []
            }
        },
        "convert_to_grayscale": {
            "name": "convert_to_grayscale",
            "location": 15,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "map_pixels_to_ascii_chars": {
            "name": "map_pixels_to_ascii_chars",
            "location": 18,
            "return": [],
            "arguments": {
                "image": [],
                "range_width": []
            }
        },
        "convert_image_to_ascii": {
            "name": "convert_image_to_ascii",
            "location": 31,
            "return": [],
            "arguments": {
                "image": [],
                "new_width": []
            }
        },
        "handle_image_conversion": {
            "name": "handle_image_conversion",
            "location": 43,
            "return": [],
            "arguments": {
                "image_filepath": []
            }
        }
    },
    "python-snippets-master/third_party/inspect_docker.py": {},
    "python-snippets-master/third_party/interactive_cli.py": {},
    "python-snippets-master/third_party/is_holiday.py": {},
    "python-snippets-master/third_party/manipulate_images.py": {
        "dodge": {
            "name": "dodge",
            "location": 13,
            "return": [],
            "arguments": {
                "front": [],
                "back": []
            }
        }
    },
    "python-snippets-master/third_party/mathematicians.py": {
        "simple_get": {
            "name": "simple_get",
            "location": 7,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "is_good_response": {
            "name": "is_good_response",
            "location": 25,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "log_error": {
            "name": "log_error",
            "location": 37,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "get_names": {
            "name": "get_names",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "get_hits_on_name": {
            "name": "get_hits_on_name",
            "location": 68,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "python-snippets-master/third_party/medium.py": {
        "clean_json_response": {
            "name": "clean_json_response",
            "location": 12,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "get_user_id": {
            "name": "get_user_id",
            "location": 17,
            "return": [],
            "arguments": {
                "username": []
            }
        },
        "get_list_of_followings": {
            "name": "get_list_of_followings",
            "location": 28,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "get_list_of_latest_posts_ids": {
            "name": "get_list_of_latest_posts_ids",
            "location": 62,
            "return": [],
            "arguments": {
                "usernames": []
            }
        },
        "get_post_responses": {
            "name": "get_post_responses",
            "location": 86,
            "return": [],
            "arguments": {
                "posts": []
            }
        },
        "check_if_recent": {
            "name": "check_if_recent",
            "location": 105,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "check_if_high_recommends": {
            "name": "check_if_high_recommends",
            "location": 116,
            "return": [],
            "arguments": {
                "response": [],
                "recommend_min": []
            }
        },
        "get_user_ids_from_responses": {
            "name": "get_user_ids_from_responses",
            "location": 122,
            "return": [],
            "arguments": {
                "responses": [],
                "recommend_min": []
            }
        },
        "get_usernames": {
            "name": "get_usernames",
            "location": 138,
            "return": [],
            "arguments": {
                "user_ids": []
            }
        },
        "list_to_csv": {
            "name": "list_to_csv",
            "location": 154,
            "return": [],
            "arguments": {
                "interesting_users_list": []
            }
        },
        "get_interesting_users": {
            "name": "get_interesting_users",
            "location": 165,
            "return": [],
            "arguments": {
                "username": [],
                "recommend_min": []
            }
        },
        "main": {
            "name": "main",
            "location": 190,
            "return": [],
            "arguments": {
                "name": [],
                "min_recommendations": []
            }
        }
    },
    "python-snippets-master/third_party/mocking_requests.py": {
        "get_holidays": {
            "name": "get_holidays",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "TestCalendar.log_request": {
            "name": "log_request",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "TestCalendar.test_get_holidays_logging": {
            "name": "test_get_holidays_logging",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-snippets-master/third_party/mypy_example.py": {
        "add": {
            "name": "add",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "a": [
                    "int"
                ],
                "b": [
                    "int"
                ]
            }
        }
    },
    "python-snippets-master/third_party/numpy_array_operations.py": {},
    "python-snippets-master/third_party/parse_complex_excel_sheets.py": {},
    "python-snippets-master/third_party/port_scanner_nmap.py": {},
    "python-snippets-master/third_party/pytest_rename_class_backwards_compatibility.py": {
        "plumber": {
            "name": "plumber",
            "location": 13,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test_backwards_compatibility": {
            "name": "test_backwards_compatibility",
            "location": 19,
            "return": [],
            "arguments": {
                "plumber": []
            }
        }
    },
    "python-snippets-master/third_party/range_vs_repeat.py": {},
    "python-snippets-master/third_party/reduce_pandas_df_memory.py": {},
    "python-snippets-master/third_party/resize_images.py": {},
    "python-snippets-master/third_party/show_progress.py": {},
    "python-snippets-master/third_party/simple_debugger.py": {
        "foo": {
            "name": "foo",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "python-snippets-master/third_party/simple_progressbar.py": {},
    "python-snippets-master/third_party/steganography.py": {
        "cli": {
            "name": "cli",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "merge": {
            "name": "merge",
            "location": 126,
            "return": [],
            "arguments": {
                "img1": [],
                "img2": [],
                "output": []
            }
        },
        "unmerge": {
            "name": "unmerge",
            "location": 134,
            "return": [],
            "arguments": {
                "img": [],
                "output": []
            }
        },
        "Steganography.__int_to_bin": {
            "name": "__int_to_bin",
            "location": 7,
            "return": [],
            "arguments": {
                "rgb": []
            }
        },
        "Steganography.__bin_to_int": {
            "name": "__bin_to_int",
            "location": 16,
            "return": [],
            "arguments": {
                "rgb": []
            }
        },
        "Steganography.__merge_rgb": {
            "name": "__merge_rgb",
            "location": 25,
            "return": [],
            "arguments": {
                "rgb1": [],
                "rgb2": []
            }
        },
        "Steganography.merge": {
            "name": "merge",
            "location": 38,
            "return": [],
            "arguments": {
                "img1": [],
                "img2": []
            }
        },
        "Steganography.unmerge": {
            "name": "unmerge",
            "location": 76,
            "return": [],
            "arguments": {
                "img": []
            }
        }
    },
    "python-snippets-master/third_party/tensorflow_image.py": {},
    "python-snippets-master/third_party/test_asyncio.py": {},
    "python-snippets-master/third_party/test_gevent.py": {
        "print_head": {
            "name": "print_head",
            "location": 11,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "python-snippets-master/third_party/test_tornado.py": {
        "handle_response": {
            "name": "handle_response",
            "location": 8,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "python-snippets-master/third_party/text_analysis.py": {},
    "python-snippets-master/third_party/timing_tool.py": {},
    "python-snippets-master/third_party/world_bank_data.py": {},
    "python-snippets-master/third_party/refactoring_code/refactoring_code.py": {},
    "python-snippets-master/third_party/refactoring_code/testutils.py": {
        "sample_project": {
            "name": "sample_project",
            "location": 16,
            "return": [],
            "arguments": {
                "root": [],
                "foldername": []
            }
        },
        "remove_project": {
            "name": "remove_project",
            "location": 47,
            "return": [],
            "arguments": {
                "project": []
            }
        },
        "remove_recursively": {
            "name": "remove_recursively",
            "location": 52,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_remove_recursively": {
            "name": "_remove_recursively",
            "location": 70,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "only_for": {
            "name": "only_for",
            "location": 79,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "only_for_versions_lower": {
            "name": "only_for_versions_lower",
            "location": 87,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "skipNotPOSIX": {
            "name": "skipNotPOSIX",
            "location": 95,
            "return": [],
            "arguments": {}
        }
    }
}
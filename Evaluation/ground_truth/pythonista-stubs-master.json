{
    "pythonista-stubs-master/setup.py": {},
    "pythonista-stubs-master/stubs/appex/__init__.py": {
        "is_running_extension": {
            "name": "is_running_extension",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_attachments": {
            "name": "get_attachments",
            "location": 5,
            "return": [
                "List[Any]"
            ],
            "arguments": {
                "uti": [
                    "str"
                ]
            }
        },
        "get_images": {
            "name": "get_images",
            "location": 6,
            "return": [
                "List[Any]"
            ],
            "arguments": {
                "image_type": [
                    "Literal[('ui', 'pil')]"
                ]
            }
        },
        "get_image": {
            "name": "get_image",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "image_type": [
                    "Literal[('ui', 'pil')]"
                ]
            }
        },
        "get_image_data": {
            "name": "get_image_data",
            "location": 8,
            "return": [
                "Optional[ByteString]"
            ],
            "arguments": {}
        },
        "get_images_data": {
            "name": "get_images_data",
            "location": 9,
            "return": [
                "List[ByteString]"
            ],
            "arguments": {}
        },
        "get_text": {
            "name": "get_text",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_urls": {
            "name": "get_urls",
            "location": 11,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_url": {
            "name": "get_url",
            "location": 12,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_file_paths": {
            "name": "get_file_paths",
            "location": 13,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_file_path": {
            "name": "get_file_path",
            "location": 14,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_vcard": {
            "name": "get_vcard",
            "location": 15,
            "return": [
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "get_vcards": {
            "name": "get_vcards",
            "location": 16,
            "return": [
                "List[Any]"
            ],
            "arguments": {}
        }
    },
    "pythonista-stubs-master/stubs/clipboard/__init__.py": {
        "get": {
            "name": "get",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "set": {
            "name": "set",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "get_image": {
            "name": "get_image",
            "location": 6,
            "return": [
                "Image"
            ],
            "arguments": {
                "idx": [
                    "int"
                ]
            }
        },
        "set_image": {
            "name": "set_image",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "image": [
                    "Image"
                ],
                "format": [
                    "Literal[('jpeg', 'png')]"
                ],
                "jpeg_quality": [
                    "float"
                ]
            }
        }
    },
    "pythonista-stubs-master/stubs/console/__init__.py": {
        "clear": {
            "name": "clear",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_font": {
            "name": "set_font",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "Optional[str]"
                ],
                "size": [
                    "Optional[float]"
                ]
            }
        },
        "set_color": {
            "name": "set_color",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "r": [
                    "float"
                ],
                "g": [
                    "float"
                ],
                "b": [
                    "float"
                ]
            }
        },
        "secure_input": {
            "name": "secure_input",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": [
                    "Optional[str]"
                ]
            }
        },
        "show_image": {
            "name": "show_image",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "image_path": [
                    "str"
                ]
            }
        },
        "alert": {
            "name": "alert",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "message": [
                    "Optional[str]"
                ],
                "button1": [
                    "Optional[str]"
                ],
                "button2": [
                    "Optional[str]"
                ],
                "button3": [
                    "Optional[str]"
                ],
                "hide_cancel_button": [
                    "bool"
                ]
            }
        },
        "input_alert": {
            "name": "input_alert",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "message": [
                    "Optional[str]"
                ],
                "input": [
                    "Optional[str]"
                ],
                "ok_button_title": [
                    "Optional[str]"
                ],
                "hide_cancel_button": [
                    "bool"
                ]
            }
        },
        "password_alert": {
            "name": "password_alert",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "message": [
                    "Optional[str]"
                ],
                "password": [
                    "Optional[str]"
                ],
                "ok_button_title": [
                    "Optional[str]"
                ],
                "hide_cancel_button": [
                    "bool"
                ]
            }
        },
        "login_alert": {
            "name": "login_alert",
            "location": 31,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "message": [
                    "Optional[str]"
                ],
                "login": [
                    "Optional[str]"
                ],
                "password": [
                    "Optional[str]"
                ],
                "ok_button_title": [
                    "Optional[str]"
                ]
            }
        },
        "show_activity": {
            "name": "show_activity",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "hide_activity": {
            "name": "hide_activity",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "hud_alert": {
            "name": "hud_alert",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str"
                ],
                "icon": [
                    "Literal[('success', 'error')]"
                ],
                "duration": [
                    "float"
                ]
            }
        },
        "write_link": {
            "name": "write_link",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "link_url": [
                    "str"
                ]
            }
        },
        "hide_output": {
            "name": "hide_output",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "quicklook": {
            "name": "quicklook",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "open_in": {
            "name": "open_in",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": []
            }
        },
        "set_idle_timer_disabled": {
            "name": "set_idle_timer_disabled",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "flag": [
                    "bool"
                ]
            }
        },
        "is_in_background": {
            "name": "is_in_background",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "pythonista-stubs-master/stubs/reminders/__init__.py": {
        "get_reminders": {
            "name": "get_reminders",
            "location": 4,
            "return": [
                "List[Reminder]"
            ],
            "arguments": {
                "calendar": [
                    "Optional[Calendar]"
                ],
                "completed": []
            }
        },
        "get_all_calendars": {
            "name": "get_all_calendars",
            "location": 7,
            "return": [
                "List[Calendar]"
            ],
            "arguments": {}
        },
        "get_default_calendar": {
            "name": "get_default_calendar",
            "location": 8,
            "return": [
                "Calendar"
            ],
            "arguments": {}
        },
        "get_calendar": {
            "name": "get_calendar",
            "location": 9,
            "return": [
                "Optional[Calendar]"
            ],
            "arguments": {
                "calendar_id": [
                    "str"
                ]
            }
        },
        "delete_reminder": {
            "name": "delete_reminder",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "reminder": [
                    "Reminder"
                ]
            }
        },
        "delete_calendar": {
            "name": "delete_calendar",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "calendar": [
                    "Calendar"
                ]
            }
        },
        "Calendar.save": {
            "name": "save",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Reminder.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "calendar": [
                    "Optional[Calendar]"
                ]
            }
        },
        "Reminder.save": {
            "name": "save",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pythonista-stubs-master/stubs/sound/__init__.py": {
        "play_effect": {
            "name": "play_effect",
            "location": 3,
            "return": [
                "Optional[Effect]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "volume": [
                    "Optional[float]"
                ],
                "pitch": [
                    "Optional[float]"
                ],
                "pan": [
                    "Optional[float]"
                ],
                "looping": [
                    "Optional[bool]"
                ]
            }
        },
        "stop_all_effects": {
            "name": "stop_all_effects",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "stop_effect": {
            "name": "stop_effect",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "effect": [
                    "Effect"
                ]
            }
        },
        "set_volume": {
            "name": "set_volume",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "vol": [
                    "float"
                ]
            }
        },
        "set_honors_silent_switch": {
            "name": "set_honors_silent_switch",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "flag": [
                    "bool"
                ]
            }
        },
        "Effect.stop": {
            "name": "stop",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "Player.play": {
            "name": "play",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.stop": {
            "name": "stop",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.pause": {
            "name": "pause",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recorder.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "Recorder.record": {
            "name": "record",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "duration": [
                    "Optional[int]"
                ]
            }
        },
        "Recorder.stop": {
            "name": "stop",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Recorder.pause": {
            "name": "pause",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MIDIPlayer.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "sound_bank_path": [
                    "Optional[str]"
                ]
            }
        },
        "MIDIPlayer.play": {
            "name": "play",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MIDIPlayer.stop": {
            "name": "stop",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pythonista-stubs-master/stubs/speech/__init__.py": {
        "get_languages": {
            "name": "get_languages",
            "location": 3,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_synthesis_languages": {
            "name": "get_synthesis_languages",
            "location": 4,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_recognition_languages": {
            "name": "get_recognition_languages",
            "location": 5,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "say": {
            "name": "say",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "language": [
                    "Optional[str]"
                ],
                "rate": [
                    "Optional[float]"
                ]
            }
        },
        "stop": {
            "name": "stop",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "is_speaking": {
            "name": "is_speaking",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "recognize": {
            "name": "recognize",
            "location": 11,
            "return": [
                "List[Tuple[(str, List[Dict])]]"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "language": [
                    "Optional[str]"
                ]
            }
        }
    }
}
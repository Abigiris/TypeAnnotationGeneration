{
    "sideeye-master/setup.py": {},
    "sideeye-master/doc/source/conf.py": {},
    "sideeye-master/examples/sample.py": {},
    "sideeye-master/sideeye/calculate.py": {
        "calculate_measure": {
            "name": "calculate_measure",
            "location": 15,
            "return": [],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "measure": [
                    "str"
                ],
                "verbose": [
                    "int"
                ]
            }
        },
        "calculate_all_measures": {
            "name": "calculate_all_measures",
            "location": 58,
            "return": [],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "output_file": [
                    "str"
                ],
                "config": [
                    "Configuration"
                ]
            }
        }
    },
    "sideeye-master/sideeye/config.py": {
        "validate_key": {
            "name": "validate_key",
            "location": 10,
            "return": [],
            "arguments": {
                "config_dict": [
                    "Dict[(str, Any)]"
                ],
                "key": [
                    "str"
                ],
                "value_type": [
                    "type"
                ],
                "default": [
                    "Any"
                ]
            }
        },
        "DA1Config.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "da1_config": [
                    "Dict[(str, int)]"
                ]
            }
        },
        "RegionConfig.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "region_config": [
                    "Dict[(str, Union[(int, bool)])]"
                ]
            }
        },
        "ASCParsingConfig.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "asc_config": [
                    "Dict[(str, Union[(int, bool)])]"
                ]
            }
        },
        "CutoffsConfig.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "cutoffs": [
                    "Dict[(str, Union[(int, bool)])]"
                ]
            }
        },
        "MeasuresConfig.__init__": {
            "name": "__init__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "region_measures": [
                    "Dict[(str, Dict[(str, Union[(int, str)])])]"
                ],
                "trial_measures": [
                    "Dict[(str, Dict[(str, Union[(int, str)])])]"
                ]
            }
        },
        "OutputColumnConfig.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "measure": [
                    "str"
                ],
                "measure_config": [
                    "Dict[(str, Union[(int, str)])]"
                ]
            }
        },
        "OutputConfig.__init__": {
            "name": "__init__",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "region_output": [
                    "Dict[(str, Dict[(str, Union[(int, str)])])]"
                ],
                "trial_output": [
                    "Dict[(str, Dict[(str, Union[(int, str)])])]"
                ]
            }
        },
        "Configuration.__init__": {
            "name": "__init__",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [
                    "str"
                ]
            }
        }
    },
    "sideeye-master/sideeye/output.py": {
        "write_column": {
            "name": "write_column",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "column": [
                    "str"
                ],
                "experiment": [
                    "Experiment"
                ],
                "trial": [
                    "Trial"
                ],
                "region": [
                    "Optional[Region]"
                ],
                "measure": [
                    "str"
                ],
                "cutoff": [
                    "int"
                ]
            }
        },
        "measure_output": {
            "name": "measure_output",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "measure": [
                    "str"
                ],
                "cutoff": [
                    "int"
                ],
                "columns": [
                    "Dict[(str, OutputColumnConfig)]"
                ],
                "experiment": [
                    "Experiment"
                ],
                "trial": [
                    "Trial"
                ],
                "region": [
                    "Optional[Region]"
                ]
            }
        },
        "generate_region_output": {
            "name": "generate_region_output",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "config": [
                    "Configuration"
                ]
            }
        },
        "generate_trial_output": {
            "name": "generate_trial_output",
            "location": 122,
            "return": [
                "str"
            ],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "config": [
                    "Configuration"
                ]
            }
        },
        "generate_all_output": {
            "name": "generate_all_output",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "config": [
                    "Configuration"
                ]
            }
        },
        "generate_all_output_wide_format": {
            "name": "generate_all_output_wide_format",
            "location": 174,
            "return": [
                "str"
            ],
            "arguments": {
                "experiments": [
                    "List[Experiment]"
                ],
                "config": [
                    "Configuration"
                ]
            }
        }
    },
    "sideeye-master/sideeye/types.py": {},
    "sideeye-master/sideeye/__init__.py": {},
    "sideeye-master/sideeye/data/experiment.py": {
        "Experiment.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "trials": [
                    "List[Trial]"
                ],
                "filename": [
                    "str"
                ],
                "date": [
                    "datetime"
                ]
            }
        },
        "Experiment.__eq__": {
            "name": "__eq__",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Experiment.__str__": {
            "name": "__str__",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Experiment.get_trial": {
            "name": "get_trial",
            "location": 54,
            "return": [
                "Trial"
            ],
            "arguments": {
                "self": [],
                "number": [
                    "ItemNum"
                ],
                "condition": [
                    "Condition"
                ],
                "index": [
                    "int"
                ]
            }
        }
    },
    "sideeye-master/sideeye/data/fixation.py": {
        "Fixation.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "position": [
                    "Point"
                ],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ],
                "index": [
                    "int"
                ],
                "region": [
                    "Region"
                ],
                "excluded": [
                    "bool"
                ]
            }
        },
        "Fixation.__eq__": {
            "name": "__eq__",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Fixation.__str__": {
            "name": "__str__",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fixation.duration": {
            "name": "duration",
            "location": 73,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fixation.assign_region": {
            "name": "assign_region",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "region": [
                    "Region"
                ]
            }
        }
    },
    "sideeye-master/sideeye/data/item.py": {
        "Item.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "number": [
                    "ItemNum"
                ],
                "condition": [
                    "Condition"
                ],
                "regions": [
                    "List[Region]"
                ],
                "labels": [
                    "Sequence[Union[(int, str)]]"
                ]
            }
        },
        "Item.__eq__": {
            "name": "__eq__",
            "location": 61,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Item.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Item.get_region": {
            "name": "get_region",
            "location": 69,
            "return": [
                "Region"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "Union[(str, int)]"
                ]
            }
        },
        "Item.find_region": {
            "name": "find_region",
            "location": 78,
            "return": [
                "Region"
            ],
            "arguments": {
                "self": [],
                "x_pos": [
                    "int"
                ],
                "y_pos": [
                    "int"
                ]
            }
        },
        "Item.region_count": {
            "name": "region_count",
            "location": 106,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sideeye-master/sideeye/data/point.py": {
        "Point.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ]
            }
        },
        "Point.__eq__": {
            "name": "__eq__",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__lt__": {
            "name": "__lt__",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__le__": {
            "name": "__le__",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__gt__": {
            "name": "__gt__",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__ge__": {
            "name": "__ge__",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "sideeye-master/sideeye/data/region.py": {
        "Region.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "start": [
                    "Point"
                ],
                "end": [
                    "Point"
                ],
                "length": [
                    "int"
                ],
                "text": [
                    "str"
                ],
                "label": [
                    "Union[(str, int)]"
                ],
                "number": [
                    "int"
                ]
            }
        },
        "Region.__eq__": {
            "name": "__eq__",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Region.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sideeye-master/sideeye/data/saccade.py": {
        "Saccade.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "duration": [
                    "int"
                ],
                "regression": [
                    "bool"
                ],
                "start": [
                    "Fixation"
                ],
                "end": [
                    "Fixation"
                ]
            }
        },
        "Saccade.__eq__": {
            "name": "__eq__",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Saccade.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sideeye-master/sideeye/data/trial.py": {
        "Trial.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "index": [
                    "int"
                ],
                "time": [
                    "int"
                ],
                "item": [
                    "Item"
                ],
                "fixations": [
                    "List[Fixation]"
                ],
                "include_fixation": [
                    "bool"
                ],
                "include_saccades": [
                    "bool"
                ]
            }
        },
        "Trial.__eq__": {
            "name": "__eq__",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Trial.__str__": {
            "name": "__str__",
            "location": 116,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Trial.fixation_count": {
            "name": "fixation_count",
            "location": 131,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sideeye-master/sideeye/data/__init__.py": {},
    "sideeye-master/sideeye/measures/helpers.py": {
        "get_fp_fixations": {
            "name": "get_fp_fixations",
            "location": 10,
            "return": [
                "List[Fixation]"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "region_exists": {
            "name": "region_exists",
            "location": 27,
            "return": [
                "Region"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "save_measure": {
            "name": "save_measure",
            "location": 34,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region": [
                    "Region"
                ],
                "measure": [
                    "str"
                ],
                "value": [
                    "Any"
                ],
                "fixations": [
                    "Optional[List[Fixation]]"
                ]
            }
        },
        "save_trial_measure": {
            "name": "save_trial_measure",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "measure": [
                    "str"
                ],
                "value": [
                    "Any"
                ]
            }
        }
    },
    "sideeye-master/sideeye/measures/trial.py": {
        "location_first_regression": {
            "name": "location_first_regression",
            "location": 9,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "latency_first_regression": {
            "name": "latency_first_regression",
            "location": 34,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "fixation_count": {
            "name": "fixation_count",
            "location": 58,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "percent_regressions": {
            "name": "percent_regressions",
            "location": 74,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "trial_total_time": {
            "name": "trial_total_time",
            "location": 105,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "average_forward_saccade": {
            "name": "average_forward_saccade",
            "location": 123,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        },
        "average_backward_saccade": {
            "name": "average_backward_saccade",
            "location": 158,
            "return": [],
            "arguments": {
                "trial": [
                    "Trial"
                ]
            }
        }
    },
    "sideeye-master/sideeye/measures/__init__.py": {},
    "sideeye-master/sideeye/measures/region/boolean.py": {
        "skip": {
            "name": "skip",
            "location": 10,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "first_pass_regressions_out": {
            "name": "first_pass_regressions_out",
            "location": 28,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "first_pass_regressions_in": {
            "name": "first_pass_regressions_in",
            "location": 73,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        }
    },
    "sideeye-master/sideeye/measures/region/duration.py": {
        "first_fixation_duration": {
            "name": "first_fixation_duration",
            "location": 11,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "single_fixation_duration": {
            "name": "single_fixation_duration",
            "location": 41,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "first_pass": {
            "name": "first_pass",
            "location": 71,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "go_past": {
            "name": "go_past",
            "location": 105,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "total_time": {
            "name": "total_time",
            "location": 148,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "right_bounded_time": {
            "name": "right_bounded_time",
            "location": 177,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "reread_time": {
            "name": "reread_time",
            "location": 223,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "second_pass": {
            "name": "second_pass",
            "location": 266,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "spillover_time": {
            "name": "spillover_time",
            "location": 309,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "refixation_time": {
            "name": "refixation_time",
            "location": 355,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "go_back_time_char": {
            "name": "go_back_time_char",
            "location": 389,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "go_back_time_region": {
            "name": "go_back_time_region",
            "location": 457,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        }
    },
    "sideeye-master/sideeye/measures/region/other.py": {
        "landing_position": {
            "name": "landing_position",
            "location": 10,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "launch_site": {
            "name": "launch_site",
            "location": 52,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        },
        "first_pass_fixation_count": {
            "name": "first_pass_fixation_count",
            "location": 122,
            "return": [
                "RegionMeasure"
            ],
            "arguments": {
                "trial": [
                    "Trial"
                ],
                "region_number": [
                    "int"
                ]
            }
        }
    },
    "sideeye-master/sideeye/measures/region/__init__.py": {},
    "sideeye-master/sideeye/parser/asc.py": {
        "get_condition": {
            "name": "get_condition",
            "location": 41,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "get_item": {
            "name": "get_item",
            "location": 47,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "get_char": {
            "name": "get_char",
            "location": 53,
            "return": [
                "Optional[CharPosition]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "get_start": {
            "name": "get_start",
            "location": 69,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "get_end": {
            "name": "get_end",
            "location": 75,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "get_blink_dur": {
            "name": "get_blink_dur",
            "location": 81,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "dist": {
            "name": "dist",
            "location": 87,
            "return": [
                "float"
            ],
            "arguments": {
                "x_1": [
                    "float"
                ],
                "x_2": [
                    "float"
                ],
                "y_1": [
                    "float"
                ],
                "y_2": [
                    "float"
                ]
            }
        },
        "get_lines": {
            "name": "get_lines",
            "location": 92,
            "return": [
                "List[CharPosition]"
            ],
            "arguments": {
                "characters": [
                    "List[CharPosition]"
                ]
            }
        },
        "get_fixation": {
            "name": "get_fixation",
            "location": 125,
            "return": [
                "Tuple[(Optional[Fixation], int)]"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "characters": [
                    "List[CharPosition]"
                ],
                "item": [
                    "Item"
                ],
                "index": [
                    "int"
                ],
                "time_offset": [
                    "int"
                ]
            }
        },
        "get_new_fixations": {
            "name": "get_new_fixations",
            "location": 151,
            "return": [
                "List[Fixation]"
            ],
            "arguments": {
                "new_fixation": [
                    "Fixation"
                ],
                "fixations": [
                    "List[Fixation]"
                ],
                "config": [
                    "ASCParsingConfig"
                ]
            }
        },
        "get_trials": {
            "name": "get_trials",
            "location": 182,
            "return": [
                "List[Trial]"
            ],
            "arguments": {
                "asc": [
                    "str"
                ],
                "items": [
                    "Dict[(Condition, Dict[(ItemNum, Item)])]"
                ],
                "config": [
                    "ASCParsingConfig"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 272,
            "return": [],
            "arguments": {
                "asc_file": [
                    "str"
                ],
                "items": [
                    "Dict[(Condition, Dict[(ItemNum, Item)])]"
                ],
                "config": [
                    "ASCParsingConfig"
                ]
            }
        }
    },
    "sideeye-master/sideeye/parser/da1.py": {
        "validate": {
            "name": "validate",
            "location": 11,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "fixations_first_col": [
                    "int"
                ],
                "da1_type": [
                    "str"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 25,
            "return": [
                "Experiment"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "items": [
                    "Dict[(ItemNum, Dict[(Condition, Item)])]"
                ],
                "config": [
                    "Configuration"
                ],
                "da1_type": [
                    "str"
                ]
            }
        },
        "parse.parse_fixations": {
            "name": "parse_fixations",
            "location": 44,
            "return": [],
            "arguments": {
                "line": [],
                "item": []
            }
        }
    },
    "sideeye-master/sideeye/parser/experiment.py": {
        "parse": {
            "name": "parse",
            "location": 12,
            "return": [
                "Experiment"
            ],
            "arguments": {
                "experiment_file": [
                    "str"
                ],
                "region_file": [
                    "str"
                ],
                "config": [
                    "Configuration"
                ]
            }
        },
        "parse_files": {
            "name": "parse_files",
            "location": 38,
            "return": [
                "List[Experiment]"
            ],
            "arguments": {
                "experiment_files": [
                    "List[str]"
                ],
                "region_file": [
                    "str"
                ],
                "config": [
                    "Configuration"
                ]
            }
        }
    },
    "sideeye-master/sideeye/parser/region.py": {
        "text": {
            "name": "text",
            "location": 11,
            "return": [
                "List[Region]"
            ],
            "arguments": {
                "region_string": [
                    "str"
                ]
            }
        },
        "textfile": {
            "name": "textfile",
            "location": 42,
            "return": [
                "Dict[(ItemNum, Dict[(Condition, Item)])]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "verbose": [
                    "int"
                ]
            }
        },
        "validate_region_file": {
            "name": "validate_region_file",
            "location": 73,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "file": {
            "name": "file",
            "location": 79,
            "return": [
                "Dict[(ItemNum, Dict[(Condition, Item)])]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "config": [
                    "Configuration"
                ],
                "verbose": [
                    "int"
                ]
            }
        },
        "file.line_to_regions": {
            "name": "line_to_regions",
            "location": 99,
            "return": [],
            "arguments": {
                "line": []
            }
        }
    },
    "sideeye-master/sideeye/parser/__init__.py": {},
    "sideeye-master/tests/compare_asc_da1.py": {},
    "sideeye-master/tests/test_asc.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_exp": {
            "name": "test_exp",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_asc": {
            "name": "test_asc",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_2_asc": {
            "name": "test_2_asc",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "test_d0_d1": {
            "name": "test_d0_d1",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "test_multifix_da1": {
            "name": "test_multifix_da1",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "test_short_blinks": {
            "name": "test_short_blinks",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_long_blinks": {
            "name": "test_long_blinks",
            "location": 167,
            "return": [],
            "arguments": {}
        },
        "test_many_blinks": {
            "name": "test_many_blinks",
            "location": 184,
            "return": [],
            "arguments": {}
        },
        "test_fix_merge": {
            "name": "test_fix_merge",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "test_fix_before_synctime": {
            "name": "test_fix_before_synctime",
            "location": 228,
            "return": [],
            "arguments": {}
        },
        "test_first_fix_merge": {
            "name": "test_first_fix_merge",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "test_exclude_saccade_trial": {
            "name": "test_exclude_saccade_trial",
            "location": 294,
            "return": [],
            "arguments": {}
        },
        "test_get_lines": {
            "name": "test_get_lines",
            "location": 313,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_output.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_long_output": {
            "name": "test_long_output",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_parsing.py": {
        "setup_da1": {
            "name": "setup_da1",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_da1": {
            "name": "test_da1",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "test_da1_robodoc": {
            "name": "test_da1_robodoc",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "test_non_da1": {
            "name": "test_non_da1",
            "location": 221,
            "return": [],
            "arguments": {}
        },
        "setup_region": {
            "name": "setup_region",
            "location": 237,
            "return": [],
            "arguments": {}
        },
        "test_reg": {
            "name": "test_reg",
            "location": 274,
            "return": [],
            "arguments": {}
        },
        "test_cnt": {
            "name": "test_cnt",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "test_non_reg": {
            "name": "test_non_reg",
            "location": 282,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_region_string_parsing.py": {
        "string_setup": {
            "name": "string_setup",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_region_string": {
            "name": "test_region_string",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_non_region_string": {
            "name": "test_non_region_string",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "file_setup": {
            "name": "file_setup",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_region_string_file": {
            "name": "test_region_string_file",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_trial_measures.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_location_first_regression": {
            "name": "test_location_first_regression",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "test_latency_first_regression": {
            "name": "test_latency_first_regression",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_fixation_count": {
            "name": "test_fixation_count",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "test_percent_regressions": {
            "name": "test_percent_regressions",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "test_total_time": {
            "name": "test_total_time",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "test_average_forward_saccade": {
            "name": "test_average_forward_saccade",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "test_average_backward_saccade": {
            "name": "test_average_backward_saccade",
            "location": 119,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/__init__.py": {},
    "sideeye-master/tests/test_data/test_experiment.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_get_item": {
            "name": "test_get_item",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_get_by_index": {
            "name": "test_get_by_index",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_get_trial_validation": {
            "name": "test_get_trial_validation",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_experiment_equality": {
            "name": "test_experiment_equality",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_data/test_fixation.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_duration": {
            "name": "test_duration",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_region": {
            "name": "test_region",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_fixation_equality": {
            "name": "test_fixation_equality",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_fixation_validation": {
            "name": "test_fixation_validation",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_negative_fixation": {
            "name": "test_negative_fixation",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_data/test_item.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_provided_labels": {
            "name": "test_provided_labels",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_labeling": {
            "name": "test_labeling",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_get_region": {
            "name": "test_get_region",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_find_region": {
            "name": "test_find_region",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "test_region_count": {
            "name": "test_region_count",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_region_label_validation": {
            "name": "test_region_label_validation",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "test_label_uniqueness": {
            "name": "test_label_uniqueness",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_region_existence": {
            "name": "test_region_existence",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "test_region_uniqueness": {
            "name": "test_region_uniqueness",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "test_item_equality": {
            "name": "test_item_equality",
            "location": 64,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_data/test_region.py": {
        "test_region_validation": {
            "name": "test_region_validation",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_region_equality": {
            "name": "test_region_equality",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_data/test_saccade.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_saccade_validation": {
            "name": "test_saccade_validation",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_saccade_equality": {
            "name": "test_saccade_equality",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_data/test_trial.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_fixations_count": {
            "name": "test_fixations_count",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_saccades": {
            "name": "test_saccades",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "test_regression": {
            "name": "test_regression",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_include_fixation": {
            "name": "test_include_fixation",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_include_saccade": {
            "name": "test_include_saccade",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "test_include_saccade_fixation": {
            "name": "test_include_saccade_fixation",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "test_trial_index": {
            "name": "test_trial_index",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "test_trial_validation": {
            "name": "test_trial_validation",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "test_trial_equality": {
            "name": "test_trial_equality",
            "location": 98,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_region/test_boolean_region.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_skip_fixation": {
            "name": "test_skip_fixation",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "test_skip_no_fixation": {
            "name": "test_skip_no_fixation",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "test_skip_false": {
            "name": "test_skip_false",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "test_skip_error": {
            "name": "test_skip_error",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "test_skip_excluded": {
            "name": "test_skip_excluded",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "test_regressions_out_true": {
            "name": "test_regressions_out_true",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_regressions_out_false": {
            "name": "test_regressions_out_false",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "test_regressions_out_none": {
            "name": "test_regressions_out_none",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "test_regressions_out_error": {
            "name": "test_regressions_out_error",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "test_regressions_out_exclude": {
            "name": "test_regressions_out_exclude",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_regressions_in_true": {
            "name": "test_regressions_in_true",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "test_regressions_in_false": {
            "name": "test_regressions_in_false",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "test_regressions_in_none": {
            "name": "test_regressions_in_none",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "test_regressions_in_error": {
            "name": "test_regressions_in_error",
            "location": 152,
            "return": [],
            "arguments": {}
        },
        "test_regressions_in_exclude": {
            "name": "test_regressions_in_exclude",
            "location": 157,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_region/test_duration_region.py": {
        "setup_all": {
            "name": "setup_all",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_first_fixation_duration": {
            "name": "test_first_fixation_duration",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_first_fixation_duration_skip": {
            "name": "test_first_fixation_duration_skip",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_first_fixation_duration_error": {
            "name": "test_first_fixation_duration_error",
            "location": 84,
            "return": [],
            "arguments": {}
        },
        "test_single_fixation": {
            "name": "test_single_fixation",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "test_single_fixation_skip": {
            "name": "test_single_fixation_skip",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "test_single_fixation_error": {
            "name": "test_single_fixation_error",
            "location": 121,
            "return": [],
            "arguments": {}
        },
        "test_first_pass": {
            "name": "test_first_pass",
            "location": 128,
            "return": [],
            "arguments": {}
        },
        "test_first_pass_skip": {
            "name": "test_first_pass_skip",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "test_first_pass_error": {
            "name": "test_first_pass_error",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_go_past_time": {
            "name": "test_go_past_time",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "test_go_past_time_skip": {
            "name": "test_go_past_time_skip",
            "location": 156,
            "return": [],
            "arguments": {}
        },
        "test_go_past_time_error": {
            "name": "test_go_past_time_error",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "test_total_time": {
            "name": "test_total_time",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "test_total_time_skip": {
            "name": "test_total_time_skip",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "test_total_time_error": {
            "name": "test_total_time_error",
            "location": 182,
            "return": [],
            "arguments": {}
        },
        "setup_rb": {
            "name": "setup_rb",
            "location": 189,
            "return": [],
            "arguments": {}
        },
        "test_right_bounded_time": {
            "name": "test_right_bounded_time",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "test_right_bounded_time_skip": {
            "name": "test_right_bounded_time_skip",
            "location": 214,
            "return": [],
            "arguments": {}
        },
        "test_right_bounded_time_error": {
            "name": "test_right_bounded_time_error",
            "location": 224,
            "return": [],
            "arguments": {}
        },
        "test_reread_time": {
            "name": "test_reread_time",
            "location": 231,
            "return": [],
            "arguments": {}
        },
        "test_reread_time_skip": {
            "name": "test_reread_time_skip",
            "location": 235,
            "return": [],
            "arguments": {}
        },
        "test_reread_time_error": {
            "name": "test_reread_time_error",
            "location": 242,
            "return": [],
            "arguments": {}
        },
        "test_second_pass_time": {
            "name": "test_second_pass_time",
            "location": 249,
            "return": [],
            "arguments": {}
        },
        "test_second_pass_time_skip": {
            "name": "test_second_pass_time_skip",
            "location": 254,
            "return": [],
            "arguments": {}
        },
        "test_second_pass_error": {
            "name": "test_second_pass_error",
            "location": 261,
            "return": [],
            "arguments": {}
        },
        "test_spillover_time": {
            "name": "test_spillover_time",
            "location": 268,
            "return": [],
            "arguments": {}
        },
        "test_spillover_time_skip": {
            "name": "test_spillover_time_skip",
            "location": 272,
            "return": [],
            "arguments": {}
        },
        "test_spillover_time_error": {
            "name": "test_spillover_time_error",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "test_refixation_time": {
            "name": "test_refixation_time",
            "location": 285,
            "return": [],
            "arguments": {}
        },
        "test_refixation_time_skip": {
            "name": "test_refixation_time_skip",
            "location": 290,
            "return": [],
            "arguments": {}
        },
        "test_refixation_time_error": {
            "name": "test_refixation_time_error",
            "location": 299,
            "return": [],
            "arguments": {}
        },
        "test_go_back_time_char": {
            "name": "test_go_back_time_char",
            "location": 306,
            "return": [],
            "arguments": {}
        },
        "test_refixation_char_time_skip": {
            "name": "test_refixation_char_time_skip",
            "location": 318,
            "return": [],
            "arguments": {}
        },
        "test_go_back_time_char_error": {
            "name": "test_go_back_time_char_error",
            "location": 324,
            "return": [],
            "arguments": {}
        },
        "test_go_back_time_region": {
            "name": "test_go_back_time_region",
            "location": 331,
            "return": [],
            "arguments": {}
        },
        "test_go_back_time_region_skip": {
            "name": "test_go_back_time_region_skip",
            "location": 340,
            "return": [],
            "arguments": {}
        },
        "test_go_back_time_region_error": {
            "name": "test_go_back_time_region_error",
            "location": 346,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_region/test_helpers.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_fp_fixations": {
            "name": "test_fp_fixations",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "test_fp_excluded": {
            "name": "test_fp_excluded",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "test_no_fp_fixations": {
            "name": "test_no_fp_fixations",
            "location": 82,
            "return": [],
            "arguments": {}
        }
    },
    "sideeye-master/tests/test_region/test_other_region.py": {
        "setup": {
            "name": "setup",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_landing_position": {
            "name": "test_landing_position",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_landing_position_skip": {
            "name": "test_landing_position_skip",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "test_landing_position_error": {
            "name": "test_landing_position_error",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "test_launch_site": {
            "name": "test_launch_site",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "test_launch_site_skip": {
            "name": "test_launch_site_skip",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "test_launch_site_error": {
            "name": "test_launch_site_error",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "test_fixation_count": {
            "name": "test_fixation_count",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "test_fixation_count_skip": {
            "name": "test_fixation_count_skip",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "test_fixation_count_error": {
            "name": "test_fixation_count_error",
            "location": 125,
            "return": [],
            "arguments": {}
        }
    }
}
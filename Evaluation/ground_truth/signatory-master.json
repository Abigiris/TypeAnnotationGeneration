{
    "signatory-master/command.py": {
        "main": {
            "name": "main",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "_get_device": {
            "name": "_get_device",
            "location": 111,
            "return": [],
            "arguments": {}
        },
        "version": {
            "name": "version",
            "location": 127,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "test": {
            "name": "test",
            "location": 131,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "benchmark": {
            "name": "benchmark",
            "location": 148,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "docs": {
            "name": "docs",
            "location": 221,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "workflows": {
            "name": "workflows",
            "location": 240,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "readme": {
            "name": "readme",
            "location": 248,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "should_not_import": {
            "name": "should_not_import",
            "location": 324,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "_NullContext.__enter__": {
            "name": "__enter__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullContext.__exit__": {
            "name": "__exit__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "readme.parse_file": {
            "name": "parse_file",
            "location": 258,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "readme.read_from_files": {
            "name": "read_from_files",
            "location": 289,
            "return": [],
            "arguments": {
                "filenames": []
            }
        }
    },
    "signatory-master/metadata.py": {},
    "signatory-master/setup.py": {},
    "signatory-master/.github/workflows_templates/from_template.py": {
        "_substitute": {
            "name": "_substitute",
            "location": 36,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "main": {
            "name": "main",
            "location": 362,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/benchmark/benchmark.py": {
        "InvalidBenchmark.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "BenchmarkRunner.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "test_esig": [],
                "test_iisignature": [],
                "test_signatory_gpu": [],
                "measure": [],
                "fns": []
            }
        },
        "BenchmarkRunner.results": {
            "name": "results",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BenchmarkRunner.check_graph": {
            "name": "check_graph",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BenchmarkRunner.run": {
            "name": "run",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BenchmarkRunner._run_test": {
            "name": "_run_test",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "fn_name": [],
                "fn_dict": [],
                "size": [],
                "depth": [],
                "running": []
            }
        },
        "BenchmarkRunner._time": {
            "name": "_time",
            "location": 242,
            "return": [],
            "arguments": {
                "cls": [],
                "library_module_name": [],
                "size": [],
                "depth": []
            }
        },
        "BenchmarkRunner._memory": {
            "name": "_memory",
            "location": 246,
            "return": [],
            "arguments": {
                "cls": [],
                "library_module_name": [],
                "size": [],
                "depth": []
            }
        },
        "BenchmarkRunner._run_file": {
            "name": "_run_file",
            "location": 263,
            "return": [],
            "arguments": {
                "library_module_name": [],
                "filename": [],
                "size": [],
                "depth": []
            }
        },
        "BenchmarkRunner._table_format_index": {
            "name": "_table_format_index",
            "location": 293,
            "return": [],
            "arguments": {
                "fn_name": [],
                "size": [],
                "depth": []
            }
        },
        "BenchmarkRunner._graph_format_index": {
            "name": "_graph_format_index",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "size": [],
                "depth": []
            }
        },
        "BenchmarkRunner.graph": {
            "name": "graph",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "save": [],
                "log": []
            }
        },
        "BenchmarkRunner.table": {
            "name": "table",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "save": []
            }
        },
        "BenchmarkRunner.graph.flip": {
            "name": "flip",
            "location": 329,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "BenchmarkRunner.table.val_to_str": {
            "name": "val_to_str",
            "location": 368,
            "return": [],
            "arguments": {
                "val": []
            }
        }
    },
    "signatory-master/benchmark/helpers.py": {
        "namedarray.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "namedarray.__setitem__": {
            "name": "__setitem__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "namedarray.__getitem__": {
            "name": "__getitem__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "namedarray.__iter__": {
            "name": "__iter__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetaContainer.__contains__": {
            "name": "__contains__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "signatory-master/benchmark/memory.py": {
        "main": {
            "name": "main",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "main.run_wrapper": {
            "name": "run_wrapper",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/benchmark/time_.py": {
        "main": {
            "name": "main",
            "location": 30,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/benchmark/__init__.py": {},
    "signatory-master/benchmark/functions/esig_logsignature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 17,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 21,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/esig_logsignature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/esig_signature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 17,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 21,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/esig_signature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/iisignature_logsignature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/iisignature_logsignature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 24,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/iisignature_signature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 25,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/iisignature_signature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_backward_gpu.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_backward_no_parallel.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 28,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 25,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_forward_gpu.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 25,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_logsignature_forward_no_parallel.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 27,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_backward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_backward_gpu.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_backward_no_parallel.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 28,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_forward.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_forward_gpu.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/signatory_signature_forward_no_parallel.py": {
        "setup": {
            "name": "setup",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "run": {
            "name": "run",
            "location": 25,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "signatory-master/benchmark/functions/__init__.py": {},
    "signatory-master/docs/conf.py": {
        "setup": {
            "name": "setup",
            "location": 38,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "signatory-master/docs/mock/numpy/__init__.py": {},
    "signatory-master/docs/mock/torch/__init__.py": {},
    "signatory-master/docs/mock/torch/autograd/function.py": {
        "once_differentiable": {
            "name": "once_differentiable",
            "location": 1,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "signatory-master/docs/mock/torch/autograd/__init__.py": {},
    "signatory-master/docs/mock/torch/nn/__init__.py": {},
    "signatory-master/docs/mock/torch/nn/functional/__init__.py": {
        "relu": {
            "name": "relu",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/docs/_static/inversion/generate_images.py": {
        "save": {
            "name": "save",
            "location": 11,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "signatory-master/docs/_static/translation/generate_images.py": {
        "save": {
            "name": "save",
            "location": 9,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 15,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "scatter": {
            "name": "scatter",
            "location": 21,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "letter": []
            }
        },
        "noise": {
            "name": "noise",
            "location": 29,
            "return": [],
            "arguments": {
                "num": [],
                "eps": []
            }
        }
    },
    "signatory-master/examples/example1.py": {
        "SigNet.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "in_channels": [],
                "out_dimension": [],
                "sig_depth": []
            }
        },
        "SigNet.forward": {
            "name": "forward",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "inp": []
            }
        }
    },
    "signatory-master/examples/example2.py": {
        "SigNet2.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "in_channels": [],
                "out_dimension": [],
                "sig_depth": []
            }
        },
        "SigNet2.forward": {
            "name": "forward",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "inp": []
            }
        }
    },
    "signatory-master/examples/example3.py": {
        "SigNet3.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "in_channels": [],
                "out_dimension": [],
                "sig_depth": []
            }
        },
        "SigNet3.forward": {
            "name": "forward",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "inp": []
            }
        }
    },
    "signatory-master/src/signatory/augment.py": {
        "Augment.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "in_channels": [
                    "int"
                ],
                "layer_sizes": [
                    "Tuple[(int, ...)]"
                ],
                "kernel_size": [
                    "int"
                ],
                "stride": [
                    "int"
                ],
                "padding": [
                    "int"
                ],
                "dilation": [
                    "int"
                ],
                "bias": [
                    "bool"
                ],
                "activation": [
                    "Callable[([torch.Tensor], torch.Tensor)]"
                ],
                "include_original": [
                    "bool"
                ],
                "include_time": [
                    "bool"
                ]
            }
        },
        "Augment.forward": {
            "name": "forward",
            "location": 162,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "torch.Tensor"
                ]
            }
        },
        "Augment.extra_repr": {
            "name": "extra_repr",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "signatory-master/src/signatory/deprecated.py": {
        "max_parallelism": {
            "name": "max_parallelism",
            "location": 26,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "Optional[int]"
                ]
            }
        }
    },
    "signatory-master/src/signatory/impl.py": {
        "_wrap": {
            "name": "_wrap",
            "location": 26,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_wrap.wrapped": {
            "name": "wrapped",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/src/signatory/logsignature_module.py": {
        "_interpret_mode": {
            "name": "_interpret_mode",
            "location": 32,
            "return": [],
            "arguments": {
                "mode": []
            }
        },
        "_signature_to_logsignature": {
            "name": "_signature_to_logsignature",
            "location": 72,
            "return": [],
            "arguments": {
                "signature": [],
                "channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "lyndon_info": [],
                "scalar_term": []
            }
        },
        "signature_to_logsignature": {
            "name": "signature_to_logsignature",
            "location": 82,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "signature": [
                    "torch.Tensor"
                ],
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "stream": [
                    "bool"
                ],
                "mode": [
                    "str"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "logsignature": {
            "name": "logsignature",
            "location": 202,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "path": [
                    "torch.Tensor"
                ],
                "depth": [
                    "int"
                ],
                "stream": [
                    "Union[(bool, torch.Tensor)]"
                ],
                "basepoint": [
                    "bool"
                ],
                "inverse": [],
                "mode": [
                    "str"
                ]
            }
        },
        "_get_prime_factors": {
            "name": "_get_prime_factors",
            "location": 346,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "_mobius_function": {
            "name": "_mobius_function",
            "location": 365,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "logsignature_channels": {
            "name": "logsignature_channels",
            "location": 379,
            "return": [
                "int"
            ],
            "arguments": {
                "in_channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "_SignatureToLogsignatureFunction.forward": {
            "name": "forward",
            "location": 45,
            "return": [],
            "arguments": {
                "ctx": [],
                "signature": [],
                "channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "lyndon_info": [],
                "scalar_term": []
            }
        },
        "_SignatureToLogsignatureFunction.backward": {
            "name": "backward",
            "location": 62,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad_logsignature": []
            }
        },
        "SignatureToLogSignature.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "stream": [
                    "bool"
                ],
                "mode": [
                    "str"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "SignatureToLogSignature._get_lyndon_info": {
            "name": "_get_lyndon_info",
            "location": 167,
            "return": [],
            "arguments": {
                "cls": [],
                "in_channels": [],
                "depth": [],
                "mode": []
            }
        },
        "SignatureToLogSignature.forward": {
            "name": "forward",
            "location": 177,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "signature": [
                    "torch.Tensor"
                ]
            }
        },
        "SignatureToLogSignature.extra_repr": {
            "name": "extra_repr",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogSignature.__init__": {
            "name": "__init__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "depth": [
                    "int"
                ],
                "stream": [
                    "bool"
                ],
                "inverse": [
                    "bool"
                ],
                "mode": [
                    "str"
                ]
            }
        },
        "LogSignature._get_signature_to_logsignature_instance": {
            "name": "_get_signature_to_logsignature_instance",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "channels": []
            }
        },
        "LogSignature.prepare": {
            "name": "prepare",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "in_channels": [
                    "int"
                ]
            }
        },
        "LogSignature.forward": {
            "name": "forward",
            "location": 320,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "torch.Tensor"
                ],
                "basepoint": [
                    "Union[(bool, torch.Tensor)]"
                ]
            }
        },
        "LogSignature.extra_repr": {
            "name": "extra_repr",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SignatureToLogSignature._RefHolder.__init__": {
            "name": "__init__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SignatureToLogSignature._RefHolder.__copy__": {
            "name": "__copy__",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SignatureToLogSignature._RefHolder.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "memodict": []
            }
        }
    },
    "signatory-master/src/signatory/path.py": {
        "_backward_shortcut": {
            "name": "_backward_shortcut",
            "location": 102,
            "return": [],
            "arguments": {
                "signature": [],
                "path_pieces": [],
                "depth": [],
                "scalar_term": []
            }
        },
        "_BackwardShortcut.forward": {
            "name": "forward",
            "location": 33,
            "return": [],
            "arguments": {
                "ctx": [],
                "signature": [],
                "depth": [],
                "scalar_term": []
            }
        },
        "_BackwardShortcut.backward": {
            "name": "backward",
            "location": 48,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad_signature": []
            }
        },
        "Path.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "path": [
                    "torch.Tensor"
                ],
                "depth": [
                    "int"
                ],
                "basepoint": [
                    "Union[(bool, torch.Tensor)]"
                ],
                "remember_path": [
                    "bool"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "Path.__copy__": {
            "name": "__copy__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__eq__": {
            "name": "__eq__",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Path.__ne__": {
            "name": "__ne__",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Path.signature": {
            "name": "signature",
            "location": 234,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "Union[(int, None)]"
                ],
                "end": [
                    "Union[(int, None)]"
                ]
            }
        },
        "Path._locate": {
            "name": "_locate",
            "location": 335,
            "return": [],
            "arguments": {
                "lengths": [],
                "index": []
            }
        },
        "Path.logsignature": {
            "name": "logsignature",
            "location": 341,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "Union[(int, None)]"
                ],
                "end": [
                    "Union[(int, None)]"
                ],
                "mode": [
                    "str"
                ]
            }
        },
        "Path.update": {
            "name": "update",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "torch.Tensor"
                ]
            }
        },
        "Path._update": {
            "name": "_update",
            "location": 392,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "initial": [],
                "inverse_initial": []
            }
        },
        "Path.remember_path": {
            "name": "remember_path",
            "location": 410,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.path": {
            "name": "path",
            "location": 415,
            "return": [
                "List[torch.Tensor]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.depth": {
            "name": "depth",
            "location": 424,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.size": {
            "name": "size",
            "location": 428,
            "return": [
                "Union[(int, torch.Size)]"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "Union[(int, None)]"
                ]
            }
        },
        "Path.shape": {
            "name": "shape",
            "location": 443,
            "return": [
                "torch.Size"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.channels": {
            "name": "channels",
            "location": 448,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.signature_size": {
            "name": "signature_size",
            "location": 452,
            "return": [
                "Union[(int, torch.Size)]"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "Union[(int, None)]"
                ]
            }
        },
        "Path.signature_shape": {
            "name": "signature_shape",
            "location": 467,
            "return": [
                "torch.Size"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.signature_channels": {
            "name": "signature_channels",
            "location": 472,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.logsignature_size": {
            "name": "logsignature_size",
            "location": 476,
            "return": [
                "Union[(int, torch.Size)]"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "Union[(int, None)]"
                ]
            }
        },
        "Path.logsignature_shape": {
            "name": "logsignature_shape",
            "location": 491,
            "return": [
                "torch.Size"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path.logsignature_channels": {
            "name": "logsignature_channels",
            "location": 496,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Path._getitem_inplace": {
            "name": "_getitem_inplace",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Path.shuffle": {
            "name": "shuffle",
            "location": 543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.shuffle_": {
            "name": "shuffle_",
            "location": 550,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__getitem__": {
            "name": "__getitem__",
            "location": 556,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "signatory-master/src/signatory/signature_inversion_module.py": {
        "get_insertion_matrix": {
            "name": "get_insertion_matrix",
            "location": 8,
            "return": [],
            "arguments": {
                "signature": [],
                "insertion_position": [],
                "depth": [],
                "channels": []
            }
        },
        "solve_optimization_problem": {
            "name": "solve_optimization_problem",
            "location": 44,
            "return": [],
            "arguments": {
                "signature": [],
                "insertion_position": [],
                "depth": [],
                "channels": []
            }
        },
        "invert_signature": {
            "name": "invert_signature",
            "location": 71,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "signature": [
                    "torch.Tensor"
                ],
                "depth": [
                    "int"
                ],
                "channels": [
                    "int"
                ],
                "initial_position": [
                    "Optional[torch.Tensor]"
                ]
            }
        }
    },
    "signatory-master/src/signatory/signature_module.py": {
        "interpret_basepoint": {
            "name": "interpret_basepoint",
            "location": 30,
            "return": [],
            "arguments": {
                "basepoint": [],
                "batch_size": [],
                "channel_size": [],
                "dtype": [],
                "device": []
            }
        },
        "interpret_initial": {
            "name": "interpret_initial",
            "location": 41,
            "return": [],
            "arguments": {
                "initial": []
            }
        },
        "_signature_checkargs": {
            "name": "_signature_checkargs",
            "location": 95,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "basepoint": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "_signature_batch_trick": {
            "name": "_signature_batch_trick",
            "location": 102,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "signature": {
            "name": "signature",
            "location": 172,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "path": [
                    "torch.Tensor"
                ],
                "depth": [
                    "int"
                ],
                "stream": [
                    "bool"
                ],
                "basepoint": [
                    "Union[(bool, torch.Tensor)]"
                ],
                "inverse": [
                    "bool"
                ],
                "initial": [
                    "Optional[torch.Tensor]"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "signature_channels": {
            "name": "signature_channels",
            "location": 304,
            "return": [
                "int"
            ],
            "arguments": {
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "extract_signature_term": {
            "name": "extract_signature_term",
            "location": 326,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "sigtensor": [
                    "torch.Tensor"
                ],
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "signature_combine": {
            "name": "signature_combine",
            "location": 374,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "sigtensor1": [
                    "torch.Tensor"
                ],
                "sigtensor2": [
                    "torch.Tensor"
                ],
                "input_channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "inverse": [
                    "bool"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "multi_signature_combine": {
            "name": "multi_signature_combine",
            "location": 418,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "sigtensors": [
                    "List[torch.Tensor]"
                ],
                "input_channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ],
                "inverse": [
                    "bool"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "_SignatureFunction.forward": {
            "name": "forward",
            "location": 53,
            "return": [],
            "arguments": {
                "ctx": [],
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "_SignatureFunction.backward": {
            "name": "backward",
            "location": 75,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad_result": []
            }
        },
        "Signature.__init__": {
            "name": "__init__",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "depth": [
                    "int"
                ],
                "stream": [
                    "bool"
                ],
                "inverse": [
                    "bool"
                ],
                "scalar_term": [
                    "bool"
                ]
            }
        },
        "Signature.forward": {
            "name": "forward",
            "location": 281,
            "return": [
                "torch.Tensor"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "torch.Tensor"
                ],
                "basepoint": [
                    "Union[(bool, torch.Tensor)]"
                ],
                "initial": [
                    "Optional[torch.Tensor]"
                ]
            }
        },
        "Signature.extra_repr": {
            "name": "extra_repr",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SignatureCombineFunction.forward": {
            "name": "forward",
            "location": 360,
            "return": [],
            "arguments": {
                "ctx": [],
                "input_channels": [],
                "depth": [],
                "scalar_term": []
            }
        },
        "_SignatureCombineFunction.backward": {
            "name": "backward",
            "location": 368,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad": []
            }
        }
    },
    "signatory-master/src/signatory/unstable.py": {},
    "signatory-master/src/signatory/utility.py": {
        "lyndon_words": {
            "name": "lyndon_words",
            "location": 29,
            "return": [
                "List[List[int]]"
            ],
            "arguments": {
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "lyndon_brackets": {
            "name": "lyndon_brackets",
            "location": 49,
            "return": [
                "List[LyndonBracket]"
            ],
            "arguments": {
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "all_words": {
            "name": "all_words",
            "location": 68,
            "return": [
                "List[List[int]]"
            ],
            "arguments": {
                "channels": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "all_words.generator": {
            "name": "generator",
            "location": 88,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/src/signatory/__init__.py": {},
    "signatory-master/test/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 32,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 36,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "pytest_collection_finish": {
            "name": "pytest_collection_finish",
            "location": 45,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "path_hack": {
            "name": "path_hack",
            "location": 73,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "signatory-master/test/test_examples.py": {
        "test_example1": {
            "name": "test_example1",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_example2": {
            "name": "test_example2",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_example3": {
            "name": "test_example3",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "_example_tester": {
            "name": "_example_tester",
            "location": 43,
            "return": [],
            "arguments": {
                "example_fn": []
            }
        }
    },
    "signatory-master/test/test_logsignature.py": {
        "_lyndon_indices": {
            "name": "_lyndon_indices",
            "location": 40,
            "return": [],
            "arguments": {
                "channels": [],
                "depth": []
            }
        },
        "_lyndon_words_to_basis_transform": {
            "name": "_lyndon_words_to_basis_transform",
            "location": 61,
            "return": [],
            "arguments": {
                "channels": [],
                "depth": []
            }
        },
        "_iisignature_logsignature": {
            "name": "_iisignature_logsignature",
            "location": 87,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "mode": []
            }
        },
        "iisignature_logsignature": {
            "name": "iisignature_logsignature",
            "location": 105,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": []
            }
        },
        "signatory_logsignature": {
            "name": "signatory_logsignature",
            "location": 155,
            "return": [],
            "arguments": {
                "class_": [],
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": []
            }
        },
        "test_forward": {
            "name": "test_forward",
            "location": 165,
            "return": [],
            "arguments": {}
        },
        "_test_forward": {
            "name": "_test_forward",
            "location": 186,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": []
            }
        },
        "_test_shape": {
            "name": "_test_shape",
            "location": 223,
            "return": [],
            "arguments": {
                "logsignature": [],
                "mode": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": []
            }
        },
        "test_backward_expand_words": {
            "name": "test_backward_expand_words",
            "location": 244,
            "return": [],
            "arguments": {}
        },
        "test_backward_brackets": {
            "name": "test_backward_brackets",
            "location": 258,
            "return": [],
            "arguments": {}
        },
        "_test_backward": {
            "name": "_test_backward",
            "location": 271,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": []
            }
        },
        "test_no_adjustments": {
            "name": "test_no_adjustments",
            "location": 310,
            "return": [],
            "arguments": {}
        },
        "_test_no_adjustments": {
            "name": "_test_no_adjustments",
            "location": 324,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": [],
                "path_grad": []
            }
        },
        "test_repeat_and_memory_leaks": {
            "name": "test_repeat_and_memory_leaks",
            "location": 356,
            "return": [],
            "arguments": {}
        },
        "_test_repeat_and_memory_leaks": {
            "name": "_test_repeat_and_memory_leaks",
            "location": 375,
            "return": [],
            "arguments": {
                "class_": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "mode": []
            }
        },
        "_iisignatureLogsignatureFunction.forward": {
            "name": "forward",
            "location": 74,
            "return": [],
            "arguments": {
                "ctx": [],
                "path": [],
                "depth": []
            }
        },
        "_iisignatureLogsignatureFunction.backward": {
            "name": "backward",
            "location": 82,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad": []
            }
        },
        "_test_repeat_and_memory_leaks.one_iteration": {
            "name": "one_iteration",
            "location": 391,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/test_path.py": {
        "_update_lengths_update_grads": {
            "name": "_update_lengths_update_grads",
            "location": 35,
            "return": [],
            "arguments": {
                "maxlength": []
            }
        },
        "test_path": {
            "name": "test_path",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "_randint": {
            "name": "_randint",
            "location": 83,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_test_path": {
            "name": "_test_path",
            "location": 87,
            "return": [],
            "arguments": {
                "device": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "basepoint": [],
                "update_lengths": [],
                "update_grads": [],
                "scalar_term": [],
                "extrarandom": [],
                "which": []
            }
        },
        "_test_path_obj": {
            "name": "_test_path_obj",
            "location": 181,
            "return": [],
            "arguments": {
                "batch_size": [],
                "input_channels": [],
                "device": [],
                "path_obj": [],
                "full_path": [],
                "depth": [],
                "update_lengths": [],
                "update_grads": [],
                "scalar_term": [],
                "extrarandom": []
            }
        },
        "_test_signature": {
            "name": "_test_signature",
            "location": 203,
            "return": [],
            "arguments": {
                "path_obj": [],
                "full_path": [],
                "depth": [],
                "scalar_term": [],
                "extrarandom": []
            }
        },
        "_test_logsignature": {
            "name": "_test_logsignature",
            "location": 219,
            "return": [],
            "arguments": {
                "path_obj": [],
                "full_path": [],
                "depth": [],
                "extrarandom": []
            }
        },
        "_test_equality": {
            "name": "_test_equality",
            "location": 251,
            "return": [],
            "arguments": {
                "path_obj": []
            }
        },
        "_test_derived": {
            "name": "_test_derived",
            "location": 259,
            "return": [],
            "arguments": {
                "path_obj": [],
                "derived_path_obj": [],
                "derived_index": [],
                "extrarandom": []
            }
        },
        "_boundaries": {
            "name": "_boundaries",
            "location": 310,
            "return": [],
            "arguments": {
                "length": []
            }
        },
        "_start_end": {
            "name": "_start_end",
            "location": 321,
            "return": [],
            "arguments": {
                "length": [],
                "extrarandom": []
            }
        },
        "_test_operation": {
            "name": "_test_operation",
            "location": 332,
            "return": [],
            "arguments": {
                "path_obj": [],
                "candidate": [],
                "true": [],
                "extra": [],
                "backward_name": [],
                "extrarandom": []
            }
        },
        "_test_signature.candidate": {
            "name": "candidate",
            "location": 204,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_signature.true": {
            "name": "true",
            "location": 207,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_signature.extra": {
            "name": "extra",
            "location": 210,
            "return": [],
            "arguments": {
                "true_signature": []
            }
        },
        "_test_derived.candidate": {
            "name": "candidate",
            "location": 292,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_derived.true": {
            "name": "true",
            "location": 298,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_derived.extra": {
            "name": "extra",
            "location": 304,
            "return": [],
            "arguments": {
                "true_logsignature": []
            }
        },
        "_test_operation.one_iteration": {
            "name": "one_iteration",
            "location": 339,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_logsignature.candidate": {
            "name": "candidate",
            "location": 230,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_logsignature.true": {
            "name": "true",
            "location": 236,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_test_logsignature.extra": {
            "name": "extra",
            "location": 242,
            "return": [],
            "arguments": {
                "true_logsignature": []
            }
        }
    },
    "signatory-master/test/test_signature.py": {
        "iisignature_signature": {
            "name": "iisignature_signature",
            "location": 50,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "signatory_signature": {
            "name": "signatory_signature",
            "location": 67,
            "return": [],
            "arguments": {
                "class_": [],
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "test_forward": {
            "name": "test_forward",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "_test_forward": {
            "name": "_test_forward",
            "location": 101,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "_test_shape": {
            "name": "_test_shape",
            "location": 137,
            "return": [],
            "arguments": {
                "signature": [],
                "stream": [],
                "basepoint": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "scalar_term": []
            }
        },
        "test_batch_trick": {
            "name": "test_batch_trick",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "_no_batch_trick": {
            "name": "_no_batch_trick",
            "location": 179,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "_test_batch_trick": {
            "name": "_test_batch_trick",
            "location": 183,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "test_backward": {
            "name": "test_backward",
            "location": 250,
            "return": [],
            "arguments": {}
        },
        "_test_backward": {
            "name": "_test_backward",
            "location": 264,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "test_no_adjustments": {
            "name": "test_no_adjustments",
            "location": 310,
            "return": [],
            "arguments": {}
        },
        "_test_no_adjustments": {
            "name": "_test_no_adjustments",
            "location": 327,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "path_grad": [],
                "scalar_term": []
            }
        },
        "test_repeat_and_memory_leaks": {
            "name": "test_repeat_and_memory_leaks",
            "location": 364,
            "return": [],
            "arguments": {}
        },
        "_test_repeat_and_memory_leaks": {
            "name": "_test_repeat_and_memory_leaks",
            "location": 385,
            "return": [],
            "arguments": {
                "class_": [],
                "path_grad": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "_IisignatureSignatureFunction.forward": {
            "name": "forward",
            "location": 37,
            "return": [],
            "arguments": {
                "ctx": [],
                "path": [],
                "depth": []
            }
        },
        "_IisignatureSignatureFunction.backward": {
            "name": "backward",
            "location": 45,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad": []
            }
        },
        "iisignature_signature.fn": {
            "name": "fn",
            "location": 53,
            "return": [],
            "arguments": {
                "path": [],
                "depth": []
            }
        },
        "_test_repeat_and_memory_leaks.one_iteration": {
            "name": "one_iteration",
            "location": 403,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/test_signature_combine.py": {
        "iisignature_signature": {
            "name": "iisignature_signature",
            "location": 53,
            "return": [],
            "arguments": {
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": [],
                "scalar_term": []
            }
        },
        "test_forward": {
            "name": "test_forward",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "_test_forward": {
            "name": "_test_forward",
            "location": 83,
            "return": [],
            "arguments": {
                "signature_combine": [],
                "signature_grad": [],
                "amount": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "inverse": [],
                "scalar_term": []
            }
        },
        "test_backward": {
            "name": "test_backward",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "_test_backward": {
            "name": "_test_backward",
            "location": 130,
            "return": [],
            "arguments": {
                "signature_combine": [],
                "amount": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "inverse": [],
                "scalar_term": []
            }
        },
        "test_no_adjustments": {
            "name": "test_no_adjustments",
            "location": 176,
            "return": [],
            "arguments": {}
        },
        "_test_no_adjustments": {
            "name": "_test_no_adjustments",
            "location": 189,
            "return": [],
            "arguments": {
                "signature_combine": [],
                "amount": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "inverse": [],
                "signature_grad": [],
                "scalar_term": []
            }
        },
        "test_memory_leaks": {
            "name": "test_memory_leaks",
            "location": 226,
            "return": [],
            "arguments": {}
        },
        "_test_memory_leaks": {
            "name": "_test_memory_leaks",
            "location": 238,
            "return": [],
            "arguments": {
                "signature_combine": [],
                "amount": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "inverse": [],
                "signature_grad": [],
                "scalar_term": []
            }
        },
        "_IisignatureSignatureFunction.forward": {
            "name": "forward",
            "location": 40,
            "return": [],
            "arguments": {
                "ctx": [],
                "path": [],
                "depth": []
            }
        },
        "_IisignatureSignatureFunction.backward": {
            "name": "backward",
            "location": 48,
            "return": [],
            "arguments": {
                "ctx": [],
                "grad": []
            }
        },
        "iisignature_signature.fn": {
            "name": "fn",
            "location": 56,
            "return": [],
            "arguments": {
                "path": [],
                "depth": []
            }
        },
        "_test_memory_leaks.one_iteration": {
            "name": "one_iteration",
            "location": 241,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/test_signature_inversion.py": {
        "test_inverted_path_shape": {
            "name": "test_inverted_path_shape",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_initial_position_zero": {
            "name": "test_initial_position_zero",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_inversion_close_original_path": {
            "name": "test_inversion_close_original_path",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/test_signature_to_logsignature.py": {
        "signatory_signature_to_logsignature": {
            "name": "signatory_signature_to_logsignature",
            "location": 33,
            "return": [],
            "arguments": {
                "class_": [],
                "signature": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "scalar_term": []
            }
        },
        "test_forward": {
            "name": "test_forward",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "_test_forward": {
            "name": "_test_forward",
            "location": 55,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "signature_grad": [],
                "scalar_term": []
            }
        },
        "test_backward_expand_words": {
            "name": "test_backward_expand_words",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_backward_brackets": {
            "name": "test_backward_brackets",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "_test_backward": {
            "name": "_test_backward",
            "location": 110,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "scalar_term": []
            }
        },
        "test_no_adjustments": {
            "name": "test_no_adjustments",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "_test_no_adjustments": {
            "name": "_test_no_adjustments",
            "location": 164,
            "return": [],
            "arguments": {
                "class_": [],
                "device": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "signature_grad": [],
                "scalar_term": []
            }
        },
        "test_repeat_and_memory_leaks": {
            "name": "test_repeat_and_memory_leaks",
            "location": 192,
            "return": [],
            "arguments": {}
        },
        "_test_repeat_and_memory_leaks": {
            "name": "_test_repeat_and_memory_leaks",
            "location": 211,
            "return": [],
            "arguments": {
                "class_": [],
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "depth": [],
                "stream": [],
                "mode": [],
                "signature_grad": [],
                "scalar_term": []
            }
        },
        "_test_repeat_and_memory_leaks.one_iteration": {
            "name": "one_iteration",
            "location": 224,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/test_utility.py": {
        "test_lyndon_amount": {
            "name": "test_lyndon_amount",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "_iisignature_convert": {
            "name": "_iisignature_convert",
            "location": 40,
            "return": [],
            "arguments": {
                "ii_elem": []
            }
        },
        "test_lyndon_brackets": {
            "name": "test_lyndon_brackets",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_lyndon_words": {
            "name": "test_lyndon_words",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "test_signature_channels": {
            "name": "test_signature_channels",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "test_logsignature_channels": {
            "name": "test_logsignature_channels",
            "location": 113,
            "return": [],
            "arguments": {}
        }
    },
    "signatory-master/test/helpers/helpers.py": {
        "diff": {
            "name": "diff",
            "location": 33,
            "return": [],
            "arguments": {
                "arg1": [],
                "arg2": [],
                "atol": []
            }
        },
        "get_devices": {
            "name": "get_devices",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "get_path": {
            "name": "get_path",
            "location": 50,
            "return": [],
            "arguments": {
                "batch_size": [],
                "input_stream": [],
                "input_channels": [],
                "device": [],
                "path_grad": []
            }
        },
        "get_basepoint": {
            "name": "get_basepoint",
            "location": 56,
            "return": [],
            "arguments": {
                "batch_size": [],
                "input_channels": [],
                "device": [],
                "basepoint": []
            }
        },
        "get_initial": {
            "name": "get_initial",
            "location": 67,
            "return": [],
            "arguments": {
                "batch_size": [],
                "input_channels": [],
                "device": [],
                "depth": [],
                "initial": [],
                "scalar_term": []
            }
        },
        "random_sizes": {
            "name": "random_sizes",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "random_sizes_and_basepoint": {
            "name": "random_sizes_and_basepoint",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "iisignature_prepare": {
            "name": "iisignature_prepare",
            "location": 128,
            "return": [],
            "arguments": {
                "channels": [],
                "depth": [],
                "method": []
            }
        },
        "NullContext.__enter__": {
            "name": "__enter__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NullContext.__exit__": {
            "name": "__exit__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        }
    },
    "signatory-master/test/helpers/reimplementation.py": {
        "iisignature_signature_or_logsignature": {
            "name": "iisignature_signature_or_logsignature",
            "location": 21,
            "return": [],
            "arguments": {
                "fn": [],
                "path": [],
                "depth": [],
                "stream": [],
                "basepoint": [],
                "inverse": []
            }
        }
    },
    "signatory-master/test/helpers/validation.py": {
        "validate_tests": {
            "name": "validate_tests",
            "location": 84,
            "return": [],
            "arguments": {
                "tests": [],
                "depends": []
            }
        },
        "_Graph.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Graph.add_directed_edge": {
            "name": "add_directed_edge",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "info": []
            }
        },
        "_Graph.vertices": {
            "name": "vertices",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Graph._is_cyclic": {
            "name": "_is_cyclic",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "vertex": [],
                "visited": [],
                "current": []
            }
        },
        "_Graph.get_cycle": {
            "name": "get_cycle",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Graph.mark": {
            "name": "mark",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "vertex": []
            }
        },
        "_Graph.get_unmarked": {
            "name": "get_unmarked",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "signatory-master/test/helpers/__init__.py": {}
}
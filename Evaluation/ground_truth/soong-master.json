{
    "soong-master/setup.py": {},
    "soong-master/soong/dml.py": {
        "insert": {
            "name": "insert",
            "location": 13,
            "return": [
                "Union[(None, Any, Tuple[Any])]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "table": [
                    "str"
                ],
                "values": [
                    "Dict[(str, Any)]"
                ],
                "returning": [
                    "Union[(None, str, List[str])]"
                ]
            }
        },
        "update": {
            "name": "update",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "table": [
                    "str"
                ],
                "id": [
                    "Any"
                ],
                "values": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 80,
            "return": [
                "Union[(Any, None)]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "sql": [
                    "str"
                ],
                "params": [
                    "Tuple"
                ],
                "returning": [
                    "bool"
                ]
            }
        }
    },
    "soong-master/soong/query.py": {
        "_build_query": {
            "name": "_build_query",
            "location": 14,
            "return": [
                "Tuple[(str, Tuple[(Any, ...)])]"
            ],
            "arguments": {
                "table": [],
                "qualifications": [],
                "select_list": [],
                "limit": []
            }
        },
        "select": {
            "name": "select",
            "location": 46,
            "return": [
                "Iterable[Any]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "table": [
                    "str"
                ],
                "qualifications": [
                    "Dict"
                ],
                "select_list": [
                    "List"
                ],
                "limit": [
                    "Union[(int, None)]"
                ],
                "arraysize": [
                    "int"
                ]
            }
        },
        "select_one": {
            "name": "select_one",
            "location": 79,
            "return": [
                "Union[(Any, None)]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "table": [
                    "str"
                ],
                "qualifications": [
                    "Dict"
                ],
                "select_list": [
                    "List"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 103,
            "return": [
                "Union[(Any, None)]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "table": [
                    "str"
                ],
                "id": [
                    "Any"
                ],
                "select_list": [
                    "List"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 121,
            "return": [
                "Iterable[Any]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2.extensions.connection"
                ],
                "sql": [
                    "str"
                ],
                "params": [
                    "Tuple"
                ],
                "arraysize": [
                    "int"
                ]
            }
        }
    },
    "soong-master/soong/__init__.py": {
        "connection": {
            "name": "connection",
            "location": 26,
            "return": [
                "psycopg2.extensions.connection"
            ],
            "arguments": {}
        },
        "connect": {
            "name": "connect",
            "location": 45,
            "return": [
                "psycopg2.extensions.connection"
            ],
            "arguments": {}
        },
        "is_running_in_lambda": {
            "name": "is_running_in_lambda",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_iam_token": {
            "name": "get_iam_token",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "dsn": [
                    "dict"
                ]
            }
        }
    },
    "soong-master/tests/conftest.py": {
        "init_schema": {
            "name": "init_schema",
            "location": 12,
            "return": [],
            "arguments": {
                "pg": []
            }
        },
        "conn": {
            "name": "conn",
            "location": 20,
            "return": [],
            "arguments": {
                "init_schema": [],
                "pg_connect": []
            }
        }
    },
    "soong-master/tests/test_aws_support.py": {
        "test_is_not_running_in_lambda_cloud": {
            "name": "test_is_not_running_in_lambda_cloud",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_is_running_in_mock_lambda_cloud": {
            "name": "test_is_running_in_mock_lambda_cloud",
            "location": 14,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_is_running_in_mock_sam_local": {
            "name": "test_is_running_in_mock_sam_local",
            "location": 20,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_get_iam_token": {
            "name": "test_get_iam_token",
            "location": 27,
            "return": [],
            "arguments": {
                "mocker": []
            }
        },
        "test_connect_in_mock_lambda": {
            "name": "test_connect_in_mock_lambda",
            "location": 37,
            "return": [],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        }
    },
    "soong-master/tests/test_connect.py": {
        "test_connect_args": {
            "name": "test_connect_args",
            "location": 9,
            "return": [],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_connect_temp_pg": {
            "name": "test_connect_temp_pg",
            "location": 29,
            "return": [],
            "arguments": {
                "pg": []
            }
        },
        "test_new_connection": {
            "name": "test_new_connection",
            "location": 39,
            "return": [],
            "arguments": {
                "pg": []
            }
        },
        "test_connection_reconnects_closed": {
            "name": "test_connection_reconnects_closed",
            "location": 53,
            "return": [],
            "arguments": {
                "pg": []
            }
        }
    },
    "soong-master/tests/test_dml.py": {
        "test_insert": {
            "name": "test_insert",
            "location": 5,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_insert_returning_single": {
            "name": "test_insert_returning_single",
            "location": 13,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_insert_returning_many": {
            "name": "test_insert_returning_many",
            "location": 19,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_update_one_value": {
            "name": "test_update_one_value",
            "location": 25,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_update_many_values": {
            "name": "test_update_many_values",
            "location": 31,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_execute": {
            "name": "test_execute",
            "location": 37,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_execute_returning": {
            "name": "test_execute_returning",
            "location": 45,
            "return": [],
            "arguments": {
                "conn": []
            }
        }
    },
    "soong-master/tests/test_query.py": {
        "test_build_query": {
            "name": "test_build_query",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_select": {
            "name": "test_select",
            "location": 16,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_select_one": {
            "name": "test_select_one",
            "location": 27,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_get": {
            "name": "test_get",
            "location": 34,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "test_execute": {
            "name": "test_execute",
            "location": 41,
            "return": [],
            "arguments": {
                "conn": []
            }
        }
    }
}
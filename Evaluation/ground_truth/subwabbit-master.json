{
    "subwabbit-master/setup.py": {
        "PyLint.initialize_options": {
            "name": "initialize_options",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyLint.finalize_options": {
            "name": "finalize_options",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyLint.run": {
            "name": "run",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyMyPy.initialize_options": {
            "name": "initialize_options",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyMyPy.finalize_options": {
            "name": "finalize_options",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyMyPy.run": {
            "name": "run",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.run": {
            "name": "run",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.initialize_options": {
            "name": "initialize_options",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.run_tests": {
            "name": "run_tests",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "subwabbit-master/docs/source/conf.py": {},
    "subwabbit-master/subwabbit/base.py": {
        "VowpalWabbitBaseFormatter.format_common_features": {
            "name": "format_common_features",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitBaseFormatter.format_item_features": {
            "name": "format_item_features",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "item_features": [
                    "Any"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitBaseFormatter.get_formatted_example": {
            "name": "get_formatted_example",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "common_line_part": [
                    "str"
                ],
                "item_line_part": [
                    "str"
                ],
                "label": [
                    "Optional[float]"
                ],
                "weight": [
                    "Optional[float]"
                ],
                "debug_info": [
                    "Optional[Dict[(Any, Any)]]"
                ]
            }
        },
        "VowpalWabbitBaseFormatter.get_human_readable_explanation": {
            "name": "get_human_readable_explanation",
            "location": 79,
            "return": [
                "List[Dict]"
            ],
            "arguments": {
                "self": [],
                "explanation_string": [
                    "str"
                ],
                "feature_translator": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitBaseFormatter.get_human_readable_explanation_html": {
            "name": "get_human_readable_explanation_html",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "explanation_string": [
                    "str"
                ],
                "feature_translator": [
                    "Any"
                ],
                "max_rows": [
                    "Optional[int]"
                ]
            }
        },
        "VowpalWabbitBaseFormatter.parse_element": {
            "name": "parse_element",
            "location": 209,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "str"
                ],
                "feature_translator": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitDummyFormatter.format_common_features": {
            "name": "format_common_features",
            "location": 230,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "str"
                ],
                "debug_info": [
                    "Optional[Dict[(Any, Any)]]"
                ]
            }
        },
        "VowpalWabbitDummyFormatter.format_item_features": {
            "name": "format_item_features",
            "location": 234,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "item_features": [
                    "str"
                ],
                "debug_info": [
                    "Optional[Dict[(Any, Any)]]"
                ]
            }
        },
        "VowpalWabbitBaseModel.__init__": {
            "name": "__init__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "formatter": [
                    "VowpalWabbitBaseFormatter"
                ]
            }
        },
        "VowpalWabbitBaseModel.predict": {
            "name": "predict",
            "location": 250,
            "return": [
                "Iterable[Union[(float, str)]]"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "timeout": [
                    "Optional[float]"
                ],
                "debug_info": [
                    "Any"
                ],
                "metrics": [
                    "Optional[Dict]"
                ],
                "detailed_metrics": [
                    "Optional[Dict]"
                ]
            }
        },
        "VowpalWabbitBaseModel.train": {
            "name": "train",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "labels": [
                    "Iterable[float]"
                ],
                "weights": [
                    "Iterable[Optional[float]]"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitBaseModel.explain_vw_line": {
            "name": "explain_vw_line",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "vw_line": [
                    "str"
                ],
                "link_function": [
                    "bool"
                ]
            }
        }
    },
    "subwabbit-master/subwabbit/blocking.py": {
        "VowpalWabbitProcess.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "formatter": [
                    "VowpalWabbitBaseFormatter"
                ],
                "vw_args": [
                    "List"
                ],
                "batch_size": [
                    "int"
                ],
                "write_only": [
                    "bool"
                ],
                "audit_mode": [
                    "bool"
                ]
            }
        },
        "VowpalWabbitProcess.__del__": {
            "name": "__del__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VowpalWabbitProcess.close": {
            "name": "close",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "VowpalWabbitProcess._check_empty_buffer": {
            "name": "_check_empty_buffer",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VowpalWabbitProcess.predict": {
            "name": "predict",
            "location": 95,
            "return": [
                "Iterable[Union[(float, str)]]"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "timeout": [
                    "Optional[float]"
                ],
                "debug_info": [
                    "Any"
                ],
                "metrics": [
                    "Optional[Dict]"
                ],
                "detailed_metrics": [
                    "Optional[Dict]"
                ]
            }
        },
        "VowpalWabbitProcess.train": {
            "name": "train",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "labels": [
                    "Iterable[float]"
                ],
                "weights": [
                    "Iterable[Optional[float]]"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitProcess.explain_vw_line": {
            "name": "explain_vw_line",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "vw_line": [
                    "str"
                ],
                "link_function": []
            }
        },
        "VowpalWabbitProcess._send_lines_to_vowpal": {
            "name": "_send_lines_to_vowpal",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "detailed_metrics": [],
                "debug_info": []
            }
        },
        "VowpalWabbitProcess._get_predictions_from_vowpal": {
            "name": "_get_predictions_from_vowpal",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "detailed_metrics": [],
                "debug_info": []
            }
        },
        "VowpalWabbitPLTProcess._get_predictions_from_vowpal": {
            "name": "_get_predictions_from_vowpal",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "detailed_metrics": [],
                "debug_info": []
            }
        }
    },
    "subwabbit-master/subwabbit/nonblocking.py": {
        "VowpalWabbitNonBlockingProcess.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "formatter": [
                    "VowpalWabbitBaseFormatter"
                ],
                "vw_args": [
                    "List"
                ],
                "batch_size": [
                    "int"
                ],
                "audit_mode": [
                    "bool"
                ],
                "max_pending_lines": [
                    "int"
                ],
                "write_timeout_ms": [
                    "float"
                ],
                "pipe_buffer_size_bytes": [
                    "Optional[int]"
                ]
            }
        },
        "VowpalWabbitNonBlockingProcess.__del__": {
            "name": "__del__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VowpalWabbitNonBlockingProcess.close": {
            "name": "close",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VowpalWabbitNonBlockingProcess.cleanup": {
            "name": "cleanup",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [
                    "Optional[float]"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitNonBlockingProcess.predict": {
            "name": "predict",
            "location": 127,
            "return": [
                "Iterable[Union[(float, str)]]"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "timeout": [
                    "Optional[float]"
                ],
                "debug_info": [
                    "Any"
                ],
                "metrics": [
                    "Optional[Dict]"
                ],
                "detailed_metrics": [
                    "Optional[Dict]"
                ]
            }
        },
        "VowpalWabbitNonBlockingProcess.train": {
            "name": "train",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "common_features": [
                    "Any"
                ],
                "items_features": [
                    "Iterable[Any]"
                ],
                "labels": [
                    "Iterable[float]"
                ],
                "weights": [
                    "Iterable[Optional[float]]"
                ],
                "debug_info": [
                    "Any"
                ]
            }
        },
        "VowpalWabbitNonBlockingProcess.explain_vw_line": {
            "name": "explain_vw_line",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "vw_line": [
                    "str"
                ],
                "link_function": []
            }
        },
        "VowpalWabbitNonBlockingProcess._send_lines_to_vowpal": {
            "name": "_send_lines_to_vowpal",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "detailed_metrics": [],
                "debug_info": []
            }
        },
        "VowpalWabbitNonBlockingProcess._get_predictions_from_vowpal": {
            "name": "_get_predictions_from_vowpal",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "detailed_metrics": [],
                "debug_info": []
            }
        }
    },
    "subwabbit-master/subwabbit/version.py": {
        "_get_version": {
            "name": "_get_version",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "subwabbit-master/subwabbit/__init__.py": {},
    "subwabbit-master/tests/benchmarks/benchmark_blocking_implementation.py": {},
    "subwabbit-master/tests/benchmarks/benchmark_nonblocking_implementation.py": {},
    "subwabbit-master/tests/benchmarks/benchmark_pyvw.py": {
        "PyVWModel.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "formatter": [],
                "vw_args": []
            }
        },
        "PyVWModel.predict": {
            "name": "predict",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "common_features": [],
                "items_features": [],
                "timeout": []
            }
        },
        "PyVWModel.train": {
            "name": "train",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "common_features": [],
                "items_features": [],
                "labels": [],
                "weights": [],
                "debug_info": []
            }
        },
        "PyVWModel.explain_vw_line": {
            "name": "explain_vw_line",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "vw_line": [],
                "link_function": []
            }
        }
    },
    "subwabbit-master/tests/benchmarks/benchmark_utils.py": {
        "load_dataset": {
            "name": "load_dataset",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "run_benchmark_single_process": {
            "name": "run_benchmark_single_process",
            "location": 42,
            "return": [],
            "arguments": {
                "model_class": []
            }
        },
        "BenchmarkFormatter.format_common_features": {
            "name": "format_common_features",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "common_features": [],
                "debug_info": []
            }
        },
        "BenchmarkFormatter.format_item_features": {
            "name": "format_item_features",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "common_features": [],
                "item_features": [],
                "debug_info": []
            }
        }
    },
    "subwabbit-master/tests/benchmarks/pretrain_model.py": {},
    "subwabbit-master/tests/unittests/test_blocking.py": {
        "test_predict_without_timeout": {
            "name": "test_predict_without_timeout",
            "location": 29,
            "return": [],
            "arguments": {
                "return_predictions_batch": []
            }
        },
        "test_predict_with_timeout": {
            "name": "test_predict_with_timeout",
            "location": 75,
            "return": [],
            "arguments": {
                "return_predictions_batch": [],
                "expected_predictions": [],
                "timeout_after_item": []
            }
        },
        "test_predict_io_calls": {
            "name": "test_predict_io_calls",
            "location": 145,
            "return": [],
            "arguments": {
                "return_predictions_batch": []
            }
        },
        "test_train": {
            "name": "test_train",
            "location": 210,
            "return": [],
            "arguments": {
                "return_predictions_batch": []
            }
        },
        "test_train_write_only": {
            "name": "test_train_write_only",
            "location": 281,
            "return": [],
            "arguments": {
                "return_predictions_batch": []
            }
        },
        "test_predict_with_timeout.perf_counter_side_effect": {
            "name": "perf_counter_side_effect",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "test_predict_with_timeout.get_items_iterator": {
            "name": "get_items_iterator",
            "location": 96,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "test_predict_io_calls.get_next_prediction": {
            "name": "get_next_prediction",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "test_train.get_next_prediction": {
            "name": "get_next_prediction",
            "location": 222,
            "return": [],
            "arguments": {}
        }
    },
    "subwabbit-master/tests/unittests/test_clients.py": {
        "test_vwprocess": {
            "name": "test_vwprocess",
            "location": 54,
            "return": [],
            "arguments": {
                "model_class": []
            }
        },
        "isclose": {
            "name": "isclose",
            "location": 146,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "abs_tol": []
            }
        },
        "TestFormatter.format_common_features": {
            "name": "format_common_features",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "user_features": [],
                "debug_info": []
            }
        },
        "TestFormatter.format_item_features": {
            "name": "format_item_features",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "user_features": [],
                "item_features": [],
                "debug_info": []
            }
        },
        "VWProcessTest.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VWNonBlockingProcessTest.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "subwabbit-master/tests/unittests/test_nonblocking.py": {
        "test_send_lines_to_vowpal": {
            "name": "test_send_lines_to_vowpal",
            "location": 78,
            "return": [],
            "arguments": {
                "unwritten_buffer": [],
                "lines": [],
                "num_bytes_written": [],
                "expected_written": [],
                "expected_unwritten_buffer": []
            }
        },
        "test_get_predictions_from_vowpal": {
            "name": "test_get_predictions_from_vowpal",
            "location": 130,
            "return": [],
            "arguments": {
                "read": [],
                "unprocessed_buffer": [],
                "expected_unprocessed_buffer": [],
                "expected_predictions": []
            }
        },
        "test_predict_without_timeout": {
            "name": "test_predict_without_timeout",
            "location": 214,
            "return": [],
            "arguments": {
                "written_bytes": [],
                "vowpal_output_buffer_reads": [],
                "num_items": []
            }
        }
    }
}
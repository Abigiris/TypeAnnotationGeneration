{
    "testHttpServer-master/scratch/application.py": {
        "Router.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Router.add_route": {
            "name": "add_route",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "handler": [
                    "RouteHandlerT"
                ]
            }
        },
        "Router.lookup": {
            "name": "lookup",
            "location": 39,
            "return": [
                "Optional[HandlerT]"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Application.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.add_route": {
            "name": "add_route",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "handler": [
                    "RouteHandlerT"
                ],
                "name": [
                    "Optional[str]"
                ]
            }
        },
        "Application.route": {
            "name": "route",
            "location": 57,
            "return": [
                "Callable[([RouteHandlerT], RouteHandlerT)]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "name": [
                    "Optional[str]"
                ]
            }
        },
        "Application.__call__": {
            "name": "__call__",
            "location": 66,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Request"
                ]
            }
        },
        "Application.route.decorator": {
            "name": "decorator",
            "location": 60,
            "return": [
                "RouteHandlerT"
            ],
            "arguments": {
                "handler": [
                    "RouteHandlerT"
                ]
            }
        }
    },
    "testHttpServer-master/scratch/headers.py": {
        "Headers.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Headers.add": {
            "name": "add",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Headers.get_all": {
            "name": "get_all",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Headers.get": {
            "name": "get",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "Headers.get_int": {
            "name": "get_int",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Headers.__iter__": {
            "name": "__iter__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "testHttpServer-master/scratch/request.py": {
        "iter_lines": {
            "name": "iter_lines",
            "location": 78,
            "return": [
                "typing.Generator[(bytes, None, bytes)]"
            ],
            "arguments": {
                "sock": [
                    "socket.socket"
                ],
                "bufsize": [
                    "int"
                ]
            }
        },
        "BodyReader.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sock": [
                    "socket.socket"
                ]
            }
        },
        "BodyReader.readable": {
            "name": "readable",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BodyReader.read": {
            "name": "read",
            "location": 20,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Request.from_socket": {
            "name": "from_socket",
            "location": 40,
            "return": [
                "'Request'"
            ],
            "arguments": {
                "cls": [],
                "sock": [
                    "socket.socket"
                ]
            }
        }
    },
    "testHttpServer-master/scratch/response.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "str"
                ],
                "headers": [
                    "typing.Optional[Headers]"
                ],
                "body": [
                    "typing.Optional[typing.IO[bytes]]"
                ],
                "content": [
                    "typing.Optional[str]"
                ],
                "encoding": [
                    "str"
                ]
            }
        },
        "Response.send": {
            "name": "send",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sock": [
                    "socket.socket"
                ]
            }
        }
    },
    "testHttpServer-master/scratch/server.py": {
        "serve_static": {
            "name": "serve_static",
            "location": 137,
            "return": [
                "HandlerT"
            ],
            "arguments": {
                "server_root": [
                    "str"
                ]
            }
        },
        "HTTPWorker.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection_queue": [
                    "Queue"
                ],
                "handlers": [
                    "List[Tuple[(str, HandlerT)]]"
                ]
            }
        },
        "HTTPWorker.stop": {
            "name": "stop",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPWorker.run": {
            "name": "run",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPWorker.handle_client": {
            "name": "handle_client",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client_sock": [
                    "socket.socket"
                ],
                "client_addr": [
                    "typing.Tuple[(str, int)]"
                ]
            }
        },
        "HTTPServer.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "worker_count": []
            }
        },
        "HTTPServer.serve_forever": {
            "name": "serve_forever",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPServer.mount": {
            "name": "mount",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path_prefix": [
                    "str"
                ],
                "handler": [
                    "HandlerT"
                ]
            }
        },
        "serve_static.handler": {
            "name": "handler",
            "location": 142,
            "return": [
                "Response"
            ],
            "arguments": {
                "request": [
                    "Request"
                ]
            }
        }
    },
    "testHttpServer-master/scratch/__init__.py": {},
    "testHttpServer-master/scratch/__main__.py": {
        "jsonresponse": {
            "name": "jsonresponse",
            "location": 18,
            "return": [
                "Callable[(..., Response)]"
            ],
            "arguments": {
                "handler": [
                    "Callable[(..., Union[(dict, Tuple[(str, dict)])])]"
                ]
            }
        },
        "get_users": {
            "name": "get_users",
            "location": 42,
            "return": [
                "dict"
            ],
            "arguments": {
                "request": [
                    "Request"
                ]
            }
        },
        "get_user": {
            "name": "get_user",
            "location": 48,
            "return": [
                "Union[(dict, Tuple[(str, dict)])]"
            ],
            "arguments": {
                "request": [
                    "Request"
                ],
                "user_id": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "jsonresponse.wrapper": {
            "name": "wrapper",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    },
    "testHttpServer-master/tests/test_headers.py": {
        "test_can_add_headers": {
            "name": "test_can_add_headers",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_headers_are_case_insesitive": {
            "name": "test_headers_are_case_insesitive",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_getting_a_missing_header_returns_none": {
            "name": "test_getting_a_missing_header_returns_none",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_can_get_headers_with_fallback": {
            "name": "test_can_get_headers_with_fallback",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_can_get_headers_as_ints": {
            "name": "test_can_get_headers_as_ints",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_can_get_headers_as_ints_with_fallback": {
            "name": "test_can_get_headers_as_ints_with_fallback",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_getting_a_header_returns_its_last_value": {
            "name": "test_getting_a_header_returns_its_last_value",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "test_can_get_all_of_a_headers_values": {
            "name": "test_can_get_all_of_a_headers_values",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_headers_is_iterable": {
            "name": "test_headers_is_iterable",
            "location": 69,
            "return": [],
            "arguments": {}
        }
    },
    "testHttpServer-master/tests/test_request.py": {
        "make_request": {
            "name": "make_request",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "test_request": {
            "name": "test_request",
            "location": 58,
            "return": [],
            "arguments": {
                "data": [],
                "method": [],
                "path": [],
                "headers": [],
                "body": []
            }
        },
        "test_invalid_request": {
            "name": "test_invalid_request",
            "location": 89,
            "return": [],
            "arguments": {
                "data": [],
                "error": []
            }
        },
        "StubSocket.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "str"
                ]
            }
        },
        "StubSocket.recv": {
            "name": "recv",
            "location": 13,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        }
    },
    "testHttpServer-master/tests/test_response.py": {
        "make_output": {
            "name": "make_output",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "make_headers": {
            "name": "make_headers",
            "location": 29,
            "return": [
                "Headers"
            ],
            "arguments": {}
        },
        "test_response": {
            "name": "test_response",
            "location": 99,
            "return": [],
            "arguments": {
                "response": [],
                "output": []
            }
        },
        "StubSocket.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StubSocket.sendall": {
            "name": "sendall",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "StubSocket.sendfile": {
            "name": "sendfile",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "typing.IO[bytes]"
                ]
            }
        },
        "StubSocket.getvalue": {
            "name": "getvalue",
            "location": 21,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "testHttpServer-master/tests/__init__.py": {}
}
{
    "tf3-master/best_exporter.py": {
        "_verify_compare_fn_args": {
            "name": "_verify_compare_fn_args",
            "location": 19,
            "return": [],
            "arguments": {
                "compare_fn": []
            }
        },
        "_loss_smaller": {
            "name": "_loss_smaller",
            "location": 34,
            "return": [],
            "arguments": {
                "best_eval_result": [],
                "current_eval_result": []
            }
        },
        "BestExporter.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "serving_input_receiver_fn": [],
                "event_file_pattern": [],
                "compare_fn": [],
                "assets_extra": [],
                "as_text": [],
                "exports_to_keep": []
            }
        },
        "BestExporter.name": {
            "name": "name",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BestExporter.export": {
            "name": "export",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "estimator": [],
                "export_path": [],
                "checkpoint_path": [],
                "eval_result": [],
                "is_the_final_export": []
            }
        },
        "BestExporter._copy_checkpoint": {
            "name": "_copy_checkpoint",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "checkpoint_pattern": [],
                "dest_path": [],
                "step": []
            }
        },
        "BestExporter._garbage_collect_exports": {
            "name": "_garbage_collect_exports",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "export_dir_base": []
            }
        },
        "BestExporter._get_best_eval_result": {
            "name": "_get_best_eval_result",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "event_files": []
            }
        },
        "BestExporter._garbage_collect_exports._export_version_parser": {
            "name": "_export_version_parser",
            "location": 216,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "tf3-master/classifier.py": {
        "Classifier.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "params": [],
                "train_csv_reader": [],
                "validation_csv_reader": [],
                "feature_columns": [],
                "label_unique_values": []
            }
        },
        "Classifier._create_explainer": {
            "name": "_create_explainer",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "df": [],
                "target_type": []
            }
        },
        "Classifier.clear_checkpoint": {
            "name": "clear_checkpoint",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier.run": {
            "name": "run",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier._to_array": {
            "name": "_to_array",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "feature_types": [],
                "df": []
            }
        },
        "Classifier._from_array": {
            "name": "_from_array",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "feature_types": [],
                "df": []
            }
        },
        "Classifier.explain": {
            "name": "explain",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": [],
                "feature_types": [],
                "num_features": [],
                "top_labels": []
            }
        },
        "Classifier.predict": {
            "name": "predict",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": []
            }
        },
        "Classifier.input_predict_fn": {
            "name": "input_predict_fn",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "df": []
            }
        },
        "Classifier._train_input_fn": {
            "name": "_train_input_fn",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier._validation_input_fn": {
            "name": "_validation_input_fn",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier._create_model": {
            "name": "_create_model",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier._create_specs": {
            "name": "_create_specs",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier._create_run_config": {
            "name": "_create_run_config",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KerasClassifier.__init__": {
            "name": "__init__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "params": [],
                "train_csv_reader": [],
                "validation_csv_reader": [],
                "feature_columns": [],
                "label_unique_values": []
            }
        },
        "KerasClassifier.predict": {
            "name": "predict",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": []
            }
        },
        "KerasClassifier.input_predict_fn": {
            "name": "input_predict_fn",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": []
            }
        },
        "KerasClassifier.clear_checkpoint": {
            "name": "clear_checkpoint",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KerasClassifier.run": {
            "name": "run",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KerasClassifier._create_model": {
            "name": "_create_model",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KerasClassifier._create_specs": {
            "name": "_create_specs",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KerasClassifier._create_run_config": {
            "name": "_create_run_config",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Classifier.explain.model_predict": {
            "name": "model_predict",
            "location": 112,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "tf3-master/dfweb.py": {
        "load_user": {
            "name": "load_user",
            "location": 38,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "login": {
            "name": "login",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "upload": {
            "name": "upload",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "slider": {
            "name": "slider",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "feature": {
            "name": "feature",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "target": {
            "name": "target",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "parameters": {
            "name": "parameters",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 141,
            "return": [],
            "arguments": {}
        },
        "predict": {
            "name": "predict",
            "location": 184,
            "return": [],
            "arguments": {}
        },
        "explain": {
            "name": "explain",
            "location": 201,
            "return": [],
            "arguments": {}
        },
        "delete": {
            "name": "delete",
            "location": 227,
            "return": [],
            "arguments": {}
        },
        "delete_config": {
            "name": "delete_config",
            "location": 241,
            "return": [],
            "arguments": {}
        },
        "refresh": {
            "name": "refresh",
            "location": 249,
            "return": [],
            "arguments": {}
        },
        "stream": {
            "name": "stream",
            "location": 261,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "flash_errors": {
            "name": "flash_errors",
            "location": 273,
            "return": [],
            "arguments": {
                "form": []
            }
        }
    },
    "tf3-master/explainer.py": {
        "Explainer.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "train": [],
                "training_labels": [],
                "feature_names": [],
                "class_names": [],
                "categorical_features": [],
                "categorical_names": [],
                "mode": [],
                "verbose": []
            }
        },
        "Explainer.get_mode": {
            "name": "get_mode",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Explainer.explain_instance": {
            "name": "explain_instance",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "sample": [],
                "predict_fn": [],
                "num_features": [],
                "top_labels": []
            }
        }
    },
    "tf3-master/feature_selection.py": {
        "FeatureSelection.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "df": []
            }
        },
        "FeatureSelection.populate_defaults": {
            "name": "populate_defaults",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeatureSelection.feature_dict": {
            "name": "feature_dict",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeatureSelection.populate_hash_and_categorical": {
            "name": "populate_hash_and_categorical",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeatureSelection.group_by": {
            "name": "group_by",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "datatypes": []
            }
        },
        "FeatureSelection.remove_label": {
            "name": "remove_label",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "datatypes": [],
                "target": []
            }
        },
        "FeatureSelection.create_tf_features": {
            "name": "create_tf_features",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "datatypes": [],
                "target": []
            }
        },
        "FeatureSelection.select_columns_with_type": {
            "name": "select_columns_with_type",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeatureSelection.select_target": {
            "name": "select_target",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "FeatureSelection.stringify": {
            "name": "stringify",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "list_param": []
            }
        },
        "FeatureSelection.update": {
            "name": "update",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "categories": [],
                "defaults": []
            }
        },
        "FeatureSelection.assign_category": {
            "name": "assign_category",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [],
                "df": []
            }
        }
    },
    "tf3-master/model_builder.py": {
        "ModelBuilder.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.class_of": {
            "name": "class_of",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModelBuilder.module_of": {
            "name": "module_of",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModelBuilder.positional_args_of": {
            "name": "positional_args_of",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModelBuilder.none_args_of": {
            "name": "none_args_of",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModelBuilder.all_args_of": {
            "name": "all_args_of",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModelBuilder._all_subclasses": {
            "name": "_all_subclasses",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "ModelBuilder.create_from_model_name": {
            "name": "create_from_model_name",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "model_name": [],
                "feature_columns": [],
                "params": []
            }
        },
        "ModelBuilder.select_kwargs_from_params": {
            "name": "select_kwargs_from_params",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "model_name": [],
                "featured_params": []
            }
        },
        "ModelBuilder._create": {
            "name": "_create",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "model_name": []
            }
        },
        "ModelBuilder._arguments_with": {
            "name": "_arguments_with",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "ModelBuilder.populate_positional_arguments": {
            "name": "populate_positional_arguments",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.populate_none_arguments": {
            "name": "populate_none_arguments",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.populate_all_arguments": {
            "name": "populate_all_arguments",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.populate_name_class_dict": {
            "name": "populate_name_class_dict",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.populate_subclasses_name_list": {
            "name": "populate_subclasses_name_list",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelBuilder.check_args": {
            "name": "check_args",
            "location": 104,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cls": [],
                "args": [],
                "kwargs": []
            }
        }
    },
    "tf3-master/runner.py": {
        "Runner.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "feature_columns": [],
                "label_name": [],
                "label_unique_values": [],
                "default_values": [],
                "dtypes": []
            }
        },
        "Runner.create_classifier": {
            "name": "create_classifier",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Runner.run": {
            "name": "run",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Runner.predict": {
            "name": "predict",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": []
            }
        },
        "Runner.explain": {
            "name": "explain",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "features": [],
                "target": [],
                "df": [],
                "feature_types": [],
                "num_features": [],
                "top_labels": []
            }
        }
    },
    "tf3-master/session.py": {
        "Session.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "Session.add_user": {
            "name": "add_user",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Session.reset_user": {
            "name": "reset_user",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.get_session": {
            "name": "get_session",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": []
            }
        },
        "Session.get_config": {
            "name": "get_config",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.get_writer": {
            "name": "get_writer",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.get": {
            "name": "get",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Session.set": {
            "name": "set",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Session.update_writer_conf": {
            "name": "update_writer_conf",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "conf": []
            }
        },
        "Session.update_split": {
            "name": "update_split",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "train_file": [],
                "validation_file": []
            }
        },
        "Session.set_target": {
            "name": "set_target",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "Session.load_config": {
            "name": "load_config",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.assign_category": {
            "name": "assign_category",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "df": []
            }
        },
        "Session.update_new_features": {
            "name": "update_new_features",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "cat_columns": [],
                "default_values": []
            }
        },
        "Session.load_features": {
            "name": "load_features",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/thread_handler.py": {
        "ThreadHandler.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThreadHandler.add_port": {
            "name": "add_port",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "config_file": [],
                "port": []
            }
        },
        "ThreadHandler.get_port": {
            "name": "get_port",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "config_file": []
            }
        },
        "ThreadHandler.tensor_board_thread": {
            "name": "tensor_board_thread",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [],
                "port": []
            }
        },
        "ThreadHandler.run_tensor_board": {
            "name": "run_tensor_board",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "config_file": []
            }
        },
        "ThreadHandler.run_thread": {
            "name": "run_thread",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": []
            }
        },
        "ThreadHandler.predict_thread": {
            "name": "predict_thread",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "new_features": [],
                "df": []
            }
        },
        "ThreadHandler.explain_thread": {
            "name": "explain_thread",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "new_features": [],
                "df": [],
                "feature_types": [],
                "num_features": [],
                "top_labels": []
            }
        },
        "ThreadHandler.pause_threads": {
            "name": "pause_threads",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "ThreadHandler.run_estimator": {
            "name": "run_estimator",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "username": []
            }
        },
        "ThreadHandler.predict_estimator": {
            "name": "predict_estimator",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "new_features": [],
                "df": []
            }
        },
        "ThreadHandler.explain_estimator": {
            "name": "explain_estimator",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "new_features": [],
                "df": [],
                "feature_types": [],
                "num_features": [],
                "top_labels": []
            }
        },
        "ThreadHandler.handle_request": {
            "name": "handle_request",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "all_params_config": [],
                "features": [],
                "target": [],
                "labels": [],
                "defaults": [],
                "dtypes": [],
                "username": [],
                "resume_from": []
            }
        }
    },
    "tf3-master/user.py": {},
    "tf3-master/config/config_reader.py": {
        "read_config": {
            "name": "read_config",
            "location": 147,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_task_sections": {
            "name": "get_task_sections",
            "location": 153,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "CustomConfigParser.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.get_as_slice": {
            "name": "get_as_slice",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.get_rel_path": {
            "name": "get_rel_path",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser._from_training": {
            "name": "_from_training",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "CustomConfigParser._from_network": {
            "name": "_from_network",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "CustomConfigParser._from_custom": {
            "name": "_from_custom",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "CustomConfigParser._from_process": {
            "name": "_from_process",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "CustomConfigParser._from_paths": {
            "name": "_from_paths",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "CustomConfigParser.custom_model_path": {
            "name": "custom_model_path",
            "location": 61,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.training": {
            "name": "training",
            "location": 64,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.experiment": {
            "name": "experiment",
            "location": 68,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.path": {
            "name": "path",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.train_batch_size": {
            "name": "train_batch_size",
            "location": 74,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.learning_rate": {
            "name": "learning_rate",
            "location": 77,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.validation_batch_size": {
            "name": "validation_batch_size",
            "location": 80,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.optimizer": {
            "name": "optimizer",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.l1_reqularization": {
            "name": "l1_reqularization",
            "location": 86,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.l2_reqularization": {
            "name": "l2_reqularization",
            "location": 89,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.num_epochs": {
            "name": "num_epochs",
            "location": 92,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.hidden_layers": {
            "name": "hidden_layers",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.features": {
            "name": "features",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.feature_slice": {
            "name": "feature_slice",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.checkpoint_dir": {
            "name": "checkpoint_dir",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.export_dir": {
            "name": "export_dir",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.training_path": {
            "name": "training_path",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.validation_path": {
            "name": "validation_path",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.label_slice": {
            "name": "label_slice",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomConfigParser.all": {
            "name": "all",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/config/config_writer.py": {
        "ConfigWriter.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigWriter.itemize": {
            "name": "itemize",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "ConfigWriter.populate_config": {
            "name": "populate_config",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "ConfigWriter.add_item": {
            "name": "add_item",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "section": [],
                "key": [],
                "value": []
            }
        },
        "ConfigWriter.write_config": {
            "name": "write_config",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ConfigWriter.append_config": {
            "name": "append_config",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "tf3-master/database/create_database.py": {
        "create_all": {
            "name": "create_all",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "create_new_user": {
            "name": "create_new_user",
            "location": 18,
            "return": [],
            "arguments": {
                "username": [],
                "password": [],
                "email": []
            }
        }
    },
    "tf3-master/database/db.py": {},
    "tf3-master/forms/login_form.py": {},
    "tf3-master/forms/parameters_form.py": {
        "sanity_check_number_of_layers": {
            "name": "sanity_check_number_of_layers",
            "location": 11,
            "return": [],
            "arguments": {
                "form": [],
                "field": []
            }
        }
    },
    "tf3-master/forms/run_form.py": {},
    "tf3-master/forms/submit_form.py": {},
    "tf3-master/forms/upload_form.py": {
        "FileInputWithAccept.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        }
    },
    "tf3-master/forms/__init__.py": {},
    "tf3-master/playground/blog_estimator_dataset.py": {
        "download_dataset": {
            "name": "download_dataset",
            "location": 41,
            "return": [],
            "arguments": {
                "url": [],
                "file": []
            }
        },
        "my_input_fn": {
            "name": "my_input_fn",
            "location": 65,
            "return": [],
            "arguments": {
                "file_path": [],
                "perform_shuffle": [],
                "repeat_count": []
            }
        },
        "new_input_fn": {
            "name": "new_input_fn",
            "location": 131,
            "return": [],
            "arguments": {}
        },
        "my_input_fn.decode_csv": {
            "name": "decode_csv",
            "location": 66,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "new_input_fn.decode": {
            "name": "decode",
            "location": 132,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "tf3-master/playground/convert_color.py": {
        "make_lighter": {
            "name": "make_lighter",
            "location": 6,
            "return": [],
            "arguments": {
                "s": [],
                "factor": []
            }
        }
    },
    "tf3-master/playground/custom_estimator.py": {
        "my_model_fn": {
            "name": "my_model_fn",
            "location": 21,
            "return": [],
            "arguments": {
                "features": [],
                "labels": [],
                "mode": []
            }
        },
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "pandas_train_input_fn": {
            "name": "pandas_train_input_fn",
            "location": 39,
            "return": [],
            "arguments": {
                "df": []
            }
        }
    },
    "tf3-master/playground/dataset_gen.py": {},
    "tf3-master/playground/eager.py": {
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/playground/eager_dataset.py": {
        "parser": {
            "name": "parser",
            "location": 12,
            "return": [],
            "arguments": {
                "record": [],
                "second": [],
                "key": []
            }
        }
    },
    "tf3-master/playground/eager_simple.py": {},
    "tf3-master/playground/esitmator_google.py": {
        "read_dataset": {
            "name": "read_dataset",
            "location": 10,
            "return": [],
            "arguments": {
                "filename": [],
                "mode": [],
                "batch_size": []
            }
        },
        "amir_read_dataset": {
            "name": "amir_read_dataset",
            "location": 42,
            "return": [],
            "arguments": {
                "filename": [],
                "mode": [],
                "batch_size": []
            }
        },
        "get_train": {
            "name": "get_train",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "get_valid": {
            "name": "get_valid",
            "location": 61,
            "return": [],
            "arguments": {}
        },
        "get_test": {
            "name": "get_test",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "add_more_features": {
            "name": "add_more_features",
            "location": 78,
            "return": [],
            "arguments": {
                "feats": []
            }
        },
        "print_rmse": {
            "name": "print_rmse",
            "location": 93,
            "return": [],
            "arguments": {
                "model": [],
                "name": [],
                "input_fn": []
            }
        },
        "read_dataset._input_fn": {
            "name": "_input_fn",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "amir_read_dataset._input_fn": {
            "name": "_input_fn",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "read_dataset._input_fn.decode_csv": {
            "name": "decode_csv",
            "location": 12,
            "return": [],
            "arguments": {
                "value_column": []
            }
        },
        "amir_read_dataset._input_fn.decode_csv": {
            "name": "decode_csv",
            "location": 44,
            "return": [],
            "arguments": {
                "value_column": []
            }
        }
    },
    "tf3-master/playground/estimator.py": {
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "numpy_train_input_fn": {
            "name": "numpy_train_input_fn",
            "location": 21,
            "return": [],
            "arguments": {
                "sqft": [],
                "prop_type": [],
                "price": []
            }
        },
        "pandas_train_input_fn": {
            "name": "pandas_train_input_fn",
            "location": 31,
            "return": [],
            "arguments": {
                "df": []
            }
        }
    },
    "tf3-master/playground/factory.py": {
        "Factory.register": {
            "name": "register",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "methodName": [],
                "constructor": []
            }
        },
        "Factory.unregister": {
            "name": "unregister",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "methodName": []
            }
        },
        "Functor.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "function": []
            }
        },
        "Functor.__call__": {
            "name": "__call__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "B.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        }
    },
    "tf3-master/playground/generate.py": {
        "create_data": {
            "name": "create_data",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/playground/generate_df.py": {},
    "tf3-master/playground/iris.py": {
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "validation_input_fn": {
            "name": "validation_input_fn",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/playground/iris_eager.py": {
        "parse_csv": {
            "name": "parse_csv",
            "location": 23,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "loss": {
            "name": "loss",
            "location": 51,
            "return": [],
            "arguments": {
                "model": [],
                "x": [],
                "y": []
            }
        },
        "grad": {
            "name": "grad",
            "location": 56,
            "return": [],
            "arguments": {
                "model": [],
                "inputs": [],
                "targets": []
            }
        }
    },
    "tf3-master/playground/logistic_regression.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "number_of_classes": []
            }
        },
        "Model.logits": {
            "name": "logits",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.loss": {
            "name": "loss",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.prediction": {
            "name": "prediction",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.optimizer": {
            "name": "optimizer",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.input": {
            "name": "input",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.target": {
            "name": "target",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.error": {
            "name": "error",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/playground/premade.py": {
        "train_input_fn": {
            "name": "train_input_fn",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "pandas_train_input_fn": {
            "name": "pandas_train_input_fn",
            "location": 20,
            "return": [],
            "arguments": {
                "df": []
            }
        }
    },
    "tf3-master/playground/preproces_Titanic.py": {
        "feature_normalize": {
            "name": "feature_normalize",
            "location": 5,
            "return": [],
            "arguments": {
                "dataset": []
            }
        },
        "str_to_int": {
            "name": "str_to_int",
            "location": 10,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "count_space_except_nan": {
            "name": "count_space_except_nan",
            "location": 20,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "one_hot": {
            "name": "one_hot",
            "location": 27,
            "return": [],
            "arguments": {
                "df": [],
                "cols": []
            }
        },
        "pre_processing": {
            "name": "pre_processing",
            "location": 44,
            "return": [],
            "arguments": {
                "df": []
            }
        }
    },
    "tf3-master/playground/proto_test.py": {},
    "tf3-master/playground/random_generator.py": {
        "generate_linear_random": {
            "name": "generate_linear_random",
            "location": 5,
            "return": [],
            "arguments": {
                "number": [],
                "slope": [],
                "bias": []
            }
        },
        "generate_classes_random": {
            "name": "generate_classes_random",
            "location": 13,
            "return": [],
            "arguments": {
                "number": [],
                "number_classes": []
            }
        },
        "one_hot": {
            "name": "one_hot",
            "location": 31,
            "return": [],
            "arguments": {
                "labels": [],
                "number_of_classes": []
            }
        },
        "generate_classes_random_multifeature": {
            "name": "generate_classes_random_multifeature",
            "location": 38,
            "return": [],
            "arguments": {
                "number": [],
                "number_classes": [],
                "number_features": []
            }
        }
    },
    "tf3-master/playground/regression.py": {
        "main": {
            "name": "main",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "Model.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "image": [],
                "label": []
            }
        },
        "Model.prediction": {
            "name": "prediction",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.optimize": {
            "name": "optimize",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.error": {
            "name": "error",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/playground/simple_dataset.py": {
        "decode": {
            "name": "decode",
            "location": 11,
            "return": [],
            "arguments": {
                "line": [],
                "label_name": []
            }
        }
    },
    "tf3-master/playground/small_test.py": {},
    "tf3-master/playground/socket_app.py": {
        "Log.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "logfile": []
            }
        },
        "Log.test_disconnect": {
            "name": "test_disconnect",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Log.error_handler": {
            "name": "error_handler",
            "location": 23,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "Log.handleMessage": {
            "name": "handleMessage",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Log.test_message": {
            "name": "test_message",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Log.run_app": {
            "name": "run_app",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/playground/utils.py": {
        "doublewrap": {
            "name": "doublewrap",
            "location": 6,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "define_scope": {
            "name": "define_scope",
            "location": 20,
            "return": [],
            "arguments": {
                "function": [],
                "scope": []
            }
        },
        "download_dataset": {
            "name": "download_dataset",
            "location": 42,
            "return": [],
            "arguments": {
                "url": [],
                "file": [],
                "path_dataset": []
            }
        },
        "doublewrap.decorator": {
            "name": "decorator",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "define_scope.decorator": {
            "name": "decorator",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tf3-master/playground/__init__.py": {},
    "tf3-master/playground/dest/addressbook_pb2.py": {},
    "tf3-master/playground/dest/__init__.py": {},
    "tf3-master/reader/csv_reader.py": {
        "parser": {
            "name": "parser",
            "location": 12,
            "return": [],
            "arguments": {
                "record": [],
                "second": [],
                "key": []
            }
        },
        "CSVReader.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "column_defaults": [],
                "dtypes": []
            }
        },
        "CSVReader.make_dataset_from_config": {
            "name": "make_dataset_from_config",
            "location": 28,
            "return": [
                "tf.data.Dataset"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "Dict[(str, object)]"
                ]
            }
        },
        "CSVReader.convert_defaults": {
            "name": "convert_defaults",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "dtypes": [],
                "column_defaults": []
            }
        },
        "CSVReader._set_params": {
            "name": "_set_params",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "Dict[(str, object)]"
                ]
            }
        },
        "CSVReader._make_csv_dataset": {
            "name": "_make_csv_dataset",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "num_epo": []
            }
        },
        "CSVReader._make_numpy_array": {
            "name": "_make_numpy_array",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "CSVReader._column_names": {
            "name": "_column_names",
            "location": 73,
            "return": [
                "pd.DataFrame"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSVReader._feature_names": {
            "name": "_feature_names",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader._get_label_name": {
            "name": "_get_label_name",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader.label_unique_values": {
            "name": "label_unique_values",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader.make_numpy_array": {
            "name": "make_numpy_array",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "include_features": [],
                "numerical_labels": []
            }
        }
    },
    "tf3-master/reader/train_csv_reader.py": {
        "TrainCSVReader.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "str"
                ],
                "column_defaults": [],
                "dtypes": [],
                "label_name": [
                    "None"
                ]
            }
        },
        "TrainCSVReader._set_params": {
            "name": "_set_params",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "Dict[(str, object)]"
                ]
            }
        }
    },
    "tf3-master/reader/validation_csv_reader.py": {
        "ValidationCSVReader.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "config": [
                    "str"
                ],
                "column_defaults": [
                    "list"
                ],
                "dtypes": [],
                "label_name": [
                    "str"
                ]
            }
        },
        "ValidationCSVReader._set_params": {
            "name": "_set_params",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "Dict[(str, object)]"
                ]
            }
        }
    },
    "tf3-master/test/configparser_test.py": {
        "test_configreader": {
            "name": "test_configreader",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/main.py": {
        "function": {
            "name": "function",
            "location": 7,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "mockClass": []
            }
        }
    },
    "tf3-master/test/test_config_reader.py": {
        "config": {
            "name": "config",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_from_process": {
            "name": "test_from_process",
            "location": 13,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        },
        "test_hidden_layers": {
            "name": "test_hidden_layers",
            "location": 17,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        },
        "test_training": {
            "name": "test_training",
            "location": 25,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        },
        "test_all": {
            "name": "test_all",
            "location": 38,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 50,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        },
        "test_checkpoint_dir": {
            "name": "test_checkpoint_dir",
            "location": 56,
            "return": [],
            "arguments": {
                "config": [
                    "config_reader.CustomConfigParser"
                ]
            }
        }
    },
    "tf3-master/test/test_config_writer.py": {
        "config_writer": {
            "name": "config_writer",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_populate_config": {
            "name": "test_populate_config",
            "location": 33,
            "return": [],
            "arguments": {
                "config_writer": []
            }
        }
    },
    "tf3-master/test/test_csv_reader.py": {
        "config": {
            "name": "config",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "train_reader": {
            "name": "train_reader",
            "location": 21,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "validation_reader": {
            "name": "validation_reader",
            "location": 28,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "test_get_label_name": {
            "name": "test_get_label_name",
            "location": 32,
            "return": [],
            "arguments": {
                "train_reader": [],
                "validation_reader": []
            }
        },
        "test_dataset": {
            "name": "test_dataset",
            "location": 44,
            "return": [],
            "arguments": {
                "train_reader": []
            }
        },
        "test_feature_columns": {
            "name": "test_feature_columns",
            "location": 49,
            "return": [],
            "arguments": {
                "train_reader": []
            }
        },
        "test_unique_values": {
            "name": "test_unique_values",
            "location": 55,
            "return": [],
            "arguments": {
                "train_reader": []
            }
        }
    },
    "tf3-master/test/test_feature_detection.py": {
        "df": {
            "name": "df",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "fs": {
            "name": "fs",
            "location": 29,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "test_populate_features": {
            "name": "test_populate_features",
            "location": 33,
            "return": [],
            "arguments": {
                "df": [],
                "fs": []
            }
        },
        "test_group_by": {
            "name": "test_group_by",
            "location": 55,
            "return": [],
            "arguments": {
                "fs": []
            }
        },
        "test_select_target": {
            "name": "test_select_target",
            "location": 61,
            "return": [],
            "arguments": {
                "fs": []
            }
        },
        "test_defaults": {
            "name": "test_defaults",
            "location": 69,
            "return": [],
            "arguments": {
                "fs": []
            }
        }
    },
    "tf3-master/test/test_feature_util.py": {
        "test_already_order_reorder_request": {
            "name": "test_already_order_reorder_request",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_disorder_reorder_request": {
            "name": "test_disorder_reorder_request",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_remove_target": {
            "name": "test_remove_target",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_remove_target_out_of_range": {
            "name": "test_remove_target_out_of_range",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "test_get_target_labels_if_categorical": {
            "name": "test_get_target_labels_if_categorical",
            "location": 70,
            "return": [],
            "arguments": {
                "target": [],
                "target_type": [],
                "fs": [],
                "expect": []
            }
        },
        "test_write_features": {
            "name": "test_write_features",
            "location": 75,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_login.py": {
        "create_app": {
            "name": "create_app",
            "location": 29,
            "return": [],
            "arguments": {
                "debug": []
            }
        },
        "user": {
            "name": "user",
            "location": 39,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_model_builder.py": {
        "model_builder": {
            "name": "model_builder",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "output": {
            "name": "output",
            "location": 17,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "test_all_subclasses": {
            "name": "test_all_subclasses",
            "location": 54,
            "return": [],
            "arguments": {
                "model_builder": []
            }
        },
        "none": {
            "name": "none",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "positional": {
            "name": "positional",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "all": {
            "name": "all",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "args": {
            "name": "args",
            "location": 91,
            "return": [],
            "arguments": {
                "all": []
            }
        },
        "test_check_args": {
            "name": "test_check_args",
            "location": 99,
            "return": [],
            "arguments": {
                "model_builder": [],
                "positional": [],
                "args": []
            }
        },
        "test_less_positional": {
            "name": "test_less_positional",
            "location": 103,
            "return": [],
            "arguments": {
                "model_builder": [],
                "positional": [],
                "args": []
            }
        },
        "test_too_many_arguments": {
            "name": "test_too_many_arguments",
            "location": 108,
            "return": [],
            "arguments": {
                "model_builder": [],
                "positional": [],
                "args": []
            }
        },
        "test_create_from_model": {
            "name": "test_create_from_model",
            "location": 113,
            "return": [],
            "arguments": {
                "model_builder": [],
                "args": []
            }
        },
        "test_positional_args_removed": {
            "name": "test_positional_args_removed",
            "location": 117,
            "return": [],
            "arguments": {
                "model_builder": [],
                "positional": [],
                "args": []
            }
        },
        "test_create_from_model_not_all_args": {
            "name": "test_create_from_model_not_all_args",
            "location": 126,
            "return": [],
            "arguments": {
                "model_builder": [],
                "args": []
            }
        }
    },
    "tf3-master/test/test_param_util.py": {
        "test_get_number_inputs": {
            "name": "test_get_number_inputs",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_get_number_outputs": {
            "name": "test_get_number_outputs",
            "location": 39,
            "return": [],
            "arguments": {
                "target": [],
                "expect": []
            }
        },
        "test_get_number_samples": {
            "name": "test_get_number_samples",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_get_hidden_layers": {
            "name": "test_get_hidden_layers",
            "location": 53,
            "return": [],
            "arguments": {
                "INPUT_DIM": [],
                "OUTUPUT_DIM": [],
                "num_samples": [],
                "expect": []
            }
        },
        "form": {
            "name": "form",
            "location": 60,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_preprocessing.py": {
        "test_insert_data": {
            "name": "test_insert_data",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_split_train_test": {
            "name": "test_split_train_test",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_run_utils.py": {
        "test_get_html_types": {
            "name": "test_get_html_types",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_get_dictionaries": {
            "name": "test_get_dictionaries",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_get_eva_results": {
            "name": "test_get_eva_results",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_session.py": {
        "create_app": {
            "name": "create_app",
            "location": 8,
            "return": [],
            "arguments": {
                "debug": []
            }
        },
        "user": {
            "name": "user",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "session": {
            "name": "session",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_add_user": {
            "name": "test_add_user",
            "location": 24,
            "return": [],
            "arguments": {
                "user": []
            }
        }
    },
    "tf3-master/test/test_sys_ops.py": {
        "test_mkdir_recurstive": {
            "name": "test_mkdir_recurstive",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_delete_recursive": {
            "name": "test_delete_recursive",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_copyfile": {
            "name": "test_copyfile",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_not_existing_copyfile": {
            "name": "test_not_existing_copyfile",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_find_free_port": {
            "name": "test_find_free_port",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_abs_path_of": {
            "name": "test_abs_path_of",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_thread_handler.py": {
        "logAssert": {
            "name": "logAssert",
            "location": 20,
            "return": [],
            "arguments": {
                "test": [],
                "msg": []
            }
        },
        "test_log": {
            "name": "test_log",
            "location": 25,
            "return": [],
            "arguments": {
                "log_info": []
            }
        },
        "test_add_and_get_port": {
            "name": "test_add_and_get_port",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "test_pause_threads": {
            "name": "test_pause_threads",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "test_run_thread": {
            "name": "test_run_thread",
            "location": 70,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/test/test_upload_util.py": {
        "form": {
            "name": "form",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_generate_dataset_name": {
            "name": "test_generate_dataset_name",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "tf3-master/utils/config_ops.py": {
        "generate_config_name": {
            "name": "generate_config_name",
            "location": 7,
            "return": [],
            "arguments": {
                "app_root": [],
                "username": [],
                "dataset_name": []
            }
        },
        "create_config": {
            "name": "create_config",
            "location": 19,
            "return": [],
            "arguments": {
                "username": [],
                "APP_ROOT": [],
                "dataset": [],
                "config_name": []
            }
        },
        "update_config_dir": {
            "name": "update_config_dir",
            "location": 26,
            "return": [],
            "arguments": {
                "config_writer": [],
                "target": []
            }
        },
        "define_new_config_file": {
            "name": "define_new_config_file",
            "location": 32,
            "return": [],
            "arguments": {
                "dataset_name": [],
                "APP_ROOT": [],
                "username": [],
                "config_writer": []
            }
        },
        "get_configs_files": {
            "name": "get_configs_files",
            "location": 43,
            "return": [],
            "arguments": {
                "app_root": [],
                "username": []
            }
        },
        "new_config": {
            "name": "new_config",
            "location": 71,
            "return": [],
            "arguments": {
                "train_form_file": [],
                "test_form_file": [],
                "APP_ROOT": [],
                "username": [],
                "sess": []
            }
        }
    },
    "tf3-master/utils/db_ops.py": {
        "get_db_user": {
            "name": "get_db_user",
            "location": 7,
            "return": [],
            "arguments": {
                "username": []
            }
        },
        "get_user_by_username": {
            "name": "get_user_by_username",
            "location": 11,
            "return": [],
            "arguments": {
                "username": []
            }
        },
        "create_user_path": {
            "name": "create_user_path",
            "location": 15,
            "return": [],
            "arguments": {
                "username": []
            }
        },
        "checklogin": {
            "name": "checklogin",
            "location": 20,
            "return": [],
            "arguments": {
                "username": [],
                "password": [],
                "remember": [],
                "login_user": [],
                "session": [],
                "sess": []
            }
        }
    },
    "tf3-master/utils/feature_util.py": {
        "reorder_request": {
            "name": "reorder_request",
            "location": 1,
            "return": [],
            "arguments": {
                "features": [],
                "categories": [],
                "defaults": [],
                "list_features": []
            }
        },
        "remove_target": {
            "name": "remove_target",
            "location": 12,
            "return": [],
            "arguments": {
                "features": [],
                "target": []
            }
        },
        "get_target_labels": {
            "name": "get_target_labels",
            "location": 20,
            "return": [],
            "arguments": {
                "target": [],
                "target_type": [],
                "fs": []
            }
        },
        "write_features": {
            "name": "write_features",
            "location": 29,
            "return": [],
            "arguments": {
                "old_categories": [],
                "data": [],
                "writer": [],
                "config_file": []
            }
        },
        "get_new_features": {
            "name": "get_new_features",
            "location": 37,
            "return": [],
            "arguments": {
                "form": [],
                "feat_defaults": [],
                "target": [],
                "fs_list": []
            }
        }
    },
    "tf3-master/utils/param_utils.py": {
        "define_param_form": {
            "name": "define_param_form",
            "location": 6,
            "return": [],
            "arguments": {
                "target_type": []
            }
        },
        "get_number_inputs": {
            "name": "get_number_inputs",
            "location": 13,
            "return": [],
            "arguments": {
                "categories": []
            }
        },
        "get_number_outputs": {
            "name": "get_number_outputs",
            "location": 17,
            "return": [],
            "arguments": {
                "target": [],
                "data": []
            }
        },
        "get_number_samples": {
            "name": "get_number_samples",
            "location": 22,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "get_hidden_layers": {
            "name": "get_hidden_layers",
            "location": 26,
            "return": [],
            "arguments": {
                "INPUT_DIM": [],
                "OUTUPUT_DIM": [],
                "num_samples": [],
                "alpha": []
            }
        },
        "get_defaults_param_form": {
            "name": "get_defaults_param_form",
            "location": 31,
            "return": [],
            "arguments": {
                "form": [],
                "CONFIG_FILE": [],
                "data": [],
                "target": [],
                "train_file": []
            }
        },
        "set_form": {
            "name": "set_form",
            "location": 39,
            "return": [],
            "arguments": {
                "form": [],
                "CONFIG_FILE": [],
                "hidden_layers": []
            }
        }
    },
    "tf3-master/utils/preprocessing.py": {
        "split_train_test": {
            "name": "split_train_test",
            "location": 8,
            "return": [],
            "arguments": {
                "percent": [],
                "dataset_file": [],
                "target": [],
                "dataframe": []
            }
        },
        "insert_data": {
            "name": "insert_data",
            "location": 26,
            "return": [],
            "arguments": {
                "df": [],
                "categories": [],
                "unique_values": [],
                "default_list": [],
                "frequent_values2frequency": [],
                "SAMPLE_DATA_SIZE": []
            }
        }
    },
    "tf3-master/utils/run_utils.py": {
        "get_html_types": {
            "name": "get_html_types",
            "location": 6,
            "return": [],
            "arguments": {
                "dict_types": []
            }
        },
        "get_dictionaries": {
            "name": "get_dictionaries",
            "location": 13,
            "return": [],
            "arguments": {
                "features": [],
                "categories": [],
                "fs": [],
                "target": []
            }
        },
        "get_eval_results": {
            "name": "get_eval_results",
            "location": 28,
            "return": [],
            "arguments": {
                "directory": [],
                "config_writer": [],
                "CONFIG_FILE": []
            }
        }
    },
    "tf3-master/utils/sys_ops.py": {
        "mkdir_recursive": {
            "name": "mkdir_recursive",
            "location": 9,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "delete_recursive": {
            "name": "delete_recursive",
            "location": 19,
            "return": [],
            "arguments": {
                "paths": [],
                "export_dir": []
            }
        },
        "copyfile": {
            "name": "copyfile",
            "location": 25,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        },
        "abs_path_of": {
            "name": "abs_path_of",
            "location": 31,
            "return": [],
            "arguments": {
                "rel_path": []
            }
        },
        "find_free_port": {
            "name": "find_free_port",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "save_filename": {
            "name": "save_filename",
            "location": 41,
            "return": [],
            "arguments": {
                "target": [],
                "dataset_form_field": [],
                "dataset_type": [],
                "dataset_name": [],
                "sess": []
            }
        },
        "change_checkpoints": {
            "name": "change_checkpoints",
            "location": 52,
            "return": [],
            "arguments": {
                "config": [],
                "resume_from": []
            }
        },
        "delete_configs": {
            "name": "delete_configs",
            "location": 66,
            "return": [],
            "arguments": {
                "config": [],
                "dataset": [],
                "username": []
            }
        }
    },
    "tf3-master/utils/upload_util.py": {
        "create_form": {
            "name": "create_form",
            "location": 8,
            "return": [],
            "arguments": {
                "user_configs": [],
                "user_dataset": []
            }
        },
        "existing_data": {
            "name": "existing_data",
            "location": 17,
            "return": [],
            "arguments": {
                "form": [],
                "user_configs": [],
                "username": [],
                "sess": [],
                "APP_ROOT": []
            }
        },
        "generate_dataset_name": {
            "name": "generate_dataset_name",
            "location": 44,
            "return": [],
            "arguments": {
                "app_root": [],
                "username": [],
                "dataset_name": []
            }
        }
    }
}
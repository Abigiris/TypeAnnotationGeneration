{
    "utils-master/runner.py": {
        "error_safe": {
            "name": "error_safe",
            "location": 14,
            "return": [
                "F"
            ],
            "arguments": {
                "f": [
                    "F"
                ]
            }
        },
        "error_safe.inner": {
            "name": "inner",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "DateResource.raw_data": {
            "name": "raw_data",
            "location": 29,
            "return": [
                "T"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateResource.wrap": {
            "name": "wrap",
            "location": 33,
            "return": [
                "'DateResourceT'"
            ],
            "arguments": {
                "cls": [
                    "typing.Type['DateResourceT']"
                ],
                "generator": [
                    "typing.Callable[(['Task'], T)]"
                ]
            }
        },
        "File.as_file": {
            "name": "as_file",
            "location": 46,
            "return": [
                "'File'"
            ],
            "arguments": {
                "cls": [],
                "text": [
                    "str"
                ]
            }
        },
        "File.save_as": {
            "name": "save_as",
            "location": 49,
            "return": [
                "'File'"
            ],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "IterableResource.wrap_iter": {
            "name": "wrap_iter",
            "location": 58,
            "return": [
                "typing.Callable[([typing.Callable[(['Task'], typing.Iterator[T])]], DateResourceT)]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type[DateResourceT]"
                ],
                "typ": [
                    "typing.Type[DateResource[T]]"
                ]
            }
        },
        "IterableResource.__iter__": {
            "name": "__iter__",
            "location": 68,
            "return": [
                "typing.Iterator[ResourceT]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IterableResource.foreach": {
            "name": "foreach",
            "location": 71,
            "return": [
                "typing.Iterator[ResourceT]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "typing.List[typing.Union[(str, Resource)]]"
                ]
            }
        },
        "Task.check": {
            "name": "check",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.start": {
            "name": "start",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.stdout": {
            "name": "stdout",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.stderr": {
            "name": "stderr",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.return_code": {
            "name": "return_code",
            "location": 98,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IterableResource.wrap_iter.inner": {
            "name": "inner",
            "location": 63,
            "return": [
                "DateResourceT"
            ],
            "arguments": {
                "generator": [
                    "typing.Callable[(['Task'], typing.Iterator[T])]"
                ]
            }
        }
    },
    "utils-master/tests/test_runner.py": {
        "RunnerTest.test_base": {
            "name": "test_base",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.test_main": {
            "name": "test_main",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.InitTask.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.InitTask.out_file": {
            "name": "out_file",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.EndTask.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "File"
                ]
            }
        },
        "RunnerTest.EndTask.out_code": {
            "name": "out_code",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.Mapper1.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunnerTest.Mapper1.num1": {
            "name": "num1",
            "location": 39,
            "return": [
                "typing.Iterator[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "utils-master/tests/__init__.py": {}
}
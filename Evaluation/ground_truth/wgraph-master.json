{
    "wgraph-master/setup.py": {},
    "wgraph-master/wgraph/closest.py": {
        "distance_to_closest": {
            "name": "distance_to_closest",
            "location": 11,
            "return": [
                "int"
            ],
            "arguments": {
                "graph": [
                    "Graph"
                ],
                "word": [
                    "Word"
                ],
                "langs": [
                    "Tuple[(str, ...)]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wgraph-master/wgraph/distance.py": {
        "distance": {
            "name": "distance",
            "location": 20,
            "return": [
                "int"
            ],
            "arguments": {
                "graph": [
                    "Graph"
                ],
                "word1": [
                    "Word"
                ],
                "word2": [
                    "Word"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wgraph-master/wgraph/easiest.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wgraph-master/wgraph/graph.py": {
        "iter_lines": {
            "name": "iter_lines",
            "location": 45,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "serialize_ref": {
            "name": "serialize_ref",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "ref": [
                    "Ref"
                ]
            }
        },
        "deserialize_ref": {
            "name": "deserialize_ref",
            "location": 62,
            "return": [
                "Optional[Ref]"
            ],
            "arguments": {
                "ref": [
                    "str"
                ]
            }
        },
        "split_references": {
            "name": "split_references",
            "location": 70,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "references": [
                    "str"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 77,
            "return": [
                "Graph"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "dump": {
            "name": "dump",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "references": [
                    "Iterable[Tuple[(str, Set[Ref])]]"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "dfs": {
            "name": "dfs",
            "location": 99,
            "return": [
                "Iterator[Tuple[(Optional[Ref], int, Ref)]]"
            ],
            "arguments": {
                "graph": [
                    "Graph"
                ],
                "word": [
                    "Word"
                ],
                "max_depth": [
                    "int"
                ]
            }
        },
        "search": {
            "name": "search",
            "location": 136,
            "return": [
                "List[Ref]"
            ],
            "arguments": {
                "graph": [
                    "Graph"
                ],
                "start_word": [
                    "Word"
                ],
                "stop_condition": [
                    "Callable[([Ref], bool)]"
                ],
                "max_depth": [
                    "int"
                ]
            }
        },
        "verbose_language": {
            "name": "verbose_language",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "origin": [
                    "Optional[str]"
                ]
            }
        },
        "verbose": {
            "name": "verbose",
            "location": 182,
            "return": [
                "str"
            ],
            "arguments": {
                "ref": [
                    "Ref"
                ]
            }
        },
        "apply_styles": {
            "name": "apply_styles",
            "location": 188,
            "return": [],
            "arguments": {
                "name": [],
                "graph": []
            }
        },
        "add_node": {
            "name": "add_node",
            "location": 221,
            "return": [],
            "arguments": {
                "graph": [],
                "parent": [],
                "ref": [],
                "default_parent": []
            }
        },
        "create_graph": {
            "name": "create_graph",
            "location": 238,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "draw_graph": {
            "name": "draw_graph",
            "location": 245,
            "return": [],
            "arguments": {
                "root": [],
                "elements": [],
                "target": [],
                "graph": []
            }
        },
        "load.shallow_split_reference": {
            "name": "shallow_split_reference",
            "location": 81,
            "return": [
                "Tuple[(Word, SerializedRefs)]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "wgraph-master/wgraph/parse.py": {
        "iter_lines": {
            "name": "iter_lines",
            "location": 47,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "iter_pages": {
            "name": "iter_pages",
            "location": 60,
            "return": [
                "Iterator[Tuple[(Title, Section, Line)]]"
            ],
            "arguments": {
                "lines": [
                    "Iterable[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wgraph-master/wgraph/summary.py": {
        "is_invalid": {
            "name": "is_invalid",
            "location": 32,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "main": {
            "name": "main",
            "location": 46,
            "return": [],
            "arguments": {}
        }
    },
    "wgraph-master/wgraph/__init__.py": {},
    "wgraph-master/wgraph/dicts/de.py": {},
    "wgraph-master/wgraph/dicts/en.py": {},
    "wgraph-master/wgraph/dicts/fr.py": {},
    "wgraph-master/wgraph/dicts/__init__.py": {},
    "wgraph-master/wgraph/parsing/de.py": {},
    "wgraph-master/wgraph/parsing/en.py": {
        "parse_inherited": {
            "name": "parse_inherited",
            "location": 12,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_derived": {
            "name": "parse_derived",
            "location": 20,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_borrowed": {
            "name": "parse_borrowed",
            "location": 30,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_affix": {
            "name": "parse_affix",
            "location": 38,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_prefix": {
            "name": "parse_prefix",
            "location": 49,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_suffix": {
            "name": "parse_suffix",
            "location": 66,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_confix": {
            "name": "parse_confix",
            "location": 84,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_compound": {
            "name": "parse_compound",
            "location": 107,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_blend": {
            "name": "parse_blend",
            "location": 140,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_clipping": {
            "name": "parse_clipping",
            "location": 154,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_short_for": {
            "name": "parse_short_for",
            "location": 164,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_back_form": {
            "name": "parse_back_form",
            "location": 172,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_calque": {
            "name": "parse_calque",
            "location": 182,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_semantic_loan": {
            "name": "parse_semantic_loan",
            "location": 190,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_mention": {
            "name": "parse_mention",
            "location": 198,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_cognate": {
            "name": "parse_cognate",
            "location": 206,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_non_cognate": {
            "name": "parse_non_cognate",
            "location": 214,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "parts": [
                    "List[str]"
                ]
            }
        },
        "parse_reference": {
            "name": "parse_reference",
            "location": 251,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "ref": [
                    "str"
                ]
            }
        },
        "iter_references": {
            "name": "iter_references",
            "location": 260,
            "return": [
                "Iterator[Tuple[(Title, Ref)]]"
            ],
            "arguments": {
                "lines": [
                    "Iterable[Tuple[(Title, Section, Line)]]"
                ]
            }
        }
    },
    "wgraph-master/wgraph/parsing/fr.py": {
        "parse_etyl": {
            "name": "parse_etyl",
            "location": 12,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "template": [
                    "str"
                ]
            }
        },
        "parse_lien": {
            "name": "parse_lien",
            "location": 28,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "template": [
                    "str"
                ]
            }
        },
        "parse_recons": {
            "name": "parse_recons",
            "location": 36,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "template": [
                    "str"
                ]
            }
        },
        "parse_template": {
            "name": "parse_template",
            "location": 46,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "template": [
                    "str"
                ]
            }
        },
        "parse_link": {
            "name": "parse_link",
            "location": 58,
            "return": [
                "Iterator[Ref]"
            ],
            "arguments": {
                "link": [
                    "str"
                ]
            }
        },
        "iter_references": {
            "name": "iter_references",
            "location": 65,
            "return": [
                "Iterator[Tuple[(Title, Ref)]]"
            ],
            "arguments": {
                "lines": [
                    "Iterable[Tuple[(Title, Section, Line)]]"
                ]
            }
        }
    },
    "wgraph-master/wgraph/parsing/types.py": {},
    "wgraph-master/wgraph/parsing/utils.py": {
        "extract_named_argument": {
            "name": "extract_named_argument",
            "location": 11,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "kw": [
                    "str"
                ]
            }
        },
        "iter_links": {
            "name": "iter_links",
            "location": 24,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "iter_templates": {
            "name": "iter_templates",
            "location": 53,
            "return": [
                "Iterator[str]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "wgraph-master/wgraph/parsing/__init__.py": {}
}
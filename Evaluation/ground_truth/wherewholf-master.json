{
    "wherewholf-master/laboratory.py": {
        "Experiment.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "werewolf_count": [
                    "int"
                ],
                "villager_count": [
                    "int"
                ]
            }
        },
        "Experiment.__make_player": {
            "name": "__make_player",
            "location": 24,
            "return": [
                "Player"
            ],
            "arguments": {
                "self": [],
                "role": [
                    "GameCharacter"
                ],
                "count": [
                    "int"
                ]
            }
        },
        "Experiment.run": {
            "name": "run",
            "location": 27,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "game_iterations": []
            }
        }
    },
    "wherewholf-master/src/errors.py": {},
    "wherewholf-master/src/game_characters.py": {
        "Player.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "role": [
                    "'GameCharacter'"
                ],
                "aggression": [
                    "float"
                ],
                "suggestibility": [
                    "float"
                ],
                "persuasiveness": [
                    "float"
                ],
                "hive_affinity": [
                    "float"
                ],
                "nomination_recency": [
                    "int"
                ]
            }
        },
        "Player.__player_attr_value_check": {
            "name": "__player_attr_value_check",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "v": [
                    "float"
                ]
            }
        },
        "Player.__configure_logger": {
            "name": "__configure_logger",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_cfg": [
                    "Dict"
                ]
            }
        },
        "Player.__is_persecuted": {
            "name": "__is_persecuted",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence['SanitizedPlayer']"
                ]
            }
        },
        "Player.night_action": {
            "name": "night_action",
            "location": 79,
            "return": [
                "Optional['SanitizedPlayer']"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence['SanitizedPlayer']"
                ]
            }
        },
        "Player._pick_not_me": {
            "name": "_pick_not_me",
            "location": 82,
            "return": [
                "Optional['SanitizedPlayer']"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence['SanitizedPlayer']"
                ],
                "chooser": [
                    "Callable[([Sequence['SanitizedPlayer']], Optional['SanitizedPlayer'])]"
                ],
                "player_compare": [
                    "Callable[(['Player', 'SanitizedPlayer'], bool)]"
                ]
            }
        },
        "Player.__pick_from_hive_suggestion": {
            "name": "__pick_from_hive_suggestion",
            "location": 101,
            "return": [
                "Optional['SanitizedPlayer']"
            ],
            "arguments": {
                "self": [],
                "nominations": [
                    "Sequence['Nomination']"
                ]
            }
        },
        "Player.__make_attr_decision": {
            "name": "__make_attr_decision",
            "location": 125,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "float"
                ],
                "decider": [
                    "Callable[([], float)]"
                ]
            }
        },
        "Player.daytime_behavior": {
            "name": "daytime_behavior",
            "location": 138,
            "return": [
                "Optional['SanitizedPlayer']"
            ],
            "arguments": {
                "self": [],
                "nominations": [
                    "Sequence['Nomination']"
                ]
            }
        },
        "Player.ask_lynch_nomination": {
            "name": "ask_lynch_nomination",
            "location": 178,
            "return": [
                "Optional['Nomination']"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence['SanitizedPlayer']"
                ]
            }
        },
        "Player.accept_night_suggestion": {
            "name": "accept_night_suggestion",
            "location": 194,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "voted_for": [
                    "'SanitizedPlayer'"
                ],
                "suggested_by": [
                    "'SanitizedPlayer'"
                ]
            }
        },
        "Player.__eq__": {
            "name": "__eq__",
            "location": 206,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Player.__hash__": {
            "name": "__hash__",
            "location": 212,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.__str__": {
            "name": "__str__",
            "location": 215,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.__repr__": {
            "name": "__repr__",
            "location": 218,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanitizedPlayer.__init__": {
            "name": "__init__",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "player": [
                    "Player"
                ]
            }
        },
        "SanitizedPlayer.sanitize": {
            "name": "sanitize",
            "location": 238,
            "return": [
                "'SanitizedPlayer'"
            ],
            "arguments": {
                "player": [
                    "Player"
                ]
            }
        },
        "SanitizedPlayer.recover_player_identity": {
            "name": "recover_player_identity",
            "location": 250,
            "return": [
                "Player"
            ],
            "arguments": {
                "splayer": [
                    "'SanitizedPlayer'"
                ]
            }
        },
        "SanitizedPlayer.is_the_same_player": {
            "name": "is_the_same_player",
            "location": 262,
            "return": [
                "bool"
            ],
            "arguments": {
                "player": [
                    "Player"
                ],
                "splayer": [
                    "'SanitizedPlayer'"
                ]
            }
        },
        "SanitizedPlayer.__eq__": {
            "name": "__eq__",
            "location": 268,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "SanitizedPlayer.__hash__": {
            "name": "__hash__",
            "location": 271,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanitizedPlayer.__str__": {
            "name": "__str__",
            "location": 274,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanitizedPlayer.__repr__": {
            "name": "__repr__",
            "location": 277,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Nomination.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "nomination": [
                    "SanitizedPlayer"
                ],
                "nominated_by": [
                    "SanitizedPlayer"
                ]
            }
        },
        "Nomination.__eq__": {
            "name": "__eq__",
            "location": 287,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Any"
                ]
            }
        },
        "Nomination.__hash__": {
            "name": "__hash__",
            "location": 293,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameCharacter.prerequisites": {
            "name": "prerequisites",
            "location": 313,
            "return": [
                "Set[Type['GameCharacter']]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameCharacter.night_action": {
            "name": "night_action",
            "location": 317,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "GameCharacter.daytime_behavior": {
            "name": "daytime_behavior",
            "location": 321,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "GameCharacter.__str__": {
            "name": "__str__",
            "location": 325,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Werewolf.prerequisites": {
            "name": "prerequisites",
            "location": 331,
            "return": [
                "Set[Type[GameCharacter]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Werewolf.night_action": {
            "name": "night_action",
            "location": 334,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Werewolf.daytime_behavior": {
            "name": "daytime_behavior",
            "location": 337,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Werewolf.__str__": {
            "name": "__str__",
            "location": 340,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Villager.prerequisites": {
            "name": "prerequisites",
            "location": 346,
            "return": [
                "Set[Type[GameCharacter]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Villager.night_action": {
            "name": "night_action",
            "location": 349,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Villager.daytime_behavior": {
            "name": "daytime_behavior",
            "location": 352,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Villager.__str__": {
            "name": "__str__",
            "location": 357,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hive.__init__": {
            "name": "__init__",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "pubsub_broker": [
                    "Optional[PubSubBroker]"
                ]
            }
        },
        "Hive.can_members_know_each_other": {
            "name": "can_members_know_each_other",
            "location": 377,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hive.__configure_logger": {
            "name": "__configure_logger",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_cfg": [
                    "Dict"
                ]
            }
        },
        "Hive._publish_event": {
            "name": "_publish_event",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_type": [
                    "str"
                ],
                "body": [
                    "str"
                ]
            }
        },
        "Hive._get_most_aggressive": {
            "name": "_get_most_aggressive",
            "location": 397,
            "return": [
                "Tuple[(Player, ...)]"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Hive.add_player": {
            "name": "add_player",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "Player"
                ]
            }
        },
        "Hive.add_players": {
            "name": "add_players",
            "location": 410,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Set[Player]"
                ]
            }
        },
        "Hive.notify_player_death": {
            "name": "notify_player_death",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "Player"
                ]
            }
        },
        "Hive.alive_players": {
            "name": "alive_players",
            "location": 420,
            "return": [
                "Iterable[Player]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hive.consensus": {
            "name": "consensus",
            "location": 424,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hive.has_reached_consensus": {
            "name": "has_reached_consensus",
            "location": 431,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "votes": [
                    "int"
                ]
            }
        },
        "Hive.night_consensus": {
            "name": "night_consensus",
            "location": 438,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Hive.day_consensus": {
            "name": "day_consensus",
            "location": 446,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "WholeGameHive.night_consensus": {
            "name": "night_consensus",
            "location": 463,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "WholeGameHive.__gather_votes": {
            "name": "__gather_votes",
            "location": 466,
            "return": [
                "List[Tuple[(Player, int)]]"
            ],
            "arguments": {
                "self": [],
                "nominations": [
                    "Sequence[Nomination]"
                ]
            }
        },
        "WholeGameHive.__gather_nominations": {
            "name": "__gather_nominations",
            "location": 485,
            "return": [
                "Sequence[Nomination]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "WholeGameHive.day_consensus": {
            "name": "day_consensus",
            "location": 495,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "WerewolfHive.__init__": {
            "name": "__init__",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WerewolfHive.can_members_know_each_other": {
            "name": "can_members_know_each_other",
            "location": 535,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WerewolfHive.night_consensus": {
            "name": "night_consensus",
            "location": 538,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "WerewolfHive.day_consensus": {
            "name": "day_consensus",
            "location": 559,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "VillagerHive.night_consensus": {
            "name": "night_consensus",
            "location": 565,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "VillagerHive.day_consensus": {
            "name": "day_consensus",
            "location": 568,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "Player.__pick_from_hive_suggestion.is_hivemate": {
            "name": "is_hivemate",
            "location": 104,
            "return": [
                "bool"
            ],
            "arguments": {
                "sp": [
                    "SanitizedPlayer"
                ]
            }
        }
    },
    "wherewholf-master/src/main.py": {},
    "wherewholf-master/src/moderator.py": {
        "Moderator.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "players": [
                    "Set[Player]"
                ],
                "log_discriminant": [
                    "Optional[str]"
                ]
            }
        },
        "Moderator.__configure_logger": {
            "name": "__configure_logger",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_cfg": [
                    "Dict"
                ]
            }
        },
        "Moderator.__kill_player": {
            "name": "__kill_player",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "Player"
                ]
            }
        },
        "Moderator.__game_on": {
            "name": "__game_on",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Moderator.__batch_sanitize": {
            "name": "__batch_sanitize",
            "location": 57,
            "return": [
                "Sequence[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Iterable[Player]"
                ]
            }
        },
        "Moderator.__filter_members": {
            "name": "__filter_members",
            "location": 60,
            "return": [
                "Set[Player]"
            ],
            "arguments": {
                "self": [],
                "char_class": [
                    "Type[GameCharacter]"
                ]
            }
        },
        "Moderator.__is_standoff": {
            "name": "__is_standoff",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Moderator.play": {
            "name": "play",
            "location": 70,
            "return": [
                "'EndGameState'"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wherewholf-master/src/pubsub.py": {
        "Subscriber.recv_message": {
            "name": "recv_message",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_topic": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "StatSubscriber.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatSubscriber.recv_message": {
            "name": "recv_message",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_topic": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "PubSubBroker.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PubSubBroker.broadcast_message": {
            "name": "broadcast_message",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_topic": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        }
    },
    "wherewholf-master/src/utils.py": {
        "ValueIndex.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueIndex.__getitem__": {
            "name": "__getitem__",
            "location": 38,
            "return": [
                "Set[Any]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "int"
                ]
            }
        },
        "ValueIndex.update_index": {
            "name": "update_index",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ],
                "reference": [
                    "Any"
                ]
            }
        },
        "ValueIndex.remove_reference": {
            "name": "remove_reference",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int"
                ],
                "reference": [
                    "Any"
                ]
            }
        },
        "ValueIndex.list_indices": {
            "name": "list_indices",
            "location": 53,
            "return": [
                "Sequence[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.__str__": {
            "name": "__str__",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.__getitem__": {
            "name": "__getitem__",
            "location": 91,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Any"
                ]
            }
        },
        "ValueTieCounter.__setitem__": {
            "name": "__setitem__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Any"
                ],
                "value": [
                    "Any"
                ]
            }
        },
        "ValueTieCounter.__bool__": {
            "name": "__bool__",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.elements": {
            "name": "elements",
            "location": 101,
            "return": [
                "Iterator[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.subtract": {
            "name": "subtract",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "counts": [
                    "Union[(Dict, Iterable)]"
                ]
            }
        },
        "ValueTieCounter.__index_counts": {
            "name": "__index_counts",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.__update_single": {
            "name": "__update_single",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Any"
                ],
                "value": [
                    "Any"
                ]
            }
        },
        "ValueTieCounter.update": {
            "name": "update",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounter.most_common": {
            "name": "most_common",
            "location": 162,
            "return": [
                "List[Tuple[(Any, int)]]"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "Optional[int]"
                ]
            }
        },
        "MarkovChain.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MarkovChain.add_event": {
            "name": "add_event",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cause": [
                    "str"
                ],
                "effect": [
                    "str"
                ]
            }
        },
        "MarkovChain.running_probability": {
            "name": "running_probability",
            "location": 213,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "cause": [
                    "str"
                ],
                "effect": [
                    "str"
                ]
            }
        },
        "NominationTracker.__init__": {
            "name": "__init__",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "recency": [
                    "int"
                ]
            }
        },
        "NominationTracker.notemination": {
            "name": "notemination",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nominated_by": [
                    "'SanitizedPlayer'"
                ],
                "turn": [
                    "int"
                ]
            }
        },
        "NominationTracker.get_recent_turns_nominated": {
            "name": "get_recent_turns_nominated",
            "location": 238,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "'SanitizedPlayer'"
                ]
            }
        }
    },
    "wherewholf-master/src/__init__.py": {},
    "wherewholf-master/src/tests/game_characters_tests.py": {
        "make_singleton_hive": {
            "name": "make_singleton_hive",
            "location": 45,
            "return": [
                "Hive"
            ],
            "arguments": {
                "hive": [
                    "Hive"
                ]
            }
        },
        "_pick_nominator": {
            "name": "_pick_nominator",
            "location": 253,
            "return": [],
            "arguments": {
                "nomination": [
                    "SanitizedPlayer"
                ],
                "players": [
                    "Sequence[Player]"
                ]
            }
        },
        "DummyHive.night_consensus": {
            "name": "night_consensus",
            "location": 18,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "DummyHive.day_consensus": {
            "name": "day_consensus",
            "location": 22,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[SanitizedPlayer]"
                ]
            }
        },
        "InspectablePlayer.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "role": [
                    "GameCharacter"
                ],
                "aggression": [
                    "float"
                ],
                "suggestibility": [
                    "float"
                ],
                "persuasiveness": [
                    "float"
                ]
            }
        },
        "InspectablePlayer.daytime_behavior": {
            "name": "daytime_behavior",
            "location": 40,
            "return": [
                "Optional[SanitizedPlayer]"
            ],
            "arguments": {
                "self": [],
                "players": [
                    "Sequence[Nomination]"
                ]
            }
        },
        "PlayerTest.setUp": {
            "name": "setUp",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_pick_not_me_solo": {
            "name": "test_pick_not_me_solo",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_pick_not_me": {
            "name": "test_pick_not_me",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_daytime_behavior": {
            "name": "test_daytime_behavior",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_hive_affinity": {
            "name": "test_hive_affinity",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_aggression": {
            "name": "test_aggression",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerTest.test_aggression_deterrent": {
            "name": "test_aggression_deterrent",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HiveTest.setUp": {
            "name": "setUp",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HiveTest.test_get_most_aggressive": {
            "name": "test_get_most_aggressive",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HiveTest.test_dead_is_not_aggressive": {
            "name": "test_dead_is_not_aggressive",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HiveTest.test_singleton_consensus": {
            "name": "test_singleton_consensus",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WholeGameHiveTest.setUp": {
            "name": "setUp",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WholeGameHiveTest.test_player_death": {
            "name": "test_player_death",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wherewholf-master/src/tests/moderator_tests.py": {
        "ModeratorTest.test_endgame": {
            "name": "test_endgame",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wherewholf-master/src/tests/utils_tests.py": {
        "_take_ndex": {
            "name": "_take_ndex",
            "location": 9,
            "return": [
                "Sequence"
            ],
            "arguments": {
                "it": [
                    "Iterable"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "ValueTieCounterTest.test_falsey": {
            "name": "test_falsey",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_truthy": {
            "name": "test_truthy",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_elements": {
            "name": "test_elements",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_update": {
            "name": "test_update",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_update_builds_index_properly": {
            "name": "test_update_builds_index_properly",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_most_common": {
            "name": "test_most_common",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValueTieCounterTest.test_most_common_game_usage": {
            "name": "test_most_common_game_usage",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MarkovChainTests.test_add_event_and_probs": {
            "name": "test_add_event_and_probs",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NominationTrackerTests.test_nomination_tracker": {
            "name": "test_nomination_tracker",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wherewholf-master/src/tests/__init__.py": {}
}
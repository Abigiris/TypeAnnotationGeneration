{
    "wpt.fyi-main/results-processor/config.py": {
        "_is_prod": {
            "name": "_is_prod",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "raw_results_bucket": {
            "name": "raw_results_bucket",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "results_bucket": {
            "name": "results_bucket",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "project_baseurl": {
            "name": "project_baseurl",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "wpt.fyi-main/results-processor/gsutil.py": {
        "_call": {
            "name": "_call",
            "location": 13,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "split_gcs_path": {
            "name": "split_gcs_path",
            "location": 18,
            "return": [],
            "arguments": {
                "gcs_path": []
            }
        },
        "gs_to_public_url": {
            "name": "gs_to_public_url",
            "location": 25,
            "return": [],
            "arguments": {
                "gs_url": []
            }
        },
        "copy": {
            "name": "copy",
            "location": 31,
            "return": [],
            "arguments": {
                "path1": [],
                "path2": [],
                "gzipped": [],
                "quiet": []
            }
        }
    },
    "wpt.fyi-main/results-processor/main.py": {
        "_atomic_write": {
            "name": "_atomic_write",
            "location": 35,
            "return": [],
            "arguments": {
                "path": [],
                "content": []
            }
        },
        "_serial_task": {
            "name": "_serial_task",
            "location": 44,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "_internal_only": {
            "name": "_internal_only",
            "location": 61,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "liveness_check": {
            "name": "liveness_check",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "readiness_check": {
            "name": "readiness_check",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "task_handler": {
            "name": "task_handler",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "_serial_task.decorated_func": {
            "name": "decorated_func",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "_internal_only.decorated_func": {
            "name": "decorated_func",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "wpt.fyi-main/results-processor/processor.py": {
        "_upload_screenshots": {
            "name": "_upload_screenshots",
            "location": 296,
            "return": [],
            "arguments": {
                "processor": []
            }
        },
        "process_report": {
            "name": "process_report",
            "location": 305,
            "return": [],
            "arguments": {
                "task_id": [],
                "params": []
            }
        },
        "Processor.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.__enter__": {
            "name": "__enter__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.__exit__": {
            "name": "__exit__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.datastore": {
            "name": "datastore",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.auth": {
            "name": "auth",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.raw_results_gs_url": {
            "name": "raw_results_gs_url",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.raw_results_url": {
            "name": "raw_results_url",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.results_gs_url": {
            "name": "results_gs_url",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.results_url": {
            "name": "results_url",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.check_existing_run": {
            "name": "check_existing_run",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.known_extension": {
            "name": "known_extension",
            "location": 107,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "Processor._download_gcs": {
            "name": "_download_gcs",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "gcs": []
            }
        },
        "Processor._download_http": {
            "name": "_download_http",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Processor._download_single": {
            "name": "_download_single",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "uri": []
            }
        },
        "Processor._download_azure": {
            "name": "_download_azure",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "azure_url": []
            }
        },
        "Processor.download": {
            "name": "download",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "results": [],
                "screenshots": [],
                "azure_url": []
            }
        },
        "Processor.load_report": {
            "name": "load_report",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.upload_raw": {
            "name": "upload_raw",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.upload_split": {
            "name": "upload_split",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.create_run": {
            "name": "create_run",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "run_id": [],
                "labels": [],
                "uploader": [],
                "callback_url": []
            }
        },
        "Processor.update_status": {
            "name": "update_status",
            "location": 246,
            "return": [],
            "arguments": {
                "self": [],
                "run_id": [],
                "stage": [],
                "error": [],
                "callback_url": []
            }
        },
        "Processor.run_hooks": {
            "name": "run_hooks",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "tasks": []
            }
        }
    },
    "wpt.fyi-main/results-processor/processor_test.py": {
        "ProcessorTest.fake_download": {
            "name": "fake_download",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "expected_path": [],
                "response": []
            }
        },
        "ProcessorTest.test_known_extension": {
            "name": "test_known_extension",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTest.test_download": {
            "name": "test_download",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTest.test_download_azure": {
            "name": "test_download_azure",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTest.test_download_azure_errors": {
            "name": "test_download_azure_errors",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockProcessorTest.test_params_plumbing_success": {
            "name": "test_params_plumbing_success",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "MockProcessor": []
            }
        },
        "MockProcessorTest.test_params_plumbing_error": {
            "name": "test_params_plumbing_error",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "MockProcessor": []
            }
        },
        "MockProcessorTest.test_params_plumbing_empty": {
            "name": "test_params_plumbing_empty",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "MockProcessor": []
            }
        },
        "MockProcessorTest.test_params_plumbing_duplicate": {
            "name": "test_params_plumbing_duplicate",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "MockProcessor": []
            }
        },
        "ProcessorDownloadServerTest.setUp": {
            "name": "setUp",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorDownloadServerTest.tearDown": {
            "name": "tearDown",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorDownloadServerTest.test_download_single": {
            "name": "test_download_single",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorDownloadServerTest.test_download": {
            "name": "test_download",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorDownloadServerTest.test_download_content_disposition": {
            "name": "test_download_content_disposition",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorAPIServerTest.setUp": {
            "name": "setUp",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorAPIServerTest.tearDown": {
            "name": "tearDown",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorAPIServerTest.test_update_status": {
            "name": "test_update_status",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorAPIServerTest.test_create_run": {
            "name": "test_create_run",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTest.fake_download._download": {
            "name": "_download",
            "location": 19,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "wpt.fyi-main/results-processor/test_server.py": {
        "screenshots_upload": {
            "name": "screenshots_upload",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "slow": {
            "name": "slow",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "download_attachment": {
            "name": "download_attachment",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "download_json": {
            "name": "download_json",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "echo_status": {
            "name": "echo_status",
            "location": 50,
            "return": [],
            "arguments": {
                "run_id": []
            }
        },
        "echo_create": {
            "name": "echo_create",
            "location": 62,
            "return": [],
            "arguments": {}
        }
    },
    "wpt.fyi-main/results-processor/test_util.py": {
        "start_server": {
            "name": "start_server",
            "location": 12,
            "return": [],
            "arguments": {
                "capture": []
            }
        }
    },
    "wpt.fyi-main/results-processor/wptreport.py": {
        "_channel_to_labels": {
            "name": "_channel_to_labels",
            "location": 507,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "browser": [
                    "str"
                ],
                "channel": [
                    "str"
                ]
            }
        },
        "prepare_labels": {
            "name": "prepare_labels",
            "location": 540,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "report": [
                    "WPTReport"
                ],
                "labels_str": [
                    "str"
                ],
                "uploader": [
                    "str"
                ]
            }
        },
        "normalize_product": {
            "name": "normalize_product",
            "location": 584,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "report": [
                    "WPTReport"
                ]
            }
        },
        "create_test_run": {
            "name": "create_test_run",
            "location": 610,
            "return": [],
            "arguments": {
                "report": [],
                "run_id": [],
                "labels_str": [],
                "uploader": [],
                "auth": [],
                "results_url": [],
                "raw_results_url": [],
                "callback_url": []
            }
        },
        "main": {
            "name": "main",
            "location": 653,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "WPTReportError.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "path": [
                    "Optional[Union[(str, List[str])]]"
                ]
            }
        },
        "WPTReportError.__str__": {
            "name": "__str__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidJSONError.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MissingMetadataError.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "InsufficientDataError.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConflictingDataError.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "BufferedHashsum.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hash_ctor": [
                    "Callable"
                ],
                "block_size": [
                    "int"
                ]
            }
        },
        "BufferedHashsum.hash_file": {
            "name": "hash_file",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileobj": [
                    "IO[bytes]"
                ]
            }
        },
        "BufferedHashsum.hashsum": {
            "name": "hashsum",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.__init__": {
            "name": "__init__",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport._add_chunk": {
            "name": "_add_chunk",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chunk": [
                    "RawWPTReport"
                ]
            }
        },
        "WPTReport.load_file": {
            "name": "load_file",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "WPTReport.load_json": {
            "name": "load_json",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileobj": [
                    "IO[bytes]"
                ]
            }
        },
        "WPTReport.load_gzip_json": {
            "name": "load_gzip_json",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileobj": [
                    "IO[bytes]"
                ]
            }
        },
        "WPTReport.update_metadata": {
            "name": "update_metadata",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "revision": [
                    "str"
                ],
                "browser_name": [
                    "str"
                ],
                "browser_version": [
                    "str"
                ],
                "os_name": [
                    "str"
                ],
                "os_version": [
                    "str"
                ]
            }
        },
        "WPTReport.write_json": {
            "name": "write_json",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "fileobj": [
                    "IO[bytes]"
                ],
                "payload": [
                    "Any"
                ]
            }
        },
        "WPTReport.write_gzip_json": {
            "name": "write_gzip_json",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "payload": [
                    "Any"
                ]
            }
        },
        "WPTReport.results": {
            "name": "results",
            "location": 294,
            "return": [
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.run_info": {
            "name": "run_info",
            "location": 299,
            "return": [
                "RunInfo"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.hashsum": {
            "name": "hashsum",
            "location": 303,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.summarize": {
            "name": "summarize",
            "location": 307,
            "return": [
                "Dict[(str, List[int])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.each_result": {
            "name": "each_result",
            "location": 340,
            "return": [
                "Iterator[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.write_summary": {
            "name": "write_summary",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filepath": [
                    "str"
                ]
            }
        },
        "WPTReport.write_result_directory": {
            "name": "write_result_directory",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "str"
                ]
            }
        },
        "WPTReport.product_id": {
            "name": "product_id",
            "location": 370,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "separator": [
                    "str"
                ],
                "sanitize": [
                    "bool"
                ]
            }
        },
        "WPTReport.populate_upload_directory": {
            "name": "populate_upload_directory",
            "location": 396,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "output_dir": [
                    "Optional[str]"
                ]
            }
        },
        "WPTReport.sha_product_path": {
            "name": "sha_product_path",
            "location": 422,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.sha_summary_path": {
            "name": "sha_summary_path",
            "location": 432,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.test_run_metadata": {
            "name": "test_run_metadata",
            "location": 437,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.normalize_version": {
            "name": "normalize_version",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.finalize": {
            "name": "finalize",
            "location": 481,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReport.serialize_gzip": {
            "name": "serialize_gzip",
            "location": 498,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "WPTReport._add_chunk.update_property": {
            "name": "update_property",
            "location": 147,
            "return": [
                "bool"
            ],
            "arguments": {
                "key": [
                    "str"
                ],
                "source": [
                    "Dict"
                ],
                "target": [
                    "Dict"
                ],
                "conflict_func": [
                    "Optional[Callable]"
                ]
            }
        },
        "WPTReport.test_run_metadata.microseconds_to_iso": {
            "name": "microseconds_to_iso",
            "location": 462,
            "return": [
                "str"
            ],
            "arguments": {
                "ms_since_epoch": [
                    "float"
                ]
            }
        }
    },
    "wpt.fyi-main/results-processor/wptreport_test.py": {
        "WPTReportTest.setUp": {
            "name": "setUp",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.tearDown": {
            "name": "tearDown",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_write_json": {
            "name": "test_write_json",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_write_gzip_json": {
            "name": "test_write_gzip_json",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json": {
            "name": "test_load_json",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_empty_report": {
            "name": "test_load_json_empty_report",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_invalid_json": {
            "name": "test_load_json_invalid_json",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_multiple_chunks": {
            "name": "test_load_json_multiple_chunks",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_multiple_chunks_metadata": {
            "name": "test_load_json_multiple_chunks_metadata",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_multiple_chunks_conflicting_data": {
            "name": "test_load_json_multiple_chunks_conflicting_data",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_json_multiple_chunks_ignored_conflicting_data": {
            "name": "test_load_json_multiple_chunks_ignored_conflicting_data",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_load_gzip_json": {
            "name": "test_load_gzip_json",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_summarize": {
            "name": "test_summarize",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_summarize_zero_results": {
            "name": "test_summarize_zero_results",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_summarize_duplicate_results": {
            "name": "test_summarize_duplicate_results",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_summarize_whitespaces": {
            "name": "test_summarize_whitespaces",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_each_result": {
            "name": "test_each_result",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_populate_upload_directory": {
            "name": "test_populate_upload_directory",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_update_metadata": {
            "name": "test_update_metadata",
            "location": 406,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_test_run_metadata": {
            "name": "test_test_run_metadata",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_test_run_metadata_missing_required_fields": {
            "name": "test_test_run_metadata_missing_required_fields",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_test_run_metadata_optional_fields": {
            "name": "test_test_run_metadata_optional_fields",
            "location": 452,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_product_id": {
            "name": "test_product_id",
            "location": 476,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_product_id_sanitize": {
            "name": "test_product_id_sanitize",
            "location": 492,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_sha_product_path": {
            "name": "test_sha_product_path",
            "location": 505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_sha_summary_path": {
            "name": "test_sha_summary_path",
            "location": 520,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_normalize_version": {
            "name": "test_normalize_version",
            "location": 535,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTReportTest.test_normalize_version_missing_version": {
            "name": "test_normalize_version_missing_version",
            "location": 543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_prepare_labels_from_empty_str": {
            "name": "test_prepare_labels_from_empty_str",
            "location": 552,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_prepare_labels_from_custom_labels": {
            "name": "test_prepare_labels_from_custom_labels",
            "location": 560,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_prepare_labels_from_experimental_label": {
            "name": "test_prepare_labels_from_experimental_label",
            "location": 568,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_prepare_labels_from_stable_label": {
            "name": "test_prepare_labels_from_stable_label",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_prepare_labels_from_browser_channel": {
            "name": "test_prepare_labels_from_browser_channel",
            "location": 584,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_normalize_product_edge_webdriver": {
            "name": "test_normalize_product_edge_webdriver",
            "location": 634,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_normalize_product_edgechromium": {
            "name": "test_normalize_product_edgechromium",
            "location": 650,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_normalize_product_webkitgtk_minibrowser": {
            "name": "test_normalize_product_webkitgtk_minibrowser",
            "location": 666,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HelpersTest.test_normalize_product_noop": {
            "name": "test_normalize_product_noop",
            "location": 682,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wpt.fyi-main/results-processor/wptscreenshot.py": {
        "_initialize": {
            "name": "_initialize",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "api": [
                    "str"
                ],
                "auth": [
                    "Tuple[(str, str)]"
                ],
                "run_info": [
                    "wptreport.RunInfo"
                ]
            }
        },
        "_upload": {
            "name": "_upload",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "images": [
                    "List[str]"
                ]
            }
        },
        "WPTScreenshot.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ],
                "run_info": [
                    "Optional[wptreport.RunInfo]"
                ],
                "api": [
                    "Optional[str]"
                ],
                "auth": [
                    "Optional[Tuple[(str, str)]]"
                ],
                "processes": [
                    "Optional[int]"
                ]
            }
        },
        "WPTScreenshot.__enter__": {
            "name": "__enter__",
            "location": 106,
            "return": [
                "T@@WPTScreenshot@@"
            ],
            "arguments": {
                "self": [
                    "T@@WPTScreenshot@@"
                ]
            }
        },
        "WPTScreenshot.__exit__": {
            "name": "__exit__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshot.process": {
            "name": "process",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wpt.fyi-main/results-processor/wptscreenshot_test.py": {
        "WPTScreenshotTest.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.tearDown": {
            "name": "tearDown",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest._batch_sizes": {
            "name": "_batch_sizes",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "err_text": []
            }
        },
        "WPTScreenshotTest.test_basic": {
            "name": "test_basic",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.test_gzip": {
            "name": "test_gzip",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.test_invalid_encoding": {
            "name": "test_invalid_encoding",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.test_invalid_gzip": {
            "name": "test_invalid_gzip",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.test_multiple_batches": {
            "name": "test_multiple_batches",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WPTScreenshotTest.test_errors": {
            "name": "test_errors",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wpt.fyi-main/util/add_production_run.py": {
        "main": {
            "name": "main",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "parse_flags": {
            "name": "parse_flags",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "ProdRunCopier.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "logger": []
            }
        },
        "ProdRunCopier.copy_prod_run": {
            "name": "copy_prod_run",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "sha": []
            }
        }
    },
    "wpt.fyi-main/util/generate_testrun_index.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "list_directory": {
            "name": "list_directory",
            "location": 68,
            "return": [],
            "arguments": {
                "bucket": [],
                "prefix": []
            }
        }
    },
    "wpt.fyi-main/util/pull_run_into_static.py": {
        "main": {
            "name": "main",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "parse_flags": {
            "name": "parse_flags",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "write_file": {
            "name": "write_file",
            "location": 152,
            "return": [],
            "arguments": {
                "jsonData": [],
                "filename": [],
                "dryRun": []
            }
        }
    },
    "wpt.fyi-main/util/__init__.py": {}
}
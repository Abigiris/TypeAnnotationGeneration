{
    "wrangle_pypes-master/setup.py": {},
    "wrangle_pypes-master/wrangle_pypes/pipeline.py": {
        "Pipeline.create": {
            "name": "create",
            "location": 35,
            "return": [
                "M"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Pipeline.create_multiple": {
            "name": "create_multiple",
            "location": 43,
            "return": [
                "Iterator[M]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "data": [
                    "Sequence[Any]"
                ]
            }
        },
        "Pipeline.get_or_create": {
            "name": "get_or_create",
            "location": 53,
            "return": [
                "Tuple[(M, bool)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Pipeline.get_or_create_multiple": {
            "name": "get_or_create_multiple",
            "location": 85,
            "return": [
                "Iterator[Tuple[(M, bool)]]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "data": [
                    "Sequence[Any]"
                ]
            }
        },
        "Pipeline.build_kwargs": {
            "name": "build_kwargs",
            "location": 106,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Pipeline.build_kwarg": {
            "name": "build_kwarg",
            "location": 119,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Type[M]"
                ],
                "kwarg": [
                    "str"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Transformation.apply": {
            "name": "apply",
            "location": 139,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Transformation.__call__": {
            "name": "__call__",
            "location": 142,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Transformation.__or__": {
            "name": "__or__",
            "location": 150,
            "return": [
                "Chain"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Transformation"
                ]
            }
        },
        "Chain.apply": {
            "name": "apply",
            "location": 158,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Chain.__or__": {
            "name": "__or__",
            "location": 164,
            "return": [
                "Chain"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Transformation"
                ]
            }
        }
    },
    "wrangle_pypes-master/wrangle_pypes/transformations.py": {
        "Id.apply": {
            "name": "apply",
            "location": 52,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "V"
                ]
            }
        },
        "Constant.apply": {
            "name": "apply",
            "location": 60,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Cast.apply": {
            "name": "apply",
            "location": 68,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "K"
                ]
            }
        },
        "Custom.apply": {
            "name": "apply",
            "location": 76,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "K"
                ]
            }
        },
        "Default.apply": {
            "name": "apply",
            "location": 85,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "K"
                ]
            }
        },
        "Get.apply": {
            "name": "apply",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": []
            }
        },
        "Attr.apply": {
            "name": "apply",
            "location": 115,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "Filter.apply": {
            "name": "apply",
            "location": 123,
            "return": [
                "List[V]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Iterable[V]"
                ]
            }
        },
        "Map.apply": {
            "name": "apply",
            "location": 131,
            "return": [
                "List[K]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Iterable[V]"
                ]
            }
        },
        "ForEach.apply": {
            "name": "apply",
            "location": 139,
            "return": [
                "List"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Sequence[Any]"
                ]
            }
        },
        "Flatten.apply": {
            "name": "apply",
            "location": 150,
            "return": [
                "List"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Sequence[Sequence]"
                ]
            }
        },
        "Gather.apply": {
            "name": "apply",
            "location": 163,
            "return": [
                "Dict[(K, V)]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Mapping[(K, V)]"
                ]
            }
        },
        "FoldInKeys.apply": {
            "name": "apply",
            "location": 173,
            "return": [
                "List[Mapping]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Mapping[(Any, Mapping)]"
                ]
            }
        },
        "FoldInValue.apply": {
            "name": "apply",
            "location": 184,
            "return": [
                "Mapping"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Mapping[(Any, Any)]"
                ]
            }
        },
        "GetKeys.apply": {
            "name": "apply",
            "location": 196,
            "return": [
                "List[K]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Mapping[(K, V)]"
                ]
            }
        },
        "GetValues.apply": {
            "name": "apply",
            "location": 204,
            "return": [
                "List[V]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Mapping[(K, V)]"
                ]
            }
        },
        "If.apply": {
            "name": "apply",
            "location": 216,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "V"
                ]
            }
        },
        "Create.apply": {
            "name": "apply",
            "location": 229,
            "return": [
                "V"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "CreateMultiple.apply": {
            "name": "apply",
            "location": 237,
            "return": [
                "List[V]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Sequence[Any]"
                ]
            }
        },
        "GetOrCreate.apply": {
            "name": "apply",
            "location": 248,
            "return": [
                "Tuple[(V, bool)]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Any"
                ]
            }
        },
        "GetOrCreateMultiple.apply": {
            "name": "apply",
            "location": 259,
            "return": [
                "List[Tuple[(V, bool)]]"
            ],
            "arguments": {
                "self": [],
                "pipeline": [
                    "Pipeline"
                ],
                "data": [
                    "Sequence[Any]"
                ]
            }
        }
    },
    "wrangle_pypes-master/wrangle_pypes/__init__.py": {},
    "wrangle_pypes-master/wrangle_pypes/async/pipeline.py": {
        "AsyncTransformation.__or__": {
            "name": "__or__",
            "location": 158,
            "return": [
                "AsyncChain"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "AsyncTransformation"
                ]
            }
        },
        "AsyncChain.__or__": {
            "name": "__or__",
            "location": 172,
            "return": [
                "AsyncChain"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "AsyncTransformation"
                ]
            }
        }
    },
    "wrangle_pypes-master/wrangle_pypes/async/transformations.py": {},
    "wrangle_pypes-master/wrangle_pypes/async/__init__.py": {}
}
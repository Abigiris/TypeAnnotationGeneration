{
    "3d-ascii-game-master/log.py": {
        "log": {
            "name": "log",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/main.py": {
        "assert_terminal_size": {
            "name": "assert_terminal_size",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/mesh.py": {
        "Point3D.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ],
                "z": [
                    "float",
                    "int"
                ]
            }
        },
        "Point3D.from_tuple": {
            "name": "from_tuple",
            "location": 15,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "str"
                ],
                "tuple": [
                    "int",
                    "str"
                ]
            }
        },
        "Point3D.translate": {
            "name": "translate",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "str"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ],
                "z": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "Point3D.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point3D.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float"
                ]
            }
        },
        "Face.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": []
            }
        },
        "Face.covering_tuples": {
            "name": "covering_tuples",
            "location": 41,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "dict[int, typing.Any]"
                ]
            }
        },
        "Face.__repr__": {
            "name": "__repr__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Face.__eq__": {
            "name": "__eq__",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "tuple[typing.Union[float,float]]",
                    "typing.Type"
                ]
            }
        },
        "Mesh.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": [
                    "int",
                    "float"
                ],
                "faces": [
                    "int",
                    "float"
                ]
            }
        },
        "Mesh.translate": {
            "name": "translate",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ],
                "z": [
                    "int",
                    "float"
                ]
            }
        },
        "Mesh.rotate_xz": {
            "name": "rotate_xz",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theta": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Mesh.__repr__": {
            "name": "__repr__",
            "location": 78,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mesh.__eq__": {
            "name": "__eq__",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int"
                ]
            }
        }
    },
    "3d-ascii-game-master/mypy-test.py": {
        "greeting": {
            "name": "greeting",
            "location": 1,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        }
    },
    "3d-ascii-game-master/parser.py": {
        "mesh_from_obj_file": {
            "name": "mesh_from_obj_file",
            "location": 7,
            "return": [],
            "arguments": {
                "file": [
                    "list[str]"
                ]
            }
        },
        "_parse_vertex": {
            "name": "_parse_vertex",
            "location": 34,
            "return": [],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "_to_int": {
            "name": "_to_int",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "float_string": [
                    "str"
                ]
            }
        },
        "_parse_face": {
            "name": "_parse_face",
            "location": 57,
            "return": [],
            "arguments": {
                "vertices": [],
                "line": [
                    "str"
                ]
            }
        }
    },
    "3d-ascii-game-master/profile.py": {},
    "3d-ascii-game-master/python_c_interface.py": {},
    "3d-ascii-game-master/render.py": {
        "render": {
            "name": "render",
            "location": 46,
            "return": [
                "dict[tuple[], ]"
            ],
            "arguments": {
                "mesh": [
                    "int",
                    "float",
                    "str"
                ],
                "terminal_width": [
                    "int",
                    "float"
                ],
                "terminal_height": [
                    "int"
                ]
            }
        },
        "EyeSpacePoint.from_point_3d": {
            "name": "from_point_3d",
            "location": 12,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "str"
                ],
                "point": [
                    "str",
                    "int"
                ],
                "theta": [
                    "int",
                    "str"
                ]
            }
        },
        "EyeSpacePoint.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EyeSpacePolygon.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": []
            }
        },
        "EyeSpacePolygon.from_face": {
            "name": "from_face",
            "location": 42,
            "return": [],
            "arguments": {
                "klass": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "face": [
                    "int",
                    "float",
                    "list[list[T]]",
                    "list[str]",
                    "typing.Callable[int, None]",
                    "dict[, ]"
                ],
                "theta": [
                    "int",
                    "float",
                    "list[list[T]]",
                    "list[str]",
                    "typing.Callable[int, None]",
                    "dict[, ]"
                ]
            }
        }
    },
    "3d-ascii-game-master/terminal.py": {
        "with_cool_down": {
            "name": "with_cool_down",
            "location": 19,
            "return": [],
            "arguments": {
                "interval": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "draw_frame": {
            "name": "draw_frame",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [
                    "int",
                    "float"
                ],
                "width": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ],
                "height": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ],
                "mesh": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "do_tick": {
            "name": "do_tick",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [],
                "width": [
                    "int",
                    "float"
                ],
                "height": [
                    "int",
                    "float"
                ],
                "mesh": []
            }
        },
        "start_session": {
            "name": "start_session",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [],
                "width": [
                    "float",
                    "int"
                ],
                "height": [
                    "float",
                    "int"
                ],
                "mesh": [
                    "float",
                    "int"
                ]
            }
        },
        "CoolDownDecorator.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "list[list[T]]"
                ],
                "interval": [
                    "int",
                    "float",
                    "list[list[T]]"
                ]
            }
        },
        "CoolDownDecorator.__call__": {
            "name": "__call__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "with_cool_down.apply_decorator": {
            "name": "apply_decorator",
            "location": 20,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "3d-ascii-game-master/test_mesh.py": {
        "TestFace.test_raises_exception_if_fewer_than_three_vertices": {
            "name": "test_raises_exception_if_fewer_than_three_vertices",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_parser.py": {
        "TestParseMeshFromObjFile.test_with_only_vertices": {
            "name": "test_with_only_vertices",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParseMeshFromObjFile.test_square": {
            "name": "test_square",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParseMeshFromObjFile.test_weights_are_ignored": {
            "name": "test_weights_are_ignored",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_render.py": {
        "TestRender.test_render_small_square": {
            "name": "test_render_small_square",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_utils.py": {
        "mesh_from_small_tuples": {
            "name": "mesh_from_small_tuples",
            "location": 4,
            "return": [],
            "arguments": {
                "vertex_tuples": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "render_to_string": {
            "name": "render_to_string",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "mesh_to_render": [
                    "int",
                    "str",
                    "float"
                ],
                "terminal_width": [
                    "int",
                    "str",
                    "float",
                    "typing.Sequence[]"
                ],
                "terminal_height": [
                    "int",
                    "str",
                    "float",
                    "typing.Sequence[]"
                ]
            }
        }
    },
    "3d-ascii-game-master/__init__.py": {}
}
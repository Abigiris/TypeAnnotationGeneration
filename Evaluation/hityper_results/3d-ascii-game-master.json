{
    "3d-ascii-game-master/log.py": {
        "log": {
            "name": "log",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/main.py": {
        "assert_terminal_size": {
            "name": "assert_terminal_size",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/mesh.py": {
        "Point3D.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ],
                "z": [
                    "float",
                    "int"
                ]
            }
        },
        "Point3D.from_tuple": {
            "name": "from_tuple",
            "location": 15,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "str"
                ],
                "tuple": [
                    "int",
                    "str"
                ]
            }
        },
        "Point3D.translate": {
            "name": "translate",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "str"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ],
                "z": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "Point3D.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point3D.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float"
                ]
            }
        },
        "Face.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": []
            }
        },
        "Face.covering_tuples": {
            "name": "covering_tuples",
            "location": 41,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "dict[int, typing.Any]"
                ]
            }
        },
        "Face.__repr__": {
            "name": "__repr__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Face.__eq__": {
            "name": "__eq__",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "tuple[typing.Union[float,float]]",
                    "typing.Type"
                ]
            }
        },
        "Mesh.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": [
                    "int",
                    "float"
                ],
                "faces": [
                    "int",
                    "float"
                ]
            }
        },
        "Mesh.translate": {
            "name": "translate",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ],
                "z": [
                    "int",
                    "float"
                ]
            }
        },
        "Mesh.rotate_xz": {
            "name": "rotate_xz",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theta": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Mesh.__repr__": {
            "name": "__repr__",
            "location": 78,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mesh.__eq__": {
            "name": "__eq__",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int"
                ]
            }
        }
    },
    "3d-ascii-game-master/mypy-test.py": {
        "greeting": {
            "name": "greeting",
            "location": 1,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        }
    },
    "3d-ascii-game-master/parser.py": {
        "mesh_from_obj_file": {
            "name": "mesh_from_obj_file",
            "location": 7,
            "return": [],
            "arguments": {
                "file": [
                    "list[str]"
                ]
            }
        },
        "_parse_vertex": {
            "name": "_parse_vertex",
            "location": 34,
            "return": [],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "_to_int": {
            "name": "_to_int",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "float_string": [
                    "str"
                ]
            }
        },
        "_parse_face": {
            "name": "_parse_face",
            "location": 57,
            "return": [],
            "arguments": {
                "vertices": [],
                "line": [
                    "str"
                ]
            }
        }
    },
    "3d-ascii-game-master/profile.py": {},
    "3d-ascii-game-master/python_c_interface.py": {},
    "3d-ascii-game-master/render.py": {
        "render": {
            "name": "render",
            "location": 46,
            "return": [
                "dict[tuple[], ]"
            ],
            "arguments": {
                "mesh": [
                    "int",
                    "float",
                    "str"
                ],
                "terminal_width": [
                    "int",
                    "float"
                ],
                "terminal_height": [
                    "int"
                ]
            }
        },
        "EyeSpacePoint.from_point_3d": {
            "name": "from_point_3d",
            "location": 12,
            "return": [],
            "arguments": {
                "klass": [
                    "int",
                    "str"
                ],
                "point": [
                    "str",
                    "int"
                ],
                "theta": [
                    "int",
                    "str"
                ]
            }
        },
        "EyeSpacePoint.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EyeSpacePolygon.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vertices": []
            }
        },
        "EyeSpacePolygon.from_face": {
            "name": "from_face",
            "location": 42,
            "return": [],
            "arguments": {
                "klass": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "face": [
                    "int",
                    "float",
                    "list[list[T]]",
                    "list[str]",
                    "typing.Callable[int, None]",
                    "dict[, ]"
                ],
                "theta": [
                    "int",
                    "float",
                    "list[list[T]]",
                    "list[str]",
                    "typing.Callable[int, None]",
                    "dict[, ]"
                ]
            }
        }
    },
    "3d-ascii-game-master/terminal.py": {
        "with_cool_down": {
            "name": "with_cool_down",
            "location": 19,
            "return": [],
            "arguments": {
                "interval": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "draw_frame": {
            "name": "draw_frame",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [
                    "int",
                    "float"
                ],
                "width": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ],
                "height": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ],
                "mesh": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "do_tick": {
            "name": "do_tick",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [],
                "width": [
                    "int",
                    "float"
                ],
                "height": [
                    "int",
                    "float"
                ],
                "mesh": []
            }
        },
        "start_session": {
            "name": "start_session",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "stdscreen": [],
                "width": [
                    "float",
                    "int"
                ],
                "height": [
                    "float",
                    "int"
                ],
                "mesh": [
                    "float",
                    "int"
                ]
            }
        },
        "CoolDownDecorator.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "list[list[T]]"
                ],
                "interval": [
                    "int",
                    "float",
                    "list[list[T]]"
                ]
            }
        },
        "CoolDownDecorator.__call__": {
            "name": "__call__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "with_cool_down.apply_decorator": {
            "name": "apply_decorator",
            "location": 20,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "3d-ascii-game-master/test_mesh.py": {
        "TestFace.test_raises_exception_if_fewer_than_three_vertices": {
            "name": "test_raises_exception_if_fewer_than_three_vertices",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_parser.py": {
        "TestParseMeshFromObjFile.test_with_only_vertices": {
            "name": "test_with_only_vertices",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParseMeshFromObjFile.test_square": {
            "name": "test_square",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParseMeshFromObjFile.test_weights_are_ignored": {
            "name": "test_weights_are_ignored",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_render.py": {
        "TestRender.test_render_small_square": {
            "name": "test_render_small_square",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/test_utils.py": {
        "mesh_from_small_tuples": {
            "name": "mesh_from_small_tuples",
            "location": 4,
            "return": [],
            "arguments": {
                "vertex_tuples": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "render_to_string": {
            "name": "render_to_string",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "mesh_to_render": [
                    "int",
                    "str",
                    "float"
                ],
                "terminal_width": [
                    "int",
                    "str",
                    "float",
                    "typing.Sequence[]"
                ],
                "terminal_height": [
                    "int",
                    "str",
                    "float",
                    "typing.Sequence[]"
                ]
            }
        }
    },
    "3d-ascii-game-master/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/__init__.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/__main__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/__pip-runner__.py": {
        "version_str": {
            "name": "version_str",
            "location": 15,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "PipImportRedirectingFinder.find_spec": {
            "name": "find_spec",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/build_env.py": {
        "get_runnable_pip": {
            "name": "get_runnable_pip",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "_get_system_sitepackages": {
            "name": "_get_system_sitepackages",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "_Prefix.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BuildEnvironment.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildEnvironment.__enter__": {
            "name": "__enter__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildEnvironment.__exit__": {
            "name": "__exit__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "BuildEnvironment.check_requirements": {
            "name": "check_requirements",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "reqs": []
            }
        },
        "BuildEnvironment.install_requirements": {
            "name": "install_requirements",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "requirements": [],
                "prefix_as_string": []
            }
        },
        "BuildEnvironment._install_requirements": {
            "name": "_install_requirements",
            "location": 225,
            "return": [],
            "arguments": {
                "pip_runnable": [],
                "finder": [],
                "requirements": [],
                "prefix": []
            }
        },
        "NoOpBuildEnvironment.__init__": {
            "name": "__init__",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoOpBuildEnvironment.__enter__": {
            "name": "__enter__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoOpBuildEnvironment.__exit__": {
            "name": "__exit__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "NoOpBuildEnvironment.cleanup": {
            "name": "cleanup",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoOpBuildEnvironment.install_requirements": {
            "name": "install_requirements",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "requirements": [],
                "prefix_as_string": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cache.py": {
        "_hash_dict": {
            "name": "_hash_dict",
            "location": 27,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "Cache.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "cache_dir": [],
                "format_control": [],
                "allowed_formats": []
            }
        },
        "Cache._get_cache_path_parts": {
            "name": "_get_cache_path_parts",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Cache._get_candidates": {
            "name": "_get_candidates",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "canonical_package_name": []
            }
        },
        "Cache.get_path_for_link": {
            "name": "get_path_for_link",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Cache.get": {
            "name": "get",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "package_name": [],
                "supported_tags": []
            }
        },
        "SimpleWheelCache.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "cache_dir": [],
                "format_control": []
            }
        },
        "SimpleWheelCache.get_path_for_link": {
            "name": "get_path_for_link",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "SimpleWheelCache.get": {
            "name": "get",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "package_name": [],
                "supported_tags": []
            }
        },
        "EphemWheelCache.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "format_control": []
            }
        },
        "CacheEntry.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "persistent": []
            }
        },
        "WheelCache.__init__": {
            "name": "__init__",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "cache_dir": [],
                "format_control": []
            }
        },
        "WheelCache.get_path_for_link": {
            "name": "get_path_for_link",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "WheelCache.get_ephem_path_for_link": {
            "name": "get_ephem_path_for_link",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "WheelCache.get": {
            "name": "get",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "package_name": [],
                "supported_tags": []
            }
        },
        "WheelCache.get_cache_entry": {
            "name": "get_cache_entry",
            "location": 250,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "package_name": [],
                "supported_tags": []
            }
        },
        "WheelCache.record_download_origin": {
            "name": "record_download_origin",
            "location": 279,
            "return": [],
            "arguments": {
                "cache_dir": [],
                "download_info": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/configuration.py": {
        "_normalize_name": {
            "name": "_normalize_name",
            "location": 50,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_disassemble_key": {
            "name": "_disassemble_key",
            "location": 58,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_configuration_files": {
            "name": "get_configuration_files",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "Configuration.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "isolated": [],
                "load_only": []
            }
        },
        "Configuration.load": {
            "name": "load",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.get_file_to_edit": {
            "name": "get_file_to_edit",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.items": {
            "name": "items",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.get_value": {
            "name": "get_value",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Configuration.set_value": {
            "name": "set_value",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Configuration.unset_value": {
            "name": "unset_value",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Configuration.save": {
            "name": "save",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._ensure_have_load_only": {
            "name": "_ensure_have_load_only",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._dictionary": {
            "name": "_dictionary",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._load_config_files": {
            "name": "_load_config_files",
            "location": 237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._load_file": {
            "name": "_load_file",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "variant": [],
                "fname": []
            }
        },
        "Configuration._construct_parser": {
            "name": "_construct_parser",
            "location": 270,
            "return": [],
            "arguments": {
                "self": [],
                "fname": []
            }
        },
        "Configuration._load_environment_vars": {
            "name": "_load_environment_vars",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._normalized_keys": {
            "name": "_normalized_keys",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "section": [],
                "items": []
            }
        },
        "Configuration.get_environ_vars": {
            "name": "get_environ_vars",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.iter_config_files": {
            "name": "iter_config_files",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.get_values_in_config": {
            "name": "get_values_in_config",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "variant": []
            }
        },
        "Configuration._get_parser_to_modify": {
            "name": "_get_parser_to_modify",
            "location": 354,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration._mark_as_modified": {
            "name": "_mark_as_modified",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "fname": [],
                "parser": []
            }
        },
        "Configuration.__repr__": {
            "name": "__repr__",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/exceptions.py": {
        "_is_kebab_case": {
            "name": "_is_kebab_case",
            "location": 29,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_prefix_with_indent": {
            "name": "_prefix_with_indent",
            "location": 33,
            "return": [],
            "arguments": {
                "s": [],
                "console": []
            }
        },
        "DiagnosticPipError.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiagnosticPipError.__repr__": {
            "name": "__repr__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiagnosticPipError.__rich_console__": {
            "name": "__rich_console__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "MissingPyProjectBuildRequires.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidPyProjectBuildRequires.__init__": {
            "name": "__init__",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoneMetadataError.__init__": {
            "name": "__init__",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "metadata_name": []
            }
        },
        "NoneMetadataError.__str__": {
            "name": "__str__",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserInstallationInvalid.__str__": {
            "name": "__str__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidSchemeCombination.__str__": {
            "name": "__str__",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NetworkConnectionError.__init__": {
            "name": "__init__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "error_msg": [],
                "response": [],
                "request": []
            }
        },
        "NetworkConnectionError.__str__": {
            "name": "__str__",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidWheel.__init__": {
            "name": "__init__",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "location": [],
                "name": []
            }
        },
        "InvalidWheel.__str__": {
            "name": "__str__",
            "location": 330,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataInconsistent.__init__": {
            "name": "__init__",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "ireq": [],
                "field": [],
                "f_val": [],
                "m_val": []
            }
        },
        "MetadataInconsistent.__str__": {
            "name": "__str__",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyInstallFailure.__init__": {
            "name": "__init__",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "package_details": []
            }
        },
        "InstallationSubprocessError.__init__": {
            "name": "__init__",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallationSubprocessError.__str__": {
            "name": "__str__",
            "location": 408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataGenerationFailed.__init__": {
            "name": "__init__",
            "location": 415,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataGenerationFailed.__str__": {
            "name": "__str__",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashErrors.__init__": {
            "name": "__init__",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashErrors.append": {
            "name": "append",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "error": []
            }
        },
        "HashErrors.__str__": {
            "name": "__str__",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashErrors.__bool__": {
            "name": "__bool__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashError.body": {
            "name": "body",
            "location": 475,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashError.__str__": {
            "name": "__str__",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashError._requirement_name": {
            "name": "_requirement_name",
            "location": 490,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashMissing.__init__": {
            "name": "__init__",
            "location": 536,
            "return": [],
            "arguments": {
                "self": [],
                "gotten_hash": []
            }
        },
        "HashMissing.body": {
            "name": "body",
            "location": 543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashMismatch.__init__": {
            "name": "__init__",
            "location": 593,
            "return": [],
            "arguments": {
                "self": [],
                "allowed": [],
                "gots": []
            }
        },
        "HashMismatch.body": {
            "name": "body",
            "location": 603,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashMismatch._hash_comparison": {
            "name": "_hash_comparison",
            "location": 606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationFileCouldNotBeLoaded.__init__": {
            "name": "__init__",
            "location": 643,
            "return": [],
            "arguments": {
                "self": [],
                "reason": [],
                "fname": [],
                "error": []
            }
        },
        "ConfigurationFileCouldNotBeLoaded.__str__": {
            "name": "__str__",
            "location": 654,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashMismatch._hash_comparison.hash_then_or": {
            "name": "hash_then_or",
            "location": 618,
            "return": [],
            "arguments": {
                "hash_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/main.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/pyproject.py": {
        "_is_list_of_str": {
            "name": "_is_list_of_str",
            "location": 16,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "make_pyproject_path": {
            "name": "make_pyproject_path",
            "location": 20,
            "return": [],
            "arguments": {
                "unpacked_source_directory": []
            }
        },
        "load_pyproject_toml": {
            "name": "load_pyproject_toml",
            "location": 29,
            "return": [],
            "arguments": {
                "use_pep517": [],
                "pyproject_toml": [],
                "setup_py": [],
                "req_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/self_outdated_check.py": {
        "_get_statefile_name": {
            "name": "_get_statefile_name",
            "location": 37,
            "return": [],
            "arguments": {
                "key": []
            }
        },
        "was_installed_by_pip": {
            "name": "was_installed_by_pip",
            "location": 146,
            "return": [],
            "arguments": {
                "pkg": []
            }
        },
        "_get_current_remote_pip_version": {
            "name": "_get_current_remote_pip_version",
            "location": 156,
            "return": [],
            "arguments": {
                "session": [],
                "options": []
            }
        },
        "_self_version_check_logic": {
            "name": "_self_version_check_logic",
            "location": 184,
            "return": [],
            "arguments": {}
        },
        "pip_self_version_check": {
            "name": "pip_self_version_check",
            "location": 215,
            "return": [],
            "arguments": {
                "session": [],
                "options": []
            }
        },
        "SelfCheckState.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "cache_dir": []
            }
        },
        "SelfCheckState.key": {
            "name": "key",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelfCheckState.get": {
            "name": "get",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "current_time": []
            }
        },
        "SelfCheckState.set": {
            "name": "set",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "pypi_version": [],
                "current_time": []
            }
        },
        "UpgradePrompt.__rich__": {
            "name": "__rich__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/wheel_builder.py": {
        "_contains_egg_info": {
            "name": "_contains_egg_info",
            "location": 42,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_should_build": {
            "name": "_should_build",
            "location": 50,
            "return": [],
            "arguments": {
                "req": [],
                "need_wheel": [],
                "check_bdist_wheel": []
            }
        },
        "should_build_for_wheel_command": {
            "name": "should_build_for_wheel_command",
            "location": 102,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "should_build_for_install_command": {
            "name": "should_build_for_install_command",
            "location": 108,
            "return": [],
            "arguments": {
                "req": [],
                "check_bdist_wheel_allowed": []
            }
        },
        "_should_cache": {
            "name": "_should_cache",
            "location": 117,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "_get_cache_dir": {
            "name": "_get_cache_dir",
            "location": 149,
            "return": [],
            "arguments": {
                "req": [],
                "wheel_cache": []
            }
        },
        "_verify_one": {
            "name": "_verify_one",
            "location": 165,
            "return": [],
            "arguments": {
                "req": [],
                "wheel_path": []
            }
        },
        "_build_one": {
            "name": "_build_one",
            "location": 195,
            "return": [],
            "arguments": {
                "req": [],
                "output_dir": [],
                "verify": [],
                "build_options": [],
                "global_options": [],
                "editable": []
            }
        },
        "_build_one_inside_env": {
            "name": "_build_one_inside_env",
            "location": 233,
            "return": [],
            "arguments": {
                "req": [],
                "output_dir": [],
                "build_options": [],
                "global_options": [],
                "editable": []
            }
        },
        "_clean_one_legacy": {
            "name": "_clean_one_legacy",
            "location": 304,
            "return": [],
            "arguments": {
                "req": [],
                "global_options": []
            }
        },
        "build": {
            "name": "build",
            "location": 321,
            "return": [],
            "arguments": {
                "requirements": [],
                "wheel_cache": [],
                "verify": [],
                "build_options": [],
                "global_options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/__init__.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/autocompletion.py": {
        "autocomplete": {
            "name": "autocomplete",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "get_path_completion_type": {
            "name": "get_path_completion_type",
            "location": 119,
            "return": [],
            "arguments": {
                "cwords": [],
                "cword": [],
                "opts": []
            }
        },
        "auto_complete_paths": {
            "name": "auto_complete_paths",
            "location": 143,
            "return": [],
            "arguments": {
                "current": [],
                "completion_type": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/base_command.py": {
        "Command.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "summary": [],
                "isolated": []
            }
        },
        "Command.add_options": {
            "name": "add_options",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.handle_pip_version_check": {
            "name": "handle_pip_version_check",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "Command.run": {
            "name": "run",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "Command.parse_args": {
            "name": "parse_args",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Command.main": {
            "name": "main",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Command._main": {
            "name": "_main",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Command._main.intercepts_unhandled_exc": {
            "name": "intercepts_unhandled_exc",
            "location": 154,
            "return": [],
            "arguments": {
                "run_func": []
            }
        },
        "Command._main.intercepts_unhandled_exc.exc_logging_wrapper": {
            "name": "exc_logging_wrapper",
            "location": 158,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/cmdoptions.py": {
        "raise_option_error": {
            "name": "raise_option_error",
            "location": 36,
            "return": [],
            "arguments": {
                "parser": [],
                "option": [],
                "msg": []
            }
        },
        "make_option_group": {
            "name": "make_option_group",
            "location": 50,
            "return": [],
            "arguments": {
                "group": [],
                "parser": []
            }
        },
        "check_dist_restriction": {
            "name": "check_dist_restriction",
            "location": 62,
            "return": [],
            "arguments": {
                "options": [],
                "check_target": []
            }
        },
        "_path_option_check": {
            "name": "_path_option_check",
            "location": 102,
            "return": [],
            "arguments": {
                "option": [],
                "opt": [],
                "value": []
            }
        },
        "_package_name_option_check": {
            "name": "_package_name_option_check",
            "location": 106,
            "return": [],
            "arguments": {
                "option": [],
                "opt": [],
                "value": []
            }
        },
        "exists_action": {
            "name": "exists_action",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "extra_index_url": {
            "name": "extra_index_url",
            "location": 333,
            "return": [],
            "arguments": {}
        },
        "find_links": {
            "name": "find_links",
            "location": 356,
            "return": [],
            "arguments": {}
        },
        "trusted_host": {
            "name": "trusted_host",
            "location": 372,
            "return": [],
            "arguments": {}
        },
        "constraints": {
            "name": "constraints",
            "location": 384,
            "return": [],
            "arguments": {}
        },
        "requirements": {
            "name": "requirements",
            "location": 397,
            "return": [],
            "arguments": {}
        },
        "editable": {
            "name": "editable",
            "location": 410,
            "return": [],
            "arguments": {}
        },
        "_handle_src": {
            "name": "_handle_src",
            "location": 425,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "_get_format_control": {
            "name": "_get_format_control",
            "location": 448,
            "return": [],
            "arguments": {
                "values": [],
                "option": []
            }
        },
        "_handle_no_binary": {
            "name": "_handle_no_binary",
            "location": 453,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "_handle_only_binary": {
            "name": "_handle_only_binary",
            "location": 464,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "no_binary": {
            "name": "no_binary",
            "location": 475,
            "return": [],
            "arguments": {}
        },
        "only_binary": {
            "name": "only_binary",
            "location": 493,
            "return": [],
            "arguments": {}
        },
        "_convert_python_version": {
            "name": "_convert_python_version",
            "location": 527,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_handle_python_version": {
            "name": "_handle_python_version",
            "location": 556,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "add_target_python_options": {
            "name": "add_target_python_options",
            "location": 628,
            "return": [],
            "arguments": {
                "cmd_opts": []
            }
        },
        "make_target_python": {
            "name": "make_target_python",
            "location": 635,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "prefer_binary": {
            "name": "prefer_binary",
            "location": 646,
            "return": [],
            "arguments": {}
        },
        "_handle_no_cache_dir": {
            "name": "_handle_no_cache_dir",
            "location": 667,
            "return": [],
            "arguments": {
                "option": [],
                "opt": [],
                "value": [],
                "parser": []
            }
        },
        "_handle_no_use_pep517": {
            "name": "_handle_no_use_pep517",
            "location": 744,
            "return": [],
            "arguments": {
                "option": [],
                "opt": [],
                "value": [],
                "parser": []
            }
        },
        "_handle_config_settings": {
            "name": "_handle_config_settings",
            "location": 796,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "_handle_merge_hash": {
            "name": "_handle_merge_hash",
            "location": 891,
            "return": [],
            "arguments": {
                "option": [],
                "opt_str": [],
                "value": [],
                "parser": []
            }
        },
        "check_list_path_option": {
            "name": "check_list_path_option",
            "location": 952,
            "return": [],
            "arguments": {
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/command_context.py": {
        "CommandContextMixIn.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandContextMixIn.main_context": {
            "name": "main_context",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandContextMixIn.enter_context": {
            "name": "enter_context",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "context_provider": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/main.py": {
        "main": {
            "name": "main",
            "location": 45,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/main_parser.py": {
        "create_main_parser": {
            "name": "create_main_parser",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "identify_python_interpreter": {
            "name": "identify_python_interpreter",
            "location": 50,
            "return": [],
            "arguments": {
                "python": []
            }
        },
        "parse_command": {
            "name": "parse_command",
            "location": 69,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/parser.py": {
        "PrettyHelpFormatter.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrettyHelpFormatter.format_option_strings": {
            "name": "format_option_strings",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "PrettyHelpFormatter._format_option_strings": {
            "name": "_format_option_strings",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "mvarfmt": [],
                "optsep": []
            }
        },
        "PrettyHelpFormatter.format_heading": {
            "name": "format_heading",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "heading": []
            }
        },
        "PrettyHelpFormatter.format_usage": {
            "name": "format_usage",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "usage": []
            }
        },
        "PrettyHelpFormatter.format_description": {
            "name": "format_description",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "description": []
            }
        },
        "PrettyHelpFormatter.format_epilog": {
            "name": "format_epilog",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "epilog": []
            }
        },
        "PrettyHelpFormatter.indent_lines": {
            "name": "indent_lines",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "indent": []
            }
        },
        "UpdatingDefaultsHelpFormatter.expand_default": {
            "name": "expand_default",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "CustomOptionParser.insert_option_group": {
            "name": "insert_option_group",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "CustomOptionParser.option_list_all": {
            "name": "option_list_all",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOptionParser.__init__": {
            "name": "__init__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOptionParser.check_default": {
            "name": "check_default",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "key": [],
                "val": []
            }
        },
        "ConfigOptionParser._get_ordered_configuration_items": {
            "name": "_get_ordered_configuration_items",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOptionParser._update_defaults": {
            "name": "_update_defaults",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "defaults": []
            }
        },
        "ConfigOptionParser.get_default_values": {
            "name": "get_default_values",
            "location": 270,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOptionParser.error": {
            "name": "error",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/progress_bars.py": {
        "_rich_progress_bar": {
            "name": "_rich_progress_bar",
            "location": 22,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "get_download_progress_renderer": {
            "name": "get_download_progress_renderer",
            "location": 58,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/req_command.py": {
        "_create_truststore_ssl_context": {
            "name": "_create_truststore_ssl_context",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "warn_if_run_as_root": {
            "name": "warn_if_run_as_root",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "with_cleanup": {
            "name": "with_cleanup",
            "location": 230,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "SessionCommandMixin.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SessionCommandMixin._get_index_urls": {
            "name": "_get_index_urls",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": [],
                "options": []
            }
        },
        "SessionCommandMixin.get_default_session": {
            "name": "get_default_session",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "SessionCommandMixin._build_session": {
            "name": "_build_session",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "retries": [],
                "timeout": [],
                "fallback_to_certifi": []
            }
        },
        "IndexGroupCommand.handle_pip_version_check": {
            "name": "handle_pip_version_check",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "with_cleanup.configure_tempdir_registry": {
            "name": "configure_tempdir_registry",
            "location": 235,
            "return": [],
            "arguments": {
                "registry": []
            }
        },
        "with_cleanup.wrapper": {
            "name": "wrapper",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "RequirementCommand.__init__": {
            "name": "__init__",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequirementCommand.determine_resolver_variant": {
            "name": "determine_resolver_variant",
            "location": 265,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "RequirementCommand.make_requirement_preparer": {
            "name": "make_requirement_preparer",
            "location": 273,
            "return": [],
            "arguments": {
                "cls": [],
                "temp_build_dir": [],
                "options": [],
                "build_tracker": [],
                "session": [],
                "finder": [],
                "use_user_site": [],
                "download_dir": [],
                "verbosity": []
            }
        },
        "RequirementCommand.make_resolver": {
            "name": "make_resolver",
            "location": 325,
            "return": [],
            "arguments": {
                "cls": [],
                "preparer": [],
                "finder": [],
                "options": [],
                "wheel_cache": [],
                "use_user_site": [],
                "ignore_installed": [],
                "ignore_requires_python": [],
                "force_reinstall": [],
                "upgrade_strategy": [],
                "use_pep517": [],
                "py_version_info": []
            }
        },
        "RequirementCommand.get_requirements": {
            "name": "get_requirements",
            "location": 384,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "options": [],
                "finder": [],
                "session": []
            }
        },
        "RequirementCommand.trace_basic_info": {
            "name": "trace_basic_info",
            "location": 466,
            "return": [],
            "arguments": {
                "finder": []
            }
        },
        "RequirementCommand._build_package_finder": {
            "name": "_build_package_finder",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "session": [],
                "target_python": [],
                "ignore_requires_python": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/spinners.py": {
        "open_spinner": {
            "name": "open_spinner",
            "location": 116,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "hidden_cursor": {
            "name": "hidden_cursor",
            "location": 144,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "SpinnerInterface.spin": {
            "name": "spin",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpinnerInterface.finish": {
            "name": "finish",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "final_status": []
            }
        },
        "InteractiveSpinner.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "file": [],
                "spin_chars": [],
                "min_update_interval_seconds": []
            }
        },
        "InteractiveSpinner._write": {
            "name": "_write",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "InteractiveSpinner.spin": {
            "name": "spin",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InteractiveSpinner.finish": {
            "name": "finish",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "final_status": []
            }
        },
        "NonInteractiveSpinner.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "min_update_interval_seconds": []
            }
        },
        "NonInteractiveSpinner._update": {
            "name": "_update",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "NonInteractiveSpinner.spin": {
            "name": "spin",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NonInteractiveSpinner.finish": {
            "name": "finish",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "final_status": []
            }
        },
        "RateLimiter.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "min_update_interval_seconds": []
            }
        },
        "RateLimiter.ready": {
            "name": "ready",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RateLimiter.reset": {
            "name": "reset",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/status_codes.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/cli/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/cache.py": {
        "CacheCommand.add_options": {
            "name": "add_options",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CacheCommand.run": {
            "name": "run",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand.get_cache_dir": {
            "name": "get_cache_dir",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand.get_cache_info": {
            "name": "get_cache_info",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand.list_cache_items": {
            "name": "list_cache_items",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand.format_for_human": {
            "name": "format_for_human",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "CacheCommand.format_for_abspath": {
            "name": "format_for_abspath",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "CacheCommand.remove_cache_items": {
            "name": "remove_cache_items",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand.purge_cache": {
            "name": "purge_cache",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "CacheCommand._cache_dir": {
            "name": "_cache_dir",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "subdir": []
            }
        },
        "CacheCommand._find_http_files": {
            "name": "_find_http_files",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "CacheCommand._find_wheels": {
            "name": "_find_wheels",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "pattern": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/check.py": {
        "CheckCommand.run": {
            "name": "run",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/completion.py": {
        "CompletionCommand.add_options": {
            "name": "add_options",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompletionCommand.run": {
            "name": "run",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/configuration.py": {
        "ConfigurationCommand.add_options": {
            "name": "add_options",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationCommand.run": {
            "name": "run",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand._determine_file": {
            "name": "_determine_file",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "need_value": []
            }
        },
        "ConfigurationCommand.list_values": {
            "name": "list_values",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand.get_name": {
            "name": "get_name",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand.set_name_value": {
            "name": "set_name_value",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand.unset_name": {
            "name": "unset_name",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand.list_config_values": {
            "name": "list_config_values",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand.print_config_file_values": {
            "name": "print_config_file_values",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "variant": []
            }
        },
        "ConfigurationCommand.print_env_var_values": {
            "name": "print_env_var_values",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationCommand.open_in_editor": {
            "name": "open_in_editor",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ConfigurationCommand._get_n_args": {
            "name": "_get_n_args",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "example": [],
                "n": []
            }
        },
        "ConfigurationCommand._save_configuration": {
            "name": "_save_configuration",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationCommand._determine_editor": {
            "name": "_determine_editor",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/debug.py": {
        "show_value": {
            "name": "show_value",
            "location": 26,
            "return": [],
            "arguments": {
                "name": [],
                "value": []
            }
        },
        "show_sys_implementation": {
            "name": "show_sys_implementation",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "create_vendor_txt_map": {
            "name": "create_vendor_txt_map",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "get_module_from_module_name": {
            "name": "get_module_from_module_name",
            "location": 49,
            "return": [],
            "arguments": {
                "module_name": []
            }
        },
        "get_vendor_version_from_module": {
            "name": "get_vendor_version_from_module",
            "location": 60,
            "return": [],
            "arguments": {
                "module_name": []
            }
        },
        "show_actual_vendor_versions": {
            "name": "show_actual_vendor_versions",
            "location": 75,
            "return": [],
            "arguments": {
                "vendor_txt_versions": []
            }
        },
        "show_vendor_versions": {
            "name": "show_vendor_versions",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "show_tags": {
            "name": "show_tags",
            "location": 104,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "ca_bundle_info": {
            "name": "ca_bundle_info",
            "location": 136,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "DebugCommand.add_options": {
            "name": "add_options",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DebugCommand.run": {
            "name": "run",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/download.py": {
        "DownloadCommand.add_options": {
            "name": "add_options",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloadCommand.run": {
            "name": "run",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/freeze.py": {
        "FreezeCommand.add_options": {
            "name": "add_options",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FreezeCommand.run": {
            "name": "run",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/hash.py": {
        "_hash_of_file": {
            "name": "_hash_of_file",
            "location": 53,
            "return": [],
            "arguments": {
                "path": [],
                "algorithm": []
            }
        },
        "HashCommand.add_options": {
            "name": "add_options",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashCommand.run": {
            "name": "run",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/help.py": {
        "HelpCommand.run": {
            "name": "run",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/index.py": {
        "IndexCommand.add_options": {
            "name": "add_options",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndexCommand.run": {
            "name": "run",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "IndexCommand._build_package_finder": {
            "name": "_build_package_finder",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "session": [],
                "target_python": [],
                "ignore_requires_python": []
            }
        },
        "IndexCommand.get_available_package_versions": {
            "name": "get_available_package_versions",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/inspect.py": {
        "InspectCommand.add_options": {
            "name": "add_options",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InspectCommand.run": {
            "name": "run",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "InspectCommand._dist_to_dict": {
            "name": "_dist_to_dict",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/install.py": {
        "get_check_bdist_wheel_allowed": {
            "name": "get_check_bdist_wheel_allowed",
            "location": 63,
            "return": [],
            "arguments": {
                "format_control": []
            }
        },
        "get_lib_location_guesses": {
            "name": "get_lib_location_guesses",
            "location": 681,
            "return": [],
            "arguments": {
                "user": [],
                "home": [],
                "root": [],
                "isolated": [],
                "prefix": []
            }
        },
        "site_packages_writable": {
            "name": "site_packages_writable",
            "location": 699,
            "return": [],
            "arguments": {
                "root": [],
                "isolated": []
            }
        },
        "decide_user_install": {
            "name": "decide_user_install",
            "location": 706,
            "return": [],
            "arguments": {
                "use_user_site": [],
                "prefix_path": [],
                "target_dir": [],
                "root_path": [],
                "isolated_mode": []
            }
        },
        "reject_location_related_install_options": {
            "name": "reject_location_related_install_options",
            "location": 767,
            "return": [],
            "arguments": {
                "requirements": [],
                "options": []
            }
        },
        "create_os_error_message": {
            "name": "create_os_error_message",
            "location": 806,
            "return": [],
            "arguments": {
                "error": [],
                "show_traceback": [],
                "using_user_site": []
            }
        },
        "get_check_bdist_wheel_allowed.check_binary_allowed": {
            "name": "check_binary_allowed",
            "location": 66,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "InstallCommand.add_options": {
            "name": "add_options",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallCommand.run": {
            "name": "run",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "InstallCommand._handle_target_dir": {
            "name": "_handle_target_dir",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "target_dir": [],
                "target_temp_dir": [],
                "upgrade": []
            }
        },
        "InstallCommand._determine_conflicts": {
            "name": "_determine_conflicts",
            "location": 614,
            "return": [],
            "arguments": {
                "self": [],
                "to_install": []
            }
        },
        "InstallCommand._warn_about_conflicts": {
            "name": "_warn_about_conflicts",
            "location": 626,
            "return": [],
            "arguments": {
                "self": [],
                "conflict_details": [],
                "resolver_variant": []
            }
        },
        "reject_location_related_install_options.format_options": {
            "name": "format_options",
            "location": 774,
            "return": [],
            "arguments": {
                "option_names": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/list.py": {
        "format_for_columns": {
            "name": "format_for_columns",
            "location": 303,
            "return": [],
            "arguments": {
                "pkgs": [],
                "options": []
            }
        },
        "format_for_json": {
            "name": "format_for_json",
            "location": 348,
            "return": [],
            "arguments": {
                "packages": [],
                "options": []
            }
        },
        "ListCommand.add_options": {
            "name": "add_options",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListCommand._build_package_finder": {
            "name": "_build_package_finder",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "session": []
            }
        },
        "ListCommand.run": {
            "name": "run",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "ListCommand.get_outdated": {
            "name": "get_outdated",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "packages": [],
                "options": []
            }
        },
        "ListCommand.get_uptodate": {
            "name": "get_uptodate",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "packages": [],
                "options": []
            }
        },
        "ListCommand.get_not_required": {
            "name": "get_not_required",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "packages": [],
                "options": []
            }
        },
        "ListCommand.iter_packages_latest_infos": {
            "name": "iter_packages_latest_infos",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "packages": [],
                "options": []
            }
        },
        "ListCommand.output_package_listing": {
            "name": "output_package_listing",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "packages": [],
                "options": []
            }
        },
        "ListCommand.output_package_listing_columns": {
            "name": "output_package_listing_columns",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "header": []
            }
        },
        "ListCommand.iter_packages_latest_infos.latest_info": {
            "name": "latest_info",
            "location": 233,
            "return": [],
            "arguments": {
                "dist": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/search.py": {
        "transform_hits": {
            "name": "transform_hits",
            "location": 88,
            "return": [],
            "arguments": {
                "hits": []
            }
        },
        "print_dist_installation_info": {
            "name": "print_dist_installation_info",
            "location": 116,
            "return": [],
            "arguments": {
                "name": [],
                "latest": []
            }
        },
        "print_results": {
            "name": "print_results",
            "location": 135,
            "return": [],
            "arguments": {
                "hits": [],
                "name_column_width": [],
                "terminal_width": []
            }
        },
        "highest_version": {
            "name": "highest_version",
            "location": 173,
            "return": [],
            "arguments": {
                "versions": []
            }
        },
        "SearchCommand.add_options": {
            "name": "add_options",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchCommand.run": {
            "name": "run",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "SearchCommand.search": {
            "name": "search",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "query": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/show.py": {
        "search_packages_info": {
            "name": "search_packages_info",
            "location": 71,
            "return": [],
            "arguments": {
                "query": []
            }
        },
        "print_results": {
            "name": "print_results",
            "location": 139,
            "return": [],
            "arguments": {
                "distributions": [],
                "list_files": [],
                "verbose": []
            }
        },
        "ShowCommand.add_options": {
            "name": "add_options",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShowCommand.run": {
            "name": "run",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        },
        "search_packages_info._get_requiring_packages": {
            "name": "_get_requiring_packages",
            "location": 88,
            "return": [],
            "arguments": {
                "current_dist": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/uninstall.py": {
        "UninstallCommand.add_options": {
            "name": "add_options",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallCommand.run": {
            "name": "run",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/wheel.py": {
        "WheelCommand.add_options": {
            "name": "add_options",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WheelCommand.run": {
            "name": "run",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/commands/__init__.py": {
        "create_command": {
            "name": "create_command",
            "location": 109,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_similar_commands": {
            "name": "get_similar_commands",
            "location": 121,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/distributions/base.py": {
        "AbstractDistribution.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "AbstractDistribution.get_metadata_distribution": {
            "name": "get_metadata_distribution",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractDistribution.prepare_distribution_metadata": {
            "name": "prepare_distribution_metadata",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "build_isolation": [],
                "check_build_deps": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/distributions/installed.py": {
        "InstalledDistribution.get_metadata_distribution": {
            "name": "get_metadata_distribution",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.prepare_distribution_metadata": {
            "name": "prepare_distribution_metadata",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "build_isolation": [],
                "check_build_deps": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/distributions/sdist.py": {
        "SourceDistribution.get_metadata_distribution": {
            "name": "get_metadata_distribution",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SourceDistribution.prepare_distribution_metadata": {
            "name": "prepare_distribution_metadata",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "build_isolation": [],
                "check_build_deps": []
            }
        },
        "SourceDistribution._prepare_build_backend": {
            "name": "_prepare_build_backend",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "finder": []
            }
        },
        "SourceDistribution._get_build_requires_wheel": {
            "name": "_get_build_requires_wheel",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SourceDistribution._get_build_requires_editable": {
            "name": "_get_build_requires_editable",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SourceDistribution._install_build_reqs": {
            "name": "_install_build_reqs",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "finder": []
            }
        },
        "SourceDistribution._raise_conflicts": {
            "name": "_raise_conflicts",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "conflicting_with": [],
                "conflicting_reqs": []
            }
        },
        "SourceDistribution._raise_missing_reqs": {
            "name": "_raise_missing_reqs",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "missing": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/distributions/wheel.py": {
        "WheelDistribution.get_metadata_distribution": {
            "name": "get_metadata_distribution",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WheelDistribution.prepare_distribution_metadata": {
            "name": "prepare_distribution_metadata",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "build_isolation": [],
                "check_build_deps": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/distributions/__init__.py": {
        "make_distribution_for_install_requirement": {
            "name": "make_distribution_for_install_requirement",
            "location": 7,
            "return": [],
            "arguments": {
                "install_req": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/index/collector.py": {
        "_match_vcs_scheme": {
            "name": "_match_vcs_scheme",
            "location": 55,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "_ensure_api_header": {
            "name": "_ensure_api_header",
            "location": 73,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "_ensure_api_response": {
            "name": "_ensure_api_response",
            "location": 99,
            "return": [],
            "arguments": {
                "url": [],
                "session": []
            }
        },
        "_get_simple_response": {
            "name": "_get_simple_response",
            "location": 117,
            "return": [],
            "arguments": {
                "url": [],
                "session": []
            }
        },
        "_get_encoding_from_headers": {
            "name": "_get_encoding_from_headers",
            "location": 180,
            "return": [],
            "arguments": {
                "headers": []
            }
        },
        "with_cached_index_content": {
            "name": "with_cached_index_content",
            "location": 208,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "parse_links": {
            "name": "parse_links",
            "location": 229,
            "return": [],
            "arguments": {
                "page": []
            }
        },
        "_handle_get_simple_fail": {
            "name": "_handle_get_simple_fail",
            "location": 313,
            "return": [],
            "arguments": {
                "link": [],
                "reason": [],
                "meth": []
            }
        },
        "_make_index_content": {
            "name": "_make_index_content",
            "location": 323,
            "return": [],
            "arguments": {
                "response": [],
                "cache_link_parsing": []
            }
        },
        "_get_index_content": {
            "name": "_get_index_content",
            "location": 336,
            "return": [],
            "arguments": {
                "link": []
            }
        },
        "_NotAPIContent.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "content_type": [],
                "request_desc": []
            }
        },
        "CacheablePageContent.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "page": []
            }
        },
        "CacheablePageContent.__eq__": {
            "name": "__eq__",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CacheablePageContent.__hash__": {
            "name": "__hash__",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseLinks.__call__": {
            "name": "__call__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "page": []
            }
        },
        "with_cached_index_content.wrapper": {
            "name": "wrapper",
            "location": 216,
            "return": [],
            "arguments": {
                "cacheable_page": []
            }
        },
        "with_cached_index_content.wrapper_wrapper": {
            "name": "wrapper_wrapper",
            "location": 220,
            "return": [],
            "arguments": {
                "page": []
            }
        },
        "IndexContent.__init__": {
            "name": "__init__",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "content": [],
                "content_type": [],
                "encoding": [],
                "url": [],
                "cache_link_parsing": []
            }
        },
        "IndexContent.__str__": {
            "name": "__str__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLLinkParser.__init__": {
            "name": "__init__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "HTMLLinkParser.handle_starttag": {
            "name": "handle_starttag",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "attrs": []
            }
        },
        "HTMLLinkParser.get_href": {
            "name": "get_href",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "LinkCollector.__init__": {
            "name": "__init__",
            "location": 411,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "search_scope": []
            }
        },
        "LinkCollector.create": {
            "name": "create",
            "location": 420,
            "return": [],
            "arguments": {
                "cls": [],
                "session": [],
                "options": [],
                "suppress_no_index": []
            }
        },
        "LinkCollector.find_links": {
            "name": "find_links",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkCollector.fetch_response": {
            "name": "fetch_response",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "LinkCollector.collect_sources": {
            "name": "collect_sources",
            "location": 463,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": [],
                "candidates_from_page": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/index/package_finder.py": {
        "_check_link_requires_python": {
            "name": "_check_link_requires_python",
            "location": 51,
            "return": [],
            "arguments": {
                "link": [],
                "version_info": [],
                "ignore_requires_python": []
            }
        },
        "filter_unallowed_hashes": {
            "name": "filter_unallowed_hashes",
            "location": 252,
            "return": [],
            "arguments": {
                "candidates": [],
                "hashes": [],
                "project_name": []
            }
        },
        "_find_name_version_sep": {
            "name": "_find_name_version_sep",
            "location": 984,
            "return": [],
            "arguments": {
                "fragment": [],
                "canonical_name": []
            }
        },
        "_extract_version_from_fragment": {
            "name": "_extract_version_from_fragment",
            "location": 1010,
            "return": [],
            "arguments": {
                "fragment": [],
                "canonical_name": []
            }
        },
        "LinkEvaluator.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": [],
                "canonical_name": [],
                "formats": [],
                "target_python": [],
                "allow_yanked": [],
                "ignore_requires_python": []
            }
        },
        "LinkEvaluator.evaluate_link": {
            "name": "evaluate_link",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "CandidatePreferences.__init__": {
            "name": "__init__",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "prefer_binary": [],
                "allow_all_prereleases": []
            }
        },
        "BestCandidateResult.__init__": {
            "name": "__init__",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "candidates": [],
                "applicable_candidates": [],
                "best_candidate": []
            }
        },
        "BestCandidateResult.iter_all": {
            "name": "iter_all",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BestCandidateResult.iter_applicable": {
            "name": "iter_applicable",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CandidateEvaluator.create": {
            "name": "create",
            "location": 393,
            "return": [],
            "arguments": {
                "cls": [],
                "project_name": [],
                "target_python": [],
                "prefer_binary": [],
                "allow_all_prereleases": [],
                "specifier": [],
                "hashes": []
            }
        },
        "CandidateEvaluator.__init__": {
            "name": "__init__",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": [],
                "supported_tags": [],
                "specifier": [],
                "prefer_binary": [],
                "allow_all_prereleases": [],
                "hashes": []
            }
        },
        "CandidateEvaluator.get_applicable_candidates": {
            "name": "get_applicable_candidates",
            "location": 454,
            "return": [],
            "arguments": {
                "self": [],
                "candidates": []
            }
        },
        "CandidateEvaluator._sort_key": {
            "name": "_sort_key",
            "location": 490,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "CandidateEvaluator.sort_best_candidate": {
            "name": "sort_best_candidate",
            "location": 558,
            "return": [],
            "arguments": {
                "self": [],
                "candidates": []
            }
        },
        "CandidateEvaluator.compute_best_candidate": {
            "name": "compute_best_candidate",
            "location": 571,
            "return": [],
            "arguments": {
                "self": [],
                "candidates": []
            }
        },
        "PackageFinder.__init__": {
            "name": "__init__",
            "location": 596,
            "return": [],
            "arguments": {
                "self": [],
                "link_collector": [],
                "target_python": [],
                "allow_yanked": [],
                "format_control": [],
                "candidate_prefs": [],
                "ignore_requires_python": []
            }
        },
        "PackageFinder.create": {
            "name": "create",
            "location": 636,
            "return": [],
            "arguments": {
                "cls": [],
                "link_collector": [],
                "selection_prefs": [],
                "target_python": []
            }
        },
        "PackageFinder.target_python": {
            "name": "target_python",
            "location": 668,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.search_scope": {
            "name": "search_scope",
            "location": 676,
            "return": [],
            "arguments": {
                "self": [],
                "search_scope": []
            }
        },
        "PackageFinder.find_links": {
            "name": "find_links",
            "location": 680,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.index_urls": {
            "name": "index_urls",
            "location": 684,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.trusted_hosts": {
            "name": "trusted_hosts",
            "location": 688,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.allow_all_prereleases": {
            "name": "allow_all_prereleases",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.set_allow_all_prereleases": {
            "name": "set_allow_all_prereleases",
            "location": 696,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.prefer_binary": {
            "name": "prefer_binary",
            "location": 700,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.set_prefer_binary": {
            "name": "set_prefer_binary",
            "location": 703,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.requires_python_skipped_reasons": {
            "name": "requires_python_skipped_reasons",
            "location": 706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageFinder.make_link_evaluator": {
            "name": "make_link_evaluator",
            "location": 714,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": []
            }
        },
        "PackageFinder._sort_links": {
            "name": "_sort_links",
            "location": 727,
            "return": [],
            "arguments": {
                "self": [],
                "links": []
            }
        },
        "PackageFinder._log_skipped_link": {
            "name": "_log_skipped_link",
            "location": 743,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "result": [],
                "detail": []
            }
        },
        "PackageFinder.get_install_candidate": {
            "name": "get_install_candidate",
            "location": 751,
            "return": [],
            "arguments": {
                "self": [],
                "link_evaluator": [],
                "link": []
            }
        },
        "PackageFinder.evaluate_links": {
            "name": "evaluate_links",
            "location": 769,
            "return": [],
            "arguments": {
                "self": [],
                "link_evaluator": [],
                "links": []
            }
        },
        "PackageFinder.process_project_url": {
            "name": "process_project_url",
            "location": 783,
            "return": [],
            "arguments": {
                "self": [],
                "project_url": [],
                "link_evaluator": []
            }
        },
        "PackageFinder.find_all_candidates": {
            "name": "find_all_candidates",
            "location": 805,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": []
            }
        },
        "PackageFinder.make_candidate_evaluator": {
            "name": "make_candidate_evaluator",
            "location": 857,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": [],
                "specifier": [],
                "hashes": []
            }
        },
        "PackageFinder.find_best_candidate": {
            "name": "find_best_candidate",
            "location": 875,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": [],
                "specifier": [],
                "hashes": []
            }
        },
        "PackageFinder.find_requirement": {
            "name": "find_requirement",
            "location": 897,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "upgrade": []
            }
        },
        "PackageFinder.find_requirement._format_versions": {
            "name": "_format_versions",
            "location": 918,
            "return": [],
            "arguments": {
                "cand_iter": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/index/sources.py": {
        "_is_html_file": {
            "name": "_is_html_file",
            "location": 35,
            "return": [],
            "arguments": {
                "file_url": []
            }
        },
        "build_source": {
            "name": "build_source",
            "location": 166,
            "return": [],
            "arguments": {
                "location": []
            }
        },
        "LinkSource.link": {
            "name": "link",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkSource.page_candidates": {
            "name": "page_candidates",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkSource.file_links": {
            "name": "file_links",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FlatDirectorySource.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "candidates_from_page": [],
                "path": []
            }
        },
        "_FlatDirectorySource.link": {
            "name": "link",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FlatDirectorySource.page_candidates": {
            "name": "page_candidates",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FlatDirectorySource.file_links": {
            "name": "file_links",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LocalFileSource.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "candidates_from_page": [],
                "link": []
            }
        },
        "_LocalFileSource.link": {
            "name": "link",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LocalFileSource.page_candidates": {
            "name": "page_candidates",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LocalFileSource.file_links": {
            "name": "file_links",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RemoteFileSource.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "candidates_from_page": [],
                "page_validator": [],
                "link": []
            }
        },
        "_RemoteFileSource.link": {
            "name": "link",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RemoteFileSource.page_candidates": {
            "name": "page_candidates",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RemoteFileSource.file_links": {
            "name": "file_links",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndexDirectorySource.__init__": {
            "name": "__init__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "candidates_from_page": [],
                "link": []
            }
        },
        "_IndexDirectorySource.link": {
            "name": "link",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndexDirectorySource.page_candidates": {
            "name": "page_candidates",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndexDirectorySource.file_links": {
            "name": "file_links",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/index/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/locations/base.py": {
        "get_major_minor_version": {
            "name": "get_major_minor_version",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "change_root": {
            "name": "change_root",
            "location": 27,
            "return": [],
            "arguments": {
                "new_root": [],
                "pathname": []
            }
        },
        "get_src_prefix": {
            "name": "get_src_prefix",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "is_osx_framework": {
            "name": "is_osx_framework",
            "location": 80,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/locations/_distutils.py": {
        "distutils_scheme": {
            "name": "distutils_scheme",
            "location": 35,
            "return": [],
            "arguments": {
                "dist_name": [],
                "user": [],
                "home": [],
                "root": [],
                "isolated": [],
                "prefix": []
            }
        },
        "get_scheme": {
            "name": "get_scheme",
            "location": 116,
            "return": [],
            "arguments": {
                "dist_name": [],
                "user": [],
                "home": [],
                "root": [],
                "isolated": [],
                "prefix": []
            }
        },
        "get_bin_prefix": {
            "name": "get_bin_prefix",
            "location": 151,
            "return": [],
            "arguments": {}
        },
        "get_purelib": {
            "name": "get_purelib",
            "location": 168,
            "return": [],
            "arguments": {}
        },
        "get_platlib": {
            "name": "get_platlib",
            "location": 172,
            "return": [],
            "arguments": {}
        },
        "get_prefixed_libs": {
            "name": "get_prefixed_libs",
            "location": 176,
            "return": [],
            "arguments": {
                "prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/locations/_sysconfig.py": {
        "_should_use_osx_framework_prefix": {
            "name": "_should_use_osx_framework_prefix",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "_infer_prefix": {
            "name": "_infer_prefix",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "_infer_user": {
            "name": "_infer_user",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "_infer_home": {
            "name": "_infer_home",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "get_scheme": {
            "name": "get_scheme",
            "location": 124,
            "return": [],
            "arguments": {
                "dist_name": [],
                "user": [],
                "home": [],
                "root": [],
                "isolated": [],
                "prefix": []
            }
        },
        "get_bin_prefix": {
            "name": "get_bin_prefix",
            "location": 201,
            "return": [],
            "arguments": {}
        },
        "get_purelib": {
            "name": "get_purelib",
            "location": 208,
            "return": [],
            "arguments": {}
        },
        "get_platlib": {
            "name": "get_platlib",
            "location": 212,
            "return": [],
            "arguments": {}
        },
        "get_prefixed_libs": {
            "name": "get_prefixed_libs",
            "location": 216,
            "return": [],
            "arguments": {
                "prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/locations/__init__.py": {
        "_should_use_sysconfig": {
            "name": "_should_use_sysconfig",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "_looks_like_bpo_44860": {
            "name": "_looks_like_bpo_44860",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "_looks_like_red_hat_patched_platlib_purelib": {
            "name": "_looks_like_red_hat_patched_platlib_purelib",
            "location": 91,
            "return": [],
            "arguments": {
                "scheme": []
            }
        },
        "_looks_like_red_hat_lib": {
            "name": "_looks_like_red_hat_lib",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "_looks_like_debian_scheme": {
            "name": "_looks_like_debian_scheme",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "_looks_like_red_hat_scheme": {
            "name": "_looks_like_red_hat_scheme",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "_looks_like_slackware_scheme": {
            "name": "_looks_like_slackware_scheme",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "_looks_like_msys2_mingw_scheme": {
            "name": "_looks_like_msys2_mingw_scheme",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "_fix_abiflags": {
            "name": "_fix_abiflags",
            "location": 178,
            "return": [],
            "arguments": {
                "parts": []
            }
        },
        "_warn_mismatched": {
            "name": "_warn_mismatched",
            "location": 195,
            "return": [],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "_warn_if_mismatch": {
            "name": "_warn_if_mismatch",
            "location": 205,
            "return": [],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "_log_context": {
            "name": "_log_context",
            "location": 213,
            "return": [],
            "arguments": {}
        },
        "get_scheme": {
            "name": "get_scheme",
            "location": 231,
            "return": [],
            "arguments": {
                "dist_name": [],
                "user": [],
                "home": [],
                "root": [],
                "isolated": [],
                "prefix": []
            }
        },
        "get_bin_prefix": {
            "name": "get_bin_prefix",
            "location": 409,
            "return": [],
            "arguments": {}
        },
        "get_bin_user": {
            "name": "get_bin_user",
            "location": 420,
            "return": [],
            "arguments": {}
        },
        "_looks_like_deb_system_dist_packages": {
            "name": "_looks_like_deb_system_dist_packages",
            "location": 424,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "get_purelib": {
            "name": "get_purelib",
            "location": 441,
            "return": [],
            "arguments": {}
        },
        "get_platlib": {
            "name": "get_platlib",
            "location": 455,
            "return": [],
            "arguments": {}
        },
        "_deduplicated": {
            "name": "_deduplicated",
            "location": 471,
            "return": [],
            "arguments": {
                "v1": [],
                "v2": []
            }
        },
        "_looks_like_apple_library": {
            "name": "_looks_like_apple_library",
            "location": 478,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_prefixed_libs": {
            "name": "get_prefixed_libs",
            "location": 485,
            "return": [],
            "arguments": {
                "prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/base.py": {
        "_convert_installed_files_path": {
            "name": "_convert_installed_files_path",
            "location": 71,
            "return": [],
            "arguments": {
                "entry": [],
                "info": []
            }
        },
        "BaseEntryPoint.name": {
            "name": "name",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseEntryPoint.value": {
            "name": "value",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseEntryPoint.group": {
            "name": "group",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.from_directory": {
            "name": "from_directory",
            "location": 109,
            "return": [],
            "arguments": {
                "cls": [],
                "directory": []
            }
        },
        "BaseDistribution.from_metadata_file_contents": {
            "name": "from_metadata_file_contents",
            "location": 117,
            "return": [],
            "arguments": {
                "cls": [],
                "metadata_contents": [],
                "filename": [],
                "project_name": []
            }
        },
        "BaseDistribution.from_wheel": {
            "name": "from_wheel",
            "location": 135,
            "return": [],
            "arguments": {
                "cls": [],
                "wheel": [],
                "name": []
            }
        },
        "BaseDistribution.__repr__": {
            "name": "__repr__",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.__str__": {
            "name": "__str__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.location": {
            "name": "location",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.editable_project_location": {
            "name": "editable_project_location",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installed_location": {
            "name": "installed_location",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.info_location": {
            "name": "info_location",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installed_by_distutils": {
            "name": "installed_by_distutils",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installed_as_egg": {
            "name": "installed_as_egg",
            "location": 233,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installed_with_setuptools_egg_info": {
            "name": "installed_with_setuptools_egg_info",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installed_with_dist_info": {
            "name": "installed_with_dist_info",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.canonical_name": {
            "name": "canonical_name",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.version": {
            "name": "version",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.setuptools_filename": {
            "name": "setuptools_filename",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.direct_url": {
            "name": "direct_url",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.installer": {
            "name": "installer",
            "location": 321,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.requested": {
            "name": "requested",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.editable": {
            "name": "editable",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.local": {
            "name": "local",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.in_usersite": {
            "name": "in_usersite",
            "location": 351,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.in_site_packages": {
            "name": "in_site_packages",
            "location": 357,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.is_file": {
            "name": "is_file",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BaseDistribution.iter_distutils_script_names": {
            "name": "iter_distutils_script_names",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.read_text": {
            "name": "read_text",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BaseDistribution.iter_entry_points": {
            "name": "iter_entry_points",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._metadata_impl": {
            "name": "_metadata_impl",
            "location": 386,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._metadata_cached": {
            "name": "_metadata_cached",
            "location": 390,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.metadata": {
            "name": "metadata",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.metadata_dict": {
            "name": "metadata_dict",
            "location": 409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.metadata_version": {
            "name": "metadata_version",
            "location": 420,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.raw_name": {
            "name": "raw_name",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.requires_python": {
            "name": "requires_python",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "extras": []
            }
        },
        "BaseDistribution.iter_provided_extras": {
            "name": "iter_provided_extras",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._iter_declared_entries_from_record": {
            "name": "_iter_declared_entries_from_record",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._iter_declared_entries_from_legacy": {
            "name": "_iter_declared_entries_from_legacy",
            "location": 474,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution.iter_declared_entries": {
            "name": "iter_declared_entries",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._iter_requires_txt_entries": {
            "name": "_iter_requires_txt_entries",
            "location": 511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._iter_egg_info_extras": {
            "name": "_iter_egg_info_extras",
            "location": 536,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._iter_egg_info_dependencies": {
            "name": "_iter_egg_info_dependencies",
            "location": 545,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDistribution._add_egg_info_requires": {
            "name": "_add_egg_info_requires",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": []
            }
        },
        "BaseEnvironment.default": {
            "name": "default",
            "location": 586,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseEnvironment.from_paths": {
            "name": "from_paths",
            "location": 590,
            "return": [],
            "arguments": {
                "cls": [],
                "paths": []
            }
        },
        "BaseEnvironment.get_distribution": {
            "name": "get_distribution",
            "location": 593,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseEnvironment._iter_distributions": {
            "name": "_iter_distributions",
            "location": 601,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseEnvironment.iter_all_distributions": {
            "name": "iter_all_distributions",
            "location": 610,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseEnvironment.iter_installed_distributions": {
            "name": "iter_installed_distributions",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "local_only": [],
                "skip": [],
                "include_editables": [],
                "editables_only": [],
                "user_only": []
            }
        },
        "Wheel.as_zipfile": {
            "name": "as_zipfile",
            "location": 670,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FilesystemWheel.__init__": {
            "name": "__init__",
            "location": 675,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "FilesystemWheel.as_zipfile": {
            "name": "as_zipfile",
            "location": 678,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MemoryWheel.__init__": {
            "name": "__init__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "location": [],
                "stream": []
            }
        },
        "MemoryWheel.as_zipfile": {
            "name": "as_zipfile",
            "location": 687,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/pkg_resources.py": {
        "InMemoryMetadata.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": [],
                "wheel_name": []
            }
        },
        "InMemoryMetadata.has_metadata": {
            "name": "has_metadata",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InMemoryMetadata.get_metadata": {
            "name": "get_metadata",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InMemoryMetadata.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InMemoryMetadata.metadata_isdir": {
            "name": "metadata_isdir",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InMemoryMetadata.metadata_listdir": {
            "name": "metadata_listdir",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InMemoryMetadata.run_script": {
            "name": "run_script",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "script_name": [],
                "namespace": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Distribution.from_directory": {
            "name": "from_directory",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": [],
                "directory": []
            }
        },
        "Distribution.from_metadata_file_contents": {
            "name": "from_metadata_file_contents",
            "location": 96,
            "return": [],
            "arguments": {
                "cls": [],
                "metadata_contents": [],
                "filename": [],
                "project_name": []
            }
        },
        "Distribution.from_wheel": {
            "name": "from_wheel",
            "location": 113,
            "return": [],
            "arguments": {
                "cls": [],
                "wheel": [],
                "name": []
            }
        },
        "Distribution.location": {
            "name": "location",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.installed_location": {
            "name": "installed_location",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.info_location": {
            "name": "info_location",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.installed_by_distutils": {
            "name": "installed_by_distutils",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.canonical_name": {
            "name": "canonical_name",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.version": {
            "name": "version",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.is_file": {
            "name": "is_file",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Distribution.iter_distutils_script_names": {
            "name": "iter_distutils_script_names",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.read_text": {
            "name": "read_text",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Distribution.iter_entry_points": {
            "name": "iter_entry_points",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._metadata_impl": {
            "name": "_metadata_impl",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "extras": []
            }
        },
        "Distribution.iter_provided_extras": {
            "name": "iter_provided_extras",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment.__init__": {
            "name": "__init__",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "ws": []
            }
        },
        "Environment.default": {
            "name": "default",
            "location": 227,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Environment.from_paths": {
            "name": "from_paths",
            "location": 231,
            "return": [],
            "arguments": {
                "cls": [],
                "paths": []
            }
        },
        "Environment._iter_distributions": {
            "name": "_iter_distributions",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment._search_distribution": {
            "name": "_search_distribution",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Environment.get_distribution": {
            "name": "get_distribution",
            "location": 250,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/_json.py": {
        "json_name": {
            "name": "json_name",
            "location": 37,
            "return": [],
            "arguments": {
                "field": []
            }
        },
        "msg_to_json": {
            "name": "msg_to_json",
            "location": 41,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "msg_to_json.sanitise_header": {
            "name": "sanitise_header",
            "location": 44,
            "return": [],
            "arguments": {
                "h": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/__init__.py": {
        "_should_use_importlib_metadata": {
            "name": "_should_use_importlib_metadata",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "select_backend": {
            "name": "select_backend",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "get_default_environment": {
            "name": "get_default_environment",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "get_environment": {
            "name": "get_environment",
            "location": 78,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "get_directory_distribution": {
            "name": "get_directory_distribution",
            "location": 88,
            "return": [],
            "arguments": {
                "directory": []
            }
        },
        "get_wheel_distribution": {
            "name": "get_wheel_distribution",
            "location": 97,
            "return": [],
            "arguments": {
                "wheel": [],
                "canonical_name": []
            }
        },
        "get_metadata_distribution": {
            "name": "get_metadata_distribution",
            "location": 108,
            "return": [],
            "arguments": {
                "metadata_contents": [],
                "filename": [],
                "canonical_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/importlib/_compat.py": {
        "get_info_location": {
            "name": "get_info_location",
            "location": 34,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "get_dist_name": {
            "name": "get_dist_name",
            "location": 46,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "BadMetadata.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "BadMetadata.__str__": {
            "name": "__str__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasePath.name": {
            "name": "name",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasePath.parent": {
            "name": "parent",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py": {
        "WheelDistribution.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "files": [],
                "info_location": []
            }
        },
        "WheelDistribution.from_zipfile": {
            "name": "from_zipfile",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [],
                "zf": [],
                "name": [],
                "location": []
            }
        },
        "WheelDistribution.iterdir": {
            "name": "iterdir",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "WheelDistribution.read_text": {
            "name": "read_text",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "info_location": [],
                "installed_location": []
            }
        },
        "Distribution.from_directory": {
            "name": "from_directory",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "directory": []
            }
        },
        "Distribution.from_metadata_file_contents": {
            "name": "from_metadata_file_contents",
            "location": 114,
            "return": [],
            "arguments": {
                "cls": [],
                "metadata_contents": [],
                "filename": [],
                "project_name": []
            }
        },
        "Distribution.from_wheel": {
            "name": "from_wheel",
            "location": 131,
            "return": [],
            "arguments": {
                "cls": [],
                "wheel": [],
                "name": []
            }
        },
        "Distribution.location": {
            "name": "location",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.info_location": {
            "name": "info_location",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.installed_location": {
            "name": "installed_location",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._get_dist_name_from_location": {
            "name": "_get_dist_name_from_location",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.canonical_name": {
            "name": "canonical_name",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.version": {
            "name": "version",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.is_file": {
            "name": "is_file",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Distribution.iter_distutils_script_names": {
            "name": "iter_distutils_script_names",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.read_text": {
            "name": "read_text",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Distribution.iter_entry_points": {
            "name": "iter_entry_points",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._metadata_impl": {
            "name": "_metadata_impl",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.iter_provided_extras": {
            "name": "iter_provided_extras",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "extras": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/importlib/_envs.py": {
        "_looks_like_wheel": {
            "name": "_looks_like_wheel",
            "location": 24,
            "return": [],
            "arguments": {
                "location": []
            }
        },
        "_emit_egg_deprecation": {
            "name": "_emit_egg_deprecation",
            "location": 150,
            "return": [],
            "arguments": {
                "location": []
            }
        },
        "_DistributionFinder.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_DistributionFinder._find_impl": {
            "name": "_find_impl",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "_DistributionFinder.find": {
            "name": "find",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "_DistributionFinder.find_linked": {
            "name": "find_linked",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "_DistributionFinder._find_eggs_in_dir": {
            "name": "_find_eggs_in_dir",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "_DistributionFinder._find_eggs_in_zip": {
            "name": "_find_eggs_in_zip",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "_DistributionFinder.find_eggs": {
            "name": "find_eggs",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "Environment.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "Environment.default": {
            "name": "default",
            "location": 163,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Environment.from_paths": {
            "name": "from_paths",
            "location": 167,
            "return": [],
            "arguments": {
                "cls": [],
                "paths": []
            }
        },
        "Environment._iter_distributions": {
            "name": "_iter_distributions",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment.get_distribution": {
            "name": "get_distribution",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/metadata/importlib/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/candidate.py": {
        "InstallationCandidate.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "version": [],
                "link": []
            }
        },
        "InstallationCandidate.__repr__": {
            "name": "__repr__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallationCandidate.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/direct_url.py": {
        "_get": {
            "name": "_get",
            "location": 25,
            "return": [],
            "arguments": {
                "d": [],
                "expected_type": [],
                "key": [],
                "default": []
            }
        },
        "_get_required": {
            "name": "_get_required",
            "location": 41,
            "return": [],
            "arguments": {
                "d": [],
                "expected_type": [],
                "key": [],
                "default": []
            }
        },
        "_exactly_one_of": {
            "name": "_exactly_one_of",
            "location": 50,
            "return": [],
            "arguments": {
                "infos": []
            }
        },
        "_filter_none": {
            "name": "_filter_none",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "VcsInfo.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "vcs": [],
                "commit_id": [],
                "requested_revision": []
            }
        },
        "VcsInfo._from_dict": {
            "name": "_from_dict",
            "location": 83,
            "return": [],
            "arguments": {
                "cls": [],
                "d": []
            }
        },
        "VcsInfo._to_dict": {
            "name": "_to_dict",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveInfo.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "hash": []
            }
        },
        "ArchiveInfo._from_dict": {
            "name": "_from_dict",
            "location": 110,
            "return": [],
            "arguments": {
                "cls": [],
                "d": []
            }
        },
        "ArchiveInfo._to_dict": {
            "name": "_to_dict",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirInfo.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "editable": []
            }
        },
        "DirInfo._from_dict": {
            "name": "_from_dict",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": [],
                "d": []
            }
        },
        "DirInfo._to_dict": {
            "name": "_to_dict",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectUrl.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "info": [],
                "subdirectory": []
            }
        },
        "DirectUrl._remove_auth_from_netloc": {
            "name": "_remove_auth_from_netloc",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "netloc": []
            }
        },
        "DirectUrl.redacted_url": {
            "name": "redacted_url",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectUrl.validate": {
            "name": "validate",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectUrl.from_dict": {
            "name": "from_dict",
            "location": 183,
            "return": [],
            "arguments": {
                "cls": [],
                "d": []
            }
        },
        "DirectUrl.to_dict": {
            "name": "to_dict",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectUrl.from_json": {
            "name": "from_json",
            "location": 205,
            "return": [],
            "arguments": {
                "cls": [],
                "s": []
            }
        },
        "DirectUrl.to_json": {
            "name": "to_json",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectUrl.is_local_editable": {
            "name": "is_local_editable",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/format_control.py": {
        "FormatControl.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "no_binary": [],
                "only_binary": []
            }
        },
        "FormatControl.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FormatControl.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormatControl.handle_mutual_excludes": {
            "name": "handle_mutual_excludes",
            "location": 41,
            "return": [],
            "arguments": {
                "value": [],
                "target": [],
                "other": []
            }
        },
        "FormatControl.get_allowed_formats": {
            "name": "get_allowed_formats",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "canonical_name": []
            }
        },
        "FormatControl.disallow_binaries": {
            "name": "disallow_binaries",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/index.py": {
        "PackageIndex.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "file_storage_domain": []
            }
        },
        "PackageIndex._url_for_path": {
            "name": "_url_for_path",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/installation_report.py": {
        "InstallationReport.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "install_requirements": []
            }
        },
        "InstallationReport._install_req_to_dict": {
            "name": "_install_req_to_dict",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [],
                "ireq": []
            }
        },
        "InstallationReport.to_dict": {
            "name": "to_dict",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/link.py": {
        "_clean_url_path_part": {
            "name": "_clean_url_path_part",
            "location": 94,
            "return": [],
            "arguments": {
                "part": []
            }
        },
        "_clean_file_url_path": {
            "name": "_clean_file_url_path",
            "location": 102,
            "return": [],
            "arguments": {
                "part": []
            }
        },
        "_clean_url_path": {
            "name": "_clean_url_path",
            "location": 119,
            "return": [],
            "arguments": {
                "path": [],
                "is_local_path": []
            }
        },
        "_ensure_quoted_url": {
            "name": "_ensure_quoted_url",
            "location": 141,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "_clean_link": {
            "name": "_clean_link",
            "location": 479,
            "return": [],
            "arguments": {
                "link": []
            }
        },
        "links_equivalent": {
            "name": "links_equivalent",
            "location": 506,
            "return": [],
            "arguments": {
                "link1": [],
                "link2": []
            }
        },
        "LinkHash.__post_init__": {
            "name": "__post_init__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkHash.split_hash_name_and_value": {
            "name": "split_hash_name_and_value",
            "location": 73,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "LinkHash.as_hashes": {
            "name": "as_hashes",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkHash.is_hash_allowed": {
            "name": "is_hash_allowed",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "hashes": []
            }
        },
        "Link.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "comes_from": [],
                "requires_python": [],
                "yanked_reason": [],
                "dist_info_metadata": [],
                "link_hash": [],
                "cache_link_parsing": [],
                "hashes": []
            }
        },
        "Link.from_json": {
            "name": "from_json",
            "location": 234,
            "return": [],
            "arguments": {
                "cls": [],
                "file_data": [],
                "page_url": []
            }
        },
        "Link.from_element": {
            "name": "from_element",
            "location": 269,
            "return": [],
            "arguments": {
                "cls": [],
                "anchor_attribs": [],
                "page_url": [],
                "base_url": []
            }
        },
        "Link.__str__": {
            "name": "__str__",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.__repr__": {
            "name": "__repr__",
            "location": 307,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.url": {
            "name": "url",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.filename": {
            "name": "filename",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.file_path": {
            "name": "file_path",
            "location": 329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.scheme": {
            "name": "scheme",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.netloc": {
            "name": "netloc",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.path": {
            "name": "path",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.splitext": {
            "name": "splitext",
            "location": 347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.ext": {
            "name": "ext",
            "location": 351,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.url_without_fragment": {
            "name": "url_without_fragment",
            "location": 355,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.egg_fragment": {
            "name": "egg_fragment",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.subdirectory_fragment": {
            "name": "subdirectory_fragment",
            "location": 371,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.metadata_link": {
            "name": "metadata_link",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.as_hashes": {
            "name": "as_hashes",
            "location": 392,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.hash": {
            "name": "hash",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.hash_name": {
            "name": "hash_name",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.show_url": {
            "name": "show_url",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_file": {
            "name": "is_file",
            "location": 414,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_existing_dir": {
            "name": "is_existing_dir",
            "location": 417,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_wheel": {
            "name": "is_wheel",
            "location": 421,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_vcs": {
            "name": "is_vcs",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_yanked": {
            "name": "is_yanked",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.has_hash": {
            "name": "has_hash",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.is_hash_allowed": {
            "name": "is_hash_allowed",
            "location": 438,
            "return": [],
            "arguments": {
                "self": [],
                "hashes": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/scheme.py": {
        "Scheme.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "platlib": [],
                "purelib": [],
                "headers": [],
                "scripts": [],
                "data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/search_scope.py": {
        "SearchScope.create": {
            "name": "create",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": [],
                "find_links": [],
                "index_urls": [],
                "no_index": []
            }
        },
        "SearchScope.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "find_links": [],
                "index_urls": [],
                "no_index": []
            }
        },
        "SearchScope.get_formatted_locations": {
            "name": "get_formatted_locations",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchScope.get_index_urls_locations": {
            "name": "get_index_urls_locations",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": []
            }
        },
        "SearchScope.get_index_urls_locations.mkurl_pypi_url": {
            "name": "mkurl_pypi_url",
            "location": 120,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/selection_prefs.py": {
        "SelectionPreferences.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "allow_yanked": [],
                "allow_all_prereleases": [],
                "format_control": [],
                "prefer_binary": [],
                "ignore_requires_python": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/target_python.py": {
        "TargetPython.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "platforms": [],
                "py_version_info": [],
                "abis": [],
                "implementation": []
            }
        },
        "TargetPython.format_given": {
            "name": "format_given",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TargetPython.get_tags": {
            "name": "get_tags",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/wheel.py": {
        "Wheel.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Wheel.get_formatted_file_tags": {
            "name": "get_formatted_file_tags",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.support_index_min": {
            "name": "support_index_min",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "tags": []
            }
        },
        "Wheel.find_most_preferred_tag": {
            "name": "find_most_preferred_tag",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "tags": [],
                "tag_to_priority": []
            }
        },
        "Wheel.supported": {
            "name": "supported",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "tags": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/models/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/auth.py": {
        "get_keyring_auth": {
            "name": "get_keyring_auth",
            "location": 40,
            "return": [],
            "arguments": {
                "url": [],
                "username": []
            }
        },
        "MultiDomainBasicAuth.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "prompting": [],
                "index_urls": []
            }
        },
        "MultiDomainBasicAuth._get_index_url": {
            "name": "_get_index_url",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "MultiDomainBasicAuth._get_new_credentials": {
            "name": "_get_new_credentials",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "original_url": [],
                "allow_netrc": [],
                "allow_keyring": []
            }
        },
        "MultiDomainBasicAuth._get_url_and_credentials": {
            "name": "_get_url_and_credentials",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "original_url": []
            }
        },
        "MultiDomainBasicAuth.__call__": {
            "name": "__call__",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "MultiDomainBasicAuth._prompt_for_password": {
            "name": "_prompt_for_password",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "netloc": []
            }
        },
        "MultiDomainBasicAuth._should_save_password_to_keyring": {
            "name": "_should_save_password_to_keyring",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiDomainBasicAuth.handle_401": {
            "name": "handle_401",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        },
        "MultiDomainBasicAuth.warn_on_401": {
            "name": "warn_on_401",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        },
        "MultiDomainBasicAuth.save_credentials": {
            "name": "save_credentials",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/cache.py": {
        "is_from_cache": {
            "name": "is_from_cache",
            "location": 16,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "suppressed_cache_errors": {
            "name": "suppressed_cache_errors",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "SafeFileCache.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "directory": []
            }
        },
        "SafeFileCache._get_cache_path": {
            "name": "_get_cache_path",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SafeFileCache.get": {
            "name": "get",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SafeFileCache.set": {
            "name": "set",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expires": []
            }
        },
        "SafeFileCache.delete": {
            "name": "delete",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/download.py": {
        "_get_http_response_size": {
            "name": "_get_http_response_size",
            "location": 23,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "_prepare_download": {
            "name": "_prepare_download",
            "location": 30,
            "return": [],
            "arguments": {
                "resp": [],
                "link": [],
                "progress_bar": []
            }
        },
        "sanitize_content_filename": {
            "name": "sanitize_content_filename",
            "location": 72,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "parse_content_disposition": {
            "name": "parse_content_disposition",
            "location": 79,
            "return": [],
            "arguments": {
                "content_disposition": [],
                "default_filename": []
            }
        },
        "_get_http_response_filename": {
            "name": "_get_http_response_filename",
            "location": 94,
            "return": [],
            "arguments": {
                "resp": [],
                "link": []
            }
        },
        "_http_get_download": {
            "name": "_http_get_download",
            "location": 115,
            "return": [],
            "arguments": {
                "session": [],
                "link": []
            }
        },
        "Downloader.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "progress_bar": []
            }
        },
        "Downloader.__call__": {
            "name": "__call__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "location": []
            }
        },
        "BatchDownloader.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "progress_bar": []
            }
        },
        "BatchDownloader.__call__": {
            "name": "__call__",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "links": [],
                "location": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/lazy_wheel.py": {
        "dist_from_wheel_url": {
            "name": "dist_from_wheel_url",
            "location": 23,
            "return": [],
            "arguments": {
                "name": [],
                "url": [],
                "session": []
            }
        },
        "LazyZipOverHTTP.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "session": [],
                "chunk_size": []
            }
        },
        "LazyZipOverHTTP.mode": {
            "name": "mode",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.name": {
            "name": "name",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.seekable": {
            "name": "seekable",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.close": {
            "name": "close",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.closed": {
            "name": "closed",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.read": {
            "name": "read",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "LazyZipOverHTTP.readable": {
            "name": "readable",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.seek": {
            "name": "seek",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "whence": []
            }
        },
        "LazyZipOverHTTP.tell": {
            "name": "tell",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.truncate": {
            "name": "truncate",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "LazyZipOverHTTP.writable": {
            "name": "writable",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.__enter__": {
            "name": "__enter__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP.__exit__": {
            "name": "__exit__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP._stay": {
            "name": "_stay",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP._check_zip": {
            "name": "_check_zip",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyZipOverHTTP._stream_response": {
            "name": "_stream_response",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "base_headers": []
            }
        },
        "LazyZipOverHTTP._merge": {
            "name": "_merge",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "left": [],
                "right": []
            }
        },
        "LazyZipOverHTTP._download": {
            "name": "_download",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/session.py": {
        "looks_like_ci": {
            "name": "looks_like_ci",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "user_agent": {
            "name": "user_agent",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "LocalFSAdapter.send": {
            "name": "send",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "stream": [],
                "timeout": [],
                "verify": [],
                "cert": [],
                "proxies": []
            }
        },
        "LocalFSAdapter.close": {
            "name": "close",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SSLContextAdapterMixin.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SSLContextAdapterMixin.init_poolmanager": {
            "name": "init_poolmanager",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "connections": [],
                "maxsize": [],
                "block": []
            }
        },
        "InsecureHTTPAdapter.cert_verify": {
            "name": "cert_verify",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "conn": [],
                "url": [],
                "verify": [],
                "cert": []
            }
        },
        "InsecureCacheControlAdapter.cert_verify": {
            "name": "cert_verify",
            "location": 308,
            "return": [],
            "arguments": {
                "self": [],
                "conn": [],
                "url": [],
                "verify": [],
                "cert": []
            }
        },
        "PipSession.__init__": {
            "name": "__init__",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipSession.update_index_urls": {
            "name": "update_index_urls",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "new_index_urls": []
            }
        },
        "PipSession.add_trusted_host": {
            "name": "add_trusted_host",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "source": [],
                "suppress_logging": []
            }
        },
        "PipSession.iter_secure_origins": {
            "name": "iter_secure_origins",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipSession.is_secure_origin": {
            "name": "is_secure_origin",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "PipSession.request": {
            "name": "request",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/utils.py": {
        "raise_for_status": {
            "name": "raise_for_status",
            "location": 29,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "response_chunks": {
            "name": "response_chunks",
            "location": 57,
            "return": [],
            "arguments": {
                "response": [],
                "chunk_size": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/xmlrpc.py": {
        "PipXmlrpcTransport.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "index_url": [],
                "session": [],
                "use_datetime": []
            }
        },
        "PipXmlrpcTransport.request": {
            "name": "request",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "handler": [],
                "request_body": [],
                "verbose": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/network/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/check.py": {
        "create_package_set_from_installed": {
            "name": "create_package_set_from_installed",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "check_package_set": {
            "name": "check_package_set",
            "location": 51,
            "return": [],
            "arguments": {
                "package_set": [],
                "should_ignore": []
            }
        },
        "check_install_conflicts": {
            "name": "check_install_conflicts",
            "location": 96,
            "return": [],
            "arguments": {
                "to_install": []
            }
        },
        "_simulate_installation_of": {
            "name": "_simulate_installation_of",
            "location": 116,
            "return": [],
            "arguments": {
                "to_install": [],
                "package_set": []
            }
        },
        "_create_whitelist": {
            "name": "_create_whitelist",
            "location": 135,
            "return": [],
            "arguments": {
                "would_be_installed": [],
                "package_set": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/freeze.py": {
        "freeze": {
            "name": "freeze",
            "location": 26,
            "return": [],
            "arguments": {
                "requirement": [],
                "local_only": [],
                "user_only": [],
                "paths": [],
                "isolated": [],
                "exclude_editable": [],
                "skip": []
            }
        },
        "_format_as_name_version": {
            "name": "_format_as_name_version",
            "location": 147,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "_get_editable_info": {
            "name": "_get_editable_info",
            "location": 153,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "FrozenRequirement.__init__": {
            "name": "__init__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "req": [],
                "editable": [],
                "comments": []
            }
        },
        "FrozenRequirement.from_dist": {
            "name": "from_dist",
            "location": 234,
            "return": [],
            "arguments": {
                "cls": [],
                "dist": []
            }
        },
        "FrozenRequirement.__str__": {
            "name": "__str__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/prepare.py": {
        "_get_prepared_distribution": {
            "name": "_get_prepared_distribution",
            "location": 59,
            "return": [],
            "arguments": {
                "req": [],
                "build_tracker": [],
                "finder": [],
                "build_isolation": [],
                "check_build_deps": []
            }
        },
        "unpack_vcs_link": {
            "name": "unpack_vcs_link",
            "location": 75,
            "return": [],
            "arguments": {
                "link": [],
                "location": [],
                "verbosity": []
            }
        },
        "get_http_url": {
            "name": "get_http_url",
            "location": 90,
            "return": [],
            "arguments": {
                "link": [],
                "download": [],
                "download_dir": [],
                "hashes": []
            }
        },
        "get_file_url": {
            "name": "get_file_url",
            "location": 114,
            "return": [],
            "arguments": {
                "link": [],
                "download_dir": [],
                "hashes": []
            }
        },
        "unpack_url": {
            "name": "unpack_url",
            "location": 138,
            "return": [],
            "arguments": {
                "link": [],
                "location": [],
                "download": [],
                "verbosity": [],
                "download_dir": [],
                "hashes": []
            }
        },
        "_check_download_dir": {
            "name": "_check_download_dir",
            "location": 181,
            "return": [],
            "arguments": {
                "link": [],
                "download_dir": [],
                "hashes": []
            }
        },
        "File.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "content_type": []
            }
        },
        "RequirementPreparer.__init__": {
            "name": "__init__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "build_dir": [],
                "download_dir": [],
                "src_dir": [],
                "build_isolation": [],
                "check_build_deps": [],
                "build_tracker": [],
                "session": [],
                "progress_bar": [],
                "finder": [],
                "require_hashes": [],
                "use_user_site": [],
                "lazy_wheel": [],
                "verbosity": []
            }
        },
        "RequirementPreparer._log_preparing_link": {
            "name": "_log_preparing_link",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer._ensure_link_req_src_dir": {
            "name": "_ensure_link_req_src_dir",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "parallel_builds": []
            }
        },
        "RequirementPreparer._get_linked_req_hashes": {
            "name": "_get_linked_req_hashes",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer._fetch_metadata_only": {
            "name": "_fetch_metadata_only",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer._fetch_metadata_using_link_data_attr": {
            "name": "_fetch_metadata_using_link_data_attr",
            "location": 364,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer._fetch_metadata_using_lazy_wheel": {
            "name": "_fetch_metadata_using_lazy_wheel",
            "location": 405,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "RequirementPreparer._complete_partial_requirements": {
            "name": "_complete_partial_requirements",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "partially_downloaded_reqs": [],
                "parallel_builds": []
            }
        },
        "RequirementPreparer.prepare_linked_requirement": {
            "name": "prepare_linked_requirement",
            "location": 466,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "parallel_builds": []
            }
        },
        "RequirementPreparer.prepare_linked_requirements_more": {
            "name": "prepare_linked_requirements_more",
            "location": 493,
            "return": [],
            "arguments": {
                "self": [],
                "reqs": [],
                "parallel_builds": []
            }
        },
        "RequirementPreparer._prepare_linked_requirement": {
            "name": "_prepare_linked_requirement",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "parallel_builds": []
            }
        },
        "RequirementPreparer.save_linked_requirement": {
            "name": "save_linked_requirement",
            "location": 586,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer.prepare_editable_requirement": {
            "name": "prepare_editable_requirement",
            "location": 612,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "RequirementPreparer.prepare_installed_requirement": {
            "name": "prepare_installed_requirement",
            "location": 645,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "skip_reason": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/build_tracker.py": {
        "update_env_context_manager": {
            "name": "update_env_context_manager",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "get_build_tracker": {
            "name": "get_build_tracker",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "BuildTracker.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "BuildTracker.__enter__": {
            "name": "__enter__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildTracker.__exit__": {
            "name": "__exit__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "BuildTracker._entry_path": {
            "name": "_entry_path",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "BuildTracker.add": {
            "name": "add",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "BuildTracker.remove": {
            "name": "remove",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "BuildTracker.cleanup": {
            "name": "cleanup",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildTracker.track": {
            "name": "track",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/metadata.py": {
        "generate_metadata": {
            "name": "generate_metadata",
            "location": 17,
            "return": [],
            "arguments": {
                "build_env": [],
                "backend": [],
                "details": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/metadata_editable.py": {
        "generate_editable_metadata": {
            "name": "generate_editable_metadata",
            "location": 17,
            "return": [],
            "arguments": {
                "build_env": [],
                "backend": [],
                "details": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/metadata_legacy.py": {
        "_find_egg_info": {
            "name": "_find_egg_info",
            "location": 21,
            "return": [],
            "arguments": {
                "directory": []
            }
        },
        "generate_metadata": {
            "name": "generate_metadata",
            "location": 36,
            "return": [],
            "arguments": {
                "build_env": [],
                "setup_py_path": [],
                "source_dir": [],
                "isolated": [],
                "details": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/wheel.py": {
        "build_wheel_pep517": {
            "name": "build_wheel_pep517",
            "location": 12,
            "return": [],
            "arguments": {
                "name": [],
                "backend": [],
                "metadata_directory": [],
                "tempd": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/wheel_editable.py": {
        "build_wheel_editable": {
            "name": "build_wheel_editable",
            "location": 12,
            "return": [],
            "arguments": {
                "name": [],
                "backend": [],
                "metadata_directory": [],
                "tempd": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/wheel_legacy.py": {
        "format_command_result": {
            "name": "format_command_result",
            "location": 12,
            "return": [],
            "arguments": {
                "command_args": [],
                "command_output": []
            }
        },
        "get_legacy_build_wheel_path": {
            "name": "get_legacy_build_wheel_path",
            "location": 32,
            "return": [],
            "arguments": {
                "names": [],
                "temp_dir": [],
                "name": [],
                "command_args": [],
                "command_output": []
            }
        },
        "build_wheel_legacy": {
            "name": "build_wheel_legacy",
            "location": 59,
            "return": [],
            "arguments": {
                "name": [],
                "setup_py_path": [],
                "source_dir": [],
                "global_options": [],
                "build_options": [],
                "tempd": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/build/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/install/editable_legacy.py": {
        "install_editable": {
            "name": "install_editable",
            "location": 14,
            "return": [],
            "arguments": {
                "install_options": [],
                "global_options": [],
                "prefix": [],
                "home": [],
                "use_user_site": [],
                "name": [],
                "setup_py_path": [],
                "isolated": [],
                "build_env": [],
                "unpacked_source_directory": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/install/legacy.py": {
        "write_installed_files_from_setuptools_record": {
            "name": "write_installed_files_from_setuptools_record",
            "location": 20,
            "return": [],
            "arguments": {
                "record_lines": [],
                "root": [],
                "req_description": []
            }
        },
        "install": {
            "name": "install",
            "location": 57,
            "return": [],
            "arguments": {
                "install_options": [],
                "global_options": [],
                "root": [],
                "home": [],
                "prefix": [],
                "use_user_site": [],
                "pycompile": [],
                "scheme": [],
                "setup_py_path": [],
                "isolated": [],
                "req_name": [],
                "build_env": [],
                "unpacked_source_directory": [],
                "req_description": []
            }
        },
        "write_installed_files_from_setuptools_record.prepend_root": {
            "name": "prepend_root",
            "location": 25,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/install/wheel.py": {
        "rehash": {
            "name": "rehash",
            "location": 80,
            "return": [],
            "arguments": {
                "path": [],
                "blocksize": []
            }
        },
        "csv_io_kwargs": {
            "name": "csv_io_kwargs",
            "location": 87,
            "return": [],
            "arguments": {
                "mode": []
            }
        },
        "fix_script": {
            "name": "fix_script",
            "location": 94,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "wheel_root_is_purelib": {
            "name": "wheel_root_is_purelib",
            "location": 114,
            "return": [],
            "arguments": {
                "metadata": []
            }
        },
        "get_entrypoints": {
            "name": "get_entrypoints",
            "location": 118,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "message_about_scripts_not_on_PATH": {
            "name": "message_about_scripts_not_on_PATH",
            "location": 129,
            "return": [],
            "arguments": {
                "scripts": []
            }
        },
        "_normalized_outrows": {
            "name": "_normalized_outrows",
            "location": 201,
            "return": [],
            "arguments": {
                "outrows": []
            }
        },
        "_record_to_fs_path": {
            "name": "_record_to_fs_path",
            "location": 227,
            "return": [],
            "arguments": {
                "record_path": [],
                "lib_dir": []
            }
        },
        "_fs_to_record_path": {
            "name": "_fs_to_record_path",
            "location": 231,
            "return": [],
            "arguments": {
                "path": [],
                "lib_dir": []
            }
        },
        "get_csv_rows_for_installed": {
            "name": "get_csv_rows_for_installed",
            "location": 241,
            "return": [],
            "arguments": {
                "old_csv_rows": [],
                "installed": [],
                "changed": [],
                "generated": [],
                "lib_dir": []
            }
        },
        "get_console_script_specs": {
            "name": "get_console_script_specs",
            "location": 273,
            "return": [],
            "arguments": {
                "console": []
            }
        },
        "_raise_for_invalid_entrypoint": {
            "name": "_raise_for_invalid_entrypoint",
            "location": 416,
            "return": [],
            "arguments": {
                "specification": []
            }
        },
        "_install_wheel": {
            "name": "_install_wheel",
            "location": 430,
            "return": [],
            "arguments": {
                "name": [],
                "wheel_zip": [],
                "wheel_path": [],
                "scheme": [],
                "pycompile": [],
                "warn_script_location": [],
                "direct_url": [],
                "requested": []
            }
        },
        "req_error_context": {
            "name": "req_error_context",
            "location": 709,
            "return": [],
            "arguments": {
                "req_description": []
            }
        },
        "install_wheel": {
            "name": "install_wheel",
            "location": 717,
            "return": [],
            "arguments": {
                "name": [],
                "wheel_path": [],
                "scheme": [],
                "req_description": [],
                "pycompile": [],
                "warn_script_location": [],
                "direct_url": [],
                "requested": []
            }
        },
        "ZipBackedFile.__init__": {
            "name": "__init__",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "src_record_path": [],
                "dest_path": [],
                "zip_file": []
            }
        },
        "ZipBackedFile._getinfo": {
            "name": "_getinfo",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipBackedFile.save": {
            "name": "save",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScriptFile.__init__": {
            "name": "__init__",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "ScriptFile.save": {
            "name": "save",
            "location": 401,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MissingCallableSuffix.__init__": {
            "name": "__init__",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "entry_point": []
            }
        },
        "PipScriptMaker.make": {
            "name": "make",
            "location": 423,
            "return": [],
            "arguments": {
                "self": [],
                "specification": [],
                "options": []
            }
        },
        "_install_wheel.record_installed": {
            "name": "record_installed",
            "location": 470,
            "return": [],
            "arguments": {
                "srcfile": [],
                "destfile": [],
                "modified": []
            }
        },
        "_install_wheel.is_dir_path": {
            "name": "is_dir_path",
            "location": 479,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_install_wheel.assert_no_path_traversal": {
            "name": "assert_no_path_traversal",
            "location": 482,
            "return": [],
            "arguments": {
                "dest_dir_path": [],
                "target_path": []
            }
        },
        "_install_wheel.root_scheme_file_maker": {
            "name": "root_scheme_file_maker",
            "location": 492,
            "return": [],
            "arguments": {
                "zip_file": [],
                "dest": []
            }
        },
        "_install_wheel.data_scheme_file_maker": {
            "name": "data_scheme_file_maker",
            "location": 503,
            "return": [],
            "arguments": {
                "zip_file": [],
                "scheme": []
            }
        },
        "_install_wheel.is_data_scheme_path": {
            "name": "is_data_scheme_path",
            "location": 536,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_install_wheel.is_script_scheme_path": {
            "name": "is_script_scheme_path",
            "location": 546,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_install_wheel.is_entrypoint_wrapper": {
            "name": "is_entrypoint_wrapper",
            "location": 565,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "_install_wheel.pyc_source_file_paths": {
            "name": "pyc_source_file_paths",
            "location": 592,
            "return": [],
            "arguments": {}
        },
        "_install_wheel.pyc_output_path": {
            "name": "pyc_output_path",
            "location": 605,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_install_wheel._generate_file": {
            "name": "_generate_file",
            "location": 659,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "File.save": {
            "name": "save",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_install_wheel.root_scheme_file_maker.make_root_scheme_file": {
            "name": "make_root_scheme_file",
            "location": 495,
            "return": [],
            "arguments": {
                "record_path": []
            }
        },
        "_install_wheel.data_scheme_file_maker.make_data_scheme_file": {
            "name": "make_data_scheme_file",
            "location": 508,
            "return": [],
            "arguments": {
                "record_path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/operations/install/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/constructors.py": {
        "_strip_extras": {
            "name": "_strip_extras",
            "location": 42,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "convert_extras": {
            "name": "convert_extras",
            "location": 54,
            "return": [],
            "arguments": {
                "extras": []
            }
        },
        "parse_editable": {
            "name": "parse_editable",
            "location": 60,
            "return": [],
            "arguments": {
                "editable_req": []
            }
        },
        "check_first_requirement_in_file": {
            "name": "check_first_requirement_in_file",
            "location": 115,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "deduce_helpful_msg": {
            "name": "deduce_helpful_msg",
            "location": 143,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "parse_req_from_editable": {
            "name": "parse_req_from_editable",
            "location": 182,
            "return": [],
            "arguments": {
                "editable_req": []
            }
        },
        "install_req_from_editable": {
            "name": "install_req_from_editable",
            "location": 201,
            "return": [],
            "arguments": {
                "editable_req": [],
                "comes_from": [],
                "use_pep517": [],
                "isolated": [],
                "options": [],
                "constraint": [],
                "user_supplied": [],
                "permit_editable_wheels": [],
                "config_settings": []
            }
        },
        "_looks_like_path": {
            "name": "_looks_like_path",
            "location": 233,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_get_url_from_path": {
            "name": "_get_url_from_path",
            "location": 252,
            "return": [],
            "arguments": {
                "path": [],
                "name": []
            }
        },
        "parse_req_from_line": {
            "name": "parse_req_from_line",
            "location": 286,
            "return": [],
            "arguments": {
                "name": [],
                "line_source": []
            }
        },
        "install_req_from_line": {
            "name": "install_req_from_line",
            "location": 376,
            "return": [],
            "arguments": {
                "name": [],
                "comes_from": [],
                "use_pep517": [],
                "isolated": [],
                "options": [],
                "constraint": [],
                "line_source": [],
                "user_supplied": [],
                "config_settings": []
            }
        },
        "install_req_from_req_string": {
            "name": "install_req_from_req_string",
            "location": 412,
            "return": [],
            "arguments": {
                "req_string": [],
                "comes_from": [],
                "isolated": [],
                "use_pep517": [],
                "user_supplied": [],
                "config_settings": []
            }
        },
        "install_req_from_parsed_requirement": {
            "name": "install_req_from_parsed_requirement",
            "location": 452,
            "return": [],
            "arguments": {
                "parsed_req": [],
                "isolated": [],
                "use_pep517": [],
                "user_supplied": [],
                "config_settings": []
            }
        },
        "install_req_from_link_and_ireq": {
            "name": "install_req_from_link_and_ireq",
            "location": 485,
            "return": [],
            "arguments": {
                "link": [],
                "ireq": []
            }
        },
        "RequirementParts.__init__": {
            "name": "__init__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "link": [],
                "markers": [],
                "extras": []
            }
        },
        "parse_req_from_line.with_source": {
            "name": "with_source",
            "location": 334,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "parse_req_from_line._parse_req_string": {
            "name": "_parse_req_string",
            "location": 339,
            "return": [],
            "arguments": {
                "req_as_string": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/req_file.py": {
        "parse_requirements": {
            "name": "parse_requirements",
            "location": 126,
            "return": [],
            "arguments": {
                "filename": [],
                "session": [],
                "finder": [],
                "options": [],
                "constraint": []
            }
        },
        "preprocess": {
            "name": "preprocess",
            "location": 153,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "handle_requirement_line": {
            "name": "handle_requirement_line",
            "location": 165,
            "return": [],
            "arguments": {
                "line": [],
                "options": []
            }
        },
        "handle_option_line": {
            "name": "handle_option_line",
            "location": 206,
            "return": [],
            "arguments": {
                "opts": [],
                "filename": [],
                "lineno": [],
                "finder": [],
                "options": [],
                "session": []
            }
        },
        "handle_line": {
            "name": "handle_line",
            "location": 270,
            "return": [],
            "arguments": {
                "line": [],
                "options": [],
                "finder": [],
                "session": []
            }
        },
        "get_line_parser": {
            "name": "get_line_parser",
            "location": 384,
            "return": [],
            "arguments": {
                "finder": []
            }
        },
        "break_args_options": {
            "name": "break_args_options",
            "location": 408,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "build_parser": {
            "name": "build_parser",
            "location": 430,
            "return": [],
            "arguments": {}
        },
        "join_lines": {
            "name": "join_lines",
            "location": 453,
            "return": [],
            "arguments": {
                "lines_enum": []
            }
        },
        "ignore_comments": {
            "name": "ignore_comments",
            "location": 484,
            "return": [],
            "arguments": {
                "lines_enum": []
            }
        },
        "expand_env_variables": {
            "name": "expand_env_variables",
            "location": 495,
            "return": [],
            "arguments": {
                "lines_enum": []
            }
        },
        "get_file_content": {
            "name": "get_file_content",
            "location": 522,
            "return": [],
            "arguments": {
                "url": [],
                "session": []
            }
        },
        "ParsedRequirement.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "is_editable": [],
                "comes_from": [],
                "constraint": [],
                "options": [],
                "line_source": []
            }
        },
        "ParsedLine.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "lineno": [],
                "args": [],
                "opts": [],
                "constraint": []
            }
        },
        "RequirementsFileParser.__init__": {
            "name": "__init__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "line_parser": []
            }
        },
        "RequirementsFileParser.parse": {
            "name": "parse",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "constraint": []
            }
        },
        "RequirementsFileParser._parse_and_recurse": {
            "name": "_parse_and_recurse",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "constraint": []
            }
        },
        "RequirementsFileParser._parse_file": {
            "name": "_parse_file",
            "location": 360,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "constraint": []
            }
        },
        "get_line_parser.parse_line": {
            "name": "parse_line",
            "location": 385,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "OptionParsingError.__init__": {
            "name": "__init__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "build_parser.parser_exit": {
            "name": "parser_exit",
            "location": 443,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/req_install.py": {
        "check_invalid_constraint_type": {
            "name": "check_invalid_constraint_type",
            "location": 854,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "_has_option": {
            "name": "_has_option",
            "location": 883,
            "return": [],
            "arguments": {
                "options": [],
                "reqs": [],
                "option": []
            }
        },
        "_install_option_ignored": {
            "name": "_install_option_ignored",
            "location": 892,
            "return": [],
            "arguments": {
                "install_options": [],
                "reqs": []
            }
        },
        "check_legacy_setup_py_options": {
            "name": "check_legacy_setup_py_options",
            "location": 907,
            "return": [],
            "arguments": {
                "options": [],
                "reqs": [],
                "mode": []
            }
        },
        "InstallRequirement.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "comes_from": [],
                "editable": [],
                "link": [],
                "markers": [],
                "use_pep517": [],
                "isolated": [],
                "install_options": [],
                "global_options": [],
                "hash_options": [],
                "config_settings": [],
                "constraint": [],
                "extras": [],
                "user_supplied": [],
                "permit_editable_wheels": []
            }
        },
        "InstallRequirement.__str__": {
            "name": "__str__",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.__repr__": {
            "name": "__repr__",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.format_debug": {
            "name": "format_debug",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.name": {
            "name": "name",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.supports_pyproject_editable": {
            "name": "supports_pyproject_editable",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.specifier": {
            "name": "specifier",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.is_pinned": {
            "name": "is_pinned",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.match_markers": {
            "name": "match_markers",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "extras_requested": []
            }
        },
        "InstallRequirement.has_hash_options": {
            "name": "has_hash_options",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.hashes": {
            "name": "hashes",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "trust_internet": []
            }
        },
        "InstallRequirement.from_path": {
            "name": "from_path",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.ensure_build_location": {
            "name": "ensure_build_location",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "build_dir": [],
                "autodelete": [],
                "parallel_builds": []
            }
        },
        "InstallRequirement._set_requirement": {
            "name": "_set_requirement",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.warn_on_mismatching_name": {
            "name": "warn_on_mismatching_name",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.check_if_exists": {
            "name": "check_if_exists",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "use_user_site": []
            }
        },
        "InstallRequirement.is_wheel": {
            "name": "is_wheel",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.unpacked_source_directory": {
            "name": "unpacked_source_directory",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.setup_py_path": {
            "name": "setup_py_path",
            "location": 447,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.setup_cfg_path": {
            "name": "setup_cfg_path",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.pyproject_toml_path": {
            "name": "pyproject_toml_path",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.load_pyproject_toml": {
            "name": "load_pyproject_toml",
            "location": 465,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.isolated_editable_sanity_check": {
            "name": "isolated_editable_sanity_check",
            "location": 492,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.prepare_metadata": {
            "name": "prepare_metadata",
            "location": 513,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.metadata": {
            "name": "metadata",
            "location": 558,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.get_dist": {
            "name": "get_dist",
            "location": 564,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.assert_source_matches_version": {
            "name": "assert_source_matches_version",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.ensure_has_source_dir": {
            "name": "ensure_has_source_dir",
            "location": 594,
            "return": [],
            "arguments": {
                "self": [],
                "parent_dir": [],
                "autodelete": [],
                "parallel_builds": []
            }
        },
        "InstallRequirement.update_editable": {
            "name": "update_editable",
            "location": 617,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstallRequirement.uninstall": {
            "name": "uninstall",
            "location": 637,
            "return": [],
            "arguments": {
                "self": [],
                "auto_confirm": [],
                "verbose": []
            }
        },
        "InstallRequirement._get_archive_name": {
            "name": "_get_archive_name",
            "location": 663,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "parentdir": [],
                "rootdir": []
            }
        },
        "InstallRequirement.archive": {
            "name": "archive",
            "location": 676,
            "return": [],
            "arguments": {
                "self": [],
                "build_dir": []
            }
        },
        "InstallRequirement.install": {
            "name": "install",
            "location": 743,
            "return": [],
            "arguments": {
                "self": [],
                "install_options": [],
                "global_options": [],
                "root": [],
                "home": [],
                "prefix": [],
                "warn_script_location": [],
                "use_user_site": [],
                "pycompile": []
            }
        },
        "InstallRequirement._get_archive_name._clean_zip_name": {
            "name": "_clean_zip_name",
            "location": 664,
            "return": [],
            "arguments": {
                "name": [],
                "prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/req_set.py": {
        "RequirementSet.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "check_supported_wheels": []
            }
        },
        "RequirementSet.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequirementSet.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequirementSet.add_unnamed_requirement": {
            "name": "add_unnamed_requirement",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "install_req": []
            }
        },
        "RequirementSet.add_named_requirement": {
            "name": "add_named_requirement",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "install_req": []
            }
        },
        "RequirementSet.has_requirement": {
            "name": "has_requirement",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequirementSet.get_requirement": {
            "name": "get_requirement",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequirementSet.all_requirements": {
            "name": "all_requirements",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequirementSet.requirements_to_install": {
            "name": "requirements_to_install",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/req_uninstall.py": {
        "_script_names": {
            "name": "_script_names",
            "location": 20,
            "return": [],
            "arguments": {
                "bin_dir": [],
                "script_name": [],
                "is_gui": []
            }
        },
        "_unique": {
            "name": "_unique",
            "location": 39,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "uninstallation_paths": {
            "name": "uninstallation_paths",
            "location": 54,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "compact": {
            "name": "compact",
            "location": 97,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "compress_for_rename": {
            "name": "compress_for_rename",
            "location": 116,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "compress_for_output_listing": {
            "name": "compress_for_output_listing",
            "location": 150,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "_unique.unique": {
            "name": "unique",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "compress_for_rename.norm_join": {
            "name": "norm_join",
            "location": 127,
            "return": [],
            "arguments": {}
        },
        "StashedUninstallPathSet.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StashedUninstallPathSet._get_directory_stash": {
            "name": "_get_directory_stash",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "StashedUninstallPathSet._get_file_stash": {
            "name": "_get_file_stash",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "StashedUninstallPathSet.stash": {
            "name": "stash",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "StashedUninstallPathSet.commit": {
            "name": "commit",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StashedUninstallPathSet.rollback": {
            "name": "rollback",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StashedUninstallPathSet.can_rollback": {
            "name": "can_rollback",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallPathSet.__init__": {
            "name": "__init__",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "UninstallPathSet._permitted": {
            "name": "_permitted",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "UninstallPathSet.add": {
            "name": "add",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "UninstallPathSet.add_pth": {
            "name": "add_pth",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "pth_file": [],
                "entry": []
            }
        },
        "UninstallPathSet.remove": {
            "name": "remove",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "auto_confirm": [],
                "verbose": []
            }
        },
        "UninstallPathSet._allowed_to_proceed": {
            "name": "_allowed_to_proceed",
            "location": 381,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": []
            }
        },
        "UninstallPathSet.rollback": {
            "name": "rollback",
            "location": 409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallPathSet.commit": {
            "name": "commit",
            "location": 422,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallPathSet.from_dist": {
            "name": "from_dist",
            "location": 427,
            "return": [],
            "arguments": {
                "cls": [],
                "dist": []
            }
        },
        "UninstallPthEntries.__init__": {
            "name": "__init__",
            "location": 586,
            "return": [],
            "arguments": {
                "self": [],
                "pth_file": []
            }
        },
        "UninstallPthEntries.add": {
            "name": "add",
            "location": 591,
            "return": [],
            "arguments": {
                "self": [],
                "entry": []
            }
        },
        "UninstallPthEntries.remove": {
            "name": "remove",
            "location": 606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallPthEntries.rollback": {
            "name": "rollback",
            "location": 633,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UninstallPathSet._allowed_to_proceed._display": {
            "name": "_display",
            "location": 384,
            "return": [],
            "arguments": {
                "msg": [],
                "paths": []
            }
        },
        "UninstallPathSet.from_dist.iter_scripts_to_remove": {
            "name": "iter_scripts_to_remove",
            "location": 569,
            "return": [],
            "arguments": {
                "dist": [],
                "bin_dir": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/req/__init__.py": {
        "_validate_requirements": {
            "name": "_validate_requirements",
            "location": 29,
            "return": [],
            "arguments": {
                "requirements": []
            }
        },
        "install_given_reqs": {
            "name": "install_given_reqs",
            "location": 37,
            "return": [],
            "arguments": {
                "requirements": [],
                "install_options": [],
                "global_options": [],
                "root": [],
                "home": [],
                "prefix": [],
                "warn_script_location": [],
                "use_user_site": [],
                "pycompile": []
            }
        },
        "InstallationResult.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "InstallationResult.__repr__": {
            "name": "__repr__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/base.py": {
        "BaseResolver.resolve": {
            "name": "resolve",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "root_reqs": [],
                "check_supported_wheels": []
            }
        },
        "BaseResolver.get_installation_order": {
            "name": "get_installation_order",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "req_set": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/legacy/resolver.py": {
        "_check_dist_requires_python": {
            "name": "_check_dist_requires_python",
            "location": 58,
            "return": [],
            "arguments": {
                "dist": [],
                "version_info": [],
                "ignore_requires_python": []
            }
        },
        "Resolver.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "preparer": [],
                "finder": [],
                "wheel_cache": [],
                "make_install_req": [],
                "use_user_site": [],
                "ignore_dependencies": [],
                "ignore_installed": [],
                "ignore_requires_python": [],
                "force_reinstall": [],
                "upgrade_strategy": [],
                "py_version_info": []
            }
        },
        "Resolver.resolve": {
            "name": "resolve",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "root_reqs": [],
                "check_supported_wheels": []
            }
        },
        "Resolver._add_requirement_to_set": {
            "name": "_add_requirement_to_set",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_set": [],
                "install_req": [],
                "parent_req_name": [],
                "extras_requested": []
            }
        },
        "Resolver._is_upgrade_allowed": {
            "name": "_is_upgrade_allowed",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Resolver._set_req_to_reinstall": {
            "name": "_set_req_to_reinstall",
            "location": 322,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Resolver._check_skip_installed": {
            "name": "_check_skip_installed",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "req_to_install": []
            }
        },
        "Resolver._find_requirement_link": {
            "name": "_find_requirement_link",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Resolver._populate_link": {
            "name": "_populate_link",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Resolver._get_dist_for": {
            "name": "_get_dist_for",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Resolver._resolve_one": {
            "name": "_resolve_one",
            "location": 491,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_set": [],
                "req_to_install": []
            }
        },
        "Resolver.get_installation_order": {
            "name": "get_installation_order",
            "location": 573,
            "return": [],
            "arguments": {
                "self": [],
                "req_set": []
            }
        },
        "Resolver._resolve_one.add_req": {
            "name": "add_req",
            "location": 520,
            "return": [],
            "arguments": {
                "subreq": [],
                "extras_requested": []
            }
        },
        "Resolver.get_installation_order.schedule": {
            "name": "schedule",
            "location": 588,
            "return": [],
            "arguments": {
                "req": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/legacy/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/base.py": {
        "format_name": {
            "name": "format_name",
            "location": 15,
            "return": [],
            "arguments": {
                "project": [],
                "extras": []
            }
        },
        "_match_link": {
            "name": "_match_link",
            "location": 92,
            "return": [],
            "arguments": {
                "link": [],
                "candidate": []
            }
        },
        "Constraint.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "specifier": [],
                "hashes": [],
                "links": []
            }
        },
        "Constraint.empty": {
            "name": "empty",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Constraint.from_ireq": {
            "name": "from_ireq",
            "location": 35,
            "return": [],
            "arguments": {
                "cls": [],
                "ireq": []
            }
        },
        "Constraint.__bool__": {
            "name": "__bool__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Constraint.__and__": {
            "name": "__and__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Constraint.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "Requirement.project_name": {
            "name": "project_name",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.name": {
            "name": "name",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "Requirement.get_candidate_lookup": {
            "name": "get_candidate_lookup",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.format_for_error": {
            "name": "format_for_error",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.project_name": {
            "name": "project_name",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.name": {
            "name": "name",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.version": {
            "name": "version",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.is_installed": {
            "name": "is_installed",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.is_editable": {
            "name": "is_editable",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.source_link": {
            "name": "source_link",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "with_requires": []
            }
        },
        "Candidate.get_install_requirement": {
            "name": "get_install_requirement",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Candidate.format_for_error": {
            "name": "format_for_error",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/candidates.py": {
        "as_base_candidate": {
            "name": "as_base_candidate",
            "location": 41,
            "return": [],
            "arguments": {
                "candidate": []
            }
        },
        "make_install_req_from_link": {
            "name": "make_install_req_from_link",
            "location": 53,
            "return": [],
            "arguments": {
                "link": [],
                "template": []
            }
        },
        "make_install_req_from_editable": {
            "name": "make_install_req_from_editable",
            "location": 80,
            "return": [],
            "arguments": {
                "link": [],
                "template": []
            }
        },
        "_make_install_req_from_dist": {
            "name": "_make_install_req_from_dist",
            "location": 101,
            "return": [],
            "arguments": {
                "dist": [],
                "template": []
            }
        },
        "_InstallRequirementBackedCandidate.__init__": {
            "name": "__init__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "source_link": [],
                "ireq": [],
                "factory": [],
                "name": [],
                "version": []
            }
        },
        "_InstallRequirementBackedCandidate.__str__": {
            "name": "__str__",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.__repr__": {
            "name": "__repr__",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.__hash__": {
            "name": "__hash__",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.__eq__": {
            "name": "__eq__",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_InstallRequirementBackedCandidate.source_link": {
            "name": "source_link",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.project_name": {
            "name": "project_name",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.name": {
            "name": "name",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.version": {
            "name": "version",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.format_for_error": {
            "name": "format_for_error",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate._prepare_distribution": {
            "name": "_prepare_distribution",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate._check_metadata_consistency": {
            "name": "_check_metadata_consistency",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "_InstallRequirementBackedCandidate._prepare": {
            "name": "_prepare",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InstallRequirementBackedCandidate.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 246,
            "return": [],
            "arguments": {
                "self": [],
                "with_requires": []
            }
        },
        "_InstallRequirementBackedCandidate.get_install_requirement": {
            "name": "get_install_requirement",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkCandidate.__init__": {
            "name": "__init__",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "template": [],
                "factory": [],
                "name": [],
                "version": []
            }
        },
        "LinkCandidate._prepare_distribution": {
            "name": "_prepare_distribution",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditableCandidate.__init__": {
            "name": "__init__",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "template": [],
                "factory": [],
                "name": [],
                "version": []
            }
        },
        "EditableCandidate._prepare_distribution": {
            "name": "_prepare_distribution",
            "location": 331,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.__init__": {
            "name": "__init__",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "template": [],
                "factory": []
            }
        },
        "AlreadyInstalledCandidate.__str__": {
            "name": "__str__",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.__repr__": {
            "name": "__repr__",
            "location": 359,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.__hash__": {
            "name": "__hash__",
            "location": 365,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.__eq__": {
            "name": "__eq__",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "AlreadyInstalledCandidate.project_name": {
            "name": "project_name",
            "location": 374,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.name": {
            "name": "name",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.version": {
            "name": "version",
            "location": 382,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.is_editable": {
            "name": "is_editable",
            "location": 386,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.format_for_error": {
            "name": "format_for_error",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AlreadyInstalledCandidate.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 392,
            "return": [],
            "arguments": {
                "self": [],
                "with_requires": []
            }
        },
        "AlreadyInstalledCandidate.get_install_requirement": {
            "name": "get_install_requirement",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.__init__": {
            "name": "__init__",
            "location": 427,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "extras": []
            }
        },
        "ExtrasCandidate.__str__": {
            "name": "__str__",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.__repr__": {
            "name": "__repr__",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.__hash__": {
            "name": "__hash__",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.__eq__": {
            "name": "__eq__",
            "location": 449,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ExtrasCandidate.project_name": {
            "name": "project_name",
            "location": 455,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.name": {
            "name": "name",
            "location": 459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.version": {
            "name": "version",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.format_for_error": {
            "name": "format_for_error",
            "location": 467,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.is_installed": {
            "name": "is_installed",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.is_editable": {
            "name": "is_editable",
            "location": 477,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.source_link": {
            "name": "source_link",
            "location": 481,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtrasCandidate.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 484,
            "return": [],
            "arguments": {
                "self": [],
                "with_requires": []
            }
        },
        "ExtrasCandidate.get_install_requirement": {
            "name": "get_install_requirement",
            "location": 512,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.__init__": {
            "name": "__init__",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "py_version_info": []
            }
        },
        "RequiresPythonCandidate.__str__": {
            "name": "__str__",
            "location": 534,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.project_name": {
            "name": "project_name",
            "location": 538,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.name": {
            "name": "name",
            "location": 542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.version": {
            "name": "version",
            "location": 546,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.format_for_error": {
            "name": "format_for_error",
            "location": 549,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonCandidate.iter_dependencies": {
            "name": "iter_dependencies",
            "location": 552,
            "return": [],
            "arguments": {
                "self": [],
                "with_requires": []
            }
        },
        "RequiresPythonCandidate.get_install_requirement": {
            "name": "get_install_requirement",
            "location": 555,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/factory.py": {
        "Factory.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "preparer": [],
                "make_install_req": [],
                "wheel_cache": [],
                "use_user_site": [],
                "force_reinstall": [],
                "ignore_installed": [],
                "ignore_requires_python": [],
                "py_version_info": []
            }
        },
        "Factory.force_reinstall": {
            "name": "force_reinstall",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Factory._fail_if_link_is_unsupported_wheel": {
            "name": "_fail_if_link_is_unsupported_wheel",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Factory._make_extras_candidate": {
            "name": "_make_extras_candidate",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "extras": []
            }
        },
        "Factory._make_candidate_from_dist": {
            "name": "_make_candidate_from_dist",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "extras": [],
                "template": []
            }
        },
        "Factory._make_candidate_from_link": {
            "name": "_make_candidate_from_link",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "extras": [],
                "template": [],
                "name": [],
                "version": []
            }
        },
        "Factory._iter_found_candidates": {
            "name": "_iter_found_candidates",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "ireqs": [],
                "specifier": [],
                "hashes": [],
                "prefers_installed": [],
                "incompatible_ids": []
            }
        },
        "Factory._iter_explicit_candidates_from_base": {
            "name": "_iter_explicit_candidates_from_base",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "base_requirements": [],
                "extras": []
            }
        },
        "Factory._iter_candidates_from_constraints": {
            "name": "_iter_candidates_from_constraints",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "constraint": [],
                "template": []
            }
        },
        "Factory.find_candidates": {
            "name": "find_candidates",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "requirements": [],
                "incompatibilities": [],
                "constraint": [],
                "prefers_installed": []
            }
        },
        "Factory._make_requirement_from_install_req": {
            "name": "_make_requirement_from_install_req",
            "location": 440,
            "return": [],
            "arguments": {
                "self": [],
                "ireq": [],
                "requested_extras": []
            }
        },
        "Factory.collect_root_requirements": {
            "name": "collect_root_requirements",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "root_ireqs": []
            }
        },
        "Factory.make_requirement_from_candidate": {
            "name": "make_requirement_from_candidate",
            "location": 502,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "Factory.make_requirement_from_spec": {
            "name": "make_requirement_from_spec",
            "location": 507,
            "return": [],
            "arguments": {
                "self": [],
                "specifier": [],
                "comes_from": [],
                "requested_extras": []
            }
        },
        "Factory.make_requires_python_requirement": {
            "name": "make_requires_python_requirement",
            "location": 516,
            "return": [],
            "arguments": {
                "self": [],
                "specifier": []
            }
        },
        "Factory.get_wheel_cache_entry": {
            "name": "get_wheel_cache_entry",
            "location": 527,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "name": []
            }
        },
        "Factory.get_dist_to_uninstall": {
            "name": "get_dist_to_uninstall",
            "location": 546,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "Factory._report_requires_python_error": {
            "name": "_report_requires_python_error",
            "location": 574,
            "return": [],
            "arguments": {
                "self": [],
                "causes": []
            }
        },
        "Factory._report_single_requirement_conflict": {
            "name": "_report_single_requirement_conflict",
            "location": 596,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "parent": []
            }
        },
        "Factory.get_installation_error": {
            "name": "get_installation_error",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "e": [],
                "constraints": []
            }
        },
        "Factory._iter_found_candidates._get_installed_candidate": {
            "name": "_get_installed_candidate",
            "location": 254,
            "return": [],
            "arguments": {}
        },
        "Factory._iter_found_candidates.iter_index_candidate_infos": {
            "name": "iter_index_candidate_infos",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "Factory.get_installation_error.text_join": {
            "name": "text_join",
            "location": 667,
            "return": [],
            "arguments": {
                "parts": []
            }
        },
        "Factory.get_installation_error.describe_trigger": {
            "name": "describe_trigger",
            "location": 673,
            "return": [],
            "arguments": {
                "parent": []
            }
        },
        "Factory._iter_found_candidates.iter_index_candidate_infos.is_pinned": {
            "name": "is_pinned",
            "location": 291,
            "return": [],
            "arguments": {
                "specifier": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py": {
        "_iter_built": {
            "name": "_iter_built",
            "location": 37,
            "return": [],
            "arguments": {
                "infos": []
            }
        },
        "_iter_built_with_prepended": {
            "name": "_iter_built_with_prepended",
            "location": 54,
            "return": [],
            "arguments": {
                "installed": [],
                "infos": []
            }
        },
        "_iter_built_with_inserted": {
            "name": "_iter_built_with_inserted",
            "location": 76,
            "return": [],
            "arguments": {
                "installed": [],
                "infos": []
            }
        },
        "FoundCandidates.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "get_infos": [],
                "installed": [],
                "prefers_installed": [],
                "incompatible_ids": []
            }
        },
        "FoundCandidates.__getitem__": {
            "name": "__getitem__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "FoundCandidates.__iter__": {
            "name": "__iter__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoundCandidates.__len__": {
            "name": "__len__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoundCandidates.__bool__": {
            "name": "__bool__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/provider.py": {
        "_get_with_identifier": {
            "name": "_get_with_identifier",
            "location": 53,
            "return": [],
            "arguments": {
                "mapping": [],
                "identifier": [],
                "default": []
            }
        },
        "PipProvider.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "factory": [],
                "constraints": [],
                "ignore_dependencies": [],
                "upgrade_strategy": [],
                "user_requested": []
            }
        },
        "PipProvider.identify": {
            "name": "identify",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_or_candidate": []
            }
        },
        "PipProvider.get_preference": {
            "name": "get_preference",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "resolutions": [],
                "candidates": [],
                "information": [],
                "backtrack_causes": []
            }
        },
        "PipProvider.find_matches": {
            "name": "find_matches",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "requirements": [],
                "incompatibilities": []
            }
        },
        "PipProvider.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "candidate": []
            }
        },
        "PipProvider.get_dependencies": {
            "name": "get_dependencies",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "PipProvider.is_backtrack_cause": {
            "name": "is_backtrack_cause",
            "location": 240,
            "return": [],
            "arguments": {
                "identifier": [],
                "backtrack_causes": []
            }
        },
        "PipProvider.find_matches._eligible_for_upgrade": {
            "name": "_eligible_for_upgrade",
            "location": 197,
            "return": [],
            "arguments": {
                "identifier": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/reporter.py": {
        "PipReporter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipReporter.backtracking": {
            "name": "backtracking",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "PipDebuggingReporter.starting": {
            "name": "starting",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipDebuggingReporter.starting_round": {
            "name": "starting_round",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "PipDebuggingReporter.ending_round": {
            "name": "ending_round",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "state": []
            }
        },
        "PipDebuggingReporter.ending": {
            "name": "ending",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "PipDebuggingReporter.adding_requirement": {
            "name": "adding_requirement",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "parent": []
            }
        },
        "PipDebuggingReporter.backtracking": {
            "name": "backtracking",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "PipDebuggingReporter.pinning": {
            "name": "pinning",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/requirements.py": {
        "ExplicitRequirement.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "ExplicitRequirement.__str__": {
            "name": "__str__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.__repr__": {
            "name": "__repr__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.project_name": {
            "name": "project_name",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.name": {
            "name": "name",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.format_for_error": {
            "name": "format_for_error",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.get_candidate_lookup": {
            "name": "get_candidate_lookup",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExplicitRequirement.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "SpecifierRequirement.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "ireq": []
            }
        },
        "SpecifierRequirement.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.__repr__": {
            "name": "__repr__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.project_name": {
            "name": "project_name",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.name": {
            "name": "name",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.format_for_error": {
            "name": "format_for_error",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.get_candidate_lookup": {
            "name": "get_candidate_lookup",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierRequirement.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "RequiresPythonRequirement.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "specifier": [],
                "match": []
            }
        },
        "RequiresPythonRequirement.__str__": {
            "name": "__str__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.__repr__": {
            "name": "__repr__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.project_name": {
            "name": "project_name",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.name": {
            "name": "name",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.format_for_error": {
            "name": "format_for_error",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.get_candidate_lookup": {
            "name": "get_candidate_lookup",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequiresPythonRequirement.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "UnsatisfiableRequirement.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "UnsatisfiableRequirement.__str__": {
            "name": "__str__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.__repr__": {
            "name": "__repr__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.project_name": {
            "name": "project_name",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.name": {
            "name": "name",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.format_for_error": {
            "name": "format_for_error",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.get_candidate_lookup": {
            "name": "get_candidate_lookup",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnsatisfiableRequirement.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/resolver.py": {
        "get_topological_weights": {
            "name": "get_topological_weights",
            "location": 196,
            "return": [],
            "arguments": {
                "graph": [],
                "requirement_keys": []
            }
        },
        "_req_set_item_sorter": {
            "name": "_req_set_item_sorter",
            "location": 285,
            "return": [],
            "arguments": {
                "item": [],
                "weights": []
            }
        },
        "Resolver.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "preparer": [],
                "finder": [],
                "wheel_cache": [],
                "make_install_req": [],
                "use_user_site": [],
                "ignore_dependencies": [],
                "ignore_installed": [],
                "ignore_requires_python": [],
                "force_reinstall": [],
                "upgrade_strategy": [],
                "py_version_info": []
            }
        },
        "Resolver.resolve": {
            "name": "resolve",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "root_reqs": [],
                "check_supported_wheels": []
            }
        },
        "Resolver.get_installation_order": {
            "name": "get_installation_order",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "req_set": []
            }
        },
        "get_topological_weights.visit": {
            "name": "visit",
            "location": 227,
            "return": [],
            "arguments": {
                "node": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/resolution/resolvelib/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/appdirs.py": {
        "user_cache_dir": {
            "name": "user_cache_dir",
            "location": 16,
            "return": [],
            "arguments": {
                "appname": []
            }
        },
        "_macos_user_config_dir": {
            "name": "_macos_user_config_dir",
            "location": 20,
            "return": [],
            "arguments": {
                "appname": [],
                "roaming": []
            }
        },
        "user_config_dir": {
            "name": "user_config_dir",
            "location": 34,
            "return": [],
            "arguments": {
                "appname": [],
                "roaming": []
            }
        },
        "site_config_dirs": {
            "name": "site_config_dirs",
            "location": 43,
            "return": [],
            "arguments": {
                "appname": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/compat.py": {
        "has_tls": {
            "name": "has_tls",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "get_path_uid": {
            "name": "get_path_uid",
            "location": 27,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/compatibility_tags.py": {
        "version_info_to_nodot": {
            "name": "version_info_to_nodot",
            "location": 21,
            "return": [],
            "arguments": {
                "version_info": []
            }
        },
        "_mac_platforms": {
            "name": "_mac_platforms",
            "location": 26,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_custom_manylinux_platforms": {
            "name": "_custom_manylinux_platforms",
            "location": 46,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_get_custom_platforms": {
            "name": "_get_custom_platforms",
            "location": 67,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_expand_allowed_platforms": {
            "name": "_expand_allowed_platforms",
            "location": 78,
            "return": [],
            "arguments": {
                "platforms": []
            }
        },
        "_get_python_version": {
            "name": "_get_python_version",
            "location": 95,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_get_custom_interpreter": {
            "name": "_get_custom_interpreter",
            "location": 102,
            "return": [],
            "arguments": {
                "implementation": [],
                "version": []
            }
        },
        "get_supported": {
            "name": "get_supported",
            "location": 112,
            "return": [],
            "arguments": {
                "version": [],
                "platforms": [],
                "impl": [],
                "abis": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/datetime.py": {
        "today_is_later_than": {
            "name": "today_is_later_than",
            "location": 7,
            "return": [],
            "arguments": {
                "year": [],
                "month": [],
                "day": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/deprecation.py": {
        "_showwarning": {
            "name": "_showwarning",
            "location": 24,
            "return": [],
            "arguments": {
                "message": [],
                "category": [],
                "filename": [],
                "lineno": [],
                "file": [],
                "line": []
            }
        },
        "install_warning_logger": {
            "name": "install_warning_logger",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "deprecated": {
            "name": "deprecated",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "LegacyInstallReason.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "reason": [],
                "replacement": [],
                "gone_in": [],
                "feature_flag": [],
                "issue": [],
                "emit_after_success": [],
                "emit_before_install": []
            }
        },
        "LegacyInstallReason.emit_deprecation": {
            "name": "emit_deprecation",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/direct_url_helpers.py": {
        "direct_url_as_pep440_direct_reference": {
            "name": "direct_url_as_pep440_direct_reference",
            "location": 9,
            "return": [],
            "arguments": {
                "direct_url": [],
                "name": []
            }
        },
        "direct_url_for_editable": {
            "name": "direct_url_for_editable",
            "location": 32,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        },
        "direct_url_from_link": {
            "name": "direct_url_from_link",
            "location": 39,
            "return": [],
            "arguments": {
                "link": [],
                "source_dir": [],
                "link_is_in_wheel_cache": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/distutils_args.py": {
        "parse_distutils_args": {
            "name": "parse_distutils_args",
            "location": 20,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/egg_link.py": {
        "_egg_link_name": {
            "name": "_egg_link_name",
            "location": 21,
            "return": [],
            "arguments": {
                "raw_name": []
            }
        },
        "egg_link_path_from_sys_path": {
            "name": "egg_link_path_from_sys_path",
            "location": 30,
            "return": [],
            "arguments": {
                "raw_name": []
            }
        },
        "egg_link_path_from_location": {
            "name": "egg_link_path_from_location",
            "location": 42,
            "return": [],
            "arguments": {
                "raw_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/encoding.py": {
        "auto_decode": {
            "name": "auto_decode",
            "location": 20,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/entrypoints.py": {
        "_wrapper": {
            "name": "_wrapper",
            "location": 23,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "get_best_invocation_for_this_pip": {
            "name": "get_best_invocation_for_this_pip",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "get_best_invocation_for_this_python": {
            "name": "get_best_invocation_for_this_python",
            "location": 73,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/filesystem.py": {
        "check_path_owner": {
            "name": "check_path_owner",
            "location": 16,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "adjacent_tmp_file": {
            "name": "adjacent_tmp_file",
            "location": 44,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "test_writable_dir": {
            "name": "test_writable_dir",
            "location": 76,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_test_writable_dir_win": {
            "name": "_test_writable_dir_win",
            "location": 94,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "find_files": {
            "name": "find_files",
            "location": 122,
            "return": [],
            "arguments": {
                "path": [],
                "pattern": []
            }
        },
        "file_size": {
            "name": "file_size",
            "location": 132,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "format_file_size": {
            "name": "format_file_size",
            "location": 139,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "directory_size": {
            "name": "directory_size",
            "location": 143,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "format_directory_size": {
            "name": "format_directory_size",
            "location": 152,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/filetypes.py": {
        "is_archive_file": {
            "name": "is_archive_file",
            "location": 22,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/glibc.py": {
        "glibc_version_string": {
            "name": "glibc_version_string",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "glibc_version_string_confstr": {
            "name": "glibc_version_string_confstr",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "glibc_version_string_ctypes": {
            "name": "glibc_version_string_ctypes",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "libc_ver": {
            "name": "libc_ver",
            "location": 78,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/hashes.py": {
        "Hashes.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "hashes": []
            }
        },
        "Hashes.__and__": {
            "name": "__and__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Hashes.digest_count": {
            "name": "digest_count",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Hashes.is_hash_allowed": {
            "name": "is_hash_allowed",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "hash_name": [],
                "hex_digest": []
            }
        },
        "Hashes.check_against_chunks": {
            "name": "check_against_chunks",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "chunks": []
            }
        },
        "Hashes._raise": {
            "name": "_raise",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "gots": []
            }
        },
        "Hashes.check_against_file": {
            "name": "check_against_file",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "Hashes.check_against_path": {
            "name": "check_against_path",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Hashes.__bool__": {
            "name": "__bool__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Hashes.__eq__": {
            "name": "__eq__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Hashes.__hash__": {
            "name": "__hash__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MissingHashes.__init__": {
            "name": "__init__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MissingHashes._raise": {
            "name": "_raise",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "gots": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/inject_securetransport.py": {
        "inject_securetransport": {
            "name": "inject_securetransport",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/logging.py": {
        "_is_broken_pipe_error": {
            "name": "_is_broken_pipe_error",
            "location": 41,
            "return": [],
            "arguments": {
                "exc_class": [],
                "exc": []
            }
        },
        "indent_log": {
            "name": "indent_log",
            "location": 55,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "get_indentation": {
            "name": "get_indentation",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "setup_logging": {
            "name": "setup_logging",
            "location": 226,
            "return": [],
            "arguments": {
                "verbosity": [],
                "no_color": [],
                "user_log_file": []
            }
        },
        "IndentingFormatter.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentingFormatter.get_message_start": {
            "name": "get_message_start",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "formatted": [],
                "levelno": []
            }
        },
        "IndentingFormatter.format": {
            "name": "format",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "IndentedRenderable.__rich_console__": {
            "name": "__rich_console__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "RichPipStreamHandler.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "no_color": []
            }
        },
        "RichPipStreamHandler.emit": {
            "name": "emit",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "RichPipStreamHandler.handleError": {
            "name": "handleError",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "BetterRotatingFileHandler._open": {
            "name": "_open",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MaxLevelFilter.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "MaxLevelFilter.filter": {
            "name": "filter",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "ExcludeLoggerFilter.filter": {
            "name": "filter",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/misc.py": {
        "get_pip_version": {
            "name": "get_pip_version",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "normalize_version_info": {
            "name": "normalize_version_info",
            "location": 83,
            "return": [],
            "arguments": {
                "py_version_info": []
            }
        },
        "ensure_dir": {
            "name": "ensure_dir",
            "location": 102,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_prog": {
            "name": "get_prog",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "rmtree": {
            "name": "rmtree",
            "location": 127,
            "return": [],
            "arguments": {
                "dir": [],
                "ignore_errors": []
            }
        },
        "rmtree_errorhandler": {
            "name": "rmtree_errorhandler",
            "location": 131,
            "return": [],
            "arguments": {
                "func": [],
                "path": [],
                "exc_info": []
            }
        },
        "display_path": {
            "name": "display_path",
            "location": 151,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "backup_dir": {
            "name": "backup_dir",
            "location": 160,
            "return": [],
            "arguments": {
                "dir": [],
                "ext": []
            }
        },
        "ask_path_exists": {
            "name": "ask_path_exists",
            "location": 171,
            "return": [],
            "arguments": {
                "message": [],
                "options": []
            }
        },
        "_check_no_input": {
            "name": "_check_no_input",
            "location": 178,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "ask": {
            "name": "ask",
            "location": 186,
            "return": [],
            "arguments": {
                "message": [],
                "options": []
            }
        },
        "ask_input": {
            "name": "ask_input",
            "location": 201,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "ask_password": {
            "name": "ask_password",
            "location": 207,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "strtobool": {
            "name": "strtobool",
            "location": 213,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "format_size": {
            "name": "format_size",
            "location": 229,
            "return": [],
            "arguments": {
                "bytes": []
            }
        },
        "tabulate": {
            "name": "tabulate",
            "location": 240,
            "return": [],
            "arguments": {
                "rows": []
            }
        },
        "is_installable_dir": {
            "name": "is_installable_dir",
            "location": 254,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "read_chunks": {
            "name": "read_chunks",
            "location": 271,
            "return": [],
            "arguments": {
                "file": [],
                "size": []
            }
        },
        "normalize_path": {
            "name": "normalize_path",
            "location": 282,
            "return": [],
            "arguments": {
                "path": [],
                "resolve_symlinks": []
            }
        },
        "splitext": {
            "name": "splitext",
            "location": 295,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "renames": {
            "name": "renames",
            "location": 304,
            "return": [],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "is_local": {
            "name": "is_local",
            "location": 321,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "write_output": {
            "name": "write_output",
            "location": 335,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "captured_output": {
            "name": "captured_output",
            "location": 355,
            "return": [],
            "arguments": {
                "stream_name": []
            }
        },
        "captured_stdout": {
            "name": "captured_stdout",
            "location": 369,
            "return": [],
            "arguments": {}
        },
        "captured_stderr": {
            "name": "captured_stderr",
            "location": 381,
            "return": [],
            "arguments": {}
        },
        "enum": {
            "name": "enum",
            "location": 389,
            "return": [],
            "arguments": {}
        },
        "build_netloc": {
            "name": "build_netloc",
            "location": 396,
            "return": [],
            "arguments": {
                "host": [],
                "port": []
            }
        },
        "build_url_from_netloc": {
            "name": "build_url_from_netloc",
            "location": 408,
            "return": [],
            "arguments": {
                "netloc": [],
                "scheme": []
            }
        },
        "parse_netloc": {
            "name": "parse_netloc",
            "location": 418,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "split_auth_from_netloc": {
            "name": "split_auth_from_netloc",
            "location": 427,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "redact_netloc": {
            "name": "redact_netloc",
            "location": 456,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "_transform_url": {
            "name": "_transform_url",
            "location": 478,
            "return": [],
            "arguments": {
                "url": [],
                "transform_netloc": []
            }
        },
        "_get_netloc": {
            "name": "_get_netloc",
            "location": 498,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "_redact_netloc": {
            "name": "_redact_netloc",
            "location": 502,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "split_auth_netloc_from_url": {
            "name": "split_auth_netloc_from_url",
            "location": 506,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "remove_auth_from_url": {
            "name": "remove_auth_from_url",
            "location": 516,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "redact_auth_from_url": {
            "name": "redact_auth_from_url",
            "location": 523,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "hide_value": {
            "name": "hide_value",
            "location": 549,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "hide_url": {
            "name": "hide_url",
            "location": 553,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "protect_pip_from_modification_on_windows": {
            "name": "protect_pip_from_modification_on_windows",
            "location": 558,
            "return": [],
            "arguments": {
                "modifying_pip": []
            }
        },
        "is_console_interactive": {
            "name": "is_console_interactive",
            "location": 584,
            "return": [],
            "arguments": {}
        },
        "hash_file": {
            "name": "hash_file",
            "location": 589,
            "return": [],
            "arguments": {
                "path": [],
                "blocksize": []
            }
        },
        "is_wheel_installed": {
            "name": "is_wheel_installed",
            "location": 601,
            "return": [],
            "arguments": {}
        },
        "pairwise": {
            "name": "pairwise",
            "location": 613,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "partition": {
            "name": "partition",
            "location": 624,
            "return": [],
            "arguments": {
                "pred": [],
                "iterable": []
            }
        },
        "StreamWrapper.from_stream": {
            "name": "from_stream",
            "location": 343,
            "return": [],
            "arguments": {
                "cls": [],
                "orig_stream": []
            }
        },
        "StreamWrapper.encoding": {
            "name": "encoding",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HiddenText.__init__": {
            "name": "__init__",
            "location": 529,
            "return": [],
            "arguments": {
                "self": [],
                "secret": [],
                "redacted": []
            }
        },
        "HiddenText.__repr__": {
            "name": "__repr__",
            "location": 533,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HiddenText.__str__": {
            "name": "__str__",
            "location": 536,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HiddenText.__eq__": {
            "name": "__eq__",
            "location": 540,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ConfiguredPep517HookCaller.__init__": {
            "name": "__init__",
            "location": 639,
            "return": [],
            "arguments": {
                "self": [],
                "config_holder": [],
                "source_dir": [],
                "build_backend": [],
                "backend_path": [],
                "runner": [],
                "python_executable": []
            }
        },
        "ConfiguredPep517HookCaller.build_wheel": {
            "name": "build_wheel",
            "location": 653,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "ConfiguredPep517HookCaller.build_sdist": {
            "name": "build_sdist",
            "location": 664,
            "return": [],
            "arguments": {
                "self": [],
                "sdist_directory": [],
                "config_settings": []
            }
        },
        "ConfiguredPep517HookCaller.build_editable": {
            "name": "build_editable",
            "location": 670,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "ConfiguredPep517HookCaller.get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 681,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "ConfiguredPep517HookCaller.get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 687,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "ConfiguredPep517HookCaller.get_requires_for_build_editable": {
            "name": "get_requires_for_build_editable",
            "location": 693,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "ConfiguredPep517HookCaller.prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 699,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        },
        "ConfiguredPep517HookCaller.prepare_metadata_for_build_editable": {
            "name": "prepare_metadata_for_build_editable",
            "location": 712,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/models.py": {
        "KeyBasedCompareMixin.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "defining_class": []
            }
        },
        "KeyBasedCompareMixin.__hash__": {
            "name": "__hash__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KeyBasedCompareMixin.__lt__": {
            "name": "__lt__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "KeyBasedCompareMixin.__le__": {
            "name": "__le__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "KeyBasedCompareMixin.__gt__": {
            "name": "__gt__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "KeyBasedCompareMixin.__ge__": {
            "name": "__ge__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "KeyBasedCompareMixin.__eq__": {
            "name": "__eq__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "KeyBasedCompareMixin._compare": {
            "name": "_compare",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "method": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/packaging.py": {
        "check_requires_python": {
            "name": "check_requires_python",
            "location": 14,
            "return": [],
            "arguments": {
                "requires_python": [],
                "version_info": []
            }
        },
        "get_requirement": {
            "name": "get_requirement",
            "location": 38,
            "return": [],
            "arguments": {
                "req_string": []
            }
        },
        "safe_extra": {
            "name": "safe_extra",
            "location": 48,
            "return": [],
            "arguments": {
                "extra": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/setuptools_build.py": {
        "make_setuptools_shim_args": {
            "name": "make_setuptools_shim_args",
            "location": 49,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "global_options": [],
                "no_user_config": [],
                "unbuffered_output": []
            }
        },
        "make_setuptools_bdist_wheel_args": {
            "name": "make_setuptools_bdist_wheel_args",
            "location": 75,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "global_options": [],
                "build_options": [],
                "destination_dir": []
            }
        },
        "make_setuptools_clean_args": {
            "name": "make_setuptools_clean_args",
            "location": 93,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "global_options": []
            }
        },
        "make_setuptools_develop_args": {
            "name": "make_setuptools_develop_args",
            "location": 104,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "global_options": [],
                "install_options": [],
                "no_user_config": [],
                "prefix": [],
                "home": [],
                "use_user_site": []
            }
        },
        "make_setuptools_egg_info_args": {
            "name": "make_setuptools_egg_info_args",
            "location": 136,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "egg_info_dir": [],
                "no_user_config": []
            }
        },
        "make_setuptools_install_args": {
            "name": "make_setuptools_install_args",
            "location": 151,
            "return": [],
            "arguments": {
                "setup_py_path": [],
                "global_options": [],
                "install_options": [],
                "record_filename": [],
                "root": [],
                "prefix": [],
                "header_dir": [],
                "home": [],
                "use_user_site": [],
                "no_user_config": [],
                "pycompile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/subprocess.py": {
        "make_command": {
            "name": "make_command",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "format_command_args": {
            "name": "format_command_args",
            "location": 49,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "reveal_command_args": {
            "name": "reveal_command_args",
            "location": 64,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "call_subprocess": {
            "name": "call_subprocess",
            "location": 71,
            "return": [],
            "arguments": {
                "cmd": [],
                "show_stdout": [],
                "cwd": [],
                "on_returncode": [],
                "extra_ok_returncodes": [],
                "extra_environ": [],
                "unset_environ": [],
                "spinner": [],
                "log_failed_cmd": [],
                "stdout_only": []
            }
        },
        "runner_with_spinner_message": {
            "name": "runner_with_spinner_message",
            "location": 239,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "runner_with_spinner_message.runner": {
            "name": "runner",
            "location": 246,
            "return": [],
            "arguments": {
                "cmd": [],
                "cwd": [],
                "extra_environ": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/temp_dir.py": {
        "global_tempdir_manager": {
            "name": "global_tempdir_manager",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "tempdir_registry": {
            "name": "tempdir_registry",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "TempDirectoryTypeRegistry.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempDirectoryTypeRegistry.set_delete": {
            "name": "set_delete",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "kind": [],
                "value": []
            }
        },
        "TempDirectoryTypeRegistry.get_delete": {
            "name": "get_delete",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "kind": []
            }
        },
        "TempDirectory.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "delete": [],
                "kind": [],
                "globally_managed": []
            }
        },
        "TempDirectory.path": {
            "name": "path",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempDirectory.__repr__": {
            "name": "__repr__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempDirectory.__enter__": {
            "name": "__enter__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TempDirectory.__exit__": {
            "name": "__exit__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "exc": [],
                "value": [],
                "tb": []
            }
        },
        "TempDirectory._create": {
            "name": "_create",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "kind": []
            }
        },
        "TempDirectory.cleanup": {
            "name": "cleanup",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AdjacentTempDirectory.__init__": {
            "name": "__init__",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "original": [],
                "delete": []
            }
        },
        "AdjacentTempDirectory._generate_names": {
            "name": "_generate_names",
            "location": 203,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "AdjacentTempDirectory._create": {
            "name": "_create",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "kind": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/unpacking.py": {
        "current_umask": {
            "name": "current_umask",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "split_leading_dir": {
            "name": "split_leading_dir",
            "location": 50,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "has_leading_dir": {
            "name": "has_leading_dir",
            "location": 62,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "is_within_directory": {
            "name": "is_within_directory",
            "location": 77,
            "return": [],
            "arguments": {
                "directory": [],
                "target": []
            }
        },
        "set_extracted_file_to_default_mode_plus_executable": {
            "name": "set_extracted_file_to_default_mode_plus_executable",
            "location": 88,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "zip_item_is_executable": {
            "name": "zip_item_is_executable",
            "location": 96,
            "return": [],
            "arguments": {
                "info": []
            }
        },
        "unzip_file": {
            "name": "unzip_file",
            "location": 103,
            "return": [],
            "arguments": {
                "filename": [],
                "location": [],
                "flatten": []
            }
        },
        "untar_file": {
            "name": "untar_file",
            "location": 149,
            "return": [],
            "arguments": {
                "filename": [],
                "location": []
            }
        },
        "unpack_file": {
            "name": "unpack_file",
            "location": 229,
            "return": [],
            "arguments": {
                "filename": [],
                "location": [],
                "content_type": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/urls.py": {
        "get_url_scheme": {
            "name": "get_url_scheme",
            "location": 10,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "path_to_url": {
            "name": "path_to_url",
            "location": 16,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "url_to_path": {
            "name": "url_to_path",
            "location": 26,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/virtualenv.py": {
        "_running_under_venv": {
            "name": "_running_under_venv",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "_running_under_regular_virtualenv": {
            "name": "_running_under_regular_virtualenv",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "running_under_virtualenv": {
            "name": "running_under_virtualenv",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "_get_pyvenv_cfg_lines": {
            "name": "_get_pyvenv_cfg_lines",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "_no_global_under_venv": {
            "name": "_no_global_under_venv",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "_no_global_under_regular_virtualenv": {
            "name": "_no_global_under_regular_virtualenv",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "virtualenv_no_global": {
            "name": "virtualenv_no_global",
            "location": 94,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/wheel.py": {
        "parse_wheel": {
            "name": "parse_wheel",
            "location": 20,
            "return": [],
            "arguments": {
                "wheel_zip": [],
                "name": []
            }
        },
        "wheel_dist_info_dir": {
            "name": "wheel_dist_info_dir",
            "location": 38,
            "return": [],
            "arguments": {
                "source": [],
                "name": []
            }
        },
        "read_wheel_metadata_file": {
            "name": "read_wheel_metadata_file",
            "location": 71,
            "return": [],
            "arguments": {
                "source": [],
                "path": []
            }
        },
        "wheel_metadata": {
            "name": "wheel_metadata",
            "location": 80,
            "return": [],
            "arguments": {
                "source": [],
                "dist_info_dir": []
            }
        },
        "wheel_version": {
            "name": "wheel_version",
            "location": 99,
            "return": [],
            "arguments": {
                "wheel_data": []
            }
        },
        "check_compatibility": {
            "name": "check_compatibility",
            "location": 115,
            "return": [],
            "arguments": {
                "version": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/_log.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 26,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "init_logging": {
            "name": "init_logging",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "VerboseLogger.verbose": {
            "name": "verbose",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/utils/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/bazaar.py": {
        "Bazaar.get_base_rev_args": {
            "name": "get_base_rev_args",
            "location": 33,
            "return": [],
            "arguments": {
                "rev": []
            }
        },
        "Bazaar.fetch_new": {
            "name": "fetch_new",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": [],
                "verbosity": []
            }
        },
        "Bazaar.switch": {
            "name": "switch",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Bazaar.update": {
            "name": "update",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Bazaar.get_url_rev_and_auth": {
            "name": "get_url_rev_and_auth",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "Bazaar.get_remote_url": {
            "name": "get_remote_url",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Bazaar.get_revision": {
            "name": "get_revision",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Bazaar.is_commit_id_equal": {
            "name": "is_commit_id_equal",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/git.py": {
        "looks_like_hash": {
            "name": "looks_like_hash",
            "location": 55,
            "return": [],
            "arguments": {
                "sha": []
            }
        },
        "Git.get_base_rev_args": {
            "name": "get_base_rev_args",
            "location": 76,
            "return": [],
            "arguments": {
                "rev": []
            }
        },
        "Git.is_immutable_rev_checkout": {
            "name": "is_immutable_rev_checkout",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "dest": []
            }
        },
        "Git.get_git_version": {
            "name": "get_git_version",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Git.get_current_branch": {
            "name": "get_current_branch",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Git.get_revision_sha": {
            "name": "get_revision_sha",
            "location": 132,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "rev": []
            }
        },
        "Git._should_fetch": {
            "name": "_should_fetch",
            "location": 178,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "rev": []
            }
        },
        "Git.resolve_revision": {
            "name": "resolve_revision",
            "location": 201,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Git.is_commit_id_equal": {
            "name": "is_commit_id_equal",
            "location": 247,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "name": []
            }
        },
        "Git.fetch_new": {
            "name": "fetch_new",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": [],
                "verbosity": []
            }
        },
        "Git.switch": {
            "name": "switch",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Git.update": {
            "name": "update",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Git.get_remote_url": {
            "name": "get_remote_url",
            "location": 349,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Git._git_remote_to_pip_url": {
            "name": "_git_remote_to_pip_url",
            "location": 379,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Git.has_commit": {
            "name": "has_commit",
            "location": 410,
            "return": [],
            "arguments": {
                "cls": [],
                "location": [],
                "rev": []
            }
        },
        "Git.get_revision": {
            "name": "get_revision",
            "location": 426,
            "return": [],
            "arguments": {
                "cls": [],
                "location": [],
                "rev": []
            }
        },
        "Git.get_subdirectory": {
            "name": "get_subdirectory",
            "location": 438,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Git.get_url_rev_and_auth": {
            "name": "get_url_rev_and_auth",
            "location": 456,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "Git.update_submodules": {
            "name": "update_submodules",
            "location": 487,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Git.get_repository_root": {
            "name": "get_repository_root",
            "location": 496,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Git.should_add_vcs_url_prefix": {
            "name": "should_add_vcs_url_prefix",
            "location": 521,
            "return": [],
            "arguments": {
                "repo_url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/mercurial.py": {
        "Mercurial.get_base_rev_args": {
            "name": "get_base_rev_args",
            "location": 33,
            "return": [],
            "arguments": {
                "rev": []
            }
        },
        "Mercurial.fetch_new": {
            "name": "fetch_new",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": [],
                "verbosity": []
            }
        },
        "Mercurial.switch": {
            "name": "switch",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Mercurial.update": {
            "name": "update",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Mercurial.get_remote_url": {
            "name": "get_remote_url",
            "location": 80,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Mercurial.get_revision": {
            "name": "get_revision",
            "location": 92,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Mercurial.get_requirement_revision": {
            "name": "get_requirement_revision",
            "location": 105,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Mercurial.is_commit_id_equal": {
            "name": "is_commit_id_equal",
            "location": 119,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "name": []
            }
        },
        "Mercurial.get_subdirectory": {
            "name": "get_subdirectory",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Mercurial.get_repository_root": {
            "name": "get_repository_root",
            "location": 138,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/subversion.py": {
        "Subversion.should_add_vcs_url_prefix": {
            "name": "should_add_vcs_url_prefix",
            "location": 37,
            "return": [],
            "arguments": {
                "cls": [],
                "remote_url": []
            }
        },
        "Subversion.get_base_rev_args": {
            "name": "get_base_rev_args",
            "location": 41,
            "return": [],
            "arguments": {
                "rev": []
            }
        },
        "Subversion.get_revision": {
            "name": "get_revision",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Subversion.get_netloc_and_auth": {
            "name": "get_netloc_and_auth",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [],
                "netloc": [],
                "scheme": []
            }
        },
        "Subversion.get_url_rev_and_auth": {
            "name": "get_url_rev_and_auth",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "Subversion.make_rev_args": {
            "name": "make_rev_args",
            "location": 97,
            "return": [],
            "arguments": {
                "username": [],
                "password": []
            }
        },
        "Subversion.get_remote_url": {
            "name": "get_remote_url",
            "location": 109,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Subversion._get_svn_url_rev": {
            "name": "_get_svn_url_rev",
            "location": 133,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "Subversion.is_commit_id_equal": {
            "name": "is_commit_id_equal",
            "location": 183,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "name": []
            }
        },
        "Subversion.__init__": {
            "name": "__init__",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "use_interactive": []
            }
        },
        "Subversion.call_vcs_version": {
            "name": "call_vcs_version",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Subversion.get_vcs_version": {
            "name": "get_vcs_version",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Subversion.get_remote_call_options": {
            "name": "get_remote_call_options",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Subversion.fetch_new": {
            "name": "fetch_new",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": [],
                "verbosity": []
            }
        },
        "Subversion.switch": {
            "name": "switch",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "Subversion.update": {
            "name": "update",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/versioncontrol.py": {
        "is_url": {
            "name": "is_url",
            "location": 57,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "make_vcs_requirement_url": {
            "name": "make_vcs_requirement_url",
            "location": 67,
            "return": [],
            "arguments": {
                "repo_url": [],
                "rev": [],
                "project_name": [],
                "subdir": []
            }
        },
        "find_path_to_project_root_from_repo_root": {
            "name": "find_path_to_project_root_from_repo_root",
            "location": 85,
            "return": [],
            "arguments": {
                "location": [],
                "repo_root": []
            }
        },
        "RemoteNotValidError.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "RevOptions.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "vc_class": [],
                "rev": [],
                "extra_args": []
            }
        },
        "RevOptions.__repr__": {
            "name": "__repr__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RevOptions.arg_rev": {
            "name": "arg_rev",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RevOptions.to_args": {
            "name": "to_args",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RevOptions.to_display": {
            "name": "to_display",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RevOptions.make_new": {
            "name": "make_new",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "rev": []
            }
        },
        "VcsSupport.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VcsSupport.__iter__": {
            "name": "__iter__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VcsSupport.backends": {
            "name": "backends",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VcsSupport.dirnames": {
            "name": "dirnames",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VcsSupport.all_schemes": {
            "name": "all_schemes",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VcsSupport.register": {
            "name": "register",
            "location": 219,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "VcsSupport.unregister": {
            "name": "unregister",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "VcsSupport.get_backend_for_dir": {
            "name": "get_backend_for_dir",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "VcsSupport.get_backend_for_scheme": {
            "name": "get_backend_for_scheme",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": []
            }
        },
        "VcsSupport.get_backend": {
            "name": "get_backend",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "VersionControl.should_add_vcs_url_prefix": {
            "name": "should_add_vcs_url_prefix",
            "location": 285,
            "return": [],
            "arguments": {
                "cls": [],
                "remote_url": []
            }
        },
        "VersionControl.get_subdirectory": {
            "name": "get_subdirectory",
            "location": 293,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "VersionControl.get_requirement_revision": {
            "name": "get_requirement_revision",
            "location": 301,
            "return": [],
            "arguments": {
                "cls": [],
                "repo_dir": []
            }
        },
        "VersionControl.get_src_requirement": {
            "name": "get_src_requirement",
            "location": 308,
            "return": [],
            "arguments": {
                "cls": [],
                "repo_dir": [],
                "project_name": []
            }
        },
        "VersionControl.get_base_rev_args": {
            "name": "get_base_rev_args",
            "location": 332,
            "return": [],
            "arguments": {
                "rev": []
            }
        },
        "VersionControl.is_immutable_rev_checkout": {
            "name": "is_immutable_rev_checkout",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "dest": []
            }
        },
        "VersionControl.make_rev_options": {
            "name": "make_rev_options",
            "location": 355,
            "return": [],
            "arguments": {
                "cls": [],
                "rev": [],
                "extra_args": []
            }
        },
        "VersionControl._is_local_repository": {
            "name": "_is_local_repository",
            "location": 368,
            "return": [],
            "arguments": {
                "cls": [],
                "repo": []
            }
        },
        "VersionControl.get_netloc_and_auth": {
            "name": "get_netloc_and_auth",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [],
                "netloc": [],
                "scheme": []
            }
        },
        "VersionControl.get_url_rev_and_auth": {
            "name": "get_url_rev_and_auth",
            "location": 398,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "VersionControl.make_rev_args": {
            "name": "make_rev_args",
            "location": 428,
            "return": [],
            "arguments": {
                "username": [],
                "password": []
            }
        },
        "VersionControl.get_url_rev_options": {
            "name": "get_url_rev_options",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "VersionControl.normalize_url": {
            "name": "normalize_url",
            "location": 452,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "VersionControl.compare_urls": {
            "name": "compare_urls",
            "location": 460,
            "return": [],
            "arguments": {
                "cls": [],
                "url1": [],
                "url2": []
            }
        },
        "VersionControl.fetch_new": {
            "name": "fetch_new",
            "location": 466,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": [],
                "verbosity": []
            }
        },
        "VersionControl.switch": {
            "name": "switch",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "VersionControl.update": {
            "name": "update",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "rev_options": []
            }
        },
        "VersionControl.is_commit_id_equal": {
            "name": "is_commit_id_equal",
            "location": 499,
            "return": [],
            "arguments": {
                "cls": [],
                "dest": [],
                "name": []
            }
        },
        "VersionControl.obtain": {
            "name": "obtain",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "dest": [],
                "url": [],
                "verbosity": []
            }
        },
        "VersionControl.unpack": {
            "name": "unpack",
            "location": 598,
            "return": [],
            "arguments": {
                "self": [],
                "location": [],
                "url": [],
                "verbosity": []
            }
        },
        "VersionControl.get_remote_url": {
            "name": "get_remote_url",
            "location": 611,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "VersionControl.get_revision": {
            "name": "get_revision",
            "location": 621,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        },
        "VersionControl.run_command": {
            "name": "run_command",
            "location": 628,
            "return": [],
            "arguments": {
                "cls": [],
                "cmd": [],
                "show_stdout": [],
                "cwd": [],
                "on_returncode": [],
                "extra_ok_returncodes": [],
                "command_desc": [],
                "extra_environ": [],
                "spinner": [],
                "log_failed_cmd": [],
                "stdout_only": []
            }
        },
        "VersionControl.is_repository_directory": {
            "name": "is_repository_directory",
            "location": 684,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "VersionControl.get_repository_root": {
            "name": "get_repository_root",
            "location": 692,
            "return": [],
            "arguments": {
                "cls": [],
                "location": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_internal/vcs/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/six.py": {
        "_add_doc": {
            "name": "_add_doc",
            "location": 80,
            "return": [],
            "arguments": {
                "func": [],
                "doc": []
            }
        },
        "_import_module": {
            "name": "_import_module",
            "location": 85,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "add_move": {
            "name": "add_move",
            "location": 510,
            "return": [],
            "arguments": {
                "move": []
            }
        },
        "remove_move": {
            "name": "remove_move",
            "location": 515,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "assertCountEqual": {
            "name": "assertCountEqual",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertRaisesRegex": {
            "name": "assertRaisesRegex",
            "location": 698,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertRegex": {
            "name": "assertRegex",
            "location": 702,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertNotRegex": {
            "name": "assertNotRegex",
            "location": 706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "with_metaclass": {
            "name": "with_metaclass",
            "location": 856,
            "return": [],
            "arguments": {
                "meta": []
            }
        },
        "add_metaclass": {
            "name": "add_metaclass",
            "location": 880,
            "return": [],
            "arguments": {
                "metaclass": []
            }
        },
        "ensure_binary": {
            "name": "ensure_binary",
            "location": 898,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "ensure_str": {
            "name": "ensure_str",
            "location": 916,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "ensure_text": {
            "name": "ensure_text",
            "location": 939,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "python_2_unicode_compatible": {
            "name": "python_2_unicode_compatible",
            "location": 958,
            "return": [],
            "arguments": {
                "klass": []
            }
        },
        "_LazyDescr.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_LazyDescr.__get__": {
            "name": "__get__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "tp": []
            }
        },
        "MovedModule.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "old": [],
                "new": []
            }
        },
        "MovedModule._resolve": {
            "name": "_resolve",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MovedModule.__getattr__": {
            "name": "__getattr__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "_LazyModule.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_LazyModule.__dir__": {
            "name": "__dir__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MovedAttribute.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "old_mod": [],
                "new_mod": [],
                "old_attr": [],
                "new_attr": []
            }
        },
        "MovedAttribute._resolve": {
            "name": "_resolve",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SixMetaPathImporter.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "six_module_name": []
            }
        },
        "_SixMetaPathImporter._add_module": {
            "name": "_add_module",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "mod": []
            }
        },
        "_SixMetaPathImporter._get_module": {
            "name": "_get_module",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.find_module": {
            "name": "find_module",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": []
            }
        },
        "_SixMetaPathImporter.find_spec": {
            "name": "find_spec",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        },
        "_SixMetaPathImporter.__get_module": {
            "name": "__get_module",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.load_module": {
            "name": "load_module",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.is_package": {
            "name": "is_package",
            "location": 219,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.get_code": {
            "name": "get_code",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.create_module": {
            "name": "create_module",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "_SixMetaPathImporter.exec_module": {
            "name": "exec_module",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "Module_six_moves_urllib.__dir__": {
            "name": "__dir__",
            "location": 503,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_unbound_function": {
            "name": "get_unbound_function",
            "location": 570,
            "return": [],
            "arguments": {
                "unbound": []
            }
        },
        "create_unbound_method": {
            "name": "create_unbound_method",
            "location": 576,
            "return": [],
            "arguments": {
                "func": [],
                "cls": []
            }
        },
        "create_bound_method": {
            "name": "create_bound_method",
            "location": 573,
            "return": [],
            "arguments": {
                "func": [],
                "obj": []
            }
        },
        "iterkeys": {
            "name": "iterkeys",
            "location": 616,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "itervalues": {
            "name": "itervalues",
            "location": 619,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "iteritems": {
            "name": "iteritems",
            "location": 622,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "iterlists": {
            "name": "iterlists",
            "location": 625,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "b": {
            "name": "b",
            "location": 669,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "u": {
            "name": "u",
            "location": 673,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "byte2int": {
            "name": "byte2int",
            "location": 678,
            "return": [],
            "arguments": {
                "bs": []
            }
        },
        "indexbytes": {
            "name": "indexbytes",
            "location": 681,
            "return": [],
            "arguments": {
                "buf": [],
                "i": []
            }
        },
        "reraise": {
            "name": "reraise",
            "location": 713,
            "return": [],
            "arguments": {
                "tp": [],
                "value": [],
                "tb": []
            }
        },
        "exec_": {
            "name": "exec_",
            "location": 725,
            "return": [],
            "arguments": {
                "_code_": [],
                "_globs_": [],
                "_locs_": []
            }
        },
        "raise_from": {
            "name": "raise_from",
            "location": 753,
            "return": [],
            "arguments": {
                "value": [],
                "from_value": []
            }
        },
        "print_": {
            "name": "print_",
            "location": 815,
            "return": [],
            "arguments": {}
        },
        "_update_wrapper": {
            "name": "_update_wrapper",
            "location": 830,
            "return": [],
            "arguments": {
                "wrapper": [],
                "wrapped": [],
                "assigned": [],
                "updated": []
            }
        },
        "wraps": {
            "name": "wraps",
            "location": 846,
            "return": [],
            "arguments": {
                "wrapped": [],
                "assigned": [],
                "updated": []
            }
        },
        "add_metaclass.wrapper": {
            "name": "wrapper",
            "location": 882,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "advance_iterator": {
            "name": "advance_iterator",
            "location": 547,
            "return": [],
            "arguments": {
                "it": []
            }
        },
        "callable": {
            "name": "callable",
            "location": 555,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Iterator.next": {
            "name": "next",
            "location": 581,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "print_.write": {
            "name": "write",
            "location": 765,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "with_metaclass.metaclass.__new__": {
            "name": "__new__",
            "location": 863,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "this_bases": [],
                "d": []
            }
        },
        "with_metaclass.metaclass.__prepare__": {
            "name": "__prepare__",
            "location": 875,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "this_bases": []
            }
        },
        "X.__len__": {
            "name": "__len__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/typing_extensions.py": {
        "_check_generic": {
            "name": "_check_generic",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [],
                "parameters": [],
                "elen": []
            }
        },
        "_collect_type_vars": {
            "name": "_collect_type_vars",
            "location": 123,
            "return": [],
            "arguments": {
                "types": [],
                "typevar_types": []
            }
        },
        "IntVar": {
            "name": "IntVar",
            "location": 256,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_get_protocol_attrs": {
            "name": "_get_protocol_attrs",
            "location": 394,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_is_callable_members_only": {
            "name": "_is_callable_members_only",
            "location": 413,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_maybe_adjust_parameters": {
            "name": "_maybe_adjust_parameters",
            "location": 417,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_concatenate_getitem": {
            "name": "_concatenate_getitem",
            "location": 1416,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_should_collect_from_parameters": {
            "name": "_should_collect_from_parameters",
            "location": 119,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "final": {
            "name": "final",
            "location": 224,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "overload": {
            "name": "overload",
            "location": 301,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "get_overloads": {
            "name": "get_overloads",
            "location": 341,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "clear_overloads": {
            "name": "clear_overloads",
            "location": 352,
            "return": [],
            "arguments": {}
        },
        "_no_init": {
            "name": "_no_init",
            "location": 463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "runtime_checkable": {
            "name": "runtime_checkable",
            "location": 620,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_check_fails": {
            "name": "_check_fails",
            "location": 665,
            "return": [],
            "arguments": {
                "cls": [],
                "other": []
            }
        },
        "_dict_new": {
            "name": "_dict_new",
            "location": 676,
            "return": [],
            "arguments": {}
        },
        "_typeddict_new": {
            "name": "_typeddict_new",
            "location": 684,
            "return": [],
            "arguments": {}
        },
        "is_typeddict": {
            "name": "is_typeddict",
            "location": 831,
            "return": [],
            "arguments": {
                "tp": []
            }
        },
        "assert_type": {
            "name": "assert_type",
            "location": 849,
            "return": [],
            "arguments": {
                "__val": [],
                "__typ": []
            }
        },
        "_strip_extras": {
            "name": "_strip_extras",
            "location": 872,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "get_type_hints": {
            "name": "get_type_hints",
            "location": 896,
            "return": [],
            "arguments": {
                "obj": [],
                "globalns": [],
                "localns": [],
                "include_extras": []
            }
        },
        "get_origin": {
            "name": "get_origin",
            "location": 1063,
            "return": [],
            "arguments": {
                "tp": []
            }
        },
        "get_args": {
            "name": "get_args",
            "location": 1087,
            "return": [],
            "arguments": {
                "tp": []
            }
        },
        "_DefaultMixin.__init__": {
            "name": "__init__",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "TypeVar.__init__": {
            "name": "__init__",
            "location": 1172,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_SpecialForm.__init__": {
            "name": "__init__",
            "location": 1587,
            "return": [],
            "arguments": {
                "self": [],
                "getitem": []
            }
        },
        "_SpecialForm.__getattr__": {
            "name": "__getattr__",
            "location": 1592,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_SpecialForm.__mro_entries__": {
            "name": "__mro_entries__",
            "location": 1598,
            "return": [],
            "arguments": {
                "self": [],
                "bases": []
            }
        },
        "_SpecialForm.__repr__": {
            "name": "__repr__",
            "location": 1601,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__reduce__": {
            "name": "__reduce__",
            "location": 1604,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__call__": {
            "name": "__call__",
            "location": 1607,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__or__": {
            "name": "__or__",
            "location": 1610,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_SpecialForm.__ror__": {
            "name": "__ror__",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_SpecialForm.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 1616,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_SpecialForm.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 1619,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_SpecialForm.__getitem__": {
            "name": "__getitem__",
            "location": 1623,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "LiteralString": {
            "name": "LiteralString",
            "location": 1631,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "Self": {
            "name": "Self",
            "location": 1654,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "Never": {
            "name": "Never",
            "location": 1675,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "reveal_type": {
            "name": "reveal_type",
            "location": 1950,
            "return": [],
            "arguments": {
                "__obj": []
            }
        },
        "assert_never": {
            "name": "assert_never",
            "location": 1973,
            "return": [],
            "arguments": {
                "__arg": []
            }
        },
        "dataclass_transform": {
            "name": "dataclass_transform",
            "location": 1999,
            "return": [],
            "arguments": {}
        },
        "override": {
            "name": "override",
            "location": 2086,
            "return": [],
            "arguments": {
                "__arg": []
            }
        },
        "_caller": {
            "name": "_caller",
            "location": 2129,
            "return": [],
            "arguments": {}
        },
        "_make_nmtuple": {
            "name": "_make_nmtuple",
            "location": 2135,
            "return": [],
            "arguments": {
                "name": [],
                "types": [],
                "module": [],
                "defaults": []
            }
        },
        "NamedTuple": {
            "name": "NamedTuple",
            "location": 2188,
            "return": [],
            "arguments": {
                "__typename": [],
                "__fields": []
            }
        },
        "_namedtuple_mro_entries": {
            "name": "_namedtuple_mro_entries",
            "location": 2205,
            "return": [],
            "arguments": {
                "bases": []
            }
        },
        "_AnyMeta.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_AnyMeta.__repr__": {
            "name": "__repr__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Any.__new__": {
            "name": "__new__",
            "location": 179,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_FinalForm.__repr__": {
            "name": "__repr__",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FinalForm.__getitem__": {
            "name": "__getitem__",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_LiteralForm.__repr__": {
            "name": "__repr__",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LiteralForm.__getitem__": {
            "name": "__getitem__",
            "location": 270,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_ProtocolMeta.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 470,
            "return": [],
            "arguments": {
                "cls": [],
                "instance": []
            }
        },
        "Protocol.__new__": {
            "name": "__new__",
            "location": 520,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Protocol.__class_getitem__": {
            "name": "__class_getitem__",
            "location": 527,
            "return": [],
            "arguments": {
                "cls": [],
                "params": []
            }
        },
        "Protocol.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 552,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SupportsIndex.__index__": {
            "name": "__index__",
            "location": 649,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypedDictMeta.__init__": {
            "name": "__init__",
            "location": 732,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "ns": [],
                "total": []
            }
        },
        "_TypedDictMeta.__new__": {
            "name": "__new__",
            "location": 735,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "ns": [],
                "total": []
            }
        },
        "_AnnotatedAlias.__init__": {
            "name": "__init__",
            "location": 955,
            "return": [],
            "arguments": {
                "self": [],
                "origin": [],
                "metadata": []
            }
        },
        "_AnnotatedAlias.copy_with": {
            "name": "copy_with",
            "location": 962,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "_AnnotatedAlias.__repr__": {
            "name": "__repr__",
            "location": 967,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_AnnotatedAlias.__reduce__": {
            "name": "__reduce__",
            "location": 971,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_AnnotatedAlias.__eq__": {
            "name": "__eq__",
            "location": 976,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_AnnotatedAlias.__hash__": {
            "name": "__hash__",
            "location": 983,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Annotated.__new__": {
            "name": "__new__",
            "location": 1021,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Annotated.__class_getitem__": {
            "name": "__class_getitem__",
            "location": 1025,
            "return": [],
            "arguments": {
                "cls": [],
                "params": []
            }
        },
        "Annotated.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 1039,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TypeAlias": {
            "name": "TypeAlias",
            "location": 1120,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_Immutable.__copy__": {
            "name": "__copy__",
            "location": 1199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Immutable.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 1202,
            "return": [],
            "arguments": {
                "self": [],
                "memo": []
            }
        },
        "ParamSpecArgs.__init__": {
            "name": "__init__",
            "location": 1217,
            "return": [],
            "arguments": {
                "self": [],
                "origin": []
            }
        },
        "ParamSpecArgs.__repr__": {
            "name": "__repr__",
            "location": 1220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpecArgs.__eq__": {
            "name": "__eq__",
            "location": 1223,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParamSpecKwargs.__init__": {
            "name": "__init__",
            "location": 1240,
            "return": [],
            "arguments": {
                "self": [],
                "origin": []
            }
        },
        "ParamSpecKwargs.__repr__": {
            "name": "__repr__",
            "location": 1243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpecKwargs.__eq__": {
            "name": "__eq__",
            "location": 1246,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParamSpec.__init__": {
            "name": "__init__",
            "location": 1336,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParamSpec.args": {
            "name": "args",
            "location": 1329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.kwargs": {
            "name": "kwargs",
            "location": 1333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__repr__": {
            "name": "__repr__",
            "location": 1356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__hash__": {
            "name": "__hash__",
            "location": 1365,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__eq__": {
            "name": "__eq__",
            "location": 1368,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParamSpec.__reduce__": {
            "name": "__reduce__",
            "location": 1371,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__call__": {
            "name": "__call__",
            "location": 1375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__init__": {
            "name": "__init__",
            "location": 1390,
            "return": [],
            "arguments": {
                "self": [],
                "origin": [],
                "args": []
            }
        },
        "_ConcatenateGenericAlias.__repr__": {
            "name": "__repr__",
            "location": 1395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__hash__": {
            "name": "__hash__",
            "location": 1400,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__call__": {
            "name": "__call__",
            "location": 1404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__parameters__": {
            "name": "__parameters__",
            "location": 1408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Concatenate": {
            "name": "Concatenate",
            "location": 1436,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "TypeGuard": {
            "name": "TypeGuard",
            "location": 1480,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Required": {
            "name": "Required",
            "location": 1710,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "NotRequired": {
            "name": "NotRequired",
            "location": 1730,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Unpack": {
            "name": "Unpack",
            "location": 1800,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_is_unpack": {
            "name": "_is_unpack",
            "location": 1843,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "TypeVarTuple.__init__": {
            "name": "__init__",
            "location": 1916,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TypeVarTuple.__iter__": {
            "name": "__iter__",
            "location": 1913,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeVarTuple.__repr__": {
            "name": "__repr__",
            "location": 1930,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeVarTuple.__hash__": {
            "name": "__hash__",
            "location": 1933,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeVarTuple.__eq__": {
            "name": "__eq__",
            "location": 1936,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TypeVarTuple.__reduce__": {
            "name": "__reduce__",
            "location": 1939,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TypeVarTuple.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 1942,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dataclass_transform.decorator": {
            "name": "decorator",
            "location": 2069,
            "return": [],
            "arguments": {
                "cls_or_fn": []
            }
        },
        "_NamedTupleMeta.__new__": {
            "name": "__new__",
            "location": 2152,
            "return": [],
            "arguments": {
                "cls": [],
                "typename": [],
                "bases": [],
                "ns": []
            }
        },
        "Protocol.__init_subclass__._proto_hook": {
            "name": "_proto_hook",
            "location": 566,
            "return": [],
            "arguments": {
                "other": []
            }
        },
        "_TypeAliasForm.__repr__": {
            "name": "__repr__",
            "location": 1135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateForm.__repr__": {
            "name": "__repr__",
            "location": 1451,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateForm.__getitem__": {
            "name": "__getitem__",
            "location": 1454,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_TypeGuardForm.__repr__": {
            "name": "__repr__",
            "location": 1529,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypeGuardForm.__getitem__": {
            "name": "__getitem__",
            "location": 1532,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_ExtensionsSpecialForm.__repr__": {
            "name": "__repr__",
            "location": 1706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RequiredForm.__repr__": {
            "name": "__repr__",
            "location": 1748,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RequiredForm.__getitem__": {
            "name": "__getitem__",
            "location": 1751,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_UnpackSpecialForm.__repr__": {
            "name": "__repr__",
            "location": 1793,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_UnpackForm.__repr__": {
            "name": "__repr__",
            "location": 1822,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_UnpackForm.__getitem__": {
            "name": "__getitem__",
            "location": 1825,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/__init__.py": {
        "vendored": {
            "name": "vendored",
            "location": 29,
            "return": [],
            "arguments": {
                "modulename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/adapter.py": {
        "CacheControlAdapter.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "cache": [],
                "cache_etags": [],
                "controller_class": [],
                "serializer": [],
                "heuristic": [],
                "cacheable_methods": []
            }
        },
        "CacheControlAdapter.send": {
            "name": "send",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "cacheable_methods": []
            }
        },
        "CacheControlAdapter.build_response": {
            "name": "build_response",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "from_cache": [],
                "cacheable_methods": []
            }
        },
        "CacheControlAdapter.close": {
            "name": "close",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CacheControlAdapter.build_response._update_chunk_length": {
            "name": "_update_chunk_length",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/cache.py": {
        "BaseCache.get": {
            "name": "get",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BaseCache.set": {
            "name": "set",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expires": []
            }
        },
        "BaseCache.delete": {
            "name": "delete",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BaseCache.close": {
            "name": "close",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DictCache.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "init_dict": []
            }
        },
        "DictCache.get": {
            "name": "get",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DictCache.set": {
            "name": "set",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expires": []
            }
        },
        "DictCache.delete": {
            "name": "delete",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SeparateBodyBaseCache.set_body": {
            "name": "set_body",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "body": []
            }
        },
        "SeparateBodyBaseCache.get_body": {
            "name": "get_body",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/compat.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/controller.py": {
        "parse_uri": {
            "name": "parse_uri",
            "location": 27,
            "return": [],
            "arguments": {
                "uri": []
            }
        },
        "CacheController.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "cache": [],
                "cache_etags": [],
                "serializer": [],
                "status_codes": []
            }
        },
        "CacheController._urlnorm": {
            "name": "_urlnorm",
            "location": 48,
            "return": [],
            "arguments": {
                "cls": [],
                "uri": []
            }
        },
        "CacheController.cache_url": {
            "name": "cache_url",
            "location": 68,
            "return": [],
            "arguments": {
                "cls": [],
                "uri": []
            }
        },
        "CacheController.parse_cache_control": {
            "name": "parse_cache_control",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "CacheController.cached_request": {
            "name": "cached_request",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CacheController.conditional_headers": {
            "name": "conditional_headers",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CacheController._cache_set": {
            "name": "_cache_set",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "cache_url": [],
                "request": [],
                "response": [],
                "body": [],
                "expires_time": []
            }
        },
        "CacheController.cache_response": {
            "name": "cache_response",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "body": [],
                "status_codes": []
            }
        },
        "CacheController.update_cached_response": {
            "name": "update_cached_response",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/filewrapper.py": {
        "CallbackFileWrapper.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "callback": []
            }
        },
        "CallbackFileWrapper.__getattr__": {
            "name": "__getattr__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CallbackFileWrapper.__is_fp_closed": {
            "name": "__is_fp_closed",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallbackFileWrapper._close": {
            "name": "_close",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallbackFileWrapper.read": {
            "name": "read",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "amt": []
            }
        },
        "CallbackFileWrapper._safe_read": {
            "name": "_safe_read",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "amt": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/heuristics.py": {
        "expire_after": {
            "name": "expire_after",
            "location": 15,
            "return": [],
            "arguments": {
                "delta": [],
                "date": []
            }
        },
        "datetime_to_header": {
            "name": "datetime_to_header",
            "location": 20,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "BaseHeuristic.warning": {
            "name": "warning",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BaseHeuristic.update_headers": {
            "name": "update_headers",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "BaseHeuristic.apply": {
            "name": "apply",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "OneDayCache.update_headers": {
            "name": "update_headers",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "ExpiresAfter.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpiresAfter.update_headers": {
            "name": "update_headers",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "ExpiresAfter.warning": {
            "name": "warning",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "LastModified.update_headers": {
            "name": "update_headers",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        },
        "LastModified.warning": {
            "name": "warning",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/serialize.py": {
        "_b64_decode_bytes": {
            "name": "_b64_decode_bytes",
            "location": 16,
            "return": [],
            "arguments": {
                "b": []
            }
        },
        "_b64_decode_str": {
            "name": "_b64_decode_str",
            "location": 20,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "Serializer.dumps": {
            "name": "dumps",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "body": []
            }
        },
        "Serializer.loads": {
            "name": "loads",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        },
        "Serializer.prepare_response": {
            "name": "prepare_response",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "cached": [],
                "body_file": []
            }
        },
        "Serializer._loads_v0": {
            "name": "_loads_v0",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        },
        "Serializer._loads_v1": {
            "name": "_loads_v1",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        },
        "Serializer._loads_v2": {
            "name": "_loads_v2",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        },
        "Serializer._loads_v3": {
            "name": "_loads_v3",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        },
        "Serializer._loads_v4": {
            "name": "_loads_v4",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "data": [],
                "body_file": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/wrapper.py": {
        "CacheControl": {
            "name": "CacheControl",
            "location": 9,
            "return": [],
            "arguments": {
                "sess": [],
                "cache": [],
                "cache_etags": [],
                "serializer": [],
                "heuristic": [],
                "controller_class": [],
                "adapter_class": [],
                "cacheable_methods": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/_cmd.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "get_session": {
            "name": "get_session",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "get_args": {
            "name": "get_args",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/file_cache.py": {
        "_secure_open_write": {
            "name": "_secure_open_write",
            "location": 19,
            "return": [],
            "arguments": {
                "filename": [],
                "fmode": []
            }
        },
        "url_to_file_path": {
            "name": "url_to_file_path",
            "location": 182,
            "return": [],
            "arguments": {
                "url": [],
                "filecache": []
            }
        },
        "_FileCacheMixin.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "directory": [],
                "forever": [],
                "filemode": [],
                "dirmode": [],
                "use_dir_lock": [],
                "lock_class": []
            }
        },
        "_FileCacheMixin.encode": {
            "name": "encode",
            "location": 103,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "_FileCacheMixin._fn": {
            "name": "_fn",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_FileCacheMixin.get": {
            "name": "get",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "_FileCacheMixin.set": {
            "name": "set",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expires": []
            }
        },
        "_FileCacheMixin._write": {
            "name": "_write",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "_FileCacheMixin._delete": {
            "name": "_delete",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "suffix": []
            }
        },
        "FileCache.delete": {
            "name": "delete",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SeparateBodyFileCache.get_body": {
            "name": "get_body",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SeparateBodyFileCache.set_body": {
            "name": "set_body",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "body": []
            }
        },
        "SeparateBodyFileCache.delete": {
            "name": "delete",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/redis_cache.py": {
        "RedisCache.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "RedisCache.get": {
            "name": "get",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RedisCache.set": {
            "name": "set",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expires": []
            }
        },
        "RedisCache.delete": {
            "name": "delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RedisCache.clear": {
            "name": "clear",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RedisCache.close": {
            "name": "close",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/cachecontrol/caches/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/certifi/core.py": {
        "where": {
            "name": "where",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "contents": {
            "name": "contents",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "read_text": {
            "name": "read_text",
            "location": 91,
            "return": [],
            "arguments": {
                "package": [],
                "resource": [],
                "encoding": [],
                "errors": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/certifi/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/certifi/__main__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/big5freq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/big5prober.py": {
        "Big5Prober.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Big5Prober.charset_name": {
            "name": "charset_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Big5Prober.language": {
            "name": "language",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/chardistribution.py": {
        "CharDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharDistributionAnalysis.reset": {
            "name": "reset",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharDistributionAnalysis.feed": {
            "name": "feed",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "char": [],
                "char_len": []
            }
        },
        "CharDistributionAnalysis.get_confidence": {
            "name": "get_confidence",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharDistributionAnalysis.got_enough_data": {
            "name": "got_enough_data",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "EUCTWDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCTWDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "EUCKRDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCKRDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "JOHABDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JOHABDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "GB2312DistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GB2312DistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "Big5DistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Big5DistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "SJISDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "EUCJPDistributionAnalysis.__init__": {
            "name": "__init__",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCJPDistributionAnalysis.get_order": {
            "name": "get_order",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/charsetgroupprober.py": {
        "CharSetGroupProber.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        },
        "CharSetGroupProber.reset": {
            "name": "reset",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetGroupProber.charset_name": {
            "name": "charset_name",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetGroupProber.language": {
            "name": "language",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetGroupProber.feed": {
            "name": "feed",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "CharSetGroupProber.get_confidence": {
            "name": "get_confidence",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/charsetprober.py": {
        "CharSetProber.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        },
        "CharSetProber.reset": {
            "name": "reset",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetProber.charset_name": {
            "name": "charset_name",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetProber.feed": {
            "name": "feed",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "CharSetProber.state": {
            "name": "state",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetProber.get_confidence": {
            "name": "get_confidence",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharSetProber.filter_high_byte_only": {
            "name": "filter_high_byte_only",
            "location": 66,
            "return": [],
            "arguments": {
                "buf": []
            }
        },
        "CharSetProber.filter_international_words": {
            "name": "filter_international_words",
            "location": 71,
            "return": [],
            "arguments": {
                "buf": []
            }
        },
        "CharSetProber.remove_xml_tags": {
            "name": "remove_xml_tags",
            "location": 105,
            "return": [],
            "arguments": {
                "buf": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/codingstatemachine.py": {
        "CodingStateMachine.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "sm": []
            }
        },
        "CodingStateMachine.reset": {
            "name": "reset",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CodingStateMachine.next_state": {
            "name": "next_state",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "CodingStateMachine.get_current_charlen": {
            "name": "get_current_charlen",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CodingStateMachine.get_coding_state_machine": {
            "name": "get_coding_state_machine",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CodingStateMachine.language": {
            "name": "language",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/cp949prober.py": {
        "CP949Prober.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CP949Prober.charset_name": {
            "name": "charset_name",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CP949Prober.language": {
            "name": "language",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/enums.py": {
        "SequenceLikelihood.get_num_categories": {
            "name": "get_num_categories",
            "location": 65,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/escprober.py": {
        "EscCharSetProber.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        },
        "EscCharSetProber.reset": {
            "name": "reset",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscCharSetProber.charset_name": {
            "name": "charset_name",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscCharSetProber.language": {
            "name": "language",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscCharSetProber.get_confidence": {
            "name": "get_confidence",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscCharSetProber.feed": {
            "name": "feed",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/escsm.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/eucjpprober.py": {
        "EUCJPProber.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCJPProber.reset": {
            "name": "reset",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCJPProber.charset_name": {
            "name": "charset_name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCJPProber.language": {
            "name": "language",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCJPProber.feed": {
            "name": "feed",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "EUCJPProber.get_confidence": {
            "name": "get_confidence",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/euckrfreq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/euckrprober.py": {
        "EUCKRProber.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCKRProber.charset_name": {
            "name": "charset_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCKRProber.language": {
            "name": "language",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/euctwfreq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/euctwprober.py": {
        "EUCTWProber.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCTWProber.charset_name": {
            "name": "charset_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EUCTWProber.language": {
            "name": "language",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/gb2312freq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/gb2312prober.py": {
        "GB2312Prober.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GB2312Prober.charset_name": {
            "name": "charset_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GB2312Prober.language": {
            "name": "language",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/hebrewprober.py": {
        "HebrewProber.__init__": {
            "name": "__init__",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HebrewProber.reset": {
            "name": "reset",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HebrewProber.set_model_probers": {
            "name": "set_model_probers",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "logical_prober": [],
                "visual_prober": []
            }
        },
        "HebrewProber.is_final": {
            "name": "is_final",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "HebrewProber.is_non_final": {
            "name": "is_non_final",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "HebrewProber.feed": {
            "name": "feed",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "HebrewProber.charset_name": {
            "name": "charset_name",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HebrewProber.language": {
            "name": "language",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HebrewProber.state": {
            "name": "state",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/jisfreq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/johabfreq.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/johabprober.py": {
        "JOHABProber.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JOHABProber.charset_name": {
            "name": "charset_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JOHABProber.language": {
            "name": "language",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/jpcntx.py": {
        "JapaneseContextAnalysis.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JapaneseContextAnalysis.reset": {
            "name": "reset",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JapaneseContextAnalysis.feed": {
            "name": "feed",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": [],
                "num_bytes": []
            }
        },
        "JapaneseContextAnalysis.got_enough_data": {
            "name": "got_enough_data",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JapaneseContextAnalysis.get_confidence": {
            "name": "get_confidence",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JapaneseContextAnalysis.get_order": {
            "name": "get_order",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "SJISContextAnalysis.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISContextAnalysis.charset_name": {
            "name": "charset_name",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISContextAnalysis.get_order": {
            "name": "get_order",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "EUCJPContextAnalysis.get_order": {
            "name": "get_order",
            "location": 219,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langbulgarianmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langgreekmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langhebrewmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langhungarianmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langrussianmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langthaimodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/langturkishmodel.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/latin1prober.py": {
        "Latin1Prober.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Latin1Prober.reset": {
            "name": "reset",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Latin1Prober.charset_name": {
            "name": "charset_name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Latin1Prober.language": {
            "name": "language",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Latin1Prober.feed": {
            "name": "feed",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "Latin1Prober.get_confidence": {
            "name": "get_confidence",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/mbcharsetprober.py": {
        "MultiByteCharSetProber.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        },
        "MultiByteCharSetProber.reset": {
            "name": "reset",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiByteCharSetProber.charset_name": {
            "name": "charset_name",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiByteCharSetProber.language": {
            "name": "language",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiByteCharSetProber.feed": {
            "name": "feed",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "MultiByteCharSetProber.get_confidence": {
            "name": "get_confidence",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/mbcsgroupprober.py": {
        "MBCSGroupProber.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/mbcssm.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/sbcharsetprober.py": {
        "SingleByteCharSetProber.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "model": [],
                "is_reversed": [],
                "name_prober": []
            }
        },
        "SingleByteCharSetProber.reset": {
            "name": "reset",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SingleByteCharSetProber.charset_name": {
            "name": "charset_name",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SingleByteCharSetProber.language": {
            "name": "language",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SingleByteCharSetProber.feed": {
            "name": "feed",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "SingleByteCharSetProber.get_confidence": {
            "name": "get_confidence",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/sbcsgroupprober.py": {
        "SBCSGroupProber.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/sjisprober.py": {
        "SJISProber.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISProber.reset": {
            "name": "reset",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISProber.charset_name": {
            "name": "charset_name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISProber.language": {
            "name": "language",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SJISProber.feed": {
            "name": "feed",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "SJISProber.get_confidence": {
            "name": "get_confidence",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/universaldetector.py": {
        "UniversalDetector.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "lang_filter": []
            }
        },
        "UniversalDetector.input_state": {
            "name": "input_state",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversalDetector.has_win_bytes": {
            "name": "has_win_bytes",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversalDetector.charset_probers": {
            "name": "charset_probers",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversalDetector.reset": {
            "name": "reset",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversalDetector.feed": {
            "name": "feed",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "UniversalDetector.close": {
            "name": "close",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/utf1632prober.py": {
        "UTF1632Prober.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.reset": {
            "name": "reset",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.charset_name": {
            "name": "charset_name",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.language": {
            "name": "language",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.approx_32bit_chars": {
            "name": "approx_32bit_chars",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.approx_16bit_chars": {
            "name": "approx_16bit_chars",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.is_likely_utf32be": {
            "name": "is_likely_utf32be",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.is_likely_utf32le": {
            "name": "is_likely_utf32le",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.is_likely_utf16be": {
            "name": "is_likely_utf16be",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.is_likely_utf16le": {
            "name": "is_likely_utf16le",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.validate_utf32_characters": {
            "name": "validate_utf32_characters",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "quad": []
            }
        },
        "UTF1632Prober.validate_utf16_characters": {
            "name": "validate_utf16_characters",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "pair": []
            }
        },
        "UTF1632Prober.feed": {
            "name": "feed",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "UTF1632Prober.state": {
            "name": "state",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF1632Prober.get_confidence": {
            "name": "get_confidence",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/utf8prober.py": {
        "UTF8Prober.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF8Prober.reset": {
            "name": "reset",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF8Prober.charset_name": {
            "name": "charset_name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF8Prober.language": {
            "name": "language",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTF8Prober.feed": {
            "name": "feed",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "byte_str": []
            }
        },
        "UTF8Prober.get_confidence": {
            "name": "get_confidence",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/version.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/__init__.py": {
        "detect": {
            "name": "detect",
            "location": 25,
            "return": [],
            "arguments": {
                "byte_str": []
            }
        },
        "detect_all": {
            "name": "detect_all",
            "location": 43,
            "return": [],
            "arguments": {
                "byte_str": [],
                "ignore_threshold": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/cli/chardetect.py": {
        "description_of": {
            "name": "description_of",
            "location": 23,
            "return": [],
            "arguments": {
                "lines": [],
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 47,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/cli/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/metadata/languages.py": {
        "Language.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "iso_code": [],
                "use_ascii": [],
                "charsets": [],
                "alphabet": [],
                "wiki_start_pages": []
            }
        },
        "Language.__repr__": {
            "name": "__repr__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/chardet/metadata/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/ansi.py": {
        "code_to_chars": {
            "name": "code_to_chars",
            "location": 12,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "set_title": {
            "name": "set_title",
            "location": 15,
            "return": [],
            "arguments": {
                "title": []
            }
        },
        "clear_screen": {
            "name": "clear_screen",
            "location": 18,
            "return": [],
            "arguments": {
                "mode": []
            }
        },
        "clear_line": {
            "name": "clear_line",
            "location": 21,
            "return": [],
            "arguments": {
                "mode": []
            }
        },
        "AnsiCodes.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiCursor.UP": {
            "name": "UP",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "AnsiCursor.DOWN": {
            "name": "DOWN",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "AnsiCursor.FORWARD": {
            "name": "FORWARD",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "AnsiCursor.BACK": {
            "name": "BACK",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "AnsiCursor.POS": {
            "name": "POS",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/ansitowin32.py": {
        "StreamWrapper.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "wrapped": [],
                "converter": []
            }
        },
        "StreamWrapper.__getattr__": {
            "name": "__getattr__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "StreamWrapper.__enter__": {
            "name": "__enter__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamWrapper.__exit__": {
            "name": "__exit__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamWrapper.__setstate__": {
            "name": "__setstate__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "StreamWrapper.__getstate__": {
            "name": "__getstate__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamWrapper.write": {
            "name": "write",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "StreamWrapper.isatty": {
            "name": "isatty",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamWrapper.closed": {
            "name": "closed",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiToWin32.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "wrapped": [],
                "convert": [],
                "strip": [],
                "autoreset": []
            }
        },
        "AnsiToWin32.should_wrap": {
            "name": "should_wrap",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiToWin32.get_win32_calls": {
            "name": "get_win32_calls",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiToWin32.write": {
            "name": "write",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "AnsiToWin32.reset_all": {
            "name": "reset_all",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiToWin32.write_and_convert": {
            "name": "write_and_convert",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "AnsiToWin32.write_plain_text": {
            "name": "write_plain_text",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "start": [],
                "end": []
            }
        },
        "AnsiToWin32.convert_ansi": {
            "name": "convert_ansi",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "paramstring": [],
                "command": []
            }
        },
        "AnsiToWin32.extract_params": {
            "name": "extract_params",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "paramstring": []
            }
        },
        "AnsiToWin32.call_win32": {
            "name": "call_win32",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "params": []
            }
        },
        "AnsiToWin32.convert_osc": {
            "name": "convert_osc",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/initialise.py": {
        "reset_all": {
            "name": "reset_all",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "init": {
            "name": "init",
            "location": 23,
            "return": [],
            "arguments": {
                "autoreset": [],
                "convert": [],
                "strip": [],
                "wrap": []
            }
        },
        "deinit": {
            "name": "deinit",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "colorama_text": {
            "name": "colorama_text",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "reinit": {
            "name": "reinit",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "wrap_stream": {
            "name": "wrap_stream",
            "location": 74,
            "return": [],
            "arguments": {
                "stream": [],
                "convert": [],
                "strip": [],
                "autoreset": [],
                "wrap": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/win32.py": {
        "_winapi_test": {
            "name": "_winapi_test",
            "location": 92,
            "return": [],
            "arguments": {
                "handle": []
            }
        },
        "winapi_test": {
            "name": "winapi_test",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "GetConsoleScreenBufferInfo": {
            "name": "GetConsoleScreenBufferInfo",
            "location": 102,
            "return": [],
            "arguments": {
                "stream_id": []
            }
        },
        "SetConsoleTextAttribute": {
            "name": "SetConsoleTextAttribute",
            "location": 109,
            "return": [],
            "arguments": {
                "stream_id": [],
                "attrs": []
            }
        },
        "SetConsoleCursorPosition": {
            "name": "SetConsoleCursorPosition",
            "location": 113,
            "return": [],
            "arguments": {
                "stream_id": [],
                "position": [],
                "adjust": []
            }
        },
        "FillConsoleOutputCharacter": {
            "name": "FillConsoleOutputCharacter",
            "location": 131,
            "return": [],
            "arguments": {
                "stream_id": [],
                "char": [],
                "length": [],
                "start": []
            }
        },
        "FillConsoleOutputAttribute": {
            "name": "FillConsoleOutputAttribute",
            "location": 141,
            "return": [],
            "arguments": {
                "stream_id": [],
                "attr": [],
                "length": [],
                "start": []
            }
        },
        "SetConsoleTitle": {
            "name": "SetConsoleTitle",
            "location": 151,
            "return": [],
            "arguments": {
                "title": []
            }
        },
        "CONSOLE_SCREEN_BUFFER_INFO.__str__": {
            "name": "__str__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/winterm.py": {
        "WinTerm.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WinTerm.get_attrs": {
            "name": "get_attrs",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WinTerm.set_attrs": {
            "name": "set_attrs",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "WinTerm.reset_all": {
            "name": "reset_all",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "on_stderr": []
            }
        },
        "WinTerm.fore": {
            "name": "fore",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "fore": [],
                "light": [],
                "on_stderr": []
            }
        },
        "WinTerm.back": {
            "name": "back",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "back": [],
                "light": [],
                "on_stderr": []
            }
        },
        "WinTerm.style": {
            "name": "style",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "style": [],
                "on_stderr": []
            }
        },
        "WinTerm.set_console": {
            "name": "set_console",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "on_stderr": []
            }
        },
        "WinTerm.get_position": {
            "name": "get_position",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "handle": []
            }
        },
        "WinTerm.set_cursor_position": {
            "name": "set_cursor_position",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "position": [],
                "on_stderr": []
            }
        },
        "WinTerm.cursor_adjust": {
            "name": "cursor_adjust",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "on_stderr": []
            }
        },
        "WinTerm.erase_screen": {
            "name": "erase_screen",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "on_stderr": []
            }
        },
        "WinTerm.erase_line": {
            "name": "erase_line",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "on_stderr": []
            }
        },
        "WinTerm.set_title": {
            "name": "set_title",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/colorama/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/compat.py": {
        "quote": {
            "name": "quote",
            "location": 29,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_dnsname_match": {
            "name": "_dnsname_match",
            "location": 99,
            "return": [],
            "arguments": {
                "dn": [],
                "hostname": [],
                "max_wildcards": []
            }
        },
        "match_hostname": {
            "name": "match_hostname",
            "location": 149,
            "return": [],
            "arguments": {
                "cert": [],
                "hostname": []
            }
        },
        "which": {
            "name": "which",
            "location": 207,
            "return": [],
            "arguments": {
                "cmd": [],
                "mode": [],
                "path": []
            }
        },
        "ZipExtFile.__init__": {
            "name": "__init__",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "base": []
            }
        },
        "ZipExtFile.__enter__": {
            "name": "__enter__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipExtFile.__exit__": {
            "name": "__exit__",
            "location": 286,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipFile.__enter__": {
            "name": "__enter__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipFile.__exit__": {
            "name": "__exit__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipFile.open": {
            "name": "open",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "python_implementation": {
            "name": "python_implementation",
            "location": 305,
            "return": [],
            "arguments": {}
        },
        "callable": {
            "name": "callable",
            "location": 323,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "fsencode": {
            "name": "fsencode",
            "location": 343,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "fsdecode": {
            "name": "fsdecode",
            "location": 352,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_get_normal_name": {
            "name": "_get_normal_name",
            "location": 369,
            "return": [],
            "arguments": {
                "orig_enc": []
            }
        },
        "detect_encoding": {
            "name": "detect_encoding",
            "location": 380,
            "return": [],
            "arguments": {
                "readline": []
            }
        },
        "cache_from_source": {
            "name": "cache_from_source",
            "location": 618,
            "return": [],
            "arguments": {
                "path": [],
                "debug_override": []
            }
        },
        "valid_ident": {
            "name": "valid_ident",
            "location": 897,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "pop": {
            "name": "pop",
            "location": 940,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "Container.__init__": {
            "name": "__init__",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "which._access_check": {
            "name": "_access_check",
            "location": 220,
            "return": [],
            "arguments": {
                "fn": [],
                "mode": []
            }
        },
        "detect_encoding.read_or_stop": {
            "name": "read_or_stop",
            "location": 404,
            "return": [],
            "arguments": {}
        },
        "detect_encoding.find_cookie": {
            "name": "find_cookie",
            "location": 410,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "ChainMap.__init__": {
            "name": "__init__",
            "location": 530,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.__missing__": {
            "name": "__missing__",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ChainMap.__getitem__": {
            "name": "__getitem__",
            "location": 540,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ChainMap.get": {
            "name": "get",
            "location": 548,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "ChainMap.__len__": {
            "name": "__len__",
            "location": 551,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.__iter__": {
            "name": "__iter__",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.__contains__": {
            "name": "__contains__",
            "location": 557,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ChainMap.__bool__": {
            "name": "__bool__",
            "location": 560,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.__repr__": {
            "name": "__repr__",
            "location": 564,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.fromkeys": {
            "name": "fromkeys",
            "location": 569,
            "return": [],
            "arguments": {
                "cls": [],
                "iterable": []
            }
        },
        "ChainMap.copy": {
            "name": "copy",
            "location": 573,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.new_child": {
            "name": "new_child",
            "location": 579,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.parents": {
            "name": "parents",
            "location": 584,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.__setitem__": {
            "name": "__setitem__",
            "location": 588,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "ChainMap.__delitem__": {
            "name": "__delitem__",
            "location": 591,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ChainMap.popitem": {
            "name": "popitem",
            "location": 597,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChainMap.pop": {
            "name": "pop",
            "location": 604,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ChainMap.clear": {
            "name": "clear",
            "location": 611,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.__init__": {
            "name": "__init__",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.__setitem__": {
            "name": "__setitem__",
            "location": 673,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "dict_setitem": []
            }
        },
        "OrderedDict.__delitem__": {
            "name": "__delitem__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "dict_delitem": []
            }
        },
        "OrderedDict.__iter__": {
            "name": "__iter__",
            "location": 692,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.__reversed__": {
            "name": "__reversed__",
            "location": 700,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.clear": {
            "name": "clear",
            "location": 708,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.popitem": {
            "name": "popitem",
            "location": 720,
            "return": [],
            "arguments": {
                "self": [],
                "last": []
            }
        },
        "OrderedDict.keys": {
            "name": "keys",
            "location": 745,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.values": {
            "name": "values",
            "location": 749,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.items": {
            "name": "items",
            "location": 753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.iterkeys": {
            "name": "iterkeys",
            "location": 757,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.itervalues": {
            "name": "itervalues",
            "location": 761,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.iteritems": {
            "name": "iteritems",
            "location": 766,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.update": {
            "name": "update",
            "location": 771,
            "return": [],
            "arguments": {}
        },
        "OrderedDict.pop": {
            "name": "pop",
            "location": 806,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "OrderedDict.setdefault": {
            "name": "setdefault",
            "location": 819,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "OrderedDict.__repr__": {
            "name": "__repr__",
            "location": 826,
            "return": [],
            "arguments": {
                "self": [],
                "_repr_running": []
            }
        },
        "OrderedDict.__reduce__": {
            "name": "__reduce__",
            "location": 840,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.copy": {
            "name": "copy",
            "location": 850,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.fromkeys": {
            "name": "fromkeys",
            "location": 855,
            "return": [],
            "arguments": {
                "cls": [],
                "iterable": [],
                "value": []
            }
        },
        "OrderedDict.__eq__": {
            "name": "__eq__",
            "location": 865,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedDict.__ne__": {
            "name": "__ne__",
            "location": 874,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedDict.viewkeys": {
            "name": "viewkeys",
            "location": 879,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.viewvalues": {
            "name": "viewvalues",
            "location": 883,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedDict.viewitems": {
            "name": "viewitems",
            "location": 887,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvertingDict.__getitem__": {
            "name": "__getitem__",
            "location": 916,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConvertingDict.get": {
            "name": "get",
            "location": 928,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "ConvertingList.__getitem__": {
            "name": "__getitem__",
            "location": 952,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConvertingList.pop": {
            "name": "pop",
            "location": 964,
            "return": [],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "ConvertingTuple.__getitem__": {
            "name": "__getitem__",
            "location": 975,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BaseConfigurator.__init__": {
            "name": "__init__",
            "location": 1005,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "BaseConfigurator.resolve": {
            "name": "resolve",
            "location": 1009,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "BaseConfigurator.ext_convert": {
            "name": "ext_convert",
            "location": 1032,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseConfigurator.cfg_convert": {
            "name": "cfg_convert",
            "location": 1036,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseConfigurator.convert": {
            "name": "convert",
            "location": 1070,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseConfigurator.configure_custom": {
            "name": "configure_custom",
            "location": 1098,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "BaseConfigurator.as_tuple": {
            "name": "as_tuple",
            "location": 1112,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_recursive_repr": {
            "name": "_recursive_repr",
            "location": 488,
            "return": [],
            "arguments": {
                "fillvalue": []
            }
        },
        "_recursive_repr.decorating_function": {
            "name": "decorating_function",
            "location": 494,
            "return": [],
            "arguments": {
                "user_function": []
            }
        },
        "_recursive_repr.decorating_function.wrapper": {
            "name": "wrapper",
            "location": 497,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/database.py": {
        "make_graph": {
            "name": "make_graph",
            "location": 1232,
            "return": [],
            "arguments": {
                "dists": [],
                "scheme": []
            }
        },
        "get_dependent_dists": {
            "name": "get_dependent_dists",
            "location": 1286,
            "return": [],
            "arguments": {
                "dists": [],
                "dist": []
            }
        },
        "get_required_dists": {
            "name": "get_required_dists",
            "location": 1312,
            "return": [],
            "arguments": {
                "dists": [],
                "dist": []
            }
        },
        "make_dist": {
            "name": "make_dist",
            "location": 1341,
            "return": [],
            "arguments": {
                "name": [],
                "version": []
            }
        },
        "_Cache.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Cache.clear": {
            "name": "clear",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Cache.add": {
            "name": "add",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "DistributionPath.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "include_egg": []
            }
        },
        "DistributionPath._get_cache_enabled": {
            "name": "_get_cache_enabled",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionPath._set_cache_enabled": {
            "name": "_set_cache_enabled",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionPath.clear_cache": {
            "name": "clear_cache",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionPath._yield_distributions": {
            "name": "_yield_distributions",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionPath._generate_cache": {
            "name": "_generate_cache",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionPath.distinfo_dirname": {
            "name": "distinfo_dirname",
            "location": 185,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "version": []
            }
        },
        "DistributionPath.get_distributions": {
            "name": "get_distributions",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionPath.get_distribution": {
            "name": "get_distribution",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DistributionPath.provides_distribution": {
            "name": "provides_distribution",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "version": []
            }
        },
        "DistributionPath.get_file_path": {
            "name": "get_file_path",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "relative_path": []
            }
        },
        "DistributionPath.get_exported_entries": {
            "name": "get_exported_entries",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "name": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": []
            }
        },
        "Distribution.source_url": {
            "name": "source_url",
            "location": 359,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.name_and_version": {
            "name": "name_and_version",
            "location": 368,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.provides": {
            "name": "provides",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._get_requirements": {
            "name": "_get_requirements",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "req_attr": []
            }
        },
        "Distribution.run_requires": {
            "name": "run_requires",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.meta_requires": {
            "name": "meta_requires",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.build_requires": {
            "name": "build_requires",
            "location": 403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.test_requires": {
            "name": "test_requires",
            "location": 407,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.dev_requires": {
            "name": "dev_requires",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.matches_requirement": {
            "name": "matches_requirement",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Distribution.__repr__": {
            "name": "__repr__",
            "location": 448,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__eq__": {
            "name": "__eq__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__hash__": {
            "name": "__hash__",
            "location": 474,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseInstalledDistribution.__init__": {
            "name": "__init__",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": [],
                "path": [],
                "env": []
            }
        },
        "BaseInstalledDistribution.get_hash": {
            "name": "get_hash",
            "location": 504,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "hasher": []
            }
        },
        "InstalledDistribution.__init__": {
            "name": "__init__",
            "location": 546,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "metadata": [],
                "env": []
            }
        },
        "InstalledDistribution.__repr__": {
            "name": "__repr__",
            "location": 580,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.__str__": {
            "name": "__str__",
            "location": 584,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution._get_records": {
            "name": "_get_records",
            "location": 587,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.exports": {
            "name": "exports",
            "location": 611,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.read_exports": {
            "name": "read_exports",
            "location": 624,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.write_exports": {
            "name": "write_exports",
            "location": 639,
            "return": [],
            "arguments": {
                "self": [],
                "exports": []
            }
        },
        "InstalledDistribution.get_resource_path": {
            "name": "get_resource_path",
            "location": 650,
            "return": [],
            "arguments": {
                "self": [],
                "relative_path": []
            }
        },
        "InstalledDistribution.list_installed_files": {
            "name": "list_installed_files",
            "location": 670,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.write_installed_files": {
            "name": "write_installed_files",
            "location": 680,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [],
                "prefix": [],
                "dry_run": []
            }
        },
        "InstalledDistribution.check_installed_files": {
            "name": "check_installed_files",
            "location": 715,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.shared_locations": {
            "name": "shared_locations",
            "location": 751,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.write_shared_locations": {
            "name": "write_shared_locations",
            "location": 777,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [],
                "dry_run": []
            }
        },
        "InstalledDistribution.get_distinfo_resource": {
            "name": "get_distinfo_resource",
            "location": 802,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "InstalledDistribution.get_distinfo_file": {
            "name": "get_distinfo_file",
            "location": 811,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "InstalledDistribution.list_distinfo_files": {
            "name": "list_distinfo_files",
            "location": 840,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InstalledDistribution.__eq__": {
            "name": "__eq__",
            "location": 856,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EggInfoDistribution.__init__": {
            "name": "__init__",
            "location": 873,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "env": []
            }
        },
        "EggInfoDistribution._get_metadata": {
            "name": "_get_metadata",
            "location": 894,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EggInfoDistribution.__repr__": {
            "name": "__repr__",
            "location": 984,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution.__str__": {
            "name": "__str__",
            "location": 988,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution.check_installed_files": {
            "name": "check_installed_files",
            "location": 991,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution.list_installed_files": {
            "name": "list_installed_files",
            "location": 1010,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution.list_distinfo_files": {
            "name": "list_distinfo_files",
            "location": 1048,
            "return": [],
            "arguments": {
                "self": [],
                "absolute": []
            }
        },
        "EggInfoDistribution.__eq__": {
            "name": "__eq__",
            "location": 1077,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DependencyGraph.__init__": {
            "name": "__init__",
            "location": 1104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DependencyGraph.add_distribution": {
            "name": "add_distribution",
            "location": 1109,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": []
            }
        },
        "DependencyGraph.add_edge": {
            "name": "add_edge",
            "location": 1119,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "label": []
            }
        },
        "DependencyGraph.add_missing": {
            "name": "add_missing",
            "location": 1134,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": [],
                "requirement": []
            }
        },
        "DependencyGraph._repr_dist": {
            "name": "_repr_dist",
            "location": 1145,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "DependencyGraph.repr_node": {
            "name": "repr_node",
            "location": 1148,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "level": []
            }
        },
        "DependencyGraph.to_dot": {
            "name": "to_dot",
            "location": 1161,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "skip_disconnected": []
            }
        },
        "DependencyGraph.topological_sort": {
            "name": "topological_sort",
            "location": 1193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DependencyGraph.__repr__": {
            "name": "__repr__",
            "location": 1224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution.__init__.set_name_and_version": {
            "name": "set_name_and_version",
            "location": 874,
            "return": [],
            "arguments": {
                "s": [],
                "n": [],
                "v": []
            }
        },
        "EggInfoDistribution._get_metadata.parse_requires_data": {
            "name": "parse_requires_data",
            "location": 897,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "EggInfoDistribution._get_metadata.parse_requires_path": {
            "name": "parse_requires_path",
            "location": 924,
            "return": [],
            "arguments": {
                "req_path": []
            }
        },
        "EggInfoDistribution.list_installed_files._md5": {
            "name": "_md5",
            "location": 1018,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "EggInfoDistribution.list_installed_files._size": {
            "name": "_size",
            "location": 1026,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/index.py": {
        "PackageIndex.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PackageIndex._get_pypirc_command": {
            "name": "_get_pypirc_command",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageIndex.read_configuration": {
            "name": "read_configuration",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageIndex.save_configuration": {
            "name": "save_configuration",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageIndex.check_credentials": {
            "name": "check_credentials",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageIndex.register": {
            "name": "register",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": []
            }
        },
        "PackageIndex._reader": {
            "name": "_reader",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "stream": [],
                "outbuf": []
            }
        },
        "PackageIndex.get_sign_command": {
            "name": "get_sign_command",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "signer": [],
                "sign_password": [],
                "keystore": []
            }
        },
        "PackageIndex.run_command": {
            "name": "run_command",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "input_data": []
            }
        },
        "PackageIndex.sign_file": {
            "name": "sign_file",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "signer": [],
                "sign_password": [],
                "keystore": []
            }
        },
        "PackageIndex.upload_file": {
            "name": "upload_file",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": [],
                "filename": [],
                "signer": [],
                "sign_password": [],
                "filetype": [],
                "pyversion": [],
                "keystore": []
            }
        },
        "PackageIndex.upload_documentation": {
            "name": "upload_documentation",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": [],
                "doc_dir": []
            }
        },
        "PackageIndex.get_verify_command": {
            "name": "get_verify_command",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "signature_filename": [],
                "data_filename": [],
                "keystore": []
            }
        },
        "PackageIndex.verify_signature": {
            "name": "verify_signature",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "signature_filename": [],
                "data_filename": [],
                "keystore": []
            }
        },
        "PackageIndex.download_file": {
            "name": "download_file",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "destfile": [],
                "digest": [],
                "reporthook": []
            }
        },
        "PackageIndex.send_request": {
            "name": "send_request",
            "location": 442,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "PackageIndex.encode_request": {
            "name": "encode_request",
            "location": 458,
            "return": [],
            "arguments": {
                "self": [],
                "fields": [],
                "files": []
            }
        },
        "PackageIndex.search": {
            "name": "search",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "terms": [],
                "operator": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/locators.py": {
        "get_all_distribution_names": {
            "name": "get_all_distribution_names",
            "location": 41,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "RedirectHandler.http_error_302": {
            "name": "http_error_302",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "fp": [],
                "code": [],
                "msg": [],
                "headers": []
            }
        },
        "Locator.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": []
            }
        },
        "Locator.get_errors": {
            "name": "get_errors",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Locator.clear_errors": {
            "name": "clear_errors",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Locator.clear_cache": {
            "name": "clear_cache",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Locator._get_scheme": {
            "name": "_get_scheme",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Locator._set_scheme": {
            "name": "_set_scheme",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Locator._get_project": {
            "name": "_get_project",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Locator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Locator.get_project": {
            "name": "get_project",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Locator.score_url": {
            "name": "score_url",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Locator.prefer_url": {
            "name": "prefer_url",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "url1": [],
                "url2": []
            }
        },
        "Locator.split_filename": {
            "name": "split_filename",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "project_name": []
            }
        },
        "Locator.convert_url_to_download_info": {
            "name": "convert_url_to_download_info",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "project_name": []
            }
        },
        "Locator._get_digest": {
            "name": "_get_digest",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "Locator._update_version_data": {
            "name": "_update_version_data",
            "location": 328,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "info": []
            }
        },
        "Locator.locate": {
            "name": "locate",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "prereleases": []
            }
        },
        "PyPIRPCLocator.__init__": {
            "name": "__init__",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PyPIRPCLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIRPCLocator._get_project": {
            "name": "_get_project",
            "location": 433,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PyPIJSONLocator.__init__": {
            "name": "__init__",
            "location": 464,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PyPIJSONLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIJSONLocator._get_project": {
            "name": "_get_project",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Page.__init__": {
            "name": "__init__",
            "location": 544,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "url": []
            }
        },
        "Page.links": {
            "name": "links",
            "location": 558,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScrapingLocator.__init__": {
            "name": "__init__",
            "location": 600,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "timeout": [],
                "num_workers": []
            }
        },
        "SimpleScrapingLocator._prepare_threads": {
            "name": "_prepare_threads",
            "location": 627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScrapingLocator._wait_threads": {
            "name": "_wait_threads",
            "location": 640,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScrapingLocator._get_project": {
            "name": "_get_project",
            "location": 653,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SimpleScrapingLocator._is_platform_dependent": {
            "name": "_is_platform_dependent",
            "location": 674,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SimpleScrapingLocator._process_download": {
            "name": "_process_download",
            "location": 680,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SimpleScrapingLocator._should_queue": {
            "name": "_should_queue",
            "location": 700,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "referrer": [],
                "rel": []
            }
        },
        "SimpleScrapingLocator._fetch": {
            "name": "_fetch",
            "location": 729,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScrapingLocator.get_page": {
            "name": "get_page",
            "location": 762,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SimpleScrapingLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 823,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryLocator.__init__": {
            "name": "__init__",
            "location": 840,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DirectoryLocator.should_include": {
            "name": "should_include",
            "location": 857,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "parent": []
            }
        },
        "DirectoryLocator._get_project": {
            "name": "_get_project",
            "location": 865,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DirectoryLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 881,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 907,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONLocator._get_project": {
            "name": "_get_project",
            "location": 913,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DistPathLocator.__init__": {
            "name": "__init__",
            "location": 943,
            "return": [],
            "arguments": {
                "self": [],
                "distpath": []
            }
        },
        "DistPathLocator._get_project": {
            "name": "_get_project",
            "location": 953,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "AggregatingLocator.__init__": {
            "name": "__init__",
            "location": 970,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AggregatingLocator.clear_cache": {
            "name": "clear_cache",
            "location": 986,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AggregatingLocator._set_scheme": {
            "name": "_set_scheme",
            "location": 991,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AggregatingLocator._get_project": {
            "name": "_get_project",
            "location": 998,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "AggregatingLocator.get_distribution_names": {
            "name": "get_distribution_names",
            "location": 1042,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DependencyFinder.__init__": {
            "name": "__init__",
            "location": 1071,
            "return": [],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "DependencyFinder.add_distribution": {
            "name": "add_distribution",
            "location": 1079,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "DependencyFinder.remove_distribution": {
            "name": "remove_distribution",
            "location": 1094,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "DependencyFinder.get_matcher": {
            "name": "get_matcher",
            "location": 1112,
            "return": [],
            "arguments": {
                "self": [],
                "reqt": []
            }
        },
        "DependencyFinder.find_providers": {
            "name": "find_providers",
            "location": 1128,
            "return": [],
            "arguments": {
                "self": [],
                "reqt": []
            }
        },
        "DependencyFinder.try_to_replace": {
            "name": "try_to_replace",
            "location": 1152,
            "return": [],
            "arguments": {
                "self": [],
                "provider": [],
                "other": [],
                "problems": []
            }
        },
        "DependencyFinder.find": {
            "name": "find",
            "location": 1192,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "meta_extras": [],
                "prereleases": []
            }
        },
        "Locator.convert_url_to_download_info.same_project": {
            "name": "same_project",
            "location": 239,
            "return": [],
            "arguments": {
                "name1": [],
                "name2": []
            }
        },
        "Page.links.clean": {
            "name": "clean",
            "location": 564,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/manifest.py": {
        "Manifest.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "base": []
            }
        },
        "Manifest.findall": {
            "name": "findall",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Manifest.add": {
            "name": "add",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Manifest.add_many": {
            "name": "add_many",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "Manifest.sorted": {
            "name": "sorted",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "wantdirs": []
            }
        },
        "Manifest.clear": {
            "name": "clear",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Manifest.process_directive": {
            "name": "process_directive",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "Manifest._parse_directive": {
            "name": "_parse_directive",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "Manifest._include_pattern": {
            "name": "_include_pattern",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "Manifest._exclude_pattern": {
            "name": "_exclude_pattern",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "Manifest._translate_pattern": {
            "name": "_translate_pattern",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "Manifest._glob_to_re": {
            "name": "_glob_to_re",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "Manifest.sorted.add_dir": {
            "name": "add_dir",
            "location": 108,
            "return": [],
            "arguments": {
                "dirs": [],
                "d": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/markers.py": {
        "_is_literal": {
            "name": "_is_literal",
            "location": 28,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "_get_versions": {
            "name": "_get_versions",
            "location": 33,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "default_context": {
            "name": "default_context",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "interpret": {
            "name": "interpret",
            "location": 134,
            "return": [],
            "arguments": {
                "marker": [],
                "execution_context": []
            }
        },
        "Evaluator.evaluate": {
            "name": "evaluate",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "context": []
            }
        },
        "default_context.format_full_version": {
            "name": "format_full_version",
            "location": 96,
            "return": [],
            "arguments": {
                "info": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/metadata.py": {
        "_version2fieldlist": {
            "name": "_version2fieldlist",
            "location": 118,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_best_version": {
            "name": "_best_version",
            "location": 136,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "_get_name_and_version": {
            "name": "_get_name_and_version",
            "location": 240,
            "return": [],
            "arguments": {
                "name": [],
                "version": [],
                "for_filename": []
            }
        },
        "_best_version._has_marker": {
            "name": "_has_marker",
            "location": 138,
            "return": [],
            "arguments": {
                "keys": [],
                "markers": []
            }
        },
        "LegacyMetadata.__init__": {
            "name": "__init__",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fileobj": [],
                "mapping": [],
                "scheme": []
            }
        },
        "LegacyMetadata.set_metadata_version": {
            "name": "set_metadata_version",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata._write_field": {
            "name": "_write_field",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "fileobj": [],
                "name": [],
                "value": []
            }
        },
        "LegacyMetadata.__getitem__": {
            "name": "__getitem__",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata.__setitem__": {
            "name": "__setitem__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "LegacyMetadata.__delitem__": {
            "name": "__delitem__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata.__contains__": {
            "name": "__contains__",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata._convert_name": {
            "name": "_convert_name",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata._default_value": {
            "name": "_default_value",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata._remove_line_prefix": {
            "name": "_remove_line_prefix",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "LegacyMetadata.__getattr__": {
            "name": "__getattr__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata.get_fullname": {
            "name": "get_fullname",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "filesafe": []
            }
        },
        "LegacyMetadata.is_field": {
            "name": "is_field",
            "location": 338,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata.is_multi_field": {
            "name": "is_multi_field",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LegacyMetadata.read": {
            "name": "read",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "LegacyMetadata.read_file": {
            "name": "read_file",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "fileob": []
            }
        },
        "LegacyMetadata.write": {
            "name": "write",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": [],
                "skip_unknown": []
            }
        },
        "LegacyMetadata.write_file": {
            "name": "write_file",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "fileobject": [],
                "skip_unknown": []
            }
        },
        "LegacyMetadata.update": {
            "name": "update",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LegacyMetadata.set": {
            "name": "set",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "LegacyMetadata.get": {
            "name": "get",
            "location": 488,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "LegacyMetadata.check": {
            "name": "check",
            "location": 517,
            "return": [],
            "arguments": {
                "self": [],
                "strict": []
            }
        },
        "LegacyMetadata.todict": {
            "name": "todict",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "skip_missing": []
            }
        },
        "LegacyMetadata.add_requirements": {
            "name": "add_requirements",
            "location": 584,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": []
            }
        },
        "LegacyMetadata.keys": {
            "name": "keys",
            "location": 595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata.__iter__": {
            "name": "__iter__",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata.values": {
            "name": "values",
            "location": 602,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata.items": {
            "name": "items",
            "location": 605,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata.__repr__": {
            "name": "__repr__",
            "location": 608,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.__init__": {
            "name": "__init__",
            "location": 663,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fileobj": [],
                "mapping": [],
                "scheme": []
            }
        },
        "Metadata.__getattribute__": {
            "name": "__getattribute__",
            "location": 731,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Metadata._validate_value": {
            "name": "_validate_value",
            "location": 774,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "scheme": []
            }
        },
        "Metadata.__setattr__": {
            "name": "__setattr__",
            "location": 784,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Metadata.name_and_version": {
            "name": "name_and_version",
            "location": 824,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.provides": {
            "name": "provides",
            "location": 839,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Metadata.get_requirements": {
            "name": "get_requirements",
            "location": 845,
            "return": [],
            "arguments": {
                "self": [],
                "reqts": [],
                "extras": [],
                "env": []
            }
        },
        "Metadata.dictionary": {
            "name": "dictionary",
            "location": 888,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.dependencies": {
            "name": "dependencies",
            "location": 901,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Metadata._validate_mapping": {
            "name": "_validate_mapping",
            "location": 907,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "scheme": []
            }
        },
        "Metadata.validate": {
            "name": "validate",
            "location": 921,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.todict": {
            "name": "todict",
            "location": 930,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata._from_legacy": {
            "name": "_from_legacy",
            "location": 937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata._to_legacy": {
            "name": "_to_legacy",
            "location": 979,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.write": {
            "name": "write",
            "location": 1029,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "fileobj": [],
                "legacy": [],
                "skip_unknown": []
            }
        },
        "Metadata.add_requirements": {
            "name": "add_requirements",
            "location": 1055,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": []
            }
        },
        "Metadata.__repr__": {
            "name": "__repr__",
            "location": 1072,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMetadata.update._set": {
            "name": "_set",
            "location": 426,
            "return": [],
            "arguments": {
                "key": [],
                "value": []
            }
        },
        "LegacyMetadata.check.are_valid_constraints": {
            "name": "are_valid_constraints",
            "location": 543,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "Metadata._to_legacy.process_entries": {
            "name": "process_entries",
            "location": 980,
            "return": [],
            "arguments": {
                "entries": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/resources.py": {
        "register_finder": {
            "name": "register_finder",
            "location": 306,
            "return": [],
            "arguments": {
                "loader": [],
                "finder_maker": []
            }
        },
        "finder": {
            "name": "finder",
            "location": 313,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "finder_for_path": {
            "name": "finder_for_path",
            "location": 341,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "ResourceCache.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "base": []
            }
        },
        "ResourceCache.is_stale": {
            "name": "is_stale",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "resource": [],
                "path": []
            }
        },
        "ResourceCache.get": {
            "name": "get",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceBase.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "finder": [],
                "name": []
            }
        },
        "Resource.as_stream": {
            "name": "as_stream",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resource.file_path": {
            "name": "file_path",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resource.bytes": {
            "name": "bytes",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resource.size": {
            "name": "size",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.resources": {
            "name": "resources",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceFinder.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "ResourceFinder._adjust_path": {
            "name": "_adjust_path",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceFinder._make_path": {
            "name": "_make_path",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "ResourceFinder._find": {
            "name": "_find",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceFinder.get_cache_info": {
            "name": "get_cache_info",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.find": {
            "name": "find",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "ResourceFinder.get_stream": {
            "name": "get_stream",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.get_bytes": {
            "name": "get_bytes",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.get_size": {
            "name": "get_size",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.get_resources": {
            "name": "get_resources",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.is_container": {
            "name": "is_container",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceFinder.iterator": {
            "name": "iterator",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "ZipResourceFinder.__init__": {
            "name": "__init__",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "ZipResourceFinder._adjust_path": {
            "name": "_adjust_path",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipResourceFinder._find": {
            "name": "_find",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipResourceFinder.get_cache_info": {
            "name": "get_cache_info",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipResourceFinder.get_bytes": {
            "name": "get_bytes",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipResourceFinder.get_stream": {
            "name": "get_stream",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipResourceFinder.get_size": {
            "name": "get_size",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipResourceFinder.get_resources": {
            "name": "get_resources",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipResourceFinder._is_directory": {
            "name": "_is_directory",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceFinder.get_resources.allowed": {
            "name": "allowed",
            "location": 177,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/scripts.py": {
        "enquote_executable": {
            "name": "enquote_executable",
            "location": 53,
            "return": [],
            "arguments": {
                "executable": []
            }
        },
        "ScriptMaker.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "source_dir": [],
                "target_dir": [],
                "add_launchers": [],
                "dry_run": [],
                "fileop": []
            }
        },
        "ScriptMaker._get_alternate_executable": {
            "name": "_get_alternate_executable",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "executable": [],
                "options": []
            }
        },
        "ScriptMaker._build_shebang": {
            "name": "_build_shebang",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "executable": [],
                "post_interp": []
            }
        },
        "ScriptMaker._get_shebang": {
            "name": "_get_shebang",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "encoding": [],
                "post_interp": [],
                "options": []
            }
        },
        "ScriptMaker._get_script_text": {
            "name": "_get_script_text",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "entry": []
            }
        },
        "ScriptMaker.get_manifest": {
            "name": "get_manifest",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "exename": []
            }
        },
        "ScriptMaker._write_script": {
            "name": "_write_script",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "names": [],
                "shebang": [],
                "script_bytes": [],
                "filenames": [],
                "ext": []
            }
        },
        "ScriptMaker.get_script_filenames": {
            "name": "get_script_filenames",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ScriptMaker._make_script": {
            "name": "_make_script",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "entry": [],
                "filenames": [],
                "options": []
            }
        },
        "ScriptMaker._copy_script": {
            "name": "_copy_script",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "script": [],
                "filenames": []
            }
        },
        "ScriptMaker.dry_run": {
            "name": "dry_run",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ScriptMaker.make": {
            "name": "make",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "specification": [],
                "options": []
            }
        },
        "ScriptMaker.make_multiple": {
            "name": "make_multiple",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "specifications": [],
                "options": []
            }
        },
        "ScriptMaker._is_shell": {
            "name": "_is_shell",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "executable": []
            }
        },
        "ScriptMaker._fix_jython_executable": {
            "name": "_fix_jython_executable",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "executable": []
            }
        },
        "ScriptMaker._get_launcher": {
            "name": "_get_launcher",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "kind": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/util.py": {
        "parse_marker": {
            "name": "parse_marker",
            "location": 56,
            "return": [],
            "arguments": {
                "marker_string": []
            }
        },
        "parse_requirement": {
            "name": "parse_requirement",
            "location": 145,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "get_resources_dests": {
            "name": "get_resources_dests",
            "location": 270,
            "return": [],
            "arguments": {
                "resources_root": [],
                "rules": []
            }
        },
        "in_venv": {
            "name": "in_venv",
            "location": 296,
            "return": [],
            "arguments": {}
        },
        "get_executable": {
            "name": "get_executable",
            "location": 306,
            "return": [],
            "arguments": {}
        },
        "proceed": {
            "name": "proceed",
            "location": 324,
            "return": [],
            "arguments": {
                "prompt": [],
                "allowed_chars": [],
                "error_prompt": [],
                "default": []
            }
        },
        "extract_by_key": {
            "name": "extract_by_key",
            "location": 340,
            "return": [],
            "arguments": {
                "d": [],
                "keys": []
            }
        },
        "read_exports": {
            "name": "read_exports",
            "location": 349,
            "return": [],
            "arguments": {
                "stream": []
            }
        },
        "write_exports": {
            "name": "write_exports",
            "location": 396,
            "return": [],
            "arguments": {
                "exports": [],
                "stream": []
            }
        },
        "tempdir": {
            "name": "tempdir",
            "location": 416,
            "return": [],
            "arguments": {}
        },
        "chdir": {
            "name": "chdir",
            "location": 424,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "socket_timeout": {
            "name": "socket_timeout",
            "location": 434,
            "return": [],
            "arguments": {
                "seconds": []
            }
        },
        "convert_path": {
            "name": "convert_path",
            "location": 457,
            "return": [],
            "arguments": {
                "pathname": []
            }
        },
        "resolve": {
            "name": "resolve",
            "location": 667,
            "return": [],
            "arguments": {
                "module_name": [],
                "dotted_path": []
            }
        },
        "get_export_entry": {
            "name": "get_export_entry",
            "location": 715,
            "return": [],
            "arguments": {
                "specification": []
            }
        },
        "get_cache_base": {
            "name": "get_cache_base",
            "location": 746,
            "return": [],
            "arguments": {
                "suffix": []
            }
        },
        "path_to_cache_dir": {
            "name": "path_to_cache_dir",
            "location": 787,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "ensure_slash": {
            "name": "ensure_slash",
            "location": 804,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "parse_credentials": {
            "name": "parse_credentials",
            "location": 810,
            "return": [],
            "arguments": {
                "netloc": []
            }
        },
        "get_process_umask": {
            "name": "get_process_umask",
            "location": 825,
            "return": [],
            "arguments": {}
        },
        "is_string_sequence": {
            "name": "is_string_sequence",
            "location": 830,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "split_filename": {
            "name": "split_filename",
            "location": 845,
            "return": [],
            "arguments": {
                "filename": [],
                "project_name": []
            }
        },
        "parse_name_and_version": {
            "name": "parse_name_and_version",
            "location": 873,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "get_extras": {
            "name": "get_extras",
            "location": 888,
            "return": [],
            "arguments": {
                "requested": [],
                "available": []
            }
        },
        "_get_external_data": {
            "name": "_get_external_data",
            "location": 913,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_project_data": {
            "name": "get_project_data",
            "location": 935,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_package_data": {
            "name": "get_package_data",
            "location": 941,
            "return": [],
            "arguments": {
                "name": [],
                "version": []
            }
        },
        "unarchive": {
            "name": "unarchive",
            "location": 1205,
            "return": [],
            "arguments": {
                "archive_filename": [],
                "dest_dir": [],
                "format": [],
                "check": []
            }
        },
        "zip_dir": {
            "name": "zip_dir",
            "location": 1259,
            "return": [],
            "arguments": {
                "directory": []
            }
        },
        "iglob": {
            "name": "iglob",
            "location": 1377,
            "return": [],
            "arguments": {
                "path_glob": []
            }
        },
        "_iglob": {
            "name": "_iglob",
            "location": 1388,
            "return": [],
            "arguments": {
                "path_glob": []
            }
        },
        "_csv_open": {
            "name": "_csv_open",
            "location": 1558,
            "return": [],
            "arguments": {
                "fn": [],
                "mode": []
            }
        },
        "normalize_name": {
            "name": "normalize_name",
            "location": 1728,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_load_pypirc": {
            "name": "_load_pypirc",
            "location": 1824,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "_store_pypirc": {
            "name": "_store_pypirc",
            "location": 1830,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "get_host_platform": {
            "name": "get_host_platform",
            "location": 1838,
            "return": [],
            "arguments": {}
        },
        "get_platform": {
            "name": "get_platform",
            "location": 1926,
            "return": [],
            "arguments": {}
        },
        "parse_marker.marker_var": {
            "name": "marker_var",
            "location": 65,
            "return": [],
            "arguments": {
                "remaining": []
            }
        },
        "parse_marker.marker_expr": {
            "name": "marker_expr",
            "location": 101,
            "return": [],
            "arguments": {
                "remaining": []
            }
        },
        "parse_marker.marker_and": {
            "name": "marker_and",
            "location": 120,
            "return": [],
            "arguments": {
                "remaining": []
            }
        },
        "parse_marker.marker": {
            "name": "marker",
            "location": 131,
            "return": [],
            "arguments": {
                "remaining": []
            }
        },
        "get_resources_dests.get_rel_path": {
            "name": "get_rel_path",
            "location": 273,
            "return": [],
            "arguments": {
                "root": [],
                "path": []
            }
        },
        "read_exports.read_stream": {
            "name": "read_stream",
            "location": 369,
            "return": [],
            "arguments": {
                "cp": [],
                "stream": []
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 449,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "cls": []
            }
        },
        "FileOperator.__init__": {
            "name": "__init__",
            "location": 485,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "FileOperator._init_record": {
            "name": "_init_record",
            "location": 490,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileOperator.record_as_written": {
            "name": "record_as_written",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileOperator.newer": {
            "name": "newer",
            "location": 499,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "target": []
            }
        },
        "FileOperator.copy_file": {
            "name": "copy_file",
            "location": 519,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": [],
                "check": []
            }
        },
        "FileOperator.copy_stream": {
            "name": "copy_stream",
            "location": 536,
            "return": [],
            "arguments": {
                "self": [],
                "instream": [],
                "outfile": [],
                "encoding": []
            }
        },
        "FileOperator.write_binary_file": {
            "name": "write_binary_file",
            "location": 551,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "FileOperator.write_text_file": {
            "name": "write_text_file",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "encoding": []
            }
        },
        "FileOperator.set_mode": {
            "name": "set_mode",
            "location": 563,
            "return": [],
            "arguments": {
                "self": [],
                "bits": [],
                "mask": [],
                "files": []
            }
        },
        "FileOperator.ensure_dir": {
            "name": "ensure_dir",
            "location": 577,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileOperator.byte_compile": {
            "name": "byte_compile",
            "location": 589,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "optimize": [],
                "force": [],
                "prefix": [],
                "hashed_invalidation": []
            }
        },
        "FileOperator.ensure_removed": {
            "name": "ensure_removed",
            "location": 606,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileOperator.is_writable": {
            "name": "is_writable",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileOperator.commit": {
            "name": "commit",
            "location": 639,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileOperator.rollback": {
            "name": "rollback",
            "location": 649,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExportEntry.__init__": {
            "name": "__init__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "prefix": [],
                "suffix": [],
                "flags": []
            }
        },
        "ExportEntry.value": {
            "name": "value",
            "location": 690,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExportEntry.__repr__": {
            "name": "__repr__",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExportEntry.__eq__": {
            "name": "__eq__",
            "location": 697,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Cache.__init__": {
            "name": "__init__",
            "location": 954,
            "return": [],
            "arguments": {
                "self": [],
                "base": []
            }
        },
        "Cache.prefix_to_dir": {
            "name": "prefix_to_dir",
            "location": 968,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": []
            }
        },
        "Cache.clear": {
            "name": "clear",
            "location": 974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventMixin.__init__": {
            "name": "__init__",
            "location": 995,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventMixin.add": {
            "name": "add",
            "location": 998,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "subscriber": [],
                "append": []
            }
        },
        "EventMixin.remove": {
            "name": "remove",
            "location": 1018,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "subscriber": []
            }
        },
        "EventMixin.get_subscribers": {
            "name": "get_subscribers",
            "location": 1030,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "EventMixin.publish": {
            "name": "publish",
            "location": 1037,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Sequencer.__init__": {
            "name": "__init__",
            "location": 1064,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sequencer.add_node": {
            "name": "add_node",
            "location": 1069,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Sequencer.remove_node": {
            "name": "remove_node",
            "location": 1072,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "edges": []
            }
        },
        "Sequencer.add": {
            "name": "add",
            "location": 1088,
            "return": [],
            "arguments": {
                "self": [],
                "pred": [],
                "succ": []
            }
        },
        "Sequencer.remove": {
            "name": "remove",
            "location": 1093,
            "return": [],
            "arguments": {
                "self": [],
                "pred": [],
                "succ": []
            }
        },
        "Sequencer.is_step": {
            "name": "is_step",
            "location": 1106,
            "return": [],
            "arguments": {
                "self": [],
                "step": []
            }
        },
        "Sequencer.get_steps": {
            "name": "get_steps",
            "location": 1110,
            "return": [],
            "arguments": {
                "self": [],
                "final": []
            }
        },
        "Sequencer.strong_connections": {
            "name": "strong_connections",
            "location": 1136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sequencer.dot": {
            "name": "dot",
            "location": 1187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "unarchive.check_path": {
            "name": "check_path",
            "location": 1207,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "Progress.__init__": {
            "name": "__init__",
            "location": 1282,
            "return": [],
            "arguments": {
                "self": [],
                "minval": [],
                "maxval": []
            }
        },
        "Progress.update": {
            "name": "update",
            "location": 1290,
            "return": [],
            "arguments": {
                "self": [],
                "curval": []
            }
        },
        "Progress.increment": {
            "name": "increment",
            "location": 1300,
            "return": [],
            "arguments": {
                "self": [],
                "incr": []
            }
        },
        "Progress.start": {
            "name": "start",
            "location": 1304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.stop": {
            "name": "stop",
            "location": 1308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.maximum": {
            "name": "maximum",
            "location": 1314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.percentage": {
            "name": "percentage",
            "location": 1318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.format_duration": {
            "name": "format_duration",
            "location": 1328,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Progress.ETA": {
            "name": "ETA",
            "location": 1338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.speed": {
            "name": "speed",
            "location": 1357,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Transport.__init__": {
            "name": "__init__",
            "location": 1507,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": [],
                "use_datetime": []
            }
        },
        "Transport.make_connection": {
            "name": "make_connection",
            "location": 1511,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        },
        "ServerProxy.__init__": {
            "name": "__init__",
            "location": 1537,
            "return": [],
            "arguments": {
                "self": [],
                "uri": []
            }
        },
        "CSVBase.__enter__": {
            "name": "__enter__",
            "location": 1576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVBase.__exit__": {
            "name": "__exit__",
            "location": 1579,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader.__init__": {
            "name": "__init__",
            "location": 1584,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader.__iter__": {
            "name": "__iter__",
            "location": 1595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVReader.next": {
            "name": "next",
            "location": 1598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSVWriter.__init__": {
            "name": "__init__",
            "location": 1609,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "CSVWriter.writerow": {
            "name": "writerow",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "Configurator.__init__": {
            "name": "__init__",
            "location": 1632,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "base": []
            }
        },
        "Configurator.configure_custom": {
            "name": "configure_custom",
            "location": 1636,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Configurator.__getitem__": {
            "name": "__getitem__",
            "location": 1667,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Configurator.inc_convert": {
            "name": "inc_convert",
            "location": 1673,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SubprocessMixin.__init__": {
            "name": "__init__",
            "location": 1686,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "progress": []
            }
        },
        "SubprocessMixin.reader": {
            "name": "reader",
            "location": 1690,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "context": []
            }
        },
        "SubprocessMixin.run_command": {
            "name": "run_command",
            "location": 1711,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "PyPIRCFile.__init__": {
            "name": "__init__",
            "location": 1748,
            "return": [],
            "arguments": {
                "self": [],
                "fn": [],
                "url": []
            }
        },
        "PyPIRCFile.read": {
            "name": "read",
            "location": 1754,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIRCFile.update": {
            "name": "update",
            "location": 1812,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "Sequencer.strong_connections.strongconnect": {
            "name": "strongconnect",
            "location": 1146,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "HTTPSConnection.connect": {
            "name": "connect",
            "location": 1429,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPSHandler.__init__": {
            "name": "__init__",
            "location": 1458,
            "return": [],
            "arguments": {
                "self": [],
                "ca_certs": [],
                "check_domain": []
            }
        },
        "HTTPSHandler._conn_maker": {
            "name": "_conn_maker",
            "location": 1463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPSHandler.https_open": {
            "name": "https_open",
            "location": 1479,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "HTTPSOnlyHandler.http_open": {
            "name": "http_open",
            "location": 1499,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "SafeTransport.__init__": {
            "name": "__init__",
            "location": 1520,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": [],
                "use_datetime": []
            }
        },
        "SafeTransport.make_connection": {
            "name": "make_connection",
            "location": 1524,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        },
        "Configurator.configure_custom.convert": {
            "name": "convert",
            "location": 1637,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "parse_requirement.get_versions": {
            "name": "get_versions",
            "location": 197,
            "return": [],
            "arguments": {
                "ver_remaining": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/version.py": {
        "_pep_440_key": {
            "name": "_pep_440_key",
            "location": 184,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_match_prefix": {
            "name": "_match_prefix",
            "location": 284,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "_suggest_semantic_version": {
            "name": "_suggest_semantic_version",
            "location": 406,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_suggest_normalized_version": {
            "name": "_suggest_normalized_version",
            "location": 452,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_legacy_key": {
            "name": "_legacy_key",
            "location": 578,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "is_semver": {
            "name": "is_semver",
            "location": 649,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_semantic_key": {
            "name": "_semantic_key",
            "location": 653,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "get_scheme": {
            "name": "get_scheme",
            "location": 736,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Version.parse": {
            "name": "parse",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Version._check_compatible": {
            "name": "_check_compatible",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__eq__": {
            "name": "__eq__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__ne__": {
            "name": "__ne__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__lt__": {
            "name": "__lt__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__gt__": {
            "name": "__gt__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__le__": {
            "name": "__le__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__ge__": {
            "name": "__ge__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__hash__": {
            "name": "__hash__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__repr__": {
            "name": "__repr__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_prerelease": {
            "name": "is_prerelease",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matcher.parse_requirement": {
            "name": "parse_requirement",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Matcher.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Matcher.match": {
            "name": "match",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "Matcher.exact_version": {
            "name": "exact_version",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matcher._check_compatible": {
            "name": "_check_compatible",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Matcher.__eq__": {
            "name": "__eq__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Matcher.__ne__": {
            "name": "__ne__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Matcher.__hash__": {
            "name": "__hash__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matcher.__repr__": {
            "name": "__repr__",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Matcher.__str__": {
            "name": "__str__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NormalizedVersion.parse": {
            "name": "parse",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "NormalizedVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NormalizedMatcher._adjust_local": {
            "name": "_adjust_local",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_lt": {
            "name": "_match_lt",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_gt": {
            "name": "_match_gt",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_le": {
            "name": "_match_le",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_ge": {
            "name": "_match_ge",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_eq": {
            "name": "_match_eq",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_arbitrary": {
            "name": "_match_arbitrary",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_ne": {
            "name": "_match_ne",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "NormalizedMatcher._match_compatible": {
            "name": "_match_compatible",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "_legacy_key.get_parts": {
            "name": "get_parts",
            "location": 579,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "LegacyVersion.parse": {
            "name": "parse",
            "location": 605,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "LegacyVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 609,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyMatcher._match_compatible": {
            "name": "_match_compatible",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "constraint": [],
                "prefix": []
            }
        },
        "_semantic_key.make_tuple": {
            "name": "make_tuple",
            "location": 654,
            "return": [],
            "arguments": {
                "s": [],
                "absent": []
            }
        },
        "SemanticVersion.parse": {
            "name": "parse",
            "location": 675,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "SemanticVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 679,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionScheme.__init__": {
            "name": "__init__",
            "location": 688,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "matcher": [],
                "suggester": []
            }
        },
        "VersionScheme.is_valid_version": {
            "name": "is_valid_version",
            "location": 693,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "VersionScheme.is_valid_matcher": {
            "name": "is_valid_matcher",
            "location": 701,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "VersionScheme.is_valid_constraint_list": {
            "name": "is_valid_constraint_list",
            "location": 709,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "VersionScheme.suggest": {
            "name": "suggest",
            "location": 718,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/wheel.py": {
        "_get_suffixes": {
            "name": "_get_suffixes",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "_load_dynamic": {
            "name": "_load_dynamic",
            "location": 118,
            "return": [],
            "arguments": {
                "name": [],
                "path": []
            }
        },
        "_get_glibc_version": {
            "name": "_get_glibc_version",
            "location": 977,
            "return": [],
            "arguments": {}
        },
        "compatible_tags": {
            "name": "compatible_tags",
            "location": 987,
            "return": [],
            "arguments": {}
        },
        "is_compatible": {
            "name": "is_compatible",
            "location": 1072,
            "return": [],
            "arguments": {
                "wheel": [],
                "tags": []
            }
        },
        "_derive_abi": {
            "name": "_derive_abi",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "Mounter.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mounter.add": {
            "name": "add",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "pathname": [],
                "extensions": []
            }
        },
        "Mounter.remove": {
            "name": "remove",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "pathname": []
            }
        },
        "Mounter.find_module": {
            "name": "find_module",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": []
            }
        },
        "Mounter.load_module": {
            "name": "load_module",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "Wheel.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "sign": [],
                "verify": []
            }
        },
        "Wheel.filename": {
            "name": "filename",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.exists": {
            "name": "exists",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.tags": {
            "name": "tags",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.metadata": {
            "name": "metadata",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.get_wheel_metadata": {
            "name": "get_wheel_metadata",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "zf": []
            }
        },
        "Wheel.info": {
            "name": "info",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.process_shebang": {
            "name": "process_shebang",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Wheel.get_hash": {
            "name": "get_hash",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "hash_kind": []
            }
        },
        "Wheel.write_record": {
            "name": "write_record",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "records": [],
                "record_path": [],
                "archive_record_path": []
            }
        },
        "Wheel.write_records": {
            "name": "write_records",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "info": [],
                "libdir": [],
                "archive_paths": []
            }
        },
        "Wheel.build_zip": {
            "name": "build_zip",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "pathname": [],
                "archive_paths": []
            }
        },
        "Wheel.build": {
            "name": "build",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [],
                "tags": [],
                "wheel_version": []
            }
        },
        "Wheel.skip_entry": {
            "name": "skip_entry",
            "location": 479,
            "return": [],
            "arguments": {
                "self": [],
                "arcname": []
            }
        },
        "Wheel.install": {
            "name": "install",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [],
                "maker": []
            }
        },
        "Wheel._get_dylib_cache": {
            "name": "_get_dylib_cache",
            "location": 732,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel._get_extensions": {
            "name": "_get_extensions",
            "location": 741,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.is_compatible": {
            "name": "is_compatible",
            "location": 775,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.is_mountable": {
            "name": "is_mountable",
            "location": 781,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.mount": {
            "name": "mount",
            "location": 787,
            "return": [],
            "arguments": {
                "self": [],
                "append": []
            }
        },
        "Wheel.unmount": {
            "name": "unmount",
            "location": 808,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.verify": {
            "name": "verify",
            "location": 820,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.update": {
            "name": "update",
            "location": 876,
            "return": [],
            "arguments": {
                "self": [],
                "modifier": [],
                "dest_dir": []
            }
        },
        "Wheel.build.sorter": {
            "name": "sorter",
            "location": 463,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "Wheel.update.get_version": {
            "name": "get_version",
            "location": 893,
            "return": [],
            "arguments": {
                "path_map": [],
                "info_dir": []
            }
        },
        "Wheel.update.update_version": {
            "name": "update_version",
            "location": 903,
            "return": [],
            "arguments": {
                "version": [],
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distlib/__init__.py": {
        "NullHandler.handle": {
            "name": "handle",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "NullHandler.emit": {
            "name": "emit",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "NullHandler.createLock": {
            "name": "createLock",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distro/distro.py": {
        "linux_distribution": {
            "name": "linux_distribution",
            "location": 137,
            "return": [],
            "arguments": {
                "full_distribution_name": []
            }
        },
        "id": {
            "name": "id",
            "location": 180,
            "return": [],
            "arguments": {}
        },
        "name": {
            "name": "name",
            "location": 261,
            "return": [],
            "arguments": {
                "pretty": []
            }
        },
        "version": {
            "name": "version",
            "location": 300,
            "return": [],
            "arguments": {
                "pretty": [],
                "best": []
            }
        },
        "version_parts": {
            "name": "version_parts",
            "location": 348,
            "return": [],
            "arguments": {
                "best": []
            }
        },
        "major_version": {
            "name": "major_version",
            "location": 365,
            "return": [],
            "arguments": {
                "best": []
            }
        },
        "minor_version": {
            "name": "minor_version",
            "location": 378,
            "return": [],
            "arguments": {
                "best": []
            }
        },
        "build_number": {
            "name": "build_number",
            "location": 391,
            "return": [],
            "arguments": {
                "best": []
            }
        },
        "like": {
            "name": "like",
            "location": 404,
            "return": [],
            "arguments": {}
        },
        "codename": {
            "name": "codename",
            "location": 421,
            "return": [],
            "arguments": {}
        },
        "info": {
            "name": "info",
            "location": 445,
            "return": [],
            "arguments": {
                "pretty": [],
                "best": []
            }
        },
        "os_release_info": {
            "name": "os_release_info",
            "location": 489,
            "return": [],
            "arguments": {}
        },
        "lsb_release_info": {
            "name": "lsb_release_info",
            "location": 499,
            "return": [],
            "arguments": {}
        },
        "distro_release_info": {
            "name": "distro_release_info",
            "location": 510,
            "return": [],
            "arguments": {}
        },
        "uname_info": {
            "name": "uname_info",
            "location": 520,
            "return": [],
            "arguments": {}
        },
        "os_release_attr": {
            "name": "os_release_attr",
            "location": 528,
            "return": [],
            "arguments": {
                "attribute": []
            }
        },
        "lsb_release_attr": {
            "name": "lsb_release_attr",
            "location": 547,
            "return": [],
            "arguments": {
                "attribute": []
            }
        },
        "distro_release_attr": {
            "name": "distro_release_attr",
            "location": 567,
            "return": [],
            "arguments": {
                "attribute": []
            }
        },
        "uname_attr": {
            "name": "uname_attr",
            "location": 586,
            "return": [],
            "arguments": {
                "attribute": []
            }
        },
        "main": {
            "name": "main",
            "location": 1333,
            "return": [],
            "arguments": {}
        },
        "LinuxDistribution.__init__": {
            "name": "__init__",
            "location": 641,
            "return": [],
            "arguments": {
                "self": [],
                "include_lsb": [],
                "os_release_file": [],
                "distro_release_file": [],
                "include_uname": [],
                "root_dir": [],
                "include_oslevel": []
            }
        },
        "LinuxDistribution.__repr__": {
            "name": "__repr__",
            "location": 774,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.linux_distribution": {
            "name": "linux_distribution",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "full_distribution_name": []
            }
        },
        "LinuxDistribution.id": {
            "name": "id",
            "location": 807,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.name": {
            "name": "name",
            "location": 835,
            "return": [],
            "arguments": {
                "self": [],
                "pretty": []
            }
        },
        "LinuxDistribution.version": {
            "name": "version",
            "location": 858,
            "return": [],
            "arguments": {
                "self": [],
                "pretty": [],
                "best": []
            }
        },
        "LinuxDistribution.version_parts": {
            "name": "version_parts",
            "location": 897,
            "return": [],
            "arguments": {
                "self": [],
                "best": []
            }
        },
        "LinuxDistribution.major_version": {
            "name": "major_version",
            "location": 913,
            "return": [],
            "arguments": {
                "self": [],
                "best": []
            }
        },
        "LinuxDistribution.minor_version": {
            "name": "minor_version",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "best": []
            }
        },
        "LinuxDistribution.build_number": {
            "name": "build_number",
            "location": 929,
            "return": [],
            "arguments": {
                "self": [],
                "best": []
            }
        },
        "LinuxDistribution.like": {
            "name": "like",
            "location": 937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.codename": {
            "name": "codename",
            "location": 945,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.info": {
            "name": "info",
            "location": 962,
            "return": [],
            "arguments": {
                "self": [],
                "pretty": [],
                "best": []
            }
        },
        "LinuxDistribution.os_release_info": {
            "name": "os_release_info",
            "location": 981,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.lsb_release_info": {
            "name": "lsb_release_info",
            "location": 990,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.distro_release_info": {
            "name": "distro_release_info",
            "location": 1000,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.uname_info": {
            "name": "uname_info",
            "location": 1010,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.oslevel_info": {
            "name": "oslevel_info",
            "location": 1019,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution.os_release_attr": {
            "name": "os_release_attr",
            "location": 1025,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "LinuxDistribution.lsb_release_attr": {
            "name": "lsb_release_attr",
            "location": 1034,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "LinuxDistribution.distro_release_attr": {
            "name": "distro_release_attr",
            "location": 1043,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "LinuxDistribution.uname_attr": {
            "name": "uname_attr",
            "location": 1052,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "LinuxDistribution._os_release_info": {
            "name": "_os_release_info",
            "location": 1062,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution._parse_os_release_content": {
            "name": "_parse_os_release_content",
            "location": 1075,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "LinuxDistribution._lsb_release_info": {
            "name": "_lsb_release_info",
            "location": 1125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution._parse_lsb_release_content": {
            "name": "_parse_lsb_release_content",
            "location": 1144,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "LinuxDistribution._uname_info": {
            "name": "_uname_info",
            "location": 1168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution._oslevel_info": {
            "name": "_oslevel_info",
            "location": 1180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution._parse_uname_content": {
            "name": "_parse_uname_content",
            "location": 1190,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "LinuxDistribution._to_str": {
            "name": "_to_str",
            "location": 1209,
            "return": [],
            "arguments": {
                "bytestring": []
            }
        },
        "LinuxDistribution._distro_release_info": {
            "name": "_distro_release_info",
            "location": 1214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinuxDistribution._parse_distro_release_file": {
            "name": "_parse_distro_release_file",
            "location": 1282,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "LinuxDistribution._parse_distro_release_content": {
            "name": "_parse_distro_release_content",
            "location": 1305,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "LinuxDistribution.id.normalize": {
            "name": "normalize",
            "location": 813,
            "return": [],
            "arguments": {
                "distro_id": [],
                "table": []
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 613,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 617,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "owner": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distro/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/distro/__main__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/codec.py": {
        "getregentry": {
            "name": "getregentry",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "Codec.encode": {
            "name": "encode",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "errors": []
            }
        },
        "Codec.decode": {
            "name": "decode",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "errors": []
            }
        },
        "IncrementalEncoder._buffer_encode": {
            "name": "_buffer_encode",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "errors": [],
                "final": []
            }
        },
        "IncrementalDecoder._buffer_decode": {
            "name": "_buffer_decode",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "errors": [],
                "final": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/compat.py": {
        "ToASCII": {
            "name": "ToASCII",
            "location": 5,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "ToUnicode": {
            "name": "ToUnicode",
            "location": 8,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "nameprep": {
            "name": "nameprep",
            "location": 11,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/core.py": {
        "_combining_class": {
            "name": "_combining_class",
            "location": 32,
            "return": [],
            "arguments": {
                "cp": []
            }
        },
        "_is_script": {
            "name": "_is_script",
            "location": 39,
            "return": [],
            "arguments": {
                "cp": [],
                "script": []
            }
        },
        "_punycode": {
            "name": "_punycode",
            "location": 42,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_unot": {
            "name": "_unot",
            "location": 45,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "valid_label_length": {
            "name": "valid_label_length",
            "location": 49,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "valid_string_length": {
            "name": "valid_string_length",
            "location": 55,
            "return": [],
            "arguments": {
                "label": [],
                "trailing_dot": []
            }
        },
        "check_bidi": {
            "name": "check_bidi",
            "location": 61,
            "return": [],
            "arguments": {
                "label": [],
                "check_ltr": []
            }
        },
        "check_initial_combiner": {
            "name": "check_initial_combiner",
            "location": 120,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "check_hyphen_ok": {
            "name": "check_hyphen_ok",
            "location": 126,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "check_nfc": {
            "name": "check_nfc",
            "location": 134,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "valid_contextj": {
            "name": "valid_contextj",
            "location": 139,
            "return": [],
            "arguments": {
                "label": [],
                "pos": []
            }
        },
        "valid_contexto": {
            "name": "valid_contexto",
            "location": 182,
            "return": [],
            "arguments": {
                "label": [],
                "pos": [],
                "exception": []
            }
        },
        "check_label": {
            "name": "check_label",
            "location": 224,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "alabel": {
            "name": "alabel",
            "location": 255,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "ulabel": {
            "name": "ulabel",
            "location": 279,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "uts46_remap": {
            "name": "uts46_remap",
            "location": 308,
            "return": [],
            "arguments": {
                "domain": [],
                "std3_rules": [],
                "transitional": []
            }
        },
        "encode": {
            "name": "encode",
            "location": 340,
            "return": [],
            "arguments": {
                "s": [],
                "strict": [],
                "uts46": [],
                "std3_rules": [],
                "transitional": []
            }
        },
        "decode": {
            "name": "decode",
            "location": 373,
            "return": [],
            "arguments": {
                "s": [],
                "strict": [],
                "uts46": [],
                "std3_rules": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/idnadata.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/intranges.py": {
        "intranges_from_list": {
            "name": "intranges_from_list",
            "location": 11,
            "return": [],
            "arguments": {
                "list_": []
            }
        },
        "_encode_range": {
            "name": "_encode_range",
            "location": 32,
            "return": [],
            "arguments": {
                "start": [],
                "end": []
            }
        },
        "_decode_range": {
            "name": "_decode_range",
            "location": 35,
            "return": [],
            "arguments": {
                "r": []
            }
        },
        "intranges_contain": {
            "name": "intranges_contain",
            "location": 39,
            "return": [],
            "arguments": {
                "int_": [],
                "ranges": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/package_data.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/uts46data.py": {
        "_seg_0": {
            "name": "_seg_0",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "_seg_1": {
            "name": "_seg_1",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "_seg_2": {
            "name": "_seg_2",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "_seg_3": {
            "name": "_seg_3",
            "location": 323,
            "return": [],
            "arguments": {}
        },
        "_seg_4": {
            "name": "_seg_4",
            "location": 427,
            "return": [],
            "arguments": {}
        },
        "_seg_5": {
            "name": "_seg_5",
            "location": 531,
            "return": [],
            "arguments": {}
        },
        "_seg_6": {
            "name": "_seg_6",
            "location": 635,
            "return": [],
            "arguments": {}
        },
        "_seg_7": {
            "name": "_seg_7",
            "location": 739,
            "return": [],
            "arguments": {}
        },
        "_seg_8": {
            "name": "_seg_8",
            "location": 843,
            "return": [],
            "arguments": {}
        },
        "_seg_9": {
            "name": "_seg_9",
            "location": 947,
            "return": [],
            "arguments": {}
        },
        "_seg_10": {
            "name": "_seg_10",
            "location": 1051,
            "return": [],
            "arguments": {}
        },
        "_seg_11": {
            "name": "_seg_11",
            "location": 1155,
            "return": [],
            "arguments": {}
        },
        "_seg_12": {
            "name": "_seg_12",
            "location": 1259,
            "return": [],
            "arguments": {}
        },
        "_seg_13": {
            "name": "_seg_13",
            "location": 1363,
            "return": [],
            "arguments": {}
        },
        "_seg_14": {
            "name": "_seg_14",
            "location": 1467,
            "return": [],
            "arguments": {}
        },
        "_seg_15": {
            "name": "_seg_15",
            "location": 1571,
            "return": [],
            "arguments": {}
        },
        "_seg_16": {
            "name": "_seg_16",
            "location": 1675,
            "return": [],
            "arguments": {}
        },
        "_seg_17": {
            "name": "_seg_17",
            "location": 1779,
            "return": [],
            "arguments": {}
        },
        "_seg_18": {
            "name": "_seg_18",
            "location": 1883,
            "return": [],
            "arguments": {}
        },
        "_seg_19": {
            "name": "_seg_19",
            "location": 1987,
            "return": [],
            "arguments": {}
        },
        "_seg_20": {
            "name": "_seg_20",
            "location": 2091,
            "return": [],
            "arguments": {}
        },
        "_seg_21": {
            "name": "_seg_21",
            "location": 2195,
            "return": [],
            "arguments": {}
        },
        "_seg_22": {
            "name": "_seg_22",
            "location": 2299,
            "return": [],
            "arguments": {}
        },
        "_seg_23": {
            "name": "_seg_23",
            "location": 2403,
            "return": [],
            "arguments": {}
        },
        "_seg_24": {
            "name": "_seg_24",
            "location": 2507,
            "return": [],
            "arguments": {}
        },
        "_seg_25": {
            "name": "_seg_25",
            "location": 2611,
            "return": [],
            "arguments": {}
        },
        "_seg_26": {
            "name": "_seg_26",
            "location": 2715,
            "return": [],
            "arguments": {}
        },
        "_seg_27": {
            "name": "_seg_27",
            "location": 2819,
            "return": [],
            "arguments": {}
        },
        "_seg_28": {
            "name": "_seg_28",
            "location": 2923,
            "return": [],
            "arguments": {}
        },
        "_seg_29": {
            "name": "_seg_29",
            "location": 3027,
            "return": [],
            "arguments": {}
        },
        "_seg_30": {
            "name": "_seg_30",
            "location": 3131,
            "return": [],
            "arguments": {}
        },
        "_seg_31": {
            "name": "_seg_31",
            "location": 3235,
            "return": [],
            "arguments": {}
        },
        "_seg_32": {
            "name": "_seg_32",
            "location": 3339,
            "return": [],
            "arguments": {}
        },
        "_seg_33": {
            "name": "_seg_33",
            "location": 3443,
            "return": [],
            "arguments": {}
        },
        "_seg_34": {
            "name": "_seg_34",
            "location": 3547,
            "return": [],
            "arguments": {}
        },
        "_seg_35": {
            "name": "_seg_35",
            "location": 3651,
            "return": [],
            "arguments": {}
        },
        "_seg_36": {
            "name": "_seg_36",
            "location": 3755,
            "return": [],
            "arguments": {}
        },
        "_seg_37": {
            "name": "_seg_37",
            "location": 3859,
            "return": [],
            "arguments": {}
        },
        "_seg_38": {
            "name": "_seg_38",
            "location": 3963,
            "return": [],
            "arguments": {}
        },
        "_seg_39": {
            "name": "_seg_39",
            "location": 4067,
            "return": [],
            "arguments": {}
        },
        "_seg_40": {
            "name": "_seg_40",
            "location": 4171,
            "return": [],
            "arguments": {}
        },
        "_seg_41": {
            "name": "_seg_41",
            "location": 4275,
            "return": [],
            "arguments": {}
        },
        "_seg_42": {
            "name": "_seg_42",
            "location": 4379,
            "return": [],
            "arguments": {}
        },
        "_seg_43": {
            "name": "_seg_43",
            "location": 4483,
            "return": [],
            "arguments": {}
        },
        "_seg_44": {
            "name": "_seg_44",
            "location": 4587,
            "return": [],
            "arguments": {}
        },
        "_seg_45": {
            "name": "_seg_45",
            "location": 4691,
            "return": [],
            "arguments": {}
        },
        "_seg_46": {
            "name": "_seg_46",
            "location": 4795,
            "return": [],
            "arguments": {}
        },
        "_seg_47": {
            "name": "_seg_47",
            "location": 4899,
            "return": [],
            "arguments": {}
        },
        "_seg_48": {
            "name": "_seg_48",
            "location": 5003,
            "return": [],
            "arguments": {}
        },
        "_seg_49": {
            "name": "_seg_49",
            "location": 5107,
            "return": [],
            "arguments": {}
        },
        "_seg_50": {
            "name": "_seg_50",
            "location": 5211,
            "return": [],
            "arguments": {}
        },
        "_seg_51": {
            "name": "_seg_51",
            "location": 5315,
            "return": [],
            "arguments": {}
        },
        "_seg_52": {
            "name": "_seg_52",
            "location": 5419,
            "return": [],
            "arguments": {}
        },
        "_seg_53": {
            "name": "_seg_53",
            "location": 5523,
            "return": [],
            "arguments": {}
        },
        "_seg_54": {
            "name": "_seg_54",
            "location": 5627,
            "return": [],
            "arguments": {}
        },
        "_seg_55": {
            "name": "_seg_55",
            "location": 5731,
            "return": [],
            "arguments": {}
        },
        "_seg_56": {
            "name": "_seg_56",
            "location": 5835,
            "return": [],
            "arguments": {}
        },
        "_seg_57": {
            "name": "_seg_57",
            "location": 5939,
            "return": [],
            "arguments": {}
        },
        "_seg_58": {
            "name": "_seg_58",
            "location": 6043,
            "return": [],
            "arguments": {}
        },
        "_seg_59": {
            "name": "_seg_59",
            "location": 6147,
            "return": [],
            "arguments": {}
        },
        "_seg_60": {
            "name": "_seg_60",
            "location": 6251,
            "return": [],
            "arguments": {}
        },
        "_seg_61": {
            "name": "_seg_61",
            "location": 6355,
            "return": [],
            "arguments": {}
        },
        "_seg_62": {
            "name": "_seg_62",
            "location": 6459,
            "return": [],
            "arguments": {}
        },
        "_seg_63": {
            "name": "_seg_63",
            "location": 6563,
            "return": [],
            "arguments": {}
        },
        "_seg_64": {
            "name": "_seg_64",
            "location": 6667,
            "return": [],
            "arguments": {}
        },
        "_seg_65": {
            "name": "_seg_65",
            "location": 6771,
            "return": [],
            "arguments": {}
        },
        "_seg_66": {
            "name": "_seg_66",
            "location": 6875,
            "return": [],
            "arguments": {}
        },
        "_seg_67": {
            "name": "_seg_67",
            "location": 6979,
            "return": [],
            "arguments": {}
        },
        "_seg_68": {
            "name": "_seg_68",
            "location": 7083,
            "return": [],
            "arguments": {}
        },
        "_seg_69": {
            "name": "_seg_69",
            "location": 7187,
            "return": [],
            "arguments": {}
        },
        "_seg_70": {
            "name": "_seg_70",
            "location": 7291,
            "return": [],
            "arguments": {}
        },
        "_seg_71": {
            "name": "_seg_71",
            "location": 7395,
            "return": [],
            "arguments": {}
        },
        "_seg_72": {
            "name": "_seg_72",
            "location": 7499,
            "return": [],
            "arguments": {}
        },
        "_seg_73": {
            "name": "_seg_73",
            "location": 7603,
            "return": [],
            "arguments": {}
        },
        "_seg_74": {
            "name": "_seg_74",
            "location": 7707,
            "return": [],
            "arguments": {}
        },
        "_seg_75": {
            "name": "_seg_75",
            "location": 7811,
            "return": [],
            "arguments": {}
        },
        "_seg_76": {
            "name": "_seg_76",
            "location": 7915,
            "return": [],
            "arguments": {}
        },
        "_seg_77": {
            "name": "_seg_77",
            "location": 8019,
            "return": [],
            "arguments": {}
        },
        "_seg_78": {
            "name": "_seg_78",
            "location": 8123,
            "return": [],
            "arguments": {}
        },
        "_seg_79": {
            "name": "_seg_79",
            "location": 8227,
            "return": [],
            "arguments": {}
        },
        "_seg_80": {
            "name": "_seg_80",
            "location": 8331,
            "return": [],
            "arguments": {}
        },
        "_seg_81": {
            "name": "_seg_81",
            "location": 8435,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/idna/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/msgpack/exceptions.py": {
        "ExtraData.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "unpacked": [],
                "extra": []
            }
        },
        "ExtraData.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/msgpack/ext.py": {
        "ExtType.__new__": {
            "name": "__new__",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": [],
                "code": [],
                "data": []
            }
        },
        "Timestamp.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "seconds": [],
                "nanoseconds": []
            }
        },
        "Timestamp.__repr__": {
            "name": "__repr__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.__eq__": {
            "name": "__eq__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Timestamp.__ne__": {
            "name": "__ne__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Timestamp.__hash__": {
            "name": "__hash__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.from_bytes": {
            "name": "from_bytes",
            "location": 91,
            "return": [],
            "arguments": {
                "b": []
            }
        },
        "Timestamp.to_bytes": {
            "name": "to_bytes",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.from_unix": {
            "name": "from_unix",
            "location": 139,
            "return": [],
            "arguments": {
                "unix_sec": []
            }
        },
        "Timestamp.to_unix": {
            "name": "to_unix",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.from_unix_nano": {
            "name": "from_unix_nano",
            "location": 158,
            "return": [],
            "arguments": {
                "unix_ns": []
            }
        },
        "Timestamp.to_unix_nano": {
            "name": "to_unix_nano",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.to_datetime": {
            "name": "to_datetime",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp.from_datetime": {
            "name": "from_datetime",
            "location": 186,
            "return": [],
            "arguments": {
                "dt": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/msgpack/fallback.py": {
        "_check_type_strict": {
            "name": "_check_type_strict",
            "location": 96,
            "return": [],
            "arguments": {
                "obj": [],
                "t": [],
                "type": [],
                "tuple": []
            }
        },
        "_get_data_from_buffer": {
            "name": "_get_data_from_buffer",
            "location": 103,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "unpackb": {
            "name": "unpackb",
            "location": 110,
            "return": [],
            "arguments": {
                "packed": []
            }
        },
        "dict_iteritems": {
            "name": "dict_iteritems",
            "location": 19,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "_is_recursionerror": {
            "name": "_is_recursionerror",
            "location": 36,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "_unpack_from": {
            "name": "_unpack_from",
            "location": 139,
            "return": [],
            "arguments": {
                "f": [],
                "b": [],
                "o": []
            }
        },
        "Unpacker.__init__": {
            "name": "__init__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "file_like": [],
                "read_size": [],
                "use_list": [],
                "raw": [],
                "timestamp": [],
                "strict_map_key": [],
                "object_hook": [],
                "object_pairs_hook": [],
                "list_hook": [],
                "unicode_errors": [],
                "max_buffer_size": [],
                "ext_hook": [],
                "max_str_len": [],
                "max_bin_len": [],
                "max_array_len": [],
                "max_map_len": [],
                "max_ext_len": []
            }
        },
        "Unpacker.feed": {
            "name": "feed",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "next_bytes": []
            }
        },
        "Unpacker._consume": {
            "name": "_consume",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker._got_extradata": {
            "name": "_got_extradata",
            "location": 388,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker._get_extradata": {
            "name": "_get_extradata",
            "location": 391,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.read_bytes": {
            "name": "read_bytes",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Unpacker._read": {
            "name": "_read",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "raise_outofdata": []
            }
        },
        "Unpacker._reserve": {
            "name": "_reserve",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "raise_outofdata": []
            }
        },
        "Unpacker._read_header": {
            "name": "_read_header",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker._unpack": {
            "name": "_unpack",
            "location": 543,
            "return": [],
            "arguments": {
                "self": [],
                "execute": []
            }
        },
        "Unpacker.__iter__": {
            "name": "__iter__",
            "location": 620,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.__next__": {
            "name": "__next__",
            "location": 623,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.skip": {
            "name": "skip",
            "location": 636,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.unpack": {
            "name": "unpack",
            "location": 640,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.read_array_header": {
            "name": "read_array_header",
            "location": 648,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.read_map_header": {
            "name": "read_map_header",
            "location": 653,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unpacker.tell": {
            "name": "tell",
            "location": 658,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Packer.__init__": {
            "name": "__init__",
            "location": 731,
            "return": [],
            "arguments": {
                "self": [],
                "default": [],
                "use_single_float": [],
                "autoreset": [],
                "use_bin_type": [],
                "strict_types": [],
                "datetime": [],
                "unicode_errors": []
            }
        },
        "Packer._pack": {
            "name": "_pack",
            "location": 755,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "nest_limit": [],
                "check": [],
                "check_type_strict": []
            }
        },
        "Packer.pack": {
            "name": "pack",
            "location": 881,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Packer.pack_map_pairs": {
            "name": "pack_map_pairs",
            "location": 892,
            "return": [],
            "arguments": {
                "self": [],
                "pairs": []
            }
        },
        "Packer.pack_array_header": {
            "name": "pack_array_header",
            "location": 899,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer.pack_map_header": {
            "name": "pack_map_header",
            "location": 908,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer.pack_ext_type": {
            "name": "pack_ext_type",
            "location": 917,
            "return": [],
            "arguments": {
                "self": [],
                "typecode": [],
                "data": []
            }
        },
        "Packer._pack_array_header": {
            "name": "_pack_array_header",
            "location": 946,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer._pack_map_header": {
            "name": "_pack_map_header",
            "location": 955,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer._pack_map_pairs": {
            "name": "_pack_map_pairs",
            "location": 964,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "pairs": [],
                "nest_limit": []
            }
        },
        "Packer._pack_raw_header": {
            "name": "_pack_raw_header",
            "location": 970,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer._pack_bin_header": {
            "name": "_pack_bin_header",
            "location": 982,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Packer.bytes": {
            "name": "bytes",
            "location": 994,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Packer.reset": {
            "name": "reset",
            "location": 998,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Packer.getbuffer": {
            "name": "getbuffer",
            "location": 1005,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringIO.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "StringIO.write": {
            "name": "write",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "StringIO.getvalue": {
            "name": "getvalue",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/msgpack/__init__.py": {
        "pack": {
            "name": "pack",
            "location": 22,
            "return": [],
            "arguments": {
                "o": [],
                "stream": []
            }
        },
        "packb": {
            "name": "packb",
            "location": 32,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "unpack": {
            "name": "unpack",
            "location": 41,
            "return": [],
            "arguments": {
                "stream": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/markers.py": {
        "_coerce_parse_result": {
            "name": "_coerce_parse_result",
            "location": 141,
            "return": [],
            "arguments": {
                "results": []
            }
        },
        "_format_marker": {
            "name": "_format_marker",
            "location": 148,
            "return": [],
            "arguments": {
                "marker": [],
                "first": []
            }
        },
        "_eval_op": {
            "name": "_eval_op",
            "location": 189,
            "return": [],
            "arguments": {
                "lhs": [],
                "op": [],
                "rhs": []
            }
        },
        "_get_env": {
            "name": "_get_env",
            "location": 211,
            "return": [],
            "arguments": {
                "environment": [],
                "name": []
            }
        },
        "_evaluate_markers": {
            "name": "_evaluate_markers",
            "location": 222,
            "return": [],
            "arguments": {
                "markers": [],
                "environment": []
            }
        },
        "format_full_version": {
            "name": "format_full_version",
            "location": 249,
            "return": [],
            "arguments": {
                "info": []
            }
        },
        "default_environment": {
            "name": "default_environment",
            "location": 257,
            "return": [],
            "arguments": {}
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__repr__": {
            "name": "__repr__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.serialize": {
            "name": "serialize",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.serialize": {
            "name": "serialize",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.serialize": {
            "name": "serialize",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Op.serialize": {
            "name": "serialize",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "marker": []
            }
        },
        "Marker.__str__": {
            "name": "__str__",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__repr__": {
            "name": "__repr__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.evaluate": {
            "name": "evaluate",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "environment": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/requirements.py": {
        "Requirement.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_string": []
            }
        },
        "Requirement.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/specifiers.py": {
        "_require_version_compare": {
            "name": "_require_version_compare",
            "location": 287,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_version_split": {
            "name": "_version_split",
            "location": 585,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_is_not_suffix": {
            "name": "_is_not_suffix",
            "location": 596,
            "return": [],
            "arguments": {
                "segment": []
            }
        },
        "_pad_version": {
            "name": "_pad_version",
            "location": 602,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "BaseSpecifier.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__hash__": {
            "name": "__hash__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__eq__": {
            "name": "__eq__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BaseSpecifier.prereleases": {
            "name": "prereleases",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseSpecifier.contains": {
            "name": "contains",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "BaseSpecifier.filter": {
            "name": "filter",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier._canonical_spec": {
            "name": "_canonical_spec",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__hash__": {
            "name": "__hash__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__eq__": {
            "name": "__eq__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_IndividualSpecifier._get_operator": {
            "name": "_get_operator",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "op": []
            }
        },
        "_IndividualSpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "_IndividualSpecifier.operator": {
            "name": "operator",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.version": {
            "name": "version",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.prereleases": {
            "name": "prereleases",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_IndividualSpecifier.__contains__": {
            "name": "__contains__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_IndividualSpecifier.contains": {
            "name": "contains",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.filter": {
            "name": "filter",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "LegacySpecifier.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "LegacySpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacySpecifier._compare_equal": {
            "name": "_compare_equal",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "_require_version_compare.wrapped": {
            "name": "wrapped",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_compatible": {
            "name": "_compare_compatible",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_equal": {
            "name": "_compare_equal",
            "location": 430,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 492,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_arbitrary": {
            "name": "_compare_arbitrary",
            "location": 549,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier.prereleases": {
            "name": "prereleases",
            "location": 578,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__init__": {
            "name": "__init__",
            "location": 621,
            "return": [],
            "arguments": {
                "self": [],
                "specifiers": [],
                "prereleases": []
            }
        },
        "SpecifierSet.__repr__": {
            "name": "__repr__",
            "location": 645,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__str__": {
            "name": "__str__",
            "location": 654,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__hash__": {
            "name": "__hash__",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__and__": {
            "name": "__and__",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__eq__": {
            "name": "__eq__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__len__": {
            "name": "__len__",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__iter__": {
            "name": "__iter__",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.prereleases": {
            "name": "prereleases",
            "location": 716,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__contains__": {
            "name": "__contains__",
            "location": 719,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SpecifierSet.contains": {
            "name": "contains",
            "location": 722,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "SpecifierSet.filter": {
            "name": "filter",
            "location": 751,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/tags.py": {
        "parse_tag": {
            "name": "parse_tag",
            "location": 96,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "_get_config_var": {
            "name": "_get_config_var",
            "location": 112,
            "return": [],
            "arguments": {
                "name": [],
                "warn": []
            }
        },
        "_normalize_string": {
            "name": "_normalize_string",
            "location": 121,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "_abi3_applies": {
            "name": "_abi3_applies",
            "location": 125,
            "return": [],
            "arguments": {
                "python_version": []
            }
        },
        "_cpython_abis": {
            "name": "_cpython_abis",
            "location": 134,
            "return": [],
            "arguments": {
                "py_version": [],
                "warn": []
            }
        },
        "cpython_tags": {
            "name": "cpython_tags",
            "location": 170,
            "return": [],
            "arguments": {
                "python_version": [],
                "abis": [],
                "platforms": []
            }
        },
        "_generic_abi": {
            "name": "_generic_abi",
            "location": 227,
            "return": [],
            "arguments": {}
        },
        "generic_tags": {
            "name": "generic_tags",
            "location": 233,
            "return": [],
            "arguments": {
                "interpreter": [],
                "abis": [],
                "platforms": []
            }
        },
        "_py_interpreter_range": {
            "name": "_py_interpreter_range",
            "location": 263,
            "return": [],
            "arguments": {
                "py_version": []
            }
        },
        "compatible_tags": {
            "name": "compatible_tags",
            "location": 278,
            "return": [],
            "arguments": {
                "python_version": [],
                "interpreter": [],
                "platforms": []
            }
        },
        "_mac_arch": {
            "name": "_mac_arch",
            "location": 303,
            "return": [],
            "arguments": {
                "arch": [],
                "is_32bit": []
            }
        },
        "_mac_binary_formats": {
            "name": "_mac_binary_formats",
            "location": 313,
            "return": [],
            "arguments": {
                "version": [],
                "cpu_arch": []
            }
        },
        "mac_platforms": {
            "name": "mac_platforms",
            "location": 345,
            "return": [],
            "arguments": {
                "version": [],
                "arch": []
            }
        },
        "_linux_platforms": {
            "name": "_linux_platforms",
            "location": 417,
            "return": [],
            "arguments": {
                "is_32bit": []
            }
        },
        "_generic_platforms": {
            "name": "_generic_platforms",
            "location": 430,
            "return": [],
            "arguments": {}
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 434,
            "return": [],
            "arguments": {}
        },
        "interpreter_name": {
            "name": "interpreter_name",
            "location": 446,
            "return": [],
            "arguments": {}
        },
        "interpreter_version": {
            "name": "interpreter_version",
            "location": 454,
            "return": [],
            "arguments": {}
        },
        "_version_nodot": {
            "name": "_version_nodot",
            "location": 466,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "sys_tags": {
            "name": "sys_tags",
            "location": 470,
            "return": [],
            "arguments": {}
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "interpreter": [],
                "abi": [],
                "platform": []
            }
        },
        "Tag.interpreter": {
            "name": "interpreter",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.abi": {
            "name": "abi",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.platform": {
            "name": "platform",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__eq__": {
            "name": "__eq__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Tag.__hash__": {
            "name": "__hash__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/utils.py": {
        "canonicalize_name": {
            "name": "canonicalize_name",
            "location": 32,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "canonicalize_version": {
            "name": "canonicalize_version",
            "location": 38,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "parse_wheel_filename": {
            "name": "parse_wheel_filename",
            "location": 81,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "parse_sdist_filename": {
            "name": "parse_sdist_filename",
            "location": 117,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/version.py": {
        "parse": {
            "name": "parse",
            "location": 42,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_version_parts": {
            "name": "_parse_version_parts",
            "location": 179,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_legacy_cmpkey": {
            "name": "_legacy_cmpkey",
            "location": 196,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_letter_version": {
            "name": "_parse_letter_version",
            "location": 393,
            "return": [],
            "arguments": {
                "letter": [],
                "number": []
            }
        },
        "_parse_local_version": {
            "name": "_parse_local_version",
            "location": 432,
            "return": [],
            "arguments": {
                "local": []
            }
        },
        "_cmpkey": {
            "name": "_cmpkey",
            "location": 444,
            "return": [],
            "arguments": {
                "epoch": [],
                "release": [],
                "pre": [],
                "post": [],
                "dev": [],
                "local": []
            }
        },
        "_BaseVersion.__hash__": {
            "name": "__hash__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_BaseVersion.__lt__": {
            "name": "__lt__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__le__": {
            "name": "__le__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__eq__": {
            "name": "__eq__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ge__": {
            "name": "__ge__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__gt__": {
            "name": "__gt__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ne__": {
            "name": "__ne__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LegacyVersion.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacyVersion.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.__repr__": {
            "name": "__repr__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.public": {
            "name": "public",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.base_version": {
            "name": "base_version",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.epoch": {
            "name": "epoch",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.release": {
            "name": "release",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.pre": {
            "name": "pre",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.post": {
            "name": "post",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.dev": {
            "name": "dev",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.local": {
            "name": "local",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_postrelease": {
            "name": "is_postrelease",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_devrelease": {
            "name": "is_devrelease",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "Version.__repr__": {
            "name": "__repr__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.epoch": {
            "name": "epoch",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.release": {
            "name": "release",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.pre": {
            "name": "pre",
            "location": 332,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.post": {
            "name": "post",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.dev": {
            "name": "dev",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.local": {
            "name": "local",
            "location": 345,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.public": {
            "name": "public",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.base_version": {
            "name": "base_version",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_prerelease": {
            "name": "is_prerelease",
            "location": 369,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_postrelease": {
            "name": "is_postrelease",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_devrelease": {
            "name": "is_devrelease",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.major": {
            "name": "major",
            "location": 381,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.minor": {
            "name": "minor",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.micro": {
            "name": "micro",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/_manylinux.py": {
        "_get_elf_header": {
            "name": "_get_elf_header",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "_is_linux_armhf": {
            "name": "_is_linux_armhf",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "_is_linux_i686": {
            "name": "_is_linux_i686",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "_have_compatible_abi": {
            "name": "_have_compatible_abi",
            "location": 114,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_glibc_version_string_confstr": {
            "name": "_glibc_version_string_confstr",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string_ctypes": {
            "name": "_glibc_version_string_ctypes",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string": {
            "name": "_glibc_version_string",
            "location": 198,
            "return": [],
            "arguments": {}
        },
        "_parse_glibc_version": {
            "name": "_parse_glibc_version",
            "location": 203,
            "return": [],
            "arguments": {
                "version_str": []
            }
        },
        "_get_glibc_version": {
            "name": "_get_glibc_version",
            "location": 223,
            "return": [],
            "arguments": {}
        },
        "_is_compatible": {
            "name": "_is_compatible",
            "location": 231,
            "return": [],
            "arguments": {
                "name": [],
                "arch": [],
                "version": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 267,
            "return": [],
            "arguments": {
                "linux": [],
                "arch": []
            }
        },
        "_ELFFileHeader.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "_ELFFileHeader.__init__.unpack": {
            "name": "unpack",
            "location": 36,
            "return": [],
            "arguments": {
                "fmt": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/_musllinux.py": {
        "_read_unpacked": {
            "name": "_read_unpacked",
            "location": 18,
            "return": [],
            "arguments": {
                "f": [],
                "fmt": []
            }
        },
        "_parse_ld_musl_from_elf": {
            "name": "_parse_ld_musl_from_elf",
            "location": 22,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_parse_musl_version": {
            "name": "_parse_musl_version",
            "location": 76,
            "return": [],
            "arguments": {
                "output": []
            }
        },
        "_get_musl_version": {
            "name": "_get_musl_version",
            "location": 87,
            "return": [],
            "arguments": {
                "executable": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 110,
            "return": [],
            "arguments": {
                "arch": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/_structures.py": {
        "InfinityType.__repr__": {
            "name": "__repr__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__hash__": {
            "name": "__hash__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__lt__": {
            "name": "__lt__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__le__": {
            "name": "__le__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__eq__": {
            "name": "__eq__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__gt__": {
            "name": "__gt__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__ge__": {
            "name": "__ge__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__neg__": {
            "name": "__neg__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__repr__": {
            "name": "__repr__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__hash__": {
            "name": "__hash__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__lt__": {
            "name": "__lt__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__le__": {
            "name": "__le__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__eq__": {
            "name": "__eq__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__gt__": {
            "name": "__gt__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__ge__": {
            "name": "__ge__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__neg__": {
            "name": "__neg__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/__about__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/packaging/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/build.py": {
        "validate_system": {
            "name": "validate_system",
            "location": 16,
            "return": [],
            "arguments": {
                "system": []
            }
        },
        "load_system": {
            "name": "load_system",
            "location": 28,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        },
        "compat_system": {
            "name": "compat_system",
            "location": 38,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        },
        "_do_build": {
            "name": "_do_build",
            "location": 57,
            "return": [],
            "arguments": {
                "hooks": [],
                "env": [],
                "dist": [],
                "dest": []
            }
        },
        "build": {
            "name": "build",
            "location": 75,
            "return": [],
            "arguments": {
                "source_dir": [],
                "dist": [],
                "dest": [],
                "system": []
            }
        },
        "main": {
            "name": "main",
            "location": 111,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/check.py": {
        "check_build_sdist": {
            "name": "check_build_sdist",
            "location": 23,
            "return": [],
            "arguments": {
                "hooks": [],
                "build_sys_requires": []
            }
        },
        "check_build_wheel": {
            "name": "check_build_wheel",
            "location": 80,
            "return": [],
            "arguments": {
                "hooks": [],
                "build_sys_requires": []
            }
        },
        "check": {
            "name": "check",
            "location": 136,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        },
        "main": {
            "name": "main",
            "location": 170,
            "return": [],
            "arguments": {
                "argv": []
            }
        },
        "ansi": {
            "name": "ansi",
            "location": 199,
            "return": [],
            "arguments": {
                "s": [],
                "attr": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/colorlog.py": {
        "_stderr_supports_color": {
            "name": "_stderr_supports_color",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "enable_colourful_output": {
            "name": "enable_colourful_output",
            "location": 109,
            "return": [],
            "arguments": {
                "level": []
            }
        },
        "LogFormatter.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "color": [],
                "datefmt": []
            }
        },
        "LogFormatter.formatMessage": {
            "name": "formatMessage",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/dirtools.py": {
        "dir_to_zipfile": {
            "name": "dir_to_zipfile",
            "location": 6,
            "return": [],
            "arguments": {
                "root": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/envbuild.py": {
        "_load_pyproject": {
            "name": "_load_pyproject",
            "location": 18,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        },
        "build_wheel": {
            "name": "build_wheel",
            "location": 129,
            "return": [],
            "arguments": {
                "source_dir": [],
                "wheel_dir": [],
                "config_settings": []
            }
        },
        "build_sdist": {
            "name": "build_sdist",
            "location": 151,
            "return": [],
            "arguments": {
                "source_dir": [],
                "sdist_dir": [],
                "config_settings": []
            }
        },
        "BuildEnvironment.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "cleanup": []
            }
        },
        "BuildEnvironment.__enter__": {
            "name": "__enter__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildEnvironment.pip_install": {
            "name": "pip_install",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "reqs": []
            }
        },
        "BuildEnvironment.__exit__": {
            "name": "__exit__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/meta.py": {
        "_prep_meta": {
            "name": "_prep_meta",
            "location": 28,
            "return": [],
            "arguments": {
                "hooks": [],
                "env": [],
                "dest": []
            }
        },
        "build": {
            "name": "build",
            "location": 42,
            "return": [],
            "arguments": {
                "source_dir": [],
                "dest": [],
                "system": []
            }
        },
        "build_as_zip": {
            "name": "build_as_zip",
            "location": 57,
            "return": [],
            "arguments": {
                "builder": []
            }
        },
        "load": {
            "name": "load",
            "location": 63,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/wrappers.py": {
        "write_json": {
            "name": "write_json",
            "location": 24,
            "return": [],
            "arguments": {
                "obj": [],
                "path": []
            }
        },
        "read_json": {
            "name": "read_json",
            "location": 29,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "default_subprocess_runner": {
            "name": "default_subprocess_runner",
            "location": 61,
            "return": [],
            "arguments": {
                "cmd": [],
                "cwd": [],
                "extra_environ": []
            }
        },
        "quiet_subprocess_runner": {
            "name": "quiet_subprocess_runner",
            "location": 70,
            "return": [],
            "arguments": {
                "cmd": [],
                "cwd": [],
                "extra_environ": []
            }
        },
        "norm_and_check": {
            "name": "norm_and_check",
            "location": 79,
            "return": [],
            "arguments": {
                "source_tree": [],
                "requested": []
            }
        },
        "BackendUnavailable.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "traceback": []
            }
        },
        "BackendInvalid.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "backend_name": [],
                "backend_path": [],
                "message": []
            }
        },
        "HookMissing.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "hook_name": []
            }
        },
        "UnsupportedOperation.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "traceback": []
            }
        },
        "Pep517HookCaller.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "source_dir": [],
                "build_backend": [],
                "backend_path": [],
                "runner": [],
                "python_executable": []
            }
        },
        "Pep517HookCaller.subprocess_runner": {
            "name": "subprocess_runner",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "runner": []
            }
        },
        "Pep517HookCaller._supported_features": {
            "name": "_supported_features",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pep517HookCaller.get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "Pep517HookCaller.prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        },
        "Pep517HookCaller.build_wheel": {
            "name": "build_wheel",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "Pep517HookCaller.get_requires_for_build_editable": {
            "name": "get_requires_for_build_editable",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "Pep517HookCaller.prepare_metadata_for_build_editable": {
            "name": "prepare_metadata_for_build_editable",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        },
        "Pep517HookCaller.build_editable": {
            "name": "build_editable",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "Pep517HookCaller.get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "Pep517HookCaller.build_sdist": {
            "name": "build_sdist",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "sdist_directory": [],
                "config_settings": []
            }
        },
        "Pep517HookCaller._call_hook": {
            "name": "_call_hook",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "hook_name": [],
                "kwargs": []
            }
        },
        "LoggerWrapper.__init__": {
            "name": "__init__",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "logger": [],
                "level": []
            }
        },
        "LoggerWrapper.fileno": {
            "name": "fileno",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoggerWrapper.remove_newline": {
            "name": "remove_newline",
            "location": 354,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "LoggerWrapper.run": {
            "name": "run",
            "location": 357,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoggerWrapper._write": {
            "name": "_write",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/_compat.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/in_process/_in_process.py": {
        "write_json": {
            "name": "write_json",
            "location": 30,
            "return": [],
            "arguments": {
                "obj": [],
                "path": []
            }
        },
        "read_json": {
            "name": "read_json",
            "location": 35,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "contained_in": {
            "name": "contained_in",
            "location": 59,
            "return": [],
            "arguments": {
                "filename": [],
                "directory": []
            }
        },
        "_build_backend": {
            "name": "_build_backend",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "_supported_features": {
            "name": "_supported_features",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 107,
            "return": [],
            "arguments": {
                "config_settings": []
            }
        },
        "get_requires_for_build_editable": {
            "name": "get_requires_for_build_editable",
            "location": 121,
            "return": [],
            "arguments": {
                "config_settings": []
            }
        },
        "prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 135,
            "return": [],
            "arguments": {
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        },
        "prepare_metadata_for_build_editable": {
            "name": "prepare_metadata_for_build_editable",
            "location": 155,
            "return": [],
            "arguments": {
                "metadata_directory": [],
                "config_settings": [],
                "_allow_fallback": []
            }
        },
        "_dist_info_files": {
            "name": "_dist_info_files",
            "location": 185,
            "return": [],
            "arguments": {
                "whl_zip": []
            }
        },
        "_get_wheel_metadata_from_wheel": {
            "name": "_get_wheel_metadata_from_wheel",
            "location": 197,
            "return": [],
            "arguments": {
                "whl_basename": [],
                "metadata_directory": [],
                "config_settings": []
            }
        },
        "_find_already_built_wheel": {
            "name": "_find_already_built_wheel",
            "location": 215,
            "return": [],
            "arguments": {
                "metadata_directory": []
            }
        },
        "build_wheel": {
            "name": "build_wheel",
            "location": 237,
            "return": [],
            "arguments": {
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "build_editable": {
            "name": "build_editable",
            "location": 253,
            "return": [],
            "arguments": {
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 274,
            "return": [],
            "arguments": {
                "config_settings": []
            }
        },
        "build_sdist": {
            "name": "build_sdist",
            "location": 298,
            "return": [],
            "arguments": {
                "sdist_directory": [],
                "config_settings": []
            }
        },
        "main": {
            "name": "main",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "BackendUnavailable.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "traceback": []
            }
        },
        "BackendInvalid.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "HookMissing.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "hook_name": []
            }
        },
        "GotUnsupportedOperation.__init__": {
            "name": "__init__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "traceback": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pep517/in_process/__init__.py": {
        "_in_proc_script_path": {
            "name": "_in_proc_script_path",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pkg_resources/py31compat.py": {
        "_makedirs_31": {
            "name": "_makedirs_31",
            "location": 8,
            "return": [],
            "arguments": {
                "path": [],
                "exist_ok": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pkg_resources/__init__.py": {
        "parse_version": {
            "name": "parse_version",
            "location": 127,
            "return": [],
            "arguments": {
                "v": []
            }
        },
        "_declare_state": {
            "name": "_declare_state",
            "location": 137,
            "return": [],
            "arguments": {
                "vartype": []
            }
        },
        "__getstate__": {
            "name": "__getstate__",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "__setstate__": {
            "name": "__setstate__",
            "location": 150,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "_sget_dict": {
            "name": "_sget_dict",
            "location": 157,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "_sset_dict": {
            "name": "_sset_dict",
            "location": 161,
            "return": [],
            "arguments": {
                "key": [],
                "ob": [],
                "state": []
            }
        },
        "_sget_object": {
            "name": "_sget_object",
            "location": 166,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "_sset_object": {
            "name": "_sset_object",
            "location": 170,
            "return": [],
            "arguments": {
                "key": [],
                "ob": [],
                "state": []
            }
        },
        "get_supported_platform": {
            "name": "get_supported_platform",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "register_loader_type": {
            "name": "register_loader_type",
            "location": 344,
            "return": [],
            "arguments": {
                "loader_type": [],
                "provider_factory": []
            }
        },
        "get_provider": {
            "name": "get_provider",
            "location": 354,
            "return": [],
            "arguments": {
                "moduleOrReq": []
            }
        },
        "_macosx_vers": {
            "name": "_macosx_vers",
            "location": 367,
            "return": [],
            "arguments": {
                "_cache": []
            }
        },
        "_macosx_arch": {
            "name": "_macosx_arch",
            "location": 383,
            "return": [],
            "arguments": {
                "machine": []
            }
        },
        "get_build_platform": {
            "name": "get_build_platform",
            "location": 387,
            "return": [],
            "arguments": {}
        },
        "compatible_platforms": {
            "name": "compatible_platforms",
            "location": 417,
            "return": [],
            "arguments": {
                "provided": [],
                "required": []
            }
        },
        "run_script": {
            "name": "run_script",
            "location": 463,
            "return": [],
            "arguments": {
                "dist_spec": [],
                "script_name": []
            }
        },
        "get_distribution": {
            "name": "get_distribution",
            "location": 476,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "load_entry_point": {
            "name": "load_entry_point",
            "location": 487,
            "return": [],
            "arguments": {
                "dist": [],
                "group": [],
                "name": []
            }
        },
        "get_entry_map": {
            "name": "get_entry_map",
            "location": 492,
            "return": [],
            "arguments": {
                "dist": [],
                "group": []
            }
        },
        "get_entry_info": {
            "name": "get_entry_info",
            "location": 497,
            "return": [],
            "arguments": {
                "dist": [],
                "group": [],
                "name": []
            }
        },
        "get_default_cache": {
            "name": "get_default_cache",
            "location": 1305,
            "return": [],
            "arguments": {}
        },
        "safe_name": {
            "name": "safe_name",
            "location": 1317,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "safe_version": {
            "name": "safe_version",
            "location": 1325,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "safe_extra": {
            "name": "safe_extra",
            "location": 1337,
            "return": [],
            "arguments": {
                "extra": []
            }
        },
        "to_filename": {
            "name": "to_filename",
            "location": 1346,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "invalid_marker": {
            "name": "invalid_marker",
            "location": 1354,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "evaluate_marker": {
            "name": "evaluate_marker",
            "location": 1368,
            "return": [],
            "arguments": {
                "text": [],
                "extra": []
            }
        },
        "register_finder": {
            "name": "register_finder",
            "location": 1957,
            "return": [],
            "arguments": {
                "importer_type": [],
                "distribution_finder": []
            }
        },
        "find_distributions": {
            "name": "find_distributions",
            "location": 1967,
            "return": [],
            "arguments": {
                "path_item": [],
                "only": []
            }
        },
        "find_eggs_in_zip": {
            "name": "find_eggs_in_zip",
            "location": 1974,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "find_nothing": {
            "name": "find_nothing",
            "location": 2004,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "_by_version_descending": {
            "name": "_by_version_descending",
            "location": 2011,
            "return": [],
            "arguments": {
                "names": []
            }
        },
        "find_on_path": {
            "name": "find_on_path",
            "location": 2037,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "dist_factory": {
            "name": "dist_factory",
            "location": 2069,
            "return": [],
            "arguments": {
                "path_item": [],
                "entry": [],
                "only": []
            }
        },
        "safe_listdir": {
            "name": "safe_listdir",
            "location": 2103,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "distributions_from_metadata": {
            "name": "distributions_from_metadata",
            "location": 2124,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "non_empty_lines": {
            "name": "non_empty_lines",
            "location": 2139,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "resolve_egg_link": {
            "name": "resolve_egg_link",
            "location": 2150,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "register_namespace_handler": {
            "name": "register_namespace_handler",
            "location": 2173,
            "return": [],
            "arguments": {
                "importer_type": [],
                "namespace_handler": []
            }
        },
        "_handle_ns": {
            "name": "_handle_ns",
            "location": 2191,
            "return": [],
            "arguments": {
                "packageName": [],
                "path_item": []
            }
        },
        "_rebuild_mod_path": {
            "name": "_rebuild_mod_path",
            "location": 2222,
            "return": [],
            "arguments": {
                "orig_path": [],
                "package_name": [],
                "module": []
            }
        },
        "declare_namespace": {
            "name": "declare_namespace",
            "location": 2256,
            "return": [],
            "arguments": {
                "packageName": []
            }
        },
        "fixup_namespace_packages": {
            "name": "fixup_namespace_packages",
            "location": 2290,
            "return": [],
            "arguments": {
                "path_item": [],
                "parent": []
            }
        },
        "file_ns_handler": {
            "name": "file_ns_handler",
            "location": 2302,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "packageName": [],
                "module": []
            }
        },
        "null_ns_handler": {
            "name": "null_ns_handler",
            "location": 2322,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "packageName": [],
                "module": []
            }
        },
        "normalize_path": {
            "name": "normalize_path",
            "location": 2329,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_cygwin_patch": {
            "name": "_cygwin_patch",
            "location": 2334,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_normalize_cached": {
            "name": "_normalize_cached",
            "location": 2345,
            "return": [],
            "arguments": {
                "filename": [],
                "_cache": []
            }
        },
        "_is_egg_path": {
            "name": "_is_egg_path",
            "location": 2353,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_is_unpacked_egg": {
            "name": "_is_unpacked_egg",
            "location": 2360,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_set_parent_ns": {
            "name": "_set_parent_ns",
            "location": 2370,
            "return": [],
            "arguments": {
                "packageName": []
            }
        },
        "yield_lines": {
            "name": "yield_lines",
            "location": 2378,
            "return": [],
            "arguments": {
                "strs": []
            }
        },
        "_remove_md5_fragment": {
            "name": "_remove_md5_fragment",
            "location": 2539,
            "return": [],
            "arguments": {
                "location": []
            }
        },
        "_version_from_file": {
            "name": "_version_from_file",
            "location": 2548,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "issue_warning": {
            "name": "issue_warning",
            "location": 3057,
            "return": [],
            "arguments": {}
        },
        "parse_requirements": {
            "name": "parse_requirements",
            "location": 3075,
            "return": [],
            "arguments": {
                "strs": []
            }
        },
        "_always_object": {
            "name": "_always_object",
            "location": 3152,
            "return": [],
            "arguments": {
                "classes": []
            }
        },
        "_find_adapter": {
            "name": "_find_adapter",
            "location": 3162,
            "return": [],
            "arguments": {
                "registry": [],
                "ob": []
            }
        },
        "ensure_directory": {
            "name": "ensure_directory",
            "location": 3170,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_bypass_ensure_directory": {
            "name": "_bypass_ensure_directory",
            "location": 3176,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "split_sections": {
            "name": "split_sections",
            "location": 3189,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_mkstemp": {
            "name": "_mkstemp",
            "location": 3215,
            "return": [],
            "arguments": {}
        },
        "_call_aside": {
            "name": "_call_aside",
            "location": 3234,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_initialize": {
            "name": "_initialize",
            "location": 3240,
            "return": [],
            "arguments": {
                "g": []
            }
        },
        "_initialize_master_working_set": {
            "name": "_initialize_master_working_set",
            "location": 3252,
            "return": [],
            "arguments": {}
        },
        "ResolutionError.__repr__": {
            "name": "__repr__",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.dist": {
            "name": "dist",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.req": {
            "name": "req",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.report": {
            "name": "report",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.with_context": {
            "name": "with_context",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "required_by": []
            }
        },
        "ContextualVersionConflict.required_by": {
            "name": "required_by",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.req": {
            "name": "req",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.requirers": {
            "name": "requirers",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.requirers_str": {
            "name": "requirers_str",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.report": {
            "name": "report",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.__str__": {
            "name": "__str__",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IMetadataProvider.has_metadata": {
            "name": "has_metadata",
            "location": 503,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.get_metadata": {
            "name": "get_metadata",
            "location": 506,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 509,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.metadata_isdir": {
            "name": "metadata_isdir",
            "location": 515,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.metadata_listdir": {
            "name": "metadata_listdir",
            "location": 518,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.run_script": {
            "name": "run_script",
            "location": 521,
            "return": [],
            "arguments": {
                "script_name": [],
                "namespace": []
            }
        },
        "IResourceProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 528,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 533,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.get_resource_string": {
            "name": "get_resource_string",
            "location": 538,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.has_resource": {
            "name": "has_resource",
            "location": 543,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "IResourceProvider.resource_isdir": {
            "name": "resource_isdir",
            "location": 546,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "IResourceProvider.resource_listdir": {
            "name": "resource_listdir",
            "location": 549,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "WorkingSet.__init__": {
            "name": "__init__",
            "location": 556,
            "return": [],
            "arguments": {
                "self": [],
                "entries": []
            }
        },
        "WorkingSet._build_master": {
            "name": "_build_master",
            "location": 570,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "WorkingSet._build_from_requirements": {
            "name": "_build_from_requirements",
            "location": 590,
            "return": [],
            "arguments": {
                "cls": [],
                "req_spec": []
            }
        },
        "WorkingSet.add_entry": {
            "name": "add_entry",
            "location": 611,
            "return": [],
            "arguments": {
                "self": [],
                "entry": []
            }
        },
        "WorkingSet.__contains__": {
            "name": "__contains__",
            "location": 626,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "WorkingSet.find": {
            "name": "find",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "WorkingSet.iter_entry_points": {
            "name": "iter_entry_points",
            "location": 646,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "WorkingSet.run_script": {
            "name": "run_script",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "requires": [],
                "script_name": []
            }
        },
        "WorkingSet.__iter__": {
            "name": "__iter__",
            "location": 668,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.add": {
            "name": "add",
            "location": 685,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "entry": [],
                "insert": [],
                "replace": []
            }
        },
        "WorkingSet.resolve": {
            "name": "resolve",
            "location": 715,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": [],
                "env": [],
                "installer": [],
                "replace_conflicting": [],
                "extras": []
            }
        },
        "WorkingSet.find_plugins": {
            "name": "find_plugins",
            "location": 807,
            "return": [],
            "arguments": {
                "self": [],
                "plugin_env": [],
                "full_env": [],
                "installer": [],
                "fallback": []
            }
        },
        "WorkingSet.require": {
            "name": "require",
            "location": 891,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.subscribe": {
            "name": "subscribe",
            "location": 907,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "existing": []
            }
        },
        "WorkingSet._added_new": {
            "name": "_added_new",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "WorkingSet.__getstate__": {
            "name": "__getstate__",
            "location": 925,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.__setstate__": {
            "name": "__setstate__",
            "location": 931,
            "return": [],
            "arguments": {
                "self": [],
                "e_k_b_c": []
            }
        },
        "_ReqExtras.markers_pass": {
            "name": "markers_pass",
            "location": 944,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "extras": []
            }
        },
        "Environment.__init__": {
            "name": "__init__",
            "location": 962,
            "return": [],
            "arguments": {
                "self": [],
                "search_path": [],
                "platform": [],
                "python": []
            }
        },
        "Environment.can_add": {
            "name": "can_add",
            "location": 986,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.remove": {
            "name": "remove",
            "location": 1000,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.scan": {
            "name": "scan",
            "location": 1004,
            "return": [],
            "arguments": {
                "self": [],
                "search_path": []
            }
        },
        "Environment.__getitem__": {
            "name": "__getitem__",
            "location": 1019,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": []
            }
        },
        "Environment.add": {
            "name": "add",
            "location": 1030,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.best_match": {
            "name": "best_match",
            "location": 1039,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "working_set": [],
                "installer": [],
                "replace_conflicting": []
            }
        },
        "Environment.obtain": {
            "name": "obtain",
            "location": 1067,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "installer": []
            }
        },
        "Environment.__iter__": {
            "name": "__iter__",
            "location": 1079,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment.__iadd__": {
            "name": "__iadd__",
            "location": 1085,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Environment.__add__": {
            "name": "__add__",
            "location": 1097,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ResourceManager.__init__": {
            "name": "__init__",
            "location": 1129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceManager.resource_exists": {
            "name": "resource_exists",
            "location": 1132,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_isdir": {
            "name": "resource_isdir",
            "location": 1136,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_filename": {
            "name": "resource_filename",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_stream": {
            "name": "resource_stream",
            "location": 1148,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_string": {
            "name": "resource_string",
            "location": 1154,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_listdir": {
            "name": "resource_listdir",
            "location": 1160,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.extraction_error": {
            "name": "extraction_error",
            "location": 1166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceManager.get_cache_path": {
            "name": "get_cache_path",
            "location": 1194,
            "return": [],
            "arguments": {
                "self": [],
                "archive_name": [],
                "names": []
            }
        },
        "ResourceManager._warn_unsafe_extraction_path": {
            "name": "_warn_unsafe_extraction_path",
            "location": 1220,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "ResourceManager.postprocess": {
            "name": "postprocess",
            "location": 1245,
            "return": [],
            "arguments": {
                "self": [],
                "tempname": [],
                "filename": []
            }
        },
        "ResourceManager.set_extraction_path": {
            "name": "set_extraction_path",
            "location": 1265,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceManager.cleanup_resources": {
            "name": "cleanup_resources",
            "location": 1291,
            "return": [],
            "arguments": {
                "self": [],
                "force": []
            }
        },
        "NullProvider.__init__": {
            "name": "__init__",
            "location": 1390,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "NullProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 1394,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 1397,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.get_resource_string": {
            "name": "get_resource_string",
            "location": 1400,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.has_resource": {
            "name": "has_resource",
            "location": 1403,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider._get_metadata_path": {
            "name": "_get_metadata_path",
            "location": 1406,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.has_metadata": {
            "name": "has_metadata",
            "location": 1409,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.get_metadata": {
            "name": "get_metadata",
            "location": 1416,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 1431,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.resource_isdir": {
            "name": "resource_isdir",
            "location": 1434,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider.metadata_isdir": {
            "name": "metadata_isdir",
            "location": 1437,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.resource_listdir": {
            "name": "resource_listdir",
            "location": 1440,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider.metadata_listdir": {
            "name": "metadata_listdir",
            "location": 1443,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.run_script": {
            "name": "run_script",
            "location": 1448,
            "return": [],
            "arguments": {
                "self": [],
                "script_name": [],
                "namespace": []
            }
        },
        "NullProvider._has": {
            "name": "_has",
            "location": 1471,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._isdir": {
            "name": "_isdir",
            "location": 1476,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._listdir": {
            "name": "_listdir",
            "location": 1481,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._fn": {
            "name": "_fn",
            "location": 1486,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "resource_name": []
            }
        },
        "NullProvider._validate_resource_path": {
            "name": "_validate_resource_path",
            "location": 1493,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "NullProvider._get": {
            "name": "_get",
            "location": 1567,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EggProvider.__init__": {
            "name": "__init__",
            "location": 1581,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "EggProvider._setup_prefix": {
            "name": "_setup_prefix",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DefaultProvider._has": {
            "name": "_has",
            "location": 1603,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._isdir": {
            "name": "_isdir",
            "location": 1606,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._listdir": {
            "name": "_listdir",
            "location": 1609,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 1612,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "DefaultProvider._get": {
            "name": "_get",
            "location": 1615,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._register": {
            "name": "_register",
            "location": 1620,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "EmptyProvider._get": {
            "name": "_get",
            "location": 1637,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EmptyProvider._listdir": {
            "name": "_listdir",
            "location": 1640,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EmptyProvider.__init__": {
            "name": "__init__",
            "location": 1643,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipManifests.build": {
            "name": "build",
            "location": 1656,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "MemoizedZipManifests.load": {
            "name": "load",
            "location": 1683,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipProvider.__init__": {
            "name": "__init__",
            "location": 1703,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "ZipProvider._zipinfo_name": {
            "name": "_zipinfo_name",
            "location": 1707,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._parts": {
            "name": "_parts",
            "location": 1719,
            "return": [],
            "arguments": {
                "self": [],
                "zip_path": []
            }
        },
        "ZipProvider.zipinfo": {
            "name": "zipinfo",
            "location": 1730,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 1733,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "ZipProvider._get_date_and_size": {
            "name": "_get_date_and_size",
            "location": 1747,
            "return": [],
            "arguments": {
                "zip_stat": []
            }
        },
        "ZipProvider._extract_resource": {
            "name": "_extract_resource",
            "location": 1755,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "zip_path": []
            }
        },
        "ZipProvider._is_current": {
            "name": "_is_current",
            "location": 1810,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [],
                "zip_path": []
            }
        },
        "ZipProvider._get_eager_resources": {
            "name": "_get_eager_resources",
            "location": 1826,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider._index": {
            "name": "_index",
            "location": 1835,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider._has": {
            "name": "_has",
            "location": 1852,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._isdir": {
            "name": "_isdir",
            "location": 1856,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._listdir": {
            "name": "_listdir",
            "location": 1859,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._eager_to_zip": {
            "name": "_eager_to_zip",
            "location": 1862,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "ZipProvider._resource_to_zip": {
            "name": "_resource_to_zip",
            "location": 1865,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "FileMetadata.__init__": {
            "name": "__init__",
            "location": 1884,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileMetadata._get_metadata_path": {
            "name": "_get_metadata_path",
            "location": 1887,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata.has_metadata": {
            "name": "has_metadata",
            "location": 1890,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata.get_metadata": {
            "name": "get_metadata",
            "location": 1893,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata._warn_on_replacement": {
            "name": "_warn_on_replacement",
            "location": 1902,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": []
            }
        },
        "FileMetadata.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 1910,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PathMetadata.__init__": {
            "name": "__init__",
            "location": 1934,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "egg_info": []
            }
        },
        "EggMetadata.__init__": {
            "name": "__init__",
            "location": 1942,
            "return": [],
            "arguments": {
                "self": [],
                "importer": []
            }
        },
        "_by_version_descending._by_version": {
            "name": "_by_version",
            "location": 2026,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "NoDists.__bool__": {
            "name": "__bool__",
            "location": 2094,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoDists.__call__": {
            "name": "__call__",
            "location": 2099,
            "return": [],
            "arguments": {
                "self": [],
                "fullpath": []
            }
        },
        "_rebuild_mod_path.safe_sys_path_index": {
            "name": "safe_sys_path_index",
            "location": 2229,
            "return": [],
            "arguments": {
                "entry": []
            }
        },
        "_rebuild_mod_path.position_in_sys_path": {
            "name": "position_in_sys_path",
            "location": 2238,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "EntryPoint.__init__": {
            "name": "__init__",
            "location": 2410,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "module_name": [],
                "attrs": [],
                "extras": [],
                "dist": []
            }
        },
        "EntryPoint.__str__": {
            "name": "__str__",
            "location": 2419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.__repr__": {
            "name": "__repr__",
            "location": 2427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.load": {
            "name": "load",
            "location": 2430,
            "return": [],
            "arguments": {
                "self": [],
                "require": []
            }
        },
        "EntryPoint.resolve": {
            "name": "resolve",
            "location": 2445,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.require": {
            "name": "require",
            "location": 2455,
            "return": [],
            "arguments": {
                "self": [],
                "env": [],
                "installer": []
            }
        },
        "EntryPoint.parse": {
            "name": "parse",
            "location": 2478,
            "return": [],
            "arguments": {
                "cls": [],
                "src": [],
                "dist": []
            }
        },
        "EntryPoint._parse_extras": {
            "name": "_parse_extras",
            "location": 2498,
            "return": [],
            "arguments": {
                "cls": [],
                "extras_spec": []
            }
        },
        "EntryPoint.parse_group": {
            "name": "parse_group",
            "location": 2507,
            "return": [],
            "arguments": {
                "cls": [],
                "group": [],
                "lines": [],
                "dist": []
            }
        },
        "EntryPoint.parse_map": {
            "name": "parse_map",
            "location": 2520,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [],
                "dist": []
            }
        },
        "_version_from_file.is_version_line": {
            "name": "is_version_line",
            "location": 2553,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 2565,
            "return": [],
            "arguments": {
                "self": [],
                "location": [],
                "metadata": [],
                "project_name": [],
                "version": [],
                "py_version": [],
                "platform": [],
                "precedence": []
            }
        },
        "Distribution.from_location": {
            "name": "from_location",
            "location": 2579,
            "return": [],
            "arguments": {
                "cls": [],
                "location": [],
                "basename": [],
                "metadata": []
            }
        },
        "Distribution._reload_version": {
            "name": "_reload_version",
            "location": 2595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.hashcmp": {
            "name": "hashcmp",
            "location": 2599,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__hash__": {
            "name": "__hash__",
            "location": 2609,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__lt__": {
            "name": "__lt__",
            "location": 2612,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__le__": {
            "name": "__le__",
            "location": 2615,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__gt__": {
            "name": "__gt__",
            "location": 2618,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__ge__": {
            "name": "__ge__",
            "location": 2621,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__eq__": {
            "name": "__eq__",
            "location": 2624,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__ne__": {
            "name": "__ne__",
            "location": 2630,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.key": {
            "name": "key",
            "location": 2638,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.parsed_version": {
            "name": "parsed_version",
            "location": 2646,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._warn_legacy_version": {
            "name": "_warn_legacy_version",
            "location": 2652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.version": {
            "name": "version",
            "location": 2679,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._dep_map": {
            "name": "_dep_map",
            "location": 2694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._filter_extras": {
            "name": "_filter_extras",
            "location": 2706,
            "return": [],
            "arguments": {
                "dm": []
            }
        },
        "Distribution._build_dep_map": {
            "name": "_build_dep_map",
            "location": 2727,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.requires": {
            "name": "requires",
            "location": 2734,
            "return": [],
            "arguments": {
                "self": [],
                "extras": []
            }
        },
        "Distribution._get_metadata_path_for_display": {
            "name": "_get_metadata_path_for_display",
            "location": 2748,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Distribution._get_metadata": {
            "name": "_get_metadata",
            "location": 2765,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Distribution._get_version": {
            "name": "_get_version",
            "location": 2770,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.activate": {
            "name": "activate",
            "location": 2776,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "replace": []
            }
        },
        "Distribution.egg_name": {
            "name": "egg_name",
            "location": 2787,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__repr__": {
            "name": "__repr__",
            "location": 2798,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__str__": {
            "name": "__str__",
            "location": 2804,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__getattr__": {
            "name": "__getattr__",
            "location": 2812,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Distribution.__dir__": {
            "name": "__dir__",
            "location": 2818,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.from_filename": {
            "name": "from_filename",
            "location": 2832,
            "return": [],
            "arguments": {
                "cls": [],
                "filename": [],
                "metadata": []
            }
        },
        "Distribution.as_requirement": {
            "name": "as_requirement",
            "location": 2838,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.load_entry_point": {
            "name": "load_entry_point",
            "location": 2847,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "Distribution.get_entry_map": {
            "name": "get_entry_map",
            "location": 2854,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "Distribution.get_entry_info": {
            "name": "get_entry_info",
            "location": 2866,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "Distribution.insert_on": {
            "name": "insert_on",
            "location": 2870,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "loc": [],
                "replace": []
            }
        },
        "Distribution.check_version_conflict": {
            "name": "check_version_conflict",
            "location": 2938,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_version": {
            "name": "has_version",
            "location": 2960,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.clone": {
            "name": "clone",
            "location": 2968,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.extras": {
            "name": "extras",
            "location": 2977,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution._reload_version": {
            "name": "_reload_version",
            "location": 2982,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._parsed_pkg_info": {
            "name": "_parsed_pkg_info",
            "location": 3009,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._dep_map": {
            "name": "_dep_map",
            "location": 3019,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._compute_dependencies": {
            "name": "_compute_dependencies",
            "location": 3026,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequirementParseError.__str__": {
            "name": "__str__",
            "location": 3071,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__init__": {
            "name": "__init__",
            "location": 3098,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_string": []
            }
        },
        "Requirement.__eq__": {
            "name": "__eq__",
            "location": 3119,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Requirement.__ne__": {
            "name": "__ne__",
            "location": 3125,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Requirement.__contains__": {
            "name": "__contains__",
            "location": 3128,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Requirement.__hash__": {
            "name": "__hash__",
            "location": 3140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 3143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.parse": {
            "name": "parse",
            "location": 3147,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "DistInfoDistribution._compute_dependencies.reqs_for_extra": {
            "name": "reqs_for_extra",
            "location": 3035,
            "return": [],
            "arguments": {
                "extra": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/android.py": {
        "_android_folder": {
            "name": "_android_folder",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "_android_documents_folder": {
            "name": "_android_documents_folder",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "Android.user_data_dir": {
            "name": "user_data_dir",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.site_data_dir": {
            "name": "site_data_dir",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_config_dir": {
            "name": "user_config_dir",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.site_config_dir": {
            "name": "site_config_dir",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_state_dir": {
            "name": "user_state_dir",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_log_dir": {
            "name": "user_log_dir",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_documents_dir": {
            "name": "user_documents_dir",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Android.user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/api.py": {
        "PlatformDirsABC.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": [],
                "multipath": [],
                "opinion": []
            }
        },
        "PlatformDirsABC._append_app_name_and_version": {
            "name": "_append_app_name_and_version",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_data_dir": {
            "name": "user_data_dir",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.site_data_dir": {
            "name": "site_data_dir",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_config_dir": {
            "name": "user_config_dir",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.site_config_dir": {
            "name": "site_config_dir",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_state_dir": {
            "name": "user_state_dir",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_log_dir": {
            "name": "user_log_dir",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_documents_dir": {
            "name": "user_documents_dir",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_data_path": {
            "name": "user_data_path",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.site_data_path": {
            "name": "site_data_path",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_config_path": {
            "name": "user_config_path",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.site_config_path": {
            "name": "site_config_path",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_cache_path": {
            "name": "user_cache_path",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_state_path": {
            "name": "user_state_path",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_log_path": {
            "name": "user_log_path",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_documents_path": {
            "name": "user_documents_path",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformDirsABC.user_runtime_path": {
            "name": "user_runtime_path",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/macos.py": {
        "MacOS.user_data_dir": {
            "name": "user_data_dir",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.site_data_dir": {
            "name": "site_data_dir",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_config_dir": {
            "name": "user_config_dir",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.site_config_dir": {
            "name": "site_config_dir",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_state_dir": {
            "name": "user_state_dir",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_log_dir": {
            "name": "user_log_dir",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_documents_dir": {
            "name": "user_documents_dir",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MacOS.user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/unix.py": {
        "_get_user_dirs_folder": {
            "name": "_get_user_dirs_folder",
            "location": 158,
            "return": [],
            "arguments": {
                "key": []
            }
        },
        "getuid": {
            "name": "getuid",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "Unix.user_data_dir": {
            "name": "user_data_dir",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.site_data_dir": {
            "name": "site_data_dir",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix._with_multi_path": {
            "name": "_with_multi_path",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Unix.user_config_dir": {
            "name": "user_config_dir",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.site_config_dir": {
            "name": "site_config_dir",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.user_state_dir": {
            "name": "user_state_dir",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.user_log_dir": {
            "name": "user_log_dir",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.user_documents_dir": {
            "name": "user_documents_dir",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.site_data_path": {
            "name": "site_data_path",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix.site_config_path": {
            "name": "site_config_path",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Unix._first_item_as_path_if_multipath": {
            "name": "_first_item_as_path_if_multipath",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "directory": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/version.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/windows.py": {
        "get_win_folder_from_env_vars": {
            "name": "get_win_folder_from_env_vars",
            "location": 102,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "get_win_folder_from_registry": {
            "name": "get_win_folder_from_registry",
            "location": 120,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "get_win_folder_via_ctypes": {
            "name": "get_win_folder_via_ctypes",
            "location": 143,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "_pick_get_win_folder": {
            "name": "_pick_get_win_folder",
            "location": 167,
            "return": [],
            "arguments": {}
        },
        "Windows.user_data_dir": {
            "name": "user_data_dir",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows._append_parts": {
            "name": "_append_parts",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Windows.site_data_dir": {
            "name": "site_data_dir",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_config_dir": {
            "name": "user_config_dir",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.site_config_dir": {
            "name": "site_config_dir",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_state_dir": {
            "name": "user_state_dir",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_log_dir": {
            "name": "user_log_dir",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_documents_dir": {
            "name": "user_documents_dir",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Windows.user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/__init__.py": {
        "_set_platform_dir_class": {
            "name": "_set_platform_dir_class",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "user_data_dir": {
            "name": "user_data_dir",
            "location": 46,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_data_dir": {
            "name": "site_data_dir",
            "location": 62,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_config_dir": {
            "name": "user_config_dir",
            "location": 78,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_config_dir": {
            "name": "site_config_dir",
            "location": 94,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_cache_dir": {
            "name": "user_cache_dir",
            "location": 110,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_state_dir": {
            "name": "user_state_dir",
            "location": 126,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "user_log_dir": {
            "name": "user_log_dir",
            "location": 142,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_documents_dir": {
            "name": "user_documents_dir",
            "location": 158,
            "return": [],
            "arguments": {}
        },
        "user_runtime_dir": {
            "name": "user_runtime_dir",
            "location": 165,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_data_path": {
            "name": "user_data_path",
            "location": 181,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_data_path": {
            "name": "site_data_path",
            "location": 197,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_config_path": {
            "name": "user_config_path",
            "location": 213,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_config_path": {
            "name": "site_config_path",
            "location": 229,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_cache_path": {
            "name": "user_cache_path",
            "location": 245,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_state_path": {
            "name": "user_state_path",
            "location": 261,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "user_log_path": {
            "name": "user_log_path",
            "location": 277,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_documents_path": {
            "name": "user_documents_path",
            "location": 293,
            "return": [],
            "arguments": {}
        },
        "user_runtime_path": {
            "name": "user_runtime_path",
            "location": 300,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/platformdirs/__main__.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/cmdline.py": {
        "_parse_options": {
            "name": "_parse_options",
            "location": 33,
            "return": [],
            "arguments": {
                "o_strs": []
            }
        },
        "_parse_filters": {
            "name": "_parse_filters",
            "location": 54,
            "return": [],
            "arguments": {
                "f_strs": []
            }
        },
        "_print_help": {
            "name": "_print_help",
            "location": 67,
            "return": [],
            "arguments": {
                "what": [],
                "name": []
            }
        },
        "_print_list": {
            "name": "_print_list",
            "location": 87,
            "return": [],
            "arguments": {
                "what": []
            }
        },
        "_print_list_as_json": {
            "name": "_print_list_as_json",
            "location": 138,
            "return": [],
            "arguments": {
                "requested_items": []
            }
        },
        "main_inner": {
            "name": "main_inner",
            "location": 182,
            "return": [],
            "arguments": {
                "parser": [],
                "argns": []
            }
        },
        "main": {
            "name": "main",
            "location": 528,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "main_inner.is_only_option": {
            "name": "is_only_option",
            "location": 192,
            "return": [],
            "arguments": {
                "opt": []
            }
        },
        "HelpFormatter.__init__": {
            "name": "__init__",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "prog": [],
                "indent_increment": [],
                "max_help_position": [],
                "width": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/console.py": {
        "reset_color": {
            "name": "reset_color",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "colorize": {
            "name": "colorize",
            "location": 44,
            "return": [],
            "arguments": {
                "color_key": [],
                "text": []
            }
        },
        "ansiformat": {
            "name": "ansiformat",
            "location": 48,
            "return": [],
            "arguments": {
                "attr": [],
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/filter.py": {
        "apply_filters": {
            "name": "apply_filters",
            "location": 12,
            "return": [],
            "arguments": {
                "stream": [],
                "filters": [],
                "lexer": []
            }
        },
        "simplefilter": {
            "name": "simplefilter",
            "location": 25,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "apply_filters._apply": {
            "name": "_apply",
            "location": 18,
            "return": [],
            "arguments": {
                "filter_": [],
                "stream": []
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Filter.filter": {
            "name": "filter",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "FunctionFilter.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionFilter.filter": {
            "name": "filter",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatter.py": {
        "_lookup_style": {
            "name": "_lookup_style",
            "location": 19,
            "return": [],
            "arguments": {
                "style": []
            }
        },
        "Formatter.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Formatter.get_style_defs": {
            "name": "get_style_defs",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "Formatter.format": {
            "name": "format",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/lexer.py": {
        "bygroups": {
            "name": "bygroups",
            "location": 304,
            "return": [],
            "arguments": {}
        },
        "using": {
            "name": "using",
            "location": 339,
            "return": [],
            "arguments": {
                "_other": []
            }
        },
        "do_insertions": {
            "name": "do_insertions",
            "location": 770,
            "return": [],
            "arguments": {
                "insertions": [],
                "tokens": []
            }
        },
        "LexerMeta.__new__": {
            "name": "__new__",
            "location": 42,
            "return": [],
            "arguments": {
                "mcs": [],
                "name": [],
                "bases": [],
                "d": []
            }
        },
        "Lexer.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lexer.__repr__": {
            "name": "__repr__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lexer.add_filter": {
            "name": "add_filter",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "filter_": []
            }
        },
        "Lexer.analyse_text": {
            "name": "analyse_text",
            "location": 124,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Lexer.get_tokens": {
            "name": "get_tokens",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "unfiltered": []
            }
        },
        "Lexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "DelegatingLexer.__init__": {
            "name": "__init__",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "_root_lexer": [],
                "_language_lexer": [],
                "_needle": []
            }
        },
        "DelegatingLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "_inherit.__repr__": {
            "name": "__repr__",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "combined.__new__": {
            "name": "__new__",
            "location": 269,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "combined.__init__": {
            "name": "__init__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PseudoMatch.__init__": {
            "name": "__init__",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "text": []
            }
        },
        "_PseudoMatch.start": {
            "name": "start",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "_PseudoMatch.end": {
            "name": "end",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "_PseudoMatch.group": {
            "name": "group",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "_PseudoMatch.groups": {
            "name": "groups",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PseudoMatch.groupdict": {
            "name": "groupdict",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bygroups.callback": {
            "name": "callback",
            "location": 308,
            "return": [],
            "arguments": {
                "lexer": [],
                "match": [],
                "ctx": []
            }
        },
        "default.__init__": {
            "name": "__init__",
            "location": 397,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "words.__init__": {
            "name": "__init__",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "words": [],
                "prefix": [],
                "suffix": []
            }
        },
        "words.get": {
            "name": "get",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegexLexerMeta._process_regex": {
            "name": "_process_regex",
            "location": 423,
            "return": [],
            "arguments": {
                "cls": [],
                "regex": [],
                "rflags": [],
                "state": []
            }
        },
        "RegexLexerMeta._process_token": {
            "name": "_process_token",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": [],
                "token": []
            }
        },
        "RegexLexerMeta._process_new_state": {
            "name": "_process_new_state",
            "location": 435,
            "return": [],
            "arguments": {
                "cls": [],
                "new_state": [],
                "unprocessed": [],
                "processed": []
            }
        },
        "RegexLexerMeta._process_state": {
            "name": "_process_state",
            "location": 470,
            "return": [],
            "arguments": {
                "cls": [],
                "unprocessed": [],
                "processed": [],
                "state": []
            }
        },
        "RegexLexerMeta.process_tokendef": {
            "name": "process_tokendef",
            "location": 514,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "tokendefs": []
            }
        },
        "RegexLexerMeta.get_tokendefs": {
            "name": "get_tokendefs",
            "location": 522,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RegexLexerMeta.__call__": {
            "name": "__call__",
            "location": 571,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RegexLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 620,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "stack": []
            }
        },
        "LexerContext.__init__": {
            "name": "__init__",
            "location": 687,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "pos": [],
                "stack": [],
                "end": []
            }
        },
        "LexerContext.__repr__": {
            "name": "__repr__",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtendedRegexLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 703,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "context": []
            }
        },
        "ProfilingRegexLexerMeta._process_regex": {
            "name": "_process_regex",
            "location": 837,
            "return": [],
            "arguments": {
                "cls": [],
                "regex": [],
                "rflags": [],
                "state": []
            }
        },
        "ProfilingRegexLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 862,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "stack": []
            }
        },
        "Lexer.get_tokens.streamer": {
            "name": "streamer",
            "location": 189,
            "return": [],
            "arguments": {}
        },
        "using.callback": {
            "name": "callback",
            "location": 376,
            "return": [],
            "arguments": {
                "lexer": [],
                "match": [],
                "ctx": []
            }
        },
        "ProfilingRegexLexerMeta._process_regex.match_func": {
            "name": "match_func",
            "location": 845,
            "return": [],
            "arguments": {
                "text": [],
                "pos": [],
                "endpos": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/modeline.py": {
        "get_filetype_from_line": {
            "name": "get_filetype_from_line",
            "location": 22,
            "return": [],
            "arguments": {
                "l": []
            }
        },
        "get_filetype_from_buffer": {
            "name": "get_filetype_from_buffer",
            "location": 28,
            "return": [],
            "arguments": {
                "buf": [],
                "max_lines": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/plugin.py": {
        "iter_entry_points": {
            "name": "iter_entry_points",
            "location": 47,
            "return": [],
            "arguments": {
                "group_name": []
            }
        },
        "find_plugin_lexers": {
            "name": "find_plugin_lexers",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "find_plugin_formatters": {
            "name": "find_plugin_formatters",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "find_plugin_styles": {
            "name": "find_plugin_styles",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "find_plugin_filters": {
            "name": "find_plugin_filters",
            "location": 86,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/regexopt.py": {
        "make_charset": {
            "name": "make_charset",
            "location": 22,
            "return": [],
            "arguments": {
                "letters": []
            }
        },
        "regex_opt_inner": {
            "name": "regex_opt_inner",
            "location": 26,
            "return": [],
            "arguments": {
                "strings": [],
                "open_paren": []
            }
        },
        "regex_opt": {
            "name": "regex_opt",
            "location": 82,
            "return": [],
            "arguments": {
                "strings": [],
                "prefix": [],
                "suffix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/scanner.py": {
        "Scanner.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "flags": []
            }
        },
        "Scanner.eos": {
            "name": "eos",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scanner.check": {
            "name": "check",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "Scanner.test": {
            "name": "test",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "Scanner.scan": {
            "name": "scan",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "Scanner.get_char": {
            "name": "get_char",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scanner.__repr__": {
            "name": "__repr__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/sphinxext.py": {
        "setup": {
            "name": "setup",
            "location": 154,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "PygmentsDoc.run": {
            "name": "run",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PygmentsDoc.document_lexers": {
            "name": "document_lexers",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PygmentsDoc.document_formatters": {
            "name": "document_formatters",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PygmentsDoc.document_filters": {
            "name": "document_filters",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/style.py": {
        "StyleMeta.__new__": {
            "name": "__new__",
            "location": 60,
            "return": [],
            "arguments": {
                "mcs": [],
                "name": [],
                "bases": [],
                "dct": []
            }
        },
        "StyleMeta.style_for_token": {
            "name": "style_for_token",
            "location": 126,
            "return": [],
            "arguments": {
                "cls": [],
                "token": []
            }
        },
        "StyleMeta.list_styles": {
            "name": "list_styles",
            "location": 156,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "StyleMeta.styles_token": {
            "name": "styles_token",
            "location": 159,
            "return": [],
            "arguments": {
                "cls": [],
                "ttype": []
            }
        },
        "StyleMeta.__iter__": {
            "name": "__iter__",
            "location": 162,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "StyleMeta.__len__": {
            "name": "__len__",
            "location": 166,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "StyleMeta.__new__.colorformat": {
            "name": "colorformat",
            "location": 66,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/token.py": {
        "is_token_subtype": {
            "name": "is_token_subtype",
            "location": 85,
            "return": [],
            "arguments": {
                "ttype": [],
                "other": []
            }
        },
        "string_to_tokentype": {
            "name": "string_to_tokentype",
            "location": 94,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_TokenType.split": {
            "name": "split",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TokenType.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TokenType.__contains__": {
            "name": "__contains__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "_TokenType.__getattr__": {
            "name": "__getattr__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "_TokenType.__repr__": {
            "name": "__repr__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TokenType.__copy__": {
            "name": "__copy__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TokenType.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "memo": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/unistring.py": {
        "combine": {
            "name": "combine",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "allexcept": {
            "name": "allexcept",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "_handle_runs": {
            "name": "_handle_runs",
            "location": 93,
            "return": [],
            "arguments": {
                "char_list": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/util.py": {
        "get_choice_opt": {
            "name": "get_choice_opt",
            "location": 38,
            "return": [],
            "arguments": {
                "options": [],
                "optname": [],
                "allowed": [],
                "default": [],
                "normcase": []
            }
        },
        "get_bool_opt": {
            "name": "get_bool_opt",
            "location": 48,
            "return": [],
            "arguments": {
                "options": [],
                "optname": [],
                "default": []
            }
        },
        "get_int_opt": {
            "name": "get_int_opt",
            "location": 68,
            "return": [],
            "arguments": {
                "options": [],
                "optname": [],
                "default": []
            }
        },
        "get_list_opt": {
            "name": "get_list_opt",
            "location": 82,
            "return": [],
            "arguments": {
                "options": [],
                "optname": [],
                "default": []
            }
        },
        "docstring_headline": {
            "name": "docstring_headline",
            "location": 94,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "make_analysator": {
            "name": "make_analysator",
            "location": 106,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "shebang_matches": {
            "name": "shebang_matches",
            "location": 123,
            "return": [],
            "arguments": {
                "text": [],
                "regex": []
            }
        },
        "doctype_matches": {
            "name": "doctype_matches",
            "location": 168,
            "return": [],
            "arguments": {
                "text": [],
                "regex": []
            }
        },
        "html_doctype_matches": {
            "name": "html_doctype_matches",
            "location": 181,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "looks_like_xml": {
            "name": "looks_like_xml",
            "location": 189,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "surrogatepair": {
            "name": "surrogatepair",
            "location": 205,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "format_lines": {
            "name": "format_lines",
            "location": 214,
            "return": [],
            "arguments": {
                "var_name": [],
                "seq": [],
                "raw": [],
                "indent_level": []
            }
        },
        "duplicates_removed": {
            "name": "duplicates_removed",
            "location": 233,
            "return": [],
            "arguments": {
                "it": [],
                "already_seen": []
            }
        },
        "guess_decode": {
            "name": "guess_decode",
            "location": 259,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "guess_decode_from_terminal": {
            "name": "guess_decode_from_terminal",
            "location": 280,
            "return": [],
            "arguments": {
                "text": [],
                "term": []
            }
        },
        "terminal_encoding": {
            "name": "terminal_encoding",
            "location": 297,
            "return": [],
            "arguments": {
                "term": []
            }
        },
        "make_analysator.text_analyse": {
            "name": "text_analyse",
            "location": 108,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Future.get": {
            "name": "get",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnclosingTextIOWrapper.close": {
            "name": "close",
            "location": 307,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/__init__.py": {
        "lex": {
            "name": "lex",
            "location": 35,
            "return": [],
            "arguments": {
                "code": [],
                "lexer": []
            }
        },
        "format": {
            "name": "format",
            "location": 50,
            "return": [],
            "arguments": {
                "tokens": [],
                "formatter": [],
                "outfile": []
            }
        },
        "highlight": {
            "name": "highlight",
            "location": 74,
            "return": [],
            "arguments": {
                "code": [],
                "lexer": [],
                "formatter": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/__main__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/filters/__init__.py": {
        "find_filter_class": {
            "name": "find_filter_class",
            "location": 22,
            "return": [],
            "arguments": {
                "filtername": []
            }
        },
        "get_filter_by_name": {
            "name": "get_filter_by_name",
            "location": 32,
            "return": [],
            "arguments": {
                "filtername": []
            }
        },
        "get_all_filters": {
            "name": "get_all_filters",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "_replace_special": {
            "name": "_replace_special",
            "location": 52,
            "return": [],
            "arguments": {
                "ttype": [],
                "value": [],
                "regex": [],
                "specialttype": [],
                "replacefunc": []
            }
        },
        "CodeTagFilter.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CodeTagFilter.filter": {
            "name": "filter",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "SymbolFilter.__init__": {
            "name": "__init__",
            "location": 673,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolFilter.filter": {
            "name": "filter",
            "location": 679,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "KeywordCaseFilter.__init__": {
            "name": "__init__",
            "location": 701,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KeywordCaseFilter.filter": {
            "name": "filter",
            "location": 707,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "NameHighlightFilter.__init__": {
            "name": "__init__",
            "location": 739,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NameHighlightFilter.filter": {
            "name": "filter",
            "location": 748,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "RaiseOnErrorTokenFilter.__init__": {
            "name": "__init__",
            "location": 772,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RaiseOnErrorTokenFilter.filter": {
            "name": "filter",
            "location": 782,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "VisibleWhitespaceFilter.__init__": {
            "name": "__init__",
            "location": 819,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VisibleWhitespaceFilter.filter": {
            "name": "filter",
            "location": 836,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "GobbleFilter.__init__": {
            "name": "__init__",
            "location": 882,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GobbleFilter.gobble": {
            "name": "gobble",
            "location": 886,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "left": []
            }
        },
        "GobbleFilter.filter": {
            "name": "filter",
            "location": 892,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "TokenMergeFilter.__init__": {
            "name": "__init__",
            "location": 913,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TokenMergeFilter.filter": {
            "name": "filter",
            "location": 916,
            "return": [],
            "arguments": {
                "self": [],
                "lexer": [],
                "stream": []
            }
        },
        "VisibleWhitespaceFilter.filter.replacefunc": {
            "name": "replacefunc",
            "location": 843,
            "return": [],
            "arguments": {
                "wschar": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/bbcode.py": {
        "BBCodeFormatter.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BBCodeFormatter._make_styles": {
            "name": "_make_styles",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BBCodeFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/groff.py": {
        "GroffFormatter.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GroffFormatter._make_styles": {
            "name": "_make_styles",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GroffFormatter._define_colors": {
            "name": "_define_colors",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "GroffFormatter._write_lineno": {
            "name": "_write_lineno",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "GroffFormatter._wrap_line": {
            "name": "_wrap_line",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "GroffFormatter._escape_chars": {
            "name": "_escape_chars",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "GroffFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/html.py": {
        "escape_html": {
            "name": "escape_html",
            "location": 38,
            "return": [],
            "arguments": {
                "text": [],
                "table": []
            }
        },
        "webify": {
            "name": "webify",
            "location": 43,
            "return": [],
            "arguments": {
                "color": []
            }
        },
        "_get_ttype_class": {
            "name": "_get_ttype_class",
            "location": 50,
            "return": [],
            "arguments": {
                "ttype": []
            }
        },
        "HtmlFormatter.__init__": {
            "name": "__init__",
            "location": 412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter._get_css_class": {
            "name": "_get_css_class",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "HtmlFormatter._get_css_classes": {
            "name": "_get_css_classes",
            "location": 469,
            "return": [],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "HtmlFormatter._get_css_inline_styles": {
            "name": "_get_css_inline_styles",
            "location": 477,
            "return": [],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "HtmlFormatter._create_stylesheet": {
            "name": "_create_stylesheet",
            "location": 485,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter.get_style_defs": {
            "name": "get_style_defs",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "HtmlFormatter.get_token_style_defs": {
            "name": "get_token_style_defs",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "HtmlFormatter.get_background_style_defs": {
            "name": "get_background_style_defs",
            "location": 540,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "HtmlFormatter.get_linenos_style_defs": {
            "name": "get_linenos_style_defs",
            "location": 563,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter.get_css_prefix": {
            "name": "get_css_prefix",
            "location": 574,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "HtmlFormatter._pre_style": {
            "name": "_pre_style",
            "location": 593,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter._linenos_style": {
            "name": "_linenos_style",
            "location": 597,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter._linenos_special_style": {
            "name": "_linenos_special_style",
            "location": 604,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HtmlFormatter._decodeifneeded": {
            "name": "_decodeifneeded",
            "location": 610,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HtmlFormatter._wrap_full": {
            "name": "_wrap_full",
            "location": 617,
            "return": [],
            "arguments": {
                "self": [],
                "inner": [],
                "outfile": []
            }
        },
        "HtmlFormatter._wrap_tablelinenos": {
            "name": "_wrap_tablelinenos",
            "location": 658,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_inlinelinenos": {
            "name": "_wrap_inlinelinenos",
            "location": 726,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_lineanchors": {
            "name": "_wrap_lineanchors",
            "location": 769,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_linespans": {
            "name": "_wrap_linespans",
            "location": 781,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_div": {
            "name": "_wrap_div",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_pre": {
            "name": "_wrap_pre",
            "location": 805,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._wrap_code": {
            "name": "_wrap_code",
            "location": 822,
            "return": [],
            "arguments": {
                "self": [],
                "inner": []
            }
        },
        "HtmlFormatter._translate_parts": {
            "name": "_translate_parts",
            "location": 828,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HtmlFormatter._format_lines": {
            "name": "_format_lines",
            "location": 832,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": []
            }
        },
        "HtmlFormatter._lookup_ctag": {
            "name": "_lookup_ctag",
            "location": 908,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "HtmlFormatter._highlight_lines": {
            "name": "_highlight_lines",
            "location": 915,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": []
            }
        },
        "HtmlFormatter.wrap": {
            "name": "wrap",
            "location": 937,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "HtmlFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 952,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "HtmlFormatter.get_css_prefix.prefix": {
            "name": "prefix",
            "location": 582,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/img.py": {
        "FontManager.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "font_name": [],
                "font_size": []
            }
        },
        "FontManager._get_nix_font_path": {
            "name": "_get_nix_font_path",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "style": []
            }
        },
        "FontManager._create_nix": {
            "name": "_create_nix",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FontManager._get_mac_font_path": {
            "name": "_get_mac_font_path",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "font_map": [],
                "name": [],
                "style": []
            }
        },
        "FontManager._create_mac": {
            "name": "_create_mac",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FontManager._lookup_win": {
            "name": "_lookup_win",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "basename": [],
                "styles": [],
                "fail": []
            }
        },
        "FontManager._create_win": {
            "name": "_create_win",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FontManager.get_char_size": {
            "name": "get_char_size",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FontManager.get_text_size": {
            "name": "get_text_size",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FontManager.get_font": {
            "name": "get_font",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "bold": [],
                "oblique": []
            }
        },
        "ImageFormatter.__init__": {
            "name": "__init__",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImageFormatter.get_style_defs": {
            "name": "get_style_defs",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "ImageFormatter._get_line_height": {
            "name": "_get_line_height",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImageFormatter._get_line_y": {
            "name": "_get_line_y",
            "location": 419,
            "return": [],
            "arguments": {
                "self": [],
                "lineno": []
            }
        },
        "ImageFormatter._get_char_width": {
            "name": "_get_char_width",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImageFormatter._get_char_x": {
            "name": "_get_char_x",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "linelength": []
            }
        },
        "ImageFormatter._get_text_pos": {
            "name": "_get_text_pos",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "linelength": [],
                "lineno": []
            }
        },
        "ImageFormatter._get_linenumber_pos": {
            "name": "_get_linenumber_pos",
            "location": 443,
            "return": [],
            "arguments": {
                "self": [],
                "lineno": []
            }
        },
        "ImageFormatter._get_text_color": {
            "name": "_get_text_color",
            "location": 449,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "ImageFormatter._get_text_bg_color": {
            "name": "_get_text_bg_color",
            "location": 459,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "ImageFormatter._get_style_font": {
            "name": "_get_style_font",
            "location": 469,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "ImageFormatter._get_image_size": {
            "name": "_get_image_size",
            "location": 475,
            "return": [],
            "arguments": {
                "self": [],
                "maxlinelength": [],
                "maxlineno": []
            }
        },
        "ImageFormatter._draw_linenumber": {
            "name": "_draw_linenumber",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "posno": [],
                "lineno": []
            }
        },
        "ImageFormatter._draw_text": {
            "name": "_draw_text",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "pos": [],
                "text": [],
                "font": [],
                "text_fg": [],
                "text_bg": []
            }
        },
        "ImageFormatter._create_drawables": {
            "name": "_create_drawables",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": []
            }
        },
        "ImageFormatter._draw_line_numbers": {
            "name": "_draw_line_numbers",
            "location": 541,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImageFormatter._paint_line_number_bg": {
            "name": "_paint_line_number_bg",
            "location": 552,
            "return": [],
            "arguments": {
                "self": [],
                "im": []
            }
        },
        "ImageFormatter.format": {
            "name": "format",
            "location": 569,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/irc.py": {
        "ircformat": {
            "name": "ircformat",
            "location": 76,
            "return": [],
            "arguments": {
                "color": [],
                "text": []
            }
        },
        "IRCFormatter.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IRCFormatter._write_lineno": {
            "name": "_write_lineno",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "IRCFormatter._format_unencoded_with_lineno": {
            "name": "_format_unencoded_with_lineno",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "IRCFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/latex.py": {
        "escape_tex": {
            "name": "escape_tex",
            "location": 22,
            "return": [],
            "arguments": {
                "text": [],
                "commandprefix": []
            }
        },
        "_get_ttype_name": {
            "name": "_get_ttype_name",
            "location": 135,
            "return": [],
            "arguments": {
                "ttype": []
            }
        },
        "LatexFormatter.__init__": {
            "name": "__init__",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LatexFormatter._create_stylesheet": {
            "name": "_create_stylesheet",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LatexFormatter.get_style_defs": {
            "name": "get_style_defs",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "LatexFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "LatexEmbeddedLexer.__init__": {
            "name": "__init__",
            "location": 451,
            "return": [],
            "arguments": {
                "self": [],
                "left": [],
                "right": [],
                "lang": []
            }
        },
        "LatexEmbeddedLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "LatexEmbeddedLexer._find_safe_escape_tokens": {
            "name": "_find_safe_escape_tokens",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "LatexEmbeddedLexer._filter_to": {
            "name": "_filter_to",
            "location": 488,
            "return": [],
            "arguments": {
                "self": [],
                "it": [],
                "pred": []
            }
        },
        "LatexEmbeddedLexer._find_escape_tokens": {
            "name": "_find_escape_tokens",
            "location": 505,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "LatexFormatter._create_stylesheet.rgbcolor": {
            "name": "rgbcolor",
            "location": 284,
            "return": [],
            "arguments": {
                "col": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/other.py": {
        "NullFormatter.format": {
            "name": "format",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "RawTokenFormatter.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RawTokenFormatter.format": {
            "name": "format",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "TestcaseFormatter.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestcaseFormatter.format": {
            "name": "format",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "RawTokenFormatter.format.write": {
            "name": "write",
            "location": 96,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "RawTokenFormatter.format.flush": {
            "name": "flush",
            "location": 99,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/pangomarkup.py": {
        "escape_special_chars": {
            "name": "escape_special_chars",
            "location": 23,
            "return": [],
            "arguments": {
                "text": [],
                "table": []
            }
        },
        "PangoMarkupFormatter.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PangoMarkupFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/rtf.py": {
        "RtfFormatter.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RtfFormatter._escape": {
            "name": "_escape",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "RtfFormatter._escape_text": {
            "name": "_escape_text",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "RtfFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/svg.py": {
        "escape_html": {
            "name": "escape_html",
            "location": 18,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "SvgFormatter.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SvgFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "SvgFormatter._get_style": {
            "name": "_get_style",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "tokentype": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/terminal.py": {
        "TerminalFormatter.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TerminalFormatter.format": {
            "name": "format",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "TerminalFormatter._write_lineno": {
            "name": "_write_lineno",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "TerminalFormatter._get_color": {
            "name": "_get_color",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "TerminalFormatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/terminal256.py": {
        "EscapeSequence.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "fg": [],
                "bg": [],
                "bold": [],
                "underline": [],
                "italic": []
            }
        },
        "EscapeSequence.escape": {
            "name": "escape",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "EscapeSequence.color_string": {
            "name": "color_string",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscapeSequence.true_color_string": {
            "name": "true_color_string",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EscapeSequence.reset_string": {
            "name": "reset_string",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Terminal256Formatter.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Terminal256Formatter._build_color_table": {
            "name": "_build_color_table",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Terminal256Formatter._closest_color": {
            "name": "_closest_color",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "r": [],
                "g": [],
                "b": []
            }
        },
        "Terminal256Formatter._color_index": {
            "name": "_color_index",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "Terminal256Formatter._setup_styles": {
            "name": "_setup_styles",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Terminal256Formatter._write_lineno": {
            "name": "_write_lineno",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "Terminal256Formatter.format": {
            "name": "format",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "Terminal256Formatter.format_unencoded": {
            "name": "format_unencoded",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "tokensource": [],
                "outfile": []
            }
        },
        "TerminalTrueColorFormatter._build_color_table": {
            "name": "_build_color_table",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TerminalTrueColorFormatter._color_tuple": {
            "name": "_color_tuple",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "TerminalTrueColorFormatter._setup_styles": {
            "name": "_setup_styles",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/_mapping.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/formatters/__init__.py": {
        "_load_formatters": {
            "name": "_load_formatters",
            "location": 26,
            "return": [],
            "arguments": {
                "module_name": []
            }
        },
        "get_all_formatters": {
            "name": "get_all_formatters",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "find_formatter_class": {
            "name": "find_formatter_class",
            "location": 45,
            "return": [],
            "arguments": {
                "alias": []
            }
        },
        "get_formatter_by_name": {
            "name": "get_formatter_by_name",
            "location": 60,
            "return": [],
            "arguments": {
                "_alias": []
            }
        },
        "load_formatter_from_file": {
            "name": "load_formatter_from_file",
            "location": 71,
            "return": [],
            "arguments": {
                "filename": [],
                "formattername": []
            }
        },
        "get_formatter_for_filename": {
            "name": "get_formatter_for_filename",
            "location": 107,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_automodule.__getattr__": {
            "name": "__getattr__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/lexers/python.py": {
        "PythonLexer.innerstring_rules": {
            "name": "innerstring_rules",
            "location": 67,
            "return": [],
            "arguments": {
                "ttype": []
            }
        },
        "PythonLexer.fstring_rules": {
            "name": "fstring_rules",
            "location": 87,
            "return": [],
            "arguments": {
                "ttype": []
            }
        },
        "PythonLexer.analyse_text": {
            "name": "analyse_text",
            "location": 409,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Python2Lexer.innerstring_rules": {
            "name": "innerstring_rules",
            "location": 433,
            "return": [],
            "arguments": {
                "ttype": []
            }
        },
        "Python2Lexer.analyse_text": {
            "name": "analyse_text",
            "location": 635,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "PythonConsoleLexer.__init__": {
            "name": "__init__",
            "location": 666,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConsoleLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 670,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "NumPyLexer.get_tokens_unprocessed": {
            "name": "get_tokens_unprocessed",
            "location": 1192,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "NumPyLexer.analyse_text": {
            "name": "analyse_text",
            "location": 1200,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/lexers/_mapping.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/lexers/__init__.py": {
        "_load_lexers": {
            "name": "_load_lexers",
            "location": 32,
            "return": [],
            "arguments": {
                "module_name": []
            }
        },
        "get_all_lexers": {
            "name": "get_all_lexers",
            "location": 40,
            "return": [],
            "arguments": {
                "plugins": []
            }
        },
        "find_lexer_class": {
            "name": "find_lexer_class",
            "location": 54,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "find_lexer_class_by_name": {
            "name": "find_lexer_class_by_name",
            "location": 72,
            "return": [],
            "arguments": {
                "_alias": []
            }
        },
        "get_lexer_by_name": {
            "name": "get_lexer_by_name",
            "location": 94,
            "return": [],
            "arguments": {
                "_alias": []
            }
        },
        "load_lexer_from_file": {
            "name": "load_lexer_from_file",
            "location": 115,
            "return": [],
            "arguments": {
                "filename": [],
                "lexername": []
            }
        },
        "find_lexer_class_for_filename": {
            "name": "find_lexer_class_for_filename",
            "location": 150,
            "return": [],
            "arguments": {
                "_fn": [],
                "code": []
            }
        },
        "get_lexer_for_filename": {
            "name": "get_lexer_for_filename",
            "location": 193,
            "return": [],
            "arguments": {
                "_fn": [],
                "code": []
            }
        },
        "get_lexer_for_mimetype": {
            "name": "get_lexer_for_mimetype",
            "location": 207,
            "return": [],
            "arguments": {
                "_mime": []
            }
        },
        "_iter_lexerclasses": {
            "name": "_iter_lexerclasses",
            "location": 223,
            "return": [],
            "arguments": {
                "plugins": []
            }
        },
        "guess_lexer_for_filename": {
            "name": "guess_lexer_for_filename",
            "location": 234,
            "return": [],
            "arguments": {
                "_fn": [],
                "_text": []
            }
        },
        "guess_lexer": {
            "name": "guess_lexer",
            "location": 285,
            "return": [],
            "arguments": {
                "_text": []
            }
        },
        "find_lexer_class_for_filename.get_rating": {
            "name": "get_rating",
            "location": 175,
            "return": [],
            "arguments": {
                "info": []
            }
        },
        "guess_lexer_for_filename.type_sort": {
            "name": "type_sort",
            "location": 273,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "_automodule.__getattr__": {
            "name": "__getattr__",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pygments/styles/__init__.py": {
        "get_style_by_name": {
            "name": "get_style_by_name",
            "location": 68,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_all_styles": {
            "name": "get_all_styles",
            "location": 92,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/actions.py": {
        "match_only_at_col": {
            "name": "match_only_at_col",
            "location": 33,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "replace_with": {
            "name": "replace_with",
            "location": 46,
            "return": [],
            "arguments": {
                "repl_str": []
            }
        },
        "remove_quotes": {
            "name": "remove_quotes",
            "location": 63,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "with_attribute": {
            "name": "with_attribute",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "with_class": {
            "name": "with_class",
            "location": 162,
            "return": [],
            "arguments": {
                "classname": [],
                "namespace": []
            }
        },
        "OnlyOnce.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "method_call": []
            }
        },
        "OnlyOnce.__call__": {
            "name": "__call__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "l": [],
                "t": []
            }
        },
        "OnlyOnce.reset": {
            "name": "reset",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "match_only_at_col.verify_col": {
            "name": "verify_col",
            "location": 39,
            "return": [],
            "arguments": {
                "strg": [],
                "locn": [],
                "toks": []
            }
        },
        "with_attribute.pa": {
            "name": "pa",
            "location": 143,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/common.py": {
        "pyparsing_common.convert_to_date": {
            "name": "convert_to_date",
            "location": 253,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.convert_to_datetime": {
            "name": "convert_to_datetime",
            "location": 280,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.strip_html_tags": {
            "name": "strip_html_tags",
            "location": 322,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        },
        "pyparsing_common.convert_to_date.cvt_fn": {
            "name": "cvt_fn",
            "location": 271,
            "return": [],
            "arguments": {
                "ss": [],
                "ll": [],
                "tt": []
            }
        },
        "pyparsing_common.convert_to_datetime.cvt_fn": {
            "name": "cvt_fn",
            "location": 298,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/core.py": {
        "enable_diag": {
            "name": "enable_diag",
            "location": 167,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "disable_diag": {
            "name": "disable_diag",
            "location": 174,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "_should_enable_warnings": {
            "name": "_should_enable_warnings",
            "location": 192,
            "return": [],
            "arguments": {
                "cmd_line_warn_options": [],
                "warn_env_var": []
            }
        },
        "_trim_arity": {
            "name": "_trim_arity",
            "location": 262,
            "return": [],
            "arguments": {
                "func": [],
                "max_limit": []
            }
        },
        "condition_as_parse_action": {
            "name": "condition_as_parse_action",
            "location": 322,
            "return": [],
            "arguments": {
                "fn": [],
                "message": [],
                "fatal": []
            }
        },
        "_default_start_debug_action": {
            "name": "_default_start_debug_action",
            "location": 350,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "cache_hit": []
            }
        },
        "_default_success_debug_action": {
            "name": "_default_success_debug_action",
            "location": 369,
            "return": [],
            "arguments": {
                "instring": [],
                "startloc": [],
                "endloc": [],
                "expr": [],
                "toks": [],
                "cache_hit": []
            }
        },
        "_default_exception_debug_action": {
            "name": "_default_exception_debug_action",
            "location": 381,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "exc": [],
                "cache_hit": []
            }
        },
        "null_debug_action": {
            "name": "null_debug_action",
            "location": 396,
            "return": [],
            "arguments": {}
        },
        "trace_parse_action": {
            "name": "trace_parse_action",
            "location": 5609,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "srange": {
            "name": "srange",
            "location": 5684,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "token_map": {
            "name": "token_map",
            "location": 5721,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "autoname_elements": {
            "name": "autoname_elements",
            "location": 5767,
            "return": [],
            "arguments": {}
        },
        "__diag__.enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_trim_arity.extract_tb": {
            "name": "extract_tb",
            "location": 272,
            "return": [],
            "arguments": {
                "tb": [],
                "limit": []
            }
        },
        "_trim_arity.wrapper": {
            "name": "wrapper",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "condition_as_parse_action.pa": {
            "name": "pa",
            "location": 343,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "ParserElement.set_default_whitespace_chars": {
            "name": "set_default_whitespace_chars",
            "location": 408,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "ParserElement.inline_literals_using": {
            "name": "inline_literals_using",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ParserElement.__init__": {
            "name": "__init__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "savelist": []
            }
        },
        "ParserElement.suppress_warning": {
            "name": "suppress_warning",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "warning_type": []
            }
        },
        "ParserElement.copy": {
            "name": "copy",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_results_name": {
            "name": "set_results_name",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "ParserElement._setResultsName": {
            "name": "_setResultsName",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "ParserElement.set_break": {
            "name": "set_break",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "break_flag": []
            }
        },
        "ParserElement.set_parse_action": {
            "name": "set_parse_action",
            "location": 595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_parse_action": {
            "name": "add_parse_action",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_condition": {
            "name": "add_condition",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_fail_action": {
            "name": "set_fail_action",
            "location": 728,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "ParserElement._skipIgnorables": {
            "name": "_skipIgnorables",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.preParse": {
            "name": "preParse",
            "location": 757,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.parseImpl": {
            "name": "parseImpl",
            "location": 769,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParserElement.postParse": {
            "name": "postParse",
            "location": 772,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "ParserElement._parseNoCache": {
            "name": "_parseNoCache",
            "location": 776,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.try_parse": {
            "name": "try_parse",
            "location": 878,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "raise_fatal": []
            }
        },
        "ParserElement.can_parse_next": {
            "name": "can_parse_next",
            "location": 886,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement._parseCache": {
            "name": "_parseCache",
            "location": 909,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.reset_cache": {
            "name": "reset_cache",
            "location": 960,
            "return": [],
            "arguments": {}
        },
        "ParserElement.disable_memoization": {
            "name": "disable_memoization",
            "location": 971,
            "return": [],
            "arguments": {}
        },
        "ParserElement.enable_left_recursion": {
            "name": "enable_left_recursion",
            "location": 985,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.enable_packrat": {
            "name": "enable_packrat",
            "location": 1033,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.parse_string": {
            "name": "parse_string",
            "location": 1076,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "parse_all": []
            }
        },
        "ParserElement.scan_string": {
            "name": "scan_string",
            "location": 1145,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": [],
                "overlap": []
            }
        },
        "ParserElement.transform_string": {
            "name": "transform_string",
            "location": 1234,
            "return": [],
            "arguments": {
                "self": [],
                "instring": []
            }
        },
        "ParserElement.search_string": {
            "name": "search_string",
            "location": 1280,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": []
            }
        },
        "ParserElement.split": {
            "name": "split",
            "location": 1320,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "maxsplit": [],
                "include_separators": []
            }
        },
        "ParserElement.__add__": {
            "name": "__add__",
            "location": 1352,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__radd__": {
            "name": "__radd__",
            "location": 1392,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__sub__": {
            "name": "__sub__",
            "location": 1409,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rsub__": {
            "name": "__rsub__",
            "location": 1423,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__mul__": {
            "name": "__mul__",
            "location": 1437,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rmul__": {
            "name": "__rmul__",
            "location": 1523,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__or__": {
            "name": "__or__",
            "location": 1526,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__ror__": {
            "name": "__ror__",
            "location": 1543,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__xor__": {
            "name": "__xor__",
            "location": 1557,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rxor__": {
            "name": "__rxor__",
            "location": 1571,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__and__": {
            "name": "__and__",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rand__": {
            "name": "__rand__",
            "location": 1599,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__invert__": {
            "name": "__invert__",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__getitem__": {
            "name": "__getitem__",
            "location": 1623,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ParserElement.__call__": {
            "name": "__call__",
            "location": 1663,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.suppress": {
            "name": "suppress",
            "location": 1683,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 1690,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 1700,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.set_whitespace_chars": {
            "name": "set_whitespace_chars",
            "location": 1711,
            "return": [],
            "arguments": {
                "self": [],
                "chars": [],
                "copy_defaults": []
            }
        },
        "ParserElement.parse_with_tabs": {
            "name": "parse_with_tabs",
            "location": 1722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore": {
            "name": "ignore",
            "location": 1731,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.set_debug_actions": {
            "name": "set_debug_actions",
            "location": 1759,
            "return": [],
            "arguments": {
                "self": [],
                "start_action": [],
                "success_action": [],
                "exception_action": []
            }
        },
        "ParserElement.set_debug": {
            "name": "set_debug",
            "location": 1785,
            "return": [],
            "arguments": {
                "self": [],
                "flag": []
            }
        },
        "ParserElement.default_name": {
            "name": "default_name",
            "location": 1833,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 1839,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_name": {
            "name": "set_name",
            "location": 1844,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.name": {
            "name": "name",
            "location": 1858,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__str__": {
            "name": "__str__",
            "location": 1862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__repr__": {
            "name": "__repr__",
            "location": 1865,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.streamline": {
            "name": "streamline",
            "location": 1868,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.recurse": {
            "name": "recurse",
            "location": 1873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._checkRecursion": {
            "name": "_checkRecursion",
            "location": 1876,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParserElement.validate": {
            "name": "validate",
            "location": 1881,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParserElement.parse_file": {
            "name": "parse_file",
            "location": 1887,
            "return": [],
            "arguments": {
                "self": [],
                "file_or_filename": [],
                "encoding": [],
                "parse_all": []
            }
        },
        "ParserElement.__eq__": {
            "name": "__eq__",
            "location": 1915,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__hash__": {
            "name": "__hash__",
            "location": 1924,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.matches": {
            "name": "matches",
            "location": 1927,
            "return": [],
            "arguments": {
                "self": [],
                "test_string": [],
                "parse_all": []
            }
        },
        "ParserElement.run_tests": {
            "name": "run_tests",
            "location": 1950,
            "return": [],
            "arguments": {
                "self": [],
                "tests": [],
                "parse_all": [],
                "comment": [],
                "full_dump": [],
                "print_results": [],
                "failure_tests": [],
                "post_parse": [],
                "file": [],
                "with_line_numbers": []
            }
        },
        "ParserElement.create_diagram": {
            "name": "create_diagram",
            "location": 2145,
            "return": [],
            "arguments": {
                "self": [],
                "output_html": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_PendingSkip.__init__": {
            "name": "__init__",
            "location": 2223,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "must_skip": []
            }
        },
        "_PendingSkip._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.__add__": {
            "name": "__add__",
            "location": 2231,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_PendingSkip.__repr__": {
            "name": "__repr__",
            "location": 2252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.parseImpl": {
            "name": "parseImpl",
            "location": 2255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token.__init__": {
            "name": "__init__",
            "location": 2266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Empty.__init__": {
            "name": "__init__",
            "location": 2278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.__init__": {
            "name": "__init__",
            "location": 2289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2295,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Literal.__init__": {
            "name": "__init__",
            "location": 2315,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "Literal._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Literal.parseImpl": {
            "name": "parseImpl",
            "location": 2336,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_SingleCharLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2345,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.__init__": {
            "name": "__init__",
            "location": 2383,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": [],
                "caseless": []
            }
        },
        "Keyword._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Keyword.parseImpl": {
            "name": "parseImpl",
            "location": 2415,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.set_default_keyword_chars": {
            "name": "set_default_keyword_chars",
            "location": 2463,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "CaselessLiteral.__init__": {
            "name": "__init__",
            "location": 2486,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "CaselessLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2493,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CaselessKeyword.__init__": {
            "name": "__init__",
            "location": 2511,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": []
            }
        },
        "CloseMatch.__init__": {
            "name": "__init__",
            "location": 2559,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "max_mismatches": []
            }
        },
        "CloseMatch._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2578,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CloseMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2581,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Word.__init__": {
            "name": "__init__",
            "location": 2678,
            "return": [],
            "arguments": {
                "self": [],
                "init_chars": [],
                "body_chars": [],
                "min": [],
                "max": [],
                "exact": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Word._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Word.parseImpl": {
            "name": "parseImpl",
            "location": 2820,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_WordRegex.parseImpl": {
            "name": "parseImpl",
            "location": 2854,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Char.__init__": {
            "name": "__init__",
            "location": 2869,
            "return": [],
            "arguments": {
                "self": [],
                "charset": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Regex.__init__": {
            "name": "__init__",
            "location": 2915,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "flags": [],
                "as_group_list": [],
                "as_match": []
            }
        },
        "Regex.re": {
            "name": "re",
            "location": 2962,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.re_match": {
            "name": "re_match",
            "location": 2974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.mayReturnEmpty": {
            "name": "mayReturnEmpty",
            "location": 2978,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2981,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.parseImpl": {
            "name": "parseImpl",
            "location": 2984,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsGroupList": {
            "name": "parseImplAsGroupList",
            "location": 2997,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsMatch": {
            "name": "parseImplAsMatch",
            "location": 3006,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.sub": {
            "name": "sub",
            "location": 3015,
            "return": [],
            "arguments": {
                "self": [],
                "repl": []
            }
        },
        "QuotedString.__init__": {
            "name": "__init__",
            "location": 3086,
            "return": [],
            "arguments": {
                "self": [],
                "quote_char": [],
                "esc_char": [],
                "esc_quote": [],
                "multiline": [],
                "unquote_results": [],
                "end_quote_char": [],
                "convert_whitespace_escapes": []
            }
        },
        "QuotedString._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuotedString.parseImpl": {
            "name": "parseImpl",
            "location": 3207,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CharsNotIn.__init__": {
            "name": "__init__",
            "location": 3262,
            "return": [],
            "arguments": {
                "self": [],
                "not_chars": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "CharsNotIn._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharsNotIn.parseImpl": {
            "name": "parseImpl",
            "location": 3304,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "White.__init__": {
            "name": "__init__",
            "location": 3357,
            "return": [],
            "arguments": {
                "self": [],
                "ws": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "White._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3379,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "White.parseImpl": {
            "name": "parseImpl",
            "location": 3382,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PositionToken.__init__": {
            "name": "__init__",
            "location": 3399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoToColumn.__init__": {
            "name": "__init__",
            "location": 3410,
            "return": [],
            "arguments": {
                "self": [],
                "colno": []
            }
        },
        "GoToColumn.preParse": {
            "name": "preParse",
            "location": 3414,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "GoToColumn.parseImpl": {
            "name": "parseImpl",
            "location": 3427,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineStart.__init__": {
            "name": "__init__",
            "location": 3459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineStart.preParse": {
            "name": "preParse",
            "location": 3467,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "LineStart.parseImpl": {
            "name": "parseImpl",
            "location": 3477,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineEnd.__init__": {
            "name": "__init__",
            "location": 3488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3494,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringStart.__init__": {
            "name": "__init__",
            "location": 3511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringStart.parseImpl": {
            "name": "parseImpl",
            "location": 3515,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringEnd.__init__": {
            "name": "__init__",
            "location": 3528,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3532,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordStart.__init__": {
            "name": "__init__",
            "location": 3553,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordStart.parseImpl": {
            "name": "parseImpl",
            "location": 3559,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordEnd.__init__": {
            "name": "__init__",
            "location": 3578,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3585,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseExpression.__init__": {
            "name": "__init__",
            "location": 3601,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "ParseExpression.recurse": {
            "name": "recurse",
            "location": 3627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.append": {
            "name": "append",
            "location": 3630,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 3635,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 3648,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore": {
            "name": "ignore",
            "location": 3660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3672,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.streamline": {
            "name": "streamline",
            "location": 3675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.validate": {
            "name": "validate",
            "location": 3716,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseExpression.copy": {
            "name": "copy",
            "location": 3722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression._setResultsName": {
            "name": "_setResultsName",
            "location": 3727,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "And.__init__": {
            "name": "__init__",
            "location": 3783,
            "return": [],
            "arguments": {
                "self": [],
                "exprs_arg": [],
                "savelist": []
            }
        },
        "And.streamline": {
            "name": "streamline",
            "location": 3816,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And.parseImpl": {
            "name": "parseImpl",
            "location": 3861,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "And.__iadd__": {
            "name": "__iadd__",
            "location": 3891,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "And._checkRecursion": {
            "name": "_checkRecursion",
            "location": 3896,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "And._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.__init__": {
            "name": "__init__",
            "location": 3929,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Or.streamline": {
            "name": "streamline",
            "location": 3937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.parseImpl": {
            "name": "parseImpl",
            "location": 3949,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Or.__ixor__": {
            "name": "__ixor__",
            "location": 4031,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Or._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4036,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or._setResultsName": {
            "name": "_setResultsName",
            "location": 4039,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "MatchFirst.__init__": {
            "name": "__init__",
            "location": 4084,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "MatchFirst.streamline": {
            "name": "streamline",
            "location": 4092,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst.parseImpl": {
            "name": "parseImpl",
            "location": 4108,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "MatchFirst.__ior__": {
            "name": "__ior__",
            "location": 4142,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MatchFirst._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst._setResultsName": {
            "name": "_setResultsName",
            "location": 4150,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "Each.__init__": {
            "name": "__init__",
            "location": 4235,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Each.streamline": {
            "name": "streamline",
            "location": 4245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Each.parseImpl": {
            "name": "parseImpl",
            "location": 4253,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Each._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.__init__": {
            "name": "__init__",
            "location": 4349,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "ParseElementEnhance.recurse": {
            "name": "recurse",
            "location": 4370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.parseImpl": {
            "name": "parseImpl",
            "location": 4373,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseElementEnhance.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 4379,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 4388,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore": {
            "name": "ignore",
            "location": 4397,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseElementEnhance.streamline": {
            "name": "streamline",
            "location": 4409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance._checkRecursion": {
            "name": "_checkRecursion",
            "location": 4415,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParseElementEnhance.validate": {
            "name": "validate",
            "location": 4422,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseElementEnhance._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock.__init__": {
            "name": "__init__",
            "location": 4455,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "IndentedBlock.parseImpl": {
            "name": "parseImpl",
            "location": 4465,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtStringStart.__init__": {
            "name": "__init__",
            "location": 4512,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtStringStart.parseImpl": {
            "name": "parseImpl",
            "location": 4516,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtLineStart.__init__": {
            "name": "__init__",
            "location": 4545,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtLineStart.parseImpl": {
            "name": "parseImpl",
            "location": 4549,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "FollowedBy.__init__": {
            "name": "__init__",
            "location": 4578,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "FollowedBy.parseImpl": {
            "name": "parseImpl",
            "location": 4582,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PrecededBy.__init__": {
            "name": "__init__",
            "location": 4621,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "retreat": []
            }
        },
        "PrecededBy.parseImpl": {
            "name": "parseImpl",
            "location": 4646,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Located.parseImpl": {
            "name": "parseImpl",
            "location": 4700,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny.__init__": {
            "name": "__init__",
            "location": 4739,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "NotAny.parseImpl": {
            "name": "parseImpl",
            "location": 4748,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_MultipleMatch.__init__": {
            "name": "__init__",
            "location": 4758,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "_MultipleMatch.stopOn": {
            "name": "stopOn",
            "location": 4773,
            "return": [],
            "arguments": {
                "self": [],
                "ender": []
            }
        },
        "_MultipleMatch.parseImpl": {
            "name": "parseImpl",
            "location": 4779,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_MultipleMatch._setResultsName": {
            "name": "_setResultsName",
            "location": 4808,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "OneOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZeroOrMore.__init__": {
            "name": "__init__",
            "location": 4879,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "ZeroOrMore.parseImpl": {
            "name": "parseImpl",
            "location": 4889,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ZeroOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4895,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__bool__": {
            "name": "__bool__",
            "location": 4900,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__str__": {
            "name": "__str__",
            "location": 4903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Opt.__init__": {
            "name": "__init__",
            "location": 4948,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "default": []
            }
        },
        "Opt.parseImpl": {
            "name": "parseImpl",
            "location": 4956,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Opt._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4972,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SkipTo.__init__": {
            "name": "__init__",
            "location": 5044,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "include": [],
                "ignore": [],
                "fail_on": []
            }
        },
        "SkipTo.parseImpl": {
            "name": "parseImpl",
            "location": 5066,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.__init__": {
            "name": "__init__",
            "location": 5146,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__lshift__": {
            "name": "__lshift__",
            "location": 5151,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__ilshift__": {
            "name": "__ilshift__",
            "location": 5168,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__or__": {
            "name": "__or__",
            "location": 5171,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__del__": {
            "name": "__del__",
            "location": 5186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.parseImpl": {
            "name": "parseImpl",
            "location": 5200,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 5295,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 5299,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.streamline": {
            "name": "streamline",
            "location": 5303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.validate": {
            "name": "validate",
            "location": 5310,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "Forward._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 5320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.copy": {
            "name": "copy",
            "location": 5334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward._setResultsName": {
            "name": "_setResultsName",
            "location": 5342,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "TokenConverter.__init__": {
            "name": "__init__",
            "location": 5368,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Combine.__init__": {
            "name": "__init__",
            "location": 5392,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "join_string": [],
                "adjacent": []
            }
        },
        "Combine.ignore": {
            "name": "ignore",
            "location": 5410,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Combine.postParse": {
            "name": "postParse",
            "location": 5417,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Group.__init__": {
            "name": "__init__",
            "location": 5451,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "aslist": []
            }
        },
        "Group.postParse": {
            "name": "postParse",
            "location": 5456,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Dict.__init__": {
            "name": "__init__",
            "location": 5509,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "asdict": []
            }
        },
        "Dict.postParse": {
            "name": "postParse",
            "location": 5514,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.__init__": {
            "name": "__init__",
            "location": 5585,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Suppress.__add__": {
            "name": "__add__",
            "location": 5590,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.__sub__": {
            "name": "__sub__",
            "location": 5596,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.postParse": {
            "name": "postParse",
            "location": 5602,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.suppress": {
            "name": "suppress",
            "location": 5605,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "trace_parse_action.z": {
            "name": "z",
            "location": 5636,
            "return": [],
            "arguments": {}
        },
        "token_map.pa": {
            "name": "pa",
            "location": 5758,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "owner": []
            }
        },
        "Word._generateDefaultName.charsAsStr": {
            "name": "charsAsStr",
            "location": 2792,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "And._ErrorStop.__init__": {
            "name": "__init__",
            "location": 3776,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And._ErrorStop._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3780,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock._Indent.__init__": {
            "name": "__init__",
            "location": 4444,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "IndentedBlock._IndentGreater.__init__": {
            "name": "__init__",
            "location": 4450,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "ParserElement.set_break.breaker": {
            "name": "breaker",
            "location": 581,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.__mul__.makeOptionalList": {
            "name": "makeOptionalList",
            "location": 1503,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "_PendingSkip.__add__.must_skip": {
            "name": "must_skip",
            "location": 2235,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "_PendingSkip.__add__.show_skip": {
            "name": "show_skip",
            "location": 2240,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "Regex.sub.pa": {
            "name": "pa",
            "location": 3039,
            "return": [],
            "arguments": {
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/exceptions.py": {
        "ParseBaseException.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "pstr": [],
                "loc": [],
                "msg": [],
                "elem": []
            }
        },
        "ParseBaseException.explain_exception": {
            "name": "explain_exception",
            "location": 42,
            "return": [],
            "arguments": {
                "exc": [],
                "depth": []
            }
        },
        "ParseBaseException._from_exception": {
            "name": "_from_exception",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "pe": []
            }
        },
        "ParseBaseException.line": {
            "name": "line",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.lineno": {
            "name": "lineno",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.col": {
            "name": "col",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.column": {
            "name": "column",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__str__": {
            "name": "__str__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__repr__": {
            "name": "__repr__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.mark_input_line": {
            "name": "mark_input_line",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "marker_string": []
            }
        },
        "ParseBaseException.explain": {
            "name": "explain",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "depth": []
            }
        },
        "RecursiveGrammarException.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "RecursiveGrammarException.__str__": {
            "name": "__str__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/helpers.py": {
        "delimited_list": {
            "name": "delimited_list",
            "location": 14,
            "return": [],
            "arguments": {
                "expr": [],
                "delim": [],
                "combine": [],
                "min": [],
                "max": []
            }
        },
        "counted_array": {
            "name": "counted_array",
            "location": 71,
            "return": [],
            "arguments": {
                "expr": [],
                "int_expr": []
            }
        },
        "match_previous_literal": {
            "name": "match_previous_literal",
            "location": 131,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "match_previous_expr": {
            "name": "match_previous_expr",
            "location": 164,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "one_of": {
            "name": "one_of",
            "location": 200,
            "return": [],
            "arguments": {
                "strs": [],
                "caseless": [],
                "use_regex": [],
                "as_keyword": []
            }
        },
        "dict_of": {
            "name": "dict_of",
            "location": 327,
            "return": [],
            "arguments": {
                "key": [],
                "value": []
            }
        },
        "original_text_for": {
            "name": "original_text_for",
            "location": 367,
            "return": [],
            "arguments": {
                "expr": [],
                "as_string": []
            }
        },
        "ungroup": {
            "name": "ungroup",
            "location": 420,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "locatedExpr": {
            "name": "locatedExpr",
            "location": 427,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "nested_expr": {
            "name": "nested_expr",
            "location": 462,
            "return": [],
            "arguments": {
                "opener": [],
                "closer": [],
                "content": [],
                "ignore_expr": []
            }
        },
        "_makeTags": {
            "name": "_makeTags",
            "location": 590,
            "return": [],
            "arguments": {
                "tagStr": [],
                "xml": [],
                "suppress_LT": [],
                "suppress_GT": []
            }
        },
        "make_html_tags": {
            "name": "make_html_tags",
            "location": 648,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "make_xml_tags": {
            "name": "make_xml_tags",
            "location": 675,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "replace_html_entity": {
            "name": "replace_html_entity",
            "location": 698,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "infix_notation": {
            "name": "infix_notation",
            "location": 726,
            "return": [],
            "arguments": {
                "base_expr": [],
                "op_list": [],
                "lpar": [],
                "rpar": []
            }
        },
        "indentedBlock": {
            "name": "indentedBlock",
            "location": 891,
            "return": [],
            "arguments": {
                "blockStatementExpr": [],
                "indentStack": [],
                "indent": [],
                "backup_stacks": []
            }
        },
        "counted_array.count_field_parse_action": {
            "name": "count_field_parse_action",
            "location": 115,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_literal.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 148,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 183,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.reset_stack": {
            "name": "reset_stack",
            "location": 979,
            "return": [],
            "arguments": {}
        },
        "indentedBlock.checkPeerIndent": {
            "name": "checkPeerIndent",
            "location": 982,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkSubIndent": {
            "name": "checkSubIndent",
            "location": 991,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkUnindent": {
            "name": "checkUnindent",
            "location": 998,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater.must_match_these_tokens": {
            "name": "must_match_these_tokens",
            "location": 186,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "original_text_for.extractText": {
            "name": "extractText",
            "location": 411,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "infix_notation._FB.parseImpl": {
            "name": "parseImpl",
            "location": 808,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/results.py": {
        "_ParseResultsWithOffset.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": []
            }
        },
        "_ParseResultsWithOffset.__getitem__": {
            "name": "__getitem__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "_ParseResultsWithOffset.__getstate__": {
            "name": "__getstate__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ParseResultsWithOffset.__setstate__": {
            "name": "__setstate__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__new__": {
            "name": "__new__",
            "location": 136,
            "return": [],
            "arguments": {
                "cls": [],
                "toklist": [],
                "name": []
            }
        },
        "ParseResults.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "toklist": [],
                "name": [],
                "asList": [],
                "modal": [],
                "isinstance": []
            }
        },
        "ParseResults.__getitem__": {
            "name": "__getitem__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__setitem__": {
            "name": "__setitem__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": [],
                "isinstance": []
            }
        },
        "ParseResults.__delitem__": {
            "name": "__delitem__",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__contains__": {
            "name": "__contains__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "ParseResults.__len__": {
            "name": "__len__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__bool__": {
            "name": "__bool__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__iter__": {
            "name": "__iter__",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__reversed__": {
            "name": "__reversed__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.keys": {
            "name": "keys",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.values": {
            "name": "values",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.items": {
            "name": "items",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.haskeys": {
            "name": "haskeys",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.pop": {
            "name": "pop",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get": {
            "name": "get",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default_value": []
            }
        },
        "ParseResults.insert": {
            "name": "insert",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "ins_string": []
            }
        },
        "ParseResults.append": {
            "name": "append",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ParseResults.extend": {
            "name": "extend",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "itemseq": []
            }
        },
        "ParseResults.clear": {
            "name": "clear",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getattr__": {
            "name": "__getattr__",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParseResults.__add__": {
            "name": "__add__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__iadd__": {
            "name": "__iadd__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__radd__": {
            "name": "__radd__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__repr__": {
            "name": "__repr__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__str__": {
            "name": "__str__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults._asStringList": {
            "name": "_asStringList",
            "location": 473,
            "return": [],
            "arguments": {
                "self": [],
                "sep": []
            }
        },
        "ParseResults.as_list": {
            "name": "as_list",
            "location": 484,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.as_dict": {
            "name": "as_dict",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.copy": {
            "name": "copy",
            "location": 533,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get_name": {
            "name": "get_name",
            "location": 544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.dump": {
            "name": "dump",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "indent": [],
                "full": [],
                "include_list": [],
                "_depth": []
            }
        },
        "ParseResults.pprint": {
            "name": "pprint",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getstate__": {
            "name": "__getstate__",
            "location": 703,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__setstate__": {
            "name": "__setstate__",
            "location": 714,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "ParseResults.__getnewargs__": {
            "name": "__getnewargs__",
            "location": 722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__dir__": {
            "name": "__dir__",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.from_dict": {
            "name": "from_dict",
            "location": 729,
            "return": [],
            "arguments": {
                "cls": [],
                "other": [],
                "name": []
            }
        },
        "ParseResults.List.__new__": {
            "name": "__new__",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "contained": []
            }
        },
        "ParseResults.as_dict.to_item": {
            "name": "to_item",
            "location": 525,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.from_dict.is_iterable": {
            "name": "is_iterable",
            "location": 736,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.get_name.find_in_parent": {
            "name": "find_in_parent",
            "location": 574,
            "return": [],
            "arguments": {
                "sub": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/testing.py": {
        "pyparsing_test.with_line_numbers": {
            "name": "with_line_numbers",
            "location": 238,
            "return": [],
            "arguments": {
                "s": [],
                "start_line": [],
                "end_line": [],
                "expand_tabs": [],
                "eol_mark": [],
                "mark_spaces": [],
                "mark_control": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.save": {
            "name": "save",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.restore": {
            "name": "restore",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.copy": {
            "name": "copy",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__enter__": {
            "name": "__enter__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__exit__": {
            "name": "__exit__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseResultsEquals": {
            "name": "assertParseResultsEquals",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "expected_list": [],
                "expected_dict": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckList": {
            "name": "assertParseAndCheckList",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_list": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckDict": {
            "name": "assertParseAndCheckDict",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_dict": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRunTestResults": {
            "name": "assertRunTestResults",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "run_tests_report": [],
                "expected_parse_results": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRaisesParseException": {
            "name": "assertRaisesParseException",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/unicode.py": {
        "_lazyclassproperty.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "_lazyclassproperty.__get__": {
            "name": "__get__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "cls": []
            }
        },
        "unicode_set._chars_for_ranges": {
            "name": "_chars_for_ranges",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.printables": {
            "name": "printables",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphas": {
            "name": "alphas",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.nums": {
            "name": "nums",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphanums": {
            "name": "alphanums",
            "location": 81,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identchars": {
            "name": "identchars",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identbodychars": {
            "name": "identbodychars",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/util.py": {
        "col": {
            "name": "col",
            "location": 41,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "lineno": {
            "name": "lineno",
            "location": 58,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "line": {
            "name": "line",
            "location": 72,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "_escape_regex_range_chars": {
            "name": "_escape_regex_range_chars",
            "location": 173,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_collapse_string_to_ranges": {
            "name": "_collapse_string_to_ranges",
            "location": 182,
            "return": [],
            "arguments": {
                "s": [],
                "re_escape": []
            }
        },
        "_flatten": {
            "name": "_flatten",
            "location": 228,
            "return": [],
            "arguments": {
                "ll": []
            }
        },
        "__config_flags._set": {
            "name": "_set",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [],
                "dname": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FifoCache.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "LRUMemo.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "capacity": []
            }
        },
        "LRUMemo.__getitem__": {
            "name": "__getitem__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.__setitem__": {
            "name": "__setitem__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "LRUMemo.__delitem__": {
            "name": "__delitem__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.clear": {
            "name": "clear",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnboundedMemo.__delitem__": {
            "name": "__delitem__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "_collapse_string_to_ranges.is_consecutive": {
            "name": "is_consecutive",
            "location": 185,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.escape_re_range_char": {
            "name": "escape_re_range_char",
            "location": 196,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.no_escape_re_range_char": {
            "name": "no_escape_re_range_char",
            "location": 199,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_UnboundedCache.__init__.get": {
            "name": "get",
            "location": 87,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_UnboundedCache.__init__.set_": {
            "name": "set_",
            "location": 90,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__.clear": {
            "name": "clear",
            "location": 93,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "_FifoCache.__init__.get": {
            "name": "get",
            "location": 108,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_FifoCache.__init__.set_": {
            "name": "set_",
            "location": 111,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_FifoCache.__init__.clear": {
            "name": "clear",
            "location": 116,
            "return": [],
            "arguments": {
                "_": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/__init__.py": {
        "version_info.__version__": {
            "name": "__version__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__str__": {
            "name": "__str__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__repr__": {
            "name": "__repr__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/pyparsing/diagram/__init__.py": {
        "railroad_to_html": {
            "name": "railroad_to_html",
            "location": 130,
            "return": [],
            "arguments": {
                "diagrams": []
            }
        },
        "resolve_partial": {
            "name": "resolve_partial",
            "location": 149,
            "return": [],
            "arguments": {
                "partial": []
            }
        },
        "to_railroad": {
            "name": "to_railroad",
            "location": 165,
            "return": [],
            "arguments": {
                "element": [],
                "diagram_kwargs": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_should_vertical": {
            "name": "_should_vertical",
            "location": 223,
            "return": [],
            "arguments": {
                "specification": [],
                "exprs": []
            }
        },
        "_worth_extracting": {
            "name": "_worth_extracting",
            "location": 375,
            "return": [],
            "arguments": {
                "element": []
            }
        },
        "_apply_diagram_item_enhancements": {
            "name": "_apply_diagram_item_enhancements",
            "location": 384,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_visible_exprs": {
            "name": "_visible_exprs",
            "location": 428,
            "return": [],
            "arguments": {
                "exprs": []
            }
        },
        "_to_diagram_element": {
            "name": "_to_diagram_element",
            "location": 442,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "EachItem.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedItem.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "item": []
            }
        },
        "EditablePartial.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "args": [],
                "kwargs": []
            }
        },
        "EditablePartial.from_call": {
            "name": "from_call",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": [],
                "func": []
            }
        },
        "EditablePartial.name": {
            "name": "name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditablePartial.__call__": {
            "name": "__call__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementState.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "element": [],
                "converted": [],
                "parent": [],
                "number": [],
                "name": [],
                "parent_index": []
            }
        },
        "ElementState.mark_for_extraction": {
            "name": "mark_for_extraction",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": [],
                "state": [],
                "name": [],
                "force": []
            }
        },
        "ConverterState.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "diagram_kwargs": []
            }
        },
        "ConverterState.__setitem__": {
            "name": "__setitem__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "ConverterState.__getitem__": {
            "name": "__getitem__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__delitem__": {
            "name": "__delitem__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__contains__": {
            "name": "__contains__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.generate_unnamed": {
            "name": "generate_unnamed",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.generate_index": {
            "name": "generate_index",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.extract_into_diagram": {
            "name": "extract_into_diagram",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": []
            }
        },
        "_apply_diagram_item_enhancements._inner": {
            "name": "_inner",
            "location": 391,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/adapters.py": {
        "BaseAdapter.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseAdapter.send": {
            "name": "send",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "stream": [],
                "timeout": [],
                "verify": [],
                "cert": [],
                "proxies": []
            }
        },
        "BaseAdapter.close": {
            "name": "close",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPAdapter.__init__": {
            "name": "__init__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "pool_connections": [],
                "pool_maxsize": [],
                "max_retries": [],
                "pool_block": []
            }
        },
        "HTTPAdapter.__getstate__": {
            "name": "__getstate__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPAdapter.__setstate__": {
            "name": "__setstate__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "HTTPAdapter.init_poolmanager": {
            "name": "init_poolmanager",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "connections": [],
                "maxsize": [],
                "block": []
            }
        },
        "HTTPAdapter.proxy_manager_for": {
            "name": "proxy_manager_for",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "proxy": []
            }
        },
        "HTTPAdapter.cert_verify": {
            "name": "cert_verify",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "conn": [],
                "url": [],
                "verify": [],
                "cert": []
            }
        },
        "HTTPAdapter.build_response": {
            "name": "build_response",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "HTTPAdapter.get_connection": {
            "name": "get_connection",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "proxies": []
            }
        },
        "HTTPAdapter.close": {
            "name": "close",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPAdapter.request_url": {
            "name": "request_url",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "proxies": []
            }
        },
        "HTTPAdapter.add_headers": {
            "name": "add_headers",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HTTPAdapter.proxy_headers": {
            "name": "proxy_headers",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "proxy": []
            }
        },
        "HTTPAdapter.send": {
            "name": "send",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "stream": [],
                "timeout": [],
                "verify": [],
                "cert": [],
                "proxies": []
            }
        },
        "SOCKSProxyManager": {
            "name": "SOCKSProxyManager",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/api.py": {
        "request": {
            "name": "request",
            "location": 14,
            "return": [],
            "arguments": {
                "method": [],
                "url": []
            }
        },
        "get": {
            "name": "get",
            "location": 62,
            "return": [],
            "arguments": {
                "url": [],
                "params": []
            }
        },
        "options": {
            "name": "options",
            "location": 76,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "head": {
            "name": "head",
            "location": 88,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "post": {
            "name": "post",
            "location": 103,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "json": []
            }
        },
        "put": {
            "name": "put",
            "location": 118,
            "return": [],
            "arguments": {
                "url": [],
                "data": []
            }
        },
        "patch": {
            "name": "patch",
            "location": 133,
            "return": [],
            "arguments": {
                "url": [],
                "data": []
            }
        },
        "delete": {
            "name": "delete",
            "location": 148,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/auth.py": {
        "_basic_auth_str": {
            "name": "_basic_auth_str",
            "location": 25,
            "return": [],
            "arguments": {
                "username": [],
                "password": []
            }
        },
        "AuthBase.__call__": {
            "name": "__call__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPBasicAuth.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "HTTPBasicAuth.__eq__": {
            "name": "__eq__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPBasicAuth.__ne__": {
            "name": "__ne__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPBasicAuth.__call__": {
            "name": "__call__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPProxyAuth.__call__": {
            "name": "__call__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPDigestAuth.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "HTTPDigestAuth.init_per_thread_state": {
            "name": "init_per_thread_state",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPDigestAuth.build_digest_header": {
            "name": "build_digest_header",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "HTTPDigestAuth.handle_redirect": {
            "name": "handle_redirect",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPDigestAuth.handle_401": {
            "name": "handle_401",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPDigestAuth.__call__": {
            "name": "__call__",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "HTTPDigestAuth.__eq__": {
            "name": "__eq__",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPDigestAuth.__ne__": {
            "name": "__ne__",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPDigestAuth.build_digest_header.md5_utf8": {
            "name": "md5_utf8",
            "location": 145,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "HTTPDigestAuth.build_digest_header.sha_utf8": {
            "name": "sha_utf8",
            "location": 153,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "HTTPDigestAuth.build_digest_header.sha256_utf8": {
            "name": "sha256_utf8",
            "location": 161,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "HTTPDigestAuth.build_digest_header.sha512_utf8": {
            "name": "sha512_utf8",
            "location": 169,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/certs.py": {
        "where": {
            "name": "where",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/compat.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/cookies.py": {
        "extract_cookies_to_jar": {
            "name": "extract_cookies_to_jar",
            "location": 124,
            "return": [],
            "arguments": {
                "jar": [],
                "request": [],
                "response": []
            }
        },
        "get_cookie_header": {
            "name": "get_cookie_header",
            "location": 140,
            "return": [],
            "arguments": {
                "jar": [],
                "request": []
            }
        },
        "remove_cookie_by_name": {
            "name": "remove_cookie_by_name",
            "location": 151,
            "return": [],
            "arguments": {
                "cookiejar": [],
                "name": [],
                "domain": [],
                "path": []
            }
        },
        "_copy_cookie_jar": {
            "name": "_copy_cookie_jar",
            "location": 440,
            "return": [],
            "arguments": {
                "jar": []
            }
        },
        "create_cookie": {
            "name": "create_cookie",
            "location": 455,
            "return": [],
            "arguments": {
                "name": [],
                "value": []
            }
        },
        "morsel_to_cookie": {
            "name": "morsel_to_cookie",
            "location": 492,
            "return": [],
            "arguments": {
                "morsel": []
            }
        },
        "cookiejar_from_dict": {
            "name": "cookiejar_from_dict",
            "location": 521,
            "return": [],
            "arguments": {
                "cookie_dict": [],
                "cookiejar": [],
                "overwrite": []
            }
        },
        "merge_cookies": {
            "name": "merge_cookies",
            "location": 542,
            "return": [],
            "arguments": {
                "cookiejar": [],
                "cookies": []
            }
        },
        "MockRequest.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MockRequest.get_type": {
            "name": "get_type",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.get_host": {
            "name": "get_host",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.get_origin_req_host": {
            "name": "get_origin_req_host",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.get_full_url": {
            "name": "get_full_url",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.is_unverifiable": {
            "name": "is_unverifiable",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.has_header": {
            "name": "has_header",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "MockRequest.get_header": {
            "name": "get_header",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "MockRequest.add_header": {
            "name": "add_header",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "MockRequest.add_unredirected_header": {
            "name": "add_unredirected_header",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "MockRequest.get_new_headers": {
            "name": "get_new_headers",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.unverifiable": {
            "name": "unverifiable",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.origin_req_host": {
            "name": "origin_req_host",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockRequest.host": {
            "name": "host",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockResponse.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "MockResponse.info": {
            "name": "info",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockResponse.getheaders": {
            "name": "getheaders",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequestsCookieJar.get": {
            "name": "get",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": [],
                "domain": [],
                "path": []
            }
        },
        "RequestsCookieJar.set": {
            "name": "set",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "RequestsCookieJar.iterkeys": {
            "name": "iterkeys",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.keys": {
            "name": "keys",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.itervalues": {
            "name": "itervalues",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.values": {
            "name": "values",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.iteritems": {
            "name": "iteritems",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.items": {
            "name": "items",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.list_domains": {
            "name": "list_domains",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.list_paths": {
            "name": "list_paths",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.multiple_domains": {
            "name": "multiple_domains",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.get_dict": {
            "name": "get_dict",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "domain": [],
                "path": []
            }
        },
        "RequestsCookieJar.__contains__": {
            "name": "__contains__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequestsCookieJar.__getitem__": {
            "name": "__getitem__",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequestsCookieJar.__setitem__": {
            "name": "__setitem__",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "RequestsCookieJar.__delitem__": {
            "name": "__delitem__",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "RequestsCookieJar.set_cookie": {
            "name": "set_cookie",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "cookie": []
            }
        },
        "RequestsCookieJar.update": {
            "name": "update",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "RequestsCookieJar._find": {
            "name": "_find",
            "location": 366,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "domain": [],
                "path": []
            }
        },
        "RequestsCookieJar._find_no_duplicates": {
            "name": "_find_no_duplicates",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "domain": [],
                "path": []
            }
        },
        "RequestsCookieJar.__getstate__": {
            "name": "__getstate__",
            "location": 415,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.__setstate__": {
            "name": "__setstate__",
            "location": 422,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "RequestsCookieJar.copy": {
            "name": "copy",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsCookieJar.get_policy": {
            "name": "get_policy",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/exceptions.py": {
        "RequestException.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONDecodeError.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/help.py": {
        "_implementation": {
            "name": "_implementation",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "info": {
            "name": "info",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 125,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/hooks.py": {
        "default_hooks": {
            "name": "default_hooks",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "dispatch_hook": {
            "name": "dispatch_hook",
            "location": 22,
            "return": [],
            "arguments": {
                "key": [],
                "hooks": [],
                "hook_data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/models.py": {
        "RequestEncodingMixin.path_url": {
            "name": "path_url",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestEncodingMixin._encode_params": {
            "name": "_encode_params",
            "location": 107,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "RequestEncodingMixin._encode_files": {
            "name": "_encode_files",
            "location": 137,
            "return": [],
            "arguments": {
                "files": [],
                "data": []
            }
        },
        "RequestHooksMixin.register_hook": {
            "name": "register_hook",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "hook": []
            }
        },
        "RequestHooksMixin.deregister_hook": {
            "name": "deregister_hook",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "hook": []
            }
        },
        "Request.__init__": {
            "name": "__init__",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "headers": [],
                "files": [],
                "data": [],
                "params": [],
                "auth": [],
                "cookies": [],
                "hooks": [],
                "json": []
            }
        },
        "Request.__repr__": {
            "name": "__repr__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.prepare": {
            "name": "prepare",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PreparedRequest.__init__": {
            "name": "__init__",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PreparedRequest.prepare": {
            "name": "prepare",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "headers": [],
                "files": [],
                "data": [],
                "params": [],
                "auth": [],
                "cookies": [],
                "hooks": [],
                "json": []
            }
        },
        "PreparedRequest.__repr__": {
            "name": "__repr__",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PreparedRequest.copy": {
            "name": "copy",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PreparedRequest.prepare_method": {
            "name": "prepare_method",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "PreparedRequest._get_idna_encoded_host": {
            "name": "_get_idna_encoded_host",
            "location": 401,
            "return": [],
            "arguments": {
                "host": []
            }
        },
        "PreparedRequest.prepare_url": {
            "name": "prepare_url",
            "location": 410,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "params": []
            }
        },
        "PreparedRequest.prepare_headers": {
            "name": "prepare_headers",
            "location": 484,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "PreparedRequest.prepare_body": {
            "name": "prepare_body",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "files": [],
                "json": []
            }
        },
        "PreparedRequest.prepare_content_length": {
            "name": "prepare_content_length",
            "location": 573,
            "return": [],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "PreparedRequest.prepare_auth": {
            "name": "prepare_auth",
            "location": 589,
            "return": [],
            "arguments": {
                "self": [],
                "auth": [],
                "url": []
            }
        },
        "PreparedRequest.prepare_cookies": {
            "name": "prepare_cookies",
            "location": 611,
            "return": [],
            "arguments": {
                "self": [],
                "cookies": []
            }
        },
        "PreparedRequest.prepare_hooks": {
            "name": "prepare_hooks",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "hooks": []
            }
        },
        "Response.__init__": {
            "name": "__init__",
            "location": 659,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__enter__": {
            "name": "__enter__",
            "location": 706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__exit__": {
            "name": "__exit__",
            "location": 709,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__getstate__": {
            "name": "__getstate__",
            "location": 712,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__setstate__": {
            "name": "__setstate__",
            "location": 720,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "Response.__repr__": {
            "name": "__repr__",
            "location": 728,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__bool__": {
            "name": "__bool__",
            "location": 731,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__nonzero__": {
            "name": "__nonzero__",
            "location": 741,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__iter__": {
            "name": "__iter__",
            "location": 751,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.ok": {
            "name": "ok",
            "location": 756,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.is_redirect": {
            "name": "is_redirect",
            "location": 771,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.is_permanent_redirect": {
            "name": "is_permanent_redirect",
            "location": 778,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.next": {
            "name": "next",
            "location": 786,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.apparent_encoding": {
            "name": "apparent_encoding",
            "location": 791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.iter_content": {
            "name": "iter_content",
            "location": 795,
            "return": [],
            "arguments": {
                "self": [],
                "chunk_size": [],
                "decode_unicode": []
            }
        },
        "Response.iter_lines": {
            "name": "iter_lines",
            "location": 853,
            "return": [],
            "arguments": {
                "self": [],
                "chunk_size": [],
                "decode_unicode": [],
                "delimiter": []
            }
        },
        "Response.content": {
            "name": "content",
            "location": 888,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.text": {
            "name": "text",
            "location": 907,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.json": {
            "name": "json",
            "location": 944,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.links": {
            "name": "links",
            "location": 978,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.raise_for_status": {
            "name": "raise_for_status",
            "location": 994,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.close": {
            "name": "close",
            "location": 1023,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.iter_content.generate": {
            "name": "generate",
            "location": 812,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/packages.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/sessions.py": {
        "merge_setting": {
            "name": "merge_setting",
            "location": 61,
            "return": [],
            "arguments": {
                "request_setting": [],
                "session_setting": [],
                "dict_class": []
            }
        },
        "merge_hooks": {
            "name": "merge_hooks",
            "location": 91,
            "return": [],
            "arguments": {
                "request_hooks": [],
                "session_hooks": [],
                "dict_class": []
            }
        },
        "session": {
            "name": "session",
            "location": 819,
            "return": [],
            "arguments": {}
        },
        "SessionRedirectMixin.get_redirect_target": {
            "name": "get_redirect_target",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "resp": []
            }
        },
        "SessionRedirectMixin.should_strip_auth": {
            "name": "should_strip_auth",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "old_url": [],
                "new_url": []
            }
        },
        "SessionRedirectMixin.resolve_redirects": {
            "name": "resolve_redirects",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "resp": [],
                "req": [],
                "stream": [],
                "timeout": [],
                "verify": [],
                "cert": [],
                "proxies": [],
                "yield_requests": []
            }
        },
        "SessionRedirectMixin.rebuild_auth": {
            "name": "rebuild_auth",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "prepared_request": [],
                "response": []
            }
        },
        "SessionRedirectMixin.rebuild_proxies": {
            "name": "rebuild_proxies",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "prepared_request": [],
                "proxies": []
            }
        },
        "SessionRedirectMixin.rebuild_method": {
            "name": "rebuild_method",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "prepared_request": [],
                "response": []
            }
        },
        "Session.__init__": {
            "name": "__init__",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.__enter__": {
            "name": "__enter__",
            "location": 451,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.__exit__": {
            "name": "__exit__",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.prepare_request": {
            "name": "prepare_request",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Session.request": {
            "name": "request",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "params": [],
                "data": [],
                "headers": [],
                "cookies": [],
                "files": [],
                "auth": [],
                "timeout": [],
                "allow_redirects": [],
                "proxies": [],
                "hooks": [],
                "stream": [],
                "verify": [],
                "cert": [],
                "json": []
            }
        },
        "Session.get": {
            "name": "get",
            "location": 591,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Session.options": {
            "name": "options",
            "location": 602,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Session.head": {
            "name": "head",
            "location": 613,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Session.post": {
            "name": "post",
            "location": 624,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "data": [],
                "json": []
            }
        },
        "Session.put": {
            "name": "put",
            "location": 637,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "data": []
            }
        },
        "Session.patch": {
            "name": "patch",
            "location": 649,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "data": []
            }
        },
        "Session.delete": {
            "name": "delete",
            "location": 661,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Session.send": {
            "name": "send",
            "location": 671,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Session.merge_environment_settings": {
            "name": "merge_environment_settings",
            "location": 749,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "proxies": [],
                "stream": [],
                "verify": [],
                "cert": []
            }
        },
        "Session.get_adapter": {
            "name": "get_adapter",
            "location": 780,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Session.close": {
            "name": "close",
            "location": 794,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.mount": {
            "name": "mount",
            "location": 799,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "adapter": []
            }
        },
        "Session.__getstate__": {
            "name": "__getstate__",
            "location": 810,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Session.__setstate__": {
            "name": "__setstate__",
            "location": 814,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/status_codes.py": {
        "_init": {
            "name": "_init",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "_init.doc": {
            "name": "doc",
            "location": 116,
            "return": [],
            "arguments": {
                "code": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/structures.py": {
        "CaseInsensitiveDict.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CaseInsensitiveDict.__setitem__": {
            "name": "__setitem__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CaseInsensitiveDict.__getitem__": {
            "name": "__getitem__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaseInsensitiveDict.__delitem__": {
            "name": "__delitem__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaseInsensitiveDict.__iter__": {
            "name": "__iter__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__len__": {
            "name": "__len__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.lower_items": {
            "name": "lower_items",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__eq__": {
            "name": "__eq__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CaseInsensitiveDict.copy": {
            "name": "copy",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__repr__": {
            "name": "__repr__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LookupDict.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LookupDict.__repr__": {
            "name": "__repr__",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LookupDict.__getitem__": {
            "name": "__getitem__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LookupDict.get": {
            "name": "get",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/utils.py": {
        "dict_to_sequence": {
            "name": "dict_to_sequence",
            "location": 119,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "super_len": {
            "name": "super_len",
            "location": 128,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "get_netrc_auth": {
            "name": "get_netrc_auth",
            "location": 194,
            "return": [],
            "arguments": {
                "url": [],
                "raise_errors": []
            }
        },
        "guess_filename": {
            "name": "guess_filename",
            "location": 251,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "extract_zipped_paths": {
            "name": "extract_zipped_paths",
            "location": 258,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "atomic_open": {
            "name": "atomic_open",
            "location": 296,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "from_key_val_list": {
            "name": "from_key_val_list",
            "location": 308,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "to_key_val_list": {
            "name": "to_key_val_list",
            "location": 335,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "parse_list_header": {
            "name": "parse_list_header",
            "location": 365,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "parse_dict_header": {
            "name": "parse_dict_header",
            "location": 397,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "unquote_header_value": {
            "name": "unquote_header_value",
            "location": 432,
            "return": [],
            "arguments": {
                "value": [],
                "is_filename": []
            }
        },
        "dict_from_cookiejar": {
            "name": "dict_from_cookiejar",
            "location": 457,
            "return": [],
            "arguments": {
                "cj": []
            }
        },
        "add_dict_to_cookiejar": {
            "name": "add_dict_to_cookiejar",
            "location": 472,
            "return": [],
            "arguments": {
                "cj": [],
                "cookie_dict": []
            }
        },
        "get_encodings_from_content": {
            "name": "get_encodings_from_content",
            "location": 483,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "_parse_content_type_header": {
            "name": "_parse_content_type_header",
            "location": 508,
            "return": [],
            "arguments": {
                "header": []
            }
        },
        "get_encoding_from_headers": {
            "name": "get_encoding_from_headers",
            "location": 533,
            "return": [],
            "arguments": {
                "headers": []
            }
        },
        "stream_decode_response_unicode": {
            "name": "stream_decode_response_unicode",
            "location": 558,
            "return": [],
            "arguments": {
                "iterator": [],
                "r": []
            }
        },
        "iter_slices": {
            "name": "iter_slices",
            "location": 575,
            "return": [],
            "arguments": {
                "string": [],
                "slice_length": []
            }
        },
        "get_unicode_from_response": {
            "name": "get_unicode_from_response",
            "location": 585,
            "return": [],
            "arguments": {
                "r": []
            }
        },
        "unquote_unreserved": {
            "name": "unquote_unreserved",
            "location": 630,
            "return": [],
            "arguments": {
                "uri": []
            }
        },
        "requote_uri": {
            "name": "requote_uri",
            "location": 654,
            "return": [],
            "arguments": {
                "uri": []
            }
        },
        "address_in_network": {
            "name": "address_in_network",
            "location": 676,
            "return": [],
            "arguments": {
                "ip": [],
                "net": []
            }
        },
        "dotted_netmask": {
            "name": "dotted_netmask",
            "location": 691,
            "return": [],
            "arguments": {
                "mask": []
            }
        },
        "is_ipv4_address": {
            "name": "is_ipv4_address",
            "location": 702,
            "return": [],
            "arguments": {
                "string_ip": []
            }
        },
        "is_valid_cidr": {
            "name": "is_valid_cidr",
            "location": 713,
            "return": [],
            "arguments": {
                "string_network": []
            }
        },
        "set_environ": {
            "name": "set_environ",
            "location": 738,
            "return": [],
            "arguments": {
                "env_name": [],
                "value": []
            }
        },
        "should_bypass_proxies": {
            "name": "should_bypass_proxies",
            "location": 759,
            "return": [],
            "arguments": {
                "url": [],
                "no_proxy": []
            }
        },
        "get_environ_proxies": {
            "name": "get_environ_proxies",
            "location": 819,
            "return": [],
            "arguments": {
                "url": [],
                "no_proxy": []
            }
        },
        "select_proxy": {
            "name": "select_proxy",
            "location": 831,
            "return": [],
            "arguments": {
                "url": [],
                "proxies": []
            }
        },
        "resolve_proxies": {
            "name": "resolve_proxies",
            "location": 857,
            "return": [],
            "arguments": {
                "request": [],
                "proxies": [],
                "trust_env": []
            }
        },
        "default_user_agent": {
            "name": "default_user_agent",
            "location": 884,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "default_headers": {
            "name": "default_headers",
            "location": 893,
            "return": [],
            "arguments": {}
        },
        "parse_header_links": {
            "name": "parse_header_links",
            "location": 907,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "guess_json_utf": {
            "name": "guess_json_utf",
            "location": 950,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "prepend_scheme_if_needed": {
            "name": "prepend_scheme_if_needed",
            "location": 982,
            "return": [],
            "arguments": {
                "url": [],
                "new_scheme": []
            }
        },
        "get_auth_from_url": {
            "name": "get_auth_from_url",
            "location": 1011,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "check_header_validity": {
            "name": "check_header_validity",
            "location": 1027,
            "return": [],
            "arguments": {
                "header": []
            }
        },
        "_validate_header_part": {
            "name": "_validate_header_part",
            "location": 1046,
            "return": [],
            "arguments": {
                "header_part": [],
                "header_kind": [],
                "validator": []
            }
        },
        "urldefragauth": {
            "name": "urldefragauth",
            "location": 1054,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "rewind_body": {
            "name": "rewind_body",
            "location": 1071,
            "return": [],
            "arguments": {
                "prepared_request": []
            }
        },
        "proxy_bypass_registry": {
            "name": "proxy_bypass_registry",
            "location": 71,
            "return": [],
            "arguments": {
                "host": []
            }
        },
        "proxy_bypass": {
            "name": "proxy_bypass",
            "location": 107,
            "return": [],
            "arguments": {
                "host": []
            }
        },
        "should_bypass_proxies.get_proxy": {
            "name": "get_proxy",
            "location": 767,
            "return": [],
            "arguments": {
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/_internal_utils.py": {
        "to_native_string": {
            "name": "to_native_string",
            "location": 23,
            "return": [],
            "arguments": {
                "string": [],
                "encoding": []
            }
        },
        "unicode_is_ascii": {
            "name": "unicode_is_ascii",
            "location": 36,
            "return": [],
            "arguments": {
                "u_string": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/__init__.py": {
        "check_compatibility": {
            "name": "check_compatibility",
            "location": 55,
            "return": [],
            "arguments": {
                "urllib3_version": [],
                "chardet_version": [],
                "charset_normalizer_version": []
            }
        },
        "_check_cryptography": {
            "name": "_check_cryptography",
            "location": 86,
            "return": [],
            "arguments": {
                "cryptography_version": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/requests/__version__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/providers.py": {
        "AbstractProvider.identify": {
            "name": "identify",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_or_candidate": []
            }
        },
        "AbstractProvider.get_preference": {
            "name": "get_preference",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "resolutions": [],
                "candidates": [],
                "information": [],
                "backtrack_causes": []
            }
        },
        "AbstractProvider.find_matches": {
            "name": "find_matches",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [],
                "requirements": [],
                "incompatibilities": []
            }
        },
        "AbstractProvider.is_satisfied_by": {
            "name": "is_satisfied_by",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "candidate": []
            }
        },
        "AbstractProvider.get_dependencies": {
            "name": "get_dependencies",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "AbstractResolver.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "provider": [],
                "reporter": []
            }
        },
        "AbstractResolver.resolve": {
            "name": "resolve",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/reporters.py": {
        "BaseReporter.starting": {
            "name": "starting",
            "location": 4,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseReporter.starting_round": {
            "name": "starting_round",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "BaseReporter.ending_round": {
            "name": "ending_round",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "state": []
            }
        },
        "BaseReporter.ending": {
            "name": "ending",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "BaseReporter.adding_requirement": {
            "name": "adding_requirement",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "parent": []
            }
        },
        "BaseReporter.resolving_conflicts": {
            "name": "resolving_conflicts",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "causes": []
            }
        },
        "BaseReporter.backtracking": {
            "name": "backtracking",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "BaseReporter.pinning": {
            "name": "pinning",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/resolvers.py": {
        "_has_route_to_root": {
            "name": "_has_route_to_root",
            "location": 395,
            "return": [],
            "arguments": {
                "criteria": [],
                "key": [],
                "all_keys": [],
                "connected": []
            }
        },
        "_build_result": {
            "name": "_build_result",
            "location": 417,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "RequirementsConflicted.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "criterion": []
            }
        },
        "RequirementsConflicted.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InconsistentCandidate.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": [],
                "criterion": []
            }
        },
        "InconsistentCandidate.__str__": {
            "name": "__str__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Criterion.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "candidates": [],
                "information": [],
                "incompatibilities": []
            }
        },
        "Criterion.__repr__": {
            "name": "__repr__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Criterion.iter_requirement": {
            "name": "iter_requirement",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Criterion.iter_parent": {
            "name": "iter_parent",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResolutionImpossible.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "causes": []
            }
        },
        "ResolutionTooDeep.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "round_count": []
            }
        },
        "Resolution.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "provider": [],
                "reporter": []
            }
        },
        "Resolution.state": {
            "name": "state",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolution._push_new_state": {
            "name": "_push_new_state",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolution._add_to_criteria": {
            "name": "_add_to_criteria",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "criteria": [],
                "requirement": [],
                "parent": []
            }
        },
        "Resolution._get_preference": {
            "name": "_get_preference",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Resolution._is_current_pin_satisfying": {
            "name": "_is_current_pin_satisfying",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "criterion": []
            }
        },
        "Resolution._get_updated_criteria": {
            "name": "_get_updated_criteria",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "candidate": []
            }
        },
        "Resolution._attempt_to_pin_criterion": {
            "name": "_attempt_to_pin_criterion",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Resolution._backtrack": {
            "name": "_backtrack",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolution.resolve": {
            "name": "resolve",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": [],
                "max_rounds": []
            }
        },
        "Resolver.resolve": {
            "name": "resolve",
            "location": 452,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": [],
                "max_rounds": []
            }
        },
        "Resolution._backtrack._patch_criteria": {
            "name": "_patch_criteria",
            "location": 288,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/structs.py": {
        "build_iter_view": {
            "name": "build_iter_view",
            "location": 159,
            "return": [],
            "arguments": {
                "matches": []
            }
        },
        "DirectedGraph.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectedGraph.__iter__": {
            "name": "__iter__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectedGraph.__len__": {
            "name": "__len__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectedGraph.__contains__": {
            "name": "__contains__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DirectedGraph.copy": {
            "name": "copy",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectedGraph.add": {
            "name": "add",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DirectedGraph.remove": {
            "name": "remove",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DirectedGraph.connected": {
            "name": "connected",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "t": []
            }
        },
        "DirectedGraph.connect": {
            "name": "connect",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "t": []
            }
        },
        "DirectedGraph.iter_edges": {
            "name": "iter_edges",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectedGraph.iter_children": {
            "name": "iter_children",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DirectedGraph.iter_parents": {
            "name": "iter_parents",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "IteratorMapping.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "accessor": [],
                "appends": []
            }
        },
        "IteratorMapping.__repr__": {
            "name": "__repr__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IteratorMapping.__bool__": {
            "name": "__bool__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IteratorMapping.__contains__": {
            "name": "__contains__",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "IteratorMapping.__getitem__": {
            "name": "__getitem__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "IteratorMapping.__iter__": {
            "name": "__iter__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IteratorMapping.__len__": {
            "name": "__len__",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FactoryIterableView.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "factory": []
            }
        },
        "_FactoryIterableView.__repr__": {
            "name": "__repr__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FactoryIterableView.__bool__": {
            "name": "__bool__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FactoryIterableView.__iter__": {
            "name": "__iter__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SequenceIterableView.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "sequence": []
            }
        },
        "_SequenceIterableView.__repr__": {
            "name": "__repr__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SequenceIterableView.__bool__": {
            "name": "__bool__",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SequenceIterableView.__iter__": {
            "name": "__iter__",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/compat/collections_abc.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/resolvelib/compat/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/abc.py": {
        "RichRenderable.__subclasshook__": {
            "name": "__subclasshook__",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": [],
                "other": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/align.py": {
        "Align.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "align": [],
                "style": []
            }
        },
        "Align.__repr__": {
            "name": "__repr__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Align.left": {
            "name": "left",
            "location": 70,
            "return": [],
            "arguments": {
                "cls": [],
                "renderable": [],
                "style": []
            }
        },
        "Align.center": {
            "name": "center",
            "location": 92,
            "return": [],
            "arguments": {
                "cls": [],
                "renderable": [],
                "style": []
            }
        },
        "Align.right": {
            "name": "right",
            "location": 114,
            "return": [],
            "arguments": {
                "cls": [],
                "renderable": [],
                "style": []
            }
        },
        "Align.__rich_console__": {
            "name": "__rich_console__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Align.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "VerticalCenter.__init__": {
            "name": "__init__",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "style": []
            }
        },
        "VerticalCenter.__repr__": {
            "name": "__repr__",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VerticalCenter.__rich_console__": {
            "name": "__rich_console__",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "VerticalCenter.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Align.__rich_console__.generate_segments": {
            "name": "generate_segments",
            "location": 153,
            "return": [],
            "arguments": {}
        },
        "Align.__rich_console__.blank_lines": {
            "name": "blank_lines",
            "location": 198,
            "return": [],
            "arguments": {
                "count": []
            }
        },
        "VerticalCenter.__rich_console__.blank_lines": {
            "name": "blank_lines",
            "location": 270,
            "return": [],
            "arguments": {
                "count": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/ansi.py": {
        "_ansi_tokenize": {
            "name": "_ansi_tokenize",
            "location": 27,
            "return": [],
            "arguments": {
                "ansi_text": []
            }
        },
        "AnsiDecoder.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsiDecoder.decode": {
            "name": "decode",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "terminal_text": []
            }
        },
        "AnsiDecoder.decode_line": {
            "name": "decode_line",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "read": {
            "name": "read",
            "location": 220,
            "return": [],
            "arguments": {
                "fd": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/bar.py": {
        "Bar.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "size": [],
                "begin": [],
                "end": []
            }
        },
        "Bar.__repr__": {
            "name": "__repr__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bar.__rich_console__": {
            "name": "__rich_console__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Bar.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/box.py": {
        "Box.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "box": []
            }
        },
        "Box.__repr__": {
            "name": "__repr__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Box.__str__": {
            "name": "__str__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Box.substitute": {
            "name": "substitute",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "safe": []
            }
        },
        "Box.get_plain_headed_box": {
            "name": "get_plain_headed_box",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Box.get_top": {
            "name": "get_top",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "widths": []
            }
        },
        "Box.get_row": {
            "name": "get_row",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "widths": [],
                "level": [],
                "edge": []
            }
        },
        "Box.get_bottom": {
            "name": "get_bottom",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "widths": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/cells.py": {
        "cached_cell_len": {
            "name": "cached_cell_len",
            "location": 12,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "cell_len": {
            "name": "cell_len",
            "location": 29,
            "return": [],
            "arguments": {
                "text": [],
                "_cell_len": []
            }
        },
        "get_character_cell_size": {
            "name": "get_character_cell_size",
            "location": 46,
            "return": [],
            "arguments": {
                "character": []
            }
        },
        "_get_codepoint_cell_size": {
            "name": "_get_codepoint_cell_size",
            "location": 59,
            "return": [],
            "arguments": {
                "codepoint": []
            }
        },
        "set_cell_size": {
            "name": "set_cell_size",
            "location": 87,
            "return": [],
            "arguments": {
                "text": [],
                "total": []
            }
        },
        "chop_cells": {
            "name": "chop_cells",
            "location": 124,
            "return": [],
            "arguments": {
                "text": [],
                "max_size": [],
                "position": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/color.py": {
        "parse_rgb_hex": {
            "name": "parse_rgb_hex",
            "location": 564,
            "return": [],
            "arguments": {
                "hex_color": []
            }
        },
        "blend_rgb": {
            "name": "blend_rgb",
            "location": 573,
            "return": [],
            "arguments": {
                "color1": [],
                "color2": [],
                "cross_fade": []
            }
        },
        "ColorSystem.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColorType.__repr__": {
            "name": "__repr__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.__rich__": {
            "name": "__rich__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.__rich_repr__": {
            "name": "__rich_repr__",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.system": {
            "name": "system",
            "location": 330,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.is_system_defined": {
            "name": "is_system_defined",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.is_default": {
            "name": "is_default",
            "location": 342,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.get_truecolor": {
            "name": "get_truecolor",
            "location": 346,
            "return": [],
            "arguments": {
                "self": [],
                "theme": [],
                "foreground": []
            }
        },
        "Color.from_ansi": {
            "name": "from_ansi",
            "location": 378,
            "return": [],
            "arguments": {
                "cls": [],
                "number": []
            }
        },
        "Color.from_triplet": {
            "name": "from_triplet",
            "location": 394,
            "return": [],
            "arguments": {
                "cls": [],
                "triplet": []
            }
        },
        "Color.from_rgb": {
            "name": "from_rgb",
            "location": 406,
            "return": [],
            "arguments": {
                "cls": [],
                "red": [],
                "green": [],
                "blue": []
            }
        },
        "Color.default": {
            "name": "default",
            "location": 420,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Color.parse": {
            "name": "parse",
            "location": 430,
            "return": [],
            "arguments": {
                "cls": [],
                "color": []
            }
        },
        "Color.get_ansi_codes": {
            "name": "get_ansi_codes",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "foreground": []
            }
        },
        "Color.downgrade": {
            "name": "downgrade",
            "location": 510,
            "return": [],
            "arguments": {
                "self": [],
                "system": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/color_triplet.py": {
        "ColorTriplet.hex": {
            "name": "hex",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColorTriplet.rgb": {
            "name": "rgb",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColorTriplet.normalized": {
            "name": "normalized",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/columns.py": {
        "Columns.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "renderables": [],
                "padding": []
            }
        },
        "Columns.add_renderable": {
            "name": "add_renderable",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Columns.__rich_console__": {
            "name": "__rich_console__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Columns.__rich_console__.iter_renderables": {
            "name": "iter_renderables",
            "location": 86,
            "return": [],
            "arguments": {
                "column_count": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/console.py": {
        "group": {
            "name": "group",
            "location": 489,
            "return": [],
            "arguments": {
                "fit": []
            }
        },
        "_is_jupyter": {
            "name": "_is_jupyter",
            "location": 511,
            "return": [],
            "arguments": {}
        },
        "get_windows_console_features": {
            "name": "get_windows_console_features",
            "location": 568,
            "return": [],
            "arguments": {}
        },
        "detect_legacy_windows": {
            "name": "detect_legacy_windows",
            "location": 578,
            "return": [],
            "arguments": {}
        },
        "_svg_hash": {
            "name": "_svg_hash",
            "location": 2507,
            "return": [],
            "arguments": {
                "svg_main_code": []
            }
        },
        "ConsoleOptions.ascii_only": {
            "name": "ascii_only",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConsoleOptions.copy": {
            "name": "copy",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConsoleOptions.update": {
            "name": "update",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConsoleOptions.update_width": {
            "name": "update_width",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "ConsoleOptions.update_height": {
            "name": "update_height",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "height": []
            }
        },
        "ConsoleOptions.reset_height": {
            "name": "reset_height",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConsoleOptions.update_dimensions": {
            "name": "update_dimensions",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "width": [],
                "height": []
            }
        },
        "RichCast.__rich__": {
            "name": "__rich__",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConsoleRenderable.__rich_console__": {
            "name": "__rich_console__",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "NewLine.__init__": {
            "name": "__init__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "NewLine.__rich_console__": {
            "name": "__rich_console__",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "ScreenUpdate.__init__": {
            "name": "__init__",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "x": [],
                "y": []
            }
        },
        "ScreenUpdate.__rich_console__": {
            "name": "__rich_console__",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Capture.__init__": {
            "name": "__init__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "console": []
            }
        },
        "Capture.__enter__": {
            "name": "__enter__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Capture.__exit__": {
            "name": "__exit__",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "Capture.get": {
            "name": "get",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThemeContext.__init__": {
            "name": "__init__",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "theme": [],
                "inherit": []
            }
        },
        "ThemeContext.__enter__": {
            "name": "__enter__",
            "location": 357,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThemeContext.__exit__": {
            "name": "__exit__",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "PagerContext.__init__": {
            "name": "__init__",
            "location": 373,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "pager": [],
                "styles": [],
                "links": []
            }
        },
        "PagerContext.__enter__": {
            "name": "__enter__",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PagerContext.__exit__": {
            "name": "__exit__",
            "location": 389,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "ScreenContext.__init__": {
            "name": "__init__",
            "location": 412,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "hide_cursor": [],
                "style": []
            }
        },
        "ScreenContext.update": {
            "name": "update",
            "location": 420,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScreenContext.__enter__": {
            "name": "__enter__",
            "location": 438,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScreenContext.__exit__": {
            "name": "__exit__",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "Group.__init__": {
            "name": "__init__",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Group.renderables": {
            "name": "renderables",
            "location": 470,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Group.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 475,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Group.__rich_console__": {
            "name": "__rich_console__",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "group.decorator": {
            "name": "decorator",
            "location": 496,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "RenderHook.process_renderables": {
            "name": "process_renderables",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "renderables": []
            }
        },
        "Console.__init__": {
            "name": "__init__",
            "location": 621,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.__repr__": {
            "name": "__repr__",
            "location": 741,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.file": {
            "name": "file",
            "location": 752,
            "return": [],
            "arguments": {
                "self": [],
                "new_file": []
            }
        },
        "Console._buffer": {
            "name": "_buffer",
            "location": 757,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._buffer_index": {
            "name": "_buffer_index",
            "location": 767,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Console._theme_stack": {
            "name": "_theme_stack",
            "location": 771,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._detect_color_system": {
            "name": "_detect_color_system",
            "location": 775,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._enter_buffer": {
            "name": "_enter_buffer",
            "location": 799,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._exit_buffer": {
            "name": "_exit_buffer",
            "location": 803,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.set_live": {
            "name": "set_live",
            "location": 808,
            "return": [],
            "arguments": {
                "self": [],
                "live": []
            }
        },
        "Console.clear_live": {
            "name": "clear_live",
            "location": 822,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.push_render_hook": {
            "name": "push_render_hook",
            "location": 827,
            "return": [],
            "arguments": {
                "self": [],
                "hook": []
            }
        },
        "Console.pop_render_hook": {
            "name": "pop_render_hook",
            "location": 836,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.__enter__": {
            "name": "__enter__",
            "location": 841,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.__exit__": {
            "name": "__exit__",
            "location": 846,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "Console.begin_capture": {
            "name": "begin_capture",
            "location": 850,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.end_capture": {
            "name": "end_capture",
            "location": 854,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.push_theme": {
            "name": "push_theme",
            "location": 865,
            "return": [],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "Console.pop_theme": {
            "name": "pop_theme",
            "location": 876,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.use_theme": {
            "name": "use_theme",
            "location": 880,
            "return": [],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "Console.color_system": {
            "name": "color_system",
            "location": 893,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.encoding": {
            "name": "encoding",
            "location": 906,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.is_terminal": {
            "name": "is_terminal",
            "location": 915,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.is_dumb_terminal": {
            "name": "is_dumb_terminal",
            "location": 941,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.options": {
            "name": "options",
            "location": 953,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.size": {
            "name": "size",
            "location": 1012,
            "return": [],
            "arguments": {
                "self": [],
                "new_size": []
            }
        },
        "Console.width": {
            "name": "width",
            "location": 1032,
            "return": [],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "Console.height": {
            "name": "height",
            "location": 1050,
            "return": [],
            "arguments": {
                "self": [],
                "height": []
            }
        },
        "Console.bell": {
            "name": "bell",
            "location": 1058,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.capture": {
            "name": "capture",
            "location": 1062,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.pager": {
            "name": "pager",
            "location": 1079,
            "return": [],
            "arguments": {
                "self": [],
                "pager": [],
                "styles": [],
                "links": []
            }
        },
        "Console.line": {
            "name": "line",
            "location": 1102,
            "return": [],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "Console.clear": {
            "name": "clear",
            "location": 1112,
            "return": [],
            "arguments": {
                "self": [],
                "home": []
            }
        },
        "Console.status": {
            "name": "status",
            "location": 1123,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "Console.show_cursor": {
            "name": "show_cursor",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "show": []
            }
        },
        "Console.set_alt_screen": {
            "name": "set_alt_screen",
            "location": 1167,
            "return": [],
            "arguments": {
                "self": [],
                "enable": []
            }
        },
        "Console.is_alt_screen": {
            "name": "is_alt_screen",
            "location": 1189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.set_window_title": {
            "name": "set_window_title",
            "location": 1197,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "Console.screen": {
            "name": "screen",
            "location": 1229,
            "return": [],
            "arguments": {
                "self": [],
                "hide_cursor": [],
                "style": []
            }
        },
        "Console.measure": {
            "name": "measure",
            "location": 1243,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Console.render": {
            "name": "render",
            "location": 1260,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "options": []
            }
        },
        "Console.render_lines": {
            "name": "render_lines",
            "location": 1311,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "options": []
            }
        },
        "Console.render_str": {
            "name": "render_str",
            "location": 1370,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Console.get_style": {
            "name": "get_style",
            "location": 1429,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Console._collect_renderables": {
            "name": "_collect_renderables",
            "location": 1459,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "sep": [],
                "end": []
            }
        },
        "Console.rule": {
            "name": "rule",
            "location": 1534,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "Console.control": {
            "name": "control",
            "location": 1555,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.out": {
            "name": "out",
            "location": 1565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.print": {
            "name": "print",
            "location": 1597,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.print_json": {
            "name": "print_json",
            "location": 1696,
            "return": [],
            "arguments": {
                "self": [],
                "json": []
            }
        },
        "Console.update_screen": {
            "name": "update_screen",
            "location": 1757,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Console.update_screen_lines": {
            "name": "update_screen_lines",
            "location": 1791,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "x": [],
                "y": []
            }
        },
        "Console.print_exception": {
            "name": "print_exception",
            "location": 1811,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._caller_frame_info": {
            "name": "_caller_frame_info",
            "location": 1847,
            "return": [],
            "arguments": {
                "offset": [],
                "currentframe": []
            }
        },
        "Console.log": {
            "name": "log",
            "location": 1881,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._check_buffer": {
            "name": "_check_buffer",
            "location": 1963,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console._render_buffer": {
            "name": "_render_buffer",
            "location": 2024,
            "return": [],
            "arguments": {
                "self": [],
                "buffer": []
            }
        },
        "Console.input": {
            "name": "input",
            "location": 2048,
            "return": [],
            "arguments": {
                "self": [],
                "prompt": []
            }
        },
        "Console.export_text": {
            "name": "export_text",
            "location": 2082,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.save_text": {
            "name": "save_text",
            "location": 2114,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Console.export_html": {
            "name": "export_html",
            "location": 2128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.save_html": {
            "name": "save_html",
            "location": 2203,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Console.export_svg": {
            "name": "export_svg",
            "location": 2234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Console.save_svg": {
            "name": "save_svg",
            "location": 2477,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "group.decorator._replace": {
            "name": "_replace",
            "location": 502,
            "return": [],
            "arguments": {}
        },
        "Console._collect_renderables.check_text": {
            "name": "check_text",
            "location": 1501,
            "return": [],
            "arguments": {}
        },
        "Console.export_svg.get_svg_style": {
            "name": "get_svg_style",
            "location": 2259,
            "return": [],
            "arguments": {
                "style": []
            }
        },
        "Console.export_svg.escape_text": {
            "name": "escape_text",
            "location": 2319,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Console.export_svg.make_tag": {
            "name": "make_tag",
            "location": 2323,
            "return": [],
            "arguments": {
                "name": [],
                "content": []
            }
        },
        "Console._collect_renderables.align_append": {
            "name": "align_append",
            "location": 1492,
            "return": [],
            "arguments": {
                "renderable": []
            }
        },
        "Console.export_svg.make_tag.stringify": {
            "name": "stringify",
            "location": 2328,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/constrain.py": {
        "Constrain.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "width": []
            }
        },
        "Constrain.__rich_console__": {
            "name": "__rich_console__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Constrain.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/containers.py": {
        "Renderables.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "renderables": []
            }
        },
        "Renderables.__rich_console__": {
            "name": "__rich_console__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Renderables.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Renderables.append": {
            "name": "append",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Renderables.__iter__": {
            "name": "__iter__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lines.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        },
        "Lines.__repr__": {
            "name": "__repr__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lines.__iter__": {
            "name": "__iter__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lines.__getitem__": {
            "name": "__getitem__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Lines.__setitem__": {
            "name": "__setitem__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "value": []
            }
        },
        "Lines.__len__": {
            "name": "__len__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lines.__rich_console__": {
            "name": "__rich_console__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Lines.append": {
            "name": "append",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Lines.extend": {
            "name": "extend",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        },
        "Lines.pop": {
            "name": "pop",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Lines.justify": {
            "name": "justify",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "width": [],
                "justify": [],
                "overflow": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/control.py": {
        "strip_control_codes": {
            "name": "strip_control_codes",
            "location": 187,
            "return": [],
            "arguments": {
                "text": [],
                "_translate_table": []
            }
        },
        "escape_control_codes": {
            "name": "escape_control_codes",
            "location": 201,
            "return": [],
            "arguments": {
                "text": [],
                "_translate_table": []
            }
        },
        "Control.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Control.bell": {
            "name": "bell",
            "location": 75,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Control.home": {
            "name": "home",
            "location": 80,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Control.move": {
            "name": "move",
            "location": 85,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": []
            }
        },
        "Control.move_to_column": {
            "name": "move_to_column",
            "location": 114,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": []
            }
        },
        "Control.move_to": {
            "name": "move_to",
            "location": 138,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": []
            }
        },
        "Control.clear": {
            "name": "clear",
            "location": 151,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Control.show_cursor": {
            "name": "show_cursor",
            "location": 156,
            "return": [],
            "arguments": {
                "cls": [],
                "show": []
            }
        },
        "Control.alt_screen": {
            "name": "alt_screen",
            "location": 161,
            "return": [],
            "arguments": {
                "cls": [],
                "enable": []
            }
        },
        "Control.title": {
            "name": "title",
            "location": 169,
            "return": [],
            "arguments": {
                "cls": [],
                "title": []
            }
        },
        "Control.__str__": {
            "name": "__str__",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Control.__rich_console__": {
            "name": "__rich_console__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Control.move.get_codes": {
            "name": "get_codes",
            "location": 97,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/default_styles.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/diagnose.py": {
        "report": {
            "name": "report",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/emoji.py": {
        "Emoji.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "style": [],
                "variant": []
            }
        },
        "Emoji.replace": {
            "name": "replace",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "Emoji.__repr__": {
            "name": "__repr__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Emoji.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Emoji.__rich_console__": {
            "name": "__rich_console__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/errors.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/filesize.py": {
        "_to_str": {
            "name": "_to_str",
            "location": 19,
            "return": [],
            "arguments": {
                "size": [],
                "suffixes": [],
                "base": []
            }
        },
        "pick_unit_and_suffix": {
            "name": "pick_unit_and_suffix",
            "location": 44,
            "return": [],
            "arguments": {
                "size": [],
                "suffixes": [],
                "base": []
            }
        },
        "decimal": {
            "name": "decimal",
            "location": 53,
            "return": [],
            "arguments": {
                "size": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/file_proxy.py": {
        "FileProxy.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "file": []
            }
        },
        "FileProxy.rich_proxied_file": {
            "name": "rich_proxied_file",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileProxy.__getattr__": {
            "name": "__getattr__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileProxy.write": {
            "name": "write",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FileProxy.flush": {
            "name": "flush",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/highlighter.py": {
        "_combine_regex": {
            "name": "_combine_regex",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "Highlighter.__call__": {
            "name": "__call__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Highlighter.highlight": {
            "name": "highlight",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "NullHighlighter.highlight": {
            "name": "highlight",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "RegexHighlighter.highlight": {
            "name": "highlight",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "JSONHighlighter.highlight": {
            "name": "highlight",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/json.py": {
        "JSON.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "json": [],
                "indent": [],
                "highlight": [],
                "skip_keys": [],
                "ensure_ascii": [],
                "check_circular": [],
                "allow_nan": [],
                "default": [],
                "sort_keys": []
            }
        },
        "JSON.from_data": {
            "name": "from_data",
            "location": 53,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [],
                "indent": [],
                "highlight": [],
                "skip_keys": [],
                "ensure_ascii": [],
                "check_circular": [],
                "allow_nan": [],
                "default": [],
                "sort_keys": []
            }
        },
        "JSON.__rich__": {
            "name": "__rich__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/jupyter.py": {
        "_render_segments": {
            "name": "_render_segments",
            "location": 59,
            "return": [],
            "arguments": {
                "segments": []
            }
        },
        "display": {
            "name": "display",
            "location": 84,
            "return": [],
            "arguments": {
                "segments": [],
                "text": []
            }
        },
        "print": {
            "name": "print",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "JupyterRenderable.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "html": [],
                "text": []
            }
        },
        "JupyterRenderable._repr_mimebundle_": {
            "name": "_repr_mimebundle_",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "include": [],
                "exclude": []
            }
        },
        "JupyterMixin._repr_mimebundle_": {
            "name": "_repr_mimebundle_",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "include": [],
                "exclude": []
            }
        },
        "_render_segments.escape": {
            "name": "escape",
            "location": 60,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/layout.py": {
        "_Placeholder.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "layout": [],
                "style": []
            }
        },
        "_Placeholder.__rich_console__": {
            "name": "__rich_console__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Splitter.get_tree_icon": {
            "name": "get_tree_icon",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Splitter.divide": {
            "name": "divide",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "children": [],
                "region": []
            }
        },
        "RowSplitter.get_tree_icon": {
            "name": "get_tree_icon",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RowSplitter.divide": {
            "name": "divide",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "children": [],
                "region": []
            }
        },
        "ColumnSplitter.get_tree_icon": {
            "name": "get_tree_icon",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnSplitter.divide": {
            "name": "divide",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "children": [],
                "region": []
            }
        },
        "Layout.__init__": {
            "name": "__init__",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Layout.__rich_repr__": {
            "name": "__rich_repr__",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.renderable": {
            "name": "renderable",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.children": {
            "name": "children",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.map": {
            "name": "map",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.get": {
            "name": "get",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Layout.__getitem__": {
            "name": "__getitem__",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Layout.tree": {
            "name": "tree",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.split": {
            "name": "split",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.add_split": {
            "name": "add_split",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.split_row": {
            "name": "split_row",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.split_column": {
            "name": "split_column",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.unsplit": {
            "name": "unsplit",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Layout.update": {
            "name": "update",
            "location": 322,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Layout.refresh_screen": {
            "name": "refresh_screen",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "layout_name": []
            }
        },
        "Layout._make_region_map": {
            "name": "_make_region_map",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "width": [],
                "height": []
            }
        },
        "Layout.render": {
            "name": "render",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Layout.__rich_console__": {
            "name": "__rich_console__",
            "location": 398,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Layout.tree.summary": {
            "name": "summary",
            "location": 231,
            "return": [],
            "arguments": {
                "layout": []
            }
        },
        "Layout.tree.recurse": {
            "name": "recurse",
            "location": 251,
            "return": [],
            "arguments": {
                "tree": [],
                "layout": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/live.py": {
        "_RefreshThread.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "live": [],
                "refresh_per_second": []
            }
        },
        "_RefreshThread.stop": {
            "name": "stop",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RefreshThread.run": {
            "name": "run",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Live.is_started": {
            "name": "is_started",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.get_renderable": {
            "name": "get_renderable",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.start": {
            "name": "start",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "refresh": []
            }
        },
        "Live.stop": {
            "name": "stop",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.__enter__": {
            "name": "__enter__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.__exit__": {
            "name": "__exit__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "Live._enable_redirect_io": {
            "name": "_enable_redirect_io",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live._disable_redirect_io": {
            "name": "_disable_redirect_io",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.renderable": {
            "name": "renderable",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.update": {
            "name": "update",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "Live.refresh": {
            "name": "refresh",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Live.process_renderables": {
            "name": "process_renderables",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "renderables": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/live_render.py": {
        "LiveRender.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "style": [],
                "vertical_overflow": []
            }
        },
        "LiveRender.set_renderable": {
            "name": "set_renderable",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "LiveRender.position_cursor": {
            "name": "position_cursor",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LiveRender.restore_cursor": {
            "name": "restore_cursor",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LiveRender.__rich_console__": {
            "name": "__rich_console__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/logging.py": {
        "RichHandler.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "level": [],
                "console": []
            }
        },
        "RichHandler.get_level_text": {
            "name": "get_level_text",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "RichHandler.emit": {
            "name": "emit",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "RichHandler.render_message": {
            "name": "render_message",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "record": [],
                "message": []
            }
        },
        "RichHandler.render": {
            "name": "render",
            "location": 190,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "divide": {
            "name": "divide",
            "location": 266,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/markup.py": {
        "escape": {
            "name": "escape",
            "location": 48,
            "return": [],
            "arguments": {
                "markup": [],
                "_escape": []
            }
        },
        "_parse": {
            "name": "_parse",
            "location": 70,
            "return": [],
            "arguments": {
                "markup": []
            }
        },
        "render": {
            "name": "render",
            "location": 103,
            "return": [],
            "arguments": {
                "markup": [],
                "style": [],
                "emoji": [],
                "emoji_variant": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.markup": {
            "name": "markup",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "escape.escape_backslashes": {
            "name": "escape_backslashes",
            "location": 61,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "render.pop_style": {
            "name": "pop_style",
            "location": 140,
            "return": [],
            "arguments": {
                "style_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/measure.py": {
        "measure_renderables": {
            "name": "measure_renderables",
            "location": 125,
            "return": [],
            "arguments": {
                "console": [],
                "options": [],
                "renderables": []
            }
        },
        "Measurement.span": {
            "name": "span",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Measurement.normalize": {
            "name": "normalize",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Measurement.with_maximum": {
            "name": "with_maximum",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "Measurement.with_minimum": {
            "name": "with_minimum",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "Measurement.clamp": {
            "name": "clamp",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "min_width": [],
                "max_width": []
            }
        },
        "Measurement.get": {
            "name": "get",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": [],
                "console": [],
                "options": [],
                "renderable": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/padding.py": {
        "Padding.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "pad": []
            }
        },
        "Padding.indent": {
            "name": "indent",
            "location": 47,
            "return": [],
            "arguments": {
                "cls": [],
                "renderable": [],
                "level": []
            }
        },
        "Padding.unpack": {
            "name": "unpack",
            "location": 61,
            "return": [],
            "arguments": {
                "pad": []
            }
        },
        "Padding.__repr__": {
            "name": "__repr__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Padding.__rich_console__": {
            "name": "__rich_console__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Padding.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/pager.py": {
        "Pager.show": {
            "name": "show",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "SystemPager._pager": {
            "name": "_pager",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "SystemPager.show": {
            "name": "show",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/palette.py": {
        "Palette.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "colors": []
            }
        },
        "Palette.__getitem__": {
            "name": "__getitem__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "number": []
            }
        },
        "Palette.__rich__": {
            "name": "__rich__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Palette.match": {
            "name": "match",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "Palette.match.get_color_distance": {
            "name": "get_color_distance",
            "location": 58,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "ColorBox.__rich_console__": {
            "name": "__rich_console__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/panel.py": {
        "Panel.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "box": []
            }
        },
        "Panel.fit": {
            "name": "fit",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": [],
                "renderable": [],
                "box": []
            }
        },
        "Panel._title": {
            "name": "_title",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel._subtitle": {
            "name": "_subtitle",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.__rich_console__": {
            "name": "__rich_console__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Panel.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/pretty.py": {
        "_is_attr_object": {
            "name": "_is_attr_object",
            "location": 65,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_get_attr_fields": {
            "name": "_get_attr_fields",
            "location": 70,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_is_dataclass_repr": {
            "name": "_is_dataclass_repr",
            "location": 75,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_has_default_namedtuple_repr": {
            "name": "_has_default_namedtuple_repr",
            "location": 95,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_ipy_display_hook": {
            "name": "_ipy_display_hook",
            "location": 115,
            "return": [],
            "arguments": {
                "value": [],
                "console": [],
                "overflow": [],
                "crop": [],
                "indent_guides": [],
                "max_length": [],
                "max_string": [],
                "expand_all": []
            }
        },
        "_safe_isinstance": {
            "name": "_safe_isinstance",
            "location": 188,
            "return": [],
            "arguments": {
                "obj": [],
                "class_or_tuple": []
            }
        },
        "install": {
            "name": "install",
            "location": 198,
            "return": [],
            "arguments": {
                "console": [],
                "overflow": [],
                "crop": [],
                "indent_guides": [],
                "max_length": [],
                "max_string": [],
                "expand_all": []
            }
        },
        "_get_braces_for_defaultdict": {
            "name": "_get_braces_for_defaultdict",
            "location": 376,
            "return": [],
            "arguments": {
                "_object": []
            }
        },
        "_get_braces_for_array": {
            "name": "_get_braces_for_array",
            "location": 384,
            "return": [],
            "arguments": {
                "_object": []
            }
        },
        "is_expandable": {
            "name": "is_expandable",
            "location": 407,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_is_namedtuple": {
            "name": "_is_namedtuple",
            "location": 570,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "traverse": {
            "name": "traverse",
            "location": 589,
            "return": [],
            "arguments": {
                "_object": [],
                "max_length": [],
                "max_string": [],
                "max_depth": []
            }
        },
        "pretty_repr": {
            "name": "pretty_repr",
            "location": 878,
            "return": [],
            "arguments": {
                "_object": []
            }
        },
        "pprint": {
            "name": "pprint",
            "location": 918,
            "return": [],
            "arguments": {
                "_object": []
            }
        },
        "install.display_hook": {
            "name": "display_hook",
            "location": 225,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "Pretty.__init__": {
            "name": "__init__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "_object": [],
                "highlighter": []
            }
        },
        "Pretty.__rich_console__": {
            "name": "__rich_console__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Pretty.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Node.iter_tokens": {
            "name": "iter_tokens",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.check_length": {
            "name": "check_length",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "start_length": [],
                "max_length": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.render": {
            "name": "render",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "max_width": [],
                "indent_size": [],
                "expand_all": []
            }
        },
        "_Line.expandable": {
            "name": "expandable",
            "location": 516,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Line.check_length": {
            "name": "check_length",
            "location": 520,
            "return": [],
            "arguments": {
                "self": [],
                "max_length": []
            }
        },
        "_Line.expand": {
            "name": "expand",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "indent_size": []
            }
        },
        "_Line.__str__": {
            "name": "__str__",
            "location": 561,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "traverse.to_repr": {
            "name": "to_repr",
            "location": 610,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "traverse._traverse": {
            "name": "_traverse",
            "location": 630,
            "return": [],
            "arguments": {
                "obj": [],
                "root": [],
                "depth": []
            }
        },
        "traverse._traverse.iter_rich_args": {
            "name": "iter_rich_args",
            "location": 638,
            "return": [],
            "arguments": {
                "rich_args": []
            }
        },
        "BrokenRepr.__repr__": {
            "name": "__repr__",
            "location": 958,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.RichFormatter.__call__": {
            "name": "__call__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "traverse._traverse.iter_attrs": {
            "name": "iter_attrs",
            "location": 730,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/progress.py": {
        "track": {
            "name": "track",
            "location": 103,
            "return": [],
            "arguments": {
                "sequence": [],
                "description": [],
                "total": [],
                "auto_refresh": [],
                "console": [],
                "transient": [],
                "get_time": [],
                "refresh_per_second": [],
                "style": [],
                "complete_style": [],
                "finished_style": [],
                "pulse_style": [],
                "update_period": [],
                "disable": [],
                "show_speed": []
            }
        },
        "wrap_file": {
            "name": "wrap_file",
            "location": 290,
            "return": [],
            "arguments": {
                "file": [],
                "total": []
            }
        },
        "open": {
            "name": "open",
            "location": 405,
            "return": [],
            "arguments": {
                "file": [],
                "mode": [],
                "buffering": [],
                "encoding": [],
                "errors": [],
                "newline": []
            }
        },
        "_TrackThread.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "progress": [],
                "task_id": [],
                "update_period": []
            }
        },
        "_TrackThread.run": {
            "name": "run",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TrackThread.__enter__": {
            "name": "__enter__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TrackThread.__exit__": {
            "name": "__exit__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "_Reader.__init__": {
            "name": "__init__",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "handle": [],
                "progress": [],
                "task": [],
                "close_handle": []
            }
        },
        "_Reader.__enter__": {
            "name": "__enter__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.__exit__": {
            "name": "__exit__",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "_Reader.__iter__": {
            "name": "__iter__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.__next__": {
            "name": "__next__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.closed": {
            "name": "closed",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.fileno": {
            "name": "fileno",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.isatty": {
            "name": "isatty",
            "location": 216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.name": {
            "name": "name",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.readable": {
            "name": "readable",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.seekable": {
            "name": "seekable",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.writable": {
            "name": "writable",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.read": {
            "name": "read",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "_Reader.readinto": {
            "name": "readinto",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "_Reader.readline": {
            "name": "readline",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "_Reader.readlines": {
            "name": "readlines",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "hint": []
            }
        },
        "_Reader.close": {
            "name": "close",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.seek": {
            "name": "seek",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "whence": []
            }
        },
        "_Reader.tell": {
            "name": "tell",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Reader.write": {
            "name": "write",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "_ReadContext.__init__": {
            "name": "__init__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "progress": [],
                "reader": []
            }
        },
        "_ReadContext.__enter__": {
            "name": "__enter__",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ReadContext.__exit__": {
            "name": "__exit__",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "ProgressColumn.__init__": {
            "name": "__init__",
            "location": 496,
            "return": [],
            "arguments": {
                "self": [],
                "table_column": []
            }
        },
        "ProgressColumn.get_table_column": {
            "name": "get_table_column",
            "location": 501,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProgressColumn.__call__": {
            "name": "__call__",
            "location": 505,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "ProgressColumn.render": {
            "name": "render",
            "location": 529,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "RenderableColumn.__init__": {
            "name": "__init__",
            "location": 540,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": []
            }
        },
        "RenderableColumn.render": {
            "name": "render",
            "location": 546,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "SpinnerColumn.__init__": {
            "name": "__init__",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "spinner_name": [],
                "style": [],
                "speed": [],
                "finished_text": [],
                "table_column": []
            }
        },
        "SpinnerColumn.set_spinner": {
            "name": "set_spinner",
            "location": 576,
            "return": [],
            "arguments": {
                "self": [],
                "spinner_name": [],
                "spinner_style": [],
                "speed": []
            }
        },
        "SpinnerColumn.render": {
            "name": "render",
            "location": 591,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TextColumn.__init__": {
            "name": "__init__",
            "location": 603,
            "return": [],
            "arguments": {
                "self": [],
                "text_format": [],
                "style": [],
                "justify": [],
                "markup": [],
                "highlighter": [],
                "table_column": []
            }
        },
        "TextColumn.render": {
            "name": "render",
            "location": 619,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "BarColumn.__init__": {
            "name": "__init__",
            "location": 641,
            "return": [],
            "arguments": {
                "self": [],
                "bar_width": [],
                "style": [],
                "complete_style": [],
                "finished_style": [],
                "pulse_style": [],
                "table_column": []
            }
        },
        "BarColumn.render": {
            "name": "render",
            "location": 657,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TimeElapsedColumn.render": {
            "name": "render",
            "location": 675,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TaskProgressColumn.__init__": {
            "name": "__init__",
            "location": 698,
            "return": [],
            "arguments": {
                "self": [],
                "text_format": [],
                "text_format_no_percentage": [],
                "style": [],
                "justify": [],
                "markup": [],
                "highlighter": [],
                "table_column": [],
                "show_speed": []
            }
        },
        "TaskProgressColumn.render_speed": {
            "name": "render_speed",
            "location": 722,
            "return": [],
            "arguments": {
                "cls": [],
                "speed": []
            }
        },
        "TaskProgressColumn.render": {
            "name": "render",
            "location": 741,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TimeRemainingColumn.__init__": {
            "name": "__init__",
            "location": 768,
            "return": [],
            "arguments": {
                "self": [],
                "compact": [],
                "elapsed_when_finished": [],
                "table_column": []
            }
        },
        "TimeRemainingColumn.render": {
            "name": "render",
            "location": 778,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "FileSizeColumn.render": {
            "name": "render",
            "location": 808,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TotalFileSizeColumn.render": {
            "name": "render",
            "location": 817,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "MofNCompleteColumn.__init__": {
            "name": "__init__",
            "location": 835,
            "return": [],
            "arguments": {
                "self": [],
                "separator": [],
                "table_column": []
            }
        },
        "MofNCompleteColumn.render": {
            "name": "render",
            "location": 839,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "DownloadColumn.__init__": {
            "name": "__init__",
            "location": 857,
            "return": [],
            "arguments": {
                "self": [],
                "binary_units": [],
                "table_column": []
            }
        },
        "DownloadColumn.render": {
            "name": "render",
            "location": 863,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TransferSpeedColumn.render": {
            "name": "render",
            "location": 902,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "Task.get_time": {
            "name": "get_time",
            "location": 968,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.started": {
            "name": "started",
            "location": 973,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.remaining": {
            "name": "remaining",
            "location": 978,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.elapsed": {
            "name": "elapsed",
            "location": 985,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.finished": {
            "name": "finished",
            "location": 994,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.percentage": {
            "name": "percentage",
            "location": 999,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.speed": {
            "name": "speed",
            "location": 1008,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.time_remaining": {
            "name": "time_remaining",
            "location": 1026,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task._reset": {
            "name": "_reset",
            "location": 1039,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.__init__": {
            "name": "__init__",
            "location": 1062,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.get_default_columns": {
            "name": "get_default_columns",
            "location": 1099,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Progress.console": {
            "name": "console",
            "location": 1130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.tasks": {
            "name": "tasks",
            "location": 1134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.task_ids": {
            "name": "task_ids",
            "location": 1140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.finished": {
            "name": "finished",
            "location": 1146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.start": {
            "name": "start",
            "location": 1153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.stop": {
            "name": "stop",
            "location": 1158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.__enter__": {
            "name": "__enter__",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.__exit__": {
            "name": "__exit__",
            "location": 1168,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "Progress.track": {
            "name": "track",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": [],
                "sequence": [],
                "total": [],
                "task_id": [],
                "description": [],
                "update_period": []
            }
        },
        "Progress.wrap_file": {
            "name": "wrap_file",
            "location": 1222,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "total": []
            }
        },
        "Progress.open": {
            "name": "open",
            "location": 1296,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "mode": [],
                "buffering": [],
                "encoding": [],
                "errors": [],
                "newline": []
            }
        },
        "Progress.start_task": {
            "name": "start_task",
            "location": 1373,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "Progress.stop_task": {
            "name": "stop_task",
            "location": 1387,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "Progress.update": {
            "name": "update",
            "location": 1402,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "Progress.reset": {
            "name": "reset",
            "location": 1463,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "Progress.advance": {
            "name": "advance",
            "location": 1502,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": [],
                "advance": []
            }
        },
        "Progress.refresh": {
            "name": "refresh",
            "location": 1532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.get_renderable": {
            "name": "get_renderable",
            "location": 1537,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.get_renderables": {
            "name": "get_renderables",
            "location": 1542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.make_tasks_table": {
            "name": "make_tasks_table",
            "location": 1547,
            "return": [],
            "arguments": {
                "self": [],
                "tasks": []
            }
        },
        "Progress.__rich__": {
            "name": "__rich__",
            "location": 1580,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Progress.add_task": {
            "name": "add_task",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": [],
                "description": [],
                "start": [],
                "total": [],
                "completed": [],
                "visible": []
            }
        },
        "Progress.remove_task": {
            "name": "remove_task",
            "location": 1628,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/progress_bar.py": {
        "ProgressBar.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "total": [],
                "completed": [],
                "width": [],
                "pulse": [],
                "style": [],
                "complete_style": [],
                "finished_style": [],
                "pulse_style": [],
                "animation_time": []
            }
        },
        "ProgressBar.__repr__": {
            "name": "__repr__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProgressBar.percentage_completed": {
            "name": "percentage_completed",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProgressBar._get_pulse_segments": {
            "name": "_get_pulse_segments",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "fore_style": [],
                "back_style": [],
                "color_system": [],
                "no_color": [],
                "ascii": []
            }
        },
        "ProgressBar.update": {
            "name": "update",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "completed": [],
                "total": []
            }
        },
        "ProgressBar._render_pulse": {
            "name": "_render_pulse",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "width": [],
                "ascii": []
            }
        },
        "ProgressBar.__rich_console__": {
            "name": "__rich_console__",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "ProgressBar.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/prompt.py": {
        "InvalidResponse.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "InvalidResponse.__rich__": {
            "name": "__rich__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PromptBase.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "prompt": []
            }
        },
        "PromptBase.ask": {
            "name": "ask",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": [],
                "prompt": []
            }
        },
        "PromptBase.render_default": {
            "name": "render_default",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "PromptBase.make_prompt": {
            "name": "make_prompt",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "PromptBase.get_input": {
            "name": "get_input",
            "location": 186,
            "return": [],
            "arguments": {
                "cls": [],
                "console": [],
                "prompt": [],
                "password": [],
                "stream": []
            }
        },
        "PromptBase.check_choice": {
            "name": "check_choice",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PromptBase.process_response": {
            "name": "process_response",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PromptBase.on_validate_error": {
            "name": "on_validate_error",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "error": []
            }
        },
        "PromptBase.pre_prompt": {
            "name": "pre_prompt",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PromptBase.__call__": {
            "name": "__call__",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.render_default": {
            "name": "render_default",
            "location": 335,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "Confirm.process_response": {
            "name": "process_response",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/protocol.py": {
        "is_renderable": {
            "name": "is_renderable",
            "location": 10,
            "return": [],
            "arguments": {
                "check_object": []
            }
        },
        "rich_cast": {
            "name": "rich_cast",
            "location": 19,
            "return": [],
            "arguments": {
                "renderable": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/region.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/repr.py": {
        "auto": {
            "name": "auto",
            "location": 40,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "rich_repr": {
            "name": "rich_repr",
            "location": 117,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "auto.do_replace": {
            "name": "do_replace",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": [],
                "angular": []
            }
        },
        "auto.do_replace.auto_repr": {
            "name": "auto_repr",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "auto.do_replace.auto_rich_repr": {
            "name": "auto_rich_repr",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Foo.__rich_repr__": {
            "name": "__rich_repr__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/rule.py": {
        "Rule.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "Rule.__repr__": {
            "name": "__repr__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Rule.__rich_console__": {
            "name": "__rich_console__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Rule._rule_line": {
            "name": "_rule_line",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "chars_len": [],
                "width": []
            }
        },
        "Rule.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/scope.py": {
        "render_scope": {
            "name": "render_scope",
            "location": 14,
            "return": [],
            "arguments": {
                "scope": []
            }
        },
        "render_scope.sort_items": {
            "name": "sort_items",
            "location": 41,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "test": {
            "name": "test",
            "location": 75,
            "return": [],
            "arguments": {
                "foo": [],
                "bar": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/screen.py": {
        "Screen.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Screen.__rich_console__": {
            "name": "__rich_console__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/segment.py": {
        "Segment.cell_length": {
            "name": "cell_length",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Segment.__rich_repr__": {
            "name": "__rich_repr__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Segment.__bool__": {
            "name": "__bool__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Segment.is_control": {
            "name": "is_control",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Segment._split_cells": {
            "name": "_split_cells",
            "location": 111,
            "return": [],
            "arguments": {
                "cls": [],
                "segment": [],
                "cut": []
            }
        },
        "Segment.split_cells": {
            "name": "split_cells",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "cut": []
            }
        },
        "Segment.line": {
            "name": "line",
            "location": 172,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Segment.apply_style": {
            "name": "apply_style",
            "location": 177,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": [],
                "style": [],
                "post_style": []
            }
        },
        "Segment.filter_control": {
            "name": "filter_control",
            "location": 218,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": [],
                "is_control": []
            }
        },
        "Segment.split_lines": {
            "name": "split_lines",
            "location": 237,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": []
            }
        },
        "Segment.split_and_crop_lines": {
            "name": "split_and_crop_lines",
            "location": 266,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": [],
                "length": [],
                "style": [],
                "pad": [],
                "include_new_lines": []
            }
        },
        "Segment.adjust_line_length": {
            "name": "adjust_line_length",
            "location": 313,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [],
                "length": [],
                "style": [],
                "pad": []
            }
        },
        "Segment.get_line_length": {
            "name": "get_line_length",
            "location": 358,
            "return": [],
            "arguments": {
                "cls": [],
                "line": []
            }
        },
        "Segment.get_shape": {
            "name": "get_shape",
            "location": 371,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": []
            }
        },
        "Segment.set_shape": {
            "name": "set_shape",
            "location": 385,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": [],
                "width": [],
                "height": [],
                "style": [],
                "new_lines": []
            }
        },
        "Segment.align_top": {
            "name": "align_top",
            "location": 421,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": [],
                "width": [],
                "height": [],
                "style": [],
                "new_lines": []
            }
        },
        "Segment.align_bottom": {
            "name": "align_bottom",
            "location": 450,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": [],
                "width": [],
                "height": [],
                "style": [],
                "new_lines": []
            }
        },
        "Segment.align_middle": {
            "name": "align_middle",
            "location": 479,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": [],
                "width": [],
                "height": [],
                "style": [],
                "new_lines": []
            }
        },
        "Segment.simplify": {
            "name": "simplify",
            "location": 510,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": []
            }
        },
        "Segment.strip_links": {
            "name": "strip_links",
            "location": 537,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": []
            }
        },
        "Segment.strip_styles": {
            "name": "strip_styles",
            "location": 554,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": []
            }
        },
        "Segment.remove_color": {
            "name": "remove_color",
            "location": 567,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": []
            }
        },
        "Segment.divide": {
            "name": "divide",
            "location": 589,
            "return": [],
            "arguments": {
                "cls": [],
                "segments": [],
                "cuts": []
            }
        },
        "Segments.__init__": {
            "name": "__init__",
            "location": 667,
            "return": [],
            "arguments": {
                "self": [],
                "segments": [],
                "new_lines": []
            }
        },
        "Segments.__rich_console__": {
            "name": "__rich_console__",
            "location": 671,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "SegmentLines.__init__": {
            "name": "__init__",
            "location": 684,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "new_lines": []
            }
        },
        "SegmentLines.__rich_console__": {
            "name": "__rich_console__",
            "location": 695,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/spinner.py": {
        "Spinner.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "text": []
            }
        },
        "Spinner.__rich_console__": {
            "name": "__rich_console__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Spinner.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Spinner.render": {
            "name": "render",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Spinner.update": {
            "name": "update",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/status.py": {
        "Status.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "Status.renderable": {
            "name": "renderable",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.console": {
            "name": "console",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.update": {
            "name": "update",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "Status.start": {
            "name": "start",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.stop": {
            "name": "stop",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.__rich__": {
            "name": "__rich__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.__enter__": {
            "name": "__enter__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Status.__exit__": {
            "name": "__exit__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/style.py": {
        "_Bit.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "bit_no": []
            }
        },
        "_Bit.__get__": {
            "name": "__get__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "objtype": []
            }
        },
        "Style.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.null": {
            "name": "null",
            "location": 197,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Style.from_color": {
            "name": "from_color",
            "location": 202,
            "return": [],
            "arguments": {
                "cls": [],
                "color": [],
                "bgcolor": []
            }
        },
        "Style.from_meta": {
            "name": "from_meta",
            "location": 226,
            "return": [],
            "arguments": {
                "cls": [],
                "meta": []
            }
        },
        "Style.on": {
            "name": "on",
            "location": 247,
            "return": [],
            "arguments": {
                "cls": [],
                "meta": []
            }
        },
        "Style.link_id": {
            "name": "link_id",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.__str__": {
            "name": "__str__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.__bool__": {
            "name": "__bool__",
            "location": 329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style._make_ansi_codes": {
            "name": "_make_ansi_codes",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "color_system": []
            }
        },
        "Style.normalize": {
            "name": "normalize",
            "location": 378,
            "return": [],
            "arguments": {
                "cls": [],
                "style": []
            }
        },
        "Style.pick_first": {
            "name": "pick_first",
            "location": 394,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Style.__rich_repr__": {
            "name": "__rich_repr__",
            "location": 401,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.__eq__": {
            "name": "__eq__",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Style.__ne__": {
            "name": "__ne__",
            "location": 425,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Style.__hash__": {
            "name": "__hash__",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.color": {
            "name": "color",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.bgcolor": {
            "name": "bgcolor",
            "location": 451,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.link": {
            "name": "link",
            "location": 456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.transparent_background": {
            "name": "transparent_background",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.background_style": {
            "name": "background_style",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.meta": {
            "name": "meta",
            "location": 471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.without_color": {
            "name": "without_color",
            "location": 476,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.parse": {
            "name": "parse",
            "location": 496,
            "return": [],
            "arguments": {
                "cls": [],
                "style_definition": []
            }
        },
        "Style.get_html_style": {
            "name": "get_html_style",
            "location": 562,
            "return": [],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "Style.combine": {
            "name": "combine",
            "location": 599,
            "return": [],
            "arguments": {
                "cls": [],
                "styles": []
            }
        },
        "Style.chain": {
            "name": "chain",
            "location": 612,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Style.copy": {
            "name": "copy",
            "location": 624,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.update_link": {
            "name": "update_link",
            "location": 646,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Style.render": {
            "name": "render",
            "location": 669,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Style.test": {
            "name": "test",
            "location": 695,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Style._add": {
            "name": "_add",
            "location": 708,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "Style.__add__": {
            "name": "__add__",
            "location": 732,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "StyleStack.__init__": {
            "name": "__init__",
            "location": 745,
            "return": [],
            "arguments": {
                "self": [],
                "default_style": []
            }
        },
        "StyleStack.__repr__": {
            "name": "__repr__",
            "location": 748,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StyleStack.current": {
            "name": "current",
            "location": 752,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StyleStack.push": {
            "name": "push",
            "location": 756,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "StyleStack.pop": {
            "name": "pop",
            "location": 764,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Style.__init__._make_color": {
            "name": "_make_color",
            "location": 146,
            "return": [],
            "arguments": {
                "color": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/styled.py": {
        "Styled.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "renderable": [],
                "style": []
            }
        },
        "Styled.__rich_console__": {
            "name": "__rich_console__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Styled.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/syntax.py": {
        "_get_code_index_for_syntax_position": {
            "name": "_get_code_index_for_syntax_position",
            "location": 789,
            "return": [],
            "arguments": {
                "newlines_offsets": [],
                "position": []
            }
        },
        "SyntaxTheme.get_style_for_token": {
            "name": "get_style_for_token",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "token_type": []
            }
        },
        "SyntaxTheme.get_background_style": {
            "name": "get_background_style",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PygmentsSyntaxTheme.__init__": {
            "name": "__init__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "PygmentsSyntaxTheme.get_style_for_token": {
            "name": "get_style_for_token",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "token_type": []
            }
        },
        "PygmentsSyntaxTheme.get_background_style": {
            "name": "get_background_style",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ANSISyntaxTheme.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "style_map": []
            }
        },
        "ANSISyntaxTheme.get_style_for_token": {
            "name": "get_style_for_token",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "token_type": []
            }
        },
        "ANSISyntaxTheme.get_background_style": {
            "name": "get_background_style",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syntax.get_theme": {
            "name": "get_theme",
            "location": 250,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "Syntax.__init__": {
            "name": "__init__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "lexer": []
            }
        },
        "Syntax.from_path": {
            "name": "from_path",
            "location": 300,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "encoding": [],
                "lexer": [],
                "theme": [],
                "dedent": [],
                "line_numbers": [],
                "line_range": [],
                "start_line": [],
                "highlight_lines": [],
                "code_width": [],
                "tab_size": [],
                "word_wrap": [],
                "background_color": [],
                "indent_guides": [],
                "padding": []
            }
        },
        "Syntax.guess_lexer": {
            "name": "guess_lexer",
            "location": 364,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "code": []
            }
        },
        "Syntax._get_base_style": {
            "name": "_get_base_style",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syntax._get_token_color": {
            "name": "_get_token_color",
            "location": 410,
            "return": [],
            "arguments": {
                "self": [],
                "token_type": []
            }
        },
        "Syntax.lexer": {
            "name": "lexer",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syntax.highlight": {
            "name": "highlight",
            "location": 441,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "line_range": []
            }
        },
        "Syntax.stylize_range": {
            "name": "stylize_range",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "style": [],
                "start": [],
                "end": []
            }
        },
        "Syntax._get_line_numbers_color": {
            "name": "_get_line_numbers_color",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "blend": []
            }
        },
        "Syntax._numbers_column_width": {
            "name": "_numbers_column_width",
            "location": 553,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syntax._get_number_styles": {
            "name": "_get_number_styles",
            "location": 563,
            "return": [],
            "arguments": {
                "self": [],
                "console": []
            }
        },
        "Syntax.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 586,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Syntax.__rich_console__": {
            "name": "__rich_console__",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Syntax._get_syntax": {
            "name": "_get_syntax",
            "location": 606,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Syntax._apply_stylized_ranges": {
            "name": "_apply_stylized_ranges",
            "location": 738,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Syntax._process_code": {
            "name": "_process_code",
            "location": 768,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "Syntax.highlight.line_tokenize": {
            "name": "line_tokenize",
            "location": 479,
            "return": [],
            "arguments": {}
        },
        "Syntax.highlight.tokens_to_spans": {
            "name": "tokens_to_spans",
            "location": 488,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/table.py": {
        "Column.copy": {
            "name": "copy",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Column.cells": {
            "name": "cells",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Column.flexible": {
            "name": "flexible",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Table.__init__": {
            "name": "__init__",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Table.grid": {
            "name": "grid",
            "location": 252,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Table.expand": {
            "name": "expand",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "Table._extra_width": {
            "name": "_extra_width",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Table.row_count": {
            "name": "row_count",
            "location": 305,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Table.get_row_style": {
            "name": "get_row_style",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "index": []
            }
        },
        "Table.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Table.padding": {
            "name": "padding",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "padding": []
            }
        },
        "Table.add_column": {
            "name": "add_column",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "footer": []
            }
        },
        "Table.add_row": {
            "name": "add_row",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Table.__rich_console__": {
            "name": "__rich_console__",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Table._calculate_column_widths": {
            "name": "_calculate_column_widths",
            "location": 513,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Table._collapse_widths": {
            "name": "_collapse_widths",
            "location": 578,
            "return": [],
            "arguments": {
                "cls": [],
                "widths": [],
                "wrapable": [],
                "max_width": []
            }
        },
        "Table._get_cells": {
            "name": "_get_cells",
            "location": 616,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "column_index": [],
                "column": []
            }
        },
        "Table._get_padding_width": {
            "name": "_get_padding_width",
            "location": 689,
            "return": [],
            "arguments": {
                "self": [],
                "column_index": []
            }
        },
        "Table._measure_column": {
            "name": "_measure_column",
            "location": 697,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": [],
                "column": []
            }
        },
        "Table._render": {
            "name": "_render",
            "location": 737,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": [],
                "widths": []
            }
        },
        "Table.add_row.add_cell": {
            "name": "add_cell",
            "location": 436,
            "return": [],
            "arguments": {
                "column": [],
                "renderable": []
            }
        },
        "Table.__rich_console__.render_annotation": {
            "name": "render_annotation",
            "location": 487,
            "return": [],
            "arguments": {
                "text": [],
                "style": [],
                "justify": []
            }
        },
        "Table._get_cells.get_padding": {
            "name": "get_padding",
            "location": 631,
            "return": [],
            "arguments": {
                "first_row": [],
                "last_row": []
            }
        },
        "header": {
            "name": "header",
            "location": 957,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Table._render.align_cell": {
            "name": "align_cell",
            "location": 828,
            "return": [],
            "arguments": {
                "cell": [],
                "vertical": [],
                "width": [],
                "style": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/terminal_theme.py": {
        "TerminalTheme.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "background": [],
                "foreground": [],
                "normal": [],
                "bright": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/text.py": {
        "Span.__repr__": {
            "name": "__repr__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Span.__bool__": {
            "name": "__bool__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Span.split": {
            "name": "split",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "Span.move": {
            "name": "move",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "Span.right_crop": {
            "name": "right_crop",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "Text.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "style": []
            }
        },
        "Text.__len__": {
            "name": "__len__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.__bool__": {
            "name": "__bool__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.__str__": {
            "name": "__str__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.__repr__": {
            "name": "__repr__",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.__add__": {
            "name": "__add__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Text.__eq__": {
            "name": "__eq__",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Text.__contains__": {
            "name": "__contains__",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Text.__getitem__": {
            "name": "__getitem__",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "slice": []
            }
        },
        "Text.cell_len": {
            "name": "cell_len",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.markup": {
            "name": "markup",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.from_markup": {
            "name": "from_markup",
            "location": 247,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "Text.from_ansi": {
            "name": "from_ansi",
            "location": 279,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "Text.styled": {
            "name": "styled",
            "location": 317,
            "return": [],
            "arguments": {
                "cls": [],
                "text": [],
                "style": []
            }
        },
        "Text.assemble": {
            "name": "assemble",
            "location": 342,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Text.plain": {
            "name": "plain",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "new_text": []
            }
        },
        "Text.spans": {
            "name": "spans",
            "location": 410,
            "return": [],
            "arguments": {
                "self": [],
                "spans": []
            }
        },
        "Text.blank_copy": {
            "name": "blank_copy",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "plain": []
            }
        },
        "Text.copy": {
            "name": "copy",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.stylize": {
            "name": "stylize",
            "location": 441,
            "return": [],
            "arguments": {
                "self": [],
                "style": [],
                "start": [],
                "end": []
            }
        },
        "Text.apply_meta": {
            "name": "apply_meta",
            "location": 468,
            "return": [],
            "arguments": {
                "self": [],
                "meta": [],
                "start": [],
                "end": []
            }
        },
        "Text.on": {
            "name": "on",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "meta": []
            }
        },
        "Text.remove_suffix": {
            "name": "remove_suffix",
            "location": 502,
            "return": [],
            "arguments": {
                "self": [],
                "suffix": []
            }
        },
        "Text.get_style_at_offset": {
            "name": "get_style_at_offset",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "offset": []
            }
        },
        "Text.highlight_regex": {
            "name": "highlight_regex",
            "location": 531,
            "return": [],
            "arguments": {
                "self": [],
                "re_highlight": [],
                "style": []
            }
        },
        "Text.highlight_words": {
            "name": "highlight_words",
            "location": 569,
            "return": [],
            "arguments": {
                "self": [],
                "words": [],
                "style": []
            }
        },
        "Text.rstrip": {
            "name": "rstrip",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.rstrip_end": {
            "name": "rstrip_end",
            "location": 602,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "Text.set_length": {
            "name": "set_length",
            "location": 616,
            "return": [],
            "arguments": {
                "self": [],
                "new_length": []
            }
        },
        "Text.__rich_console__": {
            "name": "__rich_console__",
            "location": 625,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Text.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 644,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Text.render": {
            "name": "render",
            "location": 656,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "end": []
            }
        },
        "Text.join": {
            "name": "join",
            "location": 715,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        },
        "Text.expand_tabs": {
            "name": "expand_tabs",
            "location": 754,
            "return": [],
            "arguments": {
                "self": [],
                "tab_size": []
            }
        },
        "Text.truncate": {
            "name": "truncate",
            "location": 788,
            "return": [],
            "arguments": {
                "self": [],
                "max_width": []
            }
        },
        "Text._trim_spans": {
            "name": "_trim_spans",
            "location": 815,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.pad": {
            "name": "pad",
            "location": 829,
            "return": [],
            "arguments": {
                "self": [],
                "count": [],
                "character": []
            }
        },
        "Text.pad_left": {
            "name": "pad_left",
            "location": 845,
            "return": [],
            "arguments": {
                "self": [],
                "count": [],
                "character": []
            }
        },
        "Text.pad_right": {
            "name": "pad_right",
            "location": 861,
            "return": [],
            "arguments": {
                "self": [],
                "count": [],
                "character": []
            }
        },
        "Text.align": {
            "name": "align",
            "location": 872,
            "return": [],
            "arguments": {
                "self": [],
                "align": [],
                "width": [],
                "character": []
            }
        },
        "Text.append": {
            "name": "append",
            "location": 892,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "style": []
            }
        },
        "Text.append_text": {
            "name": "append_text",
            "location": 936,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Text.append_tokens": {
            "name": "append_tokens",
            "location": 955,
            "return": [],
            "arguments": {
                "self": [],
                "tokens": []
            }
        },
        "Text.copy_styles": {
            "name": "copy_styles",
            "location": 978,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Text.split": {
            "name": "split",
            "location": 986,
            "return": [],
            "arguments": {
                "self": [],
                "separator": []
            }
        },
        "Text.divide": {
            "name": "divide",
            "location": 1030,
            "return": [],
            "arguments": {
                "self": [],
                "offsets": []
            }
        },
        "Text.right_crop": {
            "name": "right_crop",
            "location": 1110,
            "return": [],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "Text.wrap": {
            "name": "wrap",
            "location": 1126,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "width": []
            }
        },
        "Text.fit": {
            "name": "fit",
            "location": 1175,
            "return": [],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "Text.detect_indentation": {
            "name": "detect_indentation",
            "location": 1191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.with_indent_guides": {
            "name": "with_indent_guides",
            "location": 1212,
            "return": [],
            "arguments": {
                "self": [],
                "indent_size": []
            }
        },
        "Text.__getitem__.get_text_at": {
            "name": "get_text_at",
            "location": 186,
            "return": [],
            "arguments": {
                "offset": []
            }
        },
        "Text.render.get_current_style": {
            "name": "get_current_style",
            "location": 695,
            "return": [],
            "arguments": {}
        },
        "Text.join.iter_text": {
            "name": "iter_text",
            "location": 727,
            "return": [],
            "arguments": {}
        },
        "Text.split.flatten_spans": {
            "name": "flatten_spans",
            "location": 1015,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/theme.py": {
        "Theme.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "styles": [],
                "inherit": []
            }
        },
        "Theme.config": {
            "name": "config",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Theme.from_file": {
            "name": "from_file",
            "location": 39,
            "return": [],
            "arguments": {
                "cls": [],
                "config_file": [],
                "source": [],
                "inherit": []
            }
        },
        "Theme.read": {
            "name": "read",
            "location": 59,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "inherit": []
            }
        },
        "ThemeStack.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "ThemeStack.push_theme": {
            "name": "push_theme",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "theme": [],
                "inherit": []
            }
        },
        "ThemeStack.pop_theme": {
            "name": "pop_theme",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/themes.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/traceback.py": {
        "install": {
            "name": "install",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "install.excepthook": {
            "name": "excepthook",
            "location": 70,
            "return": [],
            "arguments": {
                "type_": [],
                "value": [],
                "traceback": []
            }
        },
        "install.ipy_excepthook_closure": {
            "name": "ipy_excepthook_closure",
            "location": 91,
            "return": [],
            "arguments": {
                "ip": []
            }
        },
        "Traceback.__init__": {
            "name": "__init__",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "trace": [],
                "width": [],
                "extra_lines": [],
                "theme": [],
                "word_wrap": [],
                "show_locals": [],
                "indent_guides": [],
                "locals_max_length": [],
                "locals_max_string": [],
                "suppress": [],
                "max_frames": []
            }
        },
        "Traceback.from_exception": {
            "name": "from_exception",
            "location": 255,
            "return": [],
            "arguments": {
                "cls": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "width": [],
                "extra_lines": [],
                "theme": [],
                "word_wrap": [],
                "show_locals": [],
                "indent_guides": [],
                "locals_max_length": [],
                "locals_max_string": [],
                "suppress": [],
                "max_frames": []
            }
        },
        "Traceback.extract": {
            "name": "extract",
            "location": 310,
            "return": [],
            "arguments": {
                "cls": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": [],
                "show_locals": [],
                "locals_max_length": [],
                "locals_max_string": []
            }
        },
        "Traceback.__rich_console__": {
            "name": "__rich_console__",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Traceback._render_syntax_error": {
            "name": "_render_syntax_error",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "syntax_error": []
            }
        },
        "Traceback._guess_lexer": {
            "name": "_guess_lexer",
            "location": 517,
            "return": [],
            "arguments": {
                "cls": [],
                "filename": [],
                "code": []
            }
        },
        "Traceback._render_stack": {
            "name": "_render_stack",
            "location": 533,
            "return": [],
            "arguments": {
                "self": [],
                "stack": []
            }
        },
        "bar": {
            "name": "bar",
            "location": 652,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "foo": {
            "name": "foo",
            "location": 656,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "error": {
            "name": "error",
            "location": 669,
            "return": [],
            "arguments": {}
        },
        "install.ipy_excepthook_closure.ipy_show_traceback": {
            "name": "ipy_show_traceback",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "install.ipy_excepthook_closure.ipy_display_traceback": {
            "name": "ipy_display_traceback",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "Traceback.extract.safe_str": {
            "name": "safe_str",
            "location": 339,
            "return": [],
            "arguments": {
                "_object": []
            }
        },
        "Traceback._render_stack.read_code": {
            "name": "read_code",
            "location": 538,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "Traceback._render_stack.render_locals": {
            "name": "render_locals",
            "location": 556,
            "return": [],
            "arguments": {
                "frame": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/tree.py": {
        "Tree.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "Tree.add": {
            "name": "add",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "Tree.__rich_console__": {
            "name": "__rich_console__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Tree.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "Tree.__rich_console__.make_guide": {
            "name": "make_guide",
            "location": 94,
            "return": [],
            "arguments": {
                "index": [],
                "style": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_cell_widths.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_emoji_codes.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_emoji_replace.py": {
        "_emoji_replace": {
            "name": "_emoji_replace",
            "location": 12,
            "return": [],
            "arguments": {
                "text": [],
                "default_variant": [],
                "_emoji_sub": []
            }
        },
        "_emoji_replace.do_replace": {
            "name": "do_replace",
            "location": 23,
            "return": [],
            "arguments": {
                "match": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_export_format.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_extension.py": {
        "load_ipython_extension": {
            "name": "load_ipython_extension",
            "location": 4,
            "return": [],
            "arguments": {
                "ip": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_inspect.py": {
        "_first_paragraph": {
            "name": "_first_paragraph",
            "location": 17,
            "return": [],
            "arguments": {
                "doc": []
            }
        },
        "get_object_types_mro": {
            "name": "get_object_types_mro",
            "location": 238,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "get_object_types_mro_as_strings": {
            "name": "get_object_types_mro_as_strings",
            "location": 247,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "is_object_one_of_types": {
            "name": "is_object_one_of_types",
            "location": 260,
            "return": [],
            "arguments": {
                "obj": [],
                "fully_qualified_types_names": []
            }
        },
        "Inspect.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Inspect._make_title": {
            "name": "_make_title",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Inspect.__rich__": {
            "name": "__rich__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Inspect._get_signature": {
            "name": "_get_signature",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "obj": []
            }
        },
        "Inspect._render": {
            "name": "_render",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Inspect._get_formatted_doc": {
            "name": "_get_formatted_doc",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "object_": []
            }
        },
        "Inspect._render.sort_items": {
            "name": "sort_items",
            "location": 126,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "Inspect._render.safe_getattr": {
            "name": "safe_getattr",
            "location": 130,
            "return": [],
            "arguments": {
                "attr_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_log_render.py": {
        "LogRender.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "show_time": [],
                "show_level": [],
                "show_path": [],
                "time_format": [],
                "omit_repeated_times": [],
                "level_width": []
            }
        },
        "LogRender.__call__": {
            "name": "__call__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "renderables": [],
                "log_time": [],
                "time_format": [],
                "level": [],
                "path": [],
                "line_no": [],
                "link_path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_loop.py": {
        "loop_first": {
            "name": "loop_first",
            "location": 6,
            "return": [],
            "arguments": {
                "values": []
            }
        },
        "loop_last": {
            "name": "loop_last",
            "location": 18,
            "return": [],
            "arguments": {
                "values": []
            }
        },
        "loop_first_last": {
            "name": "loop_first_last",
            "location": 31,
            "return": [],
            "arguments": {
                "values": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_palettes.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_pick.py": {
        "pick_bool": {
            "name": "pick_bool",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_ratio.py": {
        "ratio_resolve": {
            "name": "ratio_resolve",
            "location": 20,
            "return": [],
            "arguments": {
                "total": [],
                "edges": []
            }
        },
        "ratio_reduce": {
            "name": "ratio_reduce",
            "location": 81,
            "return": [],
            "arguments": {
                "total": [],
                "ratios": [],
                "maximums": [],
                "values": []
            }
        },
        "ratio_distribute": {
            "name": "ratio_distribute",
            "location": 113,
            "return": [],
            "arguments": {
                "total": [],
                "ratios": [],
                "minimums": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_spinners.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_stack.py": {
        "Stack.top": {
            "name": "top",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.push": {
            "name": "push",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_timer.py": {
        "timer": {
            "name": "timer",
            "location": 13,
            "return": [],
            "arguments": {
                "subject": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_win32_console.py": {
        "GetStdHandle": {
            "name": "GetStdHandle",
            "location": 77,
            "return": [],
            "arguments": {
                "handle": []
            }
        },
        "GetConsoleMode": {
            "name": "GetConsoleMode",
            "location": 94,
            "return": [],
            "arguments": {
                "std_handle": []
            }
        },
        "FillConsoleOutputCharacter": {
            "name": "FillConsoleOutputCharacter",
            "location": 127,
            "return": [],
            "arguments": {
                "std_handle": [],
                "char": [],
                "length": [],
                "start": []
            }
        },
        "FillConsoleOutputAttribute": {
            "name": "FillConsoleOutputAttribute",
            "location": 168,
            "return": [],
            "arguments": {
                "std_handle": [],
                "attributes": [],
                "length": [],
                "start": []
            }
        },
        "SetConsoleTextAttribute": {
            "name": "SetConsoleTextAttribute",
            "location": 203,
            "return": [],
            "arguments": {
                "std_handle": [],
                "attributes": []
            }
        },
        "GetConsoleScreenBufferInfo": {
            "name": "GetConsoleScreenBufferInfo",
            "location": 227,
            "return": [],
            "arguments": {
                "std_handle": []
            }
        },
        "SetConsoleCursorPosition": {
            "name": "SetConsoleCursorPosition",
            "location": 251,
            "return": [],
            "arguments": {
                "std_handle": [],
                "coords": []
            }
        },
        "GetConsoleCursorInfo": {
            "name": "GetConsoleCursorInfo",
            "location": 274,
            "return": [],
            "arguments": {
                "std_handle": [],
                "cursor_info": []
            }
        },
        "SetConsoleCursorInfo": {
            "name": "SetConsoleCursorInfo",
            "location": 298,
            "return": [],
            "arguments": {
                "std_handle": [],
                "cursor_info": []
            }
        },
        "SetConsoleTitle": {
            "name": "SetConsoleTitle",
            "location": 318,
            "return": [],
            "arguments": {
                "title": []
            }
        },
        "WindowsCoordinates.from_param": {
            "name": "from_param",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "LegacyWindowsTerm.__init__": {
            "name": "__init__",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "LegacyWindowsTerm.cursor_position": {
            "name": "cursor_position",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.screen_size": {
            "name": "screen_size",
            "location": 386,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.write_text": {
            "name": "write_text",
            "location": 397,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "LegacyWindowsTerm.write_styled": {
            "name": "write_styled",
            "location": 406,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "style": []
            }
        },
        "LegacyWindowsTerm.move_cursor_to": {
            "name": "move_cursor_to",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "new_position": []
            }
        },
        "LegacyWindowsTerm.erase_line": {
            "name": "erase_line",
            "location": 455,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.erase_end_of_line": {
            "name": "erase_end_of_line",
            "location": 471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.erase_start_of_line": {
            "name": "erase_start_of_line",
            "location": 485,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.move_cursor_up": {
            "name": "move_cursor_up",
            "location": 494,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.move_cursor_down": {
            "name": "move_cursor_down",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.move_cursor_forward": {
            "name": "move_cursor_forward",
            "location": 515,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.move_cursor_to_column": {
            "name": "move_cursor_to_column",
            "location": 527,
            "return": [],
            "arguments": {
                "self": [],
                "column": []
            }
        },
        "LegacyWindowsTerm.move_cursor_backward": {
            "name": "move_cursor_backward",
            "location": 536,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.hide_cursor": {
            "name": "hide_cursor",
            "location": 548,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.show_cursor": {
            "name": "show_cursor",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyWindowsTerm.set_title": {
            "name": "set_title",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "LegacyWindowsTerm._get_cursor_size": {
            "name": "_get_cursor_size",
            "location": 569,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_windows.py": {
        "get_windows_console_features": {
            "name": "get_windows_console_features",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_windows_renderer.py": {
        "legacy_windows_render": {
            "name": "legacy_windows_render",
            "location": 7,
            "return": [],
            "arguments": {
                "buffer": [],
                "term": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/_wrap.py": {
        "words": {
            "name": "words",
            "location": 10,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "divide_line": {
            "name": "divide_line",
            "location": 20,
            "return": [],
            "arguments": {
                "text": [],
                "width": [],
                "fold": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/__init__.py": {
        "get_console": {
            "name": "get_console",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "reconfigure": {
            "name": "reconfigure",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "print": {
            "name": "print",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "print_json": {
            "name": "print_json",
            "location": 76,
            "return": [],
            "arguments": {
                "json": []
            }
        },
        "inspect": {
            "name": "inspect",
            "location": 119,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/rich/__main__.py": {
        "make_test_card": {
            "name": "make_test_card",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "ColorBox.__rich_console__": {
            "name": "__rich_console__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "ColorBox.__rich_measure__": {
            "name": "__rich_measure__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "console": [],
                "options": []
            }
        },
        "make_test_card.comparison": {
            "name": "comparison",
            "location": 90,
            "return": [],
            "arguments": {
                "renderable1": [],
                "renderable2": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/after.py": {
        "after_nothing": {
            "name": "after_nothing",
            "location": 27,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        },
        "after_log": {
            "name": "after_log",
            "location": 31,
            "return": [],
            "arguments": {
                "logger": [],
                "log_level": [],
                "sec_format": []
            }
        },
        "after_log.log_it": {
            "name": "log_it",
            "location": 38,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/before.py": {
        "before_nothing": {
            "name": "before_nothing",
            "location": 27,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        },
        "before_log": {
            "name": "before_log",
            "location": 31,
            "return": [],
            "arguments": {
                "logger": [],
                "log_level": []
            }
        },
        "before_log.log_it": {
            "name": "log_it",
            "location": 34,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/before_sleep.py": {
        "before_sleep_nothing": {
            "name": "before_sleep_nothing",
            "location": 27,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        },
        "before_sleep_log": {
            "name": "before_sleep_log",
            "location": 31,
            "return": [],
            "arguments": {
                "logger": [],
                "log_level": [],
                "exc_info": []
            }
        },
        "before_sleep_log.log_it": {
            "name": "log_it",
            "location": 38,
            "return": [],
            "arguments": {
                "retry_state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/nap.py": {
        "sleep": {
            "name": "sleep",
            "location": 25,
            "return": [],
            "arguments": {
                "seconds": []
            }
        },
        "sleep_using_event.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "sleep_using_event.__call__": {
            "name": "__call__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/retry.py": {
        "retry_base.__call__": {
            "name": "__call__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_base.__and__": {
            "name": "__and__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "retry_base.__or__": {
            "name": "__or__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_retry_never.__call__": {
            "name": "__call__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "_retry_always.__call__": {
            "name": "__call__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_exception.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "retry_if_exception.__call__": {
            "name": "__call__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_exception_type.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "exception_types": []
            }
        },
        "retry_if_not_exception_type.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "exception_types": []
            }
        },
        "retry_unless_exception_type.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "exception_types": []
            }
        },
        "retry_unless_exception_type.__call__": {
            "name": "__call__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_exception_cause_type.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "exception_types": []
            }
        },
        "retry_if_exception_cause_type.__call__": {
            "name": "__call__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_result.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "retry_if_result.__call__": {
            "name": "__call__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_not_result.__init__": {
            "name": "__init__",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "retry_if_not_result.__call__": {
            "name": "__call__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_exception_message.__init__": {
            "name": "__init__",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "match": []
            }
        },
        "retry_if_not_exception_message.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "match": []
            }
        },
        "retry_if_not_exception_message.__call__": {
            "name": "__call__",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_any.__init__": {
            "name": "__init__",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "retry_any.__call__": {
            "name": "__call__",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_all.__init__": {
            "name": "__init__",
            "location": 236,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "retry_all.__call__": {
            "name": "__call__",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "retry_if_exception_message.__init__.message_fnc": {
            "name": "message_fnc",
            "location": 187,
            "return": [],
            "arguments": {
                "exception": []
            }
        },
        "retry_if_exception_message.__init__.match_fnc": {
            "name": "match_fnc",
            "location": 194,
            "return": [],
            "arguments": {
                "exception": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/stop.py": {
        "stop_base.__call__": {
            "name": "__call__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "stop_base.__and__": {
            "name": "__and__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "stop_base.__or__": {
            "name": "__or__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "stop_any.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "stop_any.__call__": {
            "name": "__call__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "stop_all.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "stop_all.__call__": {
            "name": "__call__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "_stop_never.__call__": {
            "name": "__call__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "stop_when_event_set.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "stop_when_event_set.__call__": {
            "name": "__call__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "stop_after_attempt.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "max_attempt_number": []
            }
        },
        "stop_after_attempt.__call__": {
            "name": "__call__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "stop_after_delay.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "max_delay": []
            }
        },
        "stop_after_delay.__call__": {
            "name": "__call__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/tornadoweb.py": {
        "TornadoRetrying.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": []
            }
        },
        "TornadoRetrying.__call__": {
            "name": "__call__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/wait.py": {
        "to_seconds": {
            "name": "to_seconds",
            "location": 30,
            "return": [],
            "arguments": {
                "wait_unit": []
            }
        },
        "wait_base.__call__": {
            "name": "__call__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_base.__add__": {
            "name": "__add__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "wait_base.__radd__": {
            "name": "__radd__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "wait_fixed.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "wait": []
            }
        },
        "wait_fixed.__call__": {
            "name": "__call__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_none.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "wait_random.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "min": [],
                "max": []
            }
        },
        "wait_random.__call__": {
            "name": "__call__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_combine.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "wait_combine.__call__": {
            "name": "__call__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_chain.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "wait_chain.__call__": {
            "name": "__call__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_incrementing.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "increment": [],
                "max": []
            }
        },
        "wait_incrementing.__call__": {
            "name": "__call__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_exponential.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "multiplier": [],
                "max": [],
                "exp_base": [],
                "min": []
            }
        },
        "wait_exponential.__call__": {
            "name": "__call__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_random_exponential.__call__": {
            "name": "__call__",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "wait_exponential_jitter.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "initial": [],
                "max": [],
                "exp_base": [],
                "jitter": []
            }
        },
        "wait_exponential_jitter.__call__": {
            "name": "__call__",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/_asyncio.py": {
        "AsyncRetrying.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": []
            }
        },
        "AsyncRetrying.__aiter__": {
            "name": "__aiter__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncRetrying.wraps": {
            "name": "wraps",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/_utils.py": {
        "find_ordinal": {
            "name": "find_ordinal",
            "location": 26,
            "return": [],
            "arguments": {
                "pos_num": []
            }
        },
        "to_ordinal": {
            "name": "to_ordinal",
            "location": 42,
            "return": [],
            "arguments": {
                "pos_num": []
            }
        },
        "get_callback_name": {
            "name": "get_callback_name",
            "location": 46,
            "return": [],
            "arguments": {
                "cb": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tenacity/__init__.py": {
        "retry": {
            "name": "retry",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "_first_set": {
            "name": "_first_set",
            "location": 184,
            "return": [],
            "arguments": {
                "first": [],
                "second": []
            }
        },
        "BaseAction.__repr__": {
            "name": "__repr__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseAction.__str__": {
            "name": "__str__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RetryAction.__init__": {
            "name": "__init__",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": []
            }
        },
        "RetryError.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "last_attempt": []
            }
        },
        "RetryError.reraise": {
            "name": "reraise",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RetryError.__str__": {
            "name": "__str__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AttemptManager.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "AttemptManager.__enter__": {
            "name": "__enter__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AttemptManager.__exit__": {
            "name": "__exit__",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "BaseRetrying.__init__": {
            "name": "__init__",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": [],
                "stop": [],
                "wait": [],
                "retry": [],
                "before": [],
                "after": [],
                "before_sleep": [],
                "reraise": [],
                "retry_error_cls": [],
                "retry_error_callback": []
            }
        },
        "BaseRetrying.copy": {
            "name": "copy",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": [],
                "stop": [],
                "wait": [],
                "retry": [],
                "before": [],
                "after": [],
                "before_sleep": [],
                "reraise": [],
                "retry_error_cls": [],
                "retry_error_callback": []
            }
        },
        "BaseRetrying.__repr__": {
            "name": "__repr__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRetrying.statistics": {
            "name": "statistics",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRetrying.wraps": {
            "name": "wraps",
            "location": 320,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "BaseRetrying.begin": {
            "name": "begin",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRetrying.iter": {
            "name": "iter",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "retry_state": []
            }
        },
        "BaseRetrying.__iter__": {
            "name": "__iter__",
            "location": 381,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRetrying.__call__": {
            "name": "__call__",
            "location": 396,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Retrying.__call__": {
            "name": "__call__",
            "location": 403,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Future.__init__": {
            "name": "__init__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "attempt_number": []
            }
        },
        "Future.failed": {
            "name": "failed",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.construct": {
            "name": "construct",
            "location": 436,
            "return": [],
            "arguments": {
                "cls": [],
                "attempt_number": [],
                "value": [],
                "has_exception": []
            }
        },
        "RetryCallState.__init__": {
            "name": "__init__",
            "location": 449,
            "return": [],
            "arguments": {
                "self": [],
                "retry_object": [],
                "fn": [],
                "args": [],
                "kwargs": []
            }
        },
        "RetryCallState.seconds_since_start": {
            "name": "seconds_since_start",
            "location": 479,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RetryCallState.prepare_for_next_attempt": {
            "name": "prepare_for_next_attempt",
            "location": 484,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RetryCallState.set_result": {
            "name": "set_result",
            "location": 490,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "RetryCallState.set_exception": {
            "name": "set_exception",
            "location": 496,
            "return": [],
            "arguments": {
                "self": [],
                "exc_info": []
            }
        },
        "RetryCallState.__repr__": {
            "name": "__repr__",
            "location": 502,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "retry.wrap": {
            "name": "wrap",
            "location": 120,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "BaseRetrying.wraps.wrapped_f": {
            "name": "wrapped_f",
            "location": 327,
            "return": [],
            "arguments": {}
        },
        "BaseRetrying.wraps.retry_with": {
            "name": "retry_with",
            "location": 330,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tomli/_parser.py": {
        "load": {
            "name": "load",
            "location": 57,
            "return": [],
            "arguments": {
                "__fp": []
            }
        },
        "loads": {
            "name": "loads",
            "location": 69,
            "return": [],
            "arguments": {
                "__s": []
            }
        },
        "skip_chars": {
            "name": "skip_chars",
            "location": 232,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "chars": []
            }
        },
        "skip_until": {
            "name": "skip_until",
            "location": 241,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "expect": []
            }
        },
        "skip_comment": {
            "name": "skip_comment",
            "location": 263,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "skip_comments_and_array_ws": {
            "name": "skip_comments_and_array_ws",
            "location": 275,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "create_dict_rule": {
            "name": "create_dict_rule",
            "location": 284,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "create_list_rule": {
            "name": "create_list_rule",
            "location": 302,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "key_value_rule": {
            "name": "key_value_rule",
            "location": 323,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": [],
                "header": [],
                "parse_float": []
            }
        },
        "parse_key_value_pair": {
            "name": "parse_key_value_pair",
            "location": 357,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_key": {
            "name": "parse_key",
            "location": 373,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_key_part": {
            "name": "parse_key_part",
            "location": 391,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_one_line_basic_str": {
            "name": "parse_one_line_basic_str",
            "location": 407,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_array": {
            "name": "parse_array",
            "location": 412,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_inline_table": {
            "name": "parse_inline_table",
            "location": 436,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_basic_str_escape": {
            "name": "parse_basic_str_escape",
            "location": 468,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str_escape_multiline": {
            "name": "parse_basic_str_escape_multiline",
            "location": 497,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_hex_char": {
            "name": "parse_hex_char",
            "location": 501,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "hex_len": []
            }
        },
        "parse_literal_str": {
            "name": "parse_literal_str",
            "location": 512,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_multiline_str": {
            "name": "parse_multiline_str",
            "location": 521,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str": {
            "name": "parse_basic_str",
            "location": 552,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_value": {
            "name": "parse_value",
            "location": 584,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "suffixed_err": {
            "name": "suffixed_err",
            "location": 652,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "msg": []
            }
        },
        "is_unicode_scalar_value": {
            "name": "is_unicode_scalar_value",
            "location": 669,
            "return": [],
            "arguments": {
                "codepoint": []
            }
        },
        "make_safe_parse_float": {
            "name": "make_safe_parse_float",
            "location": 673,
            "return": [],
            "arguments": {
                "parse_float": []
            }
        },
        "Flags.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags.add_pending": {
            "name": "add_pending",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "Flags.finalize_pending": {
            "name": "finalize_pending",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags.unset_all": {
            "name": "unset_all",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Flags.set": {
            "name": "set",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "Flags.is_": {
            "name": "is_",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "NestedDict.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedDict.get_or_create_nest": {
            "name": "get_or_create_nest",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "NestedDict.append_nest_to_list": {
            "name": "append_nest_to_list",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "suffixed_err.coord_repr": {
            "name": "coord_repr",
            "location": 656,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "make_safe_parse_float.safe_parse_float": {
            "name": "safe_parse_float",
            "location": 685,
            "return": [],
            "arguments": {
                "float_str": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tomli/_re.py": {
        "match_to_datetime": {
            "name": "match_to_datetime",
            "location": 52,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "cached_tz": {
            "name": "cached_tz",
            "location": 88,
            "return": [],
            "arguments": {
                "hour_str": [],
                "minute_str": [],
                "sign_str": []
            }
        },
        "match_to_localtime": {
            "name": "match_to_localtime",
            "location": 98,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "match_to_number": {
            "name": "match_to_number",
            "location": 104,
            "return": [],
            "arguments": {
                "match": [],
                "parse_float": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tomli/_types.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/tomli/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/connection.py": {
        "_match_hostname": {
            "name": "_match_hostname",
            "location": 531,
            "return": [],
            "arguments": {
                "cert": [],
                "asserted_hostname": []
            }
        },
        "_get_default_user_agent": {
            "name": "_get_default_user_agent",
            "location": 553,
            "return": [],
            "arguments": {}
        },
        "HTTPConnection.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnection.host": {
            "name": "host",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HTTPConnection._new_conn": {
            "name": "_new_conn",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnection._is_using_tunnel": {
            "name": "_is_using_tunnel",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnection._prepare_conn": {
            "name": "_prepare_conn",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPConnection.connect": {
            "name": "connect",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnection.putrequest": {
            "name": "putrequest",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "HTTPConnection.putheader": {
            "name": "putheader",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "header": []
            }
        },
        "HTTPConnection.request": {
            "name": "request",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": []
            }
        },
        "HTTPConnection.request_chunked": {
            "name": "request_chunked",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": []
            }
        },
        "HTTPSConnection.__init__": {
            "name": "__init__",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "key_file": [],
                "cert_file": [],
                "key_password": [],
                "strict": [],
                "timeout": [],
                "ssl_context": [],
                "server_hostname": []
            }
        },
        "HTTPSConnection.set_cert": {
            "name": "set_cert",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "key_file": [],
                "cert_file": [],
                "cert_reqs": [],
                "key_password": [],
                "ca_certs": [],
                "assert_hostname": [],
                "assert_fingerprint": [],
                "ca_cert_dir": [],
                "ca_cert_data": []
            }
        },
        "HTTPSConnection.connect": {
            "name": "connect",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPSConnection._connect_tls_proxy": {
            "name": "_connect_tls_proxy",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "hostname": [],
                "conn": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/connectionpool.py": {
        "connection_from_url": {
            "name": "connection_from_url",
            "location": 1067,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "_normalize_host": {
            "name": "_normalize_host",
            "location": 1095,
            "return": [],
            "arguments": {
                "host": [],
                "scheme": []
            }
        },
        "ConnectionPool.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": []
            }
        },
        "ConnectionPool.__str__": {
            "name": "__str__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConnectionPool.__enter__": {
            "name": "__enter__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConnectionPool.__exit__": {
            "name": "__exit__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "ConnectionPool.close": {
            "name": "close",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnectionPool.__init__": {
            "name": "__init__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "strict": [],
                "timeout": [],
                "maxsize": [],
                "block": [],
                "headers": [],
                "retries": [],
                "_proxy": [],
                "_proxy_headers": [],
                "_proxy_config": []
            }
        },
        "HTTPConnectionPool._new_conn": {
            "name": "_new_conn",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnectionPool._get_conn": {
            "name": "_get_conn",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "HTTPConnectionPool._put_conn": {
            "name": "_put_conn",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPConnectionPool._validate_conn": {
            "name": "_validate_conn",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPConnectionPool._prepare_proxy": {
            "name": "_prepare_proxy",
            "location": 320,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPConnectionPool._get_timeout": {
            "name": "_get_timeout",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "HTTPConnectionPool._raise_timeout": {
            "name": "_raise_timeout",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "err": [],
                "url": [],
                "timeout_value": []
            }
        },
        "HTTPConnectionPool._make_request": {
            "name": "_make_request",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "conn": [],
                "method": [],
                "url": [],
                "timeout": [],
                "chunked": []
            }
        },
        "HTTPConnectionPool._absolute_url": {
            "name": "_absolute_url",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "HTTPConnectionPool.close": {
            "name": "close",
            "location": 483,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPConnectionPool.is_same_host": {
            "name": "is_same_host",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "HTTPConnectionPool.urlopen": {
            "name": "urlopen",
            "location": 522,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": [],
                "retries": [],
                "redirect": [],
                "assert_same_host": [],
                "timeout": [],
                "pool_timeout": [],
                "release_conn": [],
                "chunked": [],
                "body_pos": []
            }
        },
        "HTTPSConnectionPool.__init__": {
            "name": "__init__",
            "location": 914,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "strict": [],
                "timeout": [],
                "maxsize": [],
                "block": [],
                "headers": [],
                "retries": [],
                "_proxy": [],
                "_proxy_headers": [],
                "key_file": [],
                "cert_file": [],
                "cert_reqs": [],
                "key_password": [],
                "ca_certs": [],
                "ssl_version": [],
                "assert_hostname": [],
                "assert_fingerprint": [],
                "ca_cert_dir": []
            }
        },
        "HTTPSConnectionPool._prepare_conn": {
            "name": "_prepare_conn",
            "location": 963,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPSConnectionPool._prepare_proxy": {
            "name": "_prepare_proxy",
            "location": 983,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPSConnectionPool._new_conn": {
            "name": "_new_conn",
            "location": 998,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPSConnectionPool._validate_conn": {
            "name": "_validate_conn",
            "location": 1034,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "HTTPConnectionPool.urlopen._is_ssl_error_message_from_http_proxy": {
            "name": "_is_ssl_error_message_from_http_proxy",
            "location": 753,
            "return": [],
            "arguments": {
                "ssl_error": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/exceptions.py": {
        "PoolError.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "message": []
            }
        },
        "PoolError.__reduce__": {
            "name": "__reduce__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestError.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "url": [],
                "message": []
            }
        },
        "RequestError.__reduce__": {
            "name": "__reduce__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProxyError.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "error": []
            }
        },
        "MaxRetryError.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "url": [],
                "reason": []
            }
        },
        "HostChangedError.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "url": [],
                "retries": []
            }
        },
        "LocationParseError.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "URLSchemeUnknown.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": []
            }
        },
        "IncompleteRead.__init__": {
            "name": "__init__",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "partial": [],
                "expected": []
            }
        },
        "IncompleteRead.__repr__": {
            "name": "__repr__",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidChunkLength.__init__": {
            "name": "__init__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "length": []
            }
        },
        "InvalidChunkLength.__repr__": {
            "name": "__repr__",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProxySchemeUnknown.__init__": {
            "name": "__init__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": []
            }
        },
        "HeaderParsingError.__init__": {
            "name": "__init__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "defects": [],
                "unparsed_data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/fields.py": {
        "guess_content_type": {
            "name": "guess_content_type",
            "location": 10,
            "return": [],
            "arguments": {
                "filename": [],
                "default": []
            }
        },
        "format_header_param_rfc2231": {
            "name": "format_header_param_rfc2231",
            "location": 24,
            "return": [],
            "arguments": {
                "name": [],
                "value": []
            }
        },
        "_replace_multiple": {
            "name": "_replace_multiple",
            "location": 82,
            "return": [],
            "arguments": {
                "value": [],
                "needles_and_replacements": []
            }
        },
        "format_header_param_html5": {
            "name": "format_header_param_html5",
            "location": 95,
            "return": [],
            "arguments": {
                "name": [],
                "value": []
            }
        },
        "_replace_multiple.replacer": {
            "name": "replacer",
            "location": 83,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "RequestField.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": [],
                "filename": [],
                "headers": [],
                "header_formatter": []
            }
        },
        "RequestField.from_tuples": {
            "name": "from_tuples",
            "location": 160,
            "return": [],
            "arguments": {
                "cls": [],
                "fieldname": [],
                "value": [],
                "header_formatter": []
            }
        },
        "RequestField._render_part": {
            "name": "_render_part",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "RequestField._render_parts": {
            "name": "_render_parts",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "header_parts": []
            }
        },
        "RequestField.render_headers": {
            "name": "render_headers",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestField.make_multipart": {
            "name": "make_multipart",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "content_disposition": [],
                "content_type": [],
                "content_location": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/filepost.py": {
        "choose_boundary": {
            "name": "choose_boundary",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "iter_field_objects": {
            "name": "iter_field_objects",
            "location": 25,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "iter_fields": {
            "name": "iter_fields",
            "location": 45,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "encode_multipart_formdata": {
            "name": "encode_multipart_formdata",
            "location": 63,
            "return": [],
            "arguments": {
                "fields": [],
                "boundary": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/poolmanager.py": {
        "_default_key_normalizer": {
            "name": "_default_key_normalizer",
            "location": 79,
            "return": [],
            "arguments": {
                "key_class": [],
                "request_context": []
            }
        },
        "proxy_from_url": {
            "name": "proxy_from_url",
            "location": 536,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "PoolManager.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "num_pools": [],
                "headers": []
            }
        },
        "PoolManager.__enter__": {
            "name": "__enter__",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PoolManager.__exit__": {
            "name": "__exit__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "PoolManager._new_pool": {
            "name": "_new_pool",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": [],
                "host": [],
                "port": [],
                "request_context": []
            }
        },
        "PoolManager.clear": {
            "name": "clear",
            "location": 216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PoolManager.connection_from_host": {
            "name": "connection_from_host",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "scheme": [],
                "pool_kwargs": []
            }
        },
        "PoolManager.connection_from_context": {
            "name": "connection_from_context",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "request_context": []
            }
        },
        "PoolManager.connection_from_pool_key": {
            "name": "connection_from_pool_key",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "pool_key": [],
                "request_context": []
            }
        },
        "PoolManager.connection_from_url": {
            "name": "connection_from_url",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "pool_kwargs": []
            }
        },
        "PoolManager._merge_pool_kwargs": {
            "name": "_merge_pool_kwargs",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "override": []
            }
        },
        "PoolManager._proxy_requires_url_absolute_form": {
            "name": "_proxy_requires_url_absolute_form",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "parsed_url": []
            }
        },
        "PoolManager._validate_proxy_scheme_url_selection": {
            "name": "_validate_proxy_scheme_url_selection",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "url_scheme": []
            }
        },
        "PoolManager.urlopen": {
            "name": "urlopen",
            "location": 353,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "redirect": []
            }
        },
        "ProxyManager.__init__": {
            "name": "__init__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "proxy_url": [],
                "num_pools": [],
                "headers": [],
                "proxy_headers": [],
                "proxy_ssl_context": [],
                "use_forwarding_for_https": []
            }
        },
        "ProxyManager.connection_from_host": {
            "name": "connection_from_host",
            "location": 498,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "scheme": [],
                "pool_kwargs": []
            }
        },
        "ProxyManager._set_proxy_headers": {
            "name": "_set_proxy_headers",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "headers": []
            }
        },
        "ProxyManager.urlopen": {
            "name": "urlopen",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "redirect": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/request.py": {
        "RequestMethods.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "RequestMethods.urlopen": {
            "name": "urlopen",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": [],
                "encode_multipart": [],
                "multipart_boundary": []
            }
        },
        "RequestMethods.request": {
            "name": "request",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "fields": [],
                "headers": []
            }
        },
        "RequestMethods.request_encode_url": {
            "name": "request_encode_url",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "fields": [],
                "headers": []
            }
        },
        "RequestMethods.request_encode_body": {
            "name": "request_encode_body",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "fields": [],
                "headers": [],
                "encode_multipart": [],
                "multipart_boundary": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/response.py": {
        "_get_decoder": {
            "name": "_get_decoder",
            "location": 143,
            "return": [],
            "arguments": {
                "mode": []
            }
        },
        "DeflateDecoder.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeflateDecoder.__getattr__": {
            "name": "__getattr__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DeflateDecoder.decompress": {
            "name": "decompress",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "GzipDecoder.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GzipDecoder.__getattr__": {
            "name": "__getattr__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GzipDecoder.decompress": {
            "name": "decompress",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "MultiDecoder.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "modes": []
            }
        },
        "MultiDecoder.flush": {
            "name": "flush",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiDecoder.decompress": {
            "name": "decompress",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "HTTPResponse.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "status": [],
                "version": [],
                "reason": [],
                "strict": [],
                "preload_content": [],
                "decode_content": [],
                "original_response": [],
                "pool": [],
                "connection": [],
                "msg": [],
                "retries": [],
                "enforce_content_length": [],
                "request_method": [],
                "request_url": [],
                "auto_close": []
            }
        },
        "HTTPResponse.get_redirect_location": {
            "name": "get_redirect_location",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.release_conn": {
            "name": "release_conn",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.drain_conn": {
            "name": "drain_conn",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.data": {
            "name": "data",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.connection": {
            "name": "connection",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.isclosed": {
            "name": "isclosed",
            "location": 305,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.tell": {
            "name": "tell",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._init_length": {
            "name": "_init_length",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "request_method": []
            }
        },
        "HTTPResponse._init_decoder": {
            "name": "_init_decoder",
            "location": 368,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._decode": {
            "name": "_decode",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "decode_content": [],
                "flush_decoder": []
            }
        },
        "HTTPResponse._flush_decoder": {
            "name": "_flush_decoder",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._error_catcher": {
            "name": "_error_catcher",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._fp_read": {
            "name": "_fp_read",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "amt": []
            }
        },
        "HTTPResponse.read": {
            "name": "read",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "amt": [],
                "decode_content": [],
                "cache_content": []
            }
        },
        "HTTPResponse.stream": {
            "name": "stream",
            "location": 600,
            "return": [],
            "arguments": {
                "self": [],
                "amt": [],
                "decode_content": []
            }
        },
        "HTTPResponse.from_httplib": {
            "name": "from_httplib",
            "location": 627,
            "return": [],
            "arguments": {
                "ResponseCls": [],
                "r": []
            }
        },
        "HTTPResponse.getheaders": {
            "name": "getheaders",
            "location": 659,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.getheader": {
            "name": "getheader",
            "location": 662,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "HTTPResponse.info": {
            "name": "info",
            "location": 666,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.close": {
            "name": "close",
            "location": 670,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.closed": {
            "name": "closed",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.fileno": {
            "name": "fileno",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.flush": {
            "name": "flush",
            "location": 704,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.readable": {
            "name": "readable",
            "location": 712,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.readinto": {
            "name": "readinto",
            "location": 716,
            "return": [],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "HTTPResponse.supports_chunked_reads": {
            "name": "supports_chunked_reads",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._update_chunk_length": {
            "name": "_update_chunk_length",
            "location": 734,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse._handle_chunk": {
            "name": "_handle_chunk",
            "location": 748,
            "return": [],
            "arguments": {
                "self": [],
                "amt": []
            }
        },
        "HTTPResponse.read_chunked": {
            "name": "read_chunked",
            "location": 770,
            "return": [],
            "arguments": {
                "self": [],
                "amt": [],
                "decode_content": []
            }
        },
        "HTTPResponse.geturl": {
            "name": "geturl",
            "location": 840,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPResponse.__iter__": {
            "name": "__iter__",
            "location": 851,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BrotliDecoder.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BrotliDecoder.flush": {
            "name": "flush",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/_collections.py": {
        "RecentlyUsedContainer.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "maxsize": [],
                "dispose_func": []
            }
        },
        "RecentlyUsedContainer.__getitem__": {
            "name": "__getitem__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RecentlyUsedContainer.__setitem__": {
            "name": "__setitem__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "RecentlyUsedContainer.__delitem__": {
            "name": "__delitem__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RecentlyUsedContainer.__len__": {
            "name": "__len__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecentlyUsedContainer.__iter__": {
            "name": "__iter__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecentlyUsedContainer.clear": {
            "name": "clear",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecentlyUsedContainer.keys": {
            "name": "keys",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "HTTPHeaderDict.__setitem__": {
            "name": "__setitem__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "HTTPHeaderDict.__getitem__": {
            "name": "__getitem__",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "HTTPHeaderDict.__delitem__": {
            "name": "__delitem__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "HTTPHeaderDict.__contains__": {
            "name": "__contains__",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "HTTPHeaderDict.__eq__": {
            "name": "__eq__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPHeaderDict.__ne__": {
            "name": "__ne__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPHeaderDict.__len__": {
            "name": "__len__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.__iter__": {
            "name": "__iter__",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.pop": {
            "name": "pop",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "HTTPHeaderDict.discard": {
            "name": "discard",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "HTTPHeaderDict.add": {
            "name": "add",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "HTTPHeaderDict.extend": {
            "name": "extend",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.getlist": {
            "name": "getlist",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "HTTPHeaderDict.__repr__": {
            "name": "__repr__",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict._copy_from": {
            "name": "_copy_from",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "HTTPHeaderDict.copy": {
            "name": "copy",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.iteritems": {
            "name": "iteritems",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.itermerged": {
            "name": "itermerged",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.items": {
            "name": "items",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPHeaderDict.from_httplib": {
            "name": "from_httplib",
            "location": 312,
            "return": [],
            "arguments": {
                "cls": [],
                "message": []
            }
        },
        "RLock.__enter__": {
            "name": "__enter__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RLock.__exit__": {
            "name": "__exit__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/_version.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/__init__.py": {
        "add_stderr_logger": {
            "name": "add_stderr_logger",
            "location": 63,
            "return": [],
            "arguments": {
                "level": []
            }
        },
        "disable_warnings": {
            "name": "disable_warnings",
            "location": 98,
            "return": [],
            "arguments": {
                "category": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/appengine.py": {
        "AppEngineManager.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "headers": [],
                "retries": [],
                "validate_certificate": [],
                "urlfetch_retries": []
            }
        },
        "AppEngineManager.__enter__": {
            "name": "__enter__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppEngineManager.__exit__": {
            "name": "__exit__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "AppEngineManager.urlopen": {
            "name": "urlopen",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": [],
                "retries": [],
                "redirect": [],
                "timeout": []
            }
        },
        "AppEngineManager._urlfetch_response_to_http_response": {
            "name": "_urlfetch_response_to_http_response",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "urlfetch_resp": []
            }
        },
        "AppEngineManager._get_absolute_timeout": {
            "name": "_get_absolute_timeout",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "AppEngineManager._get_retries": {
            "name": "_get_retries",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "retries": [],
                "redirect": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/ntlmpool.py": {
        "NTLMConnectionPool.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "pw": [],
                "authurl": []
            }
        },
        "NTLMConnectionPool._new_conn": {
            "name": "_new_conn",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NTLMConnectionPool.urlopen": {
            "name": "urlopen",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": [],
                "retries": [],
                "redirect": [],
                "assert_same_host": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py": {
        "inject_into_urllib3": {
            "name": "inject_into_urllib3",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "extract_from_urllib3": {
            "name": "extract_from_urllib3",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "_validate_dependencies_met": {
            "name": "_validate_dependencies_met",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "_dnsname_to_stdlib": {
            "name": "_dnsname_to_stdlib",
            "location": 180,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_subj_alt_name": {
            "name": "get_subj_alt_name",
            "location": 223,
            "return": [],
            "arguments": {
                "peer_cert": []
            }
        },
        "_verify_callback": {
            "name": "_verify_callback",
            "location": 518,
            "return": [],
            "arguments": {
                "cnx": [],
                "x509": [],
                "err_no": [],
                "err_depth": [],
                "return_code": []
            }
        },
        "_dnsname_to_stdlib.idna_encode": {
            "name": "idna_encode",
            "location": 194,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "WrappedSocket.__init__": {
            "name": "__init__",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "connection": [],
                "socket": [],
                "suppress_ragged_eofs": []
            }
        },
        "WrappedSocket.fileno": {
            "name": "fileno",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._decref_socketios": {
            "name": "_decref_socketios",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.recv": {
            "name": "recv",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.recv_into": {
            "name": "recv_into",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.settimeout": {
            "name": "settimeout",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "WrappedSocket._send_until_done": {
            "name": "_send_until_done",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "WrappedSocket.sendall": {
            "name": "sendall",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "WrappedSocket.shutdown": {
            "name": "shutdown",
            "location": 371,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.close": {
            "name": "close",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.getpeercert": {
            "name": "getpeercert",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "binary_form": []
            }
        },
        "WrappedSocket.version": {
            "name": "version",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._reuse": {
            "name": "_reuse",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._drop": {
            "name": "_drop",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "makefile": {
            "name": "makefile",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "bufsize": []
            }
        },
        "PyOpenSSLContext.__init__": {
            "name": "__init__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "protocol": []
            }
        },
        "PyOpenSSLContext.options": {
            "name": "options",
            "location": 442,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PyOpenSSLContext.verify_mode": {
            "name": "verify_mode",
            "location": 451,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PyOpenSSLContext.set_default_verify_paths": {
            "name": "set_default_verify_paths",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyOpenSSLContext.set_ciphers": {
            "name": "set_ciphers",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "ciphers": []
            }
        },
        "PyOpenSSLContext.load_verify_locations": {
            "name": "load_verify_locations",
            "location": 462,
            "return": [],
            "arguments": {
                "self": [],
                "cafile": [],
                "capath": [],
                "cadata": []
            }
        },
        "PyOpenSSLContext.load_cert_chain": {
            "name": "load_cert_chain",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "certfile": [],
                "keyfile": [],
                "password": []
            }
        },
        "PyOpenSSLContext.set_alpn_protocols": {
            "name": "set_alpn_protocols",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "protocols": []
            }
        },
        "PyOpenSSLContext.wrap_socket": {
            "name": "wrap_socket",
            "location": 486,
            "return": [],
            "arguments": {
                "self": [],
                "sock": [],
                "server_side": [],
                "do_handshake_on_connect": [],
                "suppress_ragged_eofs": [],
                "server_hostname": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/securetransport.py": {
        "inject_into_urllib3": {
            "name": "inject_into_urllib3",
            "location": 189,
            "return": [],
            "arguments": {}
        },
        "extract_from_urllib3": {
            "name": "extract_from_urllib3",
            "location": 201,
            "return": [],
            "arguments": {}
        },
        "_read_callback": {
            "name": "_read_callback",
            "location": 213,
            "return": [],
            "arguments": {
                "connection_id": [],
                "data_buffer": [],
                "data_length_pointer": []
            }
        },
        "_write_callback": {
            "name": "_write_callback",
            "location": 268,
            "return": [],
            "arguments": {
                "connection_id": [],
                "data_buffer": [],
                "data_length_pointer": []
            }
        },
        "WrappedSocket.__init__": {
            "name": "__init__",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "socket": []
            }
        },
        "WrappedSocket._raise_on_error": {
            "name": "_raise_on_error",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._set_ciphers": {
            "name": "_set_ciphers",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._set_alpn_protocols": {
            "name": "_set_alpn_protocols",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "protocols": []
            }
        },
        "WrappedSocket._custom_validate": {
            "name": "_custom_validate",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "verify": [],
                "trust_bundle": []
            }
        },
        "WrappedSocket._evaluate_trust": {
            "name": "_evaluate_trust",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "trust_bundle": []
            }
        },
        "WrappedSocket.handshake": {
            "name": "handshake",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "server_hostname": [],
                "verify": [],
                "trust_bundle": [],
                "min_version": [],
                "max_version": [],
                "client_cert": [],
                "client_key": [],
                "client_key_passphrase": [],
                "alpn_protocols": []
            }
        },
        "WrappedSocket.fileno": {
            "name": "fileno",
            "location": 567,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._decref_socketios": {
            "name": "_decref_socketios",
            "location": 571,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.recv": {
            "name": "recv",
            "location": 577,
            "return": [],
            "arguments": {
                "self": [],
                "bufsiz": []
            }
        },
        "WrappedSocket.recv_into": {
            "name": "recv_into",
            "location": 583,
            "return": [],
            "arguments": {
                "self": [],
                "buffer": [],
                "nbytes": []
            }
        },
        "WrappedSocket.settimeout": {
            "name": "settimeout",
            "location": 626,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "WrappedSocket.gettimeout": {
            "name": "gettimeout",
            "location": 629,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.send": {
            "name": "send",
            "location": 632,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "WrappedSocket.sendall": {
            "name": "sendall",
            "location": 649,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "WrappedSocket.shutdown": {
            "name": "shutdown",
            "location": 655,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.close": {
            "name": "close",
            "location": 659,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket.getpeercert": {
            "name": "getpeercert",
            "location": 678,
            "return": [],
            "arguments": {
                "self": [],
                "binary_form": []
            }
        },
        "WrappedSocket.version": {
            "name": "version",
            "location": 736,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._reuse": {
            "name": "_reuse",
            "location": 757,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WrappedSocket._drop": {
            "name": "_drop",
            "location": 760,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "makefile": {
            "name": "makefile",
            "location": 775,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "buffering": []
            }
        },
        "SecureTransportContext.__init__": {
            "name": "__init__",
            "location": 792,
            "return": [],
            "arguments": {
                "self": [],
                "protocol": []
            }
        },
        "SecureTransportContext.check_hostname": {
            "name": "check_hostname",
            "location": 811,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SecureTransportContext.options": {
            "name": "options",
            "location": 829,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SecureTransportContext.verify_mode": {
            "name": "verify_mode",
            "location": 838,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SecureTransportContext.set_default_verify_paths": {
            "name": "set_default_verify_paths",
            "location": 841,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureTransportContext.load_default_certs": {
            "name": "load_default_certs",
            "location": 853,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SecureTransportContext.set_ciphers": {
            "name": "set_ciphers",
            "location": 856,
            "return": [],
            "arguments": {
                "self": [],
                "ciphers": []
            }
        },
        "SecureTransportContext.load_verify_locations": {
            "name": "load_verify_locations",
            "location": 861,
            "return": [],
            "arguments": {
                "self": [],
                "cafile": [],
                "capath": [],
                "cadata": []
            }
        },
        "SecureTransportContext.load_cert_chain": {
            "name": "load_cert_chain",
            "location": 873,
            "return": [],
            "arguments": {
                "self": [],
                "certfile": [],
                "keyfile": [],
                "password": []
            }
        },
        "SecureTransportContext.set_alpn_protocols": {
            "name": "set_alpn_protocols",
            "location": 878,
            "return": [],
            "arguments": {
                "self": [],
                "protocols": []
            }
        },
        "SecureTransportContext.wrap_socket": {
            "name": "wrap_socket",
            "location": 890,
            "return": [],
            "arguments": {
                "self": [],
                "sock": [],
                "server_side": [],
                "do_handshake_on_connect": [],
                "suppress_ragged_eofs": [],
                "server_hostname": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/socks.py": {
        "SOCKSConnection.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SOCKSConnection._new_conn": {
            "name": "_new_conn",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SOCKSProxyManager.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "proxy_url": [],
                "username": [],
                "password": [],
                "num_pools": [],
                "headers": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_appengine_environ.py": {
        "is_appengine": {
            "name": "is_appengine",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "is_appengine_sandbox": {
            "name": "is_appengine_sandbox",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "is_local_appengine": {
            "name": "is_local_appengine",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "is_prod_appengine": {
            "name": "is_prod_appengine",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "is_prod_appengine_mvms": {
            "name": "is_prod_appengine_mvms",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/bindings.py": {
        "load_cdll": {
            "name": "load_cdll",
            "location": 65,
            "return": [],
            "arguments": {
                "name": [],
                "macos10_16_path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/low_level.py": {
        "_cf_data_from_bytes": {
            "name": "_cf_data_from_bytes",
            "location": 27,
            "return": [],
            "arguments": {
                "bytestring": []
            }
        },
        "_cf_dictionary_from_tuples": {
            "name": "_cf_dictionary_from_tuples",
            "location": 37,
            "return": [],
            "arguments": {
                "tuples": []
            }
        },
        "_cfstr": {
            "name": "_cfstr",
            "location": 59,
            "return": [],
            "arguments": {
                "py_bstr": []
            }
        },
        "_create_cfstring_array": {
            "name": "_create_cfstring_array",
            "location": 73,
            "return": [],
            "arguments": {
                "lst": []
            }
        },
        "_cf_string_to_unicode": {
            "name": "_cf_string_to_unicode",
            "location": 104,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_assert_no_error": {
            "name": "_assert_no_error",
            "location": 129,
            "return": [],
            "arguments": {
                "error": [],
                "exception_class": []
            }
        },
        "_cert_array_from_pem": {
            "name": "_cert_array_from_pem",
            "location": 150,
            "return": [],
            "arguments": {
                "pem_bundle": []
            }
        },
        "_is_cert": {
            "name": "_is_cert",
            "location": 196,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "_is_identity": {
            "name": "_is_identity",
            "location": 204,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "_temporary_keychain": {
            "name": "_temporary_keychain",
            "location": 212,
            "return": [],
            "arguments": {}
        },
        "_load_items_from_file": {
            "name": "_load_items_from_file",
            "location": 247,
            "return": [],
            "arguments": {
                "keychain": [],
                "path": []
            }
        },
        "_load_client_cert_chain": {
            "name": "_load_client_cert_chain",
            "location": 302,
            "return": [],
            "arguments": {
                "keychain": []
            }
        },
        "_build_tls_unknown_ca_alert": {
            "name": "_build_tls_unknown_ca_alert",
            "location": 386,
            "return": [],
            "arguments": {
                "version": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/contrib/_securetransport/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/packages/six.py": {
        "_add_doc": {
            "name": "_add_doc",
            "location": 80,
            "return": [],
            "arguments": {
                "func": [],
                "doc": []
            }
        },
        "_import_module": {
            "name": "_import_module",
            "location": 85,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "add_move": {
            "name": "add_move",
            "location": 544,
            "return": [],
            "arguments": {
                "move": []
            }
        },
        "remove_move": {
            "name": "remove_move",
            "location": 549,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "assertCountEqual": {
            "name": "assertCountEqual",
            "location": 745,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertRaisesRegex": {
            "name": "assertRaisesRegex",
            "location": 749,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertRegex": {
            "name": "assertRegex",
            "location": 753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assertNotRegex": {
            "name": "assertNotRegex",
            "location": 757,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "with_metaclass": {
            "name": "with_metaclass",
            "location": 929,
            "return": [],
            "arguments": {
                "meta": []
            }
        },
        "add_metaclass": {
            "name": "add_metaclass",
            "location": 953,
            "return": [],
            "arguments": {
                "metaclass": []
            }
        },
        "ensure_binary": {
            "name": "ensure_binary",
            "location": 973,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "ensure_str": {
            "name": "ensure_str",
            "location": 991,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "ensure_text": {
            "name": "ensure_text",
            "location": 1014,
            "return": [],
            "arguments": {
                "s": [],
                "encoding": [],
                "errors": []
            }
        },
        "python_2_unicode_compatible": {
            "name": "python_2_unicode_compatible",
            "location": 1033,
            "return": [],
            "arguments": {
                "klass": []
            }
        },
        "_LazyDescr.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_LazyDescr.__get__": {
            "name": "__get__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "tp": []
            }
        },
        "MovedModule.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "old": [],
                "new": []
            }
        },
        "MovedModule._resolve": {
            "name": "_resolve",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MovedModule.__getattr__": {
            "name": "__getattr__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "_LazyModule.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_LazyModule.__dir__": {
            "name": "__dir__",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MovedAttribute.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "old_mod": [],
                "new_mod": [],
                "old_attr": [],
                "new_attr": []
            }
        },
        "MovedAttribute._resolve": {
            "name": "_resolve",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SixMetaPathImporter.__init__": {
            "name": "__init__",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "six_module_name": []
            }
        },
        "_SixMetaPathImporter._add_module": {
            "name": "_add_module",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "mod": []
            }
        },
        "_SixMetaPathImporter._get_module": {
            "name": "_get_module",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.find_module": {
            "name": "find_module",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": []
            }
        },
        "_SixMetaPathImporter.find_spec": {
            "name": "find_spec",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        },
        "_SixMetaPathImporter.__get_module": {
            "name": "__get_module",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.load_module": {
            "name": "load_module",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.is_package": {
            "name": "is_package",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.get_code": {
            "name": "get_code",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "_SixMetaPathImporter.create_module": {
            "name": "create_module",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "_SixMetaPathImporter.exec_module": {
            "name": "exec_module",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "Module_six_moves_urllib.__dir__": {
            "name": "__dir__",
            "location": 535,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_unbound_function": {
            "name": "get_unbound_function",
            "location": 610,
            "return": [],
            "arguments": {
                "unbound": []
            }
        },
        "create_unbound_method": {
            "name": "create_unbound_method",
            "location": 616,
            "return": [],
            "arguments": {
                "func": [],
                "cls": []
            }
        },
        "create_bound_method": {
            "name": "create_bound_method",
            "location": 613,
            "return": [],
            "arguments": {
                "func": [],
                "obj": []
            }
        },
        "iterkeys": {
            "name": "iterkeys",
            "location": 658,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "itervalues": {
            "name": "itervalues",
            "location": 661,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "iteritems": {
            "name": "iteritems",
            "location": 664,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "iterlists": {
            "name": "iterlists",
            "location": 667,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "b": {
            "name": "b",
            "location": 716,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "u": {
            "name": "u",
            "location": 721,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "byte2int": {
            "name": "byte2int",
            "location": 727,
            "return": [],
            "arguments": {
                "bs": []
            }
        },
        "indexbytes": {
            "name": "indexbytes",
            "location": 730,
            "return": [],
            "arguments": {
                "buf": [],
                "i": []
            }
        },
        "reraise": {
            "name": "reraise",
            "location": 764,
            "return": [],
            "arguments": {
                "tp": [],
                "value": [],
                "tb": []
            }
        },
        "exec_": {
            "name": "exec_",
            "location": 777,
            "return": [],
            "arguments": {
                "_code_": [],
                "_globs_": [],
                "_locs_": []
            }
        },
        "raise_from": {
            "name": "raise_from",
            "location": 810,
            "return": [],
            "arguments": {
                "value": [],
                "from_value": []
            }
        },
        "print_": {
            "name": "print_",
            "location": 878,
            "return": [],
            "arguments": {}
        },
        "_update_wrapper": {
            "name": "_update_wrapper",
            "location": 894,
            "return": [],
            "arguments": {
                "wrapper": [],
                "wrapped": [],
                "assigned": [],
                "updated": []
            }
        },
        "wraps": {
            "name": "wraps",
            "location": 914,
            "return": [],
            "arguments": {
                "wrapped": [],
                "assigned": [],
                "updated": []
            }
        },
        "add_metaclass.wrapper": {
            "name": "wrapper",
            "location": 956,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "advance_iterator": {
            "name": "advance_iterator",
            "location": 582,
            "return": [],
            "arguments": {
                "it": []
            }
        },
        "callable": {
            "name": "callable",
            "location": 593,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Iterator.next": {
            "name": "next",
            "location": 620,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "print_.write": {
            "name": "write",
            "location": 823,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "with_metaclass.metaclass.__new__": {
            "name": "__new__",
            "location": 935,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "this_bases": [],
                "d": []
            }
        },
        "with_metaclass.metaclass.__prepare__": {
            "name": "__prepare__",
            "location": 947,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "this_bases": []
            }
        },
        "X.__len__": {
            "name": "__len__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/packages/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/packages/backports/makefile.py": {
        "backport_makefile": {
            "name": "backport_makefile",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "buffering": [],
                "encoding": [],
                "errors": [],
                "newline": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/packages/backports/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/connection.py": {
        "is_connection_dropped": {
            "name": "is_connection_dropped",
            "location": 11,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "create_connection": {
            "name": "create_connection",
            "location": 37,
            "return": [],
            "arguments": {
                "address": [],
                "timeout": [],
                "source_address": [],
                "socket_options": []
            }
        },
        "_set_socket_options": {
            "name": "_set_socket_options",
            "location": 100,
            "return": [],
            "arguments": {
                "sock": [],
                "options": []
            }
        },
        "allowed_gai_family": {
            "name": "allowed_gai_family",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "_has_ipv6": {
            "name": "_has_ipv6",
            "location": 119,
            "return": [],
            "arguments": {
                "host": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/proxy.py": {
        "connection_requires_http_tunnel": {
            "name": "connection_requires_http_tunnel",
            "location": 4,
            "return": [],
            "arguments": {
                "proxy_url": [],
                "proxy_config": [],
                "destination_scheme": []
            }
        },
        "create_proxy_ssl_context": {
            "name": "create_proxy_ssl_context",
            "location": 37,
            "return": [],
            "arguments": {
                "ssl_version": [],
                "cert_reqs": [],
                "ca_certs": [],
                "ca_cert_dir": [],
                "ca_cert_data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/queue.py": {
        "LifoQueue._init": {
            "name": "_init",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "LifoQueue._qsize": {
            "name": "_qsize",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "len": []
            }
        },
        "LifoQueue._put": {
            "name": "_put",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "LifoQueue._get": {
            "name": "_get",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/request.py": {
        "make_headers": {
            "name": "make_headers",
            "location": 20,
            "return": [],
            "arguments": {
                "keep_alive": [],
                "accept_encoding": [],
                "user_agent": [],
                "basic_auth": [],
                "proxy_basic_auth": [],
                "disable_cache": []
            }
        },
        "set_file_position": {
            "name": "set_file_position",
            "location": 92,
            "return": [],
            "arguments": {
                "body": [],
                "pos": []
            }
        },
        "rewind_body": {
            "name": "rewind_body",
            "location": 110,
            "return": [],
            "arguments": {
                "body": [],
                "body_pos": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/response.py": {
        "is_fp_closed": {
            "name": "is_fp_closed",
            "location": 9,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "assert_header_parsing": {
            "name": "assert_header_parsing",
            "location": 40,
            "return": [],
            "arguments": {
                "headers": []
            }
        },
        "is_response_to_head": {
            "name": "is_response_to_head",
            "location": 94,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/retry.py": {
        "_RetryMeta.DEFAULT_METHOD_WHITELIST": {
            "name": "DEFAULT_METHOD_WHITELIST",
            "location": 46,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "_RetryMeta.DEFAULT_REDIRECT_HEADERS_BLACKLIST": {
            "name": "DEFAULT_REDIRECT_HEADERS_BLACKLIST",
            "location": 64,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "_RetryMeta.BACKOFF_MAX": {
            "name": "BACKOFF_MAX",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "Retry.__init__": {
            "name": "__init__",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "total": [],
                "connect": [],
                "read": [],
                "redirect": [],
                "status": [],
                "other": [],
                "allowed_methods": [],
                "status_forcelist": [],
                "backoff_factor": [],
                "raise_on_redirect": [],
                "raise_on_status": [],
                "history": [],
                "respect_retry_after_header": [],
                "remove_headers_on_redirect": [],
                "method_whitelist": []
            }
        },
        "Retry.new": {
            "name": "new",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.from_int": {
            "name": "from_int",
            "location": 341,
            "return": [],
            "arguments": {
                "cls": [],
                "retries": [],
                "redirect": [],
                "default": []
            }
        },
        "Retry.get_backoff_time": {
            "name": "get_backoff_time",
            "location": 354,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.parse_retry_after": {
            "name": "parse_retry_after",
            "location": 371,
            "return": [],
            "arguments": {
                "self": [],
                "retry_after": []
            }
        },
        "Retry.get_retry_after": {
            "name": "get_retry_after",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "Retry.sleep_for_retry": {
            "name": "sleep_for_retry",
            "location": 404,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "Retry._sleep_backoff": {
            "name": "_sleep_backoff",
            "location": 412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.sleep": {
            "name": "sleep",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "Retry._is_connection_error": {
            "name": "_is_connection_error",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "err": []
            }
        },
        "Retry._is_read_error": {
            "name": "_is_read_error",
            "location": 442,
            "return": [],
            "arguments": {
                "self": [],
                "err": []
            }
        },
        "Retry._is_method_retryable": {
            "name": "_is_method_retryable",
            "location": 448,
            "return": [],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "Retry.is_retry": {
            "name": "is_retry",
            "location": 468,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "status_code": [],
                "has_retry_after": []
            }
        },
        "Retry.is_exhausted": {
            "name": "is_exhausted",
            "location": 488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.increment": {
            "name": "increment",
            "location": 504,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "response": [],
                "error": [],
                "_pool": [],
                "_stacktrace": []
            }
        },
        "Retry.__repr__": {
            "name": "__repr__",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.__getattr__": {
            "name": "__getattr__",
            "location": 604,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/ssltransport.py": {
        "SSLTransport._validate_ssl_context_for_tls_in_tls": {
            "name": "_validate_ssl_context_for_tls_in_tls",
            "location": 23,
            "return": [],
            "arguments": {
                "ssl_context": []
            }
        },
        "SSLTransport.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "socket": [],
                "ssl_context": [],
                "server_hostname": [],
                "suppress_ragged_eofs": []
            }
        },
        "SSLTransport.__enter__": {
            "name": "__enter__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.__exit__": {
            "name": "__exit__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.fileno": {
            "name": "fileno",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.read": {
            "name": "read",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "len": [],
                "buffer": []
            }
        },
        "SSLTransport.recv": {
            "name": "recv",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "len": [],
                "flags": []
            }
        },
        "SSLTransport.recv_into": {
            "name": "recv_into",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "buffer": [],
                "nbytes": [],
                "flags": []
            }
        },
        "SSLTransport.sendall": {
            "name": "sendall",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "flags": []
            }
        },
        "SSLTransport.send": {
            "name": "send",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "flags": []
            }
        },
        "SSLTransport.makefile": {
            "name": "makefile",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "buffering": [],
                "encoding": [],
                "errors": [],
                "newline": []
            }
        },
        "SSLTransport.unwrap": {
            "name": "unwrap",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.close": {
            "name": "close",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.getpeercert": {
            "name": "getpeercert",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "binary_form": []
            }
        },
        "SSLTransport.version": {
            "name": "version",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.cipher": {
            "name": "cipher",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.selected_alpn_protocol": {
            "name": "selected_alpn_protocol",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.selected_npn_protocol": {
            "name": "selected_npn_protocol",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.shared_ciphers": {
            "name": "shared_ciphers",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.compression": {
            "name": "compression",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport.settimeout": {
            "name": "settimeout",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SSLTransport.gettimeout": {
            "name": "gettimeout",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport._decref_socketios": {
            "name": "_decref_socketios",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SSLTransport._wrap_ssl_read": {
            "name": "_wrap_ssl_read",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "len": [],
                "buffer": []
            }
        },
        "SSLTransport._ssl_io_loop": {
            "name": "_ssl_io_loop",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/ssl_.py": {
        "_const_compare_digest_backport": {
            "name": "_const_compare_digest_backport",
            "location": 30,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "assert_fingerprint": {
            "name": "assert_fingerprint",
            "location": 182,
            "return": [],
            "arguments": {
                "cert": [],
                "fingerprint": []
            }
        },
        "resolve_cert_reqs": {
            "name": "resolve_cert_reqs",
            "location": 211,
            "return": [],
            "arguments": {
                "candidate": []
            }
        },
        "resolve_ssl_version": {
            "name": "resolve_ssl_version",
            "location": 234,
            "return": [],
            "arguments": {
                "candidate": []
            }
        },
        "create_urllib3_context": {
            "name": "create_urllib3_context",
            "location": 250,
            "return": [],
            "arguments": {
                "ssl_version": [],
                "cert_reqs": [],
                "options": [],
                "ciphers": []
            }
        },
        "ssl_wrap_socket": {
            "name": "ssl_wrap_socket",
            "location": 355,
            "return": [],
            "arguments": {
                "sock": [],
                "keyfile": [],
                "certfile": [],
                "cert_reqs": [],
                "ca_certs": [],
                "server_hostname": [],
                "ssl_version": [],
                "ciphers": [],
                "ssl_context": [],
                "ca_cert_dir": [],
                "key_password": [],
                "ca_cert_data": [],
                "tls_in_tls": []
            }
        },
        "is_ipaddress": {
            "name": "is_ipaddress",
            "location": 457,
            "return": [],
            "arguments": {
                "hostname": []
            }
        },
        "_is_key_file_encrypted": {
            "name": "_is_key_file_encrypted",
            "location": 470,
            "return": [],
            "arguments": {
                "key_file": []
            }
        },
        "_ssl_wrap_socket_impl": {
            "name": "_ssl_wrap_socket_impl",
            "location": 481,
            "return": [],
            "arguments": {
                "sock": [],
                "ssl_context": [],
                "tls_in_tls": [],
                "server_hostname": []
            }
        },
        "create_urllib3_context.disable_check_hostname": {
            "name": "disable_check_hostname",
            "location": 325,
            "return": [],
            "arguments": {}
        },
        "SSLContext.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "protocol_version": []
            }
        },
        "SSLContext.load_cert_chain": {
            "name": "load_cert_chain",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "certfile": [],
                "keyfile": []
            }
        },
        "SSLContext.load_verify_locations": {
            "name": "load_verify_locations",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "cafile": [],
                "capath": [],
                "cadata": []
            }
        },
        "SSLContext.set_ciphers": {
            "name": "set_ciphers",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "cipher_suite": []
            }
        },
        "SSLContext.wrap_socket": {
            "name": "wrap_socket",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "socket": [],
                "server_hostname": [],
                "server_side": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/ssl_match_hostname.py": {
        "_dnsname_match": {
            "name": "_dnsname_match",
            "location": 25,
            "return": [],
            "arguments": {
                "dn": [],
                "hostname": [],
                "max_wildcards": []
            }
        },
        "_to_unicode": {
            "name": "_to_unicode",
            "location": 79,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_ipaddress_match": {
            "name": "_ipaddress_match",
            "location": 86,
            "return": [],
            "arguments": {
                "ipname": [],
                "host_ip": []
            }
        },
        "match_hostname": {
            "name": "match_hostname",
            "location": 98,
            "return": [],
            "arguments": {
                "cert": [],
                "hostname": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/timeout.py": {
        "Timeout.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "total": [],
                "connect": [],
                "read": []
            }
        },
        "Timeout.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout._validate_timeout": {
            "name": "_validate_timeout",
            "location": 120,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [],
                "name": []
            }
        },
        "Timeout.from_float": {
            "name": "from_float",
            "location": 166,
            "return": [],
            "arguments": {
                "cls": [],
                "timeout": []
            }
        },
        "Timeout.clone": {
            "name": "clone",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.start_connect": {
            "name": "start_connect",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.get_connect_duration": {
            "name": "get_connect_duration",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.connect_timeout": {
            "name": "connect_timeout",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.read_timeout": {
            "name": "read_timeout",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/url.py": {
        "split_first": {
            "name": "split_first",
            "location": 175,
            "return": [],
            "arguments": {
                "s": [],
                "delims": []
            }
        },
        "_encode_invalid_chars": {
            "name": "_encode_invalid_chars",
            "location": 210,
            "return": [],
            "arguments": {
                "component": [],
                "allowed_chars": [],
                "encoding": []
            }
        },
        "_remove_path_dot_segments": {
            "name": "_remove_path_dot_segments",
            "location": 244,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_normalize_host": {
            "name": "_normalize_host",
            "location": 274,
            "return": [],
            "arguments": {
                "host": [],
                "scheme": []
            }
        },
        "_idna_encode": {
            "name": "_idna_encode",
            "location": 305,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_encode_target": {
            "name": "_encode_target",
            "location": 323,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "parse_url": {
            "name": "parse_url",
            "location": 333,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_host": {
            "name": "get_host",
            "location": 430,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Url.__new__": {
            "name": "__new__",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": [],
                "scheme": [],
                "auth": [],
                "host": [],
                "port": [],
                "path": [],
                "query": [],
                "fragment": []
            }
        },
        "Url.hostname": {
            "name": "hostname",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Url.request_uri": {
            "name": "request_uri",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Url.netloc": {
            "name": "netloc",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Url.url": {
            "name": "url",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Url.__str__": {
            "name": "__str__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "parse_url.ensure_type": {
            "name": "ensure_type",
            "location": 416,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/wait.py": {
        "select_wait_for_socket": {
            "name": "select_wait_for_socket",
            "location": 70,
            "return": [],
            "arguments": {
                "sock": [],
                "read": [],
                "write": [],
                "timeout": []
            }
        },
        "poll_wait_for_socket": {
            "name": "poll_wait_for_socket",
            "location": 89,
            "return": [],
            "arguments": {
                "sock": [],
                "read": [],
                "write": [],
                "timeout": []
            }
        },
        "null_wait_for_socket": {
            "name": "null_wait_for_socket",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "_have_working_poll": {
            "name": "_have_working_poll",
            "location": 113,
            "return": [],
            "arguments": {}
        },
        "wait_for_socket": {
            "name": "wait_for_socket",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "wait_for_read": {
            "name": "wait_for_read",
            "location": 141,
            "return": [],
            "arguments": {
                "sock": [],
                "timeout": []
            }
        },
        "wait_for_write": {
            "name": "wait_for_write",
            "location": 148,
            "return": [],
            "arguments": {
                "sock": [],
                "timeout": []
            }
        },
        "_retry_on_intr": {
            "name": "_retry_on_intr",
            "location": 47,
            "return": [],
            "arguments": {
                "fn": [],
                "timeout": []
            }
        },
        "poll_wait_for_socket.do_poll": {
            "name": "do_poll",
            "location": 101,
            "return": [],
            "arguments": {
                "t": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/urllib3/util/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/webencodings/labels.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/webencodings/mklabels.py": {
        "assert_lower": {
            "name": "assert_lower",
            "location": 20,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "generate": {
            "name": "generate",
            "location": 25,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/webencodings/tests.py": {
        "assert_raises": {
            "name": "assert_raises",
            "location": 20,
            "return": [],
            "arguments": {
                "exception": [],
                "function": []
            }
        },
        "test_labels": {
            "name": "test_labels",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_all_labels": {
            "name": "test_all_labels",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "test_invalid_label": {
            "name": "test_invalid_label",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "test_decode": {
            "name": "test_decode",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "test_encode": {
            "name": "test_encode",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "test_iter_decode": {
            "name": "test_iter_decode",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "test_iter_encode": {
            "name": "test_iter_encode",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "test_x_user_defined": {
            "name": "test_x_user_defined",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "test_iter_decode.iter_decode_to_string": {
            "name": "iter_decode_to_string",
            "location": 108,
            "return": [],
            "arguments": {
                "input": [],
                "fallback_encoding": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/webencodings/x_user_defined.py": {
        "Codec.encode": {
            "name": "encode",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "errors": []
            }
        },
        "Codec.decode": {
            "name": "decode",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "errors": []
            }
        },
        "IncrementalEncoder.encode": {
            "name": "encode",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "final": []
            }
        },
        "IncrementalDecoder.decode": {
            "name": "decode",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "final": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pip/_vendor/webencodings/__init__.py": {
        "ascii_lower": {
            "name": "ascii_lower",
            "location": 35,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "lookup": {
            "name": "lookup",
            "location": 61,
            "return": [],
            "arguments": {
                "label": []
            }
        },
        "_get_encoding": {
            "name": "_get_encoding",
            "location": 91,
            "return": [],
            "arguments": {
                "encoding_or_label": []
            }
        },
        "decode": {
            "name": "decode",
            "location": 139,
            "return": [],
            "arguments": {
                "input": [],
                "fallback_encoding": [],
                "errors": []
            }
        },
        "_detect_bom": {
            "name": "_detect_bom",
            "location": 161,
            "return": [],
            "arguments": {
                "input": []
            }
        },
        "encode": {
            "name": "encode",
            "location": 172,
            "return": [],
            "arguments": {
                "input": [],
                "encoding": [],
                "errors": []
            }
        },
        "iter_decode": {
            "name": "iter_decode",
            "location": 186,
            "return": [],
            "arguments": {
                "input": [],
                "fallback_encoding": [],
                "errors": []
            }
        },
        "_iter_decode_generator": {
            "name": "_iter_decode_generator",
            "location": 214,
            "return": [],
            "arguments": {
                "input": [],
                "decoder": []
            }
        },
        "iter_encode": {
            "name": "iter_encode",
            "location": 246,
            "return": [],
            "arguments": {
                "input": [],
                "encoding": [],
                "errors": []
            }
        },
        "_iter_encode_generator": {
            "name": "_iter_encode_generator",
            "location": 262,
            "return": [],
            "arguments": {
                "input": [],
                "encode": []
            }
        },
        "Encoding.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "codec_info": []
            }
        },
        "Encoding.__repr__": {
            "name": "__repr__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IncrementalDecoder.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "fallback_encoding": [],
                "errors": []
            }
        },
        "IncrementalDecoder.decode": {
            "name": "decode",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "final": []
            }
        },
        "IncrementalEncoder.__init__": {
            "name": "__init__",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "encoding": [],
                "errors": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/__init__.py": {
        "parse_version": {
            "name": "parse_version",
            "location": 119,
            "return": [],
            "arguments": {
                "v": []
            }
        },
        "_declare_state": {
            "name": "_declare_state",
            "location": 134,
            "return": [],
            "arguments": {
                "vartype": []
            }
        },
        "__getstate__": {
            "name": "__getstate__",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "__setstate__": {
            "name": "__setstate__",
            "location": 147,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "_sget_dict": {
            "name": "_sget_dict",
            "location": 154,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "_sset_dict": {
            "name": "_sset_dict",
            "location": 158,
            "return": [],
            "arguments": {
                "key": [],
                "ob": [],
                "state": []
            }
        },
        "_sget_object": {
            "name": "_sget_object",
            "location": 163,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "_sset_object": {
            "name": "_sset_object",
            "location": 167,
            "return": [],
            "arguments": {
                "key": [],
                "ob": [],
                "state": []
            }
        },
        "get_supported_platform": {
            "name": "get_supported_platform",
            "location": 174,
            "return": [],
            "arguments": {}
        },
        "register_loader_type": {
            "name": "register_loader_type",
            "location": 341,
            "return": [],
            "arguments": {
                "loader_type": [],
                "provider_factory": []
            }
        },
        "get_provider": {
            "name": "get_provider",
            "location": 351,
            "return": [],
            "arguments": {
                "moduleOrReq": []
            }
        },
        "_macos_vers": {
            "name": "_macos_vers",
            "location": 364,
            "return": [],
            "arguments": {
                "_cache": []
            }
        },
        "_macos_arch": {
            "name": "_macos_arch",
            "location": 380,
            "return": [],
            "arguments": {
                "machine": []
            }
        },
        "get_build_platform": {
            "name": "get_build_platform",
            "location": 384,
            "return": [],
            "arguments": {}
        },
        "compatible_platforms": {
            "name": "compatible_platforms",
            "location": 414,
            "return": [],
            "arguments": {
                "provided": [],
                "required": []
            }
        },
        "run_script": {
            "name": "run_script",
            "location": 460,
            "return": [],
            "arguments": {
                "dist_spec": [],
                "script_name": []
            }
        },
        "get_distribution": {
            "name": "get_distribution",
            "location": 473,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "load_entry_point": {
            "name": "load_entry_point",
            "location": 484,
            "return": [],
            "arguments": {
                "dist": [],
                "group": [],
                "name": []
            }
        },
        "get_entry_map": {
            "name": "get_entry_map",
            "location": 489,
            "return": [],
            "arguments": {
                "dist": [],
                "group": []
            }
        },
        "get_entry_info": {
            "name": "get_entry_info",
            "location": 494,
            "return": [],
            "arguments": {
                "dist": [],
                "group": [],
                "name": []
            }
        },
        "get_default_cache": {
            "name": "get_default_cache",
            "location": 1316,
            "return": [],
            "arguments": {}
        },
        "safe_name": {
            "name": "safe_name",
            "location": 1328,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "safe_version": {
            "name": "safe_version",
            "location": 1336,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "safe_extra": {
            "name": "safe_extra",
            "location": 1348,
            "return": [],
            "arguments": {
                "extra": []
            }
        },
        "to_filename": {
            "name": "to_filename",
            "location": 1357,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "invalid_marker": {
            "name": "invalid_marker",
            "location": 1365,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "evaluate_marker": {
            "name": "evaluate_marker",
            "location": 1379,
            "return": [],
            "arguments": {
                "text": [],
                "extra": []
            }
        },
        "_parents": {
            "name": "_parents",
            "location": 1588,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "register_finder": {
            "name": "register_finder",
            "location": 1976,
            "return": [],
            "arguments": {
                "importer_type": [],
                "distribution_finder": []
            }
        },
        "find_distributions": {
            "name": "find_distributions",
            "location": 1986,
            "return": [],
            "arguments": {
                "path_item": [],
                "only": []
            }
        },
        "find_eggs_in_zip": {
            "name": "find_eggs_in_zip",
            "location": 1993,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "find_nothing": {
            "name": "find_nothing",
            "location": 2023,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "_by_version_descending": {
            "name": "_by_version_descending",
            "location": 2030,
            "return": [],
            "arguments": {
                "names": []
            }
        },
        "find_on_path": {
            "name": "find_on_path",
            "location": 2065,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "only": []
            }
        },
        "dist_factory": {
            "name": "dist_factory",
            "location": 2100,
            "return": [],
            "arguments": {
                "path_item": [],
                "entry": [],
                "only": []
            }
        },
        "safe_listdir": {
            "name": "safe_listdir",
            "location": 2135,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "distributions_from_metadata": {
            "name": "distributions_from_metadata",
            "location": 2151,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "non_empty_lines": {
            "name": "non_empty_lines",
            "location": 2166,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "resolve_egg_link": {
            "name": "resolve_egg_link",
            "location": 2177,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "register_namespace_handler": {
            "name": "register_namespace_handler",
            "location": 2200,
            "return": [],
            "arguments": {
                "importer_type": [],
                "namespace_handler": []
            }
        },
        "_handle_ns": {
            "name": "_handle_ns",
            "location": 2218,
            "return": [],
            "arguments": {
                "packageName": [],
                "path_item": []
            }
        },
        "_rebuild_mod_path": {
            "name": "_rebuild_mod_path",
            "location": 2255,
            "return": [],
            "arguments": {
                "orig_path": [],
                "package_name": [],
                "module": []
            }
        },
        "declare_namespace": {
            "name": "declare_namespace",
            "location": 2289,
            "return": [],
            "arguments": {
                "packageName": []
            }
        },
        "fixup_namespace_packages": {
            "name": "fixup_namespace_packages",
            "location": 2323,
            "return": [],
            "arguments": {
                "path_item": [],
                "parent": []
            }
        },
        "file_ns_handler": {
            "name": "file_ns_handler",
            "location": 2335,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "packageName": [],
                "module": []
            }
        },
        "null_ns_handler": {
            "name": "null_ns_handler",
            "location": 2355,
            "return": [],
            "arguments": {
                "importer": [],
                "path_item": [],
                "packageName": [],
                "module": []
            }
        },
        "normalize_path": {
            "name": "normalize_path",
            "location": 2362,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_cygwin_patch": {
            "name": "_cygwin_patch",
            "location": 2368,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_normalize_cached": {
            "name": "_normalize_cached",
            "location": 2379,
            "return": [],
            "arguments": {
                "filename": [],
                "_cache": []
            }
        },
        "_is_egg_path": {
            "name": "_is_egg_path",
            "location": 2387,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_is_zip_egg": {
            "name": "_is_zip_egg",
            "location": 2394,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_is_unpacked_egg": {
            "name": "_is_unpacked_egg",
            "location": 2402,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_set_parent_ns": {
            "name": "_set_parent_ns",
            "location": 2412,
            "return": [],
            "arguments": {
                "packageName": []
            }
        },
        "_version_from_file": {
            "name": "_version_from_file",
            "location": 2567,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "issue_warning": {
            "name": "issue_warning",
            "location": 3073,
            "return": [],
            "arguments": {}
        },
        "parse_requirements": {
            "name": "parse_requirements",
            "location": 3086,
            "return": [],
            "arguments": {
                "strs": []
            }
        },
        "_always_object": {
            "name": "_always_object",
            "location": 3151,
            "return": [],
            "arguments": {
                "classes": []
            }
        },
        "_find_adapter": {
            "name": "_find_adapter",
            "location": 3161,
            "return": [],
            "arguments": {
                "registry": [],
                "ob": []
            }
        },
        "ensure_directory": {
            "name": "ensure_directory",
            "location": 3169,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_bypass_ensure_directory": {
            "name": "_bypass_ensure_directory",
            "location": 3175,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "split_sections": {
            "name": "split_sections",
            "location": 3188,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_mkstemp": {
            "name": "_mkstemp",
            "location": 3214,
            "return": [],
            "arguments": {}
        },
        "_call_aside": {
            "name": "_call_aside",
            "location": 3233,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_initialize": {
            "name": "_initialize",
            "location": 3239,
            "return": [],
            "arguments": {
                "g": []
            }
        },
        "_initialize_master_working_set": {
            "name": "_initialize_master_working_set",
            "location": 3260,
            "return": [],
            "arguments": {}
        },
        "ResolutionError.__repr__": {
            "name": "__repr__",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.dist": {
            "name": "dist",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.req": {
            "name": "req",
            "location": 270,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.report": {
            "name": "report",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionConflict.with_context": {
            "name": "with_context",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "required_by": []
            }
        },
        "ContextualVersionConflict.required_by": {
            "name": "required_by",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.req": {
            "name": "req",
            "location": 307,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.requirers": {
            "name": "requirers",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.requirers_str": {
            "name": "requirers_str",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.report": {
            "name": "report",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionNotFound.__str__": {
            "name": "__str__",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IMetadataProvider.has_metadata": {
            "name": "has_metadata",
            "location": 500,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.get_metadata": {
            "name": "get_metadata",
            "location": 503,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 506,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.metadata_isdir": {
            "name": "metadata_isdir",
            "location": 512,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.metadata_listdir": {
            "name": "metadata_listdir",
            "location": 515,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "IMetadataProvider.run_script": {
            "name": "run_script",
            "location": 518,
            "return": [],
            "arguments": {
                "script_name": [],
                "namespace": []
            }
        },
        "IResourceProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 525,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 530,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.get_resource_string": {
            "name": "get_resource_string",
            "location": 535,
            "return": [],
            "arguments": {
                "manager": [],
                "resource_name": []
            }
        },
        "IResourceProvider.has_resource": {
            "name": "has_resource",
            "location": 540,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "IResourceProvider.resource_isdir": {
            "name": "resource_isdir",
            "location": 543,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "IResourceProvider.resource_listdir": {
            "name": "resource_listdir",
            "location": 546,
            "return": [],
            "arguments": {
                "resource_name": []
            }
        },
        "WorkingSet.__init__": {
            "name": "__init__",
            "location": 553,
            "return": [],
            "arguments": {
                "self": [],
                "entries": []
            }
        },
        "WorkingSet._build_master": {
            "name": "_build_master",
            "location": 568,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "WorkingSet._build_from_requirements": {
            "name": "_build_from_requirements",
            "location": 588,
            "return": [],
            "arguments": {
                "cls": [],
                "req_spec": []
            }
        },
        "WorkingSet.add_entry": {
            "name": "add_entry",
            "location": 609,
            "return": [],
            "arguments": {
                "self": [],
                "entry": []
            }
        },
        "WorkingSet.__contains__": {
            "name": "__contains__",
            "location": 624,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "WorkingSet.find": {
            "name": "find",
            "location": 628,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "WorkingSet.iter_entry_points": {
            "name": "iter_entry_points",
            "location": 652,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "WorkingSet.run_script": {
            "name": "run_script",
            "location": 666,
            "return": [],
            "arguments": {
                "self": [],
                "requires": [],
                "script_name": []
            }
        },
        "WorkingSet.__iter__": {
            "name": "__iter__",
            "location": 674,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.add": {
            "name": "add",
            "location": 691,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "entry": [],
                "insert": [],
                "replace": []
            }
        },
        "WorkingSet.resolve": {
            "name": "resolve",
            "location": 724,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": [],
                "env": [],
                "installer": [],
                "replace_conflicting": [],
                "extras": []
            }
        },
        "WorkingSet.find_plugins": {
            "name": "find_plugins",
            "location": 816,
            "return": [],
            "arguments": {
                "self": [],
                "plugin_env": [],
                "full_env": [],
                "installer": [],
                "fallback": []
            }
        },
        "WorkingSet.require": {
            "name": "require",
            "location": 900,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.subscribe": {
            "name": "subscribe",
            "location": 916,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "existing": []
            }
        },
        "WorkingSet._added_new": {
            "name": "_added_new",
            "location": 930,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "WorkingSet.__getstate__": {
            "name": "__getstate__",
            "location": 934,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkingSet.__setstate__": {
            "name": "__setstate__",
            "location": 940,
            "return": [],
            "arguments": {
                "self": [],
                "e_k_b_n_c": []
            }
        },
        "_ReqExtras.markers_pass": {
            "name": "markers_pass",
            "location": 954,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "extras": []
            }
        },
        "Environment.__init__": {
            "name": "__init__",
            "location": 972,
            "return": [],
            "arguments": {
                "self": [],
                "search_path": [],
                "platform": [],
                "python": []
            }
        },
        "Environment.can_add": {
            "name": "can_add",
            "location": 996,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.remove": {
            "name": "remove",
            "location": 1010,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.scan": {
            "name": "scan",
            "location": 1014,
            "return": [],
            "arguments": {
                "self": [],
                "search_path": []
            }
        },
        "Environment.__getitem__": {
            "name": "__getitem__",
            "location": 1029,
            "return": [],
            "arguments": {
                "self": [],
                "project_name": []
            }
        },
        "Environment.add": {
            "name": "add",
            "location": 1040,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Environment.best_match": {
            "name": "best_match",
            "location": 1049,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "working_set": [],
                "installer": [],
                "replace_conflicting": []
            }
        },
        "Environment.obtain": {
            "name": "obtain",
            "location": 1077,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "installer": []
            }
        },
        "Environment.__iter__": {
            "name": "__iter__",
            "location": 1089,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment.__iadd__": {
            "name": "__iadd__",
            "location": 1095,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Environment.__add__": {
            "name": "__add__",
            "location": 1107,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ResourceManager.__init__": {
            "name": "__init__",
            "location": 1139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceManager.resource_exists": {
            "name": "resource_exists",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_isdir": {
            "name": "resource_isdir",
            "location": 1146,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_filename": {
            "name": "resource_filename",
            "location": 1152,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_stream": {
            "name": "resource_stream",
            "location": 1158,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_string": {
            "name": "resource_string",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.resource_listdir": {
            "name": "resource_listdir",
            "location": 1170,
            "return": [],
            "arguments": {
                "self": [],
                "package_or_requirement": [],
                "resource_name": []
            }
        },
        "ResourceManager.extraction_error": {
            "name": "extraction_error",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceManager.get_cache_path": {
            "name": "get_cache_path",
            "location": 1204,
            "return": [],
            "arguments": {
                "self": [],
                "archive_name": [],
                "names": []
            }
        },
        "ResourceManager._warn_unsafe_extraction_path": {
            "name": "_warn_unsafe_extraction_path",
            "location": 1230,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "ResourceManager.postprocess": {
            "name": "postprocess",
            "location": 1256,
            "return": [],
            "arguments": {
                "self": [],
                "tempname": [],
                "filename": []
            }
        },
        "ResourceManager.set_extraction_path": {
            "name": "set_extraction_path",
            "location": 1276,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceManager.cleanup_resources": {
            "name": "cleanup_resources",
            "location": 1302,
            "return": [],
            "arguments": {
                "self": [],
                "force": []
            }
        },
        "NullProvider.__init__": {
            "name": "__init__",
            "location": 1401,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "NullProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 1405,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 1408,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.get_resource_string": {
            "name": "get_resource_string",
            "location": 1411,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "NullProvider.has_resource": {
            "name": "has_resource",
            "location": 1414,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider._get_metadata_path": {
            "name": "_get_metadata_path",
            "location": 1417,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.has_metadata": {
            "name": "has_metadata",
            "location": 1420,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.get_metadata": {
            "name": "get_metadata",
            "location": 1427,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 1440,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.resource_isdir": {
            "name": "resource_isdir",
            "location": 1443,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider.metadata_isdir": {
            "name": "metadata_isdir",
            "location": 1446,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.resource_listdir": {
            "name": "resource_listdir",
            "location": 1449,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "NullProvider.metadata_listdir": {
            "name": "metadata_listdir",
            "location": 1452,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NullProvider.run_script": {
            "name": "run_script",
            "location": 1457,
            "return": [],
            "arguments": {
                "self": [],
                "script_name": [],
                "namespace": []
            }
        },
        "NullProvider._has": {
            "name": "_has",
            "location": 1481,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._isdir": {
            "name": "_isdir",
            "location": 1486,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._listdir": {
            "name": "_listdir",
            "location": 1491,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "NullProvider._fn": {
            "name": "_fn",
            "location": 1496,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "resource_name": []
            }
        },
        "NullProvider._validate_resource_path": {
            "name": "_validate_resource_path",
            "location": 1503,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "NullProvider._get": {
            "name": "_get",
            "location": 1577,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EggProvider.__init__": {
            "name": "__init__",
            "location": 1602,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "EggProvider._setup_prefix": {
            "name": "_setup_prefix",
            "location": 1606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggProvider._set_egg": {
            "name": "_set_egg",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._has": {
            "name": "_has",
            "location": 1622,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._isdir": {
            "name": "_isdir",
            "location": 1625,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._listdir": {
            "name": "_listdir",
            "location": 1628,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider.get_resource_stream": {
            "name": "get_resource_stream",
            "location": 1631,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "DefaultProvider._get": {
            "name": "_get",
            "location": 1634,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultProvider._register": {
            "name": "_register",
            "location": 1639,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "EmptyProvider._get": {
            "name": "_get",
            "location": 1656,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EmptyProvider._listdir": {
            "name": "_listdir",
            "location": 1659,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "EmptyProvider.__init__": {
            "name": "__init__",
            "location": 1662,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipManifests.build": {
            "name": "build",
            "location": 1675,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "MemoizedZipManifests.load": {
            "name": "load",
            "location": 1702,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipProvider.__init__": {
            "name": "__init__",
            "location": 1722,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "ZipProvider._zipinfo_name": {
            "name": "_zipinfo_name",
            "location": 1726,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._parts": {
            "name": "_parts",
            "location": 1738,
            "return": [],
            "arguments": {
                "self": [],
                "zip_path": []
            }
        },
        "ZipProvider.zipinfo": {
            "name": "zipinfo",
            "location": 1749,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider.get_resource_filename": {
            "name": "get_resource_filename",
            "location": 1752,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "resource_name": []
            }
        },
        "ZipProvider._get_date_and_size": {
            "name": "_get_date_and_size",
            "location": 1766,
            "return": [],
            "arguments": {
                "zip_stat": []
            }
        },
        "ZipProvider._extract_resource": {
            "name": "_extract_resource",
            "location": 1775,
            "return": [],
            "arguments": {
                "self": [],
                "manager": [],
                "zip_path": []
            }
        },
        "ZipProvider._is_current": {
            "name": "_is_current",
            "location": 1830,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [],
                "zip_path": []
            }
        },
        "ZipProvider._get_eager_resources": {
            "name": "_get_eager_resources",
            "location": 1846,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider._index": {
            "name": "_index",
            "location": 1855,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipProvider._has": {
            "name": "_has",
            "location": 1872,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._isdir": {
            "name": "_isdir",
            "location": 1876,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._listdir": {
            "name": "_listdir",
            "location": 1879,
            "return": [],
            "arguments": {
                "self": [],
                "fspath": []
            }
        },
        "ZipProvider._eager_to_zip": {
            "name": "_eager_to_zip",
            "location": 1882,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "ZipProvider._resource_to_zip": {
            "name": "_resource_to_zip",
            "location": 1885,
            "return": [],
            "arguments": {
                "self": [],
                "resource_name": []
            }
        },
        "FileMetadata.__init__": {
            "name": "__init__",
            "location": 1904,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileMetadata._get_metadata_path": {
            "name": "_get_metadata_path",
            "location": 1907,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata.has_metadata": {
            "name": "has_metadata",
            "location": 1910,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata.get_metadata": {
            "name": "get_metadata",
            "location": 1913,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FileMetadata._warn_on_replacement": {
            "name": "_warn_on_replacement",
            "location": 1922,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": []
            }
        },
        "FileMetadata.get_metadata_lines": {
            "name": "get_metadata_lines",
            "location": 1929,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PathMetadata.__init__": {
            "name": "__init__",
            "location": 1953,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "egg_info": []
            }
        },
        "EggMetadata.__init__": {
            "name": "__init__",
            "location": 1961,
            "return": [],
            "arguments": {
                "self": [],
                "importer": []
            }
        },
        "_by_version_descending.try_parse": {
            "name": "try_parse",
            "location": 2045,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_by_version_descending._by_version": {
            "name": "_by_version",
            "location": 2054,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "NoDists.__bool__": {
            "name": "__bool__",
            "location": 2128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoDists.__call__": {
            "name": "__call__",
            "location": 2131,
            "return": [],
            "arguments": {
                "self": [],
                "fullpath": []
            }
        },
        "_rebuild_mod_path.safe_sys_path_index": {
            "name": "safe_sys_path_index",
            "location": 2262,
            "return": [],
            "arguments": {
                "entry": []
            }
        },
        "_rebuild_mod_path.position_in_sys_path": {
            "name": "position_in_sys_path",
            "location": 2271,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "EntryPoint.__init__": {
            "name": "__init__",
            "location": 2438,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "module_name": [],
                "attrs": [],
                "extras": [],
                "dist": []
            }
        },
        "EntryPoint.__str__": {
            "name": "__str__",
            "location": 2447,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.__repr__": {
            "name": "__repr__",
            "location": 2455,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.load": {
            "name": "load",
            "location": 2458,
            "return": [],
            "arguments": {
                "self": [],
                "require": []
            }
        },
        "EntryPoint.resolve": {
            "name": "resolve",
            "location": 2473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.require": {
            "name": "require",
            "location": 2483,
            "return": [],
            "arguments": {
                "self": [],
                "env": [],
                "installer": []
            }
        },
        "EntryPoint.parse": {
            "name": "parse",
            "location": 2506,
            "return": [],
            "arguments": {
                "cls": [],
                "src": [],
                "dist": []
            }
        },
        "EntryPoint._parse_extras": {
            "name": "_parse_extras",
            "location": 2526,
            "return": [],
            "arguments": {
                "cls": [],
                "extras_spec": []
            }
        },
        "EntryPoint.parse_group": {
            "name": "parse_group",
            "location": 2535,
            "return": [],
            "arguments": {
                "cls": [],
                "group": [],
                "lines": [],
                "dist": []
            }
        },
        "EntryPoint.parse_map": {
            "name": "parse_map",
            "location": 2548,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [],
                "dist": []
            }
        },
        "_version_from_file.is_version_line": {
            "name": "is_version_line",
            "location": 2572,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 2584,
            "return": [],
            "arguments": {
                "self": [],
                "location": [],
                "metadata": [],
                "project_name": [],
                "version": [],
                "py_version": [],
                "platform": [],
                "precedence": []
            }
        },
        "Distribution.from_location": {
            "name": "from_location",
            "location": 2598,
            "return": [],
            "arguments": {
                "cls": [],
                "location": [],
                "basename": [],
                "metadata": []
            }
        },
        "Distribution._reload_version": {
            "name": "_reload_version",
            "location": 2614,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.hashcmp": {
            "name": "hashcmp",
            "location": 2618,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__hash__": {
            "name": "__hash__",
            "location": 2628,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__lt__": {
            "name": "__lt__",
            "location": 2631,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__le__": {
            "name": "__le__",
            "location": 2634,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__gt__": {
            "name": "__gt__",
            "location": 2637,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__ge__": {
            "name": "__ge__",
            "location": 2640,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__eq__": {
            "name": "__eq__",
            "location": 2643,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.__ne__": {
            "name": "__ne__",
            "location": 2649,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Distribution.key": {
            "name": "key",
            "location": 2657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.parsed_version": {
            "name": "parsed_version",
            "location": 2665,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._warn_legacy_version": {
            "name": "_warn_legacy_version",
            "location": 2671,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.version": {
            "name": "version",
            "location": 2698,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._dep_map": {
            "name": "_dep_map",
            "location": 2713,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._filter_extras": {
            "name": "_filter_extras",
            "location": 2725,
            "return": [],
            "arguments": {
                "dm": []
            }
        },
        "Distribution._build_dep_map": {
            "name": "_build_dep_map",
            "location": 2746,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.requires": {
            "name": "requires",
            "location": 2753,
            "return": [],
            "arguments": {
                "self": [],
                "extras": []
            }
        },
        "Distribution._get_metadata_path_for_display": {
            "name": "_get_metadata_path_for_display",
            "location": 2767,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Distribution._get_metadata": {
            "name": "_get_metadata",
            "location": 2784,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Distribution._get_version": {
            "name": "_get_version",
            "location": 2789,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.activate": {
            "name": "activate",
            "location": 2795,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "replace": []
            }
        },
        "Distribution.egg_name": {
            "name": "egg_name",
            "location": 2806,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__repr__": {
            "name": "__repr__",
            "location": 2817,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__str__": {
            "name": "__str__",
            "location": 2823,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__getattr__": {
            "name": "__getattr__",
            "location": 2831,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Distribution.__dir__": {
            "name": "__dir__",
            "location": 2837,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.from_filename": {
            "name": "from_filename",
            "location": 2847,
            "return": [],
            "arguments": {
                "cls": [],
                "filename": [],
                "metadata": []
            }
        },
        "Distribution.as_requirement": {
            "name": "as_requirement",
            "location": 2853,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.load_entry_point": {
            "name": "load_entry_point",
            "location": 2862,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "Distribution.get_entry_map": {
            "name": "get_entry_map",
            "location": 2869,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "Distribution.get_entry_info": {
            "name": "get_entry_info",
            "location": 2881,
            "return": [],
            "arguments": {
                "self": [],
                "group": [],
                "name": []
            }
        },
        "Distribution.insert_on": {
            "name": "insert_on",
            "location": 2886,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "loc": [],
                "replace": []
            }
        },
        "Distribution.check_version_conflict": {
            "name": "check_version_conflict",
            "location": 2954,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_version": {
            "name": "has_version",
            "location": 2976,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.clone": {
            "name": "clone",
            "location": 2984,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.extras": {
            "name": "extras",
            "location": 2993,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EggInfoDistribution._reload_version": {
            "name": "_reload_version",
            "location": 2998,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._parsed_pkg_info": {
            "name": "_parsed_pkg_info",
            "location": 3025,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._dep_map": {
            "name": "_dep_map",
            "location": 3035,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistInfoDistribution._compute_dependencies": {
            "name": "_compute_dependencies",
            "location": 3042,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__init__": {
            "name": "__init__",
            "location": 3100,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_string": []
            }
        },
        "Requirement.__eq__": {
            "name": "__eq__",
            "location": 3118,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Requirement.__ne__": {
            "name": "__ne__",
            "location": 3124,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Requirement.__contains__": {
            "name": "__contains__",
            "location": 3127,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Requirement.__hash__": {
            "name": "__hash__",
            "location": 3139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 3142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.parse": {
            "name": "parse",
            "location": 3146,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "DistInfoDistribution._compute_dependencies.reqs_for_extra": {
            "name": "reqs_for_extra",
            "location": 3051,
            "return": [],
            "arguments": {
                "extra": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/extern/__init__.py": {
        "VendorImporter.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "root_name": [],
                "vendored_names": [],
                "vendor_pkg": []
            }
        },
        "VendorImporter.search_path": {
            "name": "search_path",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VendorImporter._module_matches_namespace": {
            "name": "_module_matches_namespace",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "VendorImporter.load_module": {
            "name": "load_module",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "VendorImporter.create_module": {
            "name": "create_module",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "VendorImporter.exec_module": {
            "name": "exec_module",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "VendorImporter.find_spec": {
            "name": "find_spec",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        },
        "VendorImporter.install": {
            "name": "install",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/appdirs.py": {
        "user_data_dir": {
            "name": "user_data_dir",
            "location": 45,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_data_dir": {
            "name": "site_data_dir",
            "location": 100,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_config_dir": {
            "name": "user_config_dir",
            "location": 166,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "site_config_dir": {
            "name": "site_config_dir",
            "location": 206,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "multipath": []
            }
        },
        "user_cache_dir": {
            "name": "user_cache_dir",
            "location": 257,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "user_state_dir": {
            "name": "user_state_dir",
            "location": 314,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": []
            }
        },
        "user_log_dir": {
            "name": "user_log_dir",
            "location": 356,
            "return": [],
            "arguments": {
                "appname": [],
                "appauthor": [],
                "version": [],
                "opinion": []
            }
        },
        "_get_win_folder_from_registry": {
            "name": "_get_win_folder_from_registry",
            "location": 455,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "_get_win_folder_with_pywin32": {
            "name": "_get_win_folder_with_pywin32",
            "location": 479,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "_get_win_folder_with_ctypes": {
            "name": "_get_win_folder_with_ctypes",
            "location": 506,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "_get_win_folder_with_jna": {
            "name": "_get_win_folder_with_jna",
            "location": 532,
            "return": [],
            "arguments": {
                "csidl_name": []
            }
        },
        "AppDirs.__init__": {
            "name": "__init__",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "appname": [],
                "appauthor": [],
                "version": [],
                "roaming": [],
                "multipath": []
            }
        },
        "AppDirs.user_data_dir": {
            "name": "user_data_dir",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.site_data_dir": {
            "name": "site_data_dir",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.user_config_dir": {
            "name": "user_config_dir",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.site_config_dir": {
            "name": "site_config_dir",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.user_cache_dir": {
            "name": "user_cache_dir",
            "location": 438,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.user_state_dir": {
            "name": "user_state_dir",
            "location": 443,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AppDirs.user_log_dir": {
            "name": "user_log_dir",
            "location": 448,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/zipp.py": {
        "_parents": {
            "name": "_parents",
            "location": 18,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_ancestry": {
            "name": "_ancestry",
            "location": 37,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_difference": {
            "name": "_difference",
            "location": 63,
            "return": [],
            "arguments": {
                "minuend": [],
                "subtrahend": []
            }
        },
        "_pathlib_compat": {
            "name": "_pathlib_compat",
            "location": 139,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "CompleteDirs._implied_dirs": {
            "name": "_implied_dirs",
            "location": 78,
            "return": [],
            "arguments": {
                "names": []
            }
        },
        "CompleteDirs.namelist": {
            "name": "namelist",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompleteDirs._name_set": {
            "name": "_name_set",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompleteDirs.resolve_dir": {
            "name": "resolve_dir",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CompleteDirs.make": {
            "name": "make",
            "location": 101,
            "return": [],
            "arguments": {
                "cls": [],
                "source": []
            }
        },
        "FastLookup.namelist": {
            "name": "namelist",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FastLookup._name_set": {
            "name": "_name_set",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__init__": {
            "name": "__init__",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "root": [],
                "at": []
            }
        },
        "Path.open": {
            "name": "open",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "Path.name": {
            "name": "name",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.suffix": {
            "name": "suffix",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.suffixes": {
            "name": "suffixes",
            "location": 270,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.stem": {
            "name": "stem",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.filename": {
            "name": "filename",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.read_text": {
            "name": "read_text",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.read_bytes": {
            "name": "read_bytes",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path._is_child": {
            "name": "_is_child",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Path._next": {
            "name": "_next",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "at": []
            }
        },
        "Path.is_dir": {
            "name": "is_dir",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.is_file": {
            "name": "is_file",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.exists": {
            "name": "exists",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.iterdir": {
            "name": "iterdir",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__str__": {
            "name": "__str__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__repr__": {
            "name": "__repr__",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.joinpath": {
            "name": "joinpath",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.parent": {
            "name": "parent",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/abc.py": {
        "ResourceReader.open_resource": {
            "name": "open_resource",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceReader.resource_path": {
            "name": "resource_path",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceReader.is_resource": {
            "name": "is_resource",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceReader.contents": {
            "name": "contents",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.iterdir": {
            "name": "iterdir",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.read_bytes": {
            "name": "read_bytes",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.read_text": {
            "name": "read_text",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "encoding": []
            }
        },
        "Traversable.is_dir": {
            "name": "is_dir",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.is_file": {
            "name": "is_file",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.joinpath": {
            "name": "joinpath",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "Traversable.__truediv__": {
            "name": "__truediv__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "Traversable.open": {
            "name": "open",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "Traversable.name": {
            "name": "name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResources.files": {
            "name": "files",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResources.open_resource": {
            "name": "open_resource",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "TraversableResources.resource_path": {
            "name": "resource_path",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "TraversableResources.is_resource": {
            "name": "is_resource",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "TraversableResources.contents": {
            "name": "contents",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/readers.py": {
        "remove_duplicates": {
            "name": "remove_duplicates",
            "location": 11,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "FileReader.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "loader": []
            }
        },
        "FileReader.resource_path": {
            "name": "resource_path",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "FileReader.files": {
            "name": "files",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipReader.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "module": []
            }
        },
        "ZipReader.open_resource": {
            "name": "open_resource",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipReader.is_resource": {
            "name": "is_resource",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipReader.files": {
            "name": "files",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.iterdir": {
            "name": "iterdir",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.read_bytes": {
            "name": "read_bytes",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.read_text": {
            "name": "read_text",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.is_dir": {
            "name": "is_dir",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.is_file": {
            "name": "is_file",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.joinpath": {
            "name": "joinpath",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "MultiplexedPath.open": {
            "name": "open",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.name": {
            "name": "name",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.__repr__": {
            "name": "__repr__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamespaceReader.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "namespace_path": []
            }
        },
        "NamespaceReader.resource_path": {
            "name": "resource_path",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "NamespaceReader.files": {
            "name": "files",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/simple.py": {
        "SimpleReader.package": {
            "name": "package",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.children": {
            "name": "children",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.resources": {
            "name": "resources",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.open_binary": {
            "name": "open_binary",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "SimpleReader.name": {
            "name": "name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [],
                "name": []
            }
        },
        "ResourceHandle.is_file": {
            "name": "is_file",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.is_dir": {
            "name": "is_dir",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.open": {
            "name": "open",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "ResourceHandle.joinpath": {
            "name": "joinpath",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ResourceContainer.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "reader": []
            }
        },
        "ResourceContainer.is_dir": {
            "name": "is_dir",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.is_file": {
            "name": "is_file",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.iterdir": {
            "name": "iterdir",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.open": {
            "name": "open",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.joinpath": {
            "name": "joinpath",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TraversableReader.files": {
            "name": "files",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/_adapters.py": {
        "_io_wrapper": {
            "name": "_io_wrapper",
            "location": 32,
            "return": [],
            "arguments": {
                "file": [],
                "mode": []
            }
        },
        "wrap_spec": {
            "name": "wrap_spec",
            "location": 165,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "SpecLoaderAdapter.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "adapter": []
            }
        },
        "SpecLoaderAdapter.__getattr__": {
            "name": "__getattr__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TraversableResourcesLoader.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader": {
            "name": "get_resource_reader",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CompatibilityFiles.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "CompatibilityFiles._reader": {
            "name": "_reader",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles._native": {
            "name": "_native",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.__getattr__": {
            "name": "__getattr__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "CompatibilityFiles.files": {
            "name": "files",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "reader": []
            }
        },
        "CompatibilityFiles.SpecPath.iterdir": {
            "name": "iterdir",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.is_file": {
            "name": "is_file",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.joinpath": {
            "name": "joinpath",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.SpecPath.name": {
            "name": "name",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.open": {
            "name": "open",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "CompatibilityFiles.ChildPath.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "reader": [],
                "name": []
            }
        },
        "CompatibilityFiles.ChildPath.iterdir": {
            "name": "iterdir",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.is_file": {
            "name": "is_file",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.is_dir": {
            "name": "is_dir",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.joinpath": {
            "name": "joinpath",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.ChildPath.name": {
            "name": "name",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.open": {
            "name": "open",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "CompatibilityFiles.OrphanPath.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.iterdir": {
            "name": "iterdir",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.is_file": {
            "name": "is_file",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.joinpath": {
            "name": "joinpath",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.OrphanPath.name": {
            "name": "name",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.open": {
            "name": "open",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/_common.py": {
        "files": {
            "name": "files",
            "location": 17,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "get_resource_reader": {
            "name": "get_resource_reader",
            "location": 25,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "resolve": {
            "name": "resolve",
            "location": 42,
            "return": [],
            "arguments": {
                "cand": []
            }
        },
        "get_package": {
            "name": "get_package",
            "location": 47,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "from_package": {
            "name": "from_package",
            "location": 59,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "_tempfile": {
            "name": "_tempfile",
            "location": 70,
            "return": [],
            "arguments": {
                "reader": [],
                "suffix": []
            }
        },
        "as_file": {
            "name": "as_file",
            "location": 90,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_": {
            "name": "_",
            "location": 100,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/_compat.py": {
        "wrap_spec": {
            "name": "wrap_spec",
            "location": 88,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "TraversableResourcesLoader.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "TraversableResourcesLoader.path": {
            "name": "path",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader": {
            "name": "get_resource_reader",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "runtime_checkable": {
            "name": "runtime_checkable",
            "location": 18,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._zip_reader": {
            "name": "_zip_reader",
            "location": 47,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._namespace_reader": {
            "name": "_namespace_reader",
            "location": 51,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._available_reader": {
            "name": "_available_reader",
            "location": 55,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._native_reader": {
            "name": "_native_reader",
            "location": 59,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._file_reader": {
            "name": "_file_reader",
            "location": 63,
            "return": [],
            "arguments": {
                "spec": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/_itertools.py": {
        "unique_everseen": {
            "name": "unique_everseen",
            "location": 18,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/_legacy.py": {
        "deprecated": {
            "name": "deprecated",
            "location": 15,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "normalize_path": {
            "name": "normalize_path",
            "location": 30,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "open_binary": {
            "name": "open_binary",
            "location": 44,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "read_binary": {
            "name": "read_binary",
            "location": 50,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "open_text": {
            "name": "open_text",
            "location": 56,
            "return": [],
            "arguments": {
                "package": [],
                "resource": [],
                "encoding": [],
                "errors": []
            }
        },
        "read_text": {
            "name": "read_text",
            "location": 69,
            "return": [],
            "arguments": {
                "package": [],
                "resource": [],
                "encoding": [],
                "errors": []
            }
        },
        "contents": {
            "name": "contents",
            "location": 85,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "is_resource": {
            "name": "is_resource",
            "location": 96,
            "return": [],
            "arguments": {
                "package": [],
                "name": []
            }
        },
        "path": {
            "name": "path",
            "location": 109,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "deprecated.wrapper": {
            "name": "wrapper",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/importlib_resources/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/jaraco/context.py": {
        "pushd": {
            "name": "pushd",
            "location": 11,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "tarball_context": {
            "name": "tarball_context",
            "location": 21,
            "return": [],
            "arguments": {
                "url": [],
                "target_dir": [],
                "runner": [],
                "pushd": []
            }
        },
        "infer_compression": {
            "name": "infer_compression",
            "location": 48,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "temp_dir": {
            "name": "temp_dir",
            "location": 60,
            "return": [],
            "arguments": {
                "remover": []
            }
        },
        "repo_context": {
            "name": "repo_context",
            "location": 73,
            "return": [],
            "arguments": {
                "url": [],
                "branch": [],
                "quiet": [],
                "dest_ctx": []
            }
        },
        "null": {
            "name": "null",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "ExceptionTrap.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "exceptions": []
            }
        },
        "ExceptionTrap.__enter__": {
            "name": "__enter__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.type": {
            "name": "type",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.value": {
            "name": "value",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.tb": {
            "name": "tb",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.__exit__": {
            "name": "__exit__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.__bool__": {
            "name": "__bool__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.raises": {
            "name": "raises",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "ExceptionTrap.passes": {
            "name": "passes",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "ExceptionTrap.raises.wrapper": {
            "name": "wrapper",
            "location": 176,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/jaraco/functools.py": {
        "compose": {
            "name": "compose",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "method_caller": {
            "name": "method_caller",
            "location": 40,
            "return": [],
            "arguments": {
                "method_name": []
            }
        },
        "once": {
            "name": "once",
            "location": 58,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "method_cache": {
            "name": "method_cache",
            "location": 100,
            "return": [],
            "arguments": {
                "method": [],
                "cache_wrapper": []
            }
        },
        "_special_method_cache": {
            "name": "_special_method_cache",
            "location": 190,
            "return": [],
            "arguments": {
                "method": [],
                "cache_wrapper": []
            }
        },
        "apply": {
            "name": "apply",
            "location": 220,
            "return": [],
            "arguments": {
                "transform": []
            }
        },
        "result_invoke": {
            "name": "result_invoke",
            "location": 241,
            "return": [],
            "arguments": {
                "action": []
            }
        },
        "call_aside": {
            "name": "call_aside",
            "location": 269,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "first_invoke": {
            "name": "first_invoke",
            "location": 319,
            "return": [],
            "arguments": {
                "func1": [],
                "func2": []
            }
        },
        "retry_call": {
            "name": "retry_call",
            "location": 333,
            "return": [],
            "arguments": {
                "func": [],
                "cleanup": [],
                "retries": [],
                "trap": []
            }
        },
        "retry": {
            "name": "retry",
            "location": 350,
            "return": [],
            "arguments": {}
        },
        "print_yielded": {
            "name": "print_yielded",
            "location": 376,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "pass_none": {
            "name": "pass_none",
            "location": 392,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "assign_params": {
            "name": "assign_params",
            "location": 410,
            "return": [],
            "arguments": {
                "func": [],
                "namespace": []
            }
        },
        "save_method_args": {
            "name": "save_method_args",
            "location": 442,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "except_": {
            "name": "except_",
            "location": 488,
            "return": [],
            "arguments": {}
        },
        "compose.compose_two": {
            "name": "compose_two",
            "location": 34,
            "return": [],
            "arguments": {
                "f1": [],
                "f2": []
            }
        },
        "method_caller.call_method": {
            "name": "call_method",
            "location": 51,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "once.wrapper": {
            "name": "wrapper",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "method_cache.wrapper": {
            "name": "wrapper",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_special_method_cache.proxy": {
            "name": "proxy",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "apply.wrap": {
            "name": "wrap",
            "location": 235,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "result_invoke.wrap": {
            "name": "wrap",
            "location": 257,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "Throttler.__init__": {
            "name": "__init__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "max_rate": []
            }
        },
        "Throttler.reset": {
            "name": "reset",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler.__call__": {
            "name": "__call__",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler._wait": {
            "name": "_wait",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler.__get__": {
            "name": "__get__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "type": []
            }
        },
        "first_invoke.wrapper": {
            "name": "wrapper",
            "location": 326,
            "return": [],
            "arguments": {}
        },
        "retry.decorate": {
            "name": "decorate",
            "location": 365,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "pass_none.wrapper": {
            "name": "wrapper",
            "location": 403,
            "return": [],
            "arguments": {
                "param": []
            }
        },
        "save_method_args.wrapper": {
            "name": "wrapper",
            "location": 479,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "except_.decorate": {
            "name": "decorate",
            "location": 512,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "result_invoke.wrap.wrapper": {
            "name": "wrapper",
            "location": 259,
            "return": [],
            "arguments": {}
        },
        "retry.decorate.wrapper": {
            "name": "wrapper",
            "location": 367,
            "return": [],
            "arguments": {}
        },
        "except_.decorate.wrapper": {
            "name": "wrapper",
            "location": 514,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/jaraco/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/jaraco/text/__init__.py": {
        "substitution": {
            "name": "substitution",
            "location": 15,
            "return": [],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "multi_substitution": {
            "name": "multi_substitution",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "is_decodable": {
            "name": "is_decodable",
            "location": 137,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_binary": {
            "name": "is_binary",
            "location": 150,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "trim": {
            "name": "trim",
            "location": 163,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "wrap": {
            "name": "wrap",
            "location": 174,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "unwrap": {
            "name": "unwrap",
            "location": 207,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "indent": {
            "name": "indent",
            "location": 244,
            "return": [],
            "arguments": {
                "string": [],
                "prefix": []
            }
        },
        "simple_html_strip": {
            "name": "simple_html_strip",
            "location": 385,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "remove_prefix": {
            "name": "remove_prefix",
            "location": 482,
            "return": [],
            "arguments": {
                "text": [],
                "prefix": []
            }
        },
        "remove_suffix": {
            "name": "remove_suffix",
            "location": 496,
            "return": [],
            "arguments": {
                "text": [],
                "suffix": []
            }
        },
        "normalize_newlines": {
            "name": "normalize_newlines",
            "location": 510,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "_nonblank": {
            "name": "_nonblank",
            "location": 526,
            "return": [],
            "arguments": {
                "str": []
            }
        },
        "yield_lines": {
            "name": "yield_lines",
            "location": 531,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "_": {
            "name": "_",
            "location": 550,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "drop_comment": {
            "name": "drop_comment",
            "location": 554,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "join_continuation": {
            "name": "join_continuation",
            "location": 569,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "FoldedCase.__lt__": {
            "name": "__lt__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__gt__": {
            "name": "__gt__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__eq__": {
            "name": "__eq__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__ne__": {
            "name": "__ne__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__hash__": {
            "name": "__hash__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.__contains__": {
            "name": "__contains__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.in_": {
            "name": "in_",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.lower": {
            "name": "lower",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.index": {
            "name": "index",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "FoldedCase.split": {
            "name": "split",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "splitter": [],
                "maxsplit": []
            }
        },
        "Splitter.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Splitter.__call__": {
            "name": "__call__",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "WordSet.capitalized": {
            "name": "capitalized",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.lowered": {
            "name": "lowered",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.camel_case": {
            "name": "camel_case",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.headless_camel_case": {
            "name": "headless_camel_case",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.underscore_separated": {
            "name": "underscore_separated",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.dash_separated": {
            "name": "dash_separated",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.space_separated": {
            "name": "space_separated",
            "location": 329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.trim_right": {
            "name": "trim_right",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.trim_left": {
            "name": "trim_left",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.trim": {
            "name": "trim",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.__getitem__": {
            "name": "__getitem__",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.parse": {
            "name": "parse",
            "location": 372,
            "return": [],
            "arguments": {
                "cls": [],
                "identifier": []
            }
        },
        "WordSet.from_class_name": {
            "name": "from_class_name",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [],
                "subject": []
            }
        },
        "SeparatedValues.__iter__": {
            "name": "__iter__",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stripper.__init__": {
            "name": "__init__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "lines": []
            }
        },
        "Stripper.strip_prefix": {
            "name": "strip_prefix",
            "location": 460,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": []
            }
        },
        "Stripper.__call__": {
            "name": "__call__",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Stripper.common_prefix": {
            "name": "common_prefix",
            "location": 472,
            "return": [],
            "arguments": {
                "s1": [],
                "s2": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/more_itertools/more.py": {
        "chunked": {
            "name": "chunked",
            "location": 138,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "strict": []
            }
        },
        "first": {
            "name": "first",
            "location": 173,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "last": {
            "name": "last",
            "location": 201,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "nth_or_last": {
            "name": "nth_or_last",
            "location": 230,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "default": []
            }
        },
        "collate": {
            "name": "collate",
            "location": 412,
            "return": [],
            "arguments": {}
        },
        "consumer": {
            "name": "consumer",
            "location": 450,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "ilen": {
            "name": "ilen",
            "location": 482,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "iterate": {
            "name": "iterate",
            "location": 499,
            "return": [],
            "arguments": {
                "func": [],
                "start": []
            }
        },
        "with_iter": {
            "name": "with_iter",
            "location": 512,
            "return": [],
            "arguments": {
                "context_manager": []
            }
        },
        "one": {
            "name": "one",
            "location": 527,
            "return": [],
            "arguments": {
                "iterable": [],
                "too_short": [],
                "too_long": []
            }
        },
        "raise_": {
            "name": "raise_",
            "location": 594,
            "return": [],
            "arguments": {
                "exception": []
            }
        },
        "strictly_n": {
            "name": "strictly_n",
            "location": 598,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "too_short": [],
                "too_long": []
            }
        },
        "distinct_permutations": {
            "name": "distinct_permutations",
            "location": 672,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "intersperse": {
            "name": "intersperse",
            "location": 772,
            "return": [],
            "arguments": {
                "e": [],
                "iterable": [],
                "n": []
            }
        },
        "unique_to_each": {
            "name": "unique_to_each",
            "location": 798,
            "return": [],
            "arguments": {}
        },
        "windowed": {
            "name": "windowed",
            "location": 831,
            "return": [],
            "arguments": {
                "seq": [],
                "n": [],
                "fillvalue": [],
                "step": []
            }
        },
        "substrings": {
            "name": "substrings",
            "location": 882,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "substrings_indexes": {
            "name": "substrings_indexes",
            "location": 908,
            "return": [],
            "arguments": {
                "seq": [],
                "reverse": []
            }
        },
        "spy": {
            "name": "spy",
            "location": 1038,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "interleave": {
            "name": "interleave",
            "location": 1081,
            "return": [],
            "arguments": {}
        },
        "interleave_longest": {
            "name": "interleave_longest",
            "location": 1095,
            "return": [],
            "arguments": {}
        },
        "interleave_evenly": {
            "name": "interleave_evenly",
            "location": 1111,
            "return": [],
            "arguments": {
                "iterables": [],
                "lengths": []
            }
        },
        "collapse": {
            "name": "collapse",
            "location": 1177,
            "return": [],
            "arguments": {
                "iterable": [],
                "base_type": [],
                "levels": []
            }
        },
        "side_effect": {
            "name": "side_effect",
            "location": 1225,
            "return": [],
            "arguments": {
                "func": [],
                "iterable": [],
                "chunk_size": [],
                "before": [],
                "after": []
            }
        },
        "sliced": {
            "name": "sliced",
            "location": 1286,
            "return": [],
            "arguments": {
                "seq": [],
                "n": [],
                "strict": []
            }
        },
        "split_at": {
            "name": "split_at",
            "location": 1320,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": [],
                "keep_separator": []
            }
        },
        "split_before": {
            "name": "split_before",
            "location": 1364,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_after": {
            "name": "split_after",
            "location": 1399,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_when": {
            "name": "split_when",
            "location": 1435,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_into": {
            "name": "split_into",
            "location": 1480,
            "return": [],
            "arguments": {
                "iterable": [],
                "sizes": []
            }
        },
        "padded": {
            "name": "padded",
            "location": 1525,
            "return": [],
            "arguments": {
                "iterable": [],
                "fillvalue": [],
                "n": [],
                "next_multiple": []
            }
        },
        "repeat_each": {
            "name": "repeat_each",
            "location": 1557,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "repeat_last": {
            "name": "repeat_last",
            "location": 1566,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "distribute": {
            "name": "distribute",
            "location": 1585,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "stagger": {
            "name": "stagger",
            "location": 1620,
            "return": [],
            "arguments": {
                "iterable": [],
                "offsets": [],
                "longest": [],
                "fillvalue": []
            }
        },
        "_zip_equal_generator": {
            "name": "_zip_equal_generator",
            "location": 1659,
            "return": [],
            "arguments": {
                "iterables": []
            }
        },
        "_zip_equal": {
            "name": "_zip_equal",
            "location": 1667,
            "return": [],
            "arguments": {}
        },
        "zip_equal": {
            "name": "zip_equal",
            "location": 1687,
            "return": [],
            "arguments": {}
        },
        "zip_offset": {
            "name": "zip_offset",
            "location": 1718,
            "return": [],
            "arguments": {}
        },
        "sort_together": {
            "name": "sort_together",
            "location": 1757,
            "return": [],
            "arguments": {
                "iterables": [],
                "key_list": [],
                "key": [],
                "reverse": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 1823,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "divide": {
            "name": "divide",
            "location": 1872,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "always_iterable": {
            "name": "always_iterable",
            "location": 1923,
            "return": [],
            "arguments": {
                "obj": [],
                "base_type": []
            }
        },
        "adjacent": {
            "name": "adjacent",
            "location": 1976,
            "return": [],
            "arguments": {
                "predicate": [],
                "iterable": [],
                "distance": []
            }
        },
        "groupby_transform": {
            "name": "groupby_transform",
            "location": 2015,
            "return": [],
            "arguments": {
                "iterable": [],
                "keyfunc": [],
                "valuefunc": [],
                "reducefunc": []
            }
        },
        "count_cycle": {
            "name": "count_cycle",
            "location": 2277,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "mark_ends": {
            "name": "mark_ends",
            "location": 2293,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "locate": {
            "name": "locate",
            "location": 2330,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "window_size": []
            }
        },
        "lstrip": {
            "name": "lstrip",
            "location": 2378,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "rstrip": {
            "name": "rstrip",
            "location": 2396,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "strip": {
            "name": "strip",
            "location": 2422,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "_islice_helper": {
            "name": "_islice_helper",
            "location": 2485,
            "return": [],
            "arguments": {
                "it": [],
                "s": []
            }
        },
        "always_reversible": {
            "name": "always_reversible",
            "location": 2581,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "consecutive_groups": {
            "name": "consecutive_groups",
            "location": 2599,
            "return": [],
            "arguments": {
                "iterable": [],
                "ordering": []
            }
        },
        "difference": {
            "name": "difference",
            "location": 2647,
            "return": [],
            "arguments": {
                "iterable": [],
                "func": []
            }
        },
        "exactly_n": {
            "name": "exactly_n",
            "location": 2903,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "predicate": []
            }
        },
        "circular_shifts": {
            "name": "circular_shifts",
            "location": 2921,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "make_decorator": {
            "name": "make_decorator",
            "location": 2931,
            "return": [],
            "arguments": {
                "wrapping_func": [],
                "result_index": []
            }
        },
        "map_reduce": {
            "name": "map_reduce",
            "location": 2996,
            "return": [],
            "arguments": {
                "iterable": [],
                "keyfunc": [],
                "valuefunc": [],
                "reducefunc": []
            }
        },
        "rlocate": {
            "name": "rlocate",
            "location": 3063,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "window_size": []
            }
        },
        "replace": {
            "name": "replace",
            "location": 3106,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "substitutes": [],
                "count": [],
                "window_size": []
            }
        },
        "partitions": {
            "name": "partitions",
            "location": 3167,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "set_partitions": {
            "name": "set_partitions",
            "location": 3187,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": []
            }
        },
        "only": {
            "name": "only",
            "location": 3288,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": [],
                "too_long": []
            }
        },
        "ichunked": {
            "name": "ichunked",
            "location": 3329,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "distinct_combinations": {
            "name": "distinct_combinations",
            "location": 3366,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "filter_except": {
            "name": "filter_except",
            "location": 3406,
            "return": [],
            "arguments": {
                "validator": [],
                "iterable": []
            }
        },
        "map_except": {
            "name": "map_except",
            "location": 3430,
            "return": [],
            "arguments": {
                "function": [],
                "iterable": []
            }
        },
        "map_if": {
            "name": "map_if",
            "location": 3451,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "func": [],
                "func_else": []
            }
        },
        "_sample_unweighted": {
            "name": "_sample_unweighted",
            "location": 3473,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": []
            }
        },
        "_sample_weighted": {
            "name": "_sample_weighted",
            "location": 3499,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": [],
                "weights": []
            }
        },
        "sample": {
            "name": "sample",
            "location": 3534,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": [],
                "weights": []
            }
        },
        "is_sorted": {
            "name": "is_sorted",
            "location": 3570,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": [],
                "reverse": [],
                "strict": []
            }
        },
        "windowed_complete": {
            "name": "windowed_complete",
            "location": 3725,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "all_unique": {
            "name": "all_unique",
            "location": 3765,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "nth_product": {
            "name": "nth_product",
            "location": 3800,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "nth_permutation": {
            "name": "nth_permutation",
            "location": 3831,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": [],
                "index": []
            }
        },
        "value_chain": {
            "name": "value_chain",
            "location": 3877,
            "return": [],
            "arguments": {}
        },
        "product_index": {
            "name": "product_index",
            "location": 3905,
            "return": [],
            "arguments": {
                "element": []
            }
        },
        "combination_index": {
            "name": "combination_index",
            "location": 3930,
            "return": [],
            "arguments": {
                "element": [],
                "iterable": []
            }
        },
        "permutation_index": {
            "name": "permutation_index",
            "location": 3973,
            "return": [],
            "arguments": {
                "element": [],
                "iterable": []
            }
        },
        "chunked_even": {
            "name": "chunked_even",
            "location": 4029,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "_chunked_even_online": {
            "name": "_chunked_even_online",
            "location": 4051,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "_chunked_even_finite": {
            "name": "_chunked_even_finite",
            "location": 4062,
            "return": [],
            "arguments": {
                "iterable": [],
                "N": [],
                "n": []
            }
        },
        "zip_broadcast": {
            "name": "zip_broadcast",
            "location": 4097,
            "return": [],
            "arguments": {}
        },
        "unique_in_window": {
            "name": "unique_in_window",
            "location": 4160,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "key": []
            }
        },
        "duplicates_everseen": {
            "name": "duplicates_everseen",
            "location": 4198,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "duplicates_justseen": {
            "name": "duplicates_justseen",
            "location": 4228,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "minmax": {
            "name": "minmax",
            "location": 4247,
            "return": [],
            "arguments": {
                "iterable_or_value": []
            }
        },
        "peekable.__init__": {
            "name": "__init__",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "peekable.__iter__": {
            "name": "__iter__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.__bool__": {
            "name": "__bool__",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.peek": {
            "name": "peek",
            "location": 320,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "peekable.prepend": {
            "name": "prepend",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.__next__": {
            "name": "__next__",
            "location": 367,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable._get_slice": {
            "name": "_get_slice",
            "location": 373,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "peekable.__getitem__": {
            "name": "__getitem__",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "consumer.wrapper": {
            "name": "wrapper",
            "location": 474,
            "return": [],
            "arguments": {}
        },
        "distinct_permutations._full": {
            "name": "_full",
            "location": 697,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "distinct_permutations._partial": {
            "name": "_partial",
            "location": 721,
            "return": [],
            "arguments": {
                "A": [],
                "r": []
            }
        },
        "bucket.__init__": {
            "name": "__init__",
            "location": 978,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "key": [],
                "validator": []
            }
        },
        "bucket.__contains__": {
            "name": "__contains__",
            "location": 984,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "bucket._get_values": {
            "name": "_get_values",
            "location": 997,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "bucket.__iter__": {
            "name": "__iter__",
            "location": 1023,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bucket.__getitem__": {
            "name": "__getitem__",
            "location": 1031,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "collapse.walk": {
            "name": "walk",
            "location": 1204,
            "return": [],
            "arguments": {
                "node": [],
                "level": []
            }
        },
        "UnequalIterablesError.__init__": {
            "name": "__init__",
            "location": 1649,
            "return": [],
            "arguments": {
                "self": [],
                "details": []
            }
        },
        "unzip.itemgetter": {
            "name": "itemgetter",
            "location": 1851,
            "return": [],
            "arguments": {
                "i": []
            }
        },
        "numeric_range.__init__": {
            "name": "__init__",
            "location": 2114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__bool__": {
            "name": "__bool__",
            "location": 2142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__contains__": {
            "name": "__contains__",
            "location": 2148,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "numeric_range.__eq__": {
            "name": "__eq__",
            "location": 2158,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "numeric_range.__getitem__": {
            "name": "__getitem__",
            "location": 2173,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "numeric_range.__hash__": {
            "name": "__hash__",
            "location": 2200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__iter__": {
            "name": "__iter__",
            "location": 2206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__len__": {
            "name": "__len__",
            "location": 2213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range._init_len": {
            "name": "_init_len",
            "location": 2216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__reduce__": {
            "name": "__reduce__",
            "location": 2232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__repr__": {
            "name": "__repr__",
            "location": 2235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__reversed__": {
            "name": "__reversed__",
            "location": 2245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.count": {
            "name": "count",
            "location": 2252,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "numeric_range.index": {
            "name": "index",
            "location": 2255,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "numeric_range._get_by_index": {
            "name": "_get_by_index",
            "location": 2269,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "islice_extended.__init__": {
            "name": "__init__",
            "location": 2465,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "islice_extended.__iter__": {
            "name": "__iter__",
            "location": 2472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "islice_extended.__next__": {
            "name": "__next__",
            "location": 2475,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "islice_extended.__getitem__": {
            "name": "__getitem__",
            "location": 2478,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SequenceView.__init__": {
            "name": "__init__",
            "location": 2719,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "SequenceView.__getitem__": {
            "name": "__getitem__",
            "location": 2724,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SequenceView.__len__": {
            "name": "__len__",
            "location": 2727,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SequenceView.__repr__": {
            "name": "__repr__",
            "location": 2730,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__init__": {
            "name": "__init__",
            "location": 2820,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "maxlen": []
            }
        },
        "seekable.__iter__": {
            "name": "__iter__",
            "location": 2828,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__next__": {
            "name": "__next__",
            "location": 2831,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__bool__": {
            "name": "__bool__",
            "location": 2845,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.peek": {
            "name": "peek",
            "location": 2852,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "seekable.elements": {
            "name": "elements",
            "location": 2864,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.seek": {
            "name": "seek",
            "location": 2867,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "run_length.encode": {
            "name": "encode",
            "location": 2895,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "run_length.decode": {
            "name": "decode",
            "location": 2899,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "make_decorator.decorator": {
            "name": "decorator",
            "location": 2981,
            "return": [],
            "arguments": {}
        },
        "set_partitions.set_partitions_helper": {
            "name": "set_partitions_helper",
            "location": 3222,
            "return": [],
            "arguments": {
                "L": [],
                "k": []
            }
        },
        "time_limited.__init__": {
            "name": "__init__",
            "location": 3268,
            "return": [],
            "arguments": {
                "self": [],
                "limit_seconds": [],
                "iterable": []
            }
        },
        "time_limited.__iter__": {
            "name": "__iter__",
            "location": 3276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "time_limited.__next__": {
            "name": "__next__",
            "location": 3279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__init__": {
            "name": "__init__",
            "location": 3652,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "callback_kwd": [],
                "wait_seconds": []
            }
        },
        "callback_iter.__enter__": {
            "name": "__enter__",
            "location": 3661,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__exit__": {
            "name": "__exit__",
            "location": 3664,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "callback_iter.__iter__": {
            "name": "__iter__",
            "location": 3668,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__next__": {
            "name": "__next__",
            "location": 3671,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.done": {
            "name": "done",
            "location": 3675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.result": {
            "name": "result",
            "location": 3681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter._reader": {
            "name": "_reader",
            "location": 3687,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "countable.__init__": {
            "name": "__init__",
            "location": 4015,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "countable.__iter__": {
            "name": "__iter__",
            "location": 4019,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "countable.__next__": {
            "name": "__next__",
            "location": 4022,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "zip_broadcast.is_scalar": {
            "name": "is_scalar",
            "location": 4119,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "chunked.ret": {
            "name": "ret",
            "location": 162,
            "return": [],
            "arguments": {}
        },
        "sliced.ret": {
            "name": "ret",
            "location": 1309,
            "return": [],
            "arguments": {}
        },
        "unzip.itemgetter.getter": {
            "name": "getter",
            "location": 1852,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "make_decorator.decorator.outer_wrapper": {
            "name": "outer_wrapper",
            "location": 2982,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "callback_iter._reader.callback": {
            "name": "callback",
            "location": 3690,
            "return": [],
            "arguments": {}
        },
        "make_decorator.decorator.outer_wrapper.inner_wrapper": {
            "name": "inner_wrapper",
            "location": 2983,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/more_itertools/recipes.py": {
        "take": {
            "name": "take",
            "location": 63,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "tabulate": {
            "name": "tabulate",
            "location": 79,
            "return": [],
            "arguments": {
                "function": [],
                "start": []
            }
        },
        "tail": {
            "name": "tail",
            "location": 97,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "consume": {
            "name": "consume",
            "location": 108,
            "return": [],
            "arguments": {
                "iterator": [],
                "n": []
            }
        },
        "nth": {
            "name": "nth",
            "location": 148,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "default": []
            }
        },
        "all_equal": {
            "name": "all_equal",
            "location": 161,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "quantify": {
            "name": "quantify",
            "location": 175,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "pad_none": {
            "name": "pad_none",
            "location": 185,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "ncycles": {
            "name": "ncycles",
            "location": 202,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "dotproduct": {
            "name": "dotproduct",
            "location": 212,
            "return": [],
            "arguments": {
                "vec1": [],
                "vec2": []
            }
        },
        "flatten": {
            "name": "flatten",
            "location": 222,
            "return": [],
            "arguments": {
                "listOfLists": []
            }
        },
        "repeatfunc": {
            "name": "repeatfunc",
            "location": 234,
            "return": [],
            "arguments": {
                "func": [],
                "times": []
            }
        },
        "_pairwise": {
            "name": "_pairwise",
            "location": 261,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "grouper": {
            "name": "grouper",
            "location": 287,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "fillvalue": []
            }
        },
        "roundrobin": {
            "name": "roundrobin",
            "location": 303,
            "return": [],
            "arguments": {}
        },
        "partition": {
            "name": "partition",
            "location": 326,
            "return": [],
            "arguments": {
                "pred": [],
                "iterable": []
            }
        },
        "powerset": {
            "name": "powerset",
            "location": 357,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "unique_everseen": {
            "name": "unique_everseen",
            "location": 380,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "unique_justseen": {
            "name": "unique_justseen",
            "location": 425,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "iter_except": {
            "name": "iter_except",
            "location": 437,
            "return": [],
            "arguments": {
                "func": [],
                "exception": [],
                "first": []
            }
        },
        "first_true": {
            "name": "first_true",
            "location": 468,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": [],
                "pred": []
            }
        },
        "random_product": {
            "name": "random_product",
            "location": 488,
            "return": [],
            "arguments": {}
        },
        "random_permutation": {
            "name": "random_permutation",
            "location": 508,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "random_combination": {
            "name": "random_combination",
            "location": 526,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "random_combination_with_replacement": {
            "name": "random_combination_with_replacement",
            "location": 542,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "nth_combination": {
            "name": "nth_combination",
            "location": 559,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": [],
                "index": []
            }
        },
        "prepend": {
            "name": "prepend",
            "location": 601,
            "return": [],
            "arguments": {
                "value": [],
                "iterator": []
            }
        },
        "convolve": {
            "name": "convolve",
            "location": 616,
            "return": [],
            "arguments": {
                "signal": [],
                "kernel": []
            }
        },
        "before_and_after": {
            "name": "before_and_after",
            "location": 636,
            "return": [],
            "arguments": {
                "predicate": [],
                "it": []
            }
        },
        "triplewise": {
            "name": "triplewise",
            "location": 668,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "sliding_window": {
            "name": "sliding_window",
            "location": 679,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "pairwise": {
            "name": "pairwise",
            "location": 281,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "before_and_after.true_iterator": {
            "name": "true_iterator",
            "location": 653,
            "return": [],
            "arguments": {}
        },
        "before_and_after.remainder_iterator": {
            "name": "remainder_iterator",
            "location": 661,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/more_itertools/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/markers.py": {
        "_coerce_parse_result": {
            "name": "_coerce_parse_result",
            "location": 141,
            "return": [],
            "arguments": {
                "results": []
            }
        },
        "_format_marker": {
            "name": "_format_marker",
            "location": 148,
            "return": [],
            "arguments": {
                "marker": [],
                "first": []
            }
        },
        "_eval_op": {
            "name": "_eval_op",
            "location": 189,
            "return": [],
            "arguments": {
                "lhs": [],
                "op": [],
                "rhs": []
            }
        },
        "_get_env": {
            "name": "_get_env",
            "location": 211,
            "return": [],
            "arguments": {
                "environment": [],
                "name": []
            }
        },
        "_evaluate_markers": {
            "name": "_evaluate_markers",
            "location": 222,
            "return": [],
            "arguments": {
                "markers": [],
                "environment": []
            }
        },
        "format_full_version": {
            "name": "format_full_version",
            "location": 249,
            "return": [],
            "arguments": {
                "info": []
            }
        },
        "default_environment": {
            "name": "default_environment",
            "location": 257,
            "return": [],
            "arguments": {}
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__repr__": {
            "name": "__repr__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.serialize": {
            "name": "serialize",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.serialize": {
            "name": "serialize",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.serialize": {
            "name": "serialize",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Op.serialize": {
            "name": "serialize",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "marker": []
            }
        },
        "Marker.__str__": {
            "name": "__str__",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__repr__": {
            "name": "__repr__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.evaluate": {
            "name": "evaluate",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "environment": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/requirements.py": {
        "Requirement.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_string": []
            }
        },
        "Requirement.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/specifiers.py": {
        "_require_version_compare": {
            "name": "_require_version_compare",
            "location": 287,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_version_split": {
            "name": "_version_split",
            "location": 585,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_is_not_suffix": {
            "name": "_is_not_suffix",
            "location": 596,
            "return": [],
            "arguments": {
                "segment": []
            }
        },
        "_pad_version": {
            "name": "_pad_version",
            "location": 602,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "BaseSpecifier.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__hash__": {
            "name": "__hash__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__eq__": {
            "name": "__eq__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BaseSpecifier.prereleases": {
            "name": "prereleases",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseSpecifier.contains": {
            "name": "contains",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "BaseSpecifier.filter": {
            "name": "filter",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier._canonical_spec": {
            "name": "_canonical_spec",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__hash__": {
            "name": "__hash__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__eq__": {
            "name": "__eq__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_IndividualSpecifier._get_operator": {
            "name": "_get_operator",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "op": []
            }
        },
        "_IndividualSpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "_IndividualSpecifier.operator": {
            "name": "operator",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.version": {
            "name": "version",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.prereleases": {
            "name": "prereleases",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_IndividualSpecifier.__contains__": {
            "name": "__contains__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_IndividualSpecifier.contains": {
            "name": "contains",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.filter": {
            "name": "filter",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "LegacySpecifier.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "LegacySpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacySpecifier._compare_equal": {
            "name": "_compare_equal",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "_require_version_compare.wrapped": {
            "name": "wrapped",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_compatible": {
            "name": "_compare_compatible",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_equal": {
            "name": "_compare_equal",
            "location": 430,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 492,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_arbitrary": {
            "name": "_compare_arbitrary",
            "location": 549,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier.prereleases": {
            "name": "prereleases",
            "location": 578,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__init__": {
            "name": "__init__",
            "location": 621,
            "return": [],
            "arguments": {
                "self": [],
                "specifiers": [],
                "prereleases": []
            }
        },
        "SpecifierSet.__repr__": {
            "name": "__repr__",
            "location": 645,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__str__": {
            "name": "__str__",
            "location": 654,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__hash__": {
            "name": "__hash__",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__and__": {
            "name": "__and__",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__eq__": {
            "name": "__eq__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__len__": {
            "name": "__len__",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__iter__": {
            "name": "__iter__",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.prereleases": {
            "name": "prereleases",
            "location": 716,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__contains__": {
            "name": "__contains__",
            "location": 719,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SpecifierSet.contains": {
            "name": "contains",
            "location": 722,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "SpecifierSet.filter": {
            "name": "filter",
            "location": 751,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/tags.py": {
        "parse_tag": {
            "name": "parse_tag",
            "location": 96,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "_get_config_var": {
            "name": "_get_config_var",
            "location": 112,
            "return": [],
            "arguments": {
                "name": [],
                "warn": []
            }
        },
        "_normalize_string": {
            "name": "_normalize_string",
            "location": 121,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "_abi3_applies": {
            "name": "_abi3_applies",
            "location": 125,
            "return": [],
            "arguments": {
                "python_version": []
            }
        },
        "_cpython_abis": {
            "name": "_cpython_abis",
            "location": 134,
            "return": [],
            "arguments": {
                "py_version": [],
                "warn": []
            }
        },
        "cpython_tags": {
            "name": "cpython_tags",
            "location": 170,
            "return": [],
            "arguments": {
                "python_version": [],
                "abis": [],
                "platforms": []
            }
        },
        "_generic_abi": {
            "name": "_generic_abi",
            "location": 227,
            "return": [],
            "arguments": {}
        },
        "generic_tags": {
            "name": "generic_tags",
            "location": 233,
            "return": [],
            "arguments": {
                "interpreter": [],
                "abis": [],
                "platforms": []
            }
        },
        "_py_interpreter_range": {
            "name": "_py_interpreter_range",
            "location": 263,
            "return": [],
            "arguments": {
                "py_version": []
            }
        },
        "compatible_tags": {
            "name": "compatible_tags",
            "location": 278,
            "return": [],
            "arguments": {
                "python_version": [],
                "interpreter": [],
                "platforms": []
            }
        },
        "_mac_arch": {
            "name": "_mac_arch",
            "location": 303,
            "return": [],
            "arguments": {
                "arch": [],
                "is_32bit": []
            }
        },
        "_mac_binary_formats": {
            "name": "_mac_binary_formats",
            "location": 313,
            "return": [],
            "arguments": {
                "version": [],
                "cpu_arch": []
            }
        },
        "mac_platforms": {
            "name": "mac_platforms",
            "location": 345,
            "return": [],
            "arguments": {
                "version": [],
                "arch": []
            }
        },
        "_linux_platforms": {
            "name": "_linux_platforms",
            "location": 417,
            "return": [],
            "arguments": {
                "is_32bit": []
            }
        },
        "_generic_platforms": {
            "name": "_generic_platforms",
            "location": 430,
            "return": [],
            "arguments": {}
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 434,
            "return": [],
            "arguments": {}
        },
        "interpreter_name": {
            "name": "interpreter_name",
            "location": 446,
            "return": [],
            "arguments": {}
        },
        "interpreter_version": {
            "name": "interpreter_version",
            "location": 454,
            "return": [],
            "arguments": {}
        },
        "_version_nodot": {
            "name": "_version_nodot",
            "location": 466,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "sys_tags": {
            "name": "sys_tags",
            "location": 470,
            "return": [],
            "arguments": {}
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "interpreter": [],
                "abi": [],
                "platform": []
            }
        },
        "Tag.interpreter": {
            "name": "interpreter",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.abi": {
            "name": "abi",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.platform": {
            "name": "platform",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__eq__": {
            "name": "__eq__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Tag.__hash__": {
            "name": "__hash__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/utils.py": {
        "canonicalize_name": {
            "name": "canonicalize_name",
            "location": 32,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "canonicalize_version": {
            "name": "canonicalize_version",
            "location": 38,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "parse_wheel_filename": {
            "name": "parse_wheel_filename",
            "location": 81,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "parse_sdist_filename": {
            "name": "parse_sdist_filename",
            "location": 117,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/version.py": {
        "parse": {
            "name": "parse",
            "location": 42,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_version_parts": {
            "name": "_parse_version_parts",
            "location": 179,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_legacy_cmpkey": {
            "name": "_legacy_cmpkey",
            "location": 196,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_letter_version": {
            "name": "_parse_letter_version",
            "location": 393,
            "return": [],
            "arguments": {
                "letter": [],
                "number": []
            }
        },
        "_parse_local_version": {
            "name": "_parse_local_version",
            "location": 432,
            "return": [],
            "arguments": {
                "local": []
            }
        },
        "_cmpkey": {
            "name": "_cmpkey",
            "location": 444,
            "return": [],
            "arguments": {
                "epoch": [],
                "release": [],
                "pre": [],
                "post": [],
                "dev": [],
                "local": []
            }
        },
        "_BaseVersion.__hash__": {
            "name": "__hash__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_BaseVersion.__lt__": {
            "name": "__lt__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__le__": {
            "name": "__le__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__eq__": {
            "name": "__eq__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ge__": {
            "name": "__ge__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__gt__": {
            "name": "__gt__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ne__": {
            "name": "__ne__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LegacyVersion.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacyVersion.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.__repr__": {
            "name": "__repr__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.public": {
            "name": "public",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.base_version": {
            "name": "base_version",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.epoch": {
            "name": "epoch",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.release": {
            "name": "release",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.pre": {
            "name": "pre",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.post": {
            "name": "post",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.dev": {
            "name": "dev",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.local": {
            "name": "local",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_postrelease": {
            "name": "is_postrelease",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_devrelease": {
            "name": "is_devrelease",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "Version.__repr__": {
            "name": "__repr__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.epoch": {
            "name": "epoch",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.release": {
            "name": "release",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.pre": {
            "name": "pre",
            "location": 332,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.post": {
            "name": "post",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.dev": {
            "name": "dev",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.local": {
            "name": "local",
            "location": 345,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.public": {
            "name": "public",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.base_version": {
            "name": "base_version",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_prerelease": {
            "name": "is_prerelease",
            "location": 369,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_postrelease": {
            "name": "is_postrelease",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_devrelease": {
            "name": "is_devrelease",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.major": {
            "name": "major",
            "location": 381,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.minor": {
            "name": "minor",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.micro": {
            "name": "micro",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/_manylinux.py": {
        "_get_elf_header": {
            "name": "_get_elf_header",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "_is_linux_armhf": {
            "name": "_is_linux_armhf",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "_is_linux_i686": {
            "name": "_is_linux_i686",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "_have_compatible_abi": {
            "name": "_have_compatible_abi",
            "location": 114,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_glibc_version_string_confstr": {
            "name": "_glibc_version_string_confstr",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string_ctypes": {
            "name": "_glibc_version_string_ctypes",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string": {
            "name": "_glibc_version_string",
            "location": 198,
            "return": [],
            "arguments": {}
        },
        "_parse_glibc_version": {
            "name": "_parse_glibc_version",
            "location": 203,
            "return": [],
            "arguments": {
                "version_str": []
            }
        },
        "_get_glibc_version": {
            "name": "_get_glibc_version",
            "location": 223,
            "return": [],
            "arguments": {}
        },
        "_is_compatible": {
            "name": "_is_compatible",
            "location": 231,
            "return": [],
            "arguments": {
                "name": [],
                "arch": [],
                "version": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 267,
            "return": [],
            "arguments": {
                "linux": [],
                "arch": []
            }
        },
        "_ELFFileHeader.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "_ELFFileHeader.__init__.unpack": {
            "name": "unpack",
            "location": 36,
            "return": [],
            "arguments": {
                "fmt": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/_musllinux.py": {
        "_read_unpacked": {
            "name": "_read_unpacked",
            "location": 18,
            "return": [],
            "arguments": {
                "f": [],
                "fmt": []
            }
        },
        "_parse_ld_musl_from_elf": {
            "name": "_parse_ld_musl_from_elf",
            "location": 22,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_parse_musl_version": {
            "name": "_parse_musl_version",
            "location": 76,
            "return": [],
            "arguments": {
                "output": []
            }
        },
        "_get_musl_version": {
            "name": "_get_musl_version",
            "location": 87,
            "return": [],
            "arguments": {
                "executable": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 110,
            "return": [],
            "arguments": {
                "arch": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/_structures.py": {
        "InfinityType.__repr__": {
            "name": "__repr__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__hash__": {
            "name": "__hash__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__lt__": {
            "name": "__lt__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__le__": {
            "name": "__le__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__eq__": {
            "name": "__eq__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__gt__": {
            "name": "__gt__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__ge__": {
            "name": "__ge__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__neg__": {
            "name": "__neg__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__repr__": {
            "name": "__repr__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__hash__": {
            "name": "__hash__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__lt__": {
            "name": "__lt__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__le__": {
            "name": "__le__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__eq__": {
            "name": "__eq__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__gt__": {
            "name": "__gt__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__ge__": {
            "name": "__ge__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__neg__": {
            "name": "__neg__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/__about__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/packaging/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/actions.py": {
        "match_only_at_col": {
            "name": "match_only_at_col",
            "location": 33,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "replace_with": {
            "name": "replace_with",
            "location": 46,
            "return": [],
            "arguments": {
                "repl_str": []
            }
        },
        "remove_quotes": {
            "name": "remove_quotes",
            "location": 63,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "with_attribute": {
            "name": "with_attribute",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "with_class": {
            "name": "with_class",
            "location": 162,
            "return": [],
            "arguments": {
                "classname": [],
                "namespace": []
            }
        },
        "OnlyOnce.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "method_call": []
            }
        },
        "OnlyOnce.__call__": {
            "name": "__call__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "l": [],
                "t": []
            }
        },
        "OnlyOnce.reset": {
            "name": "reset",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "match_only_at_col.verify_col": {
            "name": "verify_col",
            "location": 39,
            "return": [],
            "arguments": {
                "strg": [],
                "locn": [],
                "toks": []
            }
        },
        "with_attribute.pa": {
            "name": "pa",
            "location": 143,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/common.py": {
        "pyparsing_common.convert_to_date": {
            "name": "convert_to_date",
            "location": 253,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.convert_to_datetime": {
            "name": "convert_to_datetime",
            "location": 280,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.strip_html_tags": {
            "name": "strip_html_tags",
            "location": 322,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        },
        "pyparsing_common.convert_to_date.cvt_fn": {
            "name": "cvt_fn",
            "location": 271,
            "return": [],
            "arguments": {
                "ss": [],
                "ll": [],
                "tt": []
            }
        },
        "pyparsing_common.convert_to_datetime.cvt_fn": {
            "name": "cvt_fn",
            "location": 298,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/core.py": {
        "enable_diag": {
            "name": "enable_diag",
            "location": 167,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "disable_diag": {
            "name": "disable_diag",
            "location": 174,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "_should_enable_warnings": {
            "name": "_should_enable_warnings",
            "location": 192,
            "return": [],
            "arguments": {
                "cmd_line_warn_options": [],
                "warn_env_var": []
            }
        },
        "_trim_arity": {
            "name": "_trim_arity",
            "location": 262,
            "return": [],
            "arguments": {
                "func": [],
                "max_limit": []
            }
        },
        "condition_as_parse_action": {
            "name": "condition_as_parse_action",
            "location": 322,
            "return": [],
            "arguments": {
                "fn": [],
                "message": [],
                "fatal": []
            }
        },
        "_default_start_debug_action": {
            "name": "_default_start_debug_action",
            "location": 350,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "cache_hit": []
            }
        },
        "_default_success_debug_action": {
            "name": "_default_success_debug_action",
            "location": 369,
            "return": [],
            "arguments": {
                "instring": [],
                "startloc": [],
                "endloc": [],
                "expr": [],
                "toks": [],
                "cache_hit": []
            }
        },
        "_default_exception_debug_action": {
            "name": "_default_exception_debug_action",
            "location": 381,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "exc": [],
                "cache_hit": []
            }
        },
        "null_debug_action": {
            "name": "null_debug_action",
            "location": 396,
            "return": [],
            "arguments": {}
        },
        "trace_parse_action": {
            "name": "trace_parse_action",
            "location": 5609,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "srange": {
            "name": "srange",
            "location": 5684,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "token_map": {
            "name": "token_map",
            "location": 5721,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "autoname_elements": {
            "name": "autoname_elements",
            "location": 5767,
            "return": [],
            "arguments": {}
        },
        "__diag__.enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_trim_arity.extract_tb": {
            "name": "extract_tb",
            "location": 272,
            "return": [],
            "arguments": {
                "tb": [],
                "limit": []
            }
        },
        "_trim_arity.wrapper": {
            "name": "wrapper",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "condition_as_parse_action.pa": {
            "name": "pa",
            "location": 343,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "ParserElement.set_default_whitespace_chars": {
            "name": "set_default_whitespace_chars",
            "location": 408,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "ParserElement.inline_literals_using": {
            "name": "inline_literals_using",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ParserElement.__init__": {
            "name": "__init__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "savelist": []
            }
        },
        "ParserElement.suppress_warning": {
            "name": "suppress_warning",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "warning_type": []
            }
        },
        "ParserElement.copy": {
            "name": "copy",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_results_name": {
            "name": "set_results_name",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "ParserElement._setResultsName": {
            "name": "_setResultsName",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "ParserElement.set_break": {
            "name": "set_break",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "break_flag": []
            }
        },
        "ParserElement.set_parse_action": {
            "name": "set_parse_action",
            "location": 595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_parse_action": {
            "name": "add_parse_action",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_condition": {
            "name": "add_condition",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_fail_action": {
            "name": "set_fail_action",
            "location": 728,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "ParserElement._skipIgnorables": {
            "name": "_skipIgnorables",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.preParse": {
            "name": "preParse",
            "location": 757,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.parseImpl": {
            "name": "parseImpl",
            "location": 769,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParserElement.postParse": {
            "name": "postParse",
            "location": 772,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "ParserElement._parseNoCache": {
            "name": "_parseNoCache",
            "location": 776,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.try_parse": {
            "name": "try_parse",
            "location": 878,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "raise_fatal": []
            }
        },
        "ParserElement.can_parse_next": {
            "name": "can_parse_next",
            "location": 886,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement._parseCache": {
            "name": "_parseCache",
            "location": 909,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.reset_cache": {
            "name": "reset_cache",
            "location": 960,
            "return": [],
            "arguments": {}
        },
        "ParserElement.disable_memoization": {
            "name": "disable_memoization",
            "location": 971,
            "return": [],
            "arguments": {}
        },
        "ParserElement.enable_left_recursion": {
            "name": "enable_left_recursion",
            "location": 985,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.enable_packrat": {
            "name": "enable_packrat",
            "location": 1033,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.parse_string": {
            "name": "parse_string",
            "location": 1076,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "parse_all": []
            }
        },
        "ParserElement.scan_string": {
            "name": "scan_string",
            "location": 1145,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": [],
                "overlap": []
            }
        },
        "ParserElement.transform_string": {
            "name": "transform_string",
            "location": 1234,
            "return": [],
            "arguments": {
                "self": [],
                "instring": []
            }
        },
        "ParserElement.search_string": {
            "name": "search_string",
            "location": 1280,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": []
            }
        },
        "ParserElement.split": {
            "name": "split",
            "location": 1320,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "maxsplit": [],
                "include_separators": []
            }
        },
        "ParserElement.__add__": {
            "name": "__add__",
            "location": 1352,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__radd__": {
            "name": "__radd__",
            "location": 1392,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__sub__": {
            "name": "__sub__",
            "location": 1409,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rsub__": {
            "name": "__rsub__",
            "location": 1423,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__mul__": {
            "name": "__mul__",
            "location": 1437,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rmul__": {
            "name": "__rmul__",
            "location": 1523,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__or__": {
            "name": "__or__",
            "location": 1526,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__ror__": {
            "name": "__ror__",
            "location": 1543,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__xor__": {
            "name": "__xor__",
            "location": 1557,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rxor__": {
            "name": "__rxor__",
            "location": 1571,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__and__": {
            "name": "__and__",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rand__": {
            "name": "__rand__",
            "location": 1599,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__invert__": {
            "name": "__invert__",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__getitem__": {
            "name": "__getitem__",
            "location": 1623,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ParserElement.__call__": {
            "name": "__call__",
            "location": 1663,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.suppress": {
            "name": "suppress",
            "location": 1683,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 1690,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 1700,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.set_whitespace_chars": {
            "name": "set_whitespace_chars",
            "location": 1711,
            "return": [],
            "arguments": {
                "self": [],
                "chars": [],
                "copy_defaults": []
            }
        },
        "ParserElement.parse_with_tabs": {
            "name": "parse_with_tabs",
            "location": 1722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore": {
            "name": "ignore",
            "location": 1731,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.set_debug_actions": {
            "name": "set_debug_actions",
            "location": 1759,
            "return": [],
            "arguments": {
                "self": [],
                "start_action": [],
                "success_action": [],
                "exception_action": []
            }
        },
        "ParserElement.set_debug": {
            "name": "set_debug",
            "location": 1785,
            "return": [],
            "arguments": {
                "self": [],
                "flag": []
            }
        },
        "ParserElement.default_name": {
            "name": "default_name",
            "location": 1833,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 1839,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_name": {
            "name": "set_name",
            "location": 1844,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.name": {
            "name": "name",
            "location": 1858,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__str__": {
            "name": "__str__",
            "location": 1862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__repr__": {
            "name": "__repr__",
            "location": 1865,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.streamline": {
            "name": "streamline",
            "location": 1868,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.recurse": {
            "name": "recurse",
            "location": 1873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._checkRecursion": {
            "name": "_checkRecursion",
            "location": 1876,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParserElement.validate": {
            "name": "validate",
            "location": 1881,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParserElement.parse_file": {
            "name": "parse_file",
            "location": 1887,
            "return": [],
            "arguments": {
                "self": [],
                "file_or_filename": [],
                "encoding": [],
                "parse_all": []
            }
        },
        "ParserElement.__eq__": {
            "name": "__eq__",
            "location": 1915,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__hash__": {
            "name": "__hash__",
            "location": 1924,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.matches": {
            "name": "matches",
            "location": 1927,
            "return": [],
            "arguments": {
                "self": [],
                "test_string": [],
                "parse_all": []
            }
        },
        "ParserElement.run_tests": {
            "name": "run_tests",
            "location": 1950,
            "return": [],
            "arguments": {
                "self": [],
                "tests": [],
                "parse_all": [],
                "comment": [],
                "full_dump": [],
                "print_results": [],
                "failure_tests": [],
                "post_parse": [],
                "file": [],
                "with_line_numbers": []
            }
        },
        "ParserElement.create_diagram": {
            "name": "create_diagram",
            "location": 2145,
            "return": [],
            "arguments": {
                "self": [],
                "output_html": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_PendingSkip.__init__": {
            "name": "__init__",
            "location": 2223,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "must_skip": []
            }
        },
        "_PendingSkip._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.__add__": {
            "name": "__add__",
            "location": 2231,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_PendingSkip.__repr__": {
            "name": "__repr__",
            "location": 2252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.parseImpl": {
            "name": "parseImpl",
            "location": 2255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token.__init__": {
            "name": "__init__",
            "location": 2266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Empty.__init__": {
            "name": "__init__",
            "location": 2278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.__init__": {
            "name": "__init__",
            "location": 2289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2295,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Literal.__init__": {
            "name": "__init__",
            "location": 2315,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "Literal._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Literal.parseImpl": {
            "name": "parseImpl",
            "location": 2336,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_SingleCharLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2345,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.__init__": {
            "name": "__init__",
            "location": 2383,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": [],
                "caseless": []
            }
        },
        "Keyword._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Keyword.parseImpl": {
            "name": "parseImpl",
            "location": 2415,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.set_default_keyword_chars": {
            "name": "set_default_keyword_chars",
            "location": 2463,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "CaselessLiteral.__init__": {
            "name": "__init__",
            "location": 2486,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "CaselessLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2493,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CaselessKeyword.__init__": {
            "name": "__init__",
            "location": 2511,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": []
            }
        },
        "CloseMatch.__init__": {
            "name": "__init__",
            "location": 2559,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "max_mismatches": []
            }
        },
        "CloseMatch._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2578,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CloseMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2581,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Word.__init__": {
            "name": "__init__",
            "location": 2678,
            "return": [],
            "arguments": {
                "self": [],
                "init_chars": [],
                "body_chars": [],
                "min": [],
                "max": [],
                "exact": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Word._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Word.parseImpl": {
            "name": "parseImpl",
            "location": 2820,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_WordRegex.parseImpl": {
            "name": "parseImpl",
            "location": 2854,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Char.__init__": {
            "name": "__init__",
            "location": 2869,
            "return": [],
            "arguments": {
                "self": [],
                "charset": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Regex.__init__": {
            "name": "__init__",
            "location": 2915,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "flags": [],
                "as_group_list": [],
                "as_match": []
            }
        },
        "Regex.re": {
            "name": "re",
            "location": 2962,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.re_match": {
            "name": "re_match",
            "location": 2974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.mayReturnEmpty": {
            "name": "mayReturnEmpty",
            "location": 2978,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2981,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.parseImpl": {
            "name": "parseImpl",
            "location": 2984,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsGroupList": {
            "name": "parseImplAsGroupList",
            "location": 2997,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsMatch": {
            "name": "parseImplAsMatch",
            "location": 3006,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.sub": {
            "name": "sub",
            "location": 3015,
            "return": [],
            "arguments": {
                "self": [],
                "repl": []
            }
        },
        "QuotedString.__init__": {
            "name": "__init__",
            "location": 3086,
            "return": [],
            "arguments": {
                "self": [],
                "quote_char": [],
                "esc_char": [],
                "esc_quote": [],
                "multiline": [],
                "unquote_results": [],
                "end_quote_char": [],
                "convert_whitespace_escapes": []
            }
        },
        "QuotedString._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuotedString.parseImpl": {
            "name": "parseImpl",
            "location": 3207,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CharsNotIn.__init__": {
            "name": "__init__",
            "location": 3262,
            "return": [],
            "arguments": {
                "self": [],
                "not_chars": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "CharsNotIn._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharsNotIn.parseImpl": {
            "name": "parseImpl",
            "location": 3304,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "White.__init__": {
            "name": "__init__",
            "location": 3357,
            "return": [],
            "arguments": {
                "self": [],
                "ws": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "White._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3379,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "White.parseImpl": {
            "name": "parseImpl",
            "location": 3382,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PositionToken.__init__": {
            "name": "__init__",
            "location": 3399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoToColumn.__init__": {
            "name": "__init__",
            "location": 3410,
            "return": [],
            "arguments": {
                "self": [],
                "colno": []
            }
        },
        "GoToColumn.preParse": {
            "name": "preParse",
            "location": 3414,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "GoToColumn.parseImpl": {
            "name": "parseImpl",
            "location": 3427,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineStart.__init__": {
            "name": "__init__",
            "location": 3459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineStart.preParse": {
            "name": "preParse",
            "location": 3467,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "LineStart.parseImpl": {
            "name": "parseImpl",
            "location": 3477,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineEnd.__init__": {
            "name": "__init__",
            "location": 3488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3494,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringStart.__init__": {
            "name": "__init__",
            "location": 3511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringStart.parseImpl": {
            "name": "parseImpl",
            "location": 3515,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringEnd.__init__": {
            "name": "__init__",
            "location": 3528,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3532,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordStart.__init__": {
            "name": "__init__",
            "location": 3553,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordStart.parseImpl": {
            "name": "parseImpl",
            "location": 3559,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordEnd.__init__": {
            "name": "__init__",
            "location": 3578,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3585,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseExpression.__init__": {
            "name": "__init__",
            "location": 3601,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "ParseExpression.recurse": {
            "name": "recurse",
            "location": 3627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.append": {
            "name": "append",
            "location": 3630,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 3635,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 3648,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore": {
            "name": "ignore",
            "location": 3660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3672,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.streamline": {
            "name": "streamline",
            "location": 3675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.validate": {
            "name": "validate",
            "location": 3716,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseExpression.copy": {
            "name": "copy",
            "location": 3722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression._setResultsName": {
            "name": "_setResultsName",
            "location": 3727,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "And.__init__": {
            "name": "__init__",
            "location": 3783,
            "return": [],
            "arguments": {
                "self": [],
                "exprs_arg": [],
                "savelist": []
            }
        },
        "And.streamline": {
            "name": "streamline",
            "location": 3816,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And.parseImpl": {
            "name": "parseImpl",
            "location": 3861,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "And.__iadd__": {
            "name": "__iadd__",
            "location": 3891,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "And._checkRecursion": {
            "name": "_checkRecursion",
            "location": 3896,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "And._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.__init__": {
            "name": "__init__",
            "location": 3929,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Or.streamline": {
            "name": "streamline",
            "location": 3937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.parseImpl": {
            "name": "parseImpl",
            "location": 3949,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Or.__ixor__": {
            "name": "__ixor__",
            "location": 4031,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Or._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4036,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or._setResultsName": {
            "name": "_setResultsName",
            "location": 4039,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "MatchFirst.__init__": {
            "name": "__init__",
            "location": 4084,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "MatchFirst.streamline": {
            "name": "streamline",
            "location": 4092,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst.parseImpl": {
            "name": "parseImpl",
            "location": 4108,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "MatchFirst.__ior__": {
            "name": "__ior__",
            "location": 4142,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MatchFirst._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst._setResultsName": {
            "name": "_setResultsName",
            "location": 4150,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "Each.__init__": {
            "name": "__init__",
            "location": 4235,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Each.streamline": {
            "name": "streamline",
            "location": 4245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Each.parseImpl": {
            "name": "parseImpl",
            "location": 4253,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Each._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.__init__": {
            "name": "__init__",
            "location": 4349,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "ParseElementEnhance.recurse": {
            "name": "recurse",
            "location": 4370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.parseImpl": {
            "name": "parseImpl",
            "location": 4373,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseElementEnhance.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 4379,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 4388,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore": {
            "name": "ignore",
            "location": 4397,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseElementEnhance.streamline": {
            "name": "streamline",
            "location": 4409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance._checkRecursion": {
            "name": "_checkRecursion",
            "location": 4415,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParseElementEnhance.validate": {
            "name": "validate",
            "location": 4422,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseElementEnhance._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock.__init__": {
            "name": "__init__",
            "location": 4455,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "IndentedBlock.parseImpl": {
            "name": "parseImpl",
            "location": 4465,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtStringStart.__init__": {
            "name": "__init__",
            "location": 4512,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtStringStart.parseImpl": {
            "name": "parseImpl",
            "location": 4516,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtLineStart.__init__": {
            "name": "__init__",
            "location": 4545,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtLineStart.parseImpl": {
            "name": "parseImpl",
            "location": 4549,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "FollowedBy.__init__": {
            "name": "__init__",
            "location": 4578,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "FollowedBy.parseImpl": {
            "name": "parseImpl",
            "location": 4582,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PrecededBy.__init__": {
            "name": "__init__",
            "location": 4621,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "retreat": []
            }
        },
        "PrecededBy.parseImpl": {
            "name": "parseImpl",
            "location": 4646,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Located.parseImpl": {
            "name": "parseImpl",
            "location": 4700,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny.__init__": {
            "name": "__init__",
            "location": 4739,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "NotAny.parseImpl": {
            "name": "parseImpl",
            "location": 4748,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_MultipleMatch.__init__": {
            "name": "__init__",
            "location": 4758,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "_MultipleMatch.stopOn": {
            "name": "stopOn",
            "location": 4773,
            "return": [],
            "arguments": {
                "self": [],
                "ender": []
            }
        },
        "_MultipleMatch.parseImpl": {
            "name": "parseImpl",
            "location": 4779,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_MultipleMatch._setResultsName": {
            "name": "_setResultsName",
            "location": 4808,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "OneOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZeroOrMore.__init__": {
            "name": "__init__",
            "location": 4879,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "ZeroOrMore.parseImpl": {
            "name": "parseImpl",
            "location": 4889,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ZeroOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4895,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__bool__": {
            "name": "__bool__",
            "location": 4900,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__str__": {
            "name": "__str__",
            "location": 4903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Opt.__init__": {
            "name": "__init__",
            "location": 4948,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "default": []
            }
        },
        "Opt.parseImpl": {
            "name": "parseImpl",
            "location": 4956,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Opt._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4972,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SkipTo.__init__": {
            "name": "__init__",
            "location": 5044,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "include": [],
                "ignore": [],
                "fail_on": []
            }
        },
        "SkipTo.parseImpl": {
            "name": "parseImpl",
            "location": 5066,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.__init__": {
            "name": "__init__",
            "location": 5146,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__lshift__": {
            "name": "__lshift__",
            "location": 5151,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__ilshift__": {
            "name": "__ilshift__",
            "location": 5168,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__or__": {
            "name": "__or__",
            "location": 5171,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__del__": {
            "name": "__del__",
            "location": 5186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.parseImpl": {
            "name": "parseImpl",
            "location": 5200,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 5295,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 5299,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.streamline": {
            "name": "streamline",
            "location": 5303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.validate": {
            "name": "validate",
            "location": 5310,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "Forward._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 5320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.copy": {
            "name": "copy",
            "location": 5334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward._setResultsName": {
            "name": "_setResultsName",
            "location": 5342,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "TokenConverter.__init__": {
            "name": "__init__",
            "location": 5368,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Combine.__init__": {
            "name": "__init__",
            "location": 5392,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "join_string": [],
                "adjacent": []
            }
        },
        "Combine.ignore": {
            "name": "ignore",
            "location": 5410,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Combine.postParse": {
            "name": "postParse",
            "location": 5417,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Group.__init__": {
            "name": "__init__",
            "location": 5451,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "aslist": []
            }
        },
        "Group.postParse": {
            "name": "postParse",
            "location": 5456,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Dict.__init__": {
            "name": "__init__",
            "location": 5509,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "asdict": []
            }
        },
        "Dict.postParse": {
            "name": "postParse",
            "location": 5514,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.__init__": {
            "name": "__init__",
            "location": 5585,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Suppress.__add__": {
            "name": "__add__",
            "location": 5590,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.__sub__": {
            "name": "__sub__",
            "location": 5596,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.postParse": {
            "name": "postParse",
            "location": 5602,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.suppress": {
            "name": "suppress",
            "location": 5605,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "trace_parse_action.z": {
            "name": "z",
            "location": 5636,
            "return": [],
            "arguments": {}
        },
        "token_map.pa": {
            "name": "pa",
            "location": 5758,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "owner": []
            }
        },
        "Word._generateDefaultName.charsAsStr": {
            "name": "charsAsStr",
            "location": 2792,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "And._ErrorStop.__init__": {
            "name": "__init__",
            "location": 3776,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And._ErrorStop._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3780,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock._Indent.__init__": {
            "name": "__init__",
            "location": 4444,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "IndentedBlock._IndentGreater.__init__": {
            "name": "__init__",
            "location": 4450,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "ParserElement.set_break.breaker": {
            "name": "breaker",
            "location": 581,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.__mul__.makeOptionalList": {
            "name": "makeOptionalList",
            "location": 1503,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "_PendingSkip.__add__.must_skip": {
            "name": "must_skip",
            "location": 2235,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "_PendingSkip.__add__.show_skip": {
            "name": "show_skip",
            "location": 2240,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "Regex.sub.pa": {
            "name": "pa",
            "location": 3039,
            "return": [],
            "arguments": {
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/exceptions.py": {
        "ParseBaseException.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "pstr": [],
                "loc": [],
                "msg": [],
                "elem": []
            }
        },
        "ParseBaseException.explain_exception": {
            "name": "explain_exception",
            "location": 42,
            "return": [],
            "arguments": {
                "exc": [],
                "depth": []
            }
        },
        "ParseBaseException._from_exception": {
            "name": "_from_exception",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "pe": []
            }
        },
        "ParseBaseException.line": {
            "name": "line",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.lineno": {
            "name": "lineno",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.col": {
            "name": "col",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.column": {
            "name": "column",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__str__": {
            "name": "__str__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__repr__": {
            "name": "__repr__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.mark_input_line": {
            "name": "mark_input_line",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "marker_string": []
            }
        },
        "ParseBaseException.explain": {
            "name": "explain",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "depth": []
            }
        },
        "RecursiveGrammarException.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "RecursiveGrammarException.__str__": {
            "name": "__str__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/helpers.py": {
        "delimited_list": {
            "name": "delimited_list",
            "location": 14,
            "return": [],
            "arguments": {
                "expr": [],
                "delim": [],
                "combine": [],
                "min": [],
                "max": []
            }
        },
        "counted_array": {
            "name": "counted_array",
            "location": 71,
            "return": [],
            "arguments": {
                "expr": [],
                "int_expr": []
            }
        },
        "match_previous_literal": {
            "name": "match_previous_literal",
            "location": 131,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "match_previous_expr": {
            "name": "match_previous_expr",
            "location": 164,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "one_of": {
            "name": "one_of",
            "location": 200,
            "return": [],
            "arguments": {
                "strs": [],
                "caseless": [],
                "use_regex": [],
                "as_keyword": []
            }
        },
        "dict_of": {
            "name": "dict_of",
            "location": 327,
            "return": [],
            "arguments": {
                "key": [],
                "value": []
            }
        },
        "original_text_for": {
            "name": "original_text_for",
            "location": 367,
            "return": [],
            "arguments": {
                "expr": [],
                "as_string": []
            }
        },
        "ungroup": {
            "name": "ungroup",
            "location": 420,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "locatedExpr": {
            "name": "locatedExpr",
            "location": 427,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "nested_expr": {
            "name": "nested_expr",
            "location": 462,
            "return": [],
            "arguments": {
                "opener": [],
                "closer": [],
                "content": [],
                "ignore_expr": []
            }
        },
        "_makeTags": {
            "name": "_makeTags",
            "location": 590,
            "return": [],
            "arguments": {
                "tagStr": [],
                "xml": [],
                "suppress_LT": [],
                "suppress_GT": []
            }
        },
        "make_html_tags": {
            "name": "make_html_tags",
            "location": 648,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "make_xml_tags": {
            "name": "make_xml_tags",
            "location": 675,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "replace_html_entity": {
            "name": "replace_html_entity",
            "location": 698,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "infix_notation": {
            "name": "infix_notation",
            "location": 726,
            "return": [],
            "arguments": {
                "base_expr": [],
                "op_list": [],
                "lpar": [],
                "rpar": []
            }
        },
        "indentedBlock": {
            "name": "indentedBlock",
            "location": 891,
            "return": [],
            "arguments": {
                "blockStatementExpr": [],
                "indentStack": [],
                "indent": [],
                "backup_stacks": []
            }
        },
        "counted_array.count_field_parse_action": {
            "name": "count_field_parse_action",
            "location": 115,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_literal.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 148,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 183,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.reset_stack": {
            "name": "reset_stack",
            "location": 979,
            "return": [],
            "arguments": {}
        },
        "indentedBlock.checkPeerIndent": {
            "name": "checkPeerIndent",
            "location": 982,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkSubIndent": {
            "name": "checkSubIndent",
            "location": 991,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkUnindent": {
            "name": "checkUnindent",
            "location": 998,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater.must_match_these_tokens": {
            "name": "must_match_these_tokens",
            "location": 186,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "original_text_for.extractText": {
            "name": "extractText",
            "location": 411,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "infix_notation._FB.parseImpl": {
            "name": "parseImpl",
            "location": 808,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/results.py": {
        "_ParseResultsWithOffset.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": []
            }
        },
        "_ParseResultsWithOffset.__getitem__": {
            "name": "__getitem__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "_ParseResultsWithOffset.__getstate__": {
            "name": "__getstate__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ParseResultsWithOffset.__setstate__": {
            "name": "__setstate__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__new__": {
            "name": "__new__",
            "location": 136,
            "return": [],
            "arguments": {
                "cls": [],
                "toklist": [],
                "name": []
            }
        },
        "ParseResults.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "toklist": [],
                "name": [],
                "asList": [],
                "modal": [],
                "isinstance": []
            }
        },
        "ParseResults.__getitem__": {
            "name": "__getitem__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__setitem__": {
            "name": "__setitem__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": [],
                "isinstance": []
            }
        },
        "ParseResults.__delitem__": {
            "name": "__delitem__",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__contains__": {
            "name": "__contains__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "ParseResults.__len__": {
            "name": "__len__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__bool__": {
            "name": "__bool__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__iter__": {
            "name": "__iter__",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__reversed__": {
            "name": "__reversed__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.keys": {
            "name": "keys",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.values": {
            "name": "values",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.items": {
            "name": "items",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.haskeys": {
            "name": "haskeys",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.pop": {
            "name": "pop",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get": {
            "name": "get",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default_value": []
            }
        },
        "ParseResults.insert": {
            "name": "insert",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "ins_string": []
            }
        },
        "ParseResults.append": {
            "name": "append",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ParseResults.extend": {
            "name": "extend",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "itemseq": []
            }
        },
        "ParseResults.clear": {
            "name": "clear",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getattr__": {
            "name": "__getattr__",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParseResults.__add__": {
            "name": "__add__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__iadd__": {
            "name": "__iadd__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__radd__": {
            "name": "__radd__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__repr__": {
            "name": "__repr__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__str__": {
            "name": "__str__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults._asStringList": {
            "name": "_asStringList",
            "location": 473,
            "return": [],
            "arguments": {
                "self": [],
                "sep": []
            }
        },
        "ParseResults.as_list": {
            "name": "as_list",
            "location": 484,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.as_dict": {
            "name": "as_dict",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.copy": {
            "name": "copy",
            "location": 533,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get_name": {
            "name": "get_name",
            "location": 544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.dump": {
            "name": "dump",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "indent": [],
                "full": [],
                "include_list": [],
                "_depth": []
            }
        },
        "ParseResults.pprint": {
            "name": "pprint",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getstate__": {
            "name": "__getstate__",
            "location": 703,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__setstate__": {
            "name": "__setstate__",
            "location": 714,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "ParseResults.__getnewargs__": {
            "name": "__getnewargs__",
            "location": 722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__dir__": {
            "name": "__dir__",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.from_dict": {
            "name": "from_dict",
            "location": 729,
            "return": [],
            "arguments": {
                "cls": [],
                "other": [],
                "name": []
            }
        },
        "ParseResults.List.__new__": {
            "name": "__new__",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "contained": []
            }
        },
        "ParseResults.as_dict.to_item": {
            "name": "to_item",
            "location": 525,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.from_dict.is_iterable": {
            "name": "is_iterable",
            "location": 736,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.get_name.find_in_parent": {
            "name": "find_in_parent",
            "location": 574,
            "return": [],
            "arguments": {
                "sub": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/testing.py": {
        "pyparsing_test.with_line_numbers": {
            "name": "with_line_numbers",
            "location": 238,
            "return": [],
            "arguments": {
                "s": [],
                "start_line": [],
                "end_line": [],
                "expand_tabs": [],
                "eol_mark": [],
                "mark_spaces": [],
                "mark_control": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.save": {
            "name": "save",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.restore": {
            "name": "restore",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.copy": {
            "name": "copy",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__enter__": {
            "name": "__enter__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__exit__": {
            "name": "__exit__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseResultsEquals": {
            "name": "assertParseResultsEquals",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "expected_list": [],
                "expected_dict": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckList": {
            "name": "assertParseAndCheckList",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_list": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckDict": {
            "name": "assertParseAndCheckDict",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_dict": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRunTestResults": {
            "name": "assertRunTestResults",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "run_tests_report": [],
                "expected_parse_results": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRaisesParseException": {
            "name": "assertRaisesParseException",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/unicode.py": {
        "_lazyclassproperty.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "_lazyclassproperty.__get__": {
            "name": "__get__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "cls": []
            }
        },
        "unicode_set._chars_for_ranges": {
            "name": "_chars_for_ranges",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.printables": {
            "name": "printables",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphas": {
            "name": "alphas",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.nums": {
            "name": "nums",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphanums": {
            "name": "alphanums",
            "location": 81,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identchars": {
            "name": "identchars",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identbodychars": {
            "name": "identbodychars",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/util.py": {
        "col": {
            "name": "col",
            "location": 41,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "lineno": {
            "name": "lineno",
            "location": 58,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "line": {
            "name": "line",
            "location": 72,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "_escape_regex_range_chars": {
            "name": "_escape_regex_range_chars",
            "location": 173,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_collapse_string_to_ranges": {
            "name": "_collapse_string_to_ranges",
            "location": 182,
            "return": [],
            "arguments": {
                "s": [],
                "re_escape": []
            }
        },
        "_flatten": {
            "name": "_flatten",
            "location": 228,
            "return": [],
            "arguments": {
                "ll": []
            }
        },
        "__config_flags._set": {
            "name": "_set",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [],
                "dname": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FifoCache.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "LRUMemo.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "capacity": []
            }
        },
        "LRUMemo.__getitem__": {
            "name": "__getitem__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.__setitem__": {
            "name": "__setitem__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "LRUMemo.__delitem__": {
            "name": "__delitem__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.clear": {
            "name": "clear",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnboundedMemo.__delitem__": {
            "name": "__delitem__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "_collapse_string_to_ranges.is_consecutive": {
            "name": "is_consecutive",
            "location": 185,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.escape_re_range_char": {
            "name": "escape_re_range_char",
            "location": 196,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.no_escape_re_range_char": {
            "name": "no_escape_re_range_char",
            "location": 199,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_UnboundedCache.__init__.get": {
            "name": "get",
            "location": 87,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_UnboundedCache.__init__.set_": {
            "name": "set_",
            "location": 90,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__.clear": {
            "name": "clear",
            "location": 93,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "_FifoCache.__init__.get": {
            "name": "get",
            "location": 108,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_FifoCache.__init__.set_": {
            "name": "set_",
            "location": 111,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_FifoCache.__init__.clear": {
            "name": "clear",
            "location": 116,
            "return": [],
            "arguments": {
                "_": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/__init__.py": {
        "version_info.__version__": {
            "name": "__version__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__str__": {
            "name": "__str__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__repr__": {
            "name": "__repr__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/pkg_resources/_vendor/pyparsing/diagram/__init__.py": {
        "railroad_to_html": {
            "name": "railroad_to_html",
            "location": 130,
            "return": [],
            "arguments": {
                "diagrams": []
            }
        },
        "resolve_partial": {
            "name": "resolve_partial",
            "location": 149,
            "return": [],
            "arguments": {
                "partial": []
            }
        },
        "to_railroad": {
            "name": "to_railroad",
            "location": 165,
            "return": [],
            "arguments": {
                "element": [],
                "diagram_kwargs": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_should_vertical": {
            "name": "_should_vertical",
            "location": 223,
            "return": [],
            "arguments": {
                "specification": [],
                "exprs": []
            }
        },
        "_worth_extracting": {
            "name": "_worth_extracting",
            "location": 375,
            "return": [],
            "arguments": {
                "element": []
            }
        },
        "_apply_diagram_item_enhancements": {
            "name": "_apply_diagram_item_enhancements",
            "location": 384,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_visible_exprs": {
            "name": "_visible_exprs",
            "location": 428,
            "return": [],
            "arguments": {
                "exprs": []
            }
        },
        "_to_diagram_element": {
            "name": "_to_diagram_element",
            "location": 442,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "EachItem.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedItem.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "item": []
            }
        },
        "EditablePartial.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "args": [],
                "kwargs": []
            }
        },
        "EditablePartial.from_call": {
            "name": "from_call",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": [],
                "func": []
            }
        },
        "EditablePartial.name": {
            "name": "name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditablePartial.__call__": {
            "name": "__call__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementState.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "element": [],
                "converted": [],
                "parent": [],
                "number": [],
                "name": [],
                "parent_index": []
            }
        },
        "ElementState.mark_for_extraction": {
            "name": "mark_for_extraction",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": [],
                "state": [],
                "name": [],
                "force": []
            }
        },
        "ConverterState.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "diagram_kwargs": []
            }
        },
        "ConverterState.__setitem__": {
            "name": "__setitem__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "ConverterState.__getitem__": {
            "name": "__getitem__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__delitem__": {
            "name": "__delitem__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__contains__": {
            "name": "__contains__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.generate_unnamed": {
            "name": "generate_unnamed",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.generate_index": {
            "name": "generate_index",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.extract_into_diagram": {
            "name": "extract_into_diagram",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": []
            }
        },
        "_apply_diagram_item_enhancements._inner": {
            "name": "_inner",
            "location": 391,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/archive_util.py": {
        "default_filter": {
            "name": "default_filter",
            "location": 23,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        },
        "unpack_archive": {
            "name": "unpack_archive",
            "location": 28,
            "return": [],
            "arguments": {
                "filename": [],
                "extract_dir": [],
                "progress_filter": [],
                "drivers": []
            }
        },
        "unpack_directory": {
            "name": "unpack_directory",
            "location": 64,
            "return": [],
            "arguments": {
                "filename": [],
                "extract_dir": [],
                "progress_filter": []
            }
        },
        "unpack_zipfile": {
            "name": "unpack_zipfile",
            "location": 91,
            "return": [],
            "arguments": {
                "filename": [],
                "extract_dir": [],
                "progress_filter": []
            }
        },
        "_unpack_zipfile_obj": {
            "name": "_unpack_zipfile_obj",
            "location": 106,
            "return": [],
            "arguments": {
                "zipfile_obj": [],
                "extract_dir": [],
                "progress_filter": []
            }
        },
        "_resolve_tar_file_or_dir": {
            "name": "_resolve_tar_file_or_dir",
            "location": 136,
            "return": [],
            "arguments": {
                "tar_obj": [],
                "tar_member_obj": []
            }
        },
        "_iter_open_tar": {
            "name": "_iter_open_tar",
            "location": 157,
            "return": [],
            "arguments": {
                "tar_obj": [],
                "extract_dir": [],
                "progress_filter": []
            }
        },
        "unpack_tarfile": {
            "name": "unpack_tarfile",
            "location": 186,
            "return": [],
            "arguments": {
                "filename": [],
                "extract_dir": [],
                "progress_filter": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/build_meta.py": {
        "no_install_setup_requires": {
            "name": "no_install_setup_requires",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "_get_immediate_subdirectories": {
            "name": "_get_immediate_subdirectories",
            "location": 108,
            "return": [],
            "arguments": {
                "a_dir": []
            }
        },
        "_file_with_extension": {
            "name": "_file_with_extension",
            "location": 113,
            "return": [],
            "arguments": {
                "directory": [],
                "extension": []
            }
        },
        "_open_setup_script": {
            "name": "_open_setup_script",
            "location": 127,
            "return": [],
            "arguments": {
                "setup_script": []
            }
        },
        "suppress_known_deprecation": {
            "name": "suppress_known_deprecation",
            "location": 136,
            "return": [],
            "arguments": {}
        },
        "SetupRequirementsError.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "specifiers": []
            }
        },
        "Distribution.fetch_build_eggs": {
            "name": "fetch_build_eggs",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "specifiers": []
            }
        },
        "Distribution.patch": {
            "name": "patch",
            "location": 78,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_ConfigSettingsTranslator._get_config": {
            "name": "_get_config",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "config_settings": []
            }
        },
        "_ConfigSettingsTranslator._valid_global_options": {
            "name": "_valid_global_options",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConfigSettingsTranslator._global_args": {
            "name": "_global_args",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_ConfigSettingsTranslator.__dist_info_args": {
            "name": "__dist_info_args",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_ConfigSettingsTranslator._editable_args": {
            "name": "_editable_args",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_ConfigSettingsTranslator._arbitrary_args": {
            "name": "_arbitrary_args",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend._get_build_requires": {
            "name": "_get_build_requires",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": [],
                "requirements": []
            }
        },
        "_BuildMetaBackend.run_setup": {
            "name": "run_setup",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "setup_script": []
            }
        },
        "_BuildMetaBackend.get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend.get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend._bubble_up_info_directory": {
            "name": "_bubble_up_info_directory",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "suffix": []
            }
        },
        "_BuildMetaBackend._find_info_directory": {
            "name": "_find_info_directory",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "suffix": []
            }
        },
        "_BuildMetaBackend.prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend._build_with_temp_dir": {
            "name": "_build_with_temp_dir",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "setup_command": [],
                "result_extension": [],
                "result_directory": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend.build_wheel": {
            "name": "build_wheel",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "_BuildMetaBackend.build_sdist": {
            "name": "build_sdist",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "sdist_directory": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend._get_dist_info_dir": {
            "name": "_get_dist_info_dir",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": []
            }
        },
        "_BuildMetaLegacyBackend.run_setup": {
            "name": "run_setup",
            "location": 466,
            "return": [],
            "arguments": {
                "self": [],
                "setup_script": []
            }
        },
        "_BuildMetaBackend.build_editable": {
            "name": "build_editable",
            "location": 433,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "_BuildMetaBackend.get_requires_for_build_editable": {
            "name": "get_requires_for_build_editable",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "config_settings": []
            }
        },
        "_BuildMetaBackend.prepare_metadata_for_build_editable": {
            "name": "prepare_metadata_for_build_editable",
            "location": 448,
            "return": [],
            "arguments": {
                "self": [],
                "metadata_directory": [],
                "config_settings": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/depends.py": {
        "maybe_close": {
            "name": "maybe_close",
            "location": 85,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "get_module_constant": {
            "name": "get_module_constant",
            "location": 96,
            "return": [],
            "arguments": {
                "module": [],
                "symbol": [],
                "default": [],
                "paths": []
            }
        },
        "extract_constant": {
            "name": "extract_constant",
            "location": 125,
            "return": [],
            "arguments": {
                "code": [],
                "symbol": [],
                "default": []
            }
        },
        "_update_globals": {
            "name": "_update_globals",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "Require.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "requested_version": [],
                "module": [],
                "homepage": [],
                "attribute": [],
                "format": []
            }
        },
        "Require.full_name": {
            "name": "full_name",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Require.version_ok": {
            "name": "version_ok",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "Require.get_version": {
            "name": "get_version",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "paths": [],
                "default": []
            }
        },
        "Require.is_present": {
            "name": "is_present",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "Require.is_current": {
            "name": "is_current",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "maybe_close.empty": {
            "name": "empty",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/dep_util.py": {
        "newer_pairwise_group": {
            "name": "newer_pairwise_group",
            "location": 7,
            "return": [],
            "arguments": {
                "sources_groups": [],
                "targets": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/discovery.py": {
        "_valid_name": {
            "name": "_valid_name",
            "location": 73,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_find_packages_within": {
            "name": "_find_packages_within",
            "location": 282,
            "return": [],
            "arguments": {
                "root_pkg": [],
                "pkg_dir": []
            }
        },
        "remove_nested_packages": {
            "name": "remove_nested_packages",
            "location": 512,
            "return": [],
            "arguments": {
                "packages": []
            }
        },
        "remove_stubs": {
            "name": "remove_stubs",
            "location": 530,
            "return": [],
            "arguments": {
                "packages": []
            }
        },
        "find_parent_package": {
            "name": "find_parent_package",
            "location": 539,
            "return": [],
            "arguments": {
                "packages": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "find_package_path": {
            "name": "find_package_path",
            "location": 563,
            "return": [],
            "arguments": {
                "name": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "construct_package_dir": {
            "name": "construct_package_dir",
            "location": 597,
            "return": [],
            "arguments": {
                "packages": [],
                "package_path": []
            }
        },
        "_Finder.find": {
            "name": "find",
            "location": 85,
            "return": [],
            "arguments": {
                "cls": [],
                "where": [],
                "exclude": [],
                "include": []
            }
        },
        "_Finder._find_iter": {
            "name": "_find_iter",
            "location": 120,
            "return": [],
            "arguments": {
                "cls": [],
                "where": [],
                "exclude": [],
                "include": []
            }
        },
        "_Finder._build_filter": {
            "name": "_build_filter",
            "location": 124,
            "return": [],
            "arguments": {}
        },
        "PackageFinder._find_iter": {
            "name": "_find_iter",
            "location": 140,
            "return": [],
            "arguments": {
                "cls": [],
                "where": [],
                "exclude": [],
                "include": []
            }
        },
        "PackageFinder._looks_like_package": {
            "name": "_looks_like_package",
            "location": 168,
            "return": [],
            "arguments": {
                "path": [],
                "_package_name": []
            }
        },
        "PEP420PackageFinder._looks_like_package": {
            "name": "_looks_like_package",
            "location": 175,
            "return": [],
            "arguments": {
                "_path": [],
                "_package_name": []
            }
        },
        "ModuleFinder._find_iter": {
            "name": "_find_iter",
            "location": 185,
            "return": [],
            "arguments": {
                "cls": [],
                "where": [],
                "exclude": [],
                "include": []
            }
        },
        "FlatLayoutPackageFinder._looks_like_package": {
            "name": "_looks_like_package",
            "location": 245,
            "return": [],
            "arguments": {
                "_path": [],
                "package_name": []
            }
        },
        "ConfigDiscovery.__init__": {
            "name": "__init__",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": []
            }
        },
        "ConfigDiscovery._disable": {
            "name": "_disable",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._ignore_ext_modules": {
            "name": "_ignore_ext_modules",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._root_dir": {
            "name": "_root_dir",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._package_dir": {
            "name": "_package_dir",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery.__call__": {
            "name": "__call__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "force": [],
                "name": [],
                "ignore_ext_modules": []
            }
        },
        "ConfigDiscovery._explicitly_specified": {
            "name": "_explicitly_specified",
            "location": 346,
            "return": [],
            "arguments": {
                "self": [],
                "ignore_ext_modules": []
            }
        },
        "ConfigDiscovery._analyse_package_layout": {
            "name": "_analyse_package_layout",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "ignore_ext_modules": []
            }
        },
        "ConfigDiscovery._analyse_explicit_layout": {
            "name": "_analyse_explicit_layout",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._analyse_src_layout": {
            "name": "_analyse_src_layout",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._analyse_flat_layout": {
            "name": "_analyse_flat_layout",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._analyse_flat_packages": {
            "name": "_analyse_flat_packages",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._analyse_flat_modules": {
            "name": "_analyse_flat_modules",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._ensure_no_accidental_inclusion": {
            "name": "_ensure_no_accidental_inclusion",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "detected": [],
                "kind": []
            }
        },
        "ConfigDiscovery.analyse_name": {
            "name": "analyse_name",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._find_name_single_package_or_module": {
            "name": "_find_name_single_package_or_module",
            "location": 485,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDiscovery._find_name_from_packages": {
            "name": "_find_name_from_packages",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/dist.py": {
        "_get_unpatched": {
            "name": "_get_unpatched",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "get_metadata_version": {
            "name": "get_metadata_version",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "rfc822_unescape": {
            "name": "rfc822_unescape",
            "location": 70,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "_read_field_from_msg": {
            "name": "_read_field_from_msg",
            "location": 78,
            "return": [],
            "arguments": {
                "msg": [],
                "field": []
            }
        },
        "_read_field_unescaped_from_msg": {
            "name": "_read_field_unescaped_from_msg",
            "location": 86,
            "return": [],
            "arguments": {
                "msg": [],
                "field": []
            }
        },
        "_read_list_from_msg": {
            "name": "_read_list_from_msg",
            "location": 94,
            "return": [],
            "arguments": {
                "msg": [],
                "field": []
            }
        },
        "_read_payload_from_msg": {
            "name": "_read_payload_from_msg",
            "location": 102,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "read_pkg_file": {
            "name": "read_pkg_file",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "single_line": {
            "name": "single_line",
            "location": 153,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "write_pkg_file": {
            "name": "write_pkg_file",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "check_importable": {
            "name": "check_importable",
            "location": 240,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "assert_string_list": {
            "name": "assert_string_list",
            "location": 250,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_nsp": {
            "name": "check_nsp",
            "location": 264,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_extras": {
            "name": "check_extras",
            "location": 289,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "_check_extra": {
            "name": "_check_extra",
            "location": 301,
            "return": [],
            "arguments": {
                "extra": [],
                "reqs": []
            }
        },
        "assert_bool": {
            "name": "assert_bool",
            "location": 308,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "invalid_unless_false": {
            "name": "invalid_unless_false",
            "location": 315,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_requirements": {
            "name": "check_requirements",
            "location": 322,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_specifier": {
            "name": "check_specifier",
            "location": 336,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_entry_points": {
            "name": "check_entry_points",
            "location": 347,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_test_suite": {
            "name": "check_test_suite",
            "location": 355,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_package_data": {
            "name": "check_package_data",
            "location": 360,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "check_packages": {
            "name": "check_packages",
            "location": 375,
            "return": [],
            "arguments": {
                "dist": [],
                "attr": [],
                "value": []
            }
        },
        "write_pkg_file.write_field": {
            "name": "write_field",
            "location": 170,
            "return": [],
            "arguments": {
                "key": [],
                "value": []
            }
        },
        "Distribution.patch_missing_pkg_info": {
            "name": "patch_missing_pkg_info",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 463,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "Distribution._validate_metadata": {
            "name": "_validate_metadata",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._set_metadata_defaults": {
            "name": "_set_metadata_defaults",
            "location": 512,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "Distribution._normalize_version": {
            "name": "_normalize_version",
            "location": 523,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "Distribution._validate_version": {
            "name": "_validate_version",
            "location": 535,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "Distribution._finalize_requires": {
            "name": "_finalize_requires",
            "location": 553,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._convert_extras_requirements": {
            "name": "_convert_extras_requirements",
            "location": 579,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._suffix_for": {
            "name": "_suffix_for",
            "location": 596,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "Distribution._move_install_requirements_markers": {
            "name": "_move_install_requirements_markers",
            "location": 603,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._clean_req": {
            "name": "_clean_req",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Distribution._finalize_license_files": {
            "name": "_finalize_license_files",
            "location": 637,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._expand_patterns": {
            "name": "_expand_patterns",
            "location": 657,
            "return": [],
            "arguments": {
                "patterns": []
            }
        },
        "Distribution._parse_config_files": {
            "name": "_parse_config_files",
            "location": 672,
            "return": [],
            "arguments": {
                "self": [],
                "filenames": []
            }
        },
        "Distribution.warn_dash_deprecation": {
            "name": "warn_dash_deprecation",
            "location": 751,
            "return": [],
            "arguments": {
                "self": [],
                "opt": [],
                "section": []
            }
        },
        "Distribution._setuptools_commands": {
            "name": "_setuptools_commands",
            "location": 778,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.make_option_lowercase": {
            "name": "make_option_lowercase",
            "location": 785,
            "return": [],
            "arguments": {
                "self": [],
                "opt": [],
                "section": []
            }
        },
        "Distribution._set_command_options": {
            "name": "_set_command_options",
            "location": 798,
            "return": [],
            "arguments": {
                "self": [],
                "command_obj": [],
                "option_dict": []
            }
        },
        "Distribution._get_project_config_files": {
            "name": "_get_project_config_files",
            "location": 844,
            "return": [],
            "arguments": {
                "self": [],
                "filenames": []
            }
        },
        "Distribution.parse_config_files": {
            "name": "parse_config_files",
            "location": 856,
            "return": [],
            "arguments": {
                "self": [],
                "filenames": [],
                "ignore_option_errors": []
            }
        },
        "Distribution.fetch_build_eggs": {
            "name": "fetch_build_eggs",
            "location": 873,
            "return": [],
            "arguments": {
                "self": [],
                "requires": []
            }
        },
        "Distribution.finalize_options": {
            "name": "finalize_options",
            "location": 884,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._removed": {
            "name": "_removed",
            "location": 903,
            "return": [],
            "arguments": {
                "ep": []
            }
        },
        "Distribution._finalize_setup_keywords": {
            "name": "_finalize_setup_keywords",
            "location": 916,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.get_egg_cache_dir": {
            "name": "get_egg_cache_dir",
            "location": 922,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.fetch_build_egg": {
            "name": "fetch_build_egg",
            "location": 941,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        },
        "Distribution.get_command_class": {
            "name": "get_command_class",
            "location": 947,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Distribution.print_commands": {
            "name": "print_commands",
            "location": 959,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.get_command_list": {
            "name": "get_command_list",
            "location": 966,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.include": {
            "name": "include",
            "location": 973,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.exclude_package": {
            "name": "exclude_package",
            "location": 995,
            "return": [],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "Distribution.has_contents_for": {
            "name": "has_contents_for",
            "location": 1016,
            "return": [],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "Distribution._exclude_misc": {
            "name": "_exclude_misc",
            "location": 1025,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Distribution._include_misc": {
            "name": "_include_misc",
            "location": 1042,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Distribution.exclude": {
            "name": "exclude",
            "location": 1061,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._exclude_packages": {
            "name": "_exclude_packages",
            "location": 1084,
            "return": [],
            "arguments": {
                "self": [],
                "packages": []
            }
        },
        "Distribution._parse_command_opts": {
            "name": "_parse_command_opts",
            "location": 1091,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "args": []
            }
        },
        "Distribution.get_cmdline_options": {
            "name": "get_cmdline_options",
            "location": 1118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.iter_distribution_names": {
            "name": "iter_distribution_names",
            "location": 1158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.handle_display_options": {
            "name": "handle_display_options",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": [],
                "option_order": []
            }
        },
        "Distribution.run_command": {
            "name": "run_command",
            "location": 1212,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Distribution._move_install_requirements_markers.is_simple_req": {
            "name": "is_simple_req",
            "location": 613,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "Distribution.finalize_options.by_order": {
            "name": "by_order",
            "location": 893,
            "return": [],
            "arguments": {
                "hook": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/errors.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/extension.py": {
        "_have_cython": {
            "name": "_have_cython",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "Extension.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "sources": []
            }
        },
        "Extension._convert_pyx_sources_to_lang": {
            "name": "_convert_pyx_sources_to_lang",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/glob.py": {
        "glob": {
            "name": "glob",
            "location": 16,
            "return": [],
            "arguments": {
                "pathname": [],
                "recursive": []
            }
        },
        "iglob": {
            "name": "iglob",
            "location": 30,
            "return": [],
            "arguments": {
                "pathname": [],
                "recursive": []
            }
        },
        "_iglob": {
            "name": "_iglob",
            "location": 48,
            "return": [],
            "arguments": {
                "pathname": [],
                "recursive": []
            }
        },
        "glob1": {
            "name": "glob1",
            "location": 84,
            "return": [],
            "arguments": {
                "dirname": [],
                "pattern": []
            }
        },
        "glob0": {
            "name": "glob0",
            "location": 97,
            "return": [],
            "arguments": {
                "dirname": [],
                "basename": []
            }
        },
        "glob2": {
            "name": "glob2",
            "location": 113,
            "return": [],
            "arguments": {
                "dirname": [],
                "pattern": []
            }
        },
        "_rlistdir": {
            "name": "_rlistdir",
            "location": 121,
            "return": [],
            "arguments": {
                "dirname": []
            }
        },
        "has_magic": {
            "name": "has_magic",
            "location": 142,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_isrecursive": {
            "name": "_isrecursive",
            "location": 150,
            "return": [],
            "arguments": {
                "pattern": []
            }
        },
        "escape": {
            "name": "escape",
            "location": 157,
            "return": [],
            "arguments": {
                "pathname": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/installer.py": {
        "_fixup_find_links": {
            "name": "_fixup_find_links",
            "location": 15,
            "return": [],
            "arguments": {
                "find_links": []
            }
        },
        "fetch_build_egg": {
            "name": "fetch_build_egg",
            "location": 23,
            "return": [],
            "arguments": {
                "dist": [],
                "req": []
            }
        },
        "strip_marker": {
            "name": "strip_marker",
            "location": 95,
            "return": [],
            "arguments": {
                "req": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/launch.py": {
        "run": {
            "name": "run",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/logging.py": {
        "_not_warning": {
            "name": "_not_warning",
            "location": 7,
            "return": [],
            "arguments": {
                "record": []
            }
        },
        "configure": {
            "name": "configure",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "set_threshold": {
            "name": "set_threshold",
            "location": 34,
            "return": [],
            "arguments": {
                "level": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/monkey.py": {
        "_get_mro": {
            "name": "_get_mro",
            "location": 22,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "get_unpatched": {
            "name": "get_unpatched",
            "location": 36,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "get_unpatched_class": {
            "name": "get_unpatched_class",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "patch_all": {
            "name": "patch_all",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "_patch_distribution_metadata": {
            "name": "_patch_distribution_metadata",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "patch_func": {
            "name": "patch_func",
            "location": 107,
            "return": [],
            "arguments": {
                "replacement": [],
                "target_mod": [],
                "func_name": []
            }
        },
        "get_unpatched_function": {
            "name": "get_unpatched_function",
            "location": 124,
            "return": [],
            "arguments": {
                "candidate": []
            }
        },
        "patch_for_msvc_specialized_compiler": {
            "name": "patch_for_msvc_specialized_compiler",
            "location": 128,
            "return": [],
            "arguments": {}
        },
        "patch_for_msvc_specialized_compiler.patch_params": {
            "name": "patch_params",
            "location": 140,
            "return": [],
            "arguments": {
                "mod_name": [],
                "func_name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/msvc.py": {
        "_msvc14_find_vc2015": {
            "name": "_msvc14_find_vc2015",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "_msvc14_find_vc2017": {
            "name": "_msvc14_find_vc2017",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "_msvc14_find_vcvarsall": {
            "name": "_msvc14_find_vcvarsall",
            "location": 119,
            "return": [],
            "arguments": {
                "plat_spec": []
            }
        },
        "_msvc14_get_vc_env": {
            "name": "_msvc14_get_vc_env",
            "location": 158,
            "return": [],
            "arguments": {
                "plat_spec": []
            }
        },
        "msvc14_get_vc_env": {
            "name": "msvc14_get_vc_env",
            "location": 194,
            "return": [],
            "arguments": {
                "plat_spec": []
            }
        },
        "msvc14_gen_lib_options": {
            "name": "msvc14_gen_lib_options",
            "location": 220,
            "return": [],
            "arguments": {}
        },
        "_augment_exception": {
            "name": "_augment_exception",
            "location": 233,
            "return": [],
            "arguments": {
                "exc": [],
                "version": [],
                "arch": []
            }
        },
        "PlatformInfo.__init__": {
            "name": "__init__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "arch": []
            }
        },
        "PlatformInfo.target_cpu": {
            "name": "target_cpu",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformInfo.target_is_x86": {
            "name": "target_is_x86",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformInfo.current_is_x86": {
            "name": "current_is_x86",
            "location": 307,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlatformInfo.current_dir": {
            "name": "current_dir",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "hidex86": [],
                "x64": []
            }
        },
        "PlatformInfo.target_dir": {
            "name": "target_dir",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "hidex86": [],
                "x64": []
            }
        },
        "PlatformInfo.cross_dir": {
            "name": "cross_dir",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "forcex86": []
            }
        },
        "RegistryInfo.__init__": {
            "name": "__init__",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "platform_info": []
            }
        },
        "RegistryInfo.visualstudio": {
            "name": "visualstudio",
            "location": 403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.sxs": {
            "name": "sxs",
            "location": 415,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.vc": {
            "name": "vc",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.vs": {
            "name": "vs",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.vc_for_python": {
            "name": "vc_for_python",
            "location": 451,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.microsoft_sdk": {
            "name": "microsoft_sdk",
            "location": 463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.windows_sdk": {
            "name": "windows_sdk",
            "location": 475,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.netfx_sdk": {
            "name": "netfx_sdk",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.windows_kits_roots": {
            "name": "windows_kits_roots",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegistryInfo.microsoft": {
            "name": "microsoft",
            "location": 510,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "x86": []
            }
        },
        "RegistryInfo.lookup": {
            "name": "lookup",
            "location": 529,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "name": []
            }
        },
        "SystemInfo.__init__": {
            "name": "__init__",
            "location": 588,
            "return": [],
            "arguments": {
                "self": [],
                "registry_info": [],
                "vc_ver": []
            }
        },
        "SystemInfo._find_latest_available_vs_ver": {
            "name": "_find_latest_available_vs_ver",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.find_reg_vs_vers": {
            "name": "find_reg_vs_vers",
            "location": 617,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.find_programdata_vs_vers": {
            "name": "find_programdata_vs_vers",
            "location": 648,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo._as_float_version": {
            "name": "_as_float_version",
            "location": 691,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "SystemInfo.VSInstallDir": {
            "name": "VSInstallDir",
            "location": 708,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.VCInstallDir": {
            "name": "VCInstallDir",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo._guess_vc": {
            "name": "_guess_vc",
            "location": 742,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo._guess_vc_legacy": {
            "name": "_guess_vc_legacy",
            "location": 772,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.WindowsSdkVersion": {
            "name": "WindowsSdkVersion",
            "location": 793,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.WindowsSdkLastVersion": {
            "name": "WindowsSdkLastVersion",
            "location": 814,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.WindowsSdkDir": {
            "name": "WindowsSdkDir",
            "location": 826,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.WindowsSDKExecutablePath": {
            "name": "WindowsSDKExecutablePath",
            "location": 869,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.FSharpInstallDir": {
            "name": "FSharpInstallDir",
            "location": 904,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.UniversalCRTSdkDir": {
            "name": "UniversalCRTSdkDir",
            "location": 917,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.UniversalCRTSdkLastVersion": {
            "name": "UniversalCRTSdkLastVersion",
            "location": 937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.NetFxSdkVersion": {
            "name": "NetFxSdkVersion",
            "location": 949,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.NetFxSdkDir": {
            "name": "NetFxSdkDir",
            "location": 965,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.FrameworkDir32": {
            "name": "FrameworkDir32",
            "location": 983,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.FrameworkDir64": {
            "name": "FrameworkDir64",
            "location": 999,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.FrameworkVersion32": {
            "name": "FrameworkVersion32",
            "location": 1015,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo.FrameworkVersion64": {
            "name": "FrameworkVersion64",
            "location": 1027,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemInfo._find_dot_net_versions": {
            "name": "_find_dot_net_versions",
            "location": 1038,
            "return": [],
            "arguments": {
                "self": [],
                "bits": []
            }
        },
        "SystemInfo._use_last_dir_name": {
            "name": "_use_last_dir_name",
            "location": 1068,
            "return": [],
            "arguments": {
                "path": [],
                "prefix": []
            }
        },
        "EnvironmentInfo.__init__": {
            "name": "__init__",
            "location": 1117,
            "return": [],
            "arguments": {
                "self": [],
                "arch": [],
                "vc_ver": [],
                "vc_min_ver": []
            }
        },
        "EnvironmentInfo.vs_ver": {
            "name": "vs_ver",
            "location": 1127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.vc_ver": {
            "name": "vc_ver",
            "location": 1139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VSTools": {
            "name": "VSTools",
            "location": 1151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VCIncludes": {
            "name": "VCIncludes",
            "location": 1171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VCLibraries": {
            "name": "VCLibraries",
            "location": 1184,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VCStoreRefs": {
            "name": "VCStoreRefs",
            "location": 1205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VCTools": {
            "name": "VCTools",
            "location": 1219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.OSLibraries": {
            "name": "OSLibraries",
            "location": 1256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.OSIncludes": {
            "name": "OSIncludes",
            "location": 1276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.OSLibpath": {
            "name": "OSLibpath",
            "location": 1300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.SdkTools": {
            "name": "SdkTools",
            "location": 1336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo._sdk_tools": {
            "name": "_sdk_tools",
            "location": 1347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo._sdk_subdir": {
            "name": "_sdk_subdir",
            "location": 1383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.SdkSetup": {
            "name": "SdkSetup",
            "location": 1396,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.FxTools": {
            "name": "FxTools",
            "location": 1411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.NetFxSDKLibraries": {
            "name": "NetFxSDKLibraries",
            "location": 1440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.NetFxSDKIncludes": {
            "name": "NetFxSDKIncludes",
            "location": 1456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VsTDb": {
            "name": "VsTDb",
            "location": 1471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.MSBuild": {
            "name": "MSBuild",
            "location": 1483,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.HTMLHelpWorkshop": {
            "name": "HTMLHelpWorkshop",
            "location": 1511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.UCRTLibraries": {
            "name": "UCRTLibraries",
            "location": 1526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.UCRTIncludes": {
            "name": "UCRTIncludes",
            "location": 1544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo._ucrt_subdir": {
            "name": "_ucrt_subdir",
            "location": 1560,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.FSharp": {
            "name": "FSharp",
            "location": 1573,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.VCRuntimeRedist": {
            "name": "VCRuntimeRedist",
            "location": 1588,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentInfo.return_env": {
            "name": "return_env",
            "location": 1622,
            "return": [],
            "arguments": {
                "self": [],
                "exists": []
            }
        },
        "EnvironmentInfo._build_paths": {
            "name": "_build_paths",
            "location": 1672,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "spec_path_lists": [],
                "exists": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/namespaces.py": {
        "Installer.install_namespaces": {
            "name": "install_namespaces",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Installer.uninstall_namespaces": {
            "name": "uninstall_namespaces",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Installer._get_target": {
            "name": "_get_target",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Installer._get_root": {
            "name": "_get_root",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Installer._gen_nspkg_line": {
            "name": "_gen_nspkg_line",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "pkg": []
            }
        },
        "Installer._get_all_ns_packages": {
            "name": "_get_all_ns_packages",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Installer._pkg_names": {
            "name": "_pkg_names",
            "location": 87,
            "return": [],
            "arguments": {
                "pkg": []
            }
        },
        "DevelopInstaller._get_root": {
            "name": "_get_root",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DevelopInstaller._get_target": {
            "name": "_get_target",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/package_index.py": {
        "parse_requirement_arg": {
            "name": "parse_requirement_arg",
            "location": 54,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "parse_bdist_wininst": {
            "name": "parse_bdist_wininst",
            "location": 63,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "egg_info_for_url": {
            "name": "egg_info_for_url",
            "location": 87,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "distros_for_url": {
            "name": "distros_for_url",
            "location": 98,
            "return": [],
            "arguments": {
                "url": [],
                "metadata": []
            }
        },
        "distros_for_location": {
            "name": "distros_for_location",
            "location": 112,
            "return": [],
            "arguments": {
                "location": [],
                "basename": [],
                "metadata": []
            }
        },
        "distros_for_filename": {
            "name": "distros_for_filename",
            "location": 145,
            "return": [],
            "arguments": {
                "filename": [],
                "metadata": []
            }
        },
        "interpret_distro_name": {
            "name": "interpret_distro_name",
            "location": 152,
            "return": [],
            "arguments": {
                "location": [],
                "basename": [],
                "metadata": [],
                "py_version": [],
                "precedence": [],
                "platform": []
            }
        },
        "unique_values": {
            "name": "unique_values",
            "location": 187,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "find_external_links": {
            "name": "find_external_links",
            "location": 205,
            "return": [],
            "arguments": {
                "url": [],
                "page": []
            }
        },
        "decode_entity": {
            "name": "decode_entity",
            "location": 928,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "htmldecode": {
            "name": "htmldecode",
            "location": 933,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "socket_timeout": {
            "name": "socket_timeout",
            "location": 945,
            "return": [],
            "arguments": {
                "timeout": []
            }
        },
        "_encode_auth": {
            "name": "_encode_auth",
            "location": 960,
            "return": [],
            "arguments": {
                "auth": []
            }
        },
        "open_with_auth": {
            "name": "open_with_auth",
            "location": 1036,
            "return": [],
            "arguments": {
                "url": [],
                "opener": []
            }
        },
        "_splituser": {
            "name": "_splituser",
            "location": 1083,
            "return": [],
            "arguments": {
                "host": []
            }
        },
        "fix_sf_url": {
            "name": "fix_sf_url",
            "location": 1094,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "local_open": {
            "name": "local_open",
            "location": 1098,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "unique_values.wrapper": {
            "name": "wrapper",
            "location": 194,
            "return": [],
            "arguments": {}
        },
        "ContentChecker.feed": {
            "name": "feed",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "block": []
            }
        },
        "ContentChecker.is_valid": {
            "name": "is_valid",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContentChecker.report": {
            "name": "report",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "reporter": [],
                "template": []
            }
        },
        "HashChecker.__init__": {
            "name": "__init__",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "hash_name": [],
                "expected": []
            }
        },
        "HashChecker.from_url": {
            "name": "from_url",
            "location": 260,
            "return": [],
            "arguments": {
                "cls": [],
                "url": []
            }
        },
        "HashChecker.feed": {
            "name": "feed",
            "location": 270,
            "return": [],
            "arguments": {
                "self": [],
                "block": []
            }
        },
        "HashChecker.is_valid": {
            "name": "is_valid",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HashChecker.report": {
            "name": "report",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "reporter": [],
                "template": []
            }
        },
        "PackageIndex.__init__": {
            "name": "__init__",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "index_url": [],
                "hosts": [],
                "ca_bundle": [],
                "verify_ssl": []
            }
        },
        "PackageIndex.add": {
            "name": "add",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "PackageIndex.process_url": {
            "name": "process_url",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "retrieve": []
            }
        },
        "PackageIndex.process_filename": {
            "name": "process_filename",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "fn": [],
                "nested": []
            }
        },
        "PackageIndex.url_ok": {
            "name": "url_ok",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "fatal": []
            }
        },
        "PackageIndex.scan_egg_links": {
            "name": "scan_egg_links",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "search_path": []
            }
        },
        "PackageIndex.scan_egg_link": {
            "name": "scan_egg_link",
            "location": 398,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "entry": []
            }
        },
        "PackageIndex._scan": {
            "name": "_scan",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "PackageIndex.process_index": {
            "name": "process_index",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "page": []
            }
        },
        "PackageIndex.need_version_info": {
            "name": "need_version_info",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PackageIndex.scan_all": {
            "name": "scan_all",
            "location": 467,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "PackageIndex.find_packages": {
            "name": "find_packages",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": []
            }
        },
        "PackageIndex.obtain": {
            "name": "obtain",
            "location": 491,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "installer": []
            }
        },
        "PackageIndex.check_hash": {
            "name": "check_hash",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "checker": [],
                "filename": [],
                "tfp": []
            }
        },
        "PackageIndex.add_find_links": {
            "name": "add_find_links",
            "location": 516,
            "return": [],
            "arguments": {
                "self": [],
                "urls": []
            }
        },
        "PackageIndex.prescan": {
            "name": "prescan",
            "location": 531,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageIndex.not_found_in_index": {
            "name": "not_found_in_index",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": []
            }
        },
        "PackageIndex.download": {
            "name": "download",
            "location": 547,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "tmpdir": []
            }
        },
        "PackageIndex.fetch_distribution": {
            "name": "fetch_distribution",
            "location": 581,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "tmpdir": [],
                "force_scan": [],
                "source": [],
                "develop_ok": [],
                "local_index": []
            }
        },
        "PackageIndex.fetch": {
            "name": "fetch",
            "location": 657,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "tmpdir": [],
                "force_scan": [],
                "source": []
            }
        },
        "PackageIndex.gen_setup": {
            "name": "gen_setup",
            "location": 670,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "fragment": [],
                "tmpdir": []
            }
        },
        "PackageIndex._download_to": {
            "name": "_download_to",
            "location": 712,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": []
            }
        },
        "PackageIndex.reporthook": {
            "name": "reporthook",
            "location": 748,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": [],
                "blocknum": [],
                "blksize": [],
                "size": []
            }
        },
        "PackageIndex.open_url": {
            "name": "open_url",
            "location": 752,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "warning": []
            }
        },
        "PackageIndex._download_url": {
            "name": "_download_url",
            "location": 787,
            "return": [],
            "arguments": {
                "self": [],
                "scheme": [],
                "url": [],
                "tmpdir": []
            }
        },
        "PackageIndex.scan_url": {
            "name": "scan_url",
            "location": 816,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PackageIndex._attempt_download": {
            "name": "_attempt_download",
            "location": 819,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": []
            }
        },
        "PackageIndex._download_html": {
            "name": "_download_html",
            "location": 826,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "headers": [],
                "filename": []
            }
        },
        "PackageIndex._download_svn": {
            "name": "_download_svn",
            "location": 841,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": []
            }
        },
        "PackageIndex._vcs_split_rev_from_url": {
            "name": "_vcs_split_rev_from_url",
            "location": 864,
            "return": [],
            "arguments": {
                "url": [],
                "pop_prefix": []
            }
        },
        "PackageIndex._download_git": {
            "name": "_download_git",
            "location": 881,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": []
            }
        },
        "PackageIndex._download_hg": {
            "name": "_download_hg",
            "location": 897,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "filename": []
            }
        },
        "PackageIndex.debug": {
            "name": "debug",
            "location": 913,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "PackageIndex.info": {
            "name": "info",
            "location": 916,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "PackageIndex.warn": {
            "name": "warn",
            "location": 919,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "socket_timeout._socket_timeout": {
            "name": "_socket_timeout",
            "location": 946,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "Credential.__init__": {
            "name": "__init__",
            "location": 986,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "Credential.__iter__": {
            "name": "__iter__",
            "location": 990,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Credential.__str__": {
            "name": "__str__",
            "location": 994,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIConfig.__init__": {
            "name": "__init__",
            "location": 999,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIConfig.creds_by_repository": {
            "name": "creds_by_repository",
            "location": 1011,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIConfig._get_repo_cred": {
            "name": "_get_repo_cred",
            "location": 1019,
            "return": [],
            "arguments": {
                "self": [],
                "section": []
            }
        },
        "PyPIConfig.find_credential": {
            "name": "find_credential",
            "location": 1026,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "PackageIndex.fetch_distribution.find": {
            "name": "find",
            "location": 605,
            "return": [],
            "arguments": {
                "req": [],
                "env": []
            }
        },
        "socket_timeout._socket_timeout._socket_timeout": {
            "name": "_socket_timeout",
            "location": 947,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/py34compat.py": {
        "module_from_spec": {
            "name": "module_from_spec",
            "location": 12,
            "return": [],
            "arguments": {
                "spec": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/sandbox.py": {
        "_execfile": {
            "name": "_execfile",
            "location": 36,
            "return": [],
            "arguments": {
                "filename": [],
                "globals": [],
                "locals": []
            }
        },
        "save_argv": {
            "name": "save_argv",
            "location": 50,
            "return": [],
            "arguments": {
                "repl": []
            }
        },
        "save_path": {
            "name": "save_path",
            "location": 61,
            "return": [],
            "arguments": {}
        },
        "override_temp": {
            "name": "override_temp",
            "location": 70,
            "return": [],
            "arguments": {
                "replacement": []
            }
        },
        "pushd": {
            "name": "pushd",
            "location": 87,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "save_modules": {
            "name": "save_modules",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "_clear_modules": {
            "name": "_clear_modules",
            "location": 172,
            "return": [],
            "arguments": {
                "module_names": []
            }
        },
        "save_pkg_resources_state": {
            "name": "save_pkg_resources_state",
            "location": 178,
            "return": [],
            "arguments": {}
        },
        "setup_context": {
            "name": "setup_context",
            "location": 187,
            "return": [],
            "arguments": {
                "setup_dir": []
            }
        },
        "_needs_hiding": {
            "name": "_needs_hiding",
            "location": 210,
            "return": [],
            "arguments": {
                "mod_name": []
            }
        },
        "hide_setuptools": {
            "name": "hide_setuptools",
            "location": 231,
            "return": [],
            "arguments": {}
        },
        "run_setup": {
            "name": "run_setup",
            "location": 246,
            "return": [],
            "arguments": {
                "setup_script": [],
                "args": []
            }
        },
        "UnpickleableException.dump": {
            "name": "dump",
            "location": 102,
            "return": [],
            "arguments": {
                "type": [],
                "exc": []
            }
        },
        "ExceptionSaver.__enter__": {
            "name": "__enter__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionSaver.__exit__": {
            "name": "__exit__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "exc": [],
                "tb": []
            }
        },
        "ExceptionSaver.resume": {
            "name": "resume",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractSandbox.__init__": {
            "name": "__init__",
            "location": 271,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractSandbox._copy": {
            "name": "_copy",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "AbstractSandbox.__enter__": {
            "name": "__enter__",
            "location": 282,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractSandbox.__exit__": {
            "name": "__exit__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "AbstractSandbox.run": {
            "name": "run",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "AbstractSandbox._mk_dual_path_wrapper": {
            "name": "_mk_dual_path_wrapper",
            "location": 301,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "AbstractSandbox._mk_single_path_wrapper": {
            "name": "_mk_single_path_wrapper",
            "location": 315,
            "return": [],
            "arguments": {
                "name": [],
                "original": []
            }
        },
        "AbstractSandbox._mk_single_with_return": {
            "name": "_mk_single_with_return",
            "location": 352,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "AbstractSandbox._mk_query": {
            "name": "_mk_query",
            "location": 367,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "AbstractSandbox._validate_path": {
            "name": "_validate_path",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "AbstractSandbox._remap_input": {
            "name": "_remap_input",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "operation": [],
                "path": []
            }
        },
        "AbstractSandbox._remap_output": {
            "name": "_remap_output",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "operation": [],
                "path": []
            }
        },
        "AbstractSandbox._remap_pair": {
            "name": "_remap_pair",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "operation": [],
                "src": [],
                "dst": []
            }
        },
        "DirectorySandbox.__init__": {
            "name": "__init__",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "sandbox": [],
                "exceptions": []
            }
        },
        "DirectorySandbox._violation": {
            "name": "_violation",
            "location": 440,
            "return": [],
            "arguments": {
                "self": [],
                "operation": []
            }
        },
        "DirectorySandbox._open": {
            "name": "_open",
            "location": 452,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        },
        "DirectorySandbox.tmpnam": {
            "name": "tmpnam",
            "location": 457,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectorySandbox._ok": {
            "name": "_ok",
            "location": 460,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DirectorySandbox._exempted": {
            "name": "_exempted",
            "location": 473,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "DirectorySandbox._remap_input": {
            "name": "_remap_input",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "operation": [],
                "path": []
            }
        },
        "DirectorySandbox._remap_pair": {
            "name": "_remap_pair",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "operation": [],
                "src": [],
                "dst": []
            }
        },
        "DirectorySandbox.open": {
            "name": "open",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "flags": [],
                "mode": []
            }
        },
        "SandboxViolation.__str__": {
            "name": "__str__",
            "location": 528,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractSandbox._mk_dual_path_wrapper.wrap": {
            "name": "wrap",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "src": [],
                "dst": []
            }
        },
        "AbstractSandbox._mk_single_path_wrapper.wrap": {
            "name": "wrap",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "AbstractSandbox._mk_single_with_return.wrap": {
            "name": "wrap",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "AbstractSandbox._mk_query.wrap": {
            "name": "wrap",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectorySandbox._file": {
            "name": "_file",
            "location": 447,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "mode": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/unicode_utils.py": {
        "decompose": {
            "name": "decompose",
            "location": 6,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "filesys_decode": {
            "name": "filesys_decode",
            "location": 18,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "try_encode": {
            "name": "try_encode",
            "location": 37,
            "return": [],
            "arguments": {
                "string": [],
                "enc": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/version.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/wheel.py": {
        "unpack": {
            "name": "unpack",
            "location": 32,
            "return": [],
            "arguments": {
                "src_dir": [],
                "dst_dir": []
            }
        },
        "disable_info_traces": {
            "name": "disable_info_traces",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "Wheel.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Wheel.tags": {
            "name": "tags",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.is_compatible": {
            "name": "is_compatible",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.egg_name": {
            "name": "egg_name",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wheel.get_dist_info": {
            "name": "get_dist_info",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "zf": []
            }
        },
        "Wheel.install_as_egg": {
            "name": "install_as_egg",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "destination_eggdir": []
            }
        },
        "Wheel._install_as_egg": {
            "name": "_install_as_egg",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "destination_eggdir": [],
                "zf": []
            }
        },
        "Wheel._convert_metadata": {
            "name": "_convert_metadata",
            "location": 123,
            "return": [],
            "arguments": {
                "zf": [],
                "destination_eggdir": [],
                "dist_info": [],
                "egg_info": []
            }
        },
        "Wheel._move_data_entries": {
            "name": "_move_data_entries",
            "location": 181,
            "return": [],
            "arguments": {
                "destination_eggdir": [],
                "dist_data": []
            }
        },
        "Wheel._fix_namespace_packages": {
            "name": "_fix_namespace_packages",
            "location": 209,
            "return": [],
            "arguments": {
                "egg_info": [],
                "destination_eggdir": []
            }
        },
        "Wheel._convert_metadata.get_metadata": {
            "name": "get_metadata",
            "location": 124,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Wheel._convert_metadata.raw_req": {
            "name": "raw_req",
            "location": 150,
            "return": [],
            "arguments": {
                "req": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/windows_support.py": {
        "windows_only": {
            "name": "windows_only",
            "location": 4,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "hide_file": {
            "name": "hide_file",
            "location": 11,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_deprecation_warning.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_entry_points.py": {
        "ensure_valid": {
            "name": "ensure_valid",
            "location": 12,
            "return": [],
            "arguments": {
                "ep": []
            }
        },
        "load_group": {
            "name": "load_group",
            "location": 20,
            "return": [],
            "arguments": {
                "value": [],
                "group": []
            }
        },
        "by_group_and_name": {
            "name": "by_group_and_name",
            "location": 31,
            "return": [],
            "arguments": {
                "ep": []
            }
        },
        "validate": {
            "name": "validate",
            "location": 35,
            "return": [],
            "arguments": {
                "eps": []
            }
        },
        "load": {
            "name": "load",
            "location": 44,
            "return": [],
            "arguments": {
                "eps": []
            }
        },
        "_": {
            "name": "_",
            "location": 55,
            "return": [],
            "arguments": {
                "eps": []
            }
        },
        "render": {
            "name": "render",
            "location": 72,
            "return": [],
            "arguments": {
                "eps": []
            }
        },
        "render_items": {
            "name": "render_items",
            "location": 82,
            "return": [],
            "arguments": {
                "eps": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_imp.py": {
        "find_spec": {
            "name": "find_spec",
            "location": 20,
            "return": [],
            "arguments": {
                "module": [],
                "paths": []
            }
        },
        "find_module": {
            "name": "find_module",
            "location": 29,
            "return": [],
            "arguments": {
                "module": [],
                "paths": []
            }
        },
        "get_frozen_object": {
            "name": "get_frozen_object",
            "location": 71,
            "return": [],
            "arguments": {
                "module": [],
                "paths": []
            }
        },
        "get_module": {
            "name": "get_module",
            "location": 78,
            "return": [],
            "arguments": {
                "module": [],
                "paths": [],
                "info": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_importlib.py": {
        "disable_importlib_metadata_finder": {
            "name": "disable_importlib_metadata_finder",
            "location": 4,
            "return": [],
            "arguments": {
                "metadata": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_itertools.py": {
        "ensure_unique": {
            "name": "ensure_unique",
            "location": 5,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_path.py": {
        "ensure_directory": {
            "name": "ensure_directory",
            "location": 7,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "same_path": {
            "name": "same_path",
            "location": 13,
            "return": [],
            "arguments": {
                "p1": [],
                "p2": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_reqs.py": {
        "parse_strings": {
            "name": "parse_strings",
            "location": 6,
            "return": [],
            "arguments": {
                "strs": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 15,
            "return": [],
            "arguments": {
                "strs": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/__init__.py": {
        "_install_setup_requires": {
            "name": "_install_setup_requires",
            "location": 45,
            "return": [],
            "arguments": {
                "attrs": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "_find_all_simple": {
            "name": "_find_all_simple",
            "location": 205,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "findall": {
            "name": "findall",
            "location": 217,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "convert_path": {
            "name": "convert_path",
            "location": 230,
            "return": [],
            "arguments": {
                "pathname": []
            }
        },
        "Command.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Command._ensure_stringlike": {
            "name": "_ensure_stringlike",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "what": [],
                "default": []
            }
        },
        "Command.ensure_string_list": {
            "name": "ensure_string_list",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "Command.reinitialize_command": {
            "name": "reinitialize_command",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "reinit_subcommands": []
            }
        },
        "_install_setup_requires.MinimalDistribution.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "_install_setup_requires.MinimalDistribution._get_project_config_files": {
            "name": "_get_project_config_files",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "filenames": []
            }
        },
        "_install_setup_requires.MinimalDistribution.finalize_options": {
            "name": "finalize_options",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/alias.py": {
        "shquote": {
            "name": "shquote",
            "location": 6,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "format_alias": {
            "name": "format_alias",
            "location": 68,
            "return": [],
            "arguments": {
                "name": [],
                "aliases": []
            }
        },
        "alias.initialize_options": {
            "name": "initialize_options",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "alias.finalize_options": {
            "name": "finalize_options",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "alias.run": {
            "name": "run",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/bdist_egg.py": {
        "_get_purelib": {
            "name": "_get_purelib",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "strip_module": {
            "name": "strip_module",
            "location": 26,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "sorted_walk": {
            "name": "sorted_walk",
            "location": 34,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "write_stub": {
            "name": "write_stub",
            "location": 44,
            "return": [],
            "arguments": {
                "resource": [],
                "pyfile": []
            }
        },
        "walk_egg": {
            "name": "walk_egg",
            "location": 315,
            "return": [],
            "arguments": {
                "egg_dir": []
            }
        },
        "analyze_egg": {
            "name": "analyze_egg",
            "location": 326,
            "return": [],
            "arguments": {
                "egg_dir": [],
                "stubs": []
            }
        },
        "write_safety_flag": {
            "name": "write_safety_flag",
            "location": 344,
            "return": [],
            "arguments": {
                "egg_dir": [],
                "safe": []
            }
        },
        "scan_module": {
            "name": "scan_module",
            "location": 363,
            "return": [],
            "arguments": {
                "egg_dir": [],
                "base": [],
                "name": [],
                "stubs": []
            }
        },
        "iter_symbols": {
            "name": "iter_symbols",
            "location": 397,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "can_scan": {
            "name": "can_scan",
            "location": 409,
            "return": [],
            "arguments": {}
        },
        "make_zipfile": {
            "name": "make_zipfile",
            "location": 426,
            "return": [],
            "arguments": {
                "zip_filename": [],
                "base_dir": [],
                "verbose": [],
                "dry_run": [],
                "compress": [],
                "mode": []
            }
        },
        "bdist_egg.initialize_options": {
            "name": "initialize_options",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.finalize_options": {
            "name": "finalize_options",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.do_install_data": {
            "name": "do_install_data",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.get_outputs": {
            "name": "get_outputs",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.call_command": {
            "name": "call_command",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "cmdname": []
            }
        },
        "bdist_egg.run": {
            "name": "run",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.zap_pyfiles": {
            "name": "zap_pyfiles",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.zip_safe": {
            "name": "zip_safe",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.gen_header": {
            "name": "gen_header",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_egg.copy_metadata_to": {
            "name": "copy_metadata_to",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "target_dir": []
            }
        },
        "bdist_egg.get_ext_outputs": {
            "name": "get_ext_outputs",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "make_zipfile.visit": {
            "name": "visit",
            "location": 439,
            "return": [],
            "arguments": {
                "z": [],
                "dirname": [],
                "names": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/bdist_rpm.py": {
        "bdist_rpm.run": {
            "name": "run",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm._make_spec_file": {
            "name": "_make_spec_file",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/build.py": {
        "build.get_sub_commands": {
            "name": "get_sub_commands",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.initialize_options": {
            "name": "initialize_options",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.finalize_options": {
            "name": "finalize_options",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.run": {
            "name": "run",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.get_source_files": {
            "name": "get_source_files",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.get_outputs": {
            "name": "get_outputs",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommand.get_output_mapping": {
            "name": "get_output_mapping",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/build_clib.py": {
        "build_clib.build_libraries": {
            "name": "build_libraries",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "libraries": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/build_ext.py": {
        "_customize_compiler_for_shlib": {
            "name": "_customize_compiler_for_shlib",
            "location": 30,
            "return": [],
            "arguments": {
                "compiler": []
            }
        },
        "if_dl": {
            "name": "if_dl",
            "location": 64,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "get_abi3_suffix": {
            "name": "get_abi3_suffix",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "build_ext.run": {
            "name": "run",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext._get_inplace_equivalent": {
            "name": "_get_inplace_equivalent",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "build_py": [],
                "ext": []
            }
        },
        "build_ext.copy_extensions_to_source": {
            "name": "copy_extensions_to_source",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext._get_equivalent_stub": {
            "name": "_get_equivalent_stub",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "ext": [],
                "output_file": []
            }
        },
        "build_ext._get_output_mapping": {
            "name": "_get_output_mapping",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.get_ext_filename": {
            "name": "get_ext_filename",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "build_ext.initialize_options": {
            "name": "initialize_options",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.finalize_options": {
            "name": "finalize_options",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.setup_shlib_compiler": {
            "name": "setup_shlib_compiler",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.get_export_symbols": {
            "name": "get_export_symbols",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.build_extension": {
            "name": "build_extension",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.links_to_dynamic": {
            "name": "links_to_dynamic",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.get_outputs": {
            "name": "get_outputs",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.get_output_mapping": {
            "name": "get_output_mapping",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.__get_stubs_outputs": {
            "name": "__get_stubs_outputs",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.__get_output_extensions": {
            "name": "__get_output_extensions",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.write_stub": {
            "name": "write_stub",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "output_dir": [],
                "ext": [],
                "compile": []
            }
        },
        "build_ext._write_stub_file": {
            "name": "_write_stub_file",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "stub_file": [],
                "ext": [],
                "compile": []
            }
        },
        "build_ext._compile_and_remove_stub": {
            "name": "_compile_and_remove_stub",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "stub_file": []
            }
        },
        "link_shared_object": {
            "name": "link_shared_object",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/build_py.py": {
        "make_writable": {
            "name": "make_writable",
            "location": 20,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "assert_relative": {
            "name": "assert_relative",
            "location": 304,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "build_py.finalize_options": {
            "name": "finalize_options",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.copy_file": {
            "name": "copy_file",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": [],
                "preserve_mode": [],
                "preserve_times": [],
                "link": [],
                "level": []
            }
        },
        "build_py.run": {
            "name": "run",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.__getattr__": {
            "name": "__getattr__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "build_py.build_module": {
            "name": "build_module",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "module_file": [],
                "package": []
            }
        },
        "build_py._get_data_files": {
            "name": "_get_data_files",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_data_files_without_manifest": {
            "name": "get_data_files_without_manifest",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py._get_pkg_data_files": {
            "name": "_get_pkg_data_files",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "build_py.find_data_files": {
            "name": "find_data_files",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "src_dir": []
            }
        },
        "build_py.get_outputs": {
            "name": "get_outputs",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "include_bytecode": []
            }
        },
        "build_py.get_output_mapping": {
            "name": "get_output_mapping",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py._get_module_mapping": {
            "name": "_get_module_mapping",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py._get_package_data_output_mapping": {
            "name": "_get_package_data_output_mapping",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.build_package_data": {
            "name": "build_package_data",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.analyze_manifest": {
            "name": "analyze_manifest",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py._filter_build_files": {
            "name": "_filter_build_files",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "files": [],
                "egg_info": []
            }
        },
        "build_py.get_data_files": {
            "name": "get_data_files",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.check_package": {
            "name": "check_package",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "package_dir": []
            }
        },
        "build_py.initialize_options": {
            "name": "initialize_options",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_package_dir": {
            "name": "get_package_dir",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "build_py.exclude_data_files": {
            "name": "exclude_data_files",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "src_dir": [],
                "files": []
            }
        },
        "build_py._get_platform_patterns": {
            "name": "_get_platform_patterns",
            "location": 286,
            "return": [],
            "arguments": {
                "spec": [],
                "package": [],
                "src_dir": []
            }
        },
        "_IncludePackageDataAbuse.__init__": {
            "name": "__init__",
            "location": 351,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IncludePackageDataAbuse.is_module": {
            "name": "is_module",
            "location": 354,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "_IncludePackageDataAbuse.importable_subpackage": {
            "name": "importable_subpackage",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [],
                "file": []
            }
        },
        "_IncludePackageDataAbuse.warn": {
            "name": "warn",
            "location": 364,
            "return": [],
            "arguments": {
                "self": [],
                "importable": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/develop.py": {
        "develop.run": {
            "name": "run",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "develop.initialize_options": {
            "name": "initialize_options",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "develop.finalize_options": {
            "name": "finalize_options",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "develop._resolve_setup_path": {
            "name": "_resolve_setup_path",
            "location": 88,
            "return": [],
            "arguments": {
                "egg_base": [],
                "install_dir": [],
                "egg_path": []
            }
        },
        "develop.install_for_development": {
            "name": "install_for_development",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "develop.uninstall_link": {
            "name": "uninstall_link",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "develop.install_egg_scripts": {
            "name": "install_egg_scripts",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "develop.install_wrapper_scripts": {
            "name": "install_wrapper_scripts",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "VersionlessRequirement.__init__": {
            "name": "__init__",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "VersionlessRequirement.__getattr__": {
            "name": "__getattr__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "VersionlessRequirement.as_requirement": {
            "name": "as_requirement",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/dist_info.py": {
        "_safe": {
            "name": "_safe",
            "location": 108,
            "return": [],
            "arguments": {
                "component": []
            }
        },
        "_version": {
            "name": "_version",
            "location": 113,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_rm": {
            "name": "_rm",
            "location": 134,
            "return": [],
            "arguments": {
                "dir_name": []
            }
        },
        "_copy": {
            "name": "_copy",
            "location": 139,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        },
        "dist_info.initialize_options": {
            "name": "initialize_options",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dist_info.finalize_options": {
            "name": "finalize_options",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dist_info._maybe_bkp_dir": {
            "name": "_maybe_bkp_dir",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "dir_path": [],
                "requires_bkp": []
            }
        },
        "dist_info.run": {
            "name": "run",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/easy_install.py": {
        "is_64bit": {
            "name": "is_64bit",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "_to_bytes": {
            "name": "_to_bytes",
            "location": 82,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "isascii": {
            "name": "isascii",
            "location": 86,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_one_liner": {
            "name": "_one_liner",
            "location": 94,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "_pythonpath": {
            "name": "_pythonpath",
            "location": 1372,
            "return": [],
            "arguments": {}
        },
        "get_site_dirs": {
            "name": "get_site_dirs",
            "location": 1377,
            "return": [],
            "arguments": {}
        },
        "expand_paths": {
            "name": "expand_paths",
            "location": 1447,
            "return": [],
            "arguments": {
                "inputs": []
            }
        },
        "extract_wininst_cfg": {
            "name": "extract_wininst_cfg",
            "location": 1493,
            "return": [],
            "arguments": {
                "dist_filename": []
            }
        },
        "get_exe_prefixes": {
            "name": "get_exe_prefixes",
            "location": 1534,
            "return": [],
            "arguments": {
                "exe_filename": []
            }
        },
        "_first_line_re": {
            "name": "_first_line_re",
            "location": 1705,
            "return": [],
            "arguments": {}
        },
        "auto_chmod": {
            "name": "auto_chmod",
            "location": 1717,
            "return": [],
            "arguments": {
                "func": [],
                "arg": [],
                "exc": []
            }
        },
        "update_dist_caches": {
            "name": "update_dist_caches",
            "location": 1726,
            "return": [],
            "arguments": {
                "dist_path": [],
                "fix_zipimporter_caches": []
            }
        },
        "_collect_zipimporter_cache_entries": {
            "name": "_collect_zipimporter_cache_entries",
            "location": 1808,
            "return": [],
            "arguments": {
                "normalized_path": [],
                "cache": []
            }
        },
        "_update_zipimporter_cache": {
            "name": "_update_zipimporter_cache",
            "location": 1828,
            "return": [],
            "arguments": {
                "normalized_path": [],
                "cache": [],
                "updater": []
            }
        },
        "_uncache": {
            "name": "_uncache",
            "location": 1860,
            "return": [],
            "arguments": {
                "normalized_path": [],
                "cache": []
            }
        },
        "_remove_and_clear_zip_directory_cache_data": {
            "name": "_remove_and_clear_zip_directory_cache_data",
            "location": 1864,
            "return": [],
            "arguments": {
                "normalized_path": []
            }
        },
        "is_python": {
            "name": "is_python",
            "location": 1905,
            "return": [],
            "arguments": {
                "text": [],
                "filename": []
            }
        },
        "is_sh": {
            "name": "is_sh",
            "location": 1915,
            "return": [],
            "arguments": {
                "executable": []
            }
        },
        "nt_quote_arg": {
            "name": "nt_quote_arg",
            "location": 1925,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "is_python_script": {
            "name": "is_python_script",
            "location": 1930,
            "return": [],
            "arguments": {
                "script_text": [],
                "filename": []
            }
        },
        "chmod": {
            "name": "chmod",
            "location": 1952,
            "return": [],
            "arguments": {
                "path": [],
                "mode": []
            }
        },
        "get_win_launcher": {
            "name": "get_win_launcher",
            "location": 2268,
            "return": [],
            "arguments": {
                "type": []
            }
        },
        "load_launcher_manifest": {
            "name": "load_launcher_manifest",
            "location": 2287,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "rmtree": {
            "name": "rmtree",
            "location": 2292,
            "return": [],
            "arguments": {
                "path": [],
                "ignore_errors": [],
                "onerror": []
            }
        },
        "current_umask": {
            "name": "current_umask",
            "location": 2296,
            "return": [],
            "arguments": {}
        },
        "only_strs": {
            "name": "only_strs",
            "location": 2302,
            "return": [],
            "arguments": {
                "values": []
            }
        },
        "easy_install.initialize_options": {
            "name": "initialize_options",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.delete_blockers": {
            "name": "delete_blockers",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "blockers": []
            }
        },
        "easy_install._delete_path": {
            "name": "_delete_path",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "easy_install._render_version": {
            "name": "_render_version",
            "location": 209,
            "return": [],
            "arguments": {}
        },
        "easy_install.finalize_options": {
            "name": "finalize_options",
            "location": 219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install._process_site_dirs": {
            "name": "_process_site_dirs",
            "location": 336,
            "return": [],
            "arguments": {
                "site_dirs": []
            }
        },
        "easy_install._validate_optimize": {
            "name": "_validate_optimize",
            "location": 356,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "easy_install._fix_install_dir_for_user_site": {
            "name": "_fix_install_dir_for_user_site",
            "location": 368,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install._expand_attrs": {
            "name": "_expand_attrs",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "easy_install.expand_basedirs": {
            "name": "expand_basedirs",
            "location": 392,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.expand_dirs": {
            "name": "expand_dirs",
            "location": 397,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.run": {
            "name": "run",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "show_deprecation": []
            }
        },
        "easy_install.pseudo_tempname": {
            "name": "pseudo_tempname",
            "location": 438,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.warn_deprecated_options": {
            "name": "warn_deprecated_options",
            "location": 449,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.check_site_dir": {
            "name": "check_site_dir",
            "location": 452,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.cant_write_to_target": {
            "name": "cant_write_to_target",
            "location": 533,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.check_pth_processing": {
            "name": "check_pth_processing",
            "location": 542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.install_egg_scripts": {
            "name": "install_egg_scripts",
            "location": 601,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "easy_install.add_output": {
            "name": "add_output",
            "location": 615,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "easy_install.not_editable": {
            "name": "not_editable",
            "location": 623,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "easy_install.check_editable": {
            "name": "check_editable",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "easy_install._tmpdir": {
            "name": "_tmpdir",
            "location": 642,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install.easy_install": {
            "name": "easy_install",
            "location": 650,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "deps": []
            }
        },
        "easy_install.install_item": {
            "name": "install_item",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "download": [],
                "tmpdir": [],
                "deps": [],
                "install_needed": []
            }
        },
        "easy_install.select_scheme": {
            "name": "select_scheme",
            "location": 719,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "easy_install.process_distribution": {
            "name": "process_distribution",
            "location": 727,
            "return": [],
            "arguments": {
                "self": [],
                "requirement": [],
                "dist": [],
                "deps": []
            }
        },
        "easy_install.should_unzip": {
            "name": "should_unzip",
            "location": 768,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "easy_install.maybe_move": {
            "name": "maybe_move",
            "location": 777,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "dist_filename": [],
                "setup_base": []
            }
        },
        "easy_install.install_wrapper_scripts": {
            "name": "install_wrapper_scripts",
            "location": 800,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "easy_install.install_script": {
            "name": "install_script",
            "location": 806,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "script_name": [],
                "script_text": [],
                "dev_path": []
            }
        },
        "easy_install._load_template": {
            "name": "_load_template",
            "location": 817,
            "return": [],
            "arguments": {
                "dev_path": []
            }
        },
        "easy_install.write_script": {
            "name": "write_script",
            "location": 831,
            "return": [],
            "arguments": {
                "self": [],
                "script_name": [],
                "contents": [],
                "mode": [],
                "blockers": []
            }
        },
        "easy_install.install_eggs": {
            "name": "install_eggs",
            "location": 851,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "dist_filename": [],
                "tmpdir": []
            }
        },
        "easy_install.egg_distribution": {
            "name": "egg_distribution",
            "location": 902,
            "return": [],
            "arguments": {
                "self": [],
                "egg_path": []
            }
        },
        "easy_install.install_egg": {
            "name": "install_egg",
            "location": 911,
            "return": [],
            "arguments": {
                "self": [],
                "egg_path": [],
                "tmpdir": []
            }
        },
        "easy_install.install_exe": {
            "name": "install_exe",
            "location": 967,
            "return": [],
            "arguments": {
                "self": [],
                "dist_filename": [],
                "tmpdir": []
            }
        },
        "easy_install.exe_to_egg": {
            "name": "exe_to_egg",
            "location": 1013,
            "return": [],
            "arguments": {
                "self": [],
                "dist_filename": [],
                "egg_tmp": []
            }
        },
        "easy_install.install_wheel": {
            "name": "install_wheel",
            "location": 1066,
            "return": [],
            "arguments": {
                "self": [],
                "wheel_path": [],
                "tmpdir": []
            }
        },
        "easy_install.installation_report": {
            "name": "installation_report",
            "location": 1112,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "dist": [],
                "what": []
            }
        },
        "easy_install.report_editable": {
            "name": "report_editable",
            "location": 1137,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "setup_script": []
            }
        },
        "easy_install.run_setup": {
            "name": "run_setup",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "setup_script": [],
                "setup_base": [],
                "args": []
            }
        },
        "easy_install.build_and_install": {
            "name": "build_and_install",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": [],
                "setup_script": [],
                "setup_base": []
            }
        },
        "easy_install._set_fetcher_options": {
            "name": "_set_fetcher_options",
            "location": 1188,
            "return": [],
            "arguments": {
                "self": [],
                "base": []
            }
        },
        "easy_install.update_pth": {
            "name": "update_pth",
            "location": 1211,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "easy_install.unpack_progress": {
            "name": "unpack_progress",
            "location": 1252,
            "return": [],
            "arguments": {
                "self": [],
                "src": [],
                "dst": []
            }
        },
        "easy_install.unpack_and_compile": {
            "name": "unpack_and_compile",
            "location": 1257,
            "return": [],
            "arguments": {
                "self": [],
                "egg_path": [],
                "destination": []
            }
        },
        "easy_install.byte_compile": {
            "name": "byte_compile",
            "location": 1276,
            "return": [],
            "arguments": {
                "self": [],
                "to_compile": []
            }
        },
        "easy_install.create_home_path": {
            "name": "create_home_path",
            "location": 1327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "easy_install._expand": {
            "name": "_expand",
            "location": 1349,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PthDistributions.__init__": {
            "name": "__init__",
            "location": 1576,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "sitedirs": []
            }
        },
        "PthDistributions._load": {
            "name": "_load",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PthDistributions.save": {
            "name": "save",
            "location": 1616,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PthDistributions._wrap_lines": {
            "name": "_wrap_lines",
            "location": 1639,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "PthDistributions.add": {
            "name": "add",
            "location": 1642,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "PthDistributions.remove": {
            "name": "remove",
            "location": 1656,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "PthDistributions.make_relative": {
            "name": "make_relative",
            "location": 1663,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "RewritePthDistributions._wrap_lines": {
            "name": "_wrap_lines",
            "location": 1681,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": []
            }
        },
        "_remove_and_clear_zip_directory_cache_data.clear_and_remove_cached_zip_archive_directory_data": {
            "name": "clear_and_remove_cached_zip_archive_directory_data",
            "location": 1865,
            "return": [],
            "arguments": {
                "path": [],
                "old_entry": []
            }
        },
        "_replace_zip_directory_cache_data": {
            "name": "_replace_zip_directory_cache_data",
            "location": 1886,
            "return": [],
            "arguments": {
                "normalized_path": []
            }
        },
        "CommandSpec.best": {
            "name": "best",
            "location": 1970,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CommandSpec._sys_executable": {
            "name": "_sys_executable",
            "location": 1977,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CommandSpec.from_param": {
            "name": "from_param",
            "location": 1982,
            "return": [],
            "arguments": {
                "cls": [],
                "param": []
            }
        },
        "CommandSpec.from_environment": {
            "name": "from_environment",
            "location": 1997,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CommandSpec.from_string": {
            "name": "from_string",
            "location": 2001,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "CommandSpec.install_options": {
            "name": "install_options",
            "location": 2009,
            "return": [],
            "arguments": {
                "self": [],
                "script_text": []
            }
        },
        "CommandSpec._extract_options": {
            "name": "_extract_options",
            "location": 2016,
            "return": [],
            "arguments": {
                "orig_script": []
            }
        },
        "CommandSpec.as_header": {
            "name": "as_header",
            "location": 2025,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandSpec._strip_quotes": {
            "name": "_strip_quotes",
            "location": 2029,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "CommandSpec._render": {
            "name": "_render",
            "location": 2037,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "ScriptWriter.get_script_args": {
            "name": "get_script_args",
            "location": 2095,
            "return": [],
            "arguments": {
                "cls": [],
                "dist": [],
                "executable": [],
                "wininst": []
            }
        },
        "ScriptWriter.get_script_header": {
            "name": "get_script_header",
            "location": 2103,
            "return": [],
            "arguments": {
                "cls": [],
                "script_text": [],
                "executable": [],
                "wininst": []
            }
        },
        "ScriptWriter.get_args": {
            "name": "get_args",
            "location": 2112,
            "return": [],
            "arguments": {
                "cls": [],
                "dist": [],
                "header": []
            }
        },
        "ScriptWriter._ensure_safe_name": {
            "name": "_ensure_safe_name",
            "location": 2130,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "ScriptWriter.get_writer": {
            "name": "get_writer",
            "location": 2139,
            "return": [],
            "arguments": {
                "cls": [],
                "force_windows": []
            }
        },
        "ScriptWriter.best": {
            "name": "best",
            "location": 2145,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ScriptWriter._get_script_args": {
            "name": "_get_script_args",
            "location": 2155,
            "return": [],
            "arguments": {
                "cls": [],
                "type_": [],
                "name": [],
                "header": [],
                "script_text": []
            }
        },
        "ScriptWriter.get_header": {
            "name": "get_header",
            "location": 2160,
            "return": [],
            "arguments": {
                "cls": [],
                "script_text": [],
                "executable": []
            }
        },
        "WindowsScriptWriter.get_writer": {
            "name": "get_writer",
            "location": 2171,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "WindowsScriptWriter.best": {
            "name": "best",
            "location": 2177,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "WindowsScriptWriter._get_script_args": {
            "name": "_get_script_args",
            "location": 2190,
            "return": [],
            "arguments": {
                "cls": [],
                "type_": [],
                "name": [],
                "header": [],
                "script_text": []
            }
        },
        "WindowsScriptWriter._adjust_header": {
            "name": "_adjust_header",
            "location": 2206,
            "return": [],
            "arguments": {
                "cls": [],
                "type_": [],
                "orig_header": []
            }
        },
        "WindowsScriptWriter._use_header": {
            "name": "_use_header",
            "location": 2220,
            "return": [],
            "arguments": {
                "new_header": []
            }
        },
        "WindowsExecutableLauncherWriter._get_script_args": {
            "name": "_get_script_args",
            "location": 2234,
            "return": [],
            "arguments": {
                "cls": [],
                "type_": [],
                "name": [],
                "header": [],
                "script_text": []
            }
        },
        "easy_install.exe_to_egg.process": {
            "name": "process",
            "location": 1021,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        },
        "easy_install.unpack_and_compile.pf": {
            "name": "pf",
            "location": 1261,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        },
        "_replace_zip_directory_cache_data.replace_cached_zip_archive_directory_data": {
            "name": "replace_cached_zip_archive_directory_data",
            "location": 1887,
            "return": [],
            "arguments": {
                "path": [],
                "old_entry": []
            }
        },
        "_chmod": {
            "name": "_chmod",
            "location": 1948,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/editable_wheel.py": {
        "_can_symlink_files": {
            "name": "_can_symlink_files",
            "location": 513,
            "return": [],
            "arguments": {
                "base_dir": []
            }
        },
        "_simple_layout": {
            "name": "_simple_layout",
            "location": 533,
            "return": [],
            "arguments": {
                "packages": [],
                "package_dir": [],
                "project_dir": []
            }
        },
        "_parent_path": {
            "name": "_parent_path",
            "location": 577,
            "return": [],
            "arguments": {
                "pkg": [],
                "pkg_path": []
            }
        },
        "_find_packages": {
            "name": "_find_packages",
            "location": 591,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "_find_top_level_modules": {
            "name": "_find_top_level_modules",
            "location": 607,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "_find_package_roots": {
            "name": "_find_package_roots",
            "location": 616,
            "return": [],
            "arguments": {
                "packages": [],
                "package_dir": [],
                "src_root": []
            }
        },
        "_absolute_root": {
            "name": "_absolute_root",
            "location": 629,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_find_virtual_namespaces": {
            "name": "_find_virtual_namespaces",
            "location": 640,
            "return": [],
            "arguments": {
                "pkg_roots": []
            }
        },
        "_find_namespaces": {
            "name": "_find_namespaces",
            "location": 664,
            "return": [],
            "arguments": {
                "packages": [],
                "pkg_roots": []
            }
        },
        "_remove_nested": {
            "name": "_remove_nested",
            "location": 673,
            "return": [],
            "arguments": {
                "pkg_roots": []
            }
        },
        "_is_nested": {
            "name": "_is_nested",
            "location": 686,
            "return": [],
            "arguments": {
                "pkg": [],
                "pkg_path": [],
                "parent": [],
                "parent_path": []
            }
        },
        "_normalize_path": {
            "name": "_normalize_path",
            "location": 709,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_empty_dir": {
            "name": "_empty_dir",
            "location": 716,
            "return": [],
            "arguments": {
                "dir_": []
            }
        },
        "_make_identifier": {
            "name": "_make_identifier",
            "location": 723,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_finder_template": {
            "name": "_finder_template",
            "location": 825,
            "return": [],
            "arguments": {
                "name": [],
                "mapping": [],
                "namespaces": []
            }
        },
        "_EditableMode.convert": {
            "name": "convert",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [],
                "mode": []
            }
        },
        "editable_wheel.initialize_options": {
            "name": "initialize_options",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel.finalize_options": {
            "name": "finalize_options",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel.run": {
            "name": "run",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._ensure_dist_info": {
            "name": "_ensure_dist_info",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._install_namespaces": {
            "name": "_install_namespaces",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "installation_dir": [],
                "pth_prefix": []
            }
        },
        "editable_wheel._find_egg_info_dir": {
            "name": "_find_egg_info_dir",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._configure_build": {
            "name": "_configure_build",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "unpacked_wheel": [],
                "build_lib": [],
                "tmp_dir": []
            }
        },
        "editable_wheel._set_editable_mode": {
            "name": "_set_editable_mode",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._collect_build_outputs": {
            "name": "_collect_build_outputs",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._run_build_commands": {
            "name": "_run_build_commands",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "dist_name": [],
                "unpacked_wheel": [],
                "build_lib": [],
                "tmp_dir": []
            }
        },
        "editable_wheel._run_build_subcommands": {
            "name": "_run_build_subcommands",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "editable_wheel._safely_run": {
            "name": "_safely_run",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "cmd_name": []
            }
        },
        "editable_wheel._create_wheel_file": {
            "name": "_create_wheel_file",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "bdist_wheel": []
            }
        },
        "editable_wheel._run_install": {
            "name": "_run_install",
            "location": 338,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "editable_wheel._select_strategy": {
            "name": "_select_strategy",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "tag": [],
                "build_lib": []
            }
        },
        "EditableStrategy.__call__": {
            "name": "__call__",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "wheel": [],
                "files": [],
                "mapping": []
            }
        },
        "EditableStrategy.__enter__": {
            "name": "__enter__",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditableStrategy.__exit__": {
            "name": "__exit__",
            "location": 378,
            "return": [],
            "arguments": {
                "self": [],
                "_exc_type": [],
                "_exc_value": [],
                "_traceback": []
            }
        },
        "_StaticPth.__init__": {
            "name": "__init__",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "name": [],
                "path_entries": []
            }
        },
        "_StaticPth.__call__": {
            "name": "__call__",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "wheel": [],
                "files": [],
                "mapping": []
            }
        },
        "_StaticPth.__enter__": {
            "name": "__enter__",
            "location": 393,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_StaticPth.__exit__": {
            "name": "__exit__",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "_exc_type": [],
                "_exc_value": [],
                "_traceback": []
            }
        },
        "_LinkTree.__init__": {
            "name": "__init__",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "name": [],
                "auxiliary_dir": [],
                "build_lib": []
            }
        },
        "_LinkTree.__call__": {
            "name": "__call__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "wheel": [],
                "files": [],
                "mapping": []
            }
        },
        "_LinkTree._normalize_output": {
            "name": "_normalize_output",
            "location": 430,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "_LinkTree._create_file": {
            "name": "_create_file",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "relative_output": [],
                "src_file": [],
                "link": []
            }
        },
        "_LinkTree._create_links": {
            "name": "_create_links",
            "location": 443,
            "return": [],
            "arguments": {
                "self": [],
                "outputs": [],
                "output_mapping": []
            }
        },
        "_LinkTree.__enter__": {
            "name": "__enter__",
            "location": 460,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LinkTree.__exit__": {
            "name": "__exit__",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "_exc_type": [],
                "_exc_value": [],
                "_traceback": []
            }
        },
        "_TopLevelFinder.__init__": {
            "name": "__init__",
            "location": 477,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "name": []
            }
        },
        "_TopLevelFinder.__call__": {
            "name": "__call__",
            "location": 481,
            "return": [],
            "arguments": {
                "self": [],
                "wheel": [],
                "files": [],
                "mapping": []
            }
        },
        "_TopLevelFinder.__enter__": {
            "name": "__enter__",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TopLevelFinder.__exit__": {
            "name": "__exit__",
            "location": 505,
            "return": [],
            "arguments": {
                "self": [],
                "_exc_type": [],
                "_exc_value": [],
                "_traceback": []
            }
        },
        "_NamespaceInstaller.__init__": {
            "name": "__init__",
            "location": 736,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": [],
                "installation_dir": [],
                "editable_name": [],
                "src_root": []
            }
        },
        "_NamespaceInstaller._get_target": {
            "name": "_get_target",
            "location": 744,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NamespaceInstaller._get_root": {
            "name": "_get_root",
            "location": 748,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/egg_info.py": {
        "translate_pattern": {
            "name": "translate_pattern",
            "location": 39,
            "return": [],
            "arguments": {
                "glob": []
            }
        },
        "write_file": {
            "name": "write_file",
            "location": 652,
            "return": [],
            "arguments": {
                "filename": [],
                "contents": []
            }
        },
        "write_pkg_info": {
            "name": "write_pkg_info",
            "location": 665,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "warn_depends_obsolete": {
            "name": "warn_depends_obsolete",
            "location": 684,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "_write_requirements": {
            "name": "_write_requirements",
            "location": 692,
            "return": [],
            "arguments": {
                "stream": [],
                "reqs": []
            }
        },
        "write_requirements": {
            "name": "write_requirements",
            "location": 701,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "write_setup_requirements": {
            "name": "write_setup_requirements",
            "location": 712,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "write_toplevel_names": {
            "name": "write_toplevel_names",
            "location": 718,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "overwrite_arg": {
            "name": "overwrite_arg",
            "location": 728,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "write_arg": {
            "name": "write_arg",
            "location": 732,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": [],
                "force": []
            }
        },
        "write_entries": {
            "name": "write_entries",
            "location": 740,
            "return": [],
            "arguments": {
                "cmd": [],
                "basename": [],
                "filename": []
            }
        },
        "get_pkg_info_revision": {
            "name": "get_pkg_info_revision",
            "location": 746,
            "return": [],
            "arguments": {}
        },
        "InfoCommon.name": {
            "name": "name",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfoCommon.tagged_version": {
            "name": "tagged_version",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfoCommon._maybe_tag": {
            "name": "_maybe_tag",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "InfoCommon._already_tagged": {
            "name": "_already_tagged",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "InfoCommon._safe_tags": {
            "name": "_safe_tags",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfoCommon.tags": {
            "name": "tags",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "egg_info.initialize_options": {
            "name": "initialize_options",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "egg_info.tag_svn_revision": {
            "name": "tag_svn_revision",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "egg_info.save_version_info": {
            "name": "save_version_info",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "egg_info.finalize_options": {
            "name": "finalize_options",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "egg_info.write_or_delete_file": {
            "name": "write_or_delete_file",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "what": [],
                "filename": [],
                "data": [],
                "force": []
            }
        },
        "egg_info.write_file": {
            "name": "write_file",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "what": [],
                "filename": [],
                "data": []
            }
        },
        "egg_info.delete_file": {
            "name": "delete_file",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "egg_info.run": {
            "name": "run",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "egg_info.find_sources": {
            "name": "find_sources",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "egg_info.check_broken_egg_info": {
            "name": "check_broken_egg_info",
            "location": 319,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileList.__init__": {
            "name": "__init__",
            "location": 338,
            "return": [],
            "arguments": {
                "self": [],
                "warn": [],
                "debug_print": [],
                "ignore_egg_info_dir": []
            }
        },
        "FileList.process_template_line": {
            "name": "process_template_line",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "FileList._remove_files": {
            "name": "_remove_files",
            "location": 419,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "FileList.include": {
            "name": "include",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "FileList.exclude": {
            "name": "exclude",
            "location": 438,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "FileList.recursive_include": {
            "name": "recursive_include",
            "location": 443,
            "return": [],
            "arguments": {
                "self": [],
                "dir": [],
                "pattern": []
            }
        },
        "FileList.recursive_exclude": {
            "name": "recursive_exclude",
            "location": 453,
            "return": [],
            "arguments": {
                "self": [],
                "dir": [],
                "pattern": []
            }
        },
        "FileList.graft": {
            "name": "graft",
            "location": 460,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "FileList.prune": {
            "name": "prune",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "FileList.global_include": {
            "name": "global_include",
            "location": 475,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "FileList.global_exclude": {
            "name": "global_exclude",
            "location": 487,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "FileList.append": {
            "name": "append",
            "location": 494,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "FileList.extend": {
            "name": "extend",
            "location": 502,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "FileList._repair": {
            "name": "_repair",
            "location": 505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileList._safe_path": {
            "name": "_safe_path",
            "location": 515,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "manifest_maker.initialize_options": {
            "name": "initialize_options",
            "location": 546,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker.finalize_options": {
            "name": "finalize_options",
            "location": 553,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker.run": {
            "name": "run",
            "location": 556,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker._manifest_normalize": {
            "name": "_manifest_normalize",
            "location": 569,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "manifest_maker.write_manifest": {
            "name": "write_manifest",
            "location": 573,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker.warn": {
            "name": "warn",
            "location": 585,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "manifest_maker._should_suppress_warning": {
            "name": "_should_suppress_warning",
            "location": 590,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "manifest_maker.add_defaults": {
            "name": "add_defaults",
            "location": 596,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker.add_license_files": {
            "name": "add_license_files",
            "location": 614,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker.prune_file_list": {
            "name": "prune_file_list",
            "location": 621,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "manifest_maker._safe_data_files": {
            "name": "_safe_data_files",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "build_py": []
            }
        },
        "_write_requirements.append_cr": {
            "name": "append_cr",
            "location": 695,
            "return": [],
            "arguments": {
                "line": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/install.py": {
        "install.initialize_options": {
            "name": "initialize_options",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.finalize_options": {
            "name": "finalize_options",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.handle_extra_path": {
            "name": "handle_extra_path",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.run": {
            "name": "run",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install._called_from_setup": {
            "name": "_called_from_setup",
            "location": 77,
            "return": [],
            "arguments": {
                "run_frame": []
            }
        },
        "install.do_egg_install": {
            "name": "do_egg_install",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/install_egg_info.py": {
        "install_egg_info.initialize_options": {
            "name": "initialize_options",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.finalize_options": {
            "name": "finalize_options",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.run": {
            "name": "run",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.get_outputs": {
            "name": "get_outputs",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.copytree": {
            "name": "copytree",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.copytree.skimmer": {
            "name": "skimmer",
            "location": 52,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/install_lib.py": {
        "install_lib.run": {
            "name": "run",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.get_exclusions": {
            "name": "get_exclusions",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib._exclude_pkg_path": {
            "name": "_exclude_pkg_path",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "pkg": [],
                "exclusion_path": []
            }
        },
        "install_lib._all_packages": {
            "name": "_all_packages",
            "location": 40,
            "return": [],
            "arguments": {
                "pkg_name": []
            }
        },
        "install_lib._get_SVEM_NSPs": {
            "name": "_get_SVEM_NSPs",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib._gen_exclusion_paths": {
            "name": "_gen_exclusion_paths",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "install_lib.copy_tree": {
            "name": "copy_tree",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": [],
                "preserve_mode": [],
                "preserve_times": [],
                "preserve_symlinks": [],
                "level": []
            }
        },
        "install_lib.get_outputs": {
            "name": "get_outputs",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.copy_tree.pf": {
            "name": "pf",
            "location": 104,
            "return": [],
            "arguments": {
                "src": [],
                "dst": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/install_scripts.py": {
        "install_scripts.initialize_options": {
            "name": "initialize_options",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.run": {
            "name": "run",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.write_script": {
            "name": "write_script",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "script_name": [],
                "contents": [],
                "mode": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/py36compat.py": {
        "sdist_add_defaults.add_defaults": {
            "name": "add_defaults",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._cs_path_exists": {
            "name": "_cs_path_exists",
            "location": 39,
            "return": [],
            "arguments": {
                "fspath": []
            }
        },
        "sdist_add_defaults._add_defaults_standards": {
            "name": "_add_defaults_standards",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_optional": {
            "name": "_add_defaults_optional",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_python": {
            "name": "_add_defaults_python",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_data_files": {
            "name": "_add_defaults_data_files",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_ext": {
            "name": "_add_defaults_ext",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_c_libs": {
            "name": "_add_defaults_c_libs",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist_add_defaults._add_defaults_scripts": {
            "name": "_add_defaults_scripts",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/register.py": {
        "register.run": {
            "name": "run",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/rotate.py": {
        "rotate.initialize_options": {
            "name": "initialize_options",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "rotate.finalize_options": {
            "name": "finalize_options",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "rotate.run": {
            "name": "run",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/saveopts.py": {
        "saveopts.run": {
            "name": "run",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/sdist.py": {
        "walk_revctrl": {
            "name": "walk_revctrl",
            "location": 17,
            "return": [],
            "arguments": {
                "dirname": []
            }
        },
        "sdist.run": {
            "name": "run",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.initialize_options": {
            "name": "initialize_options",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._default_to_gztar": {
            "name": "_default_to_gztar",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.make_distribution": {
            "name": "make_distribution",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._remove_os_link": {
            "name": "_remove_os_link",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "sdist.add_defaults": {
            "name": "add_defaults",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_optional": {
            "name": "_add_defaults_optional",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_python": {
            "name": "_add_defaults_python",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_build_sub_commands": {
            "name": "_add_defaults_build_sub_commands",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._safe_data_files": {
            "name": "_safe_data_files",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "build_py": []
            }
        },
        "sdist._add_data_files": {
            "name": "_add_data_files",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "data_files": []
            }
        },
        "sdist._add_defaults_data_files": {
            "name": "_add_defaults_data_files",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.check_readme": {
            "name": "check_readme",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.make_release_tree": {
            "name": "make_release_tree",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "base_dir": [],
                "files": []
            }
        },
        "sdist._manifest_is_not_generated": {
            "name": "_manifest_is_not_generated",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.read_manifest": {
            "name": "read_manifest",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/setopt.py": {
        "config_file": {
            "name": "config_file",
            "location": 13,
            "return": [],
            "arguments": {
                "kind": []
            }
        },
        "edit_config": {
            "name": "edit_config",
            "location": 32,
            "return": [],
            "arguments": {
                "filename": [],
                "settings": [],
                "dry_run": []
            }
        },
        "option_base.initialize_options": {
            "name": "initialize_options",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "option_base.finalize_options": {
            "name": "finalize_options",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "setopt.initialize_options": {
            "name": "initialize_options",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "setopt.finalize_options": {
            "name": "finalize_options",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "setopt.run": {
            "name": "run",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/test.py": {
        "ScanningLoader.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScanningLoader.loadTestsFromModule": {
            "name": "loadTestsFromModule",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "pattern": []
            }
        },
        "NonDataProperty.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "fget": []
            }
        },
        "NonDataProperty.__get__": {
            "name": "__get__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "objtype": []
            }
        },
        "test.initialize_options": {
            "name": "initialize_options",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test.finalize_options": {
            "name": "finalize_options",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test.test_args": {
            "name": "test_args",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test._test_args": {
            "name": "_test_args",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test.with_project_on_sys_path": {
            "name": "with_project_on_sys_path",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "test.project_on_sys_path": {
            "name": "project_on_sys_path",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "include_dists": []
            }
        },
        "test.paths_on_pythonpath": {
            "name": "paths_on_pythonpath",
            "location": 164,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "test.install_dists": {
            "name": "install_dists",
            "location": 189,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "test.run": {
            "name": "run",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test.run_tests": {
            "name": "run_tests",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test._argv": {
            "name": "_argv",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test._resolve_as_ep": {
            "name": "_resolve_as_ep",
            "location": 246,
            "return": [],
            "arguments": {
                "val": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/upload.py": {
        "upload.run": {
            "name": "run",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/upload_docs.py": {
        "_encode": {
            "name": "_encode",
            "location": 28,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "upload_docs.has_sphinx": {
            "name": "has_sphinx",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload_docs.initialize_options": {
            "name": "initialize_options",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload_docs.finalize_options": {
            "name": "finalize_options",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload_docs.create_zipfile": {
            "name": "create_zipfile",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "upload_docs.run": {
            "name": "run",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload_docs._build_part": {
            "name": "_build_part",
            "location": 115,
            "return": [],
            "arguments": {
                "item": [],
                "sep_boundary": []
            }
        },
        "upload_docs._build_multipart": {
            "name": "_build_multipart",
            "location": 135,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "upload_docs.upload_file": {
            "name": "upload_file",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/command/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/expand.py": {
        "glob_relative": {
            "name": "glob_relative",
            "location": 90,
            "return": [],
            "arguments": {
                "patterns": [],
                "root_dir": []
            }
        },
        "read_files": {
            "name": "read_files",
            "location": 121,
            "return": [],
            "arguments": {
                "filepaths": [],
                "root_dir": []
            }
        },
        "_filter_existing_files": {
            "name": "_filter_existing_files",
            "location": 139,
            "return": [],
            "arguments": {
                "filepaths": []
            }
        },
        "_read_file": {
            "name": "_read_file",
            "location": 147,
            "return": [],
            "arguments": {
                "filepath": []
            }
        },
        "_assert_local": {
            "name": "_assert_local",
            "location": 152,
            "return": [],
            "arguments": {
                "filepath": [],
                "root_dir": []
            }
        },
        "read_attr": {
            "name": "read_attr",
            "location": 160,
            "return": [],
            "arguments": {
                "attr_desc": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "_find_spec": {
            "name": "_find_spec",
            "location": 198,
            "return": [],
            "arguments": {
                "module_name": [],
                "module_path": []
            }
        },
        "_load_spec": {
            "name": "_load_spec",
            "location": 208,
            "return": [],
            "arguments": {
                "spec": [],
                "module_name": []
            }
        },
        "_find_module": {
            "name": "_find_module",
            "location": 218,
            "return": [],
            "arguments": {
                "module_name": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "resolve_class": {
            "name": "resolve_class",
            "location": 252,
            "return": [],
            "arguments": {
                "qualified_class_name": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "cmdclass": {
            "name": "cmdclass",
            "location": 268,
            "return": [],
            "arguments": {
                "values": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "find_packages": {
            "name": "find_packages",
            "location": 279,
            "return": [],
            "arguments": {}
        },
        "_nest_path": {
            "name": "_nest_path",
            "location": 333,
            "return": [],
            "arguments": {
                "parent": [],
                "path": []
            }
        },
        "version": {
            "name": "version",
            "location": 338,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "canonic_package_data": {
            "name": "canonic_package_data",
            "location": 356,
            "return": [],
            "arguments": {
                "package_data": []
            }
        },
        "canonic_data_files": {
            "name": "canonic_data_files",
            "location": 362,
            "return": [],
            "arguments": {
                "data_files": [],
                "root_dir": []
            }
        },
        "entry_points": {
            "name": "entry_points",
            "location": 379,
            "return": [],
            "arguments": {
                "text": [],
                "text_source": []
            }
        },
        "StaticModule.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "spec": []
            }
        },
        "StaticModule._find_assignments": {
            "name": "_find_assignments",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticModule.__getattr__": {
            "name": "__getattr__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "EnsurePackagesDiscovered.__init__": {
            "name": "__init__",
            "location": 404,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": []
            }
        },
        "EnsurePackagesDiscovered.__call__": {
            "name": "__call__",
            "location": 408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnsurePackagesDiscovered.__enter__": {
            "name": "__enter__",
            "location": 414,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnsurePackagesDiscovered.__exit__": {
            "name": "__exit__",
            "location": 417,
            "return": [],
            "arguments": {
                "self": [],
                "_exc_type": [],
                "_exc_value": [],
                "_traceback": []
            }
        },
        "EnsurePackagesDiscovered._get_package_dir": {
            "name": "_get_package_dir",
            "location": 421,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnsurePackagesDiscovered.package_dir": {
            "name": "package_dir",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyMappingProxy.__init__": {
            "name": "__init__",
            "location": 446,
            "return": [],
            "arguments": {
                "self": [],
                "obtain_mapping_value": []
            }
        },
        "LazyMappingProxy._target": {
            "name": "_target",
            "location": 450,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyMappingProxy.__getitem__": {
            "name": "__getitem__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LazyMappingProxy.__len__": {
            "name": "__len__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyMappingProxy.__iter__": {
            "name": "__iter__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/pyprojecttoml.py": {
        "load_file": {
            "name": "load_file",
            "location": 26,
            "return": [],
            "arguments": {
                "filepath": []
            }
        },
        "validate": {
            "name": "validate",
            "location": 33,
            "return": [],
            "arguments": {
                "config": [],
                "filepath": []
            }
        },
        "apply_configuration": {
            "name": "apply_configuration",
            "location": 54,
            "return": [],
            "arguments": {
                "dist": [],
                "filepath": [],
                "ignore_option_errors": []
            }
        },
        "read_configuration": {
            "name": "read_configuration",
            "location": 66,
            "return": [],
            "arguments": {
                "filepath": [],
                "expand": [],
                "ignore_option_errors": [],
                "dist": []
            }
        },
        "_skip_bad_config": {
            "name": "_skip_bad_config",
            "location": 145,
            "return": [],
            "arguments": {
                "project_cfg": [],
                "setuptools_cfg": [],
                "dist": []
            }
        },
        "expand_configuration": {
            "name": "expand_configuration",
            "location": 175,
            "return": [],
            "arguments": {
                "config": [],
                "root_dir": [],
                "ignore_option_errors": [],
                "dist": []
            }
        },
        "_parse_requirements_list": {
            "name": "_parse_requirements_list",
            "location": 410,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_ignore_errors": {
            "name": "_ignore_errors",
            "location": 419,
            "return": [],
            "arguments": {
                "ignore_option_errors": []
            }
        },
        "_ConfigExpander.__init__": {
            "name": "__init__",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "root_dir": [],
                "ignore_option_errors": [],
                "dist": []
            }
        },
        "_ConfigExpander._ensure_dist": {
            "name": "_ensure_dist",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConfigExpander._process_field": {
            "name": "_process_field",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "field": [],
                "fn": []
            }
        },
        "_ConfigExpander._canonic_package_data": {
            "name": "_canonic_package_data",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "_ConfigExpander.expand": {
            "name": "expand",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConfigExpander._expand_packages": {
            "name": "_expand_packages",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConfigExpander._expand_data_files": {
            "name": "_expand_data_files",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConfigExpander._expand_cmdclass": {
            "name": "_expand_cmdclass",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._expand_all_dynamic": {
            "name": "_expand_all_dynamic",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._ensure_previously_set": {
            "name": "_ensure_previously_set",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "field": []
            }
        },
        "_ConfigExpander._expand_directive": {
            "name": "_expand_directive",
            "location": 307,
            "return": [],
            "arguments": {
                "self": [],
                "specifier": [],
                "directive": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._obtain": {
            "name": "_obtain",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "field": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._obtain_version": {
            "name": "_obtain_version",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._obtain_readme": {
            "name": "_obtain_readme",
            "location": 335,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "_ConfigExpander._obtain_entry_points": {
            "name": "_obtain_entry_points",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "dist": [],
                "package_dir": []
            }
        },
        "_ConfigExpander._obtain_classifiers": {
            "name": "_obtain_classifiers",
            "location": 378,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "_ConfigExpander._obtain_dependencies": {
            "name": "_obtain_dependencies",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "_ConfigExpander._obtain_optional_dependencies": {
            "name": "_obtain_optional_dependencies",
            "location": 392,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "_EnsurePackagesDiscovered.__init__": {
            "name": "__init__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "distribution": [],
                "project_cfg": [],
                "setuptools_cfg": []
            }
        },
        "_EnsurePackagesDiscovered.__enter__": {
            "name": "__enter__",
            "location": 438,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_EnsurePackagesDiscovered.__exit__": {
            "name": "__exit__",
            "location": 460,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "_InvalidFile.message": {
            "name": "message",
            "location": 491,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_ConfigExpander._obtain_entry_points._set_scripts": {
            "name": "_set_scripts",
            "location": 363,
            "return": [],
            "arguments": {
                "field": [],
                "group": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/setupcfg.py": {
        "read_configuration": {
            "name": "read_configuration",
            "location": 40,
            "return": [],
            "arguments": {
                "filepath": [],
                "find_others": [],
                "ignore_option_errors": []
            }
        },
        "apply_configuration": {
            "name": "apply_configuration",
            "location": 68,
            "return": [],
            "arguments": {
                "dist": [],
                "filepath": []
            }
        },
        "_apply": {
            "name": "_apply",
            "location": 77,
            "return": [],
            "arguments": {
                "dist": [],
                "filepath": [],
                "other_files": [],
                "ignore_option_errors": []
            }
        },
        "_get_option": {
            "name": "_get_option",
            "location": 106,
            "return": [],
            "arguments": {
                "target_obj": [],
                "key": []
            }
        },
        "configuration_to_dict": {
            "name": "configuration_to_dict",
            "location": 118,
            "return": [],
            "arguments": {
                "handlers": []
            }
        },
        "parse_configuration": {
            "name": "parse_configuration",
            "location": 136,
            "return": [],
            "arguments": {
                "distribution": [],
                "command_options": [],
                "ignore_option_errors": []
            }
        },
        "_warn_accidental_env_marker_misconfig": {
            "name": "_warn_accidental_env_marker_misconfig",
            "location": 179,
            "return": [],
            "arguments": {
                "label": [],
                "orig_value": [],
                "parsed": []
            }
        },
        "ConfigHandler.__init__": {
            "name": "__init__",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "target_obj": [],
                "options": [],
                "ignore_option_errors": [],
                "ensure_discovered": []
            }
        },
        "ConfigHandler.parsers": {
            "name": "parsers",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigHandler.__setitem__": {
            "name": "__setitem__",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "option_name": [],
                "value": []
            }
        },
        "ConfigHandler._parse_list": {
            "name": "_parse_list",
            "location": 297,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [],
                "separator": []
            }
        },
        "ConfigHandler._parse_dict": {
            "name": "_parse_dict",
            "location": 317,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "ConfigHandler._parse_bool": {
            "name": "_parse_bool",
            "location": 336,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "ConfigHandler._exclude_files_parser": {
            "name": "_exclude_files_parser",
            "location": 346,
            "return": [],
            "arguments": {
                "cls": [],
                "key": []
            }
        },
        "ConfigHandler._parse_file": {
            "name": "_parse_file",
            "location": 369,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [],
                "root_dir": []
            }
        },
        "ConfigHandler._parse_attr": {
            "name": "_parse_attr",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "ConfigHandler._get_parser_compound": {
            "name": "_get_parser_compound",
            "location": 415,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ConfigHandler._parse_section_to_dict_with_key": {
            "name": "_parse_section_to_dict_with_key",
            "location": 435,
            "return": [],
            "arguments": {
                "cls": [],
                "section_options": [],
                "values_parser": []
            }
        },
        "ConfigHandler._parse_section_to_dict": {
            "name": "_parse_section_to_dict",
            "location": 450,
            "return": [],
            "arguments": {
                "cls": [],
                "section_options": [],
                "values_parser": []
            }
        },
        "ConfigHandler.parse_section": {
            "name": "parse_section",
            "location": 462,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigHandler.parse": {
            "name": "parse",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigHandler._deprecated_config_handler": {
            "name": "_deprecated_config_handler",
            "location": 498,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "msg": [],
                "warning_class": []
            }
        },
        "ConfigMetadataHandler.__init__": {
            "name": "__init__",
            "location": 531,
            "return": [],
            "arguments": {
                "self": [],
                "target_obj": [],
                "options": [],
                "ignore_option_errors": [],
                "ensure_discovered": [],
                "package_dir": [],
                "root_dir": []
            }
        },
        "ConfigMetadataHandler.parsers": {
            "name": "parsers",
            "location": 545,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigMetadataHandler._parse_version": {
            "name": "_parse_version",
            "location": 578,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ConfigOptionsHandler.__init__": {
            "name": "__init__",
            "location": 609,
            "return": [],
            "arguments": {
                "self": [],
                "target_obj": [],
                "options": [],
                "ignore_option_errors": [],
                "ensure_discovered": []
            }
        },
        "ConfigOptionsHandler._parse_list_semicolon": {
            "name": "_parse_list_semicolon",
            "location": 621,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "ConfigOptionsHandler._parse_file_in_root": {
            "name": "_parse_file_in_root",
            "location": 624,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ConfigOptionsHandler._parse_requirements_list": {
            "name": "_parse_requirements_list",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "value": []
            }
        },
        "ConfigOptionsHandler.parsers": {
            "name": "parsers",
            "location": 636,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOptionsHandler._parse_cmdclass": {
            "name": "_parse_cmdclass",
            "location": 668,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ConfigOptionsHandler._parse_packages": {
            "name": "_parse_packages",
            "location": 672,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ConfigOptionsHandler.parse_section_packages__find": {
            "name": "parse_section_packages__find",
            "location": 697,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler.parse_section_entry_points": {
            "name": "parse_section_entry_points",
            "location": 718,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler._parse_package_data": {
            "name": "_parse_package_data",
            "location": 726,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler.parse_section_package_data": {
            "name": "parse_section_package_data",
            "location": 730,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler.parse_section_exclude_package_data": {
            "name": "parse_section_exclude_package_data",
            "location": 737,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler.parse_section_extras_require": {
            "name": "parse_section_extras_require",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigOptionsHandler.parse_section_data_files": {
            "name": "parse_section_data_files",
            "location": 756,
            "return": [],
            "arguments": {
                "self": [],
                "section_options": []
            }
        },
        "ConfigHandler._exclude_files_parser.parser": {
            "name": "parser",
            "location": 357,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "ConfigHandler._get_parser_compound.parse": {
            "name": "parse",
            "location": 424,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "ConfigHandler._deprecated_config_handler.config_handler": {
            "name": "config_handler",
            "location": 507,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_apply_pyprojecttoml.py": {
        "apply": {
            "name": "apply",
            "location": 36,
            "return": [],
            "arguments": {
                "dist": [],
                "config": [],
                "filename": []
            }
        },
        "_apply_project_table": {
            "name": "_apply_project_table",
            "location": 58,
            "return": [],
            "arguments": {
                "dist": [],
                "config": [],
                "root_dir": []
            }
        },
        "_apply_tool_table": {
            "name": "_apply_tool_table",
            "location": 75,
            "return": [],
            "arguments": {
                "dist": [],
                "config": [],
                "filename": []
            }
        },
        "_handle_missing_dynamic": {
            "name": "_handle_missing_dynamic",
            "location": 94,
            "return": [],
            "arguments": {
                "dist": [],
                "project_table": []
            }
        },
        "json_compatible_key": {
            "name": "json_compatible_key",
            "location": 106,
            "return": [],
            "arguments": {
                "key": []
            }
        },
        "_set_config": {
            "name": "_set_config",
            "location": 111,
            "return": [],
            "arguments": {
                "dist": [],
                "field": [],
                "value": []
            }
        },
        "_guess_content_type": {
            "name": "_guess_content_type",
            "location": 128,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "_long_description": {
            "name": "_long_description",
            "location": 141,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "root_dir": []
            }
        },
        "_license": {
            "name": "_license",
            "location": 156,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "root_dir": []
            }
        },
        "_people": {
            "name": "_people",
            "location": 165,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "_root_dir": [],
                "kind": []
            }
        },
        "_project_urls": {
            "name": "_project_urls",
            "location": 183,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "_root_dir": []
            }
        },
        "_python_requires": {
            "name": "_python_requires",
            "location": 187,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "_root_dir": []
            }
        },
        "_dependencies": {
            "name": "_dependencies",
            "location": 193,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "_root_dir": []
            }
        },
        "_optional_dependencies": {
            "name": "_optional_dependencies",
            "location": 200,
            "return": [],
            "arguments": {
                "dist": [],
                "val": [],
                "_root_dir": []
            }
        },
        "_unify_entry_points": {
            "name": "_unify_entry_points",
            "location": 205,
            "return": [],
            "arguments": {
                "project_table": []
            }
        },
        "_copy_command_options": {
            "name": "_copy_command_options",
            "location": 221,
            "return": [],
            "arguments": {
                "pyproject": [],
                "dist": [],
                "filename": []
            }
        },
        "_valid_command_options": {
            "name": "_valid_command_options",
            "location": 240,
            "return": [],
            "arguments": {
                "cmdclass": []
            }
        },
        "_load_ep": {
            "name": "_load_ep",
            "location": 257,
            "return": [],
            "arguments": {
                "ep": []
            }
        },
        "_normalise_cmd_option_key": {
            "name": "_normalise_cmd_option_key",
            "location": 267,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_normalise_cmd_options": {
            "name": "_normalise_cmd_options",
            "location": 271,
            "return": [],
            "arguments": {
                "desc": []
            }
        },
        "_attrgetter": {
            "name": "_attrgetter",
            "location": 275,
            "return": [],
            "arguments": {
                "attr": []
            }
        },
        "_some_attrgetter": {
            "name": "_some_attrgetter",
            "location": 290,
            "return": [],
            "arguments": {}
        },
        "_some_attrgetter._acessor": {
            "name": "_acessor",
            "location": 302,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_WouldIgnoreField.message": {
            "name": "message",
            "location": 375,
            "return": [],
            "arguments": {
                "cls": [],
                "field": [],
                "value": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/__init__.py": {
        "_deprecation_notice": {
            "name": "_deprecation_notice",
            "location": 17,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_deprecation_notice._wrapper": {
            "name": "_wrapper",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/error_reporting.py": {
        "detailed_errors": {
            "name": "detailed_errors",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "_separate_terms": {
            "name": "_separate_terms",
            "location": 313,
            "return": [],
            "arguments": {
                "word": []
            }
        },
        "ValidationError._from_jsonschema": {
            "name": "_from_jsonschema",
            "location": 62,
            "return": [],
            "arguments": {
                "cls": [],
                "ex": []
            }
        },
        "_ErrorFormatting.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "ex": []
            }
        },
        "_ErrorFormatting.__str__": {
            "name": "__str__",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ErrorFormatting.summary": {
            "name": "summary",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ErrorFormatting.details": {
            "name": "details",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ErrorFormatting._simplify_name": {
            "name": "_simplify_name",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_ErrorFormatting._expand_summary": {
            "name": "_expand_summary",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ErrorFormatting._expand_details": {
            "name": "_expand_details",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SummaryWriter.__init__": {
            "name": "__init__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "jargon": []
            }
        },
        "_SummaryWriter._jargon": {
            "name": "_jargon",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "term": []
            }
        },
        "_SummaryWriter.__call__": {
            "name": "__call__",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "prefix": []
            }
        },
        "_SummaryWriter._is_unecessary": {
            "name": "_is_unecessary",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "_SummaryWriter._filter_unecessary": {
            "name": "_filter_unecessary",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "path": []
            }
        },
        "_SummaryWriter._handle_simple_dict": {
            "name": "_handle_simple_dict",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "path": []
            }
        },
        "_SummaryWriter._handle_list": {
            "name": "_handle_list",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "schemas": [],
                "prefix": [],
                "path": []
            }
        },
        "_SummaryWriter._is_property": {
            "name": "_is_property",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "_SummaryWriter._label": {
            "name": "_label",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "_SummaryWriter._value": {
            "name": "_value",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "path": []
            }
        },
        "_SummaryWriter._inline_attrs": {
            "name": "_inline_attrs",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "path": []
            }
        },
        "_SummaryWriter._child_prefix": {
            "name": "_child_prefix",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "parent_prefix": [],
                "child_prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/extra_validations.py": {
        "validate_project_dynamic": {
            "name": "validate_project_dynamic",
            "location": 21,
            "return": [],
            "arguments": {
                "pyproject": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/fastjsonschema_exceptions.py": {
        "JsonSchemaValueException.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "value": [],
                "name": [],
                "definition": [],
                "rule": []
            }
        },
        "JsonSchemaValueException.path": {
            "name": "path",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonSchemaValueException.rule_definition": {
            "name": "rule_definition",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/fastjsonschema_validations.py": {
        "validate": {
            "name": "validate",
            "location": 27,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___packaging_python_org_en_latest_specifications_declaring_build_dependencies": {
            "name": "validate_https___packaging_python_org_en_latest_specifications_declaring_build_dependencies",
            "location": 31,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___setuptools_pypa_io_en_latest_references_keywords_html": {
            "name": "validate_https___setuptools_pypa_io_en_latest_references_keywords_html",
            "location": 104,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_file_directive": {
            "name": "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_file_directive",
            "location": 520,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_attr_directive": {
            "name": "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_attr_directive",
            "location": 557,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_find_directive": {
            "name": "validate_https___setuptools_pypa_io_en_latest_references_keywords_html__definitions_find_directive",
            "location": 575,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___docs_python_org_3_install": {
            "name": "validate_https___docs_python_org_3_install",
            "location": 633,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata": {
            "name": "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata",
            "location": 652,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_dependency": {
            "name": "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_dependency",
            "location": 977,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_entry_point_group": {
            "name": "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_entry_point_group",
            "location": 985,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        },
        "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_author": {
            "name": "validate_https___packaging_python_org_en_latest_specifications_declaring_project_metadata___definitions_author",
            "location": 1016,
            "return": [],
            "arguments": {
                "data": [],
                "custom_formats": [],
                "name_prefix": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/formats.py": {
        "pep440": {
            "name": "pep440",
            "location": 47,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "pep508_identifier": {
            "name": "pep508_identifier",
            "location": 58,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "pep508_versionspec": {
            "name": "pep508_versionspec",
            "location": 87,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "pep517_backend_reference": {
            "name": "pep517_backend_reference",
            "location": 103,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_download_classifiers": {
            "name": "_download_classifiers",
            "location": 113,
            "return": [],
            "arguments": {}
        },
        "url": {
            "name": "url",
            "location": 188,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_identifier": {
            "name": "python_identifier",
            "location": 216,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_qualified_identifier": {
            "name": "python_qualified_identifier",
            "location": 220,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_module_name": {
            "name": "python_module_name",
            "location": 226,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_entrypoint_group": {
            "name": "python_entrypoint_group",
            "location": 230,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_entrypoint_name": {
            "name": "python_entrypoint_name",
            "location": 234,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "python_entrypoint_reference": {
            "name": "python_entrypoint_reference",
            "location": 244,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "pep508": {
            "name": "pep508",
            "location": 83,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_TroveClassifier.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TroveClassifier._disable_download": {
            "name": "_disable_download",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TroveClassifier.__call__": {
            "name": "__call__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "trove_classifier": {
            "name": "trove_classifier",
            "location": 177,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/config/_validate_pyproject/__init__.py": {
        "validate": {
            "name": "validate",
            "location": 27,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/extern/__init__.py": {
        "VendorImporter.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "root_name": [],
                "vendored_names": [],
                "vendor_pkg": []
            }
        },
        "VendorImporter.search_path": {
            "name": "search_path",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VendorImporter._module_matches_namespace": {
            "name": "_module_matches_namespace",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "VendorImporter.load_module": {
            "name": "load_module",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "VendorImporter.create_module": {
            "name": "create_module",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "VendorImporter.exec_module": {
            "name": "exec_module",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "VendorImporter.find_spec": {
            "name": "find_spec",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        },
        "VendorImporter.install": {
            "name": "install",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/archive_util.py": {
        "_get_gid": {
            "name": "_get_gid",
            "location": 32,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_get_uid": {
            "name": "_get_uid",
            "location": 45,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "make_tarball": {
            "name": "make_tarball",
            "location": 58,
            "return": [],
            "arguments": {
                "base_name": [],
                "base_dir": [],
                "compress": [],
                "verbose": [],
                "dry_run": [],
                "owner": [],
                "group": []
            }
        },
        "make_zipfile": {
            "name": "make_zipfile",
            "location": 137,
            "return": [],
            "arguments": {
                "base_name": [],
                "base_dir": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "check_archive_formats": {
            "name": "check_archive_formats",
            "location": 211,
            "return": [],
            "arguments": {
                "formats": []
            }
        },
        "make_archive": {
            "name": "make_archive",
            "location": 222,
            "return": [],
            "arguments": {
                "base_name": [],
                "format": [],
                "root_dir": [],
                "base_dir": [],
                "verbose": [],
                "dry_run": [],
                "owner": [],
                "group": []
            }
        },
        "make_tarball._set_uid_gid": {
            "name": "_set_uid_gid",
            "location": 106,
            "return": [],
            "arguments": {
                "tarinfo": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/bcppcompiler.py": {
        "BCPPCompiler.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "BCPPCompiler.compile": {
            "name": "compile",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "depends": []
            }
        },
        "BCPPCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "BCPPCompiler.link": {
            "name": "link",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "BCPPCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        },
        "BCPPCompiler.object_filenames": {
            "name": "object_filenames",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "source_filenames": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "BCPPCompiler.preprocess": {
            "name": "preprocess",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "output_file": [],
                "macros": [],
                "include_dirs": [],
                "extra_preargs": [],
                "extra_postargs": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/ccompiler.py": {
        "get_default_compiler": {
            "name": "get_default_compiler",
            "location": 1031,
            "return": [],
            "arguments": {
                "osname": [],
                "platform": []
            }
        },
        "show_compilers": {
            "name": "show_compilers",
            "location": 1075,
            "return": [],
            "arguments": {}
        },
        "new_compiler": {
            "name": "new_compiler",
            "location": 1092,
            "return": [],
            "arguments": {
                "plat": [],
                "compiler": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "gen_preprocess_options": {
            "name": "gen_preprocess_options",
            "location": 1138,
            "return": [],
            "arguments": {
                "macros": [],
                "include_dirs": []
            }
        },
        "gen_lib_options": {
            "name": "gen_lib_options",
            "location": 1183,
            "return": [],
            "arguments": {
                "compiler": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "libraries": []
            }
        },
        "CCompiler.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "CCompiler.set_executables": {
            "name": "set_executables",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCompiler.set_executable": {
            "name": "set_executable",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CCompiler._find_macro": {
            "name": "_find_macro",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CCompiler._check_macro_definitions": {
            "name": "_check_macro_definitions",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "definitions": []
            }
        },
        "CCompiler.define_macro": {
            "name": "define_macro",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "CCompiler.undefine_macro": {
            "name": "undefine_macro",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CCompiler.add_include_dir": {
            "name": "add_include_dir",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CCompiler.set_include_dirs": {
            "name": "set_include_dirs",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": []
            }
        },
        "CCompiler.add_library": {
            "name": "add_library",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "libname": []
            }
        },
        "CCompiler.set_libraries": {
            "name": "set_libraries",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "libnames": []
            }
        },
        "CCompiler.add_library_dir": {
            "name": "add_library_dir",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CCompiler.set_library_dirs": {
            "name": "set_library_dirs",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": []
            }
        },
        "CCompiler.add_runtime_library_dir": {
            "name": "add_runtime_library_dir",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CCompiler.set_runtime_library_dirs": {
            "name": "set_runtime_library_dirs",
            "location": 307,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": []
            }
        },
        "CCompiler.add_link_object": {
            "name": "add_link_object",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "CCompiler.set_link_objects": {
            "name": "set_link_objects",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "objects": []
            }
        },
        "CCompiler._setup_compile": {
            "name": "_setup_compile",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "outdir": [],
                "macros": [],
                "incdirs": [],
                "sources": [],
                "depends": [],
                "extra": []
            }
        },
        "CCompiler._get_cc_args": {
            "name": "_get_cc_args",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "pp_opts": [],
                "debug": [],
                "before": []
            }
        },
        "CCompiler._fix_compile_args": {
            "name": "_fix_compile_args",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": []
            }
        },
        "CCompiler._prep_compile": {
            "name": "_prep_compile",
            "location": 402,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "depends": []
            }
        },
        "CCompiler._fix_object_args": {
            "name": "_fix_object_args",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_dir": []
            }
        },
        "CCompiler._fix_lib_args": {
            "name": "_fix_lib_args",
            "location": 435,
            "return": [],
            "arguments": {
                "self": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": []
            }
        },
        "CCompiler._need_link": {
            "name": "_need_link",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_file": []
            }
        },
        "CCompiler.detect_language": {
            "name": "detect_language",
            "location": 485,
            "return": [],
            "arguments": {
                "self": [],
                "sources": []
            }
        },
        "CCompiler.preprocess": {
            "name": "preprocess",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "output_file": [],
                "macros": [],
                "include_dirs": [],
                "extra_preargs": [],
                "extra_postargs": []
            }
        },
        "CCompiler.compile": {
            "name": "compile",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "depends": []
            }
        },
        "CCompiler._compile": {
            "name": "_compile",
            "location": 604,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "src": [],
                "ext": [],
                "cc_args": [],
                "extra_postargs": [],
                "pp_opts": []
            }
        },
        "CCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 610,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "CCompiler.link": {
            "name": "link",
            "location": 642,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "CCompiler.link_shared_lib": {
            "name": "link_shared_lib",
            "location": 705,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "CCompiler.link_shared_object": {
            "name": "link_shared_object",
            "location": 736,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "CCompiler.link_executable": {
            "name": "link_executable",
            "location": 767,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_progname": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "target_lang": []
            }
        },
        "CCompiler.library_dir_option": {
            "name": "library_dir_option",
            "location": 801,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 807,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CCompiler.library_option": {
            "name": "library_option",
            "location": 813,
            "return": [],
            "arguments": {
                "self": [],
                "lib": []
            }
        },
        "CCompiler.has_function": {
            "name": "has_function",
            "location": 819,
            "return": [],
            "arguments": {
                "self": [],
                "funcname": [],
                "includes": [],
                "include_dirs": [],
                "libraries": [],
                "library_dirs": []
            }
        },
        "CCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 880,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        },
        "CCompiler.object_filenames": {
            "name": "object_filenames",
            "location": 923,
            "return": [],
            "arguments": {
                "self": [],
                "source_filenames": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "CCompiler.out_extensions": {
            "name": "out_extensions",
            "location": 932,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCompiler._make_out_path": {
            "name": "_make_out_path",
            "location": 935,
            "return": [],
            "arguments": {
                "self": [],
                "output_dir": [],
                "strip_dir": [],
                "src_name": []
            }
        },
        "CCompiler._make_relative": {
            "name": "_make_relative",
            "location": 949,
            "return": [],
            "arguments": {
                "base": []
            }
        },
        "CCompiler.shared_object_filename": {
            "name": "shared_object_filename",
            "location": 960,
            "return": [],
            "arguments": {
                "self": [],
                "basename": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "CCompiler.executable_filename": {
            "name": "executable_filename",
            "location": 966,
            "return": [],
            "arguments": {
                "self": [],
                "basename": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "CCompiler.library_filename": {
            "name": "library_filename",
            "location": 972,
            "return": [],
            "arguments": {
                "self": [],
                "libname": [],
                "lib_type": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "CCompiler.announce": {
            "name": "announce",
            "location": 991,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "level": []
            }
        },
        "CCompiler.debug_print": {
            "name": "debug_print",
            "location": 994,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "CCompiler.warn": {
            "name": "warn",
            "location": 1000,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "CCompiler.execute": {
            "name": "execute",
            "location": 1003,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "args": [],
                "msg": [],
                "level": []
            }
        },
        "CCompiler.spawn": {
            "name": "spawn",
            "location": 1006,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "CCompiler.move_file": {
            "name": "move_file",
            "location": 1009,
            "return": [],
            "arguments": {
                "self": [],
                "src": [],
                "dst": []
            }
        },
        "CCompiler.mkpath": {
            "name": "mkpath",
            "location": 1012,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "mode": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/cmd.py": {
        "Command.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "Command.__getattr__": {
            "name": "__getattr__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Command.ensure_finalized": {
            "name": "ensure_finalized",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.initialize_options": {
            "name": "initialize_options",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.finalize_options": {
            "name": "finalize_options",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.dump_options": {
            "name": "dump_options",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "indent": []
            }
        },
        "Command.run": {
            "name": "run",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.announce": {
            "name": "announce",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "level": []
            }
        },
        "Command.debug_print": {
            "name": "debug_print",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Command._ensure_stringlike": {
            "name": "_ensure_stringlike",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "what": [],
                "default": []
            }
        },
        "Command.ensure_string": {
            "name": "ensure_string",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "default": []
            }
        },
        "Command.ensure_string_list": {
            "name": "ensure_string_list",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "Command._ensure_tested_string": {
            "name": "_ensure_tested_string",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "option": [],
                "tester": [],
                "what": [],
                "error_fmt": [],
                "default": []
            }
        },
        "Command.ensure_filename": {
            "name": "ensure_filename",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "Command.ensure_dirname": {
            "name": "ensure_dirname",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        },
        "Command.get_command_name": {
            "name": "get_command_name",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.set_undefined_options": {
            "name": "set_undefined_options",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "src_cmd": []
            }
        },
        "Command.get_finalized_command": {
            "name": "get_finalized_command",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "create": []
            }
        },
        "Command.reinitialize_command": {
            "name": "reinitialize_command",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "reinit_subcommands": []
            }
        },
        "Command.run_command": {
            "name": "run_command",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Command.get_sub_commands": {
            "name": "get_sub_commands",
            "location": 321,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.warn": {
            "name": "warn",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Command.execute": {
            "name": "execute",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "args": [],
                "msg": [],
                "level": []
            }
        },
        "Command.mkpath": {
            "name": "mkpath",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "mode": []
            }
        },
        "Command.copy_file": {
            "name": "copy_file",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": [],
                "preserve_mode": [],
                "preserve_times": [],
                "link": [],
                "level": []
            }
        },
        "Command.copy_tree": {
            "name": "copy_tree",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": [],
                "preserve_mode": [],
                "preserve_times": [],
                "preserve_symlinks": [],
                "level": []
            }
        },
        "Command.move_file": {
            "name": "move_file",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "src": [],
                "dst": [],
                "level": []
            }
        },
        "Command.spawn": {
            "name": "spawn",
            "location": 387,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "search_path": [],
                "level": []
            }
        },
        "Command.make_archive": {
            "name": "make_archive",
            "location": 393,
            "return": [],
            "arguments": {
                "self": [],
                "base_name": [],
                "format": [],
                "root_dir": [],
                "base_dir": [],
                "owner": [],
                "group": []
            }
        },
        "Command.make_file": {
            "name": "make_file",
            "location": 406,
            "return": [],
            "arguments": {
                "self": [],
                "infiles": [],
                "outfile": [],
                "func": [],
                "args": [],
                "exec_msg": [],
                "skip_msg": [],
                "level": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/config.py": {
        "PyPIRCCommand._get_rc_file": {
            "name": "_get_rc_file",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIRCCommand._store_pypirc": {
            "name": "_store_pypirc",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "PyPIRCCommand._read_pypirc": {
            "name": "_read_pypirc",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIRCCommand._read_pypi_response": {
            "name": "_read_pypi_response",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "PyPIRCCommand.initialize_options": {
            "name": "initialize_options",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyPIRCCommand.finalize_options": {
            "name": "finalize_options",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/core.py": {
        "gen_usage": {
            "name": "gen_usage",
            "location": 42,
            "return": [],
            "arguments": {
                "script_name": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "run_commands": {
            "name": "run_commands",
            "location": 193,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "run_setup": {
            "name": "run_setup",
            "location": 220,
            "return": [],
            "arguments": {
                "script_name": [],
                "script_args": [],
                "stop_after": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/cygwinccompiler.py": {
        "get_msvcr": {
            "name": "get_msvcr",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "check_config_h": {
            "name": "check_config_h",
            "location": 307,
            "return": [],
            "arguments": {}
        },
        "is_cygwincc": {
            "name": "is_cygwincc",
            "location": 354,
            "return": [],
            "arguments": {
                "cc": []
            }
        },
        "CygwinCCompiler.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "CygwinCCompiler.gcc_version": {
            "name": "gcc_version",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CygwinCCompiler._compile": {
            "name": "_compile",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "src": [],
                "ext": [],
                "cc_args": [],
                "extra_postargs": [],
                "pp_opts": []
            }
        },
        "CygwinCCompiler.link": {
            "name": "link",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "CygwinCCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "CygwinCCompiler._make_out_path": {
            "name": "_make_out_path",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "output_dir": [],
                "strip_dir": [],
                "src_name": []
            }
        },
        "CygwinCCompiler.out_extensions": {
            "name": "out_extensions",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mingw32CCompiler.__init__": {
            "name": "__init__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "Mingw32CCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/debug.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/dep_util.py": {
        "newer": {
            "name": "newer",
            "location": 11,
            "return": [],
            "arguments": {
                "source": [],
                "target": []
            }
        },
        "newer_pairwise": {
            "name": "newer_pairwise",
            "location": 33,
            "return": [],
            "arguments": {
                "sources": [],
                "targets": []
            }
        },
        "newer_group": {
            "name": "newer_group",
            "location": 56,
            "return": [],
            "arguments": {
                "sources": [],
                "target": [],
                "missing": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/dir_util.py": {
        "mkpath": {
            "name": "mkpath",
            "location": 15,
            "return": [],
            "arguments": {
                "name": [],
                "mode": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "create_tree": {
            "name": "create_tree",
            "location": 87,
            "return": [],
            "arguments": {
                "base_dir": [],
                "files": [],
                "mode": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "copy_tree": {
            "name": "copy_tree",
            "location": 107,
            "return": [],
            "arguments": {
                "src": [],
                "dst": [],
                "preserve_mode": [],
                "preserve_times": [],
                "preserve_symlinks": [],
                "update": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "_build_cmdtuple": {
            "name": "_build_cmdtuple",
            "location": 199,
            "return": [],
            "arguments": {
                "path": [],
                "cmdtuples": []
            }
        },
        "remove_tree": {
            "name": "remove_tree",
            "location": 210,
            "return": [],
            "arguments": {
                "directory": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "ensure_relative": {
            "name": "ensure_relative",
            "location": 235,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/dist.py": {
        "_ensure_list": {
            "name": "_ensure_list",
            "location": 37,
            "return": [],
            "arguments": {
                "value": [],
                "fieldname": []
            }
        },
        "fix_help_options": {
            "name": "fix_help_options",
            "location": 1279,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "Distribution.get_option_dict": {
            "name": "get_option_dict",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Distribution.dump_option_dicts": {
            "name": "dump_option_dicts",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "commands": [],
                "indent": []
            }
        },
        "Distribution.find_config_files": {
            "name": "find_config_files",
            "location": 321,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._gen_paths": {
            "name": "_gen_paths",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.parse_config_files": {
            "name": "parse_config_files",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "filenames": []
            }
        },
        "Distribution.parse_command_line": {
            "name": "parse_command_line",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._get_toplevel_options": {
            "name": "_get_toplevel_options",
            "location": 497,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._parse_command_opts": {
            "name": "_parse_command_opts",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "args": []
            }
        },
        "Distribution.finalize_options": {
            "name": "finalize_options",
            "location": 610,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._show_help": {
            "name": "_show_help",
            "location": 623,
            "return": [],
            "arguments": {
                "self": [],
                "parser": [],
                "global_options": [],
                "display_options": [],
                "commands": []
            }
        },
        "Distribution.handle_display_options": {
            "name": "handle_display_options",
            "location": 673,
            "return": [],
            "arguments": {
                "self": [],
                "option_order": []
            }
        },
        "Distribution.print_command_list": {
            "name": "print_command_list",
            "location": 712,
            "return": [],
            "arguments": {
                "self": [],
                "commands": [],
                "header": [],
                "max_length": []
            }
        },
        "Distribution.print_commands": {
            "name": "print_commands",
            "location": 729,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.get_command_list": {
            "name": "get_command_list",
            "location": 759,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.get_command_packages": {
            "name": "get_command_packages",
            "location": 794,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.get_command_class": {
            "name": "get_command_class",
            "location": 806,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Distribution.get_command_obj": {
            "name": "get_command_obj",
            "location": 845,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "create": []
            }
        },
        "Distribution._set_command_options": {
            "name": "_set_command_options",
            "location": 874,
            "return": [],
            "arguments": {
                "self": [],
                "command_obj": [],
                "option_dict": []
            }
        },
        "Distribution.reinitialize_command": {
            "name": "reinitialize_command",
            "location": 917,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "reinit_subcommands": []
            }
        },
        "Distribution.announce": {
            "name": "announce",
            "location": 959,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "level": []
            }
        },
        "Distribution.run_commands": {
            "name": "run_commands",
            "location": 962,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.run_command": {
            "name": "run_command",
            "location": 972,
            "return": [],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Distribution.has_pure_modules": {
            "name": "has_pure_modules",
            "location": 992,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_ext_modules": {
            "name": "has_ext_modules",
            "location": 995,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_c_libraries": {
            "name": "has_c_libraries",
            "location": 998,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_modules": {
            "name": "has_modules",
            "location": 1001,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_headers": {
            "name": "has_headers",
            "location": 1004,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_scripts": {
            "name": "has_scripts",
            "location": 1007,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.has_data_files": {
            "name": "has_data_files",
            "location": 1010,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.is_pure": {
            "name": "is_pure",
            "location": 1013,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.__init__": {
            "name": "__init__",
            "location": 1057,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DistributionMetadata.read_pkg_file": {
            "name": "read_pkg_file",
            "location": 1080,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "DistributionMetadata.write_pkg_info": {
            "name": "write_pkg_info",
            "location": 1131,
            "return": [],
            "arguments": {
                "self": [],
                "base_dir": []
            }
        },
        "DistributionMetadata.write_pkg_file": {
            "name": "write_pkg_file",
            "location": 1138,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "DistributionMetadata._write_list": {
            "name": "_write_list",
            "location": 1177,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "name": [],
                "values": []
            }
        },
        "DistributionMetadata.get_name": {
            "name": "get_name",
            "location": 1184,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_version": {
            "name": "get_version",
            "location": 1187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_fullname": {
            "name": "get_fullname",
            "location": 1190,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_author": {
            "name": "get_author",
            "location": 1193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_author_email": {
            "name": "get_author_email",
            "location": 1196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_maintainer": {
            "name": "get_maintainer",
            "location": 1199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_maintainer_email": {
            "name": "get_maintainer_email",
            "location": 1202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_contact": {
            "name": "get_contact",
            "location": 1205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_contact_email": {
            "name": "get_contact_email",
            "location": 1208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_url": {
            "name": "get_url",
            "location": 1211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_license": {
            "name": "get_license",
            "location": 1214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_description": {
            "name": "get_description",
            "location": 1219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_long_description": {
            "name": "get_long_description",
            "location": 1222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_keywords": {
            "name": "get_keywords",
            "location": 1225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_keywords": {
            "name": "set_keywords",
            "location": 1228,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.get_platforms": {
            "name": "get_platforms",
            "location": 1231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_platforms": {
            "name": "set_platforms",
            "location": 1234,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.get_classifiers": {
            "name": "get_classifiers",
            "location": 1237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_classifiers": {
            "name": "set_classifiers",
            "location": 1240,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.get_download_url": {
            "name": "get_download_url",
            "location": 1243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.get_requires": {
            "name": "get_requires",
            "location": 1247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_requires": {
            "name": "set_requires",
            "location": 1250,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.get_provides": {
            "name": "get_provides",
            "location": 1257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_provides": {
            "name": "set_provides",
            "location": 1260,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.get_obsoletes": {
            "name": "get_obsoletes",
            "location": 1268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionMetadata.set_obsoletes": {
            "name": "set_obsoletes",
            "location": 1271,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DistributionMetadata.read_pkg_file._read_field": {
            "name": "_read_field",
            "location": 1084,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "DistributionMetadata.read_pkg_file._read_list": {
            "name": "_read_list",
            "location": 1089,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "DistributionMetadata.write_pkg_file.maybe_write": {
            "name": "maybe_write",
            "location": 1155,
            "return": [],
            "arguments": {
                "header": [],
                "val": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/errors.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/extension.py": {
        "read_setup_file": {
            "name": "read_setup_file",
            "location": 145,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "Extension.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "sources": [],
                "include_dirs": [],
                "define_macros": [],
                "undef_macros": [],
                "library_dirs": [],
                "libraries": [],
                "runtime_library_dirs": [],
                "extra_objects": [],
                "extra_compile_args": [],
                "extra_link_args": [],
                "export_symbols": [],
                "swig_opts": [],
                "depends": [],
                "language": [],
                "optional": []
            }
        },
        "Extension.__repr__": {
            "name": "__repr__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/fancy_getopt.py": {
        "fancy_getopt": {
            "name": "fancy_getopt",
            "location": 379,
            "return": [],
            "arguments": {
                "options": [],
                "negative_opt": [],
                "object": [],
                "args": []
            }
        },
        "wrap_text": {
            "name": "wrap_text",
            "location": 388,
            "return": [],
            "arguments": {
                "text": [],
                "width": []
            }
        },
        "translate_longopt": {
            "name": "translate_longopt",
            "location": 442,
            "return": [],
            "arguments": {
                "opt": []
            }
        },
        "FancyGetopt.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "option_table": []
            }
        },
        "FancyGetopt._build_index": {
            "name": "_build_index",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FancyGetopt.set_option_table": {
            "name": "set_option_table",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "option_table": []
            }
        },
        "FancyGetopt.add_option": {
            "name": "add_option",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "long_option": [],
                "short_option": [],
                "help_string": []
            }
        },
        "FancyGetopt.has_option": {
            "name": "has_option",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "long_option": []
            }
        },
        "FancyGetopt.get_attr_name": {
            "name": "get_attr_name",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "long_option": []
            }
        },
        "FancyGetopt._check_alias_dict": {
            "name": "_check_alias_dict",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "aliases": [],
                "what": []
            }
        },
        "FancyGetopt.set_aliases": {
            "name": "set_aliases",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "FancyGetopt.set_negative_aliases": {
            "name": "set_negative_aliases",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "negative_alias": []
            }
        },
        "FancyGetopt._grok_option_table": {
            "name": "_grok_option_table",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FancyGetopt.getopt": {
            "name": "getopt",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "object": []
            }
        },
        "FancyGetopt.get_option_order": {
            "name": "get_option_order",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FancyGetopt.generate_help": {
            "name": "generate_help",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "header": []
            }
        },
        "FancyGetopt.print_help": {
            "name": "print_help",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "file": []
            }
        },
        "OptionDummy.__init__": {
            "name": "__init__",
            "location": 453,
            "return": [],
            "arguments": {
                "self": [],
                "options": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/filelist.py": {
        "_find_all_simple": {
            "name": "_find_all_simple",
            "location": 264,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "findall": {
            "name": "findall",
            "location": 302,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "glob_to_re": {
            "name": "glob_to_re",
            "location": 314,
            "return": [],
            "arguments": {
                "pattern": []
            }
        },
        "translate_pattern": {
            "name": "translate_pattern",
            "location": 337,
            "return": [],
            "arguments": {
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "FileList.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "warn": [],
                "debug_print": []
            }
        },
        "FileList.set_allfiles": {
            "name": "set_allfiles",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "allfiles": []
            }
        },
        "FileList.findall": {
            "name": "findall",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "FileList.debug_print": {
            "name": "debug_print",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "FileList.append": {
            "name": "append",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "FileList.extend": {
            "name": "extend",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "FileList.sort": {
            "name": "sort",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileList.remove_duplicates": {
            "name": "remove_duplicates",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileList._parse_template_line": {
            "name": "_parse_template_line",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "FileList.process_template_line": {
            "name": "process_template_line",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "FileList.include_pattern": {
            "name": "include_pattern",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "FileList.exclude_pattern": {
            "name": "exclude_pattern",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "anchor": [],
                "prefix": [],
                "is_regex": []
            }
        },
        "_UniqueDirs.__call__": {
            "name": "__call__",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "walk_item": []
            }
        },
        "_UniqueDirs.filter": {
            "name": "filter",
            "location": 298,
            "return": [],
            "arguments": {
                "cls": [],
                "items": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/file_util.py": {
        "_copy_file_contents": {
            "name": "_copy_file_contents",
            "location": 14,
            "return": [],
            "arguments": {
                "src": [],
                "dst": [],
                "buffer_size": []
            }
        },
        "copy_file": {
            "name": "copy_file",
            "location": 70,
            "return": [],
            "arguments": {
                "src": [],
                "dst": [],
                "preserve_mode": [],
                "preserve_times": [],
                "update": [],
                "link": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "move_file": {
            "name": "move_file",
            "location": 178,
            "return": [],
            "arguments": {
                "src": [],
                "dst": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "write_file": {
            "name": "write_file",
            "location": 240,
            "return": [],
            "arguments": {
                "filename": [],
                "contents": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/log.py": {
        "set_threshold": {
            "name": "set_threshold",
            "location": 67,
            "return": [],
            "arguments": {
                "level": []
            }
        },
        "set_verbosity": {
            "name": "set_verbosity",
            "location": 74,
            "return": [],
            "arguments": {
                "v": []
            }
        },
        "Log.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "threshold": []
            }
        },
        "Log._log": {
            "name": "_log",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "level": [],
                "msg": [],
                "args": []
            }
        },
        "Log.log": {
            "name": "log",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "level": [],
                "msg": []
            }
        },
        "Log.debug": {
            "name": "debug",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Log.info": {
            "name": "info",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Log.warn": {
            "name": "warn",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Log.error": {
            "name": "error",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Log.fatal": {
            "name": "fatal",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/msvc9compiler.py": {
        "get_build_version": {
            "name": "get_build_version",
            "location": 187,
            "return": [],
            "arguments": {}
        },
        "normalize_and_reduce_paths": {
            "name": "normalize_and_reduce_paths",
            "location": 213,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "removeDuplicates": {
            "name": "removeDuplicates",
            "location": 228,
            "return": [],
            "arguments": {
                "variable": []
            }
        },
        "find_vcvarsall": {
            "name": "find_vcvarsall",
            "location": 239,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "query_vcvarsall": {
            "name": "query_vcvarsall",
            "location": 274,
            "return": [],
            "arguments": {
                "version": [],
                "arch": []
            }
        },
        "Reg.get_value": {
            "name": "get_value",
            "location": 78,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "key": []
            }
        },
        "Reg.read_keys": {
            "name": "read_keys",
            "location": 87,
            "return": [],
            "arguments": {
                "cls": [],
                "base": [],
                "key": []
            }
        },
        "Reg.read_values": {
            "name": "read_values",
            "location": 106,
            "return": [],
            "arguments": {
                "cls": [],
                "base": [],
                "key": []
            }
        },
        "Reg.convert_mbcs": {
            "name": "convert_mbcs",
            "location": 129,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "MacroExpander.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "MacroExpander.set_macro": {
            "name": "set_macro",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "macro": [],
                "path": [],
                "key": []
            }
        },
        "MacroExpander.load_macros": {
            "name": "load_macros",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "MacroExpander.sub": {
            "name": "sub",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "MSVCCompiler.__init__": {
            "name": "__init__",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "MSVCCompiler.initialize": {
            "name": "initialize",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "plat_name": []
            }
        },
        "MSVCCompiler.object_filenames": {
            "name": "object_filenames",
            "location": 466,
            "return": [],
            "arguments": {
                "self": [],
                "source_filenames": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "MSVCCompiler.compile": {
            "name": "compile",
            "location": 491,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "depends": []
            }
        },
        "MSVCCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 586,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.link": {
            "name": "link",
            "location": 606,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.manifest_setup_ldargs": {
            "name": "manifest_setup_ldargs",
            "location": 701,
            "return": [],
            "arguments": {
                "self": [],
                "output_filename": [],
                "build_temp": [],
                "ld_args": []
            }
        },
        "MSVCCompiler.manifest_get_embed_info": {
            "name": "manifest_get_embed_info",
            "location": 713,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "ld_args": []
            }
        },
        "MSVCCompiler._remove_visual_c_ref": {
            "name": "_remove_visual_c_ref",
            "location": 737,
            "return": [],
            "arguments": {
                "self": [],
                "manifest_file": []
            }
        },
        "MSVCCompiler.library_dir_option": {
            "name": "library_dir_option",
            "location": 783,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 786,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.library_option": {
            "name": "library_option",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "lib": []
            }
        },
        "MSVCCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 794,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        },
        "MSVCCompiler.find_exe": {
            "name": "find_exe",
            "location": 812,
            "return": [],
            "arguments": {
                "self": [],
                "exe": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/msvccompiler.py": {
        "read_keys": {
            "name": "read_keys",
            "location": 74,
            "return": [],
            "arguments": {
                "base": [],
                "key": []
            }
        },
        "read_values": {
            "name": "read_values",
            "location": 92,
            "return": [],
            "arguments": {
                "base": [],
                "key": []
            }
        },
        "convert_mbcs": {
            "name": "convert_mbcs",
            "location": 114,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "get_build_version": {
            "name": "get_build_version",
            "location": 171,
            "return": [],
            "arguments": {}
        },
        "get_build_architecture": {
            "name": "get_build_architecture",
            "location": 197,
            "return": [],
            "arguments": {}
        },
        "normalize_and_reduce_paths": {
            "name": "normalize_and_reduce_paths",
            "location": 211,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "MacroExpander.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "MacroExpander.set_macro": {
            "name": "set_macro",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "macro": [],
                "path": [],
                "key": []
            }
        },
        "MacroExpander.load_macros": {
            "name": "load_macros",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "MacroExpander.sub": {
            "name": "sub",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "MSVCCompiler.__init__": {
            "name": "__init__",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "MSVCCompiler.initialize": {
            "name": "initialize",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MSVCCompiler.object_filenames": {
            "name": "object_filenames",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "source_filenames": [],
                "strip_dir": [],
                "output_dir": []
            }
        },
        "MSVCCompiler.compile": {
            "name": "compile",
            "location": 381,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "depends": []
            }
        },
        "MSVCCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.link": {
            "name": "link",
            "location": 496,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.library_dir_option": {
            "name": "library_dir_option",
            "location": 581,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 584,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.library_option": {
            "name": "library_option",
            "location": 589,
            "return": [],
            "arguments": {
                "self": [],
                "lib": []
            }
        },
        "MSVCCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 592,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        },
        "MSVCCompiler.find_exe": {
            "name": "find_exe",
            "location": 610,
            "return": [],
            "arguments": {
                "self": [],
                "exe": []
            }
        },
        "MSVCCompiler.get_msvc_paths": {
            "name": "get_msvc_paths",
            "location": 632,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "platform": []
            }
        },
        "MSVCCompiler.set_path_env_var": {
            "name": "set_path_env_var",
            "location": 674,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/py38compat.py": {
        "aix_platform": {
            "name": "aix_platform",
            "location": 1,
            "return": [],
            "arguments": {
                "osname": [],
                "version": [],
                "release": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/py39compat.py": {
        "add_ext_suffix_39": {
            "name": "add_ext_suffix_39",
            "location": 5,
            "return": [],
            "arguments": {
                "vars": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/spawn.py": {
        "spawn": {
            "name": "spawn",
            "location": 18,
            "return": [],
            "arguments": {
                "cmd": [],
                "search_path": [],
                "verbose": [],
                "dry_run": [],
                "env": []
            }
        },
        "find_executable": {
            "name": "find_executable",
            "location": 75,
            "return": [],
            "arguments": {
                "executable": [],
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/sysconfig.py": {
        "_is_python_source_dir": {
            "name": "_is_python_source_dir",
            "location": 44,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "_is_parent": {
            "name": "_is_parent",
            "location": 56,
            "return": [],
            "arguments": {
                "dir_a": [],
                "dir_b": []
            }
        },
        "_python_build": {
            "name": "_python_build",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "get_python_version": {
            "name": "get_python_version",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "get_python_inc": {
            "name": "get_python_inc",
            "location": 110,
            "return": [],
            "arguments": {
                "plat_specific": [],
                "prefix": []
            }
        },
        "_get_python_inc_posix": {
            "name": "_get_python_inc_posix",
            "location": 133,
            "return": [],
            "arguments": {
                "prefix": [],
                "spec_prefix": [],
                "plat_specific": []
            }
        },
        "_get_python_inc_posix_python": {
            "name": "_get_python_inc_posix_python",
            "location": 143,
            "return": [],
            "arguments": {
                "plat_specific": []
            }
        },
        "_get_python_inc_from_config": {
            "name": "_get_python_inc_from_config",
            "location": 159,
            "return": [],
            "arguments": {
                "plat_specific": [],
                "spec_prefix": []
            }
        },
        "_get_python_inc_posix_prefix": {
            "name": "_get_python_inc_posix_prefix",
            "location": 182,
            "return": [],
            "arguments": {
                "prefix": []
            }
        },
        "_get_python_inc_nt": {
            "name": "_get_python_inc_nt",
            "location": 188,
            "return": [],
            "arguments": {
                "prefix": [],
                "spec_prefix": [],
                "plat_specific": []
            }
        },
        "_posix_lib": {
            "name": "_posix_lib",
            "location": 201,
            "return": [],
            "arguments": {
                "standard_lib": [],
                "libpython": [],
                "early_prefix": [],
                "prefix": []
            }
        },
        "get_python_lib": {
            "name": "get_python_lib",
            "location": 208,
            "return": [],
            "arguments": {
                "plat_specific": [],
                "standard_lib": [],
                "prefix": []
            }
        },
        "customize_compiler": {
            "name": "customize_compiler",
            "location": 262,
            "return": [],
            "arguments": {
                "compiler": []
            }
        },
        "get_config_h_filename": {
            "name": "get_config_h_filename",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "get_makefile_filename": {
            "name": "get_makefile_filename",
            "location": 366,
            "return": [],
            "arguments": {}
        },
        "parse_config_h": {
            "name": "parse_config_h",
            "location": 371,
            "return": [],
            "arguments": {
                "fp": [],
                "g": []
            }
        },
        "parse_makefile": {
            "name": "parse_makefile",
            "location": 388,
            "return": [],
            "arguments": {
                "fn": [],
                "g": []
            }
        },
        "expand_makefile_vars": {
            "name": "expand_makefile_vars",
            "location": 497,
            "return": [],
            "arguments": {
                "s": [],
                "vars": []
            }
        },
        "get_config_vars": {
            "name": "get_config_vars",
            "location": 525,
            "return": [],
            "arguments": {}
        },
        "get_config_var": {
            "name": "get_config_var",
            "location": 549,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_fix_pcbuild": {
            "name": "_fix_pcbuild",
            "location": 66,
            "return": [],
            "arguments": {
                "d": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/text_file.py": {
        "TextFile.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "file": []
            }
        },
        "TextFile.open": {
            "name": "open",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "TextFile.close": {
            "name": "close",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextFile.gen_error": {
            "name": "gen_error",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "line": []
            }
        },
        "TextFile.error": {
            "name": "error",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "line": []
            }
        },
        "TextFile.warn": {
            "name": "warn",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "line": []
            }
        },
        "TextFile.readline": {
            "name": "readline",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextFile.readlines": {
            "name": "readlines",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextFile.unreadline": {
            "name": "unreadline",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/unixccompiler.py": {
        "_split_env": {
            "name": "_split_env",
            "location": 45,
            "return": [],
            "arguments": {
                "cmd": []
            }
        },
        "_split_aix": {
            "name": "_split_aix",
            "location": 63,
            "return": [],
            "arguments": {
                "cmd": []
            }
        },
        "_linker_params": {
            "name": "_linker_params",
            "location": 77,
            "return": [],
            "arguments": {
                "linker_cmd": [],
                "compiler_cmd": []
            }
        },
        "UnixCCompiler.preprocess": {
            "name": "preprocess",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "output_file": [],
                "macros": [],
                "include_dirs": [],
                "extra_preargs": [],
                "extra_postargs": []
            }
        },
        "UnixCCompiler._compile": {
            "name": "_compile",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "src": [],
                "ext": [],
                "cc_args": [],
                "extra_postargs": [],
                "pp_opts": []
            }
        },
        "UnixCCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "UnixCCompiler.link": {
            "name": "link",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "UnixCCompiler.library_dir_option": {
            "name": "library_dir_option",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "UnixCCompiler._is_gcc": {
            "name": "_is_gcc",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnixCCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 285,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "UnixCCompiler.library_option": {
            "name": "library_option",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "lib": []
            }
        },
        "UnixCCompiler._library_root": {
            "name": "_library_root",
            "location": 329,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "UnixCCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/util.py": {
        "get_host_platform": {
            "name": "get_host_platform",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "get_platform": {
            "name": "get_platform",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "_clear_cached_macosx_ver": {
            "name": "_clear_cached_macosx_ver",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "get_macosx_target_ver_from_syscfg": {
            "name": "get_macosx_target_ver_from_syscfg",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "get_macosx_target_ver": {
            "name": "get_macosx_target_ver",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "split_version": {
            "name": "split_version",
            "location": 120,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "convert_path": {
            "name": "convert_path",
            "location": 125,
            "return": [],
            "arguments": {
                "pathname": []
            }
        },
        "change_root": {
            "name": "change_root",
            "location": 154,
            "return": [],
            "arguments": {
                "new_root": [],
                "pathname": []
            }
        },
        "check_environ": {
            "name": "check_environ",
            "location": 176,
            "return": [],
            "arguments": {}
        },
        "subst_vars": {
            "name": "subst_vars",
            "location": 198,
            "return": [],
            "arguments": {
                "s": [],
                "local_vars": []
            }
        },
        "_subst_compat": {
            "name": "_subst_compat",
            "location": 217,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "grok_environment_error": {
            "name": "grok_environment_error",
            "location": 237,
            "return": [],
            "arguments": {
                "exc": [],
                "prefix": []
            }
        },
        "_init_regex": {
            "name": "_init_regex",
            "location": 248,
            "return": [],
            "arguments": {}
        },
        "split_quoted": {
            "name": "split_quoted",
            "location": 255,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "execute": {
            "name": "execute",
            "location": 321,
            "return": [],
            "arguments": {
                "func": [],
                "args": [],
                "msg": [],
                "verbose": [],
                "dry_run": []
            }
        },
        "strtobool": {
            "name": "strtobool",
            "location": 340,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "byte_compile": {
            "name": "byte_compile",
            "location": 356,
            "return": [],
            "arguments": {
                "py_files": [],
                "optimize": [],
                "force": [],
                "prefix": [],
                "base_dir": [],
                "verbose": [],
                "dry_run": [],
                "direct": []
            }
        },
        "rfc822_escape": {
            "name": "rfc822_escape",
            "location": 507,
            "return": [],
            "arguments": {
                "header": []
            }
        },
        "_subst_compat._subst": {
            "name": "_subst",
            "location": 223,
            "return": [],
            "arguments": {
                "match": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/version.py": {
        "suppress_known_deprecation": {
            "name": "suppress_known_deprecation",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "vstring": []
            }
        },
        "Version.__repr__": {
            "name": "__repr__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__eq__": {
            "name": "__eq__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__lt__": {
            "name": "__lt__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__le__": {
            "name": "__le__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__gt__": {
            "name": "__gt__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Version.__ge__": {
            "name": "__ge__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "StrictVersion.parse": {
            "name": "parse",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "vstring": []
            }
        },
        "StrictVersion.__str__": {
            "name": "__str__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StrictVersion._cmp": {
            "name": "_cmp",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LooseVersion.parse": {
            "name": "parse",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "vstring": []
            }
        },
        "LooseVersion.__str__": {
            "name": "__str__",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LooseVersion.__repr__": {
            "name": "__repr__",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LooseVersion._cmp": {
            "name": "_cmp",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/versionpredicate.py": {
        "splitUp": {
            "name": "splitUp",
            "location": 16,
            "return": [],
            "arguments": {
                "pred": []
            }
        },
        "split_provision": {
            "name": "split_provision",
            "location": 151,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "VersionPredicate.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "versionPredicateStr": []
            }
        },
        "VersionPredicate.__str__": {
            "name": "__str__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionPredicate.satisfied_by": {
            "name": "satisfied_by",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/_collections.py": {
        "DictStack.__iter__": {
            "name": "__iter__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DictStack.__getitem__": {
            "name": "__getitem__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DictStack.__contains__": {
            "name": "__contains__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DictStack.__len__": {
            "name": "__len__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/_functools.py": {
        "pass_none": {
            "name": "pass_none",
            "location": 5,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "pass_none.wrapper": {
            "name": "wrapper",
            "location": 16,
            "return": [],
            "arguments": {
                "param": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/_macos_compat.py": {
        "bypass_compiler_fixup": {
            "name": "bypass_compiler_fixup",
            "location": 5,
            "return": [],
            "arguments": {
                "cmd": [],
                "args": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/_msvccompiler.py": {
        "_find_vc2015": {
            "name": "_find_vc2015",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "_find_vc2017": {
            "name": "_find_vc2017",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "_find_vcvarsall": {
            "name": "_find_vcvarsall",
            "location": 118,
            "return": [],
            "arguments": {
                "plat_spec": []
            }
        },
        "_get_vc_env": {
            "name": "_get_vc_env",
            "location": 137,
            "return": [],
            "arguments": {
                "plat_spec": []
            }
        },
        "_find_exe": {
            "name": "_find_exe",
            "location": 163,
            "return": [],
            "arguments": {
                "exe": [],
                "paths": []
            }
        },
        "MSVCCompiler.__init__": {
            "name": "__init__",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "verbose": [],
                "dry_run": [],
                "force": []
            }
        },
        "MSVCCompiler._configure": {
            "name": "_configure",
            "location": 228,
            "return": [],
            "arguments": {
                "cls": [],
                "vc_env": []
            }
        },
        "MSVCCompiler._parse_path": {
            "name": "_parse_path",
            "location": 236,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "MSVCCompiler.initialize": {
            "name": "initialize",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "plat_name": []
            }
        },
        "MSVCCompiler.out_extensions": {
            "name": "out_extensions",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MSVCCompiler.compile": {
            "name": "compile",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "output_dir": [],
                "macros": [],
                "include_dirs": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "depends": []
            }
        },
        "MSVCCompiler.create_static_lib": {
            "name": "create_static_lib",
            "location": 427,
            "return": [],
            "arguments": {
                "self": [],
                "objects": [],
                "output_libname": [],
                "output_dir": [],
                "debug": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.link": {
            "name": "link",
            "location": 448,
            "return": [],
            "arguments": {
                "self": [],
                "target_desc": [],
                "objects": [],
                "output_filename": [],
                "output_dir": [],
                "libraries": [],
                "library_dirs": [],
                "runtime_library_dirs": [],
                "export_symbols": [],
                "debug": [],
                "extra_preargs": [],
                "extra_postargs": [],
                "build_temp": [],
                "target_lang": []
            }
        },
        "MSVCCompiler.spawn": {
            "name": "spawn",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "MSVCCompiler._fallback_spawn": {
            "name": "_fallback_spawn",
            "location": 525,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "env": []
            }
        },
        "MSVCCompiler.library_dir_option": {
            "name": "library_dir_option",
            "location": 547,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.runtime_library_dir_option": {
            "name": "runtime_library_dir_option",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "MSVCCompiler.library_option": {
            "name": "library_option",
            "location": 555,
            "return": [],
            "arguments": {
                "self": [],
                "lib": []
            }
        },
        "MSVCCompiler.find_library_file": {
            "name": "find_library_file",
            "location": 558,
            "return": [],
            "arguments": {
                "self": [],
                "dirs": [],
                "lib": [],
                "debug": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/bdist.py": {
        "show_formats": {
            "name": "show_formats",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "ListCompat.append": {
            "name": "append",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "bdist.initialize_options": {
            "name": "initialize_options",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist.finalize_options": {
            "name": "finalize_options",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist.run": {
            "name": "run",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/bdist_dumb.py": {
        "bdist_dumb.initialize_options": {
            "name": "initialize_options",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_dumb.finalize_options": {
            "name": "finalize_options",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_dumb.run": {
            "name": "run",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/bdist_rpm.py": {
        "bdist_rpm.initialize_options": {
            "name": "initialize_options",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm.finalize_options": {
            "name": "finalize_options",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm.finalize_package_data": {
            "name": "finalize_package_data",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm.run": {
            "name": "run",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm._dist_path": {
            "name": "_dist_path",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "bdist_rpm._make_spec_file": {
            "name": "_make_spec_file",
            "location": 412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bdist_rpm._format_changelog": {
            "name": "_format_changelog",
            "location": 597,
            "return": [],
            "arguments": {
                "self": [],
                "changelog": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/build.py": {
        "show_compilers": {
            "name": "show_compilers",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "build.initialize_options": {
            "name": "initialize_options",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.finalize_options": {
            "name": "finalize_options",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.run": {
            "name": "run",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.has_pure_modules": {
            "name": "has_pure_modules",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.has_c_libraries": {
            "name": "has_c_libraries",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.has_ext_modules": {
            "name": "has_ext_modules",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build.has_scripts": {
            "name": "has_scripts",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/build_clib.py": {
        "show_compilers": {
            "name": "show_compilers",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "build_clib.initialize_options": {
            "name": "initialize_options",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_clib.finalize_options": {
            "name": "finalize_options",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_clib.run": {
            "name": "run",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_clib.check_library_list": {
            "name": "check_library_list",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "libraries": []
            }
        },
        "build_clib.get_library_names": {
            "name": "get_library_names",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_clib.get_source_files": {
            "name": "get_source_files",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_clib.build_libraries": {
            "name": "build_libraries",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "libraries": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/build_ext.py": {
        "show_compilers": {
            "name": "show_compilers",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "build_ext.initialize_options": {
            "name": "initialize_options",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.finalize_options": {
            "name": "finalize_options",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.run": {
            "name": "run",
            "location": 282,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.check_extensions_list": {
            "name": "check_extensions_list",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "extensions": []
            }
        },
        "build_ext.get_source_files": {
            "name": "get_source_files",
            "location": 437,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.get_outputs": {
            "name": "get_outputs",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.build_extensions": {
            "name": "build_extensions",
            "location": 460,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext._build_extensions_parallel": {
            "name": "_build_extensions_parallel",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext._build_extensions_serial": {
            "name": "_build_extensions_serial",
            "location": 489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext._filter_build_errors": {
            "name": "_filter_build_errors",
            "location": 495,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.build_extension": {
            "name": "build_extension",
            "location": 503,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.swig_sources": {
            "name": "swig_sources",
            "location": 584,
            "return": [],
            "arguments": {
                "self": [],
                "sources": [],
                "extension": []
            }
        },
        "build_ext.find_swig": {
            "name": "find_swig",
            "location": 641,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_ext.get_ext_fullpath": {
            "name": "get_ext_fullpath",
            "location": 666,
            "return": [],
            "arguments": {
                "self": [],
                "ext_name": []
            }
        },
        "build_ext.get_ext_fullname": {
            "name": "get_ext_fullname",
            "location": 693,
            "return": [],
            "arguments": {
                "self": [],
                "ext_name": []
            }
        },
        "build_ext.get_ext_filename": {
            "name": "get_ext_filename",
            "location": 702,
            "return": [],
            "arguments": {
                "self": [],
                "ext_name": []
            }
        },
        "build_ext.get_export_symbols": {
            "name": "get_export_symbols",
            "location": 713,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "build_ext.get_libraries": {
            "name": "get_libraries",
            "location": 734,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/build_py.py": {
        "build_py.initialize_options": {
            "name": "initialize_options",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.finalize_options": {
            "name": "finalize_options",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.run": {
            "name": "run",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_data_files": {
            "name": "get_data_files",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.find_data_files": {
            "name": "find_data_files",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "src_dir": []
            }
        },
        "build_py.build_package_data": {
            "name": "build_package_data",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_package_dir": {
            "name": "get_package_dir",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "build_py.check_package": {
            "name": "check_package",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "package_dir": []
            }
        },
        "build_py.check_module": {
            "name": "check_module",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "module_file": []
            }
        },
        "build_py.find_package_modules": {
            "name": "find_package_modules",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "package": [],
                "package_dir": []
            }
        },
        "build_py.find_modules": {
            "name": "find_modules",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.find_all_modules": {
            "name": "find_all_modules",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_source_files": {
            "name": "get_source_files",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.get_module_outfile": {
            "name": "get_module_outfile",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "build_dir": [],
                "package": [],
                "module": []
            }
        },
        "build_py.get_outputs": {
            "name": "get_outputs",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "include_bytecode": []
            }
        },
        "build_py.build_module": {
            "name": "build_module",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "module_file": [],
                "package": []
            }
        },
        "build_py.build_modules": {
            "name": "build_modules",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.build_packages": {
            "name": "build_packages",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.byte_compile": {
            "name": "byte_compile",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/build_scripts.py": {
        "build_scripts.initialize_options": {
            "name": "initialize_options",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_scripts.finalize_options": {
            "name": "finalize_options",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_scripts.get_source_files": {
            "name": "get_source_files",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_scripts.run": {
            "name": "run",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_scripts.copy_scripts": {
            "name": "copy_scripts",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_scripts._copy_script": {
            "name": "_copy_script",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "script": [],
                "outfiles": [],
                "updated_files": []
            }
        },
        "build_scripts._change_modes": {
            "name": "_change_modes",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "outfiles": []
            }
        },
        "build_scripts._change_mode": {
            "name": "_change_mode",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "build_scripts._validate_shebang": {
            "name": "_validate_shebang",
            "location": 151,
            "return": [],
            "arguments": {
                "shebang": [],
                "encoding": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/check.py": {
        "check.initialize_options": {
            "name": "initialize_options",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "check.finalize_options": {
            "name": "finalize_options",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "check.warn": {
            "name": "warn",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "check.run": {
            "name": "run",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "check.check_metadata": {
            "name": "check_metadata",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "check.check_restructuredtext": {
            "name": "check_restructuredtext",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "check._check_rst_data": {
            "name": "_check_rst_data",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SilentReporter.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "report_level": [],
                "halt_level": [],
                "stream": [],
                "debug": [],
                "encoding": [],
                "error_handler": []
            }
        },
        "SilentReporter.system_message": {
            "name": "system_message",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "level": [],
                "message": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/clean.py": {
        "clean.initialize_options": {
            "name": "initialize_options",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "clean.finalize_options": {
            "name": "finalize_options",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "clean.run": {
            "name": "run",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/config.py": {
        "dump_file": {
            "name": "dump_file",
            "location": 364,
            "return": [],
            "arguments": {
                "filename": [],
                "head": []
            }
        },
        "config.initialize_options": {
            "name": "initialize_options",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "config.finalize_options": {
            "name": "finalize_options",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "config.run": {
            "name": "run",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "config._check_compiler": {
            "name": "_check_compiler",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "config._gen_temp_sourcefile": {
            "name": "_gen_temp_sourcefile",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "lang": []
            }
        },
        "config._preprocess": {
            "name": "_preprocess",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "lang": []
            }
        },
        "config._compile": {
            "name": "_compile",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "lang": []
            }
        },
        "config._link": {
            "name": "_link",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "libraries": [],
                "library_dirs": [],
                "lang": []
            }
        },
        "config._clean": {
            "name": "_clean",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "config.try_cpp": {
            "name": "try_cpp",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "lang": []
            }
        },
        "config.search_cpp": {
            "name": "search_cpp",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "lang": []
            }
        },
        "config.try_compile": {
            "name": "try_compile",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "lang": []
            }
        },
        "config.try_link": {
            "name": "try_link",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "libraries": [],
                "library_dirs": [],
                "lang": []
            }
        },
        "config.try_run": {
            "name": "try_run",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "include_dirs": [],
                "libraries": [],
                "library_dirs": [],
                "lang": []
            }
        },
        "config.check_func": {
            "name": "check_func",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "headers": [],
                "include_dirs": [],
                "libraries": [],
                "library_dirs": [],
                "decl": [],
                "call": []
            }
        },
        "config.check_lib": {
            "name": "check_lib",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "library": [],
                "library_dirs": [],
                "headers": [],
                "include_dirs": [],
                "other_libraries": []
            }
        },
        "config.check_header": {
            "name": "check_header",
            "location": 354,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "include_dirs": [],
                "library_dirs": [],
                "lang": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install.py": {
        "_load_sysconfig_schemes": {
            "name": "_load_sysconfig_schemes",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "_load_schemes": {
            "name": "_load_schemes",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "_get_implementation": {
            "name": "_get_implementation",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "_select_scheme": {
            "name": "_select_scheme",
            "location": 130,
            "return": [],
            "arguments": {
                "ob": [],
                "name": []
            }
        },
        "_remove_set": {
            "name": "_remove_set",
            "location": 135,
            "return": [],
            "arguments": {
                "ob": [],
                "attrs": []
            }
        },
        "_resolve_scheme": {
            "name": "_resolve_scheme",
            "location": 142,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_load_scheme": {
            "name": "_load_scheme",
            "location": 151,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_inject_headers": {
            "name": "_inject_headers",
            "location": 155,
            "return": [],
            "arguments": {
                "name": [],
                "scheme": []
            }
        },
        "_scheme_attrs": {
            "name": "_scheme_attrs",
            "location": 169,
            "return": [],
            "arguments": {
                "scheme": []
            }
        },
        "_pypy_hack": {
            "name": "_pypy_hack",
            "location": 174,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "install.initialize_options": {
            "name": "initialize_options",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.finalize_options": {
            "name": "finalize_options",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.dump_dirs": {
            "name": "dump_dirs",
            "location": 514,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "install.finalize_unix": {
            "name": "finalize_unix",
            "location": 534,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.finalize_other": {
            "name": "finalize_other",
            "location": 583,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.select_scheme": {
            "name": "select_scheme",
            "location": 605,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "install._expand_attrs": {
            "name": "_expand_attrs",
            "location": 608,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "install.expand_basedirs": {
            "name": "expand_basedirs",
            "location": 617,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.expand_dirs": {
            "name": "expand_dirs",
            "location": 622,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.convert_paths": {
            "name": "convert_paths",
            "location": 635,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.handle_extra_path": {
            "name": "handle_extra_path",
            "location": 641,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.change_roots": {
            "name": "change_roots",
            "location": 676,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.create_home_path": {
            "name": "create_home_path",
            "location": 682,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.run": {
            "name": "run",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.create_path_file": {
            "name": "create_path_file",
            "location": 744,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.get_outputs": {
            "name": "get_outputs",
            "location": 756,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.get_inputs": {
            "name": "get_inputs",
            "location": 772,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.has_lib": {
            "name": "has_lib",
            "location": 784,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.has_headers": {
            "name": "has_headers",
            "location": 791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.has_scripts": {
            "name": "has_scripts",
            "location": 796,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install.has_data": {
            "name": "has_data",
            "location": 801,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install_data.py": {
        "install_data.initialize_options": {
            "name": "initialize_options",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_data.finalize_options": {
            "name": "finalize_options",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_data.run": {
            "name": "run",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_data.get_inputs": {
            "name": "get_inputs",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_data.get_outputs": {
            "name": "get_outputs",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install_egg_info.py": {
        "safe_name": {
            "name": "safe_name",
            "location": 68,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "safe_version": {
            "name": "safe_version",
            "location": 76,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "to_filename": {
            "name": "to_filename",
            "location": 86,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "install_egg_info.initialize_options": {
            "name": "initialize_options",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.basename": {
            "name": "basename",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.finalize_options": {
            "name": "finalize_options",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.run": {
            "name": "run",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_egg_info.get_outputs": {
            "name": "get_outputs",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install_headers.py": {
        "install_headers.initialize_options": {
            "name": "initialize_options",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_headers.finalize_options": {
            "name": "finalize_options",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_headers.run": {
            "name": "run",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_headers.get_inputs": {
            "name": "get_inputs",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_headers.get_outputs": {
            "name": "get_outputs",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install_lib.py": {
        "install_lib.initialize_options": {
            "name": "initialize_options",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.finalize_options": {
            "name": "finalize_options",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.run": {
            "name": "run",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.build": {
            "name": "build",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.install": {
            "name": "install",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.byte_compile": {
            "name": "byte_compile",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "install_lib._mutate_outputs": {
            "name": "_mutate_outputs",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "has_any": [],
                "build_cmd": [],
                "cmd_option": [],
                "output_dir": []
            }
        },
        "install_lib._bytecode_filenames": {
            "name": "_bytecode_filenames",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "py_filenames": []
            }
        },
        "install_lib.get_outputs": {
            "name": "get_outputs",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_lib.get_inputs": {
            "name": "get_inputs",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/install_scripts.py": {
        "install_scripts.initialize_options": {
            "name": "initialize_options",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.finalize_options": {
            "name": "finalize_options",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.run": {
            "name": "run",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.get_inputs": {
            "name": "get_inputs",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "install_scripts.get_outputs": {
            "name": "get_outputs",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/py37compat.py": {
        "_pythonlib_compat": {
            "name": "_pythonlib_compat",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "compose": {
            "name": "compose",
            "location": 21,
            "return": [],
            "arguments": {
                "f1": [],
                "f2": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/register.py": {
        "register.initialize_options": {
            "name": "initialize_options",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.finalize_options": {
            "name": "finalize_options",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.run": {
            "name": "run",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.check_metadata": {
            "name": "check_metadata",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register._set_config": {
            "name": "_set_config",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.classifiers": {
            "name": "classifiers",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.verify_metadata": {
            "name": "verify_metadata",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.send_metadata": {
            "name": "send_metadata",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register.build_post_data": {
            "name": "build_post_data",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "register.post_to_server": {
            "name": "post_to_server",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "auth": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/sdist.py": {
        "show_formats": {
            "name": "show_formats",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "sdist.checking_metadata": {
            "name": "checking_metadata",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.initialize_options": {
            "name": "initialize_options",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.finalize_options": {
            "name": "finalize_options",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.run": {
            "name": "run",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.check_metadata": {
            "name": "check_metadata",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.get_file_list": {
            "name": "get_file_list",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.add_defaults": {
            "name": "add_defaults",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._cs_path_exists": {
            "name": "_cs_path_exists",
            "location": 257,
            "return": [],
            "arguments": {
                "fspath": []
            }
        },
        "sdist._add_defaults_standards": {
            "name": "_add_defaults_standards",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_optional": {
            "name": "_add_defaults_optional",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_python": {
            "name": "_add_defaults_python",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_data_files": {
            "name": "_add_defaults_data_files",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_ext": {
            "name": "_add_defaults_ext",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_c_libs": {
            "name": "_add_defaults_c_libs",
            "location": 339,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._add_defaults_scripts": {
            "name": "_add_defaults_scripts",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.read_template": {
            "name": "read_template",
            "location": 349,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.prune_file_list": {
            "name": "prune_file_list",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.write_manifest": {
            "name": "write_manifest",
            "location": 408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist._manifest_is_not_generated": {
            "name": "_manifest_is_not_generated",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.read_manifest": {
            "name": "read_manifest",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.make_release_tree": {
            "name": "make_release_tree",
            "location": 454,
            "return": [],
            "arguments": {
                "self": [],
                "base_dir": [],
                "files": []
            }
        },
        "sdist.make_distribution": {
            "name": "make_distribution",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sdist.get_archive_files": {
            "name": "get_archive_files",
            "location": 527,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/upload.py": {
        "upload.initialize_options": {
            "name": "initialize_options",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload.finalize_options": {
            "name": "finalize_options",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload.run": {
            "name": "run",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "upload.upload_file": {
            "name": "upload_file",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "command": [],
                "pyversion": [],
                "filename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/_framework_compat.py": {
        "enabled": {
            "name": "enabled",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "vars": {
            "name": "vars",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "scheme": {
            "name": "scheme",
            "location": 49,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_distutils/command/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/ordered_set.py": {
        "is_iterable": {
            "name": "is_iterable",
            "location": 22,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "OrderedSet.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "OrderedSet.__len__": {
            "name": "__len__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__getitem__": {
            "name": "__getitem__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "OrderedSet.copy": {
            "name": "copy",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__getstate__": {
            "name": "__getstate__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__setstate__": {
            "name": "__setstate__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "OrderedSet.__contains__": {
            "name": "__contains__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "OrderedSet.add": {
            "name": "add",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "OrderedSet.update": {
            "name": "update",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "sequence": []
            }
        },
        "OrderedSet.index": {
            "name": "index",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "OrderedSet.pop": {
            "name": "pop",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.discard": {
            "name": "discard",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "OrderedSet.clear": {
            "name": "clear",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__iter__": {
            "name": "__iter__",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__reversed__": {
            "name": "__reversed__",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__repr__": {
            "name": "__repr__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__eq__": {
            "name": "__eq__",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet.union": {
            "name": "union",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.__and__": {
            "name": "__and__",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet.intersection": {
            "name": "intersection",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.difference": {
            "name": "difference",
            "location": 355,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.issubset": {
            "name": "issubset",
            "location": 377,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet.issuperset": {
            "name": "issuperset",
            "location": 393,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet.symmetric_difference": {
            "name": "symmetric_difference",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet._update_items": {
            "name": "_update_items",
            "location": 429,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "OrderedSet.difference_update": {
            "name": "difference_update",
            "location": 437,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedSet.intersection_update": {
            "name": "intersection_update",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedSet.symmetric_difference_update": {
            "name": "symmetric_difference_update",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/typing_extensions.py": {
        "_no_slots_copy": {
            "name": "_no_slots_copy",
            "location": 23,
            "return": [],
            "arguments": {
                "dct": []
            }
        },
        "_check_generic": {
            "name": "_check_generic",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [],
                "parameters": []
            }
        },
        "IntVar": {
            "name": "IntVar",
            "location": 241,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_gorg": {
            "name": "_gorg",
            "location": 471,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_get_protocol_attrs": {
            "name": "_get_protocol_attrs",
            "location": 487,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_is_callable_members_only": {
            "name": "_is_callable_members_only",
            "location": 506,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_concatenate_getitem": {
            "name": "_concatenate_getitem",
            "location": 1767,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "final": {
            "name": "final",
            "location": 218,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_ExtensionsGenericMeta.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "subclass": []
            }
        },
        "runtime_checkable": {
            "name": "runtime_checkable",
            "location": 942,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_check_fails": {
            "name": "_check_fails",
            "location": 982,
            "return": [],
            "arguments": {
                "cls": [],
                "other": []
            }
        },
        "_dict_new": {
            "name": "_dict_new",
            "location": 993,
            "return": [],
            "arguments": {}
        },
        "_typeddict_new": {
            "name": "_typeddict_new",
            "location": 1001,
            "return": [],
            "arguments": {}
        },
        "_NoReturn.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_NoReturn.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "Deque.__new__": {
            "name": "__new__",
            "location": 375,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AsyncContextManager.__subclasshook__": {
            "name": "__subclasshook__",
            "location": 399,
            "return": [],
            "arguments": {
                "cls": [],
                "C": []
            }
        },
        "Counter.__new__": {
            "name": "__new__",
            "location": 436,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_no_init": {
            "name": "_no_init",
            "location": 701,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupportsIndex.__index__": {
            "name": "__index__",
            "location": 971,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypedDictMeta.__init__": {
            "name": "__init__",
            "location": 1049,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "ns": [],
                "total": []
            }
        },
        "_TypedDictMeta.__new__": {
            "name": "__new__",
            "location": 1052,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "ns": [],
                "total": []
            }
        },
        "_strip_annotations": {
            "name": "_strip_annotations",
            "location": 1227,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "get_type_hints": {
            "name": "get_type_hints",
            "location": 1241,
            "return": [],
            "arguments": {
                "obj": [],
                "globalns": [],
                "localns": [],
                "include_extras": []
            }
        },
        "_is_dunder": {
            "name": "_is_dunder",
            "location": 1279,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get_origin": {
            "name": "get_origin",
            "location": 1436,
            "return": [],
            "arguments": {
                "tp": []
            }
        },
        "get_args": {
            "name": "get_args",
            "location": 1460,
            "return": [],
            "arguments": {
                "tp": []
            }
        },
        "TypeAlias": {
            "name": "TypeAlias",
            "location": 1493,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_Immutable.__copy__": {
            "name": "__copy__",
            "location": 1565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Immutable.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 1568,
            "return": [],
            "arguments": {
                "self": [],
                "memo": []
            }
        },
        "ParamSpecArgs.__init__": {
            "name": "__init__",
            "location": 1583,
            "return": [],
            "arguments": {
                "self": [],
                "origin": []
            }
        },
        "ParamSpecArgs.__repr__": {
            "name": "__repr__",
            "location": 1586,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpecKwargs.__init__": {
            "name": "__init__",
            "location": 1601,
            "return": [],
            "arguments": {
                "self": [],
                "origin": []
            }
        },
        "ParamSpecKwargs.__repr__": {
            "name": "__repr__",
            "location": 1604,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.args": {
            "name": "args",
            "location": 1665,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.kwargs": {
            "name": "kwargs",
            "location": 1669,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__init__": {
            "name": "__init__",
            "location": 1672,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParamSpec.__repr__": {
            "name": "__repr__",
            "location": 1690,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__hash__": {
            "name": "__hash__",
            "location": 1699,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__eq__": {
            "name": "__eq__",
            "location": 1702,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParamSpec.__reduce__": {
            "name": "__reduce__",
            "location": 1705,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec.__call__": {
            "name": "__call__",
            "location": 1709,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__init__": {
            "name": "__init__",
            "location": 1735,
            "return": [],
            "arguments": {
                "self": [],
                "origin": [],
                "args": []
            }
        },
        "_ConcatenateGenericAlias.__repr__": {
            "name": "__repr__",
            "location": 1740,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__hash__": {
            "name": "__hash__",
            "location": 1745,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__call__": {
            "name": "__call__",
            "location": 1749,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateGenericAlias.__parameters__": {
            "name": "__parameters__",
            "location": 1753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Concatenate": {
            "name": "Concatenate",
            "location": 1787,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "TypeGuard": {
            "name": "TypeGuard",
            "location": 1867,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Self": {
            "name": "Self",
            "location": 2098,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "Required": {
            "name": "Required",
            "location": 2148,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "NotRequired": {
            "name": "NotRequired",
            "location": 2168,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_FinalForm.__repr__": {
            "name": "__repr__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FinalForm.__getitem__": {
            "name": "__getitem__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_Final.__init__": {
            "name": "__init__",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "tp": []
            }
        },
        "_Final.__getitem__": {
            "name": "__getitem__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_Final._eval_type": {
            "name": "_eval_type",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "globalns": [],
                "localns": []
            }
        },
        "_Final.__repr__": {
            "name": "__repr__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Final.__hash__": {
            "name": "__hash__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Final.__eq__": {
            "name": "__eq__",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_LiteralForm.__repr__": {
            "name": "__repr__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_LiteralForm.__getitem__": {
            "name": "__getitem__",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_Literal.__init__": {
            "name": "__init__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "_Literal.__getitem__": {
            "name": "__getitem__",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "_Literal._eval_type": {
            "name": "_eval_type",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "globalns": [],
                "localns": []
            }
        },
        "_Literal.__repr__": {
            "name": "__repr__",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Literal.__hash__": {
            "name": "__hash__",
            "location": 309,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Literal.__eq__": {
            "name": "__eq__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedDict.__new__": {
            "name": "__new__",
            "location": 420,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ChainMap.__new__": {
            "name": "__new__",
            "location": 451,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_ProtocolMeta.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 819,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "Protocol.__new__": {
            "name": "__new__",
            "location": 930,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Protocol.__class_getitem__": {
            "name": "__class_getitem__",
            "location": 581,
            "return": [],
            "arguments": {
                "cls": [],
                "params": []
            }
        },
        "Protocol.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 606,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_ProtocolMeta.__new__": {
            "name": "__new__",
            "location": 711,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "namespace": [],
                "tvars": [],
                "args": [],
                "origin": [],
                "extra": [],
                "orig_bases": []
            }
        },
        "_ProtocolMeta.__init__": {
            "name": "__init__",
            "location": 775,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_ProtocolMeta.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 834,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_ProtocolMeta.__getitem__": {
            "name": "__getitem__",
            "location": 859,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "_AnnotatedAlias.__init__": {
            "name": "__init__",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "origin": [],
                "metadata": []
            }
        },
        "_AnnotatedAlias.copy_with": {
            "name": "copy_with",
            "location": 1149,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "_AnnotatedAlias.__repr__": {
            "name": "__repr__",
            "location": 1154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_AnnotatedAlias.__reduce__": {
            "name": "__reduce__",
            "location": 1158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_AnnotatedAlias.__eq__": {
            "name": "__eq__",
            "location": 1163,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_AnnotatedAlias.__hash__": {
            "name": "__hash__",
            "location": 1170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Annotated.__new__": {
            "name": "__new__",
            "location": 1208,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Annotated.__class_getitem__": {
            "name": "__class_getitem__",
            "location": 1212,
            "return": [],
            "arguments": {
                "cls": [],
                "params": []
            }
        },
        "Annotated.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 1222,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AnnotatedMeta.__new__": {
            "name": "__new__",
            "location": 1290,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "namespace": []
            }
        },
        "AnnotatedMeta.__metadata__": {
            "name": "__metadata__",
            "location": 1296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedMeta._tree_repr": {
            "name": "_tree_repr",
            "location": 1299,
            "return": [],
            "arguments": {
                "self": [],
                "tree": []
            }
        },
        "AnnotatedMeta._subs_tree": {
            "name": "_subs_tree",
            "location": 1308,
            "return": [],
            "arguments": {
                "self": [],
                "tvars": [],
                "args": []
            }
        },
        "AnnotatedMeta._get_cons": {
            "name": "_get_cons",
            "location": 1319,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedMeta.__getitem__": {
            "name": "__getitem__",
            "location": 1333,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "AnnotatedMeta.__call__": {
            "name": "__call__",
            "location": 1356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedMeta.__getattr__": {
            "name": "__getattr__",
            "location": 1365,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "AnnotatedMeta.__setattr__": {
            "name": "__setattr__",
            "location": 1371,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [],
                "value": []
            }
        },
        "AnnotatedMeta.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 1379,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "AnnotatedMeta.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 1382,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_TypeAliasForm.__repr__": {
            "name": "__repr__",
            "location": 1508,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParamSpec._get_type_vars": {
            "name": "_get_type_vars",
            "location": 1714,
            "return": [],
            "arguments": {
                "self": [],
                "tvars": []
            }
        },
        "_ConcatenateGenericAlias._get_type_vars": {
            "name": "_get_type_vars",
            "location": 1760,
            "return": [],
            "arguments": {
                "self": [],
                "tvars": []
            }
        },
        "_TypeGuardForm.__repr__": {
            "name": "__repr__",
            "location": 1916,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__init__": {
            "name": "__init__",
            "location": 2058,
            "return": [],
            "arguments": {
                "self": [],
                "getitem": []
            }
        },
        "_SpecialForm.__getattr__": {
            "name": "__getattr__",
            "location": 2063,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_SpecialForm.__mro_entries__": {
            "name": "__mro_entries__",
            "location": 2069,
            "return": [],
            "arguments": {
                "self": [],
                "bases": []
            }
        },
        "_SpecialForm.__repr__": {
            "name": "__repr__",
            "location": 2072,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__reduce__": {
            "name": "__reduce__",
            "location": 2075,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__call__": {
            "name": "__call__",
            "location": 2078,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SpecialForm.__or__": {
            "name": "__or__",
            "location": 2081,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_SpecialForm.__ror__": {
            "name": "__ror__",
            "location": 2084,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_SpecialForm.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 2087,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_SpecialForm.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 2090,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_SpecialForm.__getitem__": {
            "name": "__getitem__",
            "location": 2094,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_Self.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 2130,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_Self.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 2133,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_ExtensionsSpecialForm.__repr__": {
            "name": "__repr__",
            "location": 2144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Protocol.__init_subclass__._proto_hook": {
            "name": "_proto_hook",
            "location": 650,
            "return": [],
            "arguments": {
                "other": []
            }
        },
        "_ProtocolMeta.__init__._proto_hook": {
            "name": "_proto_hook",
            "location": 795,
            "return": [],
            "arguments": {
                "other": []
            }
        },
        "_TypeAliasMeta.__repr__": {
            "name": "__repr__",
            "location": 1527,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypeAliasBase.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 1543,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_TypeAliasBase.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 1546,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_TypeAliasBase.__repr__": {
            "name": "__repr__",
            "location": 1549,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateForm.__repr__": {
            "name": "__repr__",
            "location": 1802,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateForm.__getitem__": {
            "name": "__getitem__",
            "location": 1805,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_ConcatenateAliasMeta.__repr__": {
            "name": "__repr__",
            "location": 1825,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateAliasBase.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 1843,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_ConcatenateAliasBase.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 1846,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "_ConcatenateAliasBase.__repr__": {
            "name": "__repr__",
            "location": 1849,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ConcatenateAliasBase.__getitem__": {
            "name": "__getitem__",
            "location": 1852,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_TypeGuardForm.__getitem__": {
            "name": "__getitem__",
            "location": 1919,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_TypeGuard.__init__": {
            "name": "__init__",
            "location": 2016,
            "return": [],
            "arguments": {
                "self": [],
                "tp": []
            }
        },
        "_TypeGuard.__getitem__": {
            "name": "__getitem__",
            "location": 2019,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_TypeGuard._eval_type": {
            "name": "_eval_type",
            "location": 2027,
            "return": [],
            "arguments": {
                "self": [],
                "globalns": [],
                "localns": []
            }
        },
        "_TypeGuard.__repr__": {
            "name": "__repr__",
            "location": 2033,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypeGuard.__hash__": {
            "name": "__hash__",
            "location": 2039,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TypeGuard.__eq__": {
            "name": "__eq__",
            "location": 2042,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_RequiredForm.__repr__": {
            "name": "__repr__",
            "location": 2186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_RequiredForm.__getitem__": {
            "name": "__getitem__",
            "location": 2189,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "_MaybeRequired.__init__": {
            "name": "__init__",
            "location": 2230,
            "return": [],
            "arguments": {
                "self": [],
                "tp": []
            }
        },
        "_MaybeRequired.__getitem__": {
            "name": "__getitem__",
            "location": 2233,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_MaybeRequired._eval_type": {
            "name": "_eval_type",
            "location": 2242,
            "return": [],
            "arguments": {
                "self": [],
                "globalns": [],
                "localns": []
            }
        },
        "_MaybeRequired.__repr__": {
            "name": "__repr__",
            "location": 2248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_MaybeRequired.__hash__": {
            "name": "__hash__",
            "location": 2254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_MaybeRequired.__eq__": {
            "name": "__eq__",
            "location": 2257,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/zipp.py": {
        "_parents": {
            "name": "_parents",
            "location": 18,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_ancestry": {
            "name": "_ancestry",
            "location": 37,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_difference": {
            "name": "_difference",
            "location": 63,
            "return": [],
            "arguments": {
                "minuend": [],
                "subtrahend": []
            }
        },
        "_pathlib_compat": {
            "name": "_pathlib_compat",
            "location": 139,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "CompleteDirs._implied_dirs": {
            "name": "_implied_dirs",
            "location": 78,
            "return": [],
            "arguments": {
                "names": []
            }
        },
        "CompleteDirs.namelist": {
            "name": "namelist",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompleteDirs._name_set": {
            "name": "_name_set",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompleteDirs.resolve_dir": {
            "name": "resolve_dir",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CompleteDirs.make": {
            "name": "make",
            "location": 101,
            "return": [],
            "arguments": {
                "cls": [],
                "source": []
            }
        },
        "FastLookup.namelist": {
            "name": "namelist",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FastLookup._name_set": {
            "name": "_name_set",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__init__": {
            "name": "__init__",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "root": [],
                "at": []
            }
        },
        "Path.open": {
            "name": "open",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "Path.name": {
            "name": "name",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.suffix": {
            "name": "suffix",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.suffixes": {
            "name": "suffixes",
            "location": 270,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.stem": {
            "name": "stem",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.filename": {
            "name": "filename",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.read_text": {
            "name": "read_text",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.read_bytes": {
            "name": "read_bytes",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path._is_child": {
            "name": "_is_child",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Path._next": {
            "name": "_next",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "at": []
            }
        },
        "Path.is_dir": {
            "name": "is_dir",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.is_file": {
            "name": "is_file",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.exists": {
            "name": "exists",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.iterdir": {
            "name": "iterdir",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__str__": {
            "name": "__str__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.__repr__": {
            "name": "__repr__",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.joinpath": {
            "name": "joinpath",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Path.parent": {
            "name": "parent",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_adapters.py": {
        "Message.__new__": {
            "name": "__new__",
            "location": 30,
            "return": [],
            "arguments": {
                "cls": [],
                "orig": []
            }
        },
        "Message.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.__iter__": {
            "name": "__iter__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message._repair_headers": {
            "name": "_repair_headers",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.json": {
            "name": "json",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message._repair_headers.redent": {
            "name": "redent",
            "location": 43,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "Message.json.transform": {
            "name": "transform",
            "location": 61,
            "return": [],
            "arguments": {
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_collections.py": {
        "FreezableDefaultDict.__missing__": {
            "name": "__missing__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FreezableDefaultDict.freeze": {
            "name": "freeze",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pair.parse": {
            "name": "parse",
            "location": 29,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_compat.py": {
        "install": {
            "name": "install",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "disable_stdlib_finder": {
            "name": "disable_stdlib_finder",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "pypy_partial": {
            "name": "pypy_partial",
            "location": 64,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "disable_stdlib_finder.matches": {
            "name": "matches",
            "location": 36,
            "return": [],
            "arguments": {
                "finder": []
            }
        },
        "NullFinder.find_spec": {
            "name": "find_spec",
            "location": 52,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_functools.py": {
        "method_cache": {
            "name": "method_cache",
            "location": 6,
            "return": [],
            "arguments": {
                "method": [],
                "cache_wrapper": []
            }
        },
        "pass_none": {
            "name": "pass_none",
            "location": 89,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "method_cache.wrapper": {
            "name": "wrapper",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pass_none.wrapper": {
            "name": "wrapper",
            "location": 100,
            "return": [],
            "arguments": {
                "param": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_itertools.py": {
        "unique_everseen": {
            "name": "unique_everseen",
            "location": 4,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "always_iterable": {
            "name": "always_iterable",
            "location": 23,
            "return": [],
            "arguments": {
                "obj": [],
                "base_type": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_meta.py": {
        "PackageMetadata.__len__": {
            "name": "__len__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageMetadata.__contains__": {
            "name": "__contains__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PackageMetadata.__getitem__": {
            "name": "__getitem__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "PackageMetadata.__iter__": {
            "name": "__iter__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageMetadata.get_all": {
            "name": "get_all",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "failobj": []
            }
        },
        "PackageMetadata.json": {
            "name": "json",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimplePath.joinpath": {
            "name": "joinpath",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimplePath.__truediv__": {
            "name": "__truediv__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimplePath.parent": {
            "name": "parent",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimplePath.read_text": {
            "name": "read_text",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/_text.py": {
        "FoldedCase.__lt__": {
            "name": "__lt__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__gt__": {
            "name": "__gt__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__eq__": {
            "name": "__eq__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__ne__": {
            "name": "__ne__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__hash__": {
            "name": "__hash__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.__contains__": {
            "name": "__contains__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.in_": {
            "name": "in_",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.lower": {
            "name": "lower",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.index": {
            "name": "index",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "FoldedCase.split": {
            "name": "split",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "splitter": [],
                "maxsplit": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_metadata/__init__.py": {
        "distribution": {
            "name": "distribution",
            "location": 941,
            "return": [],
            "arguments": {
                "distribution_name": []
            }
        },
        "distributions": {
            "name": "distributions",
            "location": 950,
            "return": [],
            "arguments": {}
        },
        "metadata": {
            "name": "metadata",
            "location": 958,
            "return": [],
            "arguments": {
                "distribution_name": []
            }
        },
        "version": {
            "name": "version",
            "location": 967,
            "return": [],
            "arguments": {
                "distribution_name": []
            }
        },
        "entry_points": {
            "name": "entry_points",
            "location": 977,
            "return": [],
            "arguments": {}
        },
        "files": {
            "name": "files",
            "location": 1002,
            "return": [],
            "arguments": {
                "distribution_name": []
            }
        },
        "requires": {
            "name": "requires",
            "location": 1011,
            "return": [],
            "arguments": {
                "distribution_name": []
            }
        },
        "packages_distributions": {
            "name": "packages_distributions",
            "location": 1021,
            "return": [],
            "arguments": {}
        },
        "_top_level_declared": {
            "name": "_top_level_declared",
            "location": 1038,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "_top_level_inferred": {
            "name": "_top_level_inferred",
            "location": 1042,
            "return": [],
            "arguments": {
                "dist": []
            }
        },
        "PackageNotFoundError.__str__": {
            "name": "__str__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageNotFoundError.name": {
            "name": "name",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sectioned.section_pairs": {
            "name": "section_pairs",
            "location": 105,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "Sectioned.read": {
            "name": "read",
            "location": 113,
            "return": [],
            "arguments": {
                "text": [],
                "filter_": []
            }
        },
        "Sectioned.valid": {
            "name": "valid",
            "location": 124,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "DeprecatedTuple.__getitem__": {
            "name": "__getitem__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EntryPoint.__init__": {
            "name": "__init__",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "group": []
            }
        },
        "EntryPoint.load": {
            "name": "load",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.module": {
            "name": "module",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.attr": {
            "name": "attr",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.extras": {
            "name": "extras",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint._for": {
            "name": "_for",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "EntryPoint.__iter__": {
            "name": "__iter__",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.matches": {
            "name": "matches",
            "location": 228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint._key": {
            "name": "_key",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.__lt__": {
            "name": "__lt__",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EntryPoint.__eq__": {
            "name": "__eq__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EntryPoint.__setattr__": {
            "name": "__setattr__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "EntryPoint.__repr__": {
            "name": "__repr__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoint.__hash__": {
            "name": "__hash__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeprecatedList._wrap_deprecated_method": {
            "name": "_wrap_deprecated_method",
            "location": 295,
            "return": [],
            "arguments": {
                "method_name": []
            }
        },
        "DeprecatedList.__add__": {
            "name": "__add__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DeprecatedList.__eq__": {
            "name": "__eq__",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EntryPoints.__getitem__": {
            "name": "__getitem__",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "EntryPoints.select": {
            "name": "select",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoints.names": {
            "name": "names",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoints.groups": {
            "name": "groups",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntryPoints._from_text_for": {
            "name": "_from_text_for",
            "location": 374,
            "return": [],
            "arguments": {
                "cls": [],
                "text": [],
                "dist": []
            }
        },
        "EntryPoints._from_text": {
            "name": "_from_text",
            "location": 378,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "Deprecated.__getitem__": {
            "name": "__getitem__",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Deprecated.get": {
            "name": "get",
            "location": 419,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "Deprecated.__iter__": {
            "name": "__iter__",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deprecated.__contains__": {
            "name": "__contains__",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deprecated.keys": {
            "name": "keys",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deprecated.values": {
            "name": "values",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectableGroups.load": {
            "name": "load",
            "location": 447,
            "return": [],
            "arguments": {
                "cls": [],
                "eps": []
            }
        },
        "SelectableGroups._all": {
            "name": "_all",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectableGroups.groups": {
            "name": "groups",
            "location": 462,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectableGroups.names": {
            "name": "names",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectableGroups.select": {
            "name": "select",
            "location": 474,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackagePath.read_text": {
            "name": "read_text",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "encoding": []
            }
        },
        "PackagePath.read_binary": {
            "name": "read_binary",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackagePath.locate": {
            "name": "locate",
            "location": 491,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileHash.__init__": {
            "name": "__init__",
            "location": 497,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "FileHash.__repr__": {
            "name": "__repr__",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.read_text": {
            "name": "read_text",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Distribution.locate_file": {
            "name": "locate_file",
            "location": 516,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Distribution.from_name": {
            "name": "from_name",
            "location": 523,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "Distribution.discover": {
            "name": "discover",
            "location": 541,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Distribution.at": {
            "name": "at",
            "location": 559,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "Distribution._discover_resolvers": {
            "name": "_discover_resolvers",
            "location": 568,
            "return": [],
            "arguments": {}
        },
        "Distribution.metadata": {
            "name": "metadata",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.name": {
            "name": "name",
            "location": 593,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._normalized_name": {
            "name": "_normalized_name",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.version": {
            "name": "version",
            "location": 603,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.entry_points": {
            "name": "entry_points",
            "location": 608,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.files": {
            "name": "files",
            "location": 612,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._read_files_distinfo": {
            "name": "_read_files_distinfo",
            "location": 636,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._read_files_egginfo": {
            "name": "_read_files_egginfo",
            "location": 643,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.requires": {
            "name": "requires",
            "location": 652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._read_dist_info_reqs": {
            "name": "_read_dist_info_reqs",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._read_egg_info_reqs": {
            "name": "_read_egg_info_reqs",
            "location": 660,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution._deps_from_requires_text": {
            "name": "_deps_from_requires_text",
            "location": 665,
            "return": [],
            "arguments": {
                "cls": [],
                "source": []
            }
        },
        "Distribution._convert_egg_info_reqs_to_simple_reqs": {
            "name": "_convert_egg_info_reqs_to_simple_reqs",
            "location": 669,
            "return": [],
            "arguments": {
                "sections": []
            }
        },
        "DistributionFinder.find_distributions": {
            "name": "find_distributions",
            "location": 742,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "FastPath.__new__": {
            "name": "__new__",
            "location": 762,
            "return": [],
            "arguments": {
                "cls": [],
                "root": []
            }
        },
        "FastPath.__init__": {
            "name": "__init__",
            "location": 765,
            "return": [],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "FastPath.joinpath": {
            "name": "joinpath",
            "location": 768,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "FastPath.children": {
            "name": "children",
            "location": 771,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FastPath.zip_children": {
            "name": "zip_children",
            "location": 778,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FastPath.search": {
            "name": "search",
            "location": 785,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FastPath.mtime": {
            "name": "mtime",
            "location": 789,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FastPath.lookup": {
            "name": "lookup",
            "location": 795,
            "return": [],
            "arguments": {
                "self": [],
                "mtime": []
            }
        },
        "Lookup.__init__": {
            "name": "__init__",
            "location": 800,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Lookup.search": {
            "name": "search",
            "location": 821,
            "return": [],
            "arguments": {
                "self": [],
                "prepared": []
            }
        },
        "Prepared.__init__": {
            "name": "__init__",
            "location": 843,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Prepared.normalize": {
            "name": "normalize",
            "location": 851,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Prepared.legacy_normalize": {
            "name": "legacy_normalize",
            "location": 858,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Prepared.__bool__": {
            "name": "__bool__",
            "location": 865,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataPathFinder.find_distributions": {
            "name": "find_distributions",
            "location": 877,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "MetadataPathFinder._search_paths": {
            "name": "_search_paths",
            "location": 890,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "paths": []
            }
        },
        "MetadataPathFinder.invalidate_caches": {
            "name": "invalidate_caches",
            "location": 897,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PathDistribution.__init__": {
            "name": "__init__",
            "location": 902,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "PathDistribution.read_text": {
            "name": "read_text",
            "location": 909,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "PathDistribution.locate_file": {
            "name": "locate_file",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "PathDistribution._normalized_name": {
            "name": "_normalized_name",
            "location": 925,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PathDistribution._name_from_stem": {
            "name": "_name_from_stem",
            "location": 933,
            "return": [],
            "arguments": {
                "self": [],
                "stem": []
            }
        },
        "DeprecatedList._wrap_deprecated_method.wrapped": {
            "name": "wrapped",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Distribution.files.make_file": {
            "name": "make_file",
            "location": 623,
            "return": [],
            "arguments": {
                "name": [],
                "hash": [],
                "size_str": []
            }
        },
        "Distribution.files.make_files": {
            "name": "make_files",
            "location": 631,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "Distribution._convert_egg_info_reqs_to_simple_reqs.make_condition": {
            "name": "make_condition",
            "location": 680,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Distribution._convert_egg_info_reqs_to_simple_reqs.quoted_marker": {
            "name": "quoted_marker",
            "location": 683,
            "return": [],
            "arguments": {
                "section": []
            }
        },
        "Distribution._convert_egg_info_reqs_to_simple_reqs.url_req_space": {
            "name": "url_req_space",
            "location": 691,
            "return": [],
            "arguments": {
                "req": []
            }
        },
        "DistributionFinder.Context.__init__": {
            "name": "__init__",
            "location": 727,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistributionFinder.Context.path": {
            "name": "path",
            "location": 731,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/abc.py": {
        "ResourceReader.open_resource": {
            "name": "open_resource",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceReader.resource_path": {
            "name": "resource_path",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ResourceReader.is_resource": {
            "name": "is_resource",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ResourceReader.contents": {
            "name": "contents",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.iterdir": {
            "name": "iterdir",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.read_bytes": {
            "name": "read_bytes",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.read_text": {
            "name": "read_text",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "encoding": []
            }
        },
        "Traversable.is_dir": {
            "name": "is_dir",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.is_file": {
            "name": "is_file",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Traversable.joinpath": {
            "name": "joinpath",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "Traversable.__truediv__": {
            "name": "__truediv__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "Traversable.open": {
            "name": "open",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "Traversable.name": {
            "name": "name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResources.files": {
            "name": "files",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResources.open_resource": {
            "name": "open_resource",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "TraversableResources.resource_path": {
            "name": "resource_path",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "TraversableResources.is_resource": {
            "name": "is_resource",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "TraversableResources.contents": {
            "name": "contents",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/readers.py": {
        "remove_duplicates": {
            "name": "remove_duplicates",
            "location": 11,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "FileReader.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "loader": []
            }
        },
        "FileReader.resource_path": {
            "name": "resource_path",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "FileReader.files": {
            "name": "files",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZipReader.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "module": []
            }
        },
        "ZipReader.open_resource": {
            "name": "open_resource",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "ZipReader.is_resource": {
            "name": "is_resource",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ZipReader.files": {
            "name": "files",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.iterdir": {
            "name": "iterdir",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.read_bytes": {
            "name": "read_bytes",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.read_text": {
            "name": "read_text",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.is_dir": {
            "name": "is_dir",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.is_file": {
            "name": "is_file",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.joinpath": {
            "name": "joinpath",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "MultiplexedPath.open": {
            "name": "open",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.name": {
            "name": "name",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiplexedPath.__repr__": {
            "name": "__repr__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamespaceReader.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "namespace_path": []
            }
        },
        "NamespaceReader.resource_path": {
            "name": "resource_path",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "NamespaceReader.files": {
            "name": "files",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/simple.py": {
        "SimpleReader.package": {
            "name": "package",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.children": {
            "name": "children",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.resources": {
            "name": "resources",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleReader.open_binary": {
            "name": "open_binary",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "resource": []
            }
        },
        "SimpleReader.name": {
            "name": "name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [],
                "name": []
            }
        },
        "ResourceHandle.is_file": {
            "name": "is_file",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.is_dir": {
            "name": "is_dir",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceHandle.open": {
            "name": "open",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "ResourceHandle.joinpath": {
            "name": "joinpath",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ResourceContainer.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "reader": []
            }
        },
        "ResourceContainer.is_dir": {
            "name": "is_dir",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.is_file": {
            "name": "is_file",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.iterdir": {
            "name": "iterdir",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.open": {
            "name": "open",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceContainer.joinpath": {
            "name": "joinpath",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TraversableReader.files": {
            "name": "files",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/_adapters.py": {
        "_io_wrapper": {
            "name": "_io_wrapper",
            "location": 32,
            "return": [],
            "arguments": {
                "file": [],
                "mode": []
            }
        },
        "wrap_spec": {
            "name": "wrap_spec",
            "location": 165,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "SpecLoaderAdapter.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "adapter": []
            }
        },
        "SpecLoaderAdapter.__getattr__": {
            "name": "__getattr__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TraversableResourcesLoader.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader": {
            "name": "get_resource_reader",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CompatibilityFiles.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "CompatibilityFiles._reader": {
            "name": "_reader",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles._native": {
            "name": "_native",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.__getattr__": {
            "name": "__getattr__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "CompatibilityFiles.files": {
            "name": "files",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "reader": []
            }
        },
        "CompatibilityFiles.SpecPath.iterdir": {
            "name": "iterdir",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.is_file": {
            "name": "is_file",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.joinpath": {
            "name": "joinpath",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.SpecPath.name": {
            "name": "name",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.SpecPath.open": {
            "name": "open",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "CompatibilityFiles.ChildPath.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "reader": [],
                "name": []
            }
        },
        "CompatibilityFiles.ChildPath.iterdir": {
            "name": "iterdir",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.is_file": {
            "name": "is_file",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.is_dir": {
            "name": "is_dir",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.joinpath": {
            "name": "joinpath",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.ChildPath.name": {
            "name": "name",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.ChildPath.open": {
            "name": "open",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "CompatibilityFiles.OrphanPath.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.iterdir": {
            "name": "iterdir",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.is_file": {
            "name": "is_file",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.joinpath": {
            "name": "joinpath",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CompatibilityFiles.OrphanPath.name": {
            "name": "name",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompatibilityFiles.OrphanPath.open": {
            "name": "open",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/_common.py": {
        "files": {
            "name": "files",
            "location": 17,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "get_resource_reader": {
            "name": "get_resource_reader",
            "location": 25,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "resolve": {
            "name": "resolve",
            "location": 42,
            "return": [],
            "arguments": {
                "cand": []
            }
        },
        "get_package": {
            "name": "get_package",
            "location": 47,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "from_package": {
            "name": "from_package",
            "location": 59,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "_tempfile": {
            "name": "_tempfile",
            "location": 70,
            "return": [],
            "arguments": {
                "reader": [],
                "suffix": []
            }
        },
        "as_file": {
            "name": "as_file",
            "location": 90,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_": {
            "name": "_",
            "location": 100,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/_compat.py": {
        "wrap_spec": {
            "name": "wrap_spec",
            "location": 88,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "TraversableResourcesLoader.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "TraversableResourcesLoader.path": {
            "name": "path",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader": {
            "name": "get_resource_reader",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "runtime_checkable": {
            "name": "runtime_checkable",
            "location": 18,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._zip_reader": {
            "name": "_zip_reader",
            "location": 47,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._namespace_reader": {
            "name": "_namespace_reader",
            "location": 51,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._available_reader": {
            "name": "_available_reader",
            "location": 55,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._native_reader": {
            "name": "_native_reader",
            "location": 59,
            "return": [],
            "arguments": {
                "spec": []
            }
        },
        "TraversableResourcesLoader.get_resource_reader._file_reader": {
            "name": "_file_reader",
            "location": 63,
            "return": [],
            "arguments": {
                "spec": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/_itertools.py": {
        "unique_everseen": {
            "name": "unique_everseen",
            "location": 18,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/_legacy.py": {
        "deprecated": {
            "name": "deprecated",
            "location": 15,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "normalize_path": {
            "name": "normalize_path",
            "location": 30,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "open_binary": {
            "name": "open_binary",
            "location": 44,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "read_binary": {
            "name": "read_binary",
            "location": 50,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "open_text": {
            "name": "open_text",
            "location": 56,
            "return": [],
            "arguments": {
                "package": [],
                "resource": [],
                "encoding": [],
                "errors": []
            }
        },
        "read_text": {
            "name": "read_text",
            "location": 69,
            "return": [],
            "arguments": {
                "package": [],
                "resource": [],
                "encoding": [],
                "errors": []
            }
        },
        "contents": {
            "name": "contents",
            "location": 85,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "is_resource": {
            "name": "is_resource",
            "location": 96,
            "return": [],
            "arguments": {
                "package": [],
                "name": []
            }
        },
        "path": {
            "name": "path",
            "location": 109,
            "return": [],
            "arguments": {
                "package": [],
                "resource": []
            }
        },
        "deprecated.wrapper": {
            "name": "wrapper",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/importlib_resources/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/jaraco/context.py": {
        "pushd": {
            "name": "pushd",
            "location": 11,
            "return": [],
            "arguments": {
                "dir": []
            }
        },
        "tarball_context": {
            "name": "tarball_context",
            "location": 21,
            "return": [],
            "arguments": {
                "url": [],
                "target_dir": [],
                "runner": [],
                "pushd": []
            }
        },
        "infer_compression": {
            "name": "infer_compression",
            "location": 48,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "temp_dir": {
            "name": "temp_dir",
            "location": 60,
            "return": [],
            "arguments": {
                "remover": []
            }
        },
        "repo_context": {
            "name": "repo_context",
            "location": 73,
            "return": [],
            "arguments": {
                "url": [],
                "branch": [],
                "quiet": [],
                "dest_ctx": []
            }
        },
        "null": {
            "name": "null",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "ExceptionTrap.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "exceptions": []
            }
        },
        "ExceptionTrap.__enter__": {
            "name": "__enter__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.type": {
            "name": "type",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.value": {
            "name": "value",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.tb": {
            "name": "tb",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.__exit__": {
            "name": "__exit__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.__bool__": {
            "name": "__bool__",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExceptionTrap.raises": {
            "name": "raises",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "ExceptionTrap.passes": {
            "name": "passes",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "ExceptionTrap.raises.wrapper": {
            "name": "wrapper",
            "location": 176,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/jaraco/functools.py": {
        "compose": {
            "name": "compose",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "method_caller": {
            "name": "method_caller",
            "location": 40,
            "return": [],
            "arguments": {
                "method_name": []
            }
        },
        "once": {
            "name": "once",
            "location": 58,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "method_cache": {
            "name": "method_cache",
            "location": 100,
            "return": [],
            "arguments": {
                "method": [],
                "cache_wrapper": []
            }
        },
        "_special_method_cache": {
            "name": "_special_method_cache",
            "location": 190,
            "return": [],
            "arguments": {
                "method": [],
                "cache_wrapper": []
            }
        },
        "apply": {
            "name": "apply",
            "location": 220,
            "return": [],
            "arguments": {
                "transform": []
            }
        },
        "result_invoke": {
            "name": "result_invoke",
            "location": 241,
            "return": [],
            "arguments": {
                "action": []
            }
        },
        "call_aside": {
            "name": "call_aside",
            "location": 269,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "first_invoke": {
            "name": "first_invoke",
            "location": 319,
            "return": [],
            "arguments": {
                "func1": [],
                "func2": []
            }
        },
        "retry_call": {
            "name": "retry_call",
            "location": 333,
            "return": [],
            "arguments": {
                "func": [],
                "cleanup": [],
                "retries": [],
                "trap": []
            }
        },
        "retry": {
            "name": "retry",
            "location": 350,
            "return": [],
            "arguments": {}
        },
        "print_yielded": {
            "name": "print_yielded",
            "location": 376,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "pass_none": {
            "name": "pass_none",
            "location": 392,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "assign_params": {
            "name": "assign_params",
            "location": 410,
            "return": [],
            "arguments": {
                "func": [],
                "namespace": []
            }
        },
        "save_method_args": {
            "name": "save_method_args",
            "location": 442,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "except_": {
            "name": "except_",
            "location": 488,
            "return": [],
            "arguments": {}
        },
        "compose.compose_two": {
            "name": "compose_two",
            "location": 34,
            "return": [],
            "arguments": {
                "f1": [],
                "f2": []
            }
        },
        "method_caller.call_method": {
            "name": "call_method",
            "location": 51,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "once.wrapper": {
            "name": "wrapper",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "method_cache.wrapper": {
            "name": "wrapper",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_special_method_cache.proxy": {
            "name": "proxy",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "apply.wrap": {
            "name": "wrap",
            "location": 235,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "result_invoke.wrap": {
            "name": "wrap",
            "location": 257,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "Throttler.__init__": {
            "name": "__init__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "max_rate": []
            }
        },
        "Throttler.reset": {
            "name": "reset",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler.__call__": {
            "name": "__call__",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler._wait": {
            "name": "_wait",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Throttler.__get__": {
            "name": "__get__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "type": []
            }
        },
        "first_invoke.wrapper": {
            "name": "wrapper",
            "location": 326,
            "return": [],
            "arguments": {}
        },
        "retry.decorate": {
            "name": "decorate",
            "location": 365,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "pass_none.wrapper": {
            "name": "wrapper",
            "location": 403,
            "return": [],
            "arguments": {
                "param": []
            }
        },
        "save_method_args.wrapper": {
            "name": "wrapper",
            "location": 479,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "except_.decorate": {
            "name": "decorate",
            "location": 512,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "result_invoke.wrap.wrapper": {
            "name": "wrapper",
            "location": 259,
            "return": [],
            "arguments": {}
        },
        "retry.decorate.wrapper": {
            "name": "wrapper",
            "location": 367,
            "return": [],
            "arguments": {}
        },
        "except_.decorate.wrapper": {
            "name": "wrapper",
            "location": 514,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/jaraco/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/jaraco/text/__init__.py": {
        "substitution": {
            "name": "substitution",
            "location": 15,
            "return": [],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "multi_substitution": {
            "name": "multi_substitution",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "is_decodable": {
            "name": "is_decodable",
            "location": 137,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_binary": {
            "name": "is_binary",
            "location": 150,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "trim": {
            "name": "trim",
            "location": 163,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "wrap": {
            "name": "wrap",
            "location": 174,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "unwrap": {
            "name": "unwrap",
            "location": 207,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "indent": {
            "name": "indent",
            "location": 244,
            "return": [],
            "arguments": {
                "string": [],
                "prefix": []
            }
        },
        "simple_html_strip": {
            "name": "simple_html_strip",
            "location": 385,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "remove_prefix": {
            "name": "remove_prefix",
            "location": 482,
            "return": [],
            "arguments": {
                "text": [],
                "prefix": []
            }
        },
        "remove_suffix": {
            "name": "remove_suffix",
            "location": 496,
            "return": [],
            "arguments": {
                "text": [],
                "suffix": []
            }
        },
        "normalize_newlines": {
            "name": "normalize_newlines",
            "location": 510,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "_nonblank": {
            "name": "_nonblank",
            "location": 526,
            "return": [],
            "arguments": {
                "str": []
            }
        },
        "yield_lines": {
            "name": "yield_lines",
            "location": 531,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "_": {
            "name": "_",
            "location": 550,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "drop_comment": {
            "name": "drop_comment",
            "location": 554,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "join_continuation": {
            "name": "join_continuation",
            "location": 569,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "FoldedCase.__lt__": {
            "name": "__lt__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__gt__": {
            "name": "__gt__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__eq__": {
            "name": "__eq__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__ne__": {
            "name": "__ne__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.__hash__": {
            "name": "__hash__",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.__contains__": {
            "name": "__contains__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.in_": {
            "name": "in_",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FoldedCase.lower": {
            "name": "lower",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FoldedCase.index": {
            "name": "index",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "FoldedCase.split": {
            "name": "split",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "splitter": [],
                "maxsplit": []
            }
        },
        "Splitter.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Splitter.__call__": {
            "name": "__call__",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "WordSet.capitalized": {
            "name": "capitalized",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.lowered": {
            "name": "lowered",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.camel_case": {
            "name": "camel_case",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.headless_camel_case": {
            "name": "headless_camel_case",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.underscore_separated": {
            "name": "underscore_separated",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.dash_separated": {
            "name": "dash_separated",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.space_separated": {
            "name": "space_separated",
            "location": 329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WordSet.trim_right": {
            "name": "trim_right",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.trim_left": {
            "name": "trim_left",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.trim": {
            "name": "trim",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.__getitem__": {
            "name": "__getitem__",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "WordSet.parse": {
            "name": "parse",
            "location": 372,
            "return": [],
            "arguments": {
                "cls": [],
                "identifier": []
            }
        },
        "WordSet.from_class_name": {
            "name": "from_class_name",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [],
                "subject": []
            }
        },
        "SeparatedValues.__iter__": {
            "name": "__iter__",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stripper.__init__": {
            "name": "__init__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "lines": []
            }
        },
        "Stripper.strip_prefix": {
            "name": "strip_prefix",
            "location": 460,
            "return": [],
            "arguments": {
                "cls": [],
                "lines": []
            }
        },
        "Stripper.__call__": {
            "name": "__call__",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Stripper.common_prefix": {
            "name": "common_prefix",
            "location": 472,
            "return": [],
            "arguments": {
                "s1": [],
                "s2": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/more_itertools/more.py": {
        "chunked": {
            "name": "chunked",
            "location": 126,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "strict": []
            }
        },
        "first": {
            "name": "first",
            "location": 159,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "last": {
            "name": "last",
            "location": 187,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "nth_or_last": {
            "name": "nth_or_last",
            "location": 216,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "default": []
            }
        },
        "collate": {
            "name": "collate",
            "location": 398,
            "return": [],
            "arguments": {}
        },
        "consumer": {
            "name": "consumer",
            "location": 436,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "ilen": {
            "name": "ilen",
            "location": 468,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "iterate": {
            "name": "iterate",
            "location": 485,
            "return": [],
            "arguments": {
                "func": [],
                "start": []
            }
        },
        "with_iter": {
            "name": "with_iter",
            "location": 498,
            "return": [],
            "arguments": {
                "context_manager": []
            }
        },
        "one": {
            "name": "one",
            "location": 513,
            "return": [],
            "arguments": {
                "iterable": [],
                "too_short": [],
                "too_long": []
            }
        },
        "distinct_permutations": {
            "name": "distinct_permutations",
            "location": 580,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "intersperse": {
            "name": "intersperse",
            "location": 680,
            "return": [],
            "arguments": {
                "e": [],
                "iterable": [],
                "n": []
            }
        },
        "unique_to_each": {
            "name": "unique_to_each",
            "location": 706,
            "return": [],
            "arguments": {}
        },
        "windowed": {
            "name": "windowed",
            "location": 739,
            "return": [],
            "arguments": {
                "seq": [],
                "n": [],
                "fillvalue": [],
                "step": []
            }
        },
        "substrings": {
            "name": "substrings",
            "location": 790,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "substrings_indexes": {
            "name": "substrings_indexes",
            "location": 816,
            "return": [],
            "arguments": {
                "seq": [],
                "reverse": []
            }
        },
        "spy": {
            "name": "spy",
            "location": 946,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "interleave": {
            "name": "interleave",
            "location": 989,
            "return": [],
            "arguments": {}
        },
        "interleave_longest": {
            "name": "interleave_longest",
            "location": 1003,
            "return": [],
            "arguments": {}
        },
        "collapse": {
            "name": "collapse",
            "location": 1019,
            "return": [],
            "arguments": {
                "iterable": [],
                "base_type": [],
                "levels": []
            }
        },
        "side_effect": {
            "name": "side_effect",
            "location": 1067,
            "return": [],
            "arguments": {
                "func": [],
                "iterable": [],
                "chunk_size": [],
                "before": [],
                "after": []
            }
        },
        "sliced": {
            "name": "sliced",
            "location": 1128,
            "return": [],
            "arguments": {
                "seq": [],
                "n": [],
                "strict": []
            }
        },
        "split_at": {
            "name": "split_at",
            "location": 1162,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": [],
                "keep_separator": []
            }
        },
        "split_before": {
            "name": "split_before",
            "location": 1206,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_after": {
            "name": "split_after",
            "location": 1241,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_when": {
            "name": "split_when",
            "location": 1277,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "maxsplit": []
            }
        },
        "split_into": {
            "name": "split_into",
            "location": 1322,
            "return": [],
            "arguments": {
                "iterable": [],
                "sizes": []
            }
        },
        "padded": {
            "name": "padded",
            "location": 1367,
            "return": [],
            "arguments": {
                "iterable": [],
                "fillvalue": [],
                "n": [],
                "next_multiple": []
            }
        },
        "repeat_last": {
            "name": "repeat_last",
            "location": 1399,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": []
            }
        },
        "distribute": {
            "name": "distribute",
            "location": 1418,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "stagger": {
            "name": "stagger",
            "location": 1453,
            "return": [],
            "arguments": {
                "iterable": [],
                "offsets": [],
                "longest": [],
                "fillvalue": []
            }
        },
        "_zip_equal_generator": {
            "name": "_zip_equal_generator",
            "location": 1492,
            "return": [],
            "arguments": {
                "iterables": []
            }
        },
        "zip_equal": {
            "name": "zip_equal",
            "location": 1500,
            "return": [],
            "arguments": {}
        },
        "zip_offset": {
            "name": "zip_offset",
            "location": 1546,
            "return": [],
            "arguments": {}
        },
        "sort_together": {
            "name": "sort_together",
            "location": 1585,
            "return": [],
            "arguments": {
                "iterables": [],
                "key_list": [],
                "key": [],
                "reverse": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 1651,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "divide": {
            "name": "divide",
            "location": 1700,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "always_iterable": {
            "name": "always_iterable",
            "location": 1751,
            "return": [],
            "arguments": {
                "obj": [],
                "base_type": []
            }
        },
        "adjacent": {
            "name": "adjacent",
            "location": 1804,
            "return": [],
            "arguments": {
                "predicate": [],
                "iterable": [],
                "distance": []
            }
        },
        "groupby_transform": {
            "name": "groupby_transform",
            "location": 1843,
            "return": [],
            "arguments": {
                "iterable": [],
                "keyfunc": [],
                "valuefunc": [],
                "reducefunc": []
            }
        },
        "count_cycle": {
            "name": "count_cycle",
            "location": 2105,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "mark_ends": {
            "name": "mark_ends",
            "location": 2121,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "locate": {
            "name": "locate",
            "location": 2158,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "window_size": []
            }
        },
        "lstrip": {
            "name": "lstrip",
            "location": 2206,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "rstrip": {
            "name": "rstrip",
            "location": 2224,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "strip": {
            "name": "strip",
            "location": 2250,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "_islice_helper": {
            "name": "_islice_helper",
            "location": 2313,
            "return": [],
            "arguments": {
                "it": [],
                "s": []
            }
        },
        "always_reversible": {
            "name": "always_reversible",
            "location": 2409,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "consecutive_groups": {
            "name": "consecutive_groups",
            "location": 2427,
            "return": [],
            "arguments": {
                "iterable": [],
                "ordering": []
            }
        },
        "difference": {
            "name": "difference",
            "location": 2475,
            "return": [],
            "arguments": {
                "iterable": [],
                "func": []
            }
        },
        "exactly_n": {
            "name": "exactly_n",
            "location": 2731,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "predicate": []
            }
        },
        "circular_shifts": {
            "name": "circular_shifts",
            "location": 2749,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "make_decorator": {
            "name": "make_decorator",
            "location": 2759,
            "return": [],
            "arguments": {
                "wrapping_func": [],
                "result_index": []
            }
        },
        "map_reduce": {
            "name": "map_reduce",
            "location": 2824,
            "return": [],
            "arguments": {
                "iterable": [],
                "keyfunc": [],
                "valuefunc": [],
                "reducefunc": []
            }
        },
        "rlocate": {
            "name": "rlocate",
            "location": 2891,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "window_size": []
            }
        },
        "replace": {
            "name": "replace",
            "location": 2934,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": [],
                "substitutes": [],
                "count": [],
                "window_size": []
            }
        },
        "partitions": {
            "name": "partitions",
            "location": 2995,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "set_partitions": {
            "name": "set_partitions",
            "location": 3015,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": []
            }
        },
        "only": {
            "name": "only",
            "location": 3116,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": [],
                "too_long": []
            }
        },
        "ichunked": {
            "name": "ichunked",
            "location": 3157,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "distinct_combinations": {
            "name": "distinct_combinations",
            "location": 3194,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "filter_except": {
            "name": "filter_except",
            "location": 3234,
            "return": [],
            "arguments": {
                "validator": [],
                "iterable": []
            }
        },
        "map_except": {
            "name": "map_except",
            "location": 3258,
            "return": [],
            "arguments": {
                "function": [],
                "iterable": []
            }
        },
        "_sample_unweighted": {
            "name": "_sample_unweighted",
            "location": 3279,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": []
            }
        },
        "_sample_weighted": {
            "name": "_sample_weighted",
            "location": 3305,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": [],
                "weights": []
            }
        },
        "sample": {
            "name": "sample",
            "location": 3340,
            "return": [],
            "arguments": {
                "iterable": [],
                "k": [],
                "weights": []
            }
        },
        "is_sorted": {
            "name": "is_sorted",
            "location": 3376,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": [],
                "reverse": []
            }
        },
        "windowed_complete": {
            "name": "windowed_complete",
            "location": 3523,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "all_unique": {
            "name": "all_unique",
            "location": 3563,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "nth_product": {
            "name": "nth_product",
            "location": 3598,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "nth_permutation": {
            "name": "nth_permutation",
            "location": 3629,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": [],
                "index": []
            }
        },
        "value_chain": {
            "name": "value_chain",
            "location": 3675,
            "return": [],
            "arguments": {}
        },
        "product_index": {
            "name": "product_index",
            "location": 3703,
            "return": [],
            "arguments": {
                "element": []
            }
        },
        "combination_index": {
            "name": "combination_index",
            "location": 3728,
            "return": [],
            "arguments": {
                "element": [],
                "iterable": []
            }
        },
        "permutation_index": {
            "name": "permutation_index",
            "location": 3771,
            "return": [],
            "arguments": {
                "element": [],
                "iterable": []
            }
        },
        "peekable.__init__": {
            "name": "__init__",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "peekable.__iter__": {
            "name": "__iter__",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.__bool__": {
            "name": "__bool__",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.peek": {
            "name": "peek",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "peekable.prepend": {
            "name": "prepend",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable.__next__": {
            "name": "__next__",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "peekable._get_slice": {
            "name": "_get_slice",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "peekable.__getitem__": {
            "name": "__getitem__",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "consumer.wrapper": {
            "name": "wrapper",
            "location": 460,
            "return": [],
            "arguments": {}
        },
        "distinct_permutations._full": {
            "name": "_full",
            "location": 605,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "distinct_permutations._partial": {
            "name": "_partial",
            "location": 629,
            "return": [],
            "arguments": {
                "A": [],
                "r": []
            }
        },
        "bucket.__init__": {
            "name": "__init__",
            "location": 886,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "key": [],
                "validator": []
            }
        },
        "bucket.__contains__": {
            "name": "__contains__",
            "location": 892,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "bucket._get_values": {
            "name": "_get_values",
            "location": 905,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "bucket.__iter__": {
            "name": "__iter__",
            "location": 931,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "bucket.__getitem__": {
            "name": "__getitem__",
            "location": 939,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "collapse.walk": {
            "name": "walk",
            "location": 1046,
            "return": [],
            "arguments": {
                "node": [],
                "level": []
            }
        },
        "UnequalIterablesError.__init__": {
            "name": "__init__",
            "location": 1482,
            "return": [],
            "arguments": {
                "self": [],
                "details": []
            }
        },
        "unzip.itemgetter": {
            "name": "itemgetter",
            "location": 1679,
            "return": [],
            "arguments": {
                "i": []
            }
        },
        "numeric_range.__init__": {
            "name": "__init__",
            "location": 1942,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__bool__": {
            "name": "__bool__",
            "location": 1970,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__contains__": {
            "name": "__contains__",
            "location": 1976,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "numeric_range.__eq__": {
            "name": "__eq__",
            "location": 1986,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "numeric_range.__getitem__": {
            "name": "__getitem__",
            "location": 2001,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "numeric_range.__hash__": {
            "name": "__hash__",
            "location": 2028,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__iter__": {
            "name": "__iter__",
            "location": 2034,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__len__": {
            "name": "__len__",
            "location": 2041,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range._init_len": {
            "name": "_init_len",
            "location": 2044,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__reduce__": {
            "name": "__reduce__",
            "location": 2060,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__repr__": {
            "name": "__repr__",
            "location": 2063,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.__reversed__": {
            "name": "__reversed__",
            "location": 2073,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "numeric_range.count": {
            "name": "count",
            "location": 2080,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "numeric_range.index": {
            "name": "index",
            "location": 2083,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "numeric_range._get_by_index": {
            "name": "_get_by_index",
            "location": 2097,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "islice_extended.__init__": {
            "name": "__init__",
            "location": 2293,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "islice_extended.__iter__": {
            "name": "__iter__",
            "location": 2300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "islice_extended.__next__": {
            "name": "__next__",
            "location": 2303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "islice_extended.__getitem__": {
            "name": "__getitem__",
            "location": 2306,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SequenceView.__init__": {
            "name": "__init__",
            "location": 2547,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "SequenceView.__getitem__": {
            "name": "__getitem__",
            "location": 2552,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SequenceView.__len__": {
            "name": "__len__",
            "location": 2555,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SequenceView.__repr__": {
            "name": "__repr__",
            "location": 2558,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__init__": {
            "name": "__init__",
            "location": 2648,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "maxlen": []
            }
        },
        "seekable.__iter__": {
            "name": "__iter__",
            "location": 2656,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__next__": {
            "name": "__next__",
            "location": 2659,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.__bool__": {
            "name": "__bool__",
            "location": 2673,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.peek": {
            "name": "peek",
            "location": 2680,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "seekable.elements": {
            "name": "elements",
            "location": 2692,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "seekable.seek": {
            "name": "seek",
            "location": 2695,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "run_length.encode": {
            "name": "encode",
            "location": 2723,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "run_length.decode": {
            "name": "decode",
            "location": 2727,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "make_decorator.decorator": {
            "name": "decorator",
            "location": 2809,
            "return": [],
            "arguments": {}
        },
        "set_partitions.set_partitions_helper": {
            "name": "set_partitions_helper",
            "location": 3050,
            "return": [],
            "arguments": {
                "L": [],
                "k": []
            }
        },
        "time_limited.__init__": {
            "name": "__init__",
            "location": 3096,
            "return": [],
            "arguments": {
                "self": [],
                "limit_seconds": [],
                "iterable": []
            }
        },
        "time_limited.__iter__": {
            "name": "__iter__",
            "location": 3104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "time_limited.__next__": {
            "name": "__next__",
            "location": 3107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__init__": {
            "name": "__init__",
            "location": 3450,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "callback_kwd": [],
                "wait_seconds": []
            }
        },
        "callback_iter.__enter__": {
            "name": "__enter__",
            "location": 3459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__exit__": {
            "name": "__exit__",
            "location": 3462,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "callback_iter.__iter__": {
            "name": "__iter__",
            "location": 3466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.__next__": {
            "name": "__next__",
            "location": 3469,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.done": {
            "name": "done",
            "location": 3473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter.result": {
            "name": "result",
            "location": 3479,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "callback_iter._reader": {
            "name": "_reader",
            "location": 3485,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "countable.__init__": {
            "name": "__init__",
            "location": 3813,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "countable.__iter__": {
            "name": "__iter__",
            "location": 3817,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "countable.__next__": {
            "name": "__next__",
            "location": 3820,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "chunked.ret": {
            "name": "ret",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "sliced.ret": {
            "name": "ret",
            "location": 1151,
            "return": [],
            "arguments": {}
        },
        "unzip.itemgetter.getter": {
            "name": "getter",
            "location": 1680,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "make_decorator.decorator.outer_wrapper": {
            "name": "outer_wrapper",
            "location": 2810,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "callback_iter._reader.callback": {
            "name": "callback",
            "location": 3488,
            "return": [],
            "arguments": {}
        },
        "make_decorator.decorator.outer_wrapper.inner_wrapper": {
            "name": "inner_wrapper",
            "location": 2811,
            "return": [],
            "arguments": {}
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/more_itertools/recipes.py": {
        "take": {
            "name": "take",
            "location": 60,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "tabulate": {
            "name": "tabulate",
            "location": 76,
            "return": [],
            "arguments": {
                "function": [],
                "start": []
            }
        },
        "tail": {
            "name": "tail",
            "location": 94,
            "return": [],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "consume": {
            "name": "consume",
            "location": 105,
            "return": [],
            "arguments": {
                "iterator": [],
                "n": []
            }
        },
        "nth": {
            "name": "nth",
            "location": 145,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "default": []
            }
        },
        "all_equal": {
            "name": "all_equal",
            "location": 158,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "quantify": {
            "name": "quantify",
            "location": 172,
            "return": [],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "pad_none": {
            "name": "pad_none",
            "location": 182,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "ncycles": {
            "name": "ncycles",
            "location": 199,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": []
            }
        },
        "dotproduct": {
            "name": "dotproduct",
            "location": 209,
            "return": [],
            "arguments": {
                "vec1": [],
                "vec2": []
            }
        },
        "flatten": {
            "name": "flatten",
            "location": 219,
            "return": [],
            "arguments": {
                "listOfLists": []
            }
        },
        "repeatfunc": {
            "name": "repeatfunc",
            "location": 231,
            "return": [],
            "arguments": {
                "func": [],
                "times": []
            }
        },
        "_pairwise": {
            "name": "_pairwise",
            "location": 258,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "grouper": {
            "name": "grouper",
            "location": 284,
            "return": [],
            "arguments": {
                "iterable": [],
                "n": [],
                "fillvalue": []
            }
        },
        "roundrobin": {
            "name": "roundrobin",
            "location": 300,
            "return": [],
            "arguments": {}
        },
        "partition": {
            "name": "partition",
            "location": 323,
            "return": [],
            "arguments": {
                "pred": [],
                "iterable": []
            }
        },
        "powerset": {
            "name": "powerset",
            "location": 354,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "unique_everseen": {
            "name": "unique_everseen",
            "location": 377,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "unique_justseen": {
            "name": "unique_justseen",
            "location": 422,
            "return": [],
            "arguments": {
                "iterable": [],
                "key": []
            }
        },
        "iter_except": {
            "name": "iter_except",
            "location": 434,
            "return": [],
            "arguments": {
                "func": [],
                "exception": [],
                "first": []
            }
        },
        "first_true": {
            "name": "first_true",
            "location": 455,
            "return": [],
            "arguments": {
                "iterable": [],
                "default": [],
                "pred": []
            }
        },
        "random_product": {
            "name": "random_product",
            "location": 475,
            "return": [],
            "arguments": {}
        },
        "random_permutation": {
            "name": "random_permutation",
            "location": 495,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "random_combination": {
            "name": "random_combination",
            "location": 513,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "random_combination_with_replacement": {
            "name": "random_combination_with_replacement",
            "location": 529,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": []
            }
        },
        "nth_combination": {
            "name": "nth_combination",
            "location": 546,
            "return": [],
            "arguments": {
                "iterable": [],
                "r": [],
                "index": []
            }
        },
        "prepend": {
            "name": "prepend",
            "location": 588,
            "return": [],
            "arguments": {
                "value": [],
                "iterator": []
            }
        },
        "convolve": {
            "name": "convolve",
            "location": 603,
            "return": [],
            "arguments": {
                "signal": [],
                "kernel": []
            }
        },
        "pairwise": {
            "name": "pairwise",
            "location": 278,
            "return": [],
            "arguments": {
                "iterable": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/more_itertools/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/markers.py": {
        "_coerce_parse_result": {
            "name": "_coerce_parse_result",
            "location": 141,
            "return": [],
            "arguments": {
                "results": []
            }
        },
        "_format_marker": {
            "name": "_format_marker",
            "location": 148,
            "return": [],
            "arguments": {
                "marker": [],
                "first": []
            }
        },
        "_eval_op": {
            "name": "_eval_op",
            "location": 189,
            "return": [],
            "arguments": {
                "lhs": [],
                "op": [],
                "rhs": []
            }
        },
        "_get_env": {
            "name": "_get_env",
            "location": 211,
            "return": [],
            "arguments": {
                "environment": [],
                "name": []
            }
        },
        "_evaluate_markers": {
            "name": "_evaluate_markers",
            "location": 222,
            "return": [],
            "arguments": {
                "markers": [],
                "environment": []
            }
        },
        "format_full_version": {
            "name": "format_full_version",
            "location": 249,
            "return": [],
            "arguments": {
                "info": []
            }
        },
        "default_environment": {
            "name": "default_environment",
            "location": 257,
            "return": [],
            "arguments": {}
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__repr__": {
            "name": "__repr__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.serialize": {
            "name": "serialize",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.serialize": {
            "name": "serialize",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.serialize": {
            "name": "serialize",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Op.serialize": {
            "name": "serialize",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "marker": []
            }
        },
        "Marker.__str__": {
            "name": "__str__",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.__repr__": {
            "name": "__repr__",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Marker.evaluate": {
            "name": "evaluate",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "environment": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/requirements.py": {
        "Requirement.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "requirement_string": []
            }
        },
        "Requirement.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/specifiers.py": {
        "_require_version_compare": {
            "name": "_require_version_compare",
            "location": 287,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_version_split": {
            "name": "_version_split",
            "location": 585,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_is_not_suffix": {
            "name": "_is_not_suffix",
            "location": 596,
            "return": [],
            "arguments": {
                "segment": []
            }
        },
        "_pad_version": {
            "name": "_pad_version",
            "location": 602,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "BaseSpecifier.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__hash__": {
            "name": "__hash__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSpecifier.__eq__": {
            "name": "__eq__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BaseSpecifier.prereleases": {
            "name": "prereleases",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseSpecifier.contains": {
            "name": "contains",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "BaseSpecifier.filter": {
            "name": "filter",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier._canonical_spec": {
            "name": "_canonical_spec",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__hash__": {
            "name": "__hash__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.__eq__": {
            "name": "__eq__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_IndividualSpecifier._get_operator": {
            "name": "_get_operator",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "op": []
            }
        },
        "_IndividualSpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "_IndividualSpecifier.operator": {
            "name": "operator",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.version": {
            "name": "version",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_IndividualSpecifier.prereleases": {
            "name": "prereleases",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_IndividualSpecifier.__contains__": {
            "name": "__contains__",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_IndividualSpecifier.contains": {
            "name": "contains",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "_IndividualSpecifier.filter": {
            "name": "filter",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        },
        "LegacySpecifier.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "spec": [],
                "prereleases": []
            }
        },
        "LegacySpecifier._coerce_version": {
            "name": "_coerce_version",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacySpecifier._compare_equal": {
            "name": "_compare_equal",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "LegacySpecifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "_require_version_compare.wrapped": {
            "name": "wrapped",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_compatible": {
            "name": "_compare_compatible",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_equal": {
            "name": "_compare_equal",
            "location": 430,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_not_equal": {
            "name": "_compare_not_equal",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than_equal": {
            "name": "_compare_less_than_equal",
            "location": 474,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_greater_than_equal": {
            "name": "_compare_greater_than_equal",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier._compare_less_than": {
            "name": "_compare_less_than",
            "location": 492,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_greater_than": {
            "name": "_compare_greater_than",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec_str": []
            }
        },
        "Specifier._compare_arbitrary": {
            "name": "_compare_arbitrary",
            "location": 549,
            "return": [],
            "arguments": {
                "self": [],
                "prospective": [],
                "spec": []
            }
        },
        "Specifier.prereleases": {
            "name": "prereleases",
            "location": 578,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__init__": {
            "name": "__init__",
            "location": 621,
            "return": [],
            "arguments": {
                "self": [],
                "specifiers": [],
                "prereleases": []
            }
        },
        "SpecifierSet.__repr__": {
            "name": "__repr__",
            "location": 645,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__str__": {
            "name": "__str__",
            "location": 654,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__hash__": {
            "name": "__hash__",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__and__": {
            "name": "__and__",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__eq__": {
            "name": "__eq__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SpecifierSet.__len__": {
            "name": "__len__",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.__iter__": {
            "name": "__iter__",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpecifierSet.prereleases": {
            "name": "prereleases",
            "location": 716,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SpecifierSet.__contains__": {
            "name": "__contains__",
            "location": 719,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SpecifierSet.contains": {
            "name": "contains",
            "location": 722,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "prereleases": []
            }
        },
        "SpecifierSet.filter": {
            "name": "filter",
            "location": 751,
            "return": [],
            "arguments": {
                "self": [],
                "iterable": [],
                "prereleases": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/tags.py": {
        "parse_tag": {
            "name": "parse_tag",
            "location": 96,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "_get_config_var": {
            "name": "_get_config_var",
            "location": 112,
            "return": [],
            "arguments": {
                "name": [],
                "warn": []
            }
        },
        "_normalize_string": {
            "name": "_normalize_string",
            "location": 121,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "_abi3_applies": {
            "name": "_abi3_applies",
            "location": 125,
            "return": [],
            "arguments": {
                "python_version": []
            }
        },
        "_cpython_abis": {
            "name": "_cpython_abis",
            "location": 134,
            "return": [],
            "arguments": {
                "py_version": [],
                "warn": []
            }
        },
        "cpython_tags": {
            "name": "cpython_tags",
            "location": 170,
            "return": [],
            "arguments": {
                "python_version": [],
                "abis": [],
                "platforms": []
            }
        },
        "_generic_abi": {
            "name": "_generic_abi",
            "location": 227,
            "return": [],
            "arguments": {}
        },
        "generic_tags": {
            "name": "generic_tags",
            "location": 233,
            "return": [],
            "arguments": {
                "interpreter": [],
                "abis": [],
                "platforms": []
            }
        },
        "_py_interpreter_range": {
            "name": "_py_interpreter_range",
            "location": 263,
            "return": [],
            "arguments": {
                "py_version": []
            }
        },
        "compatible_tags": {
            "name": "compatible_tags",
            "location": 278,
            "return": [],
            "arguments": {
                "python_version": [],
                "interpreter": [],
                "platforms": []
            }
        },
        "_mac_arch": {
            "name": "_mac_arch",
            "location": 303,
            "return": [],
            "arguments": {
                "arch": [],
                "is_32bit": []
            }
        },
        "_mac_binary_formats": {
            "name": "_mac_binary_formats",
            "location": 313,
            "return": [],
            "arguments": {
                "version": [],
                "cpu_arch": []
            }
        },
        "mac_platforms": {
            "name": "mac_platforms",
            "location": 345,
            "return": [],
            "arguments": {
                "version": [],
                "arch": []
            }
        },
        "_linux_platforms": {
            "name": "_linux_platforms",
            "location": 417,
            "return": [],
            "arguments": {
                "is_32bit": []
            }
        },
        "_generic_platforms": {
            "name": "_generic_platforms",
            "location": 430,
            "return": [],
            "arguments": {}
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 434,
            "return": [],
            "arguments": {}
        },
        "interpreter_name": {
            "name": "interpreter_name",
            "location": 446,
            "return": [],
            "arguments": {}
        },
        "interpreter_version": {
            "name": "interpreter_version",
            "location": 454,
            "return": [],
            "arguments": {}
        },
        "_version_nodot": {
            "name": "_version_nodot",
            "location": 466,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "sys_tags": {
            "name": "sys_tags",
            "location": 470,
            "return": [],
            "arguments": {}
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "interpreter": [],
                "abi": [],
                "platform": []
            }
        },
        "Tag.interpreter": {
            "name": "interpreter",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.abi": {
            "name": "abi",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.platform": {
            "name": "platform",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__eq__": {
            "name": "__eq__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Tag.__hash__": {
            "name": "__hash__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/utils.py": {
        "canonicalize_name": {
            "name": "canonicalize_name",
            "location": 32,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "canonicalize_version": {
            "name": "canonicalize_version",
            "location": 38,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "parse_wheel_filename": {
            "name": "parse_wheel_filename",
            "location": 81,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "parse_sdist_filename": {
            "name": "parse_sdist_filename",
            "location": 117,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/version.py": {
        "parse": {
            "name": "parse",
            "location": 42,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_version_parts": {
            "name": "_parse_version_parts",
            "location": 179,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_legacy_cmpkey": {
            "name": "_legacy_cmpkey",
            "location": 196,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "_parse_letter_version": {
            "name": "_parse_letter_version",
            "location": 393,
            "return": [],
            "arguments": {
                "letter": [],
                "number": []
            }
        },
        "_parse_local_version": {
            "name": "_parse_local_version",
            "location": 432,
            "return": [],
            "arguments": {
                "local": []
            }
        },
        "_cmpkey": {
            "name": "_cmpkey",
            "location": 444,
            "return": [],
            "arguments": {
                "epoch": [],
                "release": [],
                "pre": [],
                "post": [],
                "dev": [],
                "local": []
            }
        },
        "_BaseVersion.__hash__": {
            "name": "__hash__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_BaseVersion.__lt__": {
            "name": "__lt__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__le__": {
            "name": "__le__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__eq__": {
            "name": "__eq__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ge__": {
            "name": "__ge__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__gt__": {
            "name": "__gt__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_BaseVersion.__ne__": {
            "name": "__ne__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LegacyVersion.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "LegacyVersion.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.__repr__": {
            "name": "__repr__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.public": {
            "name": "public",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.base_version": {
            "name": "base_version",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.epoch": {
            "name": "epoch",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.release": {
            "name": "release",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.pre": {
            "name": "pre",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.post": {
            "name": "post",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.dev": {
            "name": "dev",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.local": {
            "name": "local",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_prerelease": {
            "name": "is_prerelease",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_postrelease": {
            "name": "is_postrelease",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LegacyVersion.is_devrelease": {
            "name": "is_devrelease",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "Version.__repr__": {
            "name": "__repr__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.epoch": {
            "name": "epoch",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.release": {
            "name": "release",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.pre": {
            "name": "pre",
            "location": 332,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.post": {
            "name": "post",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.dev": {
            "name": "dev",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.local": {
            "name": "local",
            "location": 345,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.public": {
            "name": "public",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.base_version": {
            "name": "base_version",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_prerelease": {
            "name": "is_prerelease",
            "location": 369,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_postrelease": {
            "name": "is_postrelease",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.is_devrelease": {
            "name": "is_devrelease",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.major": {
            "name": "major",
            "location": 381,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.minor": {
            "name": "minor",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Version.micro": {
            "name": "micro",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/_manylinux.py": {
        "_get_elf_header": {
            "name": "_get_elf_header",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "_is_linux_armhf": {
            "name": "_is_linux_armhf",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "_is_linux_i686": {
            "name": "_is_linux_i686",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "_have_compatible_abi": {
            "name": "_have_compatible_abi",
            "location": 114,
            "return": [],
            "arguments": {
                "arch": []
            }
        },
        "_glibc_version_string_confstr": {
            "name": "_glibc_version_string_confstr",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string_ctypes": {
            "name": "_glibc_version_string_ctypes",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "_glibc_version_string": {
            "name": "_glibc_version_string",
            "location": 198,
            "return": [],
            "arguments": {}
        },
        "_parse_glibc_version": {
            "name": "_parse_glibc_version",
            "location": 203,
            "return": [],
            "arguments": {
                "version_str": []
            }
        },
        "_get_glibc_version": {
            "name": "_get_glibc_version",
            "location": 223,
            "return": [],
            "arguments": {}
        },
        "_is_compatible": {
            "name": "_is_compatible",
            "location": 231,
            "return": [],
            "arguments": {
                "name": [],
                "arch": [],
                "version": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 267,
            "return": [],
            "arguments": {
                "linux": [],
                "arch": []
            }
        },
        "_ELFFileHeader.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "_ELFFileHeader.__init__.unpack": {
            "name": "unpack",
            "location": 36,
            "return": [],
            "arguments": {
                "fmt": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/_musllinux.py": {
        "_read_unpacked": {
            "name": "_read_unpacked",
            "location": 18,
            "return": [],
            "arguments": {
                "f": [],
                "fmt": []
            }
        },
        "_parse_ld_musl_from_elf": {
            "name": "_parse_ld_musl_from_elf",
            "location": 22,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_parse_musl_version": {
            "name": "_parse_musl_version",
            "location": 76,
            "return": [],
            "arguments": {
                "output": []
            }
        },
        "_get_musl_version": {
            "name": "_get_musl_version",
            "location": 87,
            "return": [],
            "arguments": {
                "executable": []
            }
        },
        "platform_tags": {
            "name": "platform_tags",
            "location": 110,
            "return": [],
            "arguments": {
                "arch": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/_structures.py": {
        "InfinityType.__repr__": {
            "name": "__repr__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__hash__": {
            "name": "__hash__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfinityType.__lt__": {
            "name": "__lt__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__le__": {
            "name": "__le__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__eq__": {
            "name": "__eq__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__gt__": {
            "name": "__gt__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__ge__": {
            "name": "__ge__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "InfinityType.__neg__": {
            "name": "__neg__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__repr__": {
            "name": "__repr__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__hash__": {
            "name": "__hash__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NegativeInfinityType.__lt__": {
            "name": "__lt__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__le__": {
            "name": "__le__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__eq__": {
            "name": "__eq__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__gt__": {
            "name": "__gt__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__ge__": {
            "name": "__ge__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NegativeInfinityType.__neg__": {
            "name": "__neg__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/__about__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/packaging/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/actions.py": {
        "match_only_at_col": {
            "name": "match_only_at_col",
            "location": 33,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "replace_with": {
            "name": "replace_with",
            "location": 46,
            "return": [],
            "arguments": {
                "repl_str": []
            }
        },
        "remove_quotes": {
            "name": "remove_quotes",
            "location": 63,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "with_attribute": {
            "name": "with_attribute",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "with_class": {
            "name": "with_class",
            "location": 162,
            "return": [],
            "arguments": {
                "classname": [],
                "namespace": []
            }
        },
        "OnlyOnce.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "method_call": []
            }
        },
        "OnlyOnce.__call__": {
            "name": "__call__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "l": [],
                "t": []
            }
        },
        "OnlyOnce.reset": {
            "name": "reset",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "match_only_at_col.verify_col": {
            "name": "verify_col",
            "location": 39,
            "return": [],
            "arguments": {
                "strg": [],
                "locn": [],
                "toks": []
            }
        },
        "with_attribute.pa": {
            "name": "pa",
            "location": 143,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/common.py": {
        "pyparsing_common.convert_to_date": {
            "name": "convert_to_date",
            "location": 253,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.convert_to_datetime": {
            "name": "convert_to_datetime",
            "location": 280,
            "return": [],
            "arguments": {
                "fmt": []
            }
        },
        "pyparsing_common.strip_html_tags": {
            "name": "strip_html_tags",
            "location": 322,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "tokens": []
            }
        },
        "pyparsing_common.convert_to_date.cvt_fn": {
            "name": "cvt_fn",
            "location": 271,
            "return": [],
            "arguments": {
                "ss": [],
                "ll": [],
                "tt": []
            }
        },
        "pyparsing_common.convert_to_datetime.cvt_fn": {
            "name": "cvt_fn",
            "location": 298,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/core.py": {
        "enable_diag": {
            "name": "enable_diag",
            "location": 167,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "disable_diag": {
            "name": "disable_diag",
            "location": 174,
            "return": [],
            "arguments": {
                "diag_enum": []
            }
        },
        "enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "_should_enable_warnings": {
            "name": "_should_enable_warnings",
            "location": 192,
            "return": [],
            "arguments": {
                "cmd_line_warn_options": [],
                "warn_env_var": []
            }
        },
        "_trim_arity": {
            "name": "_trim_arity",
            "location": 262,
            "return": [],
            "arguments": {
                "func": [],
                "max_limit": []
            }
        },
        "condition_as_parse_action": {
            "name": "condition_as_parse_action",
            "location": 322,
            "return": [],
            "arguments": {
                "fn": [],
                "message": [],
                "fatal": []
            }
        },
        "_default_start_debug_action": {
            "name": "_default_start_debug_action",
            "location": 350,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "cache_hit": []
            }
        },
        "_default_success_debug_action": {
            "name": "_default_success_debug_action",
            "location": 369,
            "return": [],
            "arguments": {
                "instring": [],
                "startloc": [],
                "endloc": [],
                "expr": [],
                "toks": [],
                "cache_hit": []
            }
        },
        "_default_exception_debug_action": {
            "name": "_default_exception_debug_action",
            "location": 381,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "expr": [],
                "exc": [],
                "cache_hit": []
            }
        },
        "null_debug_action": {
            "name": "null_debug_action",
            "location": 396,
            "return": [],
            "arguments": {}
        },
        "trace_parse_action": {
            "name": "trace_parse_action",
            "location": 5609,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "srange": {
            "name": "srange",
            "location": 5684,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "token_map": {
            "name": "token_map",
            "location": 5721,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "autoname_elements": {
            "name": "autoname_elements",
            "location": 5767,
            "return": [],
            "arguments": {}
        },
        "__diag__.enable_all_warnings": {
            "name": "enable_all_warnings",
            "location": 129,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_trim_arity.extract_tb": {
            "name": "extract_tb",
            "location": 272,
            "return": [],
            "arguments": {
                "tb": [],
                "limit": []
            }
        },
        "_trim_arity.wrapper": {
            "name": "wrapper",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "condition_as_parse_action.pa": {
            "name": "pa",
            "location": 343,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "ParserElement.set_default_whitespace_chars": {
            "name": "set_default_whitespace_chars",
            "location": 408,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "ParserElement.inline_literals_using": {
            "name": "inline_literals_using",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ParserElement.__init__": {
            "name": "__init__",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "savelist": []
            }
        },
        "ParserElement.suppress_warning": {
            "name": "suppress_warning",
            "location": 483,
            "return": [],
            "arguments": {
                "self": [],
                "warning_type": []
            }
        },
        "ParserElement.copy": {
            "name": "copy",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_results_name": {
            "name": "set_results_name",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "ParserElement._setResultsName": {
            "name": "_setResultsName",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "ParserElement.set_break": {
            "name": "set_break",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "break_flag": []
            }
        },
        "ParserElement.set_parse_action": {
            "name": "set_parse_action",
            "location": 595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_parse_action": {
            "name": "add_parse_action",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.add_condition": {
            "name": "add_condition",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_fail_action": {
            "name": "set_fail_action",
            "location": 728,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "ParserElement._skipIgnorables": {
            "name": "_skipIgnorables",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.preParse": {
            "name": "preParse",
            "location": 757,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement.parseImpl": {
            "name": "parseImpl",
            "location": 769,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParserElement.postParse": {
            "name": "postParse",
            "location": 772,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "ParserElement._parseNoCache": {
            "name": "_parseNoCache",
            "location": 776,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.try_parse": {
            "name": "try_parse",
            "location": 878,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "raise_fatal": []
            }
        },
        "ParserElement.can_parse_next": {
            "name": "can_parse_next",
            "location": 886,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "ParserElement._parseCache": {
            "name": "_parseCache",
            "location": 909,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.reset_cache": {
            "name": "reset_cache",
            "location": 960,
            "return": [],
            "arguments": {}
        },
        "ParserElement.disable_memoization": {
            "name": "disable_memoization",
            "location": 971,
            "return": [],
            "arguments": {}
        },
        "ParserElement.enable_left_recursion": {
            "name": "enable_left_recursion",
            "location": 985,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.enable_packrat": {
            "name": "enable_packrat",
            "location": 1033,
            "return": [],
            "arguments": {
                "cache_size_limit": []
            }
        },
        "ParserElement.parse_string": {
            "name": "parse_string",
            "location": 1076,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "parse_all": []
            }
        },
        "ParserElement.scan_string": {
            "name": "scan_string",
            "location": 1145,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": [],
                "overlap": []
            }
        },
        "ParserElement.transform_string": {
            "name": "transform_string",
            "location": 1234,
            "return": [],
            "arguments": {
                "self": [],
                "instring": []
            }
        },
        "ParserElement.search_string": {
            "name": "search_string",
            "location": 1280,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "max_matches": []
            }
        },
        "ParserElement.split": {
            "name": "split",
            "location": 1320,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "maxsplit": [],
                "include_separators": []
            }
        },
        "ParserElement.__add__": {
            "name": "__add__",
            "location": 1352,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__radd__": {
            "name": "__radd__",
            "location": 1392,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__sub__": {
            "name": "__sub__",
            "location": 1409,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rsub__": {
            "name": "__rsub__",
            "location": 1423,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__mul__": {
            "name": "__mul__",
            "location": 1437,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rmul__": {
            "name": "__rmul__",
            "location": 1523,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__or__": {
            "name": "__or__",
            "location": 1526,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__ror__": {
            "name": "__ror__",
            "location": 1543,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__xor__": {
            "name": "__xor__",
            "location": 1557,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rxor__": {
            "name": "__rxor__",
            "location": 1571,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__and__": {
            "name": "__and__",
            "location": 1585,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__rand__": {
            "name": "__rand__",
            "location": 1599,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__invert__": {
            "name": "__invert__",
            "location": 1613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__getitem__": {
            "name": "__getitem__",
            "location": 1623,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ParserElement.__call__": {
            "name": "__call__",
            "location": 1663,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.suppress": {
            "name": "suppress",
            "location": 1683,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 1690,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 1700,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParserElement.set_whitespace_chars": {
            "name": "set_whitespace_chars",
            "location": 1711,
            "return": [],
            "arguments": {
                "self": [],
                "chars": [],
                "copy_defaults": []
            }
        },
        "ParserElement.parse_with_tabs": {
            "name": "parse_with_tabs",
            "location": 1722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.ignore": {
            "name": "ignore",
            "location": 1731,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.set_debug_actions": {
            "name": "set_debug_actions",
            "location": 1759,
            "return": [],
            "arguments": {
                "self": [],
                "start_action": [],
                "success_action": [],
                "exception_action": []
            }
        },
        "ParserElement.set_debug": {
            "name": "set_debug",
            "location": 1785,
            "return": [],
            "arguments": {
                "self": [],
                "flag": []
            }
        },
        "ParserElement.default_name": {
            "name": "default_name",
            "location": 1833,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 1839,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.set_name": {
            "name": "set_name",
            "location": 1844,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParserElement.name": {
            "name": "name",
            "location": 1858,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__str__": {
            "name": "__str__",
            "location": 1862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.__repr__": {
            "name": "__repr__",
            "location": 1865,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.streamline": {
            "name": "streamline",
            "location": 1868,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.recurse": {
            "name": "recurse",
            "location": 1873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement._checkRecursion": {
            "name": "_checkRecursion",
            "location": 1876,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParserElement.validate": {
            "name": "validate",
            "location": 1881,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParserElement.parse_file": {
            "name": "parse_file",
            "location": 1887,
            "return": [],
            "arguments": {
                "self": [],
                "file_or_filename": [],
                "encoding": [],
                "parse_all": []
            }
        },
        "ParserElement.__eq__": {
            "name": "__eq__",
            "location": 1915,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParserElement.__hash__": {
            "name": "__hash__",
            "location": 1924,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParserElement.matches": {
            "name": "matches",
            "location": 1927,
            "return": [],
            "arguments": {
                "self": [],
                "test_string": [],
                "parse_all": []
            }
        },
        "ParserElement.run_tests": {
            "name": "run_tests",
            "location": 1950,
            "return": [],
            "arguments": {
                "self": [],
                "tests": [],
                "parse_all": [],
                "comment": [],
                "full_dump": [],
                "print_results": [],
                "failure_tests": [],
                "post_parse": [],
                "file": [],
                "with_line_numbers": []
            }
        },
        "ParserElement.create_diagram": {
            "name": "create_diagram",
            "location": 2145,
            "return": [],
            "arguments": {
                "self": [],
                "output_html": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_PendingSkip.__init__": {
            "name": "__init__",
            "location": 2223,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "must_skip": []
            }
        },
        "_PendingSkip._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.__add__": {
            "name": "__add__",
            "location": 2231,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_PendingSkip.__repr__": {
            "name": "__repr__",
            "location": 2252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PendingSkip.parseImpl": {
            "name": "parseImpl",
            "location": 2255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token.__init__": {
            "name": "__init__",
            "location": 2266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Token._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Empty.__init__": {
            "name": "__init__",
            "location": 2278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.__init__": {
            "name": "__init__",
            "location": 2289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2295,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Literal.__init__": {
            "name": "__init__",
            "location": 2315,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "Literal._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Literal.parseImpl": {
            "name": "parseImpl",
            "location": 2336,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_SingleCharLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2345,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.__init__": {
            "name": "__init__",
            "location": 2383,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": [],
                "caseless": []
            }
        },
        "Keyword._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Keyword.parseImpl": {
            "name": "parseImpl",
            "location": 2415,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Keyword.set_default_keyword_chars": {
            "name": "set_default_keyword_chars",
            "location": 2463,
            "return": [],
            "arguments": {
                "chars": []
            }
        },
        "CaselessLiteral.__init__": {
            "name": "__init__",
            "location": 2486,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": []
            }
        },
        "CaselessLiteral.parseImpl": {
            "name": "parseImpl",
            "location": 2493,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CaselessKeyword.__init__": {
            "name": "__init__",
            "location": 2511,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "ident_chars": []
            }
        },
        "CloseMatch.__init__": {
            "name": "__init__",
            "location": 2559,
            "return": [],
            "arguments": {
                "self": [],
                "match_string": [],
                "max_mismatches": []
            }
        },
        "CloseMatch._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2578,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CloseMatch.parseImpl": {
            "name": "parseImpl",
            "location": 2581,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Word.__init__": {
            "name": "__init__",
            "location": 2678,
            "return": [],
            "arguments": {
                "self": [],
                "init_chars": [],
                "body_chars": [],
                "min": [],
                "max": [],
                "exact": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Word._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Word.parseImpl": {
            "name": "parseImpl",
            "location": 2820,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_WordRegex.parseImpl": {
            "name": "parseImpl",
            "location": 2854,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Char.__init__": {
            "name": "__init__",
            "location": 2869,
            "return": [],
            "arguments": {
                "self": [],
                "charset": [],
                "as_keyword": [],
                "exclude_chars": []
            }
        },
        "Regex.__init__": {
            "name": "__init__",
            "location": 2915,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": [],
                "flags": [],
                "as_group_list": [],
                "as_match": []
            }
        },
        "Regex.re": {
            "name": "re",
            "location": 2962,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.re_match": {
            "name": "re_match",
            "location": 2974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.mayReturnEmpty": {
            "name": "mayReturnEmpty",
            "location": 2978,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 2981,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regex.parseImpl": {
            "name": "parseImpl",
            "location": 2984,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsGroupList": {
            "name": "parseImplAsGroupList",
            "location": 2997,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.parseImplAsMatch": {
            "name": "parseImplAsMatch",
            "location": 3006,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Regex.sub": {
            "name": "sub",
            "location": 3015,
            "return": [],
            "arguments": {
                "self": [],
                "repl": []
            }
        },
        "QuotedString.__init__": {
            "name": "__init__",
            "location": 3086,
            "return": [],
            "arguments": {
                "self": [],
                "quote_char": [],
                "esc_char": [],
                "esc_quote": [],
                "multiline": [],
                "unquote_results": [],
                "end_quote_char": [],
                "convert_whitespace_escapes": []
            }
        },
        "QuotedString._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuotedString.parseImpl": {
            "name": "parseImpl",
            "location": 3207,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "CharsNotIn.__init__": {
            "name": "__init__",
            "location": 3262,
            "return": [],
            "arguments": {
                "self": [],
                "not_chars": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "CharsNotIn._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharsNotIn.parseImpl": {
            "name": "parseImpl",
            "location": 3304,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "White.__init__": {
            "name": "__init__",
            "location": 3357,
            "return": [],
            "arguments": {
                "self": [],
                "ws": [],
                "min": [],
                "max": [],
                "exact": []
            }
        },
        "White._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3379,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "White.parseImpl": {
            "name": "parseImpl",
            "location": 3382,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PositionToken.__init__": {
            "name": "__init__",
            "location": 3399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoToColumn.__init__": {
            "name": "__init__",
            "location": 3410,
            "return": [],
            "arguments": {
                "self": [],
                "colno": []
            }
        },
        "GoToColumn.preParse": {
            "name": "preParse",
            "location": 3414,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "GoToColumn.parseImpl": {
            "name": "parseImpl",
            "location": 3427,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineStart.__init__": {
            "name": "__init__",
            "location": 3459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineStart.preParse": {
            "name": "preParse",
            "location": 3467,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": []
            }
        },
        "LineStart.parseImpl": {
            "name": "parseImpl",
            "location": 3477,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "LineEnd.__init__": {
            "name": "__init__",
            "location": 3488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3494,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringStart.__init__": {
            "name": "__init__",
            "location": 3511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringStart.parseImpl": {
            "name": "parseImpl",
            "location": 3515,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "StringEnd.__init__": {
            "name": "__init__",
            "location": 3528,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3532,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordStart.__init__": {
            "name": "__init__",
            "location": 3553,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordStart.parseImpl": {
            "name": "parseImpl",
            "location": 3559,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "WordEnd.__init__": {
            "name": "__init__",
            "location": 3578,
            "return": [],
            "arguments": {
                "self": [],
                "word_chars": []
            }
        },
        "WordEnd.parseImpl": {
            "name": "parseImpl",
            "location": 3585,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseExpression.__init__": {
            "name": "__init__",
            "location": 3601,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "ParseExpression.recurse": {
            "name": "recurse",
            "location": 3627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.append": {
            "name": "append",
            "location": 3630,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 3635,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 3648,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseExpression.ignore": {
            "name": "ignore",
            "location": 3660,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseExpression._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3672,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.streamline": {
            "name": "streamline",
            "location": 3675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression.validate": {
            "name": "validate",
            "location": 3716,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseExpression.copy": {
            "name": "copy",
            "location": 3722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseExpression._setResultsName": {
            "name": "_setResultsName",
            "location": 3727,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "And.__init__": {
            "name": "__init__",
            "location": 3783,
            "return": [],
            "arguments": {
                "self": [],
                "exprs_arg": [],
                "savelist": []
            }
        },
        "And.streamline": {
            "name": "streamline",
            "location": 3816,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And.parseImpl": {
            "name": "parseImpl",
            "location": 3861,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "And.__iadd__": {
            "name": "__iadd__",
            "location": 3891,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "And._checkRecursion": {
            "name": "_checkRecursion",
            "location": 3896,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "And._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.__init__": {
            "name": "__init__",
            "location": 3929,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Or.streamline": {
            "name": "streamline",
            "location": 3937,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or.parseImpl": {
            "name": "parseImpl",
            "location": 3949,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Or.__ixor__": {
            "name": "__ixor__",
            "location": 4031,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Or._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4036,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Or._setResultsName": {
            "name": "_setResultsName",
            "location": 4039,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "MatchFirst.__init__": {
            "name": "__init__",
            "location": 4084,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "MatchFirst.streamline": {
            "name": "streamline",
            "location": 4092,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst.parseImpl": {
            "name": "parseImpl",
            "location": 4108,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "MatchFirst.__ior__": {
            "name": "__ior__",
            "location": 4142,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MatchFirst._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MatchFirst._setResultsName": {
            "name": "_setResultsName",
            "location": 4150,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "Each.__init__": {
            "name": "__init__",
            "location": 4235,
            "return": [],
            "arguments": {
                "self": [],
                "exprs": [],
                "savelist": []
            }
        },
        "Each.streamline": {
            "name": "streamline",
            "location": 4245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Each.parseImpl": {
            "name": "parseImpl",
            "location": 4253,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Each._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.__init__": {
            "name": "__init__",
            "location": 4349,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "ParseElementEnhance.recurse": {
            "name": "recurse",
            "location": 4370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance.parseImpl": {
            "name": "parseImpl",
            "location": 4373,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ParseElementEnhance.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 4379,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 4388,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "ParseElementEnhance.ignore": {
            "name": "ignore",
            "location": 4397,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseElementEnhance.streamline": {
            "name": "streamline",
            "location": 4409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseElementEnhance._checkRecursion": {
            "name": "_checkRecursion",
            "location": 4415,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "ParseElementEnhance.validate": {
            "name": "validate",
            "location": 4422,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "ParseElementEnhance._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock.__init__": {
            "name": "__init__",
            "location": 4455,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "IndentedBlock.parseImpl": {
            "name": "parseImpl",
            "location": 4465,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtStringStart.__init__": {
            "name": "__init__",
            "location": 4512,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtStringStart.parseImpl": {
            "name": "parseImpl",
            "location": 4516,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "AtLineStart.__init__": {
            "name": "__init__",
            "location": 4545,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AtLineStart.parseImpl": {
            "name": "parseImpl",
            "location": 4549,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "FollowedBy.__init__": {
            "name": "__init__",
            "location": 4578,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "FollowedBy.parseImpl": {
            "name": "parseImpl",
            "location": 4582,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "PrecededBy.__init__": {
            "name": "__init__",
            "location": 4621,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "retreat": []
            }
        },
        "PrecededBy.parseImpl": {
            "name": "parseImpl",
            "location": 4646,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Located.parseImpl": {
            "name": "parseImpl",
            "location": 4700,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny.__init__": {
            "name": "__init__",
            "location": 4739,
            "return": [],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "NotAny.parseImpl": {
            "name": "parseImpl",
            "location": 4748,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "NotAny._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4753,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_MultipleMatch.__init__": {
            "name": "__init__",
            "location": 4758,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "_MultipleMatch.stopOn": {
            "name": "stopOn",
            "location": 4773,
            "return": [],
            "arguments": {
                "self": [],
                "ender": []
            }
        },
        "_MultipleMatch.parseImpl": {
            "name": "parseImpl",
            "location": 4779,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "_MultipleMatch._setResultsName": {
            "name": "_setResultsName",
            "location": 4808,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "listAllMatches": []
            }
        },
        "OneOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZeroOrMore.__init__": {
            "name": "__init__",
            "location": 4879,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "stop_on": []
            }
        },
        "ZeroOrMore.parseImpl": {
            "name": "parseImpl",
            "location": 4889,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "ZeroOrMore._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4895,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__bool__": {
            "name": "__bool__",
            "location": 4900,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_NullToken.__str__": {
            "name": "__str__",
            "location": 4903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Opt.__init__": {
            "name": "__init__",
            "location": 4948,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "default": []
            }
        },
        "Opt.parseImpl": {
            "name": "parseImpl",
            "location": 4956,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Opt._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 4972,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SkipTo.__init__": {
            "name": "__init__",
            "location": 5044,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "include": [],
                "ignore": [],
                "fail_on": []
            }
        },
        "SkipTo.parseImpl": {
            "name": "parseImpl",
            "location": 5066,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.__init__": {
            "name": "__init__",
            "location": 5146,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__lshift__": {
            "name": "__lshift__",
            "location": 5151,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__ilshift__": {
            "name": "__ilshift__",
            "location": 5168,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__or__": {
            "name": "__or__",
            "location": 5171,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Forward.__del__": {
            "name": "__del__",
            "location": 5186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.parseImpl": {
            "name": "parseImpl",
            "location": 5200,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        },
        "Forward.leave_whitespace": {
            "name": "leave_whitespace",
            "location": 5295,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.ignore_whitespace": {
            "name": "ignore_whitespace",
            "location": 5299,
            "return": [],
            "arguments": {
                "self": [],
                "recursive": []
            }
        },
        "Forward.streamline": {
            "name": "streamline",
            "location": 5303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.validate": {
            "name": "validate",
            "location": 5310,
            "return": [],
            "arguments": {
                "self": [],
                "validateTrace": []
            }
        },
        "Forward._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 5320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward.copy": {
            "name": "copy",
            "location": 5334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Forward._setResultsName": {
            "name": "_setResultsName",
            "location": 5342,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "list_all_matches": []
            }
        },
        "TokenConverter.__init__": {
            "name": "__init__",
            "location": 5368,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Combine.__init__": {
            "name": "__init__",
            "location": 5392,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "join_string": [],
                "adjacent": []
            }
        },
        "Combine.ignore": {
            "name": "ignore",
            "location": 5410,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Combine.postParse": {
            "name": "postParse",
            "location": 5417,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Group.__init__": {
            "name": "__init__",
            "location": 5451,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "aslist": []
            }
        },
        "Group.postParse": {
            "name": "postParse",
            "location": 5456,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Dict.__init__": {
            "name": "__init__",
            "location": 5509,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "asdict": []
            }
        },
        "Dict.postParse": {
            "name": "postParse",
            "location": 5514,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.__init__": {
            "name": "__init__",
            "location": 5585,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "savelist": []
            }
        },
        "Suppress.__add__": {
            "name": "__add__",
            "location": 5590,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.__sub__": {
            "name": "__sub__",
            "location": 5596,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Suppress.postParse": {
            "name": "postParse",
            "location": 5602,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "tokenlist": []
            }
        },
        "Suppress.suppress": {
            "name": "suppress",
            "location": 5605,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "trace_parse_action.z": {
            "name": "z",
            "location": 5636,
            "return": [],
            "arguments": {}
        },
        "token_map.pa": {
            "name": "pa",
            "location": 5758,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "owner": []
            }
        },
        "Word._generateDefaultName.charsAsStr": {
            "name": "charsAsStr",
            "location": 2792,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "And._ErrorStop.__init__": {
            "name": "__init__",
            "location": 3776,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "And._ErrorStop._generateDefaultName": {
            "name": "_generateDefaultName",
            "location": 3780,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IndentedBlock._Indent.__init__": {
            "name": "__init__",
            "location": 4444,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "IndentedBlock._IndentGreater.__init__": {
            "name": "__init__",
            "location": 4450,
            "return": [],
            "arguments": {
                "self": [],
                "ref_col": []
            }
        },
        "ParserElement.set_break.breaker": {
            "name": "breaker",
            "location": 581,
            "return": [],
            "arguments": {
                "instring": [],
                "loc": [],
                "doActions": [],
                "callPreParse": []
            }
        },
        "ParserElement.__mul__.makeOptionalList": {
            "name": "makeOptionalList",
            "location": 1503,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "_PendingSkip.__add__.must_skip": {
            "name": "must_skip",
            "location": 2235,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "_PendingSkip.__add__.show_skip": {
            "name": "show_skip",
            "location": 2240,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "Regex.sub.pa": {
            "name": "pa",
            "location": 3039,
            "return": [],
            "arguments": {
                "tokens": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/exceptions.py": {
        "ParseBaseException.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "pstr": [],
                "loc": [],
                "msg": [],
                "elem": []
            }
        },
        "ParseBaseException.explain_exception": {
            "name": "explain_exception",
            "location": 42,
            "return": [],
            "arguments": {
                "exc": [],
                "depth": []
            }
        },
        "ParseBaseException._from_exception": {
            "name": "_from_exception",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "pe": []
            }
        },
        "ParseBaseException.line": {
            "name": "line",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.lineno": {
            "name": "lineno",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.col": {
            "name": "col",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.column": {
            "name": "column",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__str__": {
            "name": "__str__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.__repr__": {
            "name": "__repr__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseBaseException.mark_input_line": {
            "name": "mark_input_line",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "marker_string": []
            }
        },
        "ParseBaseException.explain": {
            "name": "explain",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "depth": []
            }
        },
        "RecursiveGrammarException.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "parseElementList": []
            }
        },
        "RecursiveGrammarException.__str__": {
            "name": "__str__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/helpers.py": {
        "delimited_list": {
            "name": "delimited_list",
            "location": 14,
            "return": [],
            "arguments": {
                "expr": [],
                "delim": [],
                "combine": [],
                "min": [],
                "max": []
            }
        },
        "counted_array": {
            "name": "counted_array",
            "location": 71,
            "return": [],
            "arguments": {
                "expr": [],
                "int_expr": []
            }
        },
        "match_previous_literal": {
            "name": "match_previous_literal",
            "location": 131,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "match_previous_expr": {
            "name": "match_previous_expr",
            "location": 164,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "one_of": {
            "name": "one_of",
            "location": 200,
            "return": [],
            "arguments": {
                "strs": [],
                "caseless": [],
                "use_regex": [],
                "as_keyword": []
            }
        },
        "dict_of": {
            "name": "dict_of",
            "location": 327,
            "return": [],
            "arguments": {
                "key": [],
                "value": []
            }
        },
        "original_text_for": {
            "name": "original_text_for",
            "location": 367,
            "return": [],
            "arguments": {
                "expr": [],
                "as_string": []
            }
        },
        "ungroup": {
            "name": "ungroup",
            "location": 420,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "locatedExpr": {
            "name": "locatedExpr",
            "location": 427,
            "return": [],
            "arguments": {
                "expr": []
            }
        },
        "nested_expr": {
            "name": "nested_expr",
            "location": 462,
            "return": [],
            "arguments": {
                "opener": [],
                "closer": [],
                "content": [],
                "ignore_expr": []
            }
        },
        "_makeTags": {
            "name": "_makeTags",
            "location": 590,
            "return": [],
            "arguments": {
                "tagStr": [],
                "xml": [],
                "suppress_LT": [],
                "suppress_GT": []
            }
        },
        "make_html_tags": {
            "name": "make_html_tags",
            "location": 648,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "make_xml_tags": {
            "name": "make_xml_tags",
            "location": 675,
            "return": [],
            "arguments": {
                "tag_str": []
            }
        },
        "replace_html_entity": {
            "name": "replace_html_entity",
            "location": 698,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "infix_notation": {
            "name": "infix_notation",
            "location": 726,
            "return": [],
            "arguments": {
                "base_expr": [],
                "op_list": [],
                "lpar": [],
                "rpar": []
            }
        },
        "indentedBlock": {
            "name": "indentedBlock",
            "location": 891,
            "return": [],
            "arguments": {
                "blockStatementExpr": [],
                "indentStack": [],
                "indent": [],
                "backup_stacks": []
            }
        },
        "counted_array.count_field_parse_action": {
            "name": "count_field_parse_action",
            "location": 115,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_literal.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 148,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater": {
            "name": "copy_token_to_repeater",
            "location": 183,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.reset_stack": {
            "name": "reset_stack",
            "location": 979,
            "return": [],
            "arguments": {}
        },
        "indentedBlock.checkPeerIndent": {
            "name": "checkPeerIndent",
            "location": 982,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkSubIndent": {
            "name": "checkSubIndent",
            "location": 991,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "indentedBlock.checkUnindent": {
            "name": "checkUnindent",
            "location": 998,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "match_previous_expr.copy_token_to_repeater.must_match_these_tokens": {
            "name": "must_match_these_tokens",
            "location": 186,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "original_text_for.extractText": {
            "name": "extractText",
            "location": 411,
            "return": [],
            "arguments": {
                "s": [],
                "l": [],
                "t": []
            }
        },
        "infix_notation._FB.parseImpl": {
            "name": "parseImpl",
            "location": 808,
            "return": [],
            "arguments": {
                "self": [],
                "instring": [],
                "loc": [],
                "doActions": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/results.py": {
        "_ParseResultsWithOffset.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": []
            }
        },
        "_ParseResultsWithOffset.__getitem__": {
            "name": "__getitem__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "_ParseResultsWithOffset.__getstate__": {
            "name": "__getstate__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ParseResultsWithOffset.__setstate__": {
            "name": "__setstate__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__new__": {
            "name": "__new__",
            "location": 136,
            "return": [],
            "arguments": {
                "cls": [],
                "toklist": [],
                "name": []
            }
        },
        "ParseResults.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "toklist": [],
                "name": [],
                "asList": [],
                "modal": [],
                "isinstance": []
            }
        },
        "ParseResults.__getitem__": {
            "name": "__getitem__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__setitem__": {
            "name": "__setitem__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": [],
                "isinstance": []
            }
        },
        "ParseResults.__delitem__": {
            "name": "__delitem__",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ParseResults.__contains__": {
            "name": "__contains__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "ParseResults.__len__": {
            "name": "__len__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__bool__": {
            "name": "__bool__",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__iter__": {
            "name": "__iter__",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__reversed__": {
            "name": "__reversed__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.keys": {
            "name": "keys",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.values": {
            "name": "values",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.items": {
            "name": "items",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.haskeys": {
            "name": "haskeys",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.pop": {
            "name": "pop",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get": {
            "name": "get",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default_value": []
            }
        },
        "ParseResults.insert": {
            "name": "insert",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "ins_string": []
            }
        },
        "ParseResults.append": {
            "name": "append",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ParseResults.extend": {
            "name": "extend",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "itemseq": []
            }
        },
        "ParseResults.clear": {
            "name": "clear",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getattr__": {
            "name": "__getattr__",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParseResults.__add__": {
            "name": "__add__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__iadd__": {
            "name": "__iadd__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__radd__": {
            "name": "__radd__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ParseResults.__repr__": {
            "name": "__repr__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__str__": {
            "name": "__str__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults._asStringList": {
            "name": "_asStringList",
            "location": 473,
            "return": [],
            "arguments": {
                "self": [],
                "sep": []
            }
        },
        "ParseResults.as_list": {
            "name": "as_list",
            "location": 484,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.as_dict": {
            "name": "as_dict",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.copy": {
            "name": "copy",
            "location": 533,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.get_name": {
            "name": "get_name",
            "location": 544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.dump": {
            "name": "dump",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "indent": [],
                "full": [],
                "include_list": [],
                "_depth": []
            }
        },
        "ParseResults.pprint": {
            "name": "pprint",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__getstate__": {
            "name": "__getstate__",
            "location": 703,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__setstate__": {
            "name": "__setstate__",
            "location": 714,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "ParseResults.__getnewargs__": {
            "name": "__getnewargs__",
            "location": 722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.__dir__": {
            "name": "__dir__",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParseResults.from_dict": {
            "name": "from_dict",
            "location": 729,
            "return": [],
            "arguments": {
                "cls": [],
                "other": [],
                "name": []
            }
        },
        "ParseResults.List.__new__": {
            "name": "__new__",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "contained": []
            }
        },
        "ParseResults.as_dict.to_item": {
            "name": "to_item",
            "location": 525,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.from_dict.is_iterable": {
            "name": "is_iterable",
            "location": 736,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ParseResults.get_name.find_in_parent": {
            "name": "find_in_parent",
            "location": 574,
            "return": [],
            "arguments": {
                "sub": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/testing.py": {
        "pyparsing_test.with_line_numbers": {
            "name": "with_line_numbers",
            "location": 238,
            "return": [],
            "arguments": {
                "s": [],
                "start_line": [],
                "end_line": [],
                "expand_tabs": [],
                "eol_mark": [],
                "mark_spaces": [],
                "mark_control": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.save": {
            "name": "save",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.restore": {
            "name": "restore",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.copy": {
            "name": "copy",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__enter__": {
            "name": "__enter__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.reset_pyparsing_context.__exit__": {
            "name": "__exit__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseResultsEquals": {
            "name": "assertParseResultsEquals",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "expected_list": [],
                "expected_dict": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckList": {
            "name": "assertParseAndCheckList",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_list": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertParseAndCheckDict": {
            "name": "assertParseAndCheckDict",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "expr": [],
                "test_string": [],
                "expected_dict": [],
                "msg": [],
                "verbose": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRunTestResults": {
            "name": "assertRunTestResults",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "run_tests_report": [],
                "expected_parse_results": [],
                "msg": []
            }
        },
        "pyparsing_test.TestParseResultsAsserts.assertRaisesParseException": {
            "name": "assertRaisesParseException",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "msg": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/unicode.py": {
        "_lazyclassproperty.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "_lazyclassproperty.__get__": {
            "name": "__get__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "cls": []
            }
        },
        "unicode_set._chars_for_ranges": {
            "name": "_chars_for_ranges",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.printables": {
            "name": "printables",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphas": {
            "name": "alphas",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.nums": {
            "name": "nums",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.alphanums": {
            "name": "alphanums",
            "location": 81,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identchars": {
            "name": "identchars",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "unicode_set.identbodychars": {
            "name": "identbodychars",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/util.py": {
        "col": {
            "name": "col",
            "location": 41,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "lineno": {
            "name": "lineno",
            "location": 58,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "line": {
            "name": "line",
            "location": 72,
            "return": [],
            "arguments": {
                "loc": [],
                "strg": []
            }
        },
        "_escape_regex_range_chars": {
            "name": "_escape_regex_range_chars",
            "location": 173,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_collapse_string_to_ranges": {
            "name": "_collapse_string_to_ranges",
            "location": 182,
            "return": [],
            "arguments": {
                "s": [],
                "re_escape": []
            }
        },
        "_flatten": {
            "name": "_flatten",
            "location": 228,
            "return": [],
            "arguments": {
                "ll": []
            }
        },
        "__config_flags._set": {
            "name": "_set",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [],
                "dname": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FifoCache.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "LRUMemo.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "capacity": []
            }
        },
        "LRUMemo.__getitem__": {
            "name": "__getitem__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.__setitem__": {
            "name": "__setitem__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "LRUMemo.__delitem__": {
            "name": "__delitem__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LRUMemo.clear": {
            "name": "clear",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnboundedMemo.__delitem__": {
            "name": "__delitem__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "_collapse_string_to_ranges.is_consecutive": {
            "name": "is_consecutive",
            "location": 185,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.escape_re_range_char": {
            "name": "escape_re_range_char",
            "location": 196,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_collapse_string_to_ranges.no_escape_re_range_char": {
            "name": "no_escape_re_range_char",
            "location": 199,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "_UnboundedCache.__init__.get": {
            "name": "get",
            "location": 87,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_UnboundedCache.__init__.set_": {
            "name": "set_",
            "location": 90,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_UnboundedCache.__init__.clear": {
            "name": "clear",
            "location": 93,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "_FifoCache.__init__.get": {
            "name": "get",
            "location": 108,
            "return": [],
            "arguments": {
                "_": [],
                "key": []
            }
        },
        "_FifoCache.__init__.set_": {
            "name": "set_",
            "location": 111,
            "return": [],
            "arguments": {
                "_": [],
                "key": [],
                "value": []
            }
        },
        "_FifoCache.__init__.clear": {
            "name": "clear",
            "location": 116,
            "return": [],
            "arguments": {
                "_": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/__init__.py": {
        "version_info.__version__": {
            "name": "__version__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__str__": {
            "name": "__str__",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "version_info.__repr__": {
            "name": "__repr__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/pyparsing/diagram/__init__.py": {
        "railroad_to_html": {
            "name": "railroad_to_html",
            "location": 130,
            "return": [],
            "arguments": {
                "diagrams": []
            }
        },
        "resolve_partial": {
            "name": "resolve_partial",
            "location": 149,
            "return": [],
            "arguments": {
                "partial": []
            }
        },
        "to_railroad": {
            "name": "to_railroad",
            "location": 165,
            "return": [],
            "arguments": {
                "element": [],
                "diagram_kwargs": [],
                "vertical": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "_should_vertical": {
            "name": "_should_vertical",
            "location": 223,
            "return": [],
            "arguments": {
                "specification": [],
                "exprs": []
            }
        },
        "_worth_extracting": {
            "name": "_worth_extracting",
            "location": 375,
            "return": [],
            "arguments": {
                "element": []
            }
        },
        "_apply_diagram_item_enhancements": {
            "name": "_apply_diagram_item_enhancements",
            "location": 384,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "_visible_exprs": {
            "name": "_visible_exprs",
            "location": 428,
            "return": [],
            "arguments": {
                "exprs": []
            }
        },
        "_to_diagram_element": {
            "name": "_to_diagram_element",
            "location": 442,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        },
        "EachItem.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnnotatedItem.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "item": []
            }
        },
        "EditablePartial.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "func": [],
                "args": [],
                "kwargs": []
            }
        },
        "EditablePartial.from_call": {
            "name": "from_call",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": [],
                "func": []
            }
        },
        "EditablePartial.name": {
            "name": "name",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditablePartial.__call__": {
            "name": "__call__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementState.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "element": [],
                "converted": [],
                "parent": [],
                "number": [],
                "name": [],
                "parent_index": []
            }
        },
        "ElementState.mark_for_extraction": {
            "name": "mark_for_extraction",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": [],
                "state": [],
                "name": [],
                "force": []
            }
        },
        "ConverterState.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "diagram_kwargs": []
            }
        },
        "ConverterState.__setitem__": {
            "name": "__setitem__",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "ConverterState.__getitem__": {
            "name": "__getitem__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__delitem__": {
            "name": "__delitem__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.__contains__": {
            "name": "__contains__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConverterState.generate_unnamed": {
            "name": "generate_unnamed",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.generate_index": {
            "name": "generate_index",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConverterState.extract_into_diagram": {
            "name": "extract_into_diagram",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "el_id": []
            }
        },
        "_apply_diagram_item_enhancements._inner": {
            "name": "_inner",
            "location": 391,
            "return": [],
            "arguments": {
                "element": [],
                "parent": [],
                "lookup": [],
                "vertical": [],
                "index": [],
                "name_hint": [],
                "show_results_names": [],
                "show_groups": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/tomli/_parser.py": {
        "load": {
            "name": "load",
            "location": 57,
            "return": [],
            "arguments": {
                "__fp": []
            }
        },
        "loads": {
            "name": "loads",
            "location": 69,
            "return": [],
            "arguments": {
                "__s": []
            }
        },
        "skip_chars": {
            "name": "skip_chars",
            "location": 232,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "chars": []
            }
        },
        "skip_until": {
            "name": "skip_until",
            "location": 241,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "expect": []
            }
        },
        "skip_comment": {
            "name": "skip_comment",
            "location": 263,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "skip_comments_and_array_ws": {
            "name": "skip_comments_and_array_ws",
            "location": 275,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "create_dict_rule": {
            "name": "create_dict_rule",
            "location": 284,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "create_list_rule": {
            "name": "create_list_rule",
            "location": 302,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "key_value_rule": {
            "name": "key_value_rule",
            "location": 323,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": [],
                "header": [],
                "parse_float": []
            }
        },
        "parse_key_value_pair": {
            "name": "parse_key_value_pair",
            "location": 357,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_key": {
            "name": "parse_key",
            "location": 373,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_key_part": {
            "name": "parse_key_part",
            "location": 391,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_one_line_basic_str": {
            "name": "parse_one_line_basic_str",
            "location": 407,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_array": {
            "name": "parse_array",
            "location": 412,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_inline_table": {
            "name": "parse_inline_table",
            "location": 436,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_basic_str_escape": {
            "name": "parse_basic_str_escape",
            "location": 468,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str_escape_multiline": {
            "name": "parse_basic_str_escape_multiline",
            "location": 497,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_hex_char": {
            "name": "parse_hex_char",
            "location": 501,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "hex_len": []
            }
        },
        "parse_literal_str": {
            "name": "parse_literal_str",
            "location": 512,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_multiline_str": {
            "name": "parse_multiline_str",
            "location": 521,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str": {
            "name": "parse_basic_str",
            "location": 552,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_value": {
            "name": "parse_value",
            "location": 584,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "suffixed_err": {
            "name": "suffixed_err",
            "location": 652,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "msg": []
            }
        },
        "is_unicode_scalar_value": {
            "name": "is_unicode_scalar_value",
            "location": 669,
            "return": [],
            "arguments": {
                "codepoint": []
            }
        },
        "make_safe_parse_float": {
            "name": "make_safe_parse_float",
            "location": 673,
            "return": [],
            "arguments": {
                "parse_float": []
            }
        },
        "Flags.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags.add_pending": {
            "name": "add_pending",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "Flags.finalize_pending": {
            "name": "finalize_pending",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags.unset_all": {
            "name": "unset_all",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Flags.set": {
            "name": "set",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "Flags.is_": {
            "name": "is_",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "NestedDict.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedDict.get_or_create_nest": {
            "name": "get_or_create_nest",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "NestedDict.append_nest_to_list": {
            "name": "append_nest_to_list",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "suffixed_err.coord_repr": {
            "name": "coord_repr",
            "location": 656,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "make_safe_parse_float.safe_parse_float": {
            "name": "safe_parse_float",
            "location": 685,
            "return": [],
            "arguments": {
                "float_str": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/tomli/_re.py": {
        "match_to_datetime": {
            "name": "match_to_datetime",
            "location": 52,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "cached_tz": {
            "name": "cached_tz",
            "location": 88,
            "return": [],
            "arguments": {
                "hour_str": [],
                "minute_str": [],
                "sign_str": []
            }
        },
        "match_to_localtime": {
            "name": "match_to_localtime",
            "location": 98,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "match_to_number": {
            "name": "match_to_number",
            "location": 104,
            "return": [],
            "arguments": {
                "match": [],
                "parse_float": []
            }
        }
    },
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/tomli/_types.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/setuptools/_vendor/tomli/__init__.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/_distutils_hack/override.py": {},
    "3d-ascii-game-master/venv/Lib/site-packages/_distutils_hack/__init__.py": {
        "warn_distutils_present": {
            "name": "warn_distutils_present",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "clear_distutils": {
            "name": "clear_distutils",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "enabled": {
            "name": "enabled",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "ensure_local_distutils": {
            "name": "ensure_local_distutils",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "do_override": {
            "name": "do_override",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "add_shim": {
            "name": "add_shim",
            "location": 202,
            "return": [],
            "arguments": {}
        },
        "insert_shim": {
            "name": "insert_shim",
            "location": 214,
            "return": [],
            "arguments": {}
        },
        "remove_shim": {
            "name": "remove_shim",
            "location": 218,
            "return": [],
            "arguments": {}
        },
        "_TrivialRe.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_TrivialRe.match": {
            "name": "match",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "DistutilsMetaFinder.find_spec": {
            "name": "find_spec",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [],
                "path": [],
                "target": []
            }
        },
        "DistutilsMetaFinder.spec_for_distutils": {
            "name": "spec_for_distutils",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistutilsMetaFinder.is_cpython": {
            "name": "is_cpython",
            "location": 133,
            "return": [],
            "arguments": {}
        },
        "DistutilsMetaFinder.spec_for_pip": {
            "name": "spec_for_pip",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DistutilsMetaFinder.pip_imported_during_build": {
            "name": "pip_imported_during_build",
            "location": 151,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "DistutilsMetaFinder.frame_file_is_setup": {
            "name": "frame_file_is_setup",
            "location": 162,
            "return": [],
            "arguments": {
                "frame": []
            }
        },
        "DistutilsMetaFinder.spec_for_sensitive_tests": {
            "name": "spec_for_sensitive_tests",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "shim.__enter__": {
            "name": "__enter__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "shim.__exit__": {
            "name": "__exit__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "exc": [],
                "value": [],
                "tb": []
            }
        },
        "DistutilsMetaFinder.spec_for_distutils.DistutilsLoader.create_module": {
            "name": "create_module",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "spec": []
            }
        },
        "DistutilsMetaFinder.spec_for_distutils.DistutilsLoader.exec_module": {
            "name": "exec_module",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        }
    }
}
{
    "Bothanasius-master/.ycm_extra_conf.py": {
        "Settings": {
            "name": "Settings",
            "location": 1,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/bothanasius-bot.py": {},
    "Bothanasius-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "Bothanasius-master/alembic/versions/7254a2072faf_add_invite_prefs_column.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/alembic/versions/73084a3640c5_add_self_roles.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "LTreeType.get_col_spec": {
            "name": "get_col_spec",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "LTreeType.bind_processor": {
            "name": "bind_processor",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "dialect": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "LTreeType.result_processor": {
            "name": "result_processor",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "dialect": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Iterator"
                ],
                "coltype": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Iterator"
                ]
            }
        },
        "LTreeType.bind_processor.process": {
            "name": "process",
            "location": 24,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "LTreeType.result_processor.process": {
            "name": "process",
            "location": 29,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "Bothanasius-master/alembic/versions/7887609c4179_add_delayed_actions.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/alembic/versions/b7fae3499a2b_add_time_out_role_to_guild_prefs.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/alembic/versions/c7b49d6f2948_initial_structure.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/alembic/versions/cc98ae4b1a4f_make_some_columns_not_nullable.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/alembic/versions/ce7e55233dee_add_created_on.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/bothanasius/bothanasius.py": {
        "Bothanasius.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Bothanasius.get_guild_member": {
            "name": "get_guild_member",
            "location": 79,
            "return": [
                "tuple[None]",
                "tuple[typing.Union[str,list[str],int,None]]"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "str"
                ],
                "member_id": [
                    "int",
                    "str"
                ]
            }
        },
        "Bothanasius.__restart_action_loop": {
            "name": "__restart_action_loop",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bothanasius-master/bothanasius/checks.py": {
        "check_guild_only": {
            "name": "check_guild_only",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/context.py": {},
    "Bothanasius-master/bothanasius/run.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bothanasius-master/bothanasius/__init__.py": {},
    "Bothanasius-master/bothanasius/cogs/admin.py": {
        "setup": {
            "name": "setup",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Administration.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/cogs/linked_roles.py": {
        "setup": {
            "name": "setup",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "LinkedRoles.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/cogs/meta.py": {
        "setup": {
            "name": "setup",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Meta.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/cogs/mod.py": {
        "setup": {
            "name": "setup",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Moderation.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/cogs/roles.py": {
        "setup": {
            "name": "setup",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "NotAssignable.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ]
            }
        },
        "Roles.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "Bothanasius-master/bothanasius/cogs/__init__.py": {},
    "Bothanasius-master/bothanasius/db/admin.py": {
        "InviteArgumentParser.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "defaults": [
                    "bool",
                    "float",
                    "str"
                ]
            }
        },
        "InviteArgumentParser.error": {
            "name": "error",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "int"
                ]
            }
        },
        "GuildPrefs.guild": {
            "name": "guild",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GuildPrefs.guild_admin_roles": {
            "name": "guild_admin_roles",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GuildPrefs.guild_mod_roles": {
            "name": "guild_mod_roles",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GuildPrefs.guild_mute_role": {
            "name": "guild_mute_role",
            "location": 128,
            "return": [
                "str",
                "tuple[typing.Union[typing.Literal,typing.Literal]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GuildPrefs.guild_time_out_role": {
            "name": "guild_time_out_role",
            "location": 137,
            "return": [
                "str",
                "int",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bothanasius-master/bothanasius/db/base.py": {
        "visit_LTREE": {
            "name": "visit_LTREE",
            "location": 367,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "visit_LQUERY": {
            "name": "visit_LQUERY",
            "location": 371,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "visit_LTXTQUERY": {
            "name": "visit_LTXTQUERY",
            "location": 375,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "DateTime.process_bind_param": {
            "name": "process_bind_param",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "None",
                    "str"
                ],
                "dialect": [
                    "int",
                    "tuple[typing.Union[str,int]]",
                    "complex",
                    "list[]"
                ]
            }
        },
        "DateTime.process_result_value": {
            "name": "process_result_value",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "None",
                    "str",
                    "set[int]",
                    "int"
                ],
                "dialect": [
                    "str",
                    "tuple[typing.Union[typing.Any,typing.Any]]",
                    "None",
                    "typing.Callable[, ]",
                    "dict[, ]"
                ]
            }
        },
        "Ltree.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path_or_ltree": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "Ltree.validate": {
            "name": "validate",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "list[str]",
                    "None"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Ltree.__len__": {
            "name": "__len__",
            "location": 167,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ltree.index": {
            "name": "index",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "other": [
                    "int"
                ]
            }
        },
        "Ltree.descendant_of": {
            "name": "descendant_of",
            "location": 177,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "bool",
                    "None",
                    "typing.Iterable[typing.Type]"
                ]
            }
        },
        "Ltree.ancestor_of": {
            "name": "ancestor_of",
            "location": 188,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "typing.Type",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "Ltree.__getitem__": {
            "name": "__getitem__",
            "location": 199,
            "return": [
                "Ltree"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "int",
                    "str"
                ]
            }
        },
        "Ltree.lca": {
            "name": "lca",
            "location": 207,
            "return": [
                "None",
                "Ltree"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ltree.__add__": {
            "name": "__add__",
            "location": 228,
            "return": [
                "Ltree"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str"
                ]
            }
        },
        "Ltree.__radd__": {
            "name": "__radd__",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "other": [
                    "dict[, ]",
                    "typing.AbstractSet"
                ]
            }
        },
        "Ltree.__eq__": {
            "name": "__eq__",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Ltree.__hash__": {
            "name": "__hash__",
            "location": 242,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ltree.__ne__": {
            "name": "__ne__",
            "location": 245,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "list[str]",
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "Ltree.__repr__": {
            "name": "__repr__",
            "location": 248,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ltree.__unicode__": {
            "name": "__unicode__",
            "location": 251,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ltree.__str__": {
            "name": "__str__",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ltree.__contains__": {
            "name": "__contains__",
            "location": 257,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "LtreeType.bind_processor": {
            "name": "bind_processor",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "dialect": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "LtreeType.result_processor": {
            "name": "result_processor",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "dialect": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Iterator"
                ],
                "coltype": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Iterator"
                ]
            }
        },
        "LtreeType.literal_processor": {
            "name": "literal_processor",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "dialect": [
                    "typing.Callable[, ]",
                    "str",
                    "int"
                ]
            }
        },
        "LtreeType._coerce": {
            "name": "_coerce",
            "location": 336,
            "return": [
                "Ltree"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "list[float]",
                    "bool",
                    "typing.Any",
                    "float"
                ]
            }
        },
        "LtreeType.coercion_listener": {
            "name": "coercion_listener",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "None",
                    "BaseException",
                    "typing.Callable[c, None]",
                    "typing.Iterable[float]",
                    "bool"
                ],
                "value": [
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ],
                "oldvalue": [
                    "None",
                    "BaseException",
                    "typing.Callable[c, None]",
                    "typing.Iterable[float]",
                    "bool"
                ],
                "initiator": [
                    "None",
                    "BaseException",
                    "typing.Callable[c, None]",
                    "typing.Iterable[float]",
                    "bool"
                ]
            }
        },
        "LtreeType.comparator_factory.ancestor_of": {
            "name": "ancestor_of",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LtreeType.comparator_factory.descendant_of": {
            "name": "descendant_of",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LtreeType.comparator_factory.lquery": {
            "name": "lquery",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LtreeType.comparator_factory.ltxtquery": {
            "name": "ltxtquery",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "LtreeType.bind_processor.process": {
            "name": "process",
            "location": 315,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "LtreeType.result_processor.process": {
            "name": "process",
            "location": 322,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "LtreeType.literal_processor.process": {
            "name": "process",
            "location": 328,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "Bothanasius-master/bothanasius/db/delayed_action.py": {},
    "Bothanasius-master/bothanasius/db/linked_roles.py": {},
    "Bothanasius-master/bothanasius/db/mod.py": {},
    "Bothanasius-master/bothanasius/db/roles.py": {},
    "Bothanasius-master/bothanasius/db/__init__.py": {}
}
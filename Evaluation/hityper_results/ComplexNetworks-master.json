{
    "ComplexNetworks-master/project/emails/common.py": {
        "join_values": {
            "name": "join_values",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "values": [
                    "str"
                ],
                "sep": [
                    "typing.Text"
                ]
            }
        }
    },
    "ComplexNetworks-master/project/emails/distributions.py": {
        "graph_instance": {
            "name": "graph_instance",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "edges_from_file": {
            "name": "edges_from_file",
            "location": 31,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "log_binning": {
            "name": "log_binning",
            "location": 40,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "counter_dict": [
                    "dict[, ]",
                    "dict[str, float]",
                    "dict[str, dict[, ]]"
                ],
                "bin_count": [
                    "int"
                ]
            }
        },
        "degrees_distribution": {
            "name": "degrees_distribution",
            "location": 60,
            "return": [
                "tuple[typing.Union[str,list[tuple[typing.Union[str,bool,typing.Any]]],int,dict[str, list[typing.Any]]]]",
                "None"
            ],
            "arguments": {
                "graph": [],
                "show": [
                    "bool"
                ],
                "return_values": [
                    "bool"
                ]
            }
        },
        "average_degree": {
            "name": "average_degree",
            "location": 82,
            "return": [
                "float"
            ],
            "arguments": {
                "graph": []
            }
        },
        "giant_components_distribution": {
            "name": "giant_components_distribution",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "dump_reduced": [
                    "bool"
                ]
            }
        },
        "clustering_distribution_from_gephi": {
            "name": "clustering_distribution_from_gephi",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "None",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "betweenness_distribution_from_gephi": {
            "name": "betweenness_distribution_from_gephi",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "None",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "dump_graph": {
            "name": "dump_graph",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "str",
                    "list[int]",
                    "bytes",
                    "dict[str, str]"
                ],
                "path": [
                    "str",
                    "list[int]",
                    "bytes",
                    "dict[str, str]"
                ]
            }
        },
        "graph_from_gephi_edge_list": {
            "name": "graph_from_gephi_edge_list",
            "location": 157,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "all_paths_from": {
            "name": "all_paths_from",
            "location": 164,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "graph": [],
                "from_idx": [
                    "int",
                    "list[dict[, ]]",
                    "list[int]",
                    "float",
                    "list[str]"
                ]
            }
        },
        "calculate_shortest_paths": {
            "name": "calculate_shortest_paths",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": []
            }
        },
        "shortest_paths_distribution": {
            "name": "shortest_paths_distribution",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "assortativity_distribution": {
            "name": "assortativity_distribution",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "str",
                    "typing.Hashable",
                    "float"
                ]
            }
        },
        "power_law": {
            "name": "power_law",
            "location": 228,
            "return": [],
            "arguments": {
                "graph": []
            }
        },
        "pearson_correlation": {
            "name": "pearson_correlation",
            "location": 235,
            "return": [],
            "arguments": {
                "graph": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "ComplexNetworks-master/project/emails/model.py": {
        "simple_barabasi_albert": {
            "name": "simple_barabasi_albert",
            "location": 19,
            "return": [],
            "arguments": {
                "graph": [],
                "edges_count": [
                    "list[]",
                    "int",
                    "str",
                    "set[int]"
                ]
            }
        },
        "extended_barabasi_albert": {
            "name": "extended_barabasi_albert",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "path": [
                    "str",
                    "list[]",
                    "list[dict[, ]]"
                ]
            }
        },
        "extended_ba_distributions": {
            "name": "extended_ba_distributions",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        },
        "compare_degrees_distributions": {
            "name": "compare_degrees_distributions",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "source_graph": [
                    "int",
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "set[]",
                    "str"
                ]
            }
        }
    },
    "ComplexNetworks-master/project/emails/robustness.py": {
        "graph_from_gephi_edge_list": {
            "name": "graph_from_gephi_edge_list",
            "location": 15,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "fail": {
            "name": "fail",
            "location": 22,
            "return": [],
            "arguments": {
                "src_graph": [
                    "str"
                ]
            }
        },
        "attack_degree": {
            "name": "attack_degree",
            "location": 30,
            "return": [],
            "arguments": {
                "src_graph": [
                    "str"
                ]
            }
        },
        "diameter_and_avg_path_length": {
            "name": "diameter_and_avg_path_length",
            "location": 41,
            "return": [
                "tuple[typing.Union[int,float]]"
            ],
            "arguments": {
                "graph": []
            }
        },
        "giant_component_fraction": {
            "name": "giant_component_fraction",
            "location": 56,
            "return": [
                "float"
            ],
            "arguments": {
                "graph": []
            }
        },
        "robustness_by_attack": {
            "name": "robustness_by_attack",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "src_graph": [
                    "str"
                ],
                "nodes_to_remove": [
                    "int",
                    "None"
                ],
                "measure_frequency": [
                    "int",
                    "str",
                    "set[str]",
                    "typing.Mapping",
                    "None",
                    "typing.Type"
                ]
            }
        },
        "robustness_by_fail": {
            "name": "robustness_by_fail",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "src_graph": [
                    "str"
                ],
                "number_of_runs": [
                    "int",
                    "str",
                    "float"
                ],
                "nodes_to_remove": [
                    "int"
                ],
                "measure_frequency": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "dump_history": {
            "name": "dump_history",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "diameters": [],
                "paths": [
                    "list[]",
                    "bool",
                    "str",
                    "list[str]"
                ],
                "ga_fractions": [
                    "list[]",
                    "bool",
                    "str"
                ],
                "fail_mode": [
                    "bool"
                ]
            }
        },
        "normalized_robustness": {
            "name": "normalized_robustness",
            "location": 139,
            "return": [
                "list[float]"
            ],
            "arguments": {
                "data": [
                    "list[float]",
                    "bytes",
                    "list[]"
                ]
            }
        },
        "plot_robustness": {
            "name": "plot_robustness",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ComplexNetworks-master/project/emails/sir_model.py": {
        "reset": {
            "name": "reset",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "initialise_infection": {
            "name": "initialise_infection",
            "location": 44,
            "return": [],
            "arguments": {
                "graph": [],
                "num_to_infect": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "transmission_model_factory": {
            "name": "transmission_model_factory",
            "location": 58,
            "return": [],
            "arguments": {
                "beta": [
                    "float"
                ],
                "alpha": [
                    "float"
                ]
            }
        },
        "apply_infection": {
            "name": "apply_infection",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "bool",
                    "float",
                    "None",
                    "list[str]"
                ],
                "list_of_newly_infected": [
                    "list[]"
                ],
                "list_of_newly_removed": [
                    "list[]"
                ]
            }
        },
        "execute_one_step": {
            "name": "execute_one_step",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "str"
                ],
                "model": [
                    "str",
                    "list[list[typing.Any]]"
                ]
            }
        },
        "get_infection_stats": {
            "name": "get_infection_stats",
            "location": 115,
            "return": [
                "tuple[list[typing.Union[typing.Text,int]]]"
            ],
            "arguments": {
                "graph": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "print_infection_stats": {
            "name": "print_infection_stats",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [
                    "int",
                    "None",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "run_spread_simulation": {
            "name": "run_spread_simulation",
            "location": 143,
            "return": [
                "tuple[typing.Union[list[int],int]]"
            ],
            "arguments": {
                "graph": [
                    "bool"
                ],
                "model": [
                    "int",
                    "list[dict[str, typing.Any]]"
                ],
                "initial_infection_count": [
                    "int",
                    "list[dict[str, typing.Any]]"
                ],
                "run_visualise": [
                    "bool"
                ]
            }
        },
        "plot_infection": {
            "name": "plot_infection",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "susceptible": [],
                "infected": [],
                "removed": [
                    "list[int]",
                    "str",
                    "float"
                ],
                "graph": []
            }
        },
        "draw_network_to_file": {
            "name": "draw_network_to_file",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "pos": [
                    "dict[, ]",
                    "int",
                    "str",
                    "float"
                ],
                "t": [
                    "int",
                    "str",
                    "list[str]",
                    "None",
                    "typing.AnyStr"
                ],
                "initially_infected": [
                    "int",
                    "list[float]",
                    "dict[str, typing.Any]",
                    "list[str]"
                ]
            }
        },
        "dump_sir_history": {
            "name": "dump_sir_history",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "s": [
                    "dict[, ]",
                    "str",
                    "tuple[str]"
                ],
                "i": [
                    "dict[, ]",
                    "str",
                    "tuple[str]"
                ],
                "r": [
                    "dict[, ]",
                    "str",
                    "tuple[str]"
                ],
                "end_time": [
                    "int",
                    "float",
                    "str"
                ],
                "initial_infected": [
                    "dict[, ]",
                    "str",
                    "tuple[str]"
                ]
            }
        },
        "plot_sir_model_results": {
            "name": "plot_sir_model_results",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "transmission_model_factory.m": {
            "name": "m",
            "location": 69,
            "return": [
                "tuple[typing.Union[list[],bool]]"
            ],
            "arguments": {
                "n": [],
                "graph": []
            }
        }
    }
}
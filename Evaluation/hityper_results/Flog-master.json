{
    "Flog-master/flaskblog/admin.py": {
        "index": {
            "name": "index",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "init_app": {
            "name": "init_app",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Flog-master/flaskblog/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 18,
            "return": [
                "Flask"
            ],
            "arguments": {
                "env": [
                    "None",
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "create_app.get_locale": {
            "name": "get_locale",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "create_app.get_user": {
            "name": "get_user",
            "location": 50,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "create_app.shell_context": {
            "name": "shell_context",
            "location": 54,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {}
        }
    },
    "Flog-master/flaskblog/atom.py": {
        "_make_text_block": {
            "name": "_make_text_block",
            "location": 28,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [],
                "content": [],
                "content_type": [
                    "None"
                ]
            }
        },
        "format_iso8601": {
            "name": "format_iso8601",
            "location": 42,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "AtomFeed.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "None"
                ],
                "entries": []
            }
        },
        "AtomFeed.add": {
            "name": "add",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomFeed.__repr__": {
            "name": "__repr__",
            "location": 145,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomFeed.generate": {
            "name": "generate",
            "location": 152,
            "return": [
                "typing.Generator[typing.Text]",
                "typing.Generator[]",
                "typing.Generator[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomFeed.to_string": {
            "name": "to_string",
            "location": 206,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomFeed.get_response": {
            "name": "get_response",
            "location": 210,
            "return": [
                "BaseResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomFeed.__call__": {
            "name": "__call__",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "environ": [],
                "start_response": []
            }
        },
        "AtomFeed.__str__": {
            "name": "__str__",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FeedEntry.__init__": {
            "name": "__init__",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "None"
                ],
                "content": [
                    "None"
                ],
                "feed_url": [
                    "None"
                ]
            }
        },
        "FeedEntry.__repr__": {
            "name": "__repr__",
            "location": 297,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedEntry.generate": {
            "name": "generate",
            "location": 300,
            "return": [
                "typing.Generator[typing.Text]",
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedEntry.to_string": {
            "name": "to_string",
            "location": 335,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedEntry.__str__": {
            "name": "__str__",
            "location": 339,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Flog-master/flaskblog/cli.py": {
        "generate_on_fake_post": {
            "name": "generate_on_fake_post",
            "location": 11,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "reindex": {
            "name": "reindex",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fake_db": {
            "name": "fake_db",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "export_wxr": {
            "name": "export_wxr",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "init_app": {
            "name": "init_app",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Flog-master/flaskblog/config.py": {},
    "Flog-master/flaskblog/models.py": {
        "auto_delete_orphans": {
            "name": "auto_delete_orphans",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "attr": []
            }
        },
        "render_markdown": {
            "name": "render_markdown",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "mapper": [],
                "connection": [],
                "target": []
            }
        },
        "get_html": {
            "name": "get_html",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "mapper": [],
                "connection": [],
                "target": []
            }
        },
        "comment_html": {
            "name": "comment_html",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "mapper": [],
                "connection": [],
                "target": []
            }
        },
        "init_app": {
            "name": "init_app",
            "location": 388,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "auto_delete_orphans.delete_orphan_listener": {
            "name": "delete_orphan_listener",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "ctx": []
            }
        },
        "Post.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.to_dict": {
            "name": "to_dict",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "ensure_text": [
                    "bool"
                ]
            }
        },
        "Post.__repr__": {
            "name": "__repr__",
            "location": 105,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.previous": {
            "name": "previous",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Post.next": {
            "name": "next",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Post.excerpt": {
            "name": "excerpt",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Post.related_post": {
            "name": "related_post",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.dump_md": {
            "name": "dump_md",
            "location": 147,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.check_password": {
            "name": "check_password",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "User.display_name": {
            "name": "display_name",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_admin": {
            "name": "get_admin",
            "location": 208,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "User.avatar": {
            "name": "avatar",
            "location": 223,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.verify_auth_token": {
            "name": "verify_auth_token",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "token": []
            }
        },
        "User.generate_token": {
            "name": "generate_token",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "expiration": [
                    "int"
                ]
            }
        },
        "User.read_settings": {
            "name": "read_settings",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.write_settings": {
            "name": "write_settings",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "User.to_dict": {
            "name": "to_dict",
            "location": 253,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetOrNewMixin.get_one_or_new": {
            "name": "get_one_or_new",
            "location": 265,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 282,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.heat": {
            "name": "heat",
            "location": 286,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.__repr__": {
            "name": "__repr__",
            "location": 298,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__str__": {
            "name": "__str__",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Page.to_dict": {
            "name": "to_dict",
            "location": 321,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.children": {
            "name": "children",
            "location": 358,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.to_dict": {
            "name": "to_dict",
            "location": 367,
            "return": [
                "dict[typing.Text, dict[typing.Text, ]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Flog-master/flaskblog/tasks.py": {
        "with_app_context": {
            "name": "with_app_context",
            "location": 45,
            "return": [],
            "arguments": {
                "f": [
                    "str",
                    "bool"
                ]
            }
        },
        "notify_reply": {
            "name": "notify_reply",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "reply_to": [
                    "str"
                ],
                "comment": [
                    "str"
                ]
            }
        },
        "notify_comment": {
            "name": "notify_comment",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "author": [],
                "comment": [
                    "str"
                ]
            }
        },
        "background_task": {
            "name": "background_task",
            "location": 18,
            "return": [],
            "arguments": {
                "f": [
                    "str",
                    "bool"
                ]
            }
        },
        "with_app_context.wrapper": {
            "name": "wrapper",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "background_task.callback": {
            "name": "callback",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "result": []
            }
        },
        "background_task.wrapper": {
            "name": "wrapper",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "Flog-master/flaskblog/templating.py": {
        "date": {
            "name": "date",
            "location": 12,
            "return": [],
            "arguments": {
                "s": [],
                "format": [
                    "typing.Text"
                ]
            }
        },
        "get_current_time": {
            "name": "get_current_time",
            "location": 16,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {}
        },
        "text_part": {
            "name": "text_part",
            "location": 20,
            "return": [],
            "arguments": {
                "text": [],
                "find_str": [],
                "extra": [
                    "int"
                ]
            }
        },
        "blog_objects": {
            "name": "blog_objects",
            "location": 30,
            "return": [
                "dict[typing.Text, dict[typing.Text, str]]"
            ],
            "arguments": {}
        },
        "make_slugify": {
            "name": "make_slugify",
            "location": 43,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "render_markdown": {
            "name": "render_markdown",
            "location": 47,
            "return": [
                "Markup"
            ],
            "arguments": {
                "s": []
            }
        },
        "get_integrations": {
            "name": "get_integrations",
            "location": 51,
            "return": [
                "dict[typing.Text, dict[, dict[dict[typing.Text, ], ]]]"
            ],
            "arguments": {}
        },
        "init_app": {
            "name": "init_app",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Flog-master/flaskblog/utils.py": {
        "strip_tags": {
            "name": "strip_tags",
            "location": 4,
            "return": [],
            "arguments": {
                "text": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "Flog-master/flaskblog/views.py": {
        "load_site_config": {
            "name": "load_site_config",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "home": {
            "name": "home",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "post": {
            "name": "post",
            "location": 36,
            "return": [],
            "arguments": {
                "year": [
                    "str",
                    "list[]",
                    "typing.Sequence[str]",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "date": [
                    "str",
                    "list[]",
                    "typing.Sequence[str]",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "title": [
                    "str",
                    "list[]",
                    "typing.Sequence[str]",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "tag": {
            "name": "tag",
            "location": 53,
            "return": [],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "category": {
            "name": "category",
            "location": 63,
            "return": [],
            "arguments": {
                "cat_id": []
            }
        },
        "favicon": {
            "name": "favicon",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "feed": {
            "name": "feed",
            "location": 73,
            "return": [],
            "arguments": {}
        },
        "sitemap": {
            "name": "sitemap",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "not_found": {
            "name": "not_found",
            "location": 97,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "error": [
                    "Exception",
                    "str",
                    "list[str]",
                    "tuple[]"
                ]
            }
        },
        "search": {
            "name": "search",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "page": {
            "name": "page",
            "location": 112,
            "return": [],
            "arguments": {
                "slug": [
                    "str"
                ]
            }
        },
        "archive": {
            "name": "archive",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "comment": {
            "name": "comment",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "dump_articles": {
            "name": "dump_articles",
            "location": 153,
            "return": [],
            "arguments": {}
        },
        "init_app": {
            "name": "init_app",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "archive.grouper": {
            "name": "grouper",
            "location": 120,
            "return": [],
            "arguments": {
                "item": []
            }
        }
    },
    "Flog-master/flaskblog/__init__.py": {},
    "Flog-master/flaskblog/api/utils.py": {
        "verify_auth": {
            "name": "verify_auth",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "username_or_token": [
                    "str",
                    "None"
                ],
                "password": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "Flog-master/flaskblog/api/views.py": {
        "auth_exempt": {
            "name": "auth_exempt",
            "location": 20,
            "return": [],
            "arguments": {
                "view_func": []
            }
        },
        "authenticate_view": {
            "name": "authenticate_view",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "get_info": {
            "name": "get_info",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "change_password": {
            "name": "change_password",
            "location": 72,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "settings": {
            "name": "settings",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "theme": {
            "name": "theme",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "language": {
            "name": "language",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "categories": {
            "name": "categories",
            "location": 131,
            "return": [],
            "arguments": {}
        },
        "tags": {
            "name": "tags",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "cos_token": {
            "name": "cos_token",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "comment_list": {
            "name": "comment_list",
            "location": 304,
            "return": [],
            "arguments": {}
        },
        "delete_comment": {
            "name": "delete_comment",
            "location": 322,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "import_disqus_comment": {
            "name": "import_disqus_comment",
            "location": 328,
            "return": [],
            "arguments": {}
        },
        "search": {
            "name": "search",
            "location": 379,
            "return": [],
            "arguments": {}
        },
        "PostView.get": {
            "name": "get",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostView.post": {
            "name": "post",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostItemView.get": {
            "name": "get",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PostItemView.put": {
            "name": "put",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PostItemView.delete": {
            "name": "delete",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PageView.get": {
            "name": "get",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageView.post": {
            "name": "post",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageItemView.get": {
            "name": "get",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PageItemView.put": {
            "name": "put",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PageItemView.delete": {
            "name": "delete",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "IntegrationView.get": {
            "name": "get",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrationView.post": {
            "name": "post",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Flog-master/flaskblog/api/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Flog-master/flaskblog/auth/models.py": {
        "OAuth2Token.to_token": {
            "name": "to_token",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Flog-master/flaskblog/auth/oauth.py": {
        "fetch_token": {
            "name": "fetch_token",
            "location": 7,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "typing.Type",
                    "int",
                    "None"
                ]
            }
        },
        "update_token": {
            "name": "update_token",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "None",
                    "tuple[typing.Union[list[str],typing.Any,None,typing.Any,None]]",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "token": [],
                "refresh_token": [
                    "None",
                    "str",
                    "typing.Iterable[tuple[typing.Union[str,typing.Any]]]"
                ],
                "access_token": [
                    "None",
                    "str",
                    "typing.Iterable[tuple[typing.Union[str,typing.Any]]]",
                    "bytes"
                ]
            }
        }
    },
    "Flog-master/flaskblog/auth/views.py": {
        "login": {
            "name": "login",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "github_login": {
            "name": "github_login",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "github_auth": {
            "name": "github_auth",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "google_login": {
            "name": "google_login",
            "location": 88,
            "return": [],
            "arguments": {}
        },
        "google_auth": {
            "name": "google_auth",
            "location": 98,
            "return": [],
            "arguments": {}
        }
    },
    "Flog-master/flaskblog/auth/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Flog-master/flaskblog/md/extensions.py": {
        "PhotoSet.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "match": []
            }
        },
        "PhotoSet.match": {
            "name": "match",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "set[str]",
                    "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
                ],
                "source": [
                    "str",
                    "set[str]",
                    "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
                ]
            }
        },
        "PhotoSet.parse": {
            "name": "parse",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "bytes"
                ],
                "source": []
            }
        },
        "FlogRendererMixin.render_image": {
            "name": "render_image",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "dict[, ]",
                    "str",
                    "typing.OrderedDict",
                    "list[int]"
                ]
            }
        },
        "FlogRendererMixin.render_photo_set": {
            "name": "render_photo_set",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "str",
                    "list[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "FlogRendererMixin.render_fenced_code": {
            "name": "render_fenced_code",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "str",
                    "bool",
                    "float"
                ]
            }
        },
        "FlogRendererMixin._open_heading_group": {
            "name": "_open_heading_group",
            "location": 54,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlogRendererMixin._close_heading_group": {
            "name": "_close_heading_group",
            "location": 57,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlogRendererMixin._render_toc_item": {
            "name": "_render_toc_item",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "slug": [
                    "str",
                    "int",
                    "None"
                ],
                "text": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "FlogRendererMixin.render_toc": {
            "name": "render_toc",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "maxlevel": [
                    "int"
                ]
            }
        },
        "FlogRendererMixin.render_html_block": {
            "name": "render_html_block",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "element": [
                    "dict[str, typing.Any]",
                    "float",
                    "dict[str, typing.Iterable[typing.Any]]"
                ]
            }
        },
        "StrictHTMLRendererMixin.render_html_block": {
            "name": "render_html_block",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "element": [
                    "typing.Iterable[str]",
                    "str"
                ]
            }
        }
    },
    "Flog-master/flaskblog/md/__init__.py": {},
    "Flog-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "Flog-master/migrations/versions/5d5340d8c969_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Flog-master/tests/__init__.py": {}
}
{
    "HT_checksum_update-master/cx_setup.py": {
        "create_msi_tablename": {
            "name": "create_msi_tablename",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "python_name": [
                    "str"
                ],
                "fullname": [
                    "bool",
                    "str"
                ]
            }
        },
        "get_tests": {
            "name": "get_tests",
            "location": 20,
            "return": [
                "list[]"
            ],
            "arguments": {}
        }
    },
    "HT_checksum_update-master/setup.py": {},
    "HT_checksum_update-master/docs/source/conf.py": {},
    "HT_checksum_update-master/hathi_checksum/checksum_report.py": {
        "parse_checksum": {
            "name": "parse_checksum",
            "location": 8,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "line": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "extracts_checksums": {
            "name": "extracts_checksums",
            "location": 17,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "report": [
                    "str"
                ]
            }
        },
        "find_failing_checksums": {
            "name": "find_failing_checksums",
            "location": 24,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "report": [
                    "str",
                    "list[str]"
                ],
                "path": [
                    "None",
                    "str"
                ]
            }
        },
        "find_checksum_mismatch": {
            "name": "find_checksum_mismatch",
            "location": 49,
            "return": [
                "typing.Generator[tuple[str]]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_outdated_files": {
            "name": "get_outdated_files",
            "location": 58,
            "return": [
                "list[]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "HT_checksum_update-master/hathi_checksum/cli.py": {
        "create_message_list": {
            "name": "create_message_list",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "files": [
                    "list[tuple[]]",
                    "list[str]",
                    "dict[str, dict[str, str]]",
                    "set[str]",
                    "list[int]",
                    "bool"
                ]
            }
        },
        "get_parser": {
            "name": "get_parser",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "setup_logger": {
            "name": "setup_logger",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "logger": [
                    "str",
                    "bool",
                    "None"
                ],
                "debug_mode": [
                    "bool",
                    "list[str]",
                    "str",
                    "list[]"
                ],
                "log_file": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_message_list.sorter_function": {
            "name": "sorter_function",
            "location": 20,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "HT_checksum_update-master/hathi_checksum/package.py": {
        "get_dirs": {
            "name": "get_dirs",
            "location": 4,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "root": [
                    "tuple[typing.Union[int,int]]",
                    "None",
                    "float",
                    "str"
                ]
            }
        }
    },
    "HT_checksum_update-master/hathi_checksum/update_report.py": {
        "update_hash_value": {
            "name": "update_hash_value",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "checksum_file": [
                    "str"
                ],
                "target": [
                    "str",
                    "int",
                    "None"
                ],
                "new_hash": [
                    "str",
                    "None"
                ]
            }
        },
        "update_checksum": {
            "name": "update_checksum",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "checksum_file": [
                    "str"
                ],
                "target": [
                    "str",
                    "int",
                    "typing.Iterable[typing.Any]"
                ]
            }
        }
    },
    "HT_checksum_update-master/hathi_checksum/utils.py": {
        "ask": {
            "name": "ask",
            "location": 64,
            "return": [],
            "arguments": {
                "question": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "intro": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "calculate_md5": {
            "name": "calculate_md5",
            "location": 71,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "chunk_size": [
                    "int"
                ]
            }
        },
        "YesNo.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "question": [
                    "str",
                    "tuple['cirq.Qid']",
                    "float"
                ]
            }
        },
        "YesNo.do_yes": {
            "name": "do_yes",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.do_y": {
            "name": "do_y",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.do_no": {
            "name": "do_no",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.do_n": {
            "name": "do_n",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.do_quit": {
            "name": "do_quit",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.do_q": {
            "name": "do_q",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "YesNo.default": {
            "name": "default",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "float"
                ]
            }
        },
        "YesNo._abort": {
            "name": "_abort",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "YesNo._no": {
            "name": "_no",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "YesNo._yes": {
            "name": "_yes",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "HT_checksum_update-master/hathi_checksum/__init__.py": {},
    "HT_checksum_update-master/hathi_checksum/__main__.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "HT_checksum_update-master/hathi_checksum/__version__.py": {},
    "HT_checksum_update-master/tests/test_updater.py": {
        "md5_file": {
            "name": "md5_file",
            "location": 125,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_update_checksum": {
            "name": "test_update_checksum",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "md5_file": [
                    "str"
                ]
            }
        }
    },
    "HT_checksum_update-master/tests/__init__.py": {},
    "HT_checksum_update-master/update_yml/cli.py": {
        "parse_checksum": {
            "name": "parse_checksum",
            "location": 21,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "line": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "extracts_checksums": {
            "name": "extracts_checksums",
            "location": 30,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "report": [
                    "str"
                ]
            }
        },
        "calculate_md5": {
            "name": "calculate_md5",
            "location": 36,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "chunk_size": [
                    "int"
                ]
            }
        },
        "find_failing_checksums": {
            "name": "find_failing_checksums",
            "location": 47,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "report": [
                    "str"
                ]
            }
        },
        "find_checksum_mismatch": {
            "name": "find_checksum_mismatch",
            "location": 70,
            "return": [
                "typing.Generator[tuple[typing.Union[str,int]]]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_outdated_files": {
            "name": "get_outdated_files",
            "location": 103,
            "return": [
                "list[]"
            ],
            "arguments": {}
        }
    },
    "HT_checksum_update-master/update_yml/__main__.py": {}
}
{
    "Hauki-master/app.py": {
        "if_needs_oauth_redirect": {
            "name": "if_needs_oauth_redirect",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "csrf_token": {
            "name": "csrf_token",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "form_value": {
            "name": "form_value",
            "location": 73,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "form_attributes": {
            "name": "form_attributes",
            "location": 83,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "user_link": {
            "name": "user_link",
            "location": 93,
            "return": [],
            "arguments": {
                "user_name": []
            }
        },
        "authentication_area": {
            "name": "authentication_area",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "authenticated_session": {
            "name": "authenticated_session",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_sparql": {
            "name": "run_sparql",
            "location": 139,
            "return": [],
            "arguments": {
                "query": []
            }
        },
        "get_query": {
            "name": "get_query",
            "location": 146,
            "return": [],
            "arguments": {
                "query_name": []
            }
        },
        "index": {
            "name": "index",
            "location": 152,
            "return": [],
            "arguments": {}
        },
        "get_label": {
            "name": "get_label",
            "location": 157,
            "return": [],
            "arguments": {
                "qid": []
            }
        },
        "get_words_in_language": {
            "name": "get_words_in_language",
            "location": 177,
            "return": [
                "list[]"
            ],
            "arguments": {
                "lang": [],
                "sense": [],
                "offset": [
                    "int"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "get_lexeme_data_from_api": {
            "name": "get_lexeme_data_from_api",
            "location": 190,
            "return": [],
            "arguments": {
                "lid": []
            }
        },
        "get_word": {
            "name": "get_word",
            "location": 199,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "lexeme_id": []
            }
        },
        "show_new_lexeme_page": {
            "name": "show_new_lexeme_page",
            "location": 206,
            "return": [],
            "arguments": {
                "lang": []
            }
        },
        "show_word_page": {
            "name": "show_word_page",
            "location": 221,
            "return": [],
            "arguments": {
                "words": [],
                "lang": [],
                "languages": []
            }
        },
        "construct_glosses": {
            "name": "construct_glosses",
            "location": 228,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,list[]]]]"
            ],
            "arguments": {
                "lang": [],
                "query_data": [],
                "api_data": []
            }
        },
        "construct_example": {
            "name": "construct_example",
            "location": 255,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "raw_example": []
            }
        },
        "construct_examples": {
            "name": "construct_examples",
            "location": 269,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_word": []
            }
        },
        "construct_forms": {
            "name": "construct_forms",
            "location": 280,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,list[]]]]"
            ],
            "arguments": {
                "lang": [],
                "api_data": []
            }
        },
        "construct_pos": {
            "name": "construct_pos",
            "location": 293,
            "return": [
                "list[dict[typing.Text, typing.Text]]"
            ],
            "arguments": {
                "raw_word": []
            }
        },
        "construct_word": {
            "name": "construct_word",
            "location": 307,
            "return": [],
            "arguments": {
                "lang": [],
                "raw_word": [],
                "word_forms": [],
                "l_id": []
            }
        },
        "get_lexeme_id": {
            "name": "get_lexeme_id",
            "location": 343,
            "return": [
                "list[]"
            ],
            "arguments": {
                "lang": [],
                "word": []
            }
        },
        "get_word_forms": {
            "name": "get_word_forms",
            "location": 360,
            "return": [],
            "arguments": {
                "lexid": []
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 366,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "show_word_not_found": {
            "name": "show_word_not_found",
            "location": 370,
            "return": [],
            "arguments": {
                "lang": [],
                "word": []
            }
        },
        "new": {
            "name": "new",
            "location": 379,
            "return": [],
            "arguments": {
                "lang": []
            }
        },
        "display": {
            "name": "display",
            "location": 393,
            "return": [],
            "arguments": {
                "lang": [],
                "word": []
            }
        },
        "language_browser": {
            "name": "language_browser",
            "location": 409,
            "return": [],
            "arguments": {
                "lang": []
            }
        },
        "autocomplete": {
            "name": "autocomplete",
            "location": 435,
            "return": [],
            "arguments": {}
        },
        "build_sense_to_add": {
            "name": "build_sense_to_add",
            "location": 443,
            "return": [
                "dict[typing.Text, list[dict[typing.Text, typing.Union[typing.Text,dict[, dict[typing.Text, ]]]]]]"
            ],
            "arguments": {
                "content": [],
                "lang": []
            }
        },
        "submit_lexeme": {
            "name": "submit_lexeme",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "lid": [],
                "senses": [],
                "lang": []
            }
        },
        "edit_summary": {
            "name": "edit_summary",
            "location": 468,
            "return": [
                "str"
            ],
            "arguments": {
                "content": []
            }
        },
        "create_new_lexeme": {
            "name": "create_new_lexeme",
            "location": 472,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "add_new_sense": {
            "name": "add_new_sense",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_duplicates": {
            "name": "get_duplicates",
            "location": 536,
            "return": [],
            "arguments": {
                "lang": [],
                "lemma": []
            }
        },
        "edit": {
            "name": "edit",
            "location": 546,
            "return": [],
            "arguments": {
                "lid": []
            }
        },
        "login": {
            "name": "login",
            "location": 560,
            "return": [],
            "arguments": {}
        },
        "oauth_callback": {
            "name": "oauth_callback",
            "location": 570,
            "return": [],
            "arguments": {}
        },
        "full_url": {
            "name": "full_url",
            "location": 583,
            "return": [],
            "arguments": {
                "endpoint": []
            }
        },
        "submitted_request_valid": {
            "name": "submitted_request_valid",
            "location": 588,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "deny_frame": {
            "name": "deny_frame",
            "location": 619,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "generate_auth": {
            "name": "generate_auth",
            "location": 631,
            "return": [],
            "arguments": {}
        }
    },
    "Hauki-master/test_app.py": {
        "client": {
            "name": "client",
            "location": 8,
            "return": [
                "typing.Generator[typing.Union[typing.Generator[typing.Union[typing.Any,None,None]],dict[str, typing.Any]]]"
            ],
            "arguments": {}
        },
        "test_csrf_token_generate": {
            "name": "test_csrf_token_generate",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_csrf_token_save": {
            "name": "test_csrf_token_save",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_csrf_token_load": {
            "name": "test_csrf_token_load",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
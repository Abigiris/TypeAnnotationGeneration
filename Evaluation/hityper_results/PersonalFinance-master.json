{
    "PersonalFinance-master/app.py": {
        "hello": {
            "name": "hello",
            "location": 8,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "fetch_test": {
            "name": "fetch_test",
            "location": 13,
            "return": [
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {}
        }
    },
    "PersonalFinance-master/main.py": {},
    "PersonalFinance-master/setup.py": {},
    "PersonalFinance-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PersonalFinance-master/alembic/versions/5413a8b01070_added_checking_logs_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PersonalFinance-master/dev-tools/reinit_db.py": {},
    "PersonalFinance-master/jt/__init__.py": {},
    "PersonalFinance-master/jt/finances/google_api_service.py": {
        "get_credentials": {
            "name": "get_credentials",
            "location": 4,
            "return": [],
            "arguments": {
                "client_secret": [
                    "str",
                    "typing.Iterable[tuple[typing.Union[str,int]]]",
                    "bool",
                    "None"
                ],
                "scopes": [
                    "str",
                    "typing.Iterable[tuple[typing.Union[str,int]]]",
                    "bool",
                    "None"
                ],
                "application_name": [
                    "str",
                    "typing.Iterable[tuple[typing.Union[str,int]]]",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/handler.py": {
        "_fetch_transactions": {
            "name": "_fetch_transactions",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "sheet_id": [
                    "str",
                    "bool"
                ],
                "sheet_range": [
                    "str",
                    "bool"
                ],
                "extractor_cls": [
                    "str",
                    "bool"
                ],
                "db_name": [
                    "bool",
                    "list[str]",
                    "str",
                    "float",
                    "None"
                ],
                "table_name": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "if_exists": [
                    "typing.Text"
                ]
            }
        },
        "fetch_checking_transactions": {
            "name": "fetch_checking_transactions",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fetch_chase_sapphire_transactions": {
            "name": "fetch_chase_sapphire_transactions",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PersonalFinance-master/jt/finances/register.py": {
        "Register.initialize_txn_logger": {
            "name": "initialize_txn_logger",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "memoryview",
                    "bool"
                ]
            }
        },
        "Register.charge": {
            "name": "charge",
            "location": 18,
            "return": [
                "list[typing.Union[str,int,list[],typing.Callable[, ],None]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "list[]",
                    "typing.Pattern"
                ],
                "charges": [
                    "list[]",
                    "list[str]"
                ],
                "value": [
                    "str",
                    "int",
                    "list[]",
                    "typing.Callable[, ]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "Register.pprint": {
            "name": "pprint",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ],
                "charges": [
                    "str",
                    "typing.IO",
                    "bytes",
                    "list[int]"
                ]
            }
        },
        "Register.get_transactions_df": {
            "name": "get_transactions_df",
            "location": 26,
            "return": [
                "DataFrame"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "typing.Iterable[str]"
                ],
                "charges": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "list[tuple[typing.Union[int,int]]]",
                    "int"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/service.py": {
        "FinanceService.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FinanceService.config": {
            "name": "config",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FinanceService.dbsession": {
            "name": "dbsession",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "PersonalFinance-master/jt/finances/__init__.py": {},
    "PersonalFinance-master/jt/finances/db/base.py": {
        "BaseMixin.__tablename__": {
            "name": "__tablename__",
            "location": 11,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/db/checking_logs.py": {
        "CheckingLog.upsert_transaction_value": {
            "name": "upsert_transaction_value",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Iterable[str]",
                    "None",
                    "bool",
                    "str",
                    "bytes",
                    "typing.Callable[, ]"
                ],
                "session": [],
                "transaction": [
                    "str",
                    "dict[str, str]",
                    "None"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/db/__init__.py": {},
    "PersonalFinance-master/jt/finances/models/transaction.py": {
        "TransactionModel.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PersonalFinance-master/jt/finances/models/__init__.py": {},
    "PersonalFinance-master/jt/finances/repo/api.py": {
        "FinanceRepo.session": {
            "name": "session",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FinanceRepo.upsert_transaction_value": {
            "name": "upsert_transaction_value",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "table_name": [
                    "str",
                    "bool"
                ],
                "transaction": [
                    "str",
                    "bool"
                ]
            }
        },
        "FinanceDBRepo.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FinanceDBRepo.session": {
            "name": "session",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FinanceDBRepo.upsert_transaction_value": {
            "name": "upsert_transaction_value",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "table_name": [
                    "str",
                    "bool"
                ],
                "transaction": [
                    "str",
                    "typing.Type",
                    "dict[str, object]"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/repo/base.py": {
        "Repo.set_impl": {
            "name": "set_impl",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_impl": [
                    "str",
                    "None",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "Repo.transaction_context": {
            "name": "transaction_context",
            "location": 15,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repo.transaction": {
            "name": "transaction",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "func_": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "Repo.upsert_transaction_value": {
            "name": "upsert_transaction_value",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "table_name": [
                    "str",
                    "None"
                ],
                "transaction": [
                    "str",
                    "None"
                ]
            }
        },
        "Repo.transaction.wrap_with_txn_context": {
            "name": "wrap_with_txn_context",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PersonalFinance-master/jt/finances/repo/__init__.py": {},
    "PersonalFinance-master/jt/finances/stream/collector.py": {
        "ListCollector.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListCollector.on_next": {
            "name": "on_next",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes",
                    "float",
                    "list[]",
                    "typing.Sequence[typing.Hashable]"
                ]
            }
        },
        "ListCollector.on_completed": {
            "name": "on_completed",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListCollector.on_error": {
            "name": "on_error",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str",
                    "Exception"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/stream/extractor.py": {
        "Extractor._is_valid_txn_entry": {
            "name": "_is_valid_txn_entry",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "row": [
                    "tuple[typing.Union[int,int]]",
                    "str"
                ]
            }
        },
        "CheckingExtractor._extract_txn_log": {
            "name": "_extract_txn_log",
            "location": 21,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "row": [
                    "list[int]"
                ]
            }
        },
        "CheckingExtractor.resolve": {
            "name": "resolve",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [],
                "row": [
                    "bool",
                    "list[]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "ChaseSapphireExtractor._extract_txn_log": {
            "name": "_extract_txn_log",
            "location": 39,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "row": [
                    "list[int]"
                ]
            }
        },
        "ChaseSapphireExtractor.resolve": {
            "name": "resolve",
            "location": 49,
            "return": [],
            "arguments": {
                "cls": [],
                "row": [
                    "bool",
                    "list[]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/stream/parser.py": {
        "TransactionTypeParser.parse": {
            "name": "parse",
            "location": 11,
            "return": [
                "TransactionType"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "str",
                    "int",
                    "None"
                ],
                "value": [
                    "str",
                    "typing.Type",
                    "tuple[typing.Union[typing.Type,...]]",
                    "int",
                    "float"
                ]
            }
        },
        "TransactionResultParser._coerce_row_entry": {
            "name": "_coerce_row_entry",
            "location": 22,
            "return": [
                "TransactionModel",
                "None"
            ],
            "arguments": {
                "row": [
                    "str"
                ]
            }
        },
        "TransactionResultParser.resolve": {
            "name": "resolve",
            "location": 50,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [
                    "typing.Mapping",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "list[str]",
                    "int"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/stream/spreadsheet_fetcher.py": {
        "SpreadsheetFetchClient.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpreadsheetFetchClient.fetch_spreadsheet": {
            "name": "fetch_spreadsheet",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "spreadsheet_id": [
                    "str"
                ],
                "sheet_range": [
                    "str"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/stream/transaction_collector.py": {
        "TransactionCollector.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "str",
                    "bool",
                    "list[list[typing.Any]]",
                    "None"
                ]
            }
        },
        "TransactionCollector.on_next": {
            "name": "on_next",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "list[tuple[typing.Union[typing.Any,str]]]",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TransactionCollector.on_completed": {
            "name": "on_completed",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransactionCollector.on_error": {
            "name": "on_error",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str",
                    "Exception"
                ]
            }
        },
        "TransactionCollector.get_charges_df": {
            "name": "get_charges_df",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TransactionRepoCollector.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "table_name": [
                    "str",
                    "None",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "TransactionRepoCollector.on_next": {
            "name": "on_next",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transaction": [
                    "str",
                    "Exception",
                    "int"
                ]
            }
        },
        "TransactionRepoCollector.on_completed": {
            "name": "on_completed",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransactionRepoCollector.on_error": {
            "name": "on_error",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str",
                    "Exception"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/finances/stream/__init__.py": {},
    "PersonalFinance-master/jt/util/conf_loader.py": {
        "read_conf": {
            "name": "read_conf",
            "location": 9,
            "return": [
                "Config"
            ],
            "arguments": {
                "service_name": [
                    "str"
                ]
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/util/logger.py": {
        "_log_message": {
            "name": "_log_message",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "priority": [
                    "str",
                    "float",
                    "bool",
                    "None"
                ],
                "message": [
                    "str",
                    "float",
                    "bool",
                    "None"
                ]
            }
        },
        "info": {
            "name": "info",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str",
                    "int"
                ]
            }
        },
        "error": {
            "name": "error",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "PersonalFinance-master/jt/util/__init__.py": {}
}
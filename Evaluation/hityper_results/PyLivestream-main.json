{
    "PyLivestream-main/setup.py": {},
    "PyLivestream-main/archive/visual_tests.py": {
        "main": {
            "name": "main",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/Examples/playlist_m3u8.py": {},
    "PyLivestream-main/Examples/screen_share.py": {},
    "PyLivestream-main/src/pylivestream/api.py": {
        "stream_file": {
            "name": "stream_file",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": [],
                "websites": [],
                "video_file": [],
                "loop": [
                    "None"
                ],
                "assume_yes": [
                    "bool"
                ],
                "timeout": [
                    "None"
                ]
            }
        },
        "stream_files": {
            "name": "stream_files",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": [],
                "websites": []
            }
        },
        "stream_microphone": {
            "name": "stream_microphone",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": [],
                "websites": []
            }
        },
        "stream_screen": {
            "name": "stream_screen",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": [],
                "websites": []
            }
        },
        "capture_screen": {
            "name": "capture_screen",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": []
            }
        },
        "stream_webcam": {
            "name": "stream_webcam",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "ini_file": [],
                "websites": []
            }
        }
    },
    "PyLivestream-main/src/pylivestream/base.py": {
        "unify_streams": {
            "name": "unify_streams",
            "location": 298,
            "return": [],
            "arguments": {
                "streams": []
            }
        },
        "Livestream.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "site": []
            }
        },
        "Livestream.startlive": {
            "name": "startlive",
            "location": 79,
            "return": [
                "None",
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "sinks": []
            }
        },
        "Livestream.check_device": {
            "name": "check_device",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "site": [
                    "None"
                ]
            }
        },
        "Screenshare.__init__": {
            "name": "__init__",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "websites": []
            }
        },
        "Screenshare.golive": {
            "name": "golive",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Webcam.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "websites": []
            }
        },
        "Webcam.golive": {
            "name": "golive",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Microphone.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "websites": []
            }
        },
        "Microphone.golive": {
            "name": "golive",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileIn.__init__": {
            "name": "__init__",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "websites": []
            }
        },
        "FileIn.golive": {
            "name": "golive",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SaveDisk.__init__": {
            "name": "__init__",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [],
                "outfn": [
                    "None"
                ]
            }
        },
        "SaveDisk.save": {
            "name": "save",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PyLivestream-main/src/pylivestream/ffmpeg.py": {
        "get_exe": {
            "name": "get_exe",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "exein": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_meta": {
            "name": "get_meta",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "bytes"
                ],
                "exein": [
                    "None",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Ffmpeg.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ffmpeg.timelimit": {
            "name": "timelimit",
            "location": 25,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "int",
                    "Exception",
                    "None",
                    "list[int]"
                ]
            }
        },
        "Ffmpeg.drawtext": {
            "name": "drawtext",
            "location": 38,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "None",
                    "str"
                ]
            }
        },
        "Ffmpeg.listener": {
            "name": "listener",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ffmpeg.movingBG": {
            "name": "movingBG",
            "location": 91,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "bgfn": [
                    "None",
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "PyLivestream-main/src/pylivestream/glob.py": {
        "playonce": {
            "name": "playonce",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "flist": [
                    "str"
                ],
                "image": [
                    "None",
                    "int",
                    "str"
                ],
                "sites": [
                    "None",
                    "int",
                    "str"
                ],
                "inifn": [
                    "None",
                    "int",
                    "str"
                ],
                "shuffle": [
                    "int",
                    "str"
                ],
                "usemeta": [
                    "int",
                    "str"
                ],
                "yes": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "fileglob": {
            "name": "fileglob",
            "location": 44,
            "return": [
                "list[]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "glob": [
                    "str"
                ]
            }
        }
    },
    "PyLivestream-main/src/pylivestream/stream.py": {
        "Stream.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inifn": [
                    "str"
                ],
                "site": [
                    "str",
                    "None"
                ]
            }
        },
        "Stream.osparam": {
            "name": "osparam",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "Stream.videoIn": {
            "name": "videoIn",
            "location": 131,
            "return": [
                "int",
                "typing.Counter"
            ],
            "arguments": {
                "self": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "Stream.videoOut": {
            "name": "videoOut",
            "location": 153,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stream.audioIn": {
            "name": "audioIn",
            "location": 183,
            "return": [
                "list[]",
                "list[typing.Union[typing.Text,int,dict[str, list[str]],dict[str, str],dict[, ],list[typing.Union[int,typing.Any]]]]"
            ],
            "arguments": {
                "self": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "Stream.audioOut": {
            "name": "audioOut",
            "location": 209,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stream.video_bitrate": {
            "name": "video_bitrate",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stream.screengrab": {
            "name": "screengrab",
            "location": 249,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "Stream.webcam": {
            "name": "webcam",
            "location": 280,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "Stream.filein": {
            "name": "filein",
            "location": 298,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "Stream.buffer": {
            "name": "buffer",
            "location": 337,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "server": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        }
    },
    "PyLivestream-main/src/pylivestream/utils.py": {
        "run": {
            "name": "run",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd": [
                    "str"
                ]
            }
        },
        "check_device": {
            "name": "check_device",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "cmd": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "check_display": {
            "name": "check_display",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "fn": [
                    "None",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "get_inifile": {
            "name": "get_inifile",
            "location": 72,
            "return": [],
            "arguments": {
                "fn": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "meta_caption": {
            "name": "meta_caption",
            "location": 84,
            "return": [],
            "arguments": {
                "meta": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "get_resolution": {
            "name": "get_resolution",
            "location": 101,
            "return": [
                "None",
                "list[typing.Text]"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ],
                "exe": [
                    "None",
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        },
        "get_framerate": {
            "name": "get_framerate",
            "location": 134,
            "return": [
                "None",
                "int",
                "tuple[typing.Hashable]",
                "str",
                "set[]"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "None"
                ],
                "exe": [
                    "None",
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        },
        "getstreamkey": {
            "name": "getstreamkey",
            "location": 176,
            "return": [
                "None",
                "str",
                "list[str]",
                "dict[str, bool]"
            ],
            "arguments": {
                "keyfn": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "check_display._check_disp": {
            "name": "_check_disp",
            "location": 59,
            "return": [],
            "arguments": {
                "fn": []
            }
        }
    },
    "PyLivestream-main/src/pylivestream/__init__.py": {},
    "PyLivestream-main/src/pylivestream/__main__.py": {
        "loop_file": {
            "name": "loop_file",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "microphone": {
            "name": "microphone",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "screenshare": {
            "name": "screenshare",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "screencapture": {
            "name": "screencapture",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "webcam": {
            "name": "webcam",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "glob_run": {
            "name": "glob_run",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/src/pylivestream/data/__init__.py": {},
    "PyLivestream-main/src/pylivestream/tests/conftest.py": {
        "periscope_kbps": {
            "name": "periscope_kbps",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_class.py": {
        "test_get_ini_file": {
            "name": "test_get_ini_file",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "fn": [
                    "str"
                ]
            }
        },
        "test_key": {
            "name": "test_key",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_empty_key": {
            "name": "test_empty_key",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "set[]",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "int"
                ]
            }
        },
        "test_bad_key": {
            "name": "test_bad_key",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "test_exe": {
            "name": "test_exe",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "rex": [
                    "str"
                ]
            }
        },
        "test_attrs": {
            "name": "test_attrs",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "inp": []
            }
        },
        "test_config_not_found": {
            "name": "test_config_not_found",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_config_default": {
            "name": "test_config_default",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "list[str]"
                ]
            }
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_disk.py": {
        "test_props": {
            "name": "test_props",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "site": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_filein.py": {
        "test_props": {
            "name": "test_props",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_audio": {
            "name": "test_audio",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_simple": {
            "name": "test_simple",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_script": {
            "name": "test_script",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_microphone.py": {
        "test_microphone_props": {
            "name": "test_microphone_props",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_microphone_image": {
            "name": "test_microphone_image",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_stream": {
            "name": "test_stream",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_script": {
            "name": "test_script",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_screen.py": {
        "test_props": {
            "name": "test_props",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_stream": {
            "name": "test_stream",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_script": {
            "name": "test_script",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/src/pylivestream/tests/test_webcam.py": {
        "test_props": {
            "name": "test_props",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "periscope_kbps": []
            }
        },
        "test_stream": {
            "name": "test_stream",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_script": {
            "name": "test_script",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PyLivestream-main/tests/archive/conftest.py": {
        "listener": {
            "name": "listener",
            "location": 9,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    }
}
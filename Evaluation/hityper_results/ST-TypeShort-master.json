{
    "ST-TypeShort-master/boot.py": {
        "plugin_loaded": {
            "name": "plugin_loaded",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "plugin_unloaded": {
            "name": "plugin_unloaded",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ST-TypeShort-master/plugin/BindingsCompiler.py": {
        "BindingsCompiler.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bindings": [
                    "list[]"
                ]
            }
        },
        "BindingsCompiler.compile": {
            "name": "compile",
            "location": 14,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BindingsCompiler._compile_binding": {
            "name": "_compile_binding",
            "location": 17,
            "return": [
                "None",
                "set[int]",
                "set[str]",
                "list[]",
                "tuple[]",
                "str",
                "set[bytes]"
            ],
            "arguments": {
                "self": [],
                "binding": [
                    "bytes"
                ]
            }
        }
    },
    "ST-TypeShort-master/plugin/functions.py": {
        "snake_to_camel": {
            "name": "snake_to_camel",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "snake": [
                    "bytes"
                ],
                "upper_first": [
                    "bool"
                ]
            }
        },
        "camel_to_snake": {
            "name": "camel_to_snake",
            "location": 14,
            "return": [],
            "arguments": {
                "camel": [
                    "str"
                ]
            }
        }
    },
    "ST-TypeShort-master/plugin/Globals.py": {},
    "ST-TypeShort-master/plugin/log.py": {
        "msg": {
            "name": "msg",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "print_msg": {
            "name": "print_msg",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str",
                    "bytes",
                    "int"
                ],
                "show_message": [
                    "bool"
                ]
            }
        }
    },
    "ST-TypeShort-master/plugin/settings.py": {
        "get_package_name": {
            "name": "get_package_name",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "get_package_path": {
            "name": "get_package_path",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "get_settings_file": {
            "name": "get_settings_file",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "get_settings_object": {
            "name": "get_settings_object",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "get_setting": {
            "name": "get_setting",
            "location": 29,
            "return": [],
            "arguments": {
                "key": [
                    "str",
                    "typing.Any",
                    "None",
                    "dict[, ]"
                ],
                "default": [
                    "None",
                    "str",
                    "typing.Any",
                    "dict[, ]"
                ]
            }
        }
    },
    "ST-TypeShort-master/plugin/__init__.py": {
        "set_up": {
            "name": "set_up",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tear_down": {
            "name": "tear_down",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_up.plugin_settings_listener": {
            "name": "plugin_settings_listener",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ST-TypeShort-master/plugin/sublime_text/TypeShort.py": {
        "TypeShortListener.on_modified": {
            "name": "on_modified",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "TypeShortListener._test_point_with_binding": {
            "name": "_test_point_with_binding",
            "location": 60,
            "return": [
                "dict[typing.Text, list[int]]",
                "None"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "typing.Callable[T, bool]"
                ],
                "point": [],
                "binding": [
                    "str"
                ]
            }
        },
        "TypeShortListener._get_current_syntaxes": {
            "name": "_get_current_syntaxes",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "view": [
                    "dict[str, typing.Any]",
                    "str",
                    "bytes"
                ]
            }
        },
        "TypeShortListener._find_syntax_name": {
            "name": "_find_syntax_name",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "syntax_file": [
                    "str",
                    "list[tuple[typing.Union[typing.Any,float]]]"
                ]
            }
        }
    },
    "ST-TypeShort-master/plugin/sublime_text/TypeShortCommand.py": {
        "TypeShortCommand.run": {
            "name": "run",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "edit": [
                    "str",
                    "list[str]"
                ],
                "jobs": [
                    "list[dict[, ]]",
                    "dict[, ]",
                    "tuple[frozenset]",
                    "list[tuple[typing.Union[typing.Any,typing.Any]]]"
                ],
                "cursor_placeholder": []
            }
        },
        "TypeShortCommand.is_visible": {
            "name": "is_visible",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "SmartContract-master/setup.py": {},
    "SmartContract-master/assets/smart_contract.py": {
        "_get_previous_rate": {
            "name": "_get_previous_rate",
            "location": 11,
            "return": [
                "float"
            ],
            "arguments": {}
        },
        "compute_rate": {
            "name": "compute_rate",
            "location": 15,
            "return": [
                "float"
            ],
            "arguments": {
                "amount": [
                    "int",
                    "float"
                ]
            }
        },
        "reset_last_rate": {
            "name": "reset_last_rate",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "more_complex_endpoint": {
            "name": "more_complex_endpoint",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ],
                "b": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ],
                "c": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ]
            }
        },
        "more_complex_endpoint_py2": {
            "name": "more_complex_endpoint_py2",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "a": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ],
                "b": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ],
                "c": [
                    "int",
                    "str",
                    "list[]",
                    "float"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/abi.py": {
        "ABI.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contract_interface": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "ABI.from_string_interface": {
            "name": "from_string_interface",
            "location": 29,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "list[list[typing.Any]]",
                    "int"
                ],
                "json_string": [
                    "str",
                    "dict[str, list[bytes]]"
                ]
            }
        },
        "ABI.from_file_interface": {
            "name": "from_file_interface",
            "location": 42,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[str]",
                    "bool",
                    "set[str]"
                ],
                "file_path": [
                    "str"
                ]
            }
        },
        "ABI.endpoints": {
            "name": "endpoints",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ABI.encode_call": {
            "name": "encode_call",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str",
                    "float",
                    "int",
                    "None"
                ],
                "kwargs": []
            }
        },
        "ABI.decode_call": {
            "name": "decode_call",
            "location": 74,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "encoded_call": [
                    "str"
                ]
            }
        },
        "ABI._decode_endpoint": {
            "name": "_decode_endpoint",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint_selector": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ABI._encode_endpoint": {
            "name": "_encode_endpoint",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str"
                ]
            }
        },
        "ABI._encode_arguments": {
            "name": "_encode_arguments",
            "location": 116,
            "return": [],
            "arguments": {
                "kwargs": []
            }
        },
        "ABI._decode_arguments": {
            "name": "_decode_arguments",
            "location": 127,
            "return": [],
            "arguments": {
                "encoded_kwargs": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "ABI.encode_call_result": {
            "name": "encode_call_result",
            "location": 138,
            "return": [],
            "arguments": {
                "call_result": [
                    "dict[, ]",
                    "Exception"
                ]
            }
        },
        "ABI.decode_call_result": {
            "name": "decode_call_result",
            "location": 149,
            "return": [],
            "arguments": {
                "encoded_call_result": [
                    "str"
                ]
            }
        },
        "ABI._do_encode_endpoint": {
            "name": "_do_encode_endpoint",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str",
                    "float",
                    "None",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "list[str]"
                ]
            }
        },
        "ABI._make_endpoint_encoding_map": {
            "name": "_make_endpoint_encoding_map",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "contract_interface": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/compile.py": {
        "_get_temp_filename": {
            "name": "_get_temp_filename",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "compile_file": {
            "name": "compile_file",
            "location": 21,
            "return": [],
            "arguments": {
                "source_file": [
                    "str"
                ],
                "dest_file": [
                    "None",
                    "str"
                ]
            }
        },
        "compile_source": {
            "name": "compile_source",
            "location": 34,
            "return": [],
            "arguments": {
                "source": [
                    "str",
                    "typing.IO"
                ],
                "dest_file": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 54,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "SmartContract-master/pikciosc/models.py": {
        "_JSONFileSerializable.to_file": {
            "name": "to_file",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "_JSONFileSerializable.from_file": {
            "name": "from_file",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "_JSONFileSerializable.to_dict": {
            "name": "to_dict",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONFileSerializable.from_dict": {
            "name": "from_dict",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "tuple[str]"
                ],
                "path": [
                    "str",
                    "bool",
                    "tuple[str]"
                ]
            }
        },
        "TypedNamed.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "typ": [
                    "str",
                    "int"
                ]
            }
        },
        "TypedNamed.to_dict": {
            "name": "to_dict",
            "location": 66,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TypedNamed.from_dict": {
            "name": "from_dict",
            "location": 75,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "float",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "json_dct": [
                    "list[str]"
                ]
            }
        },
        "Variable.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "float"
                ],
                "typ": [
                    "str",
                    "float"
                ],
                "value": [
                    "str",
                    "float"
                ]
            }
        },
        "Variable.to_dict": {
            "name": "to_dict",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.from_dict": {
            "name": "from_dict",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "float",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "json_dct": [
                    "list[str]"
                ]
            }
        },
        "EndPointDef.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "float"
                ],
                "typ": [
                    "str",
                    "float"
                ],
                "params": [
                    "None",
                    "int",
                    "str",
                    "typing.Sequence[]"
                ],
                "doc": [
                    "None",
                    "int",
                    "str",
                    "typing.Sequence[]"
                ]
            }
        },
        "EndPointDef.to_dict": {
            "name": "to_dict",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EndPointDef.from_dict": {
            "name": "from_dict",
            "location": 144,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "json_dct": []
            }
        },
        "ContractInterface.__init__": {
            "name": "__init__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None",
                    "str",
                    "bool"
                ],
                "storage_vars": [
                    "None",
                    "str",
                    "list[str]",
                    "typing.Pattern",
                    "typing.Sequence[str]",
                    "int"
                ],
                "endpoints": [
                    "None",
                    "bool",
                    "typing.Sequence[]",
                    "str"
                ]
            }
        },
        "ContractInterface.endpoints_names": {
            "name": "endpoints_names",
            "location": 181,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContractInterface.get_endpoint": {
            "name": "get_endpoint",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ContractInterface.get_canonical_signature": {
            "name": "get_canonical_signature",
            "location": 189,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "ContractInterface.is_supported_endpoint": {
            "name": "is_supported_endpoint",
            "location": 202,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "ContractInterface.to_dict": {
            "name": "to_dict",
            "location": 211,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContractInterface.from_dict": {
            "name": "from_dict",
            "location": 223,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ],
                "json_dct": []
            }
        },
        "StopWatch.__init__": {
            "name": "__init__",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "None",
                    "int",
                    "str"
                ],
                "end": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "StopWatch.set_start": {
            "name": "set_start",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timestamp": [
                    "None",
                    "float",
                    "int"
                ]
            }
        },
        "StopWatch.set_end": {
            "name": "set_end",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timestamp": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "StopWatch.duration": {
            "name": "duration",
            "location": 269,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "StopWatch.to_dict": {
            "name": "to_dict",
            "location": 276,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StopWatch.from_dict": {
            "name": "from_dict",
            "location": 286,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "float",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "json_dct": [
                    "list[str]"
                ]
            }
        },
        "SuccessInfo.__init__": {
            "name": "__init__",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "None",
                    "str",
                    "bool",
                    "float",
                    "typing.Callable[, ]"
                ]
            }
        },
        "SuccessInfo.is_success": {
            "name": "is_success",
            "location": 309,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SuccessInfo.to_dict": {
            "name": "to_dict",
            "location": 313,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SuccessInfo.from_dict": {
            "name": "from_dict",
            "location": 321,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "float",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "json_dct": [
                    "list[str]"
                ]
            }
        },
        "CallInfo.__init__": {
            "name": "__init__",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint_name": [
                    "bool",
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]"
                ],
                "kwargs": [],
                "stop_watch": [
                    "None",
                    "bool",
                    "str",
                    "tuple[str]"
                ],
                "success_info": [
                    "None",
                    "bool",
                    "str"
                ],
                "ret_val": [
                    "None",
                    "typing.Sequence[str]",
                    "str",
                    "list[]",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "CallInfo.to_dict": {
            "name": "to_dict",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallInfo.from_dict": {
            "name": "from_dict",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "json_dct": [
                    "bool",
                    "dict[, ]",
                    "list[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ExecutionInfo.__init__": {
            "name": "__init__",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "storage_before": [
                    "bool"
                ],
                "call_info": [
                    "None",
                    "bool",
                    "typing.Mapping"
                ],
                "stop_watch": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "list[str]",
                    "float",
                    "tuple[typing.Union[float,float]]",
                    "str"
                ],
                "success_info": [
                    "None",
                    "bool"
                ],
                "storage_after": [
                    "None",
                    "str",
                    "int",
                    "typing.Callable[_, None]",
                    "typing.Sequence[typing.Iterable[typing.Any]]",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "ExecutionInfo.to_dict": {
            "name": "to_dict",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionInfo.from_dict": {
            "name": "from_dict",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Mapping"
                ],
                "json_dct": []
            }
        }
    },
    "SmartContract-master/pikciosc/quotations.py": {
        "_unit_cost": {
            "name": "_unit_cost",
            "location": 58,
            "return": [
                "float"
            ],
            "arguments": {
                "env_var": [
                    "str",
                    "None",
                    "typing.Type"
                ]
            }
        },
        "get_submit_quotation": {
            "name": "get_submit_quotation",
            "location": 73,
            "return": [
                "Quotation"
            ],
            "arguments": {
                "source": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_load_module": {
            "name": "_load_module",
            "location": 94,
            "return": [
                "tuple[typing.Union[typing.Literal,typing.Literal]]",
                "int",
                "typing.Type",
                "list[]"
            ],
            "arguments": {
                "module_path": [
                    "str"
                ]
            }
        },
        "get_exec_quotation": {
            "name": "get_exec_quotation",
            "location": 114,
            "return": [
                "Quotation"
            ],
            "arguments": {
                "compiled_file": [
                    "str",
                    "bool"
                ],
                "endpoint_name": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "get_submit_quotation_cli": {
            "name": "get_submit_quotation_cli",
            "location": 134,
            "return": [],
            "arguments": {
                "source_file": [
                    "str"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 147,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        },
        "Quotation.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code_length": [
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]"
                ],
                "char_cost": [
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "Quotation.to_json": {
            "name": "to_json",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Quotation.from_json": {
            "name": "from_json",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int"
                ],
                "json_stamp": [
                    "str",
                    "int"
                ]
            }
        },
        "Quotation.from_dict": {
            "name": "from_dict",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "float",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "json_dct": [
                    "list[str]"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/__init__.py": {},
    "SmartContract-master/pikciosc/invoke/invoke.py": {
        "find_script": {
            "name": "find_script",
            "location": 13,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "bin_folder": [
                    "str",
                    "None"
                ],
                "contract_name": [
                    "str",
                    "None"
                ]
            }
        },
        "_get_contract_interface": {
            "name": "_get_contract_interface",
            "location": 30,
            "return": [],
            "arguments": {
                "interface_folder": [
                    "str"
                ],
                "contract_name": [
                    "str"
                ]
            }
        },
        "invoke": {
            "name": "invoke",
            "location": 46,
            "return": [],
            "arguments": {
                "bin_folder": [
                    "str",
                    "None",
                    "bool"
                ],
                "interface_folder": [
                    "str"
                ],
                "last_exec_info": [
                    "str",
                    "dict[, ]"
                ],
                "contract_name": [
                    "str",
                    "bool",
                    "None"
                ],
                "endpoint": [
                    "str",
                    "int",
                    "None"
                ],
                "kwargs": []
            }
        },
        "invoke_cli": {
            "name": "invoke_cli",
            "location": 84,
            "return": [],
            "arguments": {
                "bin_folder": [
                    "tuple[str]",
                    "str",
                    "dict[str, str]",
                    "bool",
                    "None"
                ],
                "interface_folder": [
                    "tuple[str]",
                    "str",
                    "dict[str, str]",
                    "bool",
                    "None"
                ],
                "last_exec_path": [
                    "str",
                    "typing.TextIO",
                    "dict[str, str]",
                    "typing.Sequence[str]"
                ],
                "contract_name": [
                    "tuple[str]",
                    "str",
                    "dict[str, str]",
                    "bool",
                    "None"
                ],
                "endpoint": [
                    "tuple[str]",
                    "str",
                    "dict[str, str]",
                    "bool",
                    "None"
                ],
                "flat_kwargs": [
                    "bool",
                    "str"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 111,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "SmartContract-master/pikciosc/invoke/sandbox.py": {
        "_docker_execute": {
            "name": "_docker_execute",
            "location": 17,
            "return": [],
            "arguments": {
                "script_path": [
                    "str"
                ],
                "storage_vars": [
                    "str",
                    "list[]",
                    "dict[str, str]"
                ],
                "endpoint": [
                    "str",
                    "list[]",
                    "dict[str, str]"
                ],
                "kwargs": []
            }
        },
        "execute_sandbox": {
            "name": "execute_sandbox",
            "location": 62,
            "return": [],
            "arguments": {
                "script_path": [
                    "str"
                ],
                "storage_vars": [
                    "str"
                ],
                "endpoint": [
                    "str"
                ],
                "kwargs": []
            }
        }
    },
    "SmartContract-master/pikciosc/invoke/shell.py": {
        "_load_module": {
            "name": "_load_module",
            "location": 13,
            "return": [
                "tuple[typing.Union[typing.Literal,typing.Literal]]",
                "int",
                "typing.Type",
                "list[]"
            ],
            "arguments": {
                "module_path": [
                    "str"
                ]
            }
        },
        "_restore_storage": {
            "name": "_restore_storage",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "module": [
                    "str",
                    "typing.Callable[, ]",
                    "tuple[]",
                    "set[str]",
                    "list[str]",
                    "bool",
                    "Exception"
                ],
                "storage_vars": [
                    "str"
                ]
            }
        },
        "_collect_storage": {
            "name": "_collect_storage",
            "location": 44,
            "return": [
                "list[Variable]"
            ],
            "arguments": {
                "module": [
                    "dict[str, str]",
                    "None",
                    "str"
                ],
                "storage_vars": [
                    "dict[str, str]",
                    "str"
                ]
            }
        },
        "_call": {
            "name": "_call",
            "location": 64,
            "return": [
                "CallInfo"
            ],
            "arguments": {
                "module": [
                    "str"
                ],
                "endpoint_name": [
                    "typing.Type",
                    "dict[str, typing.Any]",
                    "list[tuple[typing.Union[str,str]]]",
                    "dict[str, list[bytes]]",
                    "Exception",
                    "None"
                ],
                "args": []
            }
        },
        "execute": {
            "name": "execute",
            "location": 88,
            "return": [
                "ExecutionInfo"
            ],
            "arguments": {
                "module_path": [
                    "str"
                ],
                "storage_vars": [
                    "str",
                    "None",
                    "typing.Any",
                    "typing.Callable[, ]",
                    "list[dict[, ]]",
                    "dict[str, str]",
                    "bool"
                ],
                "endpoint_name": [
                    "dict[str, str]",
                    "None",
                    "typing.Callable[, ]",
                    "str",
                    "dict[str, cmk.gui.plugins.views.utils.Painter]",
                    "bool",
                    "dict[str, dict[str, typing.Any]]",
                    "set[str]",
                    "list[str]"
                ],
                "kwargs": []
            }
        },
        "execute_cli": {
            "name": "execute_cli",
            "location": 117,
            "return": [],
            "arguments": {
                "module_path": [
                    "str",
                    "bool",
                    "None"
                ],
                "storage_file": [
                    "str",
                    "bool",
                    "dict[, ]"
                ],
                "endpoint_name": [
                    "str",
                    "bool",
                    "None"
                ],
                "flat_args": [
                    "str",
                    "list[str]",
                    "typing.Callable[, ]",
                    "None",
                    "dict[str, str]",
                    "bool"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 137,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "SmartContract-master/pikciosc/invoke/utils.py": {
        "_get_temp_filename": {
            "name": "_get_temp_filename",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "inflate_cli_arguments": {
            "name": "inflate_cli_arguments",
            "location": 18,
            "return": [
                "list[]",
                "list[Variable]"
            ],
            "arguments": {
                "raw_args": []
            }
        },
        "flatten_vars_for_cli": {
            "name": "flatten_vars_for_cli",
            "location": 40,
            "return": [],
            "arguments": {
                "variables": [
                    "str",
                    "list[str]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "serialise_vars": {
            "name": "serialise_vars",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "variables": [
                    "str",
                    "typing.Callable[, ]",
                    "int",
                    "typing.Type",
                    "bytes"
                ]
            }
        },
        "unserialise_vars": {
            "name": "unserialise_vars",
            "location": 76,
            "return": [],
            "arguments": {
                "variables_path": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/invoke/__init__.py": {},
    "SmartContract-master/pikciosc/parse/endpoint.py": {
        "_is_valid_endpoint": {
            "name": "_is_valid_endpoint",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "def_": [
                    "int",
                    "typing.OrderedDict",
                    "dict[, ]"
                ]
            }
        },
        "_check_endpoint_typing": {
            "name": "_check_endpoint_typing",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "raw_endpoint": []
            }
        },
        "_extract_parameters": {
            "name": "_extract_parameters",
            "location": 33,
            "return": [
                "list[TypedNamed]"
            ],
            "arguments": {
                "raw_endpoint": [
                    "typing.Iterable[typing.Type]",
                    "typing.Type"
                ]
            }
        },
        "_extract_documentation_if_any": {
            "name": "_extract_documentation_if_any",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "raw_endpoint": []
            }
        },
        "_create_endpointdef": {
            "name": "_create_endpointdef",
            "location": 71,
            "return": [
                "EndPointDef"
            ],
            "arguments": {
                "raw_endpoint": []
            }
        },
        "extract_endpoints": {
            "name": "extract_endpoints",
            "location": 92,
            "return": [
                "list[]"
            ],
            "arguments": {
                "compiled_source": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/parse/parser.py": {
        "parse_string": {
            "name": "parse_string",
            "location": 18,
            "return": [
                "ContractInterface"
            ],
            "arguments": {
                "source": [
                    "str",
                    "list[mypy.modulefinder.BuildSource]",
                    "typing.BinaryIO"
                ],
                "filename": [
                    "str",
                    "bytes"
                ]
            }
        },
        "parse_file_cli": {
            "name": "parse_file_cli",
            "location": 50,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ]
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 71,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "SmartContract-master/pikciosc/parse/storage.py": {
        "_is_expression_valid_storage_var_name": {
            "name": "_is_expression_valid_storage_var_name",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "expr": []
            }
        },
        "_create_storage_var": {
            "name": "_create_storage_var",
            "location": 45,
            "return": [
                "Variable"
            ],
            "arguments": {
                "lvalue": [
                    "str",
                    "None",
                    "typing.Type",
                    "typing.Callable[, ]"
                ],
                "rvalue": [
                    "typing.Type",
                    "str",
                    "None"
                ]
            }
        },
        "extract_storage_vars": {
            "name": "extract_storage_vars",
            "location": 73,
            "return": [
                "list[]"
            ],
            "arguments": {
                "compiled_source": [
                    "typing.Mapping",
                    "None"
                ]
            }
        }
    },
    "SmartContract-master/pikciosc/parse/__init__.py": {}
}
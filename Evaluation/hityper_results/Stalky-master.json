{
    "Stalky-master/app.py": {
        "check_auth": {
            "name": "check_auth",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "requires_auth": {
            "name": "requires_auth",
            "location": 22,
            "return": [],
            "arguments": {
                "f": [
                    "typing.Callable[, ]",
                    "str",
                    "list[dict[, ]]"
                ]
            }
        },
        "disable_cache": {
            "name": "disable_cache",
            "location": 37,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "response": [
                    "dict[, ]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "get_data_for_query": {
            "name": "get_data_for_query",
            "location": 51,
            "return": [],
            "arguments": {
                "query": [
                    "str",
                    "bytes"
                ],
                "timespan": [],
                "unit": []
            }
        },
        "requires_auth.decorated": {
            "name": "decorated",
            "location": 25,
            "return": [
                "Response"
            ],
            "arguments": {}
        }
    },
    "Stalky-master/fbapi.py": {
        "fetch_user_name": {
            "name": "fetch_user_name",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "fbid": [
                    "str"
                ]
            }
        },
        "create_database": {
            "name": "create_database",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "query_database_one": {
            "name": "query_database_one",
            "location": 44,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "bool",
                    "typing.Callable[..., T]",
                    "tuple[typing.Union[str,str]]"
                ],
                "query": [
                    "str",
                    "bool",
                    "typing.Callable[..., T]",
                    "tuple[typing.Union[str,str]]"
                ],
                "args": []
            }
        },
        "get_user_id": {
            "name": "get_user_id",
            "location": 51,
            "return": [],
            "arguments": {
                "cursor": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]",
                    "int"
                ],
                "uname": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]",
                    "int"
                ]
            }
        },
        "get_user_name": {
            "name": "get_user_name",
            "location": 55,
            "return": [],
            "arguments": {
                "cursor": [
                    "str",
                    "dict[, ]",
                    "float",
                    "bool",
                    "None"
                ],
                "uid": [
                    "str",
                    "dict[, ]",
                    "float",
                    "bool",
                    "None"
                ]
            }
        },
        "find_user_name": {
            "name": "find_user_name",
            "location": 59,
            "return": [],
            "arguments": {
                "cursor": [
                    "str",
                    "int",
                    "None"
                ],
                "query": [
                    "str"
                ]
            }
        },
        "insert_uid_uname": {
            "name": "insert_uid_uname",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "cursor": [],
                "uid": [
                    "str",
                    "int"
                ],
                "uname": [
                    "str",
                    "None",
                    "bool",
                    "dict[tuple[typing.Union[str,str]], Exception]",
                    "tuple[int]"
                ]
            }
        },
        "insert_log": {
            "name": "insert_log",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "cursor": [],
                "uid": [
                    "str",
                    "dict[, ]",
                    "bytes",
                    "int",
                    "None"
                ],
                "data": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_logs": {
            "name": "get_logs",
            "location": 83,
            "return": [],
            "arguments": {
                "uid": [
                    "str",
                    "int"
                ],
                "timeframe": [
                    "str",
                    "int"
                ]
            }
        },
        "DBConnection.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None",
                    "bool",
                    "float",
                    "list[]"
                ]
            }
        },
        "DBConnection.__enter__": {
            "name": "__enter__",
            "location": 18,
            "return": [
                "int",
                "str",
                "dict[str, str]",
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBConnection.__exit__": {
            "name": "__exit__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_type": [
                    "BaseException",
                    "None"
                ],
                "_value": [
                    "BaseException",
                    "None"
                ],
                "_traceback": [
                    "BaseException",
                    "None"
                ]
            }
        }
    },
    "Stalky-master/fetcher.py": {
        "get_secret": {
            "name": "get_secret",
            "location": 13,
            "return": [],
            "arguments": {
                "field": [
                    "str",
                    "list[str]",
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        },
        "Fetcher.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fetcher.make_request": {
            "name": "make_request",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fetcher.log_lat": {
            "name": "log_lat",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [
                    "str",
                    "bool"
                ],
                "uid": [
                    "str",
                    "bool",
                    "dict[, ]"
                ],
                "record": [],
                "activity_key": [
                    "str"
                ]
            }
        },
        "Fetcher.start_request": {
            "name": "start_request",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fetcher.reset_params": {
            "name": "reset_params",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Stalky-master/wsgi.py": {}
}
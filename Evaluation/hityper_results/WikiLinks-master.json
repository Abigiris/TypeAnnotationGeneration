{
    "WikiLinks-master/conftest.py": {
        "media_root": {
            "name": "media_root",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "settings": []
            }
        }
    },
    "WikiLinks-master/manage.py": {},
    "WikiLinks-master/dataporten/admin.py": {},
    "WikiLinks-master/dataporten/api.py": {
        "userinfo": {
            "name": "userinfo",
            "location": 40,
            "return": [],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "usergroups": {
            "name": "usergroups",
            "location": 59,
            "return": [],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        }
    },
    "WikiLinks-master/dataporten/apps.py": {},
    "WikiLinks-master/dataporten/middleware.py": {
        "DataportenGroupsMiddleware.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "DataportenGroupsMiddleware.__call__": {
            "name": "__call__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DataportenGroupsMiddleware.process_view": {
            "name": "process_view",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "WikiLinks-master/dataporten/models.py": {
        "DataportenGroupManager.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "bytes",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "CourseManager.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "courses": [
                    "dict[, ]"
                ]
            }
        },
        "CourseManager.active": {
            "name": "active",
            "location": 66,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CourseManager.finished": {
            "name": "finished",
            "location": 70,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CourseManager.less_semesters_ago": {
            "name": "less_semesters_ago",
            "location": 73,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "than": [
                    "typing.Iterable[list[T]]",
                    "bool"
                ]
            }
        },
        "DataportenUser.token": {
            "name": "token",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataportenUser.dataporten": {
            "name": "dataporten",
            "location": 107,
            "return": [
                "DataportenGroupManager"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataportenUser.valid_request": {
            "name": "valid_request",
            "location": 111,
            "return": [
                "bool"
            ],
            "arguments": {
                "request": [
                    "dict[, ]"
                ]
            }
        }
    },
    "WikiLinks-master/dataporten/parsers.py": {
        "datetime_from": {
            "name": "datetime_from",
            "location": 7,
            "return": [],
            "arguments": {
                "json_string": []
            }
        },
        "group_type": {
            "name": "group_type",
            "location": 14,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "group_factory": {
            "name": "group_factory",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "next_holiday": {
            "name": "next_holiday",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "BaseGroup.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "BaseGroup.valid": {
            "name": "valid",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": [],
                "group": []
            }
        },
        "Group.valid": {
            "name": "valid",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [],
                "group": []
            }
        },
        "Membership.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "membership": []
            }
        },
        "Membership.__bool__": {
            "name": "__bool__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "Course.split_on_membership": {
            "name": "split_on_membership",
            "location": 134,
            "return": [],
            "arguments": {
                "cls": [],
                "courses": []
            }
        },
        "StudyProgram.__init__": {
            "name": "__init__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "MainProfile.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "Semester.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "Semester.determine_season": {
            "name": "determine_season",
            "location": 185,
            "return": [],
            "arguments": {
                "cls": [],
                "month": []
            }
        },
        "Semester.now": {
            "name": "now",
            "location": 192,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Semester.__sub__": {
            "name": "__sub__",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "WikiLinks-master/dataporten/views.py": {},
    "WikiLinks-master/dataporten/__init__.py": {},
    "WikiLinks-master/dataporten/migrations/0001_initial.py": {},
    "WikiLinks-master/dataporten/migrations/__init__.py": {},
    "WikiLinks-master/dataporten/oauth2/models.py": {},
    "WikiLinks-master/dataporten/oauth2/provider.py": {
        "DataportenAccount.get_avatar_url": {
            "name": "get_avatar_url",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataportenAccount.to_str": {
            "name": "to_str",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataportenProvider.extract_uid": {
            "name": "extract_uid",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DataportenProvider.extract_extra_data": {
            "name": "extract_extra_data",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DataportenProvider.extract_common_fields": {
            "name": "extract_common_fields",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "WikiLinks-master/dataporten/oauth2/tests.py": {
        "DataportenTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataportenTest.get_login_response_json": {
            "name": "get_login_response_json",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "with_refresh_token": [
                    "bool"
                ]
            }
        },
        "DataportenTest.get_mocked_response": {
            "name": "get_mocked_response",
            "location": 31,
            "return": [
                "MockedResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataportenTest.test_extract_uid": {
            "name": "test_extract_uid",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataportenTest.test_extract_extra_data": {
            "name": "test_extract_extra_data",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataportenTest.test_extract_common_fields": {
            "name": "test_extract_common_fields",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/dataporten/oauth2/urls.py": {},
    "WikiLinks-master/dataporten/oauth2/views.py": {
        "DataportenAdapter.complete_login": {
            "name": "complete_login",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "dict[, ]",
                    "bytes"
                ],
                "app": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "None"
                ],
                "token": [
                    "str"
                ]
            }
        }
    },
    "WikiLinks-master/dataporten/oauth2/__init__.py": {},
    "WikiLinks-master/dataporten/tests/conftest.py": {
        "dataporten": {
            "name": "dataporten",
            "location": 15,
            "return": [
                "DataportenGroupManager"
            ],
            "arguments": {}
        },
        "dataporten_user": {
            "name": "dataporten_user",
            "location": 23,
            "return": [
                "DataportenUserFactory"
            ],
            "arguments": {}
        },
        "user_with_dataporten_token": {
            "name": "user_with_dataporten_token",
            "location": 29,
            "return": [
                "DataportenUserFactory"
            ],
            "arguments": {}
        },
        "study_program_json": {
            "name": "study_program_json",
            "location": 38,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool,list[typing.Text]]]]]"
            ],
            "arguments": {}
        },
        "course_json": {
            "name": "course_json",
            "location": 57,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool,list[typing.Text]]]]]"
            ],
            "arguments": {}
        },
        "main_profile_json": {
            "name": "main_profile_json",
            "location": 78,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,list[typing.Text],bool]]]]"
            ],
            "arguments": {}
        },
        "organisation_unit_json": {
            "name": "organisation_unit_json",
            "location": 96,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,bool,dict[typing.Text, typing.Union[bool,typing.Text]]]]"
            ],
            "arguments": {}
        },
        "finished_course": {
            "name": "finished_course",
            "location": 111,
            "return": [
                "Course"
            ],
            "arguments": {}
        },
        "non_finished_course": {
            "name": "non_finished_course",
            "location": 134,
            "return": [
                "Course"
            ],
            "arguments": {}
        },
        "ongoing_course": {
            "name": "ongoing_course",
            "location": 155,
            "return": [
                "Course"
            ],
            "arguments": {}
        },
        "course_last_semester": {
            "name": "course_last_semester",
            "location": 178,
            "return": [
                "Course"
            ],
            "arguments": {}
        }
    },
    "WikiLinks-master/dataporten/tests/factories.py": {},
    "WikiLinks-master/dataporten/tests/test_api.py": {
        "TestUserInfo.test_valid_case": {
            "name": "test_valid_case",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGroups.test_valid_case": {
            "name": "test_valid_case",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/dataporten/tests/test_middleware.py": {
        "test_dataporten_middleware_with_anonymous_user": {
            "name": "test_dataporten_middleware_with_anonymous_user",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": []
            }
        },
        "test_dataporten_middleware_with_plain_django_user": {
            "name": "test_dataporten_middleware_with_plain_django_user",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "django_user_model": [
                    "typing.Iterable[typing.Any]",
                    "None",
                    "typing.Mapping",
                    "str"
                ]
            }
        },
        "test_dataporten_middleware_with_user_with_dataporten_credentials": {
            "name": "test_dataporten_middleware_with_user_with_dataporten_credentials",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [
                    "dict[typing.Hashable, typing.Any]",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "user_with_dataporten_token": [
                    "int",
                    "typing.Type"
                ]
            }
        }
    },
    "WikiLinks-master/dataporten/tests/test_models.py": {
        "token_import_function": {
            "name": "token_import_function",
            "location": 84,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "user": [
                    "bool",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "test_dataporten_user_groups": {
            "name": "test_dataporten_user_groups",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "dataporten_user": []
            }
        },
        "test_dataporten_user_validation": {
            "name": "test_dataporten_user_validation",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "django_user_model": [
                    "typing.Iterable[typing.Any]",
                    "None"
                ],
                "dataporten_user": []
            }
        },
        "TestDataportenGroupManager.test_dataporten_courses": {
            "name": "test_dataporten_courses",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataporten": [
                    "bool"
                ]
            }
        },
        "TestDataportenGroupManager.test_dataporten_study_program": {
            "name": "test_dataporten_study_program",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataporten": [
                    "str",
                    "float"
                ]
            }
        },
        "TestDataportenGroupManager.test_dataporten_main_profile": {
            "name": "test_dataporten_main_profile",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataporten": [
                    "str",
                    "int",
                    "typing.Type"
                ]
            }
        },
        "TestDataportenGroupManager.test_dataporten_organisation_units": {
            "name": "test_dataporten_organisation_units",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataporten": [
                    "bool"
                ]
            }
        },
        "TestCourseManager.test_less_semesters_ago": {
            "name": "test_less_semesters_ago",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_course": [],
                "course_last_semester": [],
                "ongoing_course": []
            }
        },
        "TestCourseManager.test_semester_in_future": {
            "name": "test_semester_in_future",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ongoing_course": []
            }
        },
        "TestTokenImport.test_token_not_configured": {
            "name": "test_token_not_configured",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "typing.Callable[, ]"
                ],
                "dataporten_user": [
                    "str"
                ]
            }
        },
        "TestTokenImport.test_token_unimportable_path": {
            "name": "test_token_unimportable_path",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "bool"
                ],
                "dataporten_user": [
                    "str"
                ]
            }
        },
        "TestTokenImport.test_token_properly_configured": {
            "name": "test_token_properly_configured",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "typing.Callable[, ]"
                ],
                "dataporten_user": [
                    "str"
                ]
            }
        }
    },
    "WikiLinks-master/dataporten/tests/test_parsers.py": {
        "TestDatetimeFrom.test_basic_correctness": {
            "name": "test_basic_correctness",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGroupFactory.test_study_program_factory": {
            "name": "test_study_program_factory",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program_json": []
            }
        },
        "TestGroupFactory.test_course_factory": {
            "name": "test_course_factory",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "course_json": []
            }
        },
        "TestGroupFactory.test_main_profile_factory": {
            "name": "test_main_profile_factory",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "main_profile_json": []
            }
        },
        "TestGroupFactory.test_group_factory_given_iterable_argument": {
            "name": "test_group_factory_given_iterable_argument",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program_json": [],
                "course_json": []
            }
        },
        "TestGroup.test_properties_present": {
            "name": "test_properties_present",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program_json": []
            }
        },
        "TestGroup.test_active_membership": {
            "name": "test_active_membership",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program_json": []
            }
        },
        "TestMembership.test_perpetual_membership": {
            "name": "test_perpetual_membership",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMembership.test_inactive_membership": {
            "name": "test_inactive_membership",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMembership.test_limited_membership": {
            "name": "test_limited_membership",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMembership.test_expired_membership": {
            "name": "test_expired_membership",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourse.test_course_code": {
            "name": "test_course_code",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_course": []
            }
        },
        "TestCourse.test_finished_course": {
            "name": "test_finished_course",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_course": []
            }
        },
        "TestCourse.test_ongoing_course_with_end_time": {
            "name": "test_ongoing_course_with_end_time",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ongoing_course": []
            }
        },
        "TestCourse.test_ongoing_course_without_end_time": {
            "name": "test_ongoing_course_without_end_time",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "non_finished_course": []
            }
        },
        "TestCourse.test_split_on_membership": {
            "name": "test_split_on_membership",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_course": [],
                "non_finished_course": [],
                "ongoing_course": []
            }
        },
        "TestStudyProgram.test_study_program_basic_properties": {
            "name": "test_study_program_basic_properties",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program_json": []
            }
        },
        "TestMainProfile.test_main_profile_basic_properties": {
            "name": "test_main_profile_basic_properties",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "main_profile_json": []
            }
        },
        "TestOrganisationUnit.test_organisation_unit_basic_properties": {
            "name": "test_organisation_unit_basic_properties",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "organisation_unit_json": []
            }
        },
        "TestSemester.setUp": {
            "name": "setUp",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_year_of_semester": {
            "name": "test_year_of_semester",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_semester_season": {
            "name": "test_semester_season",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_subtracting_semesters": {
            "name": "test_subtracting_semesters",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/dataporten/tests/utils.py": {
        "mock_userinfo_request": {
            "name": "mock_userinfo_request",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "mock_usergroups_request": {
            "name": "mock_usergroups_request",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "WikiLinks-master/dataporten/tests/__init__.py": {},
    "WikiLinks-master/examiner/admin.py": {},
    "WikiLinks-master/examiner/apps.py": {
        "ExaminerConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/crawlers.py": {
        "MathematicalSciencesCrawler.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "courses": [
                    "str",
                    "list[typing.Callable[, ]]"
                ]
            }
        },
        "MathematicalSciencesCrawler.__iter__": {
            "name": "__iter__",
            "location": 26,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "MathematicalSciencesCourseCrawler.homepage_url": {
            "name": "homepage_url",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.has_content": {
            "name": "has_content",
            "location": 41,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.exams_pages": {
            "name": "exams_pages",
            "location": 50,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.pdf_urls": {
            "name": "pdf_urls",
            "location": 99,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.__repr__": {
            "name": "__repr__",
            "location": 126,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "MathematicalSciencesCourseCrawler.__bool__": {
            "name": "__bool__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DvikanCrawler.course_urls": {
            "name": "course_urls",
            "location": 139,
            "return": [
                "list[]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "str",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "DvikanCrawler.pdf_urls": {
            "name": "pdf_urls",
            "location": 156,
            "return": [
                "typing.Generator[]",
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "DvikanCrawler.get": {
            "name": "get",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "PhysicsCrawler.course_urls": {
            "name": "course_urls",
            "location": 184,
            "return": [
                "list[]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "typing.Callable[, ]"
                ]
            }
        },
        "PhysicsCrawler.pdf_urls": {
            "name": "pdf_urls",
            "location": 195,
            "return": [
                "typing.Generator[]",
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "PhysicsCrawler.get": {
            "name": "get",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "WikiLinks-master/examiner/forms.py": {
        "VerifyExamForm.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerifyExamForm.save": {
            "name": "save",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool"
                ]
            }
        },
        "ExamsSearchForm.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/models.py": {
        "upload_path": {
            "name": "upload_path",
            "location": 305,
            "return": [],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "ExamRelatedCourse.clean": {
            "name": "clean",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExamRelatedCourse.validate_unique": {
            "name": "validate_unique",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExamRelatedCourse.save": {
            "name": "save",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentInfoQueryset.organize": {
            "name": "organize",
            "location": 111,
            "return": [
                "dict[typing.Text, dict[, ]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentInfo.__repr__": {
            "name": "__repr__",
            "location": 254,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentInfo.clean": {
            "name": "clean",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentInfo.save": {
            "name": "save",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pdf.read_text": {
            "name": "read_text",
            "location": 361,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "allow_ocr": [
                    "bool"
                ],
                "force_ocr": [
                    "bool"
                ]
            }
        },
        "Pdf.text": {
            "name": "text",
            "location": 398,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pdf.classify": {
            "name": "classify",
            "location": 406,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save": [
                    "bool"
                ],
                "read": [
                    "bool"
                ],
                "allow_ocr": [
                    "bool"
                ]
            }
        },
        "Pdf.clean": {
            "name": "clean",
            "location": 512,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pdf.save": {
            "name": "save",
            "location": 527,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pdf.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 534,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pdf.__repr__": {
            "name": "__repr__",
            "location": 541,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfPage.__repr__": {
            "name": "__repr__",
            "location": 579,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfUrl.backup_file": {
            "name": "backup_file",
            "location": 631,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfUrl.save": {
            "name": "save",
            "location": 673,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfUrl.classify": {
            "name": "classify",
            "location": 683,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "save": [
                    "bool"
                ]
            }
        },
        "PdfUrl.__repr__": {
            "name": "__repr__",
            "location": 710,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/parsers.py": {
        "Season.str_from_field": {
            "name": "str_from_field",
            "location": 52,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "ExamURLParser.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "ExamURLParser.tokenize": {
            "name": "tokenize",
            "location": 142,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "ExamURLParser.find_date": {
            "name": "find_date",
            "location": 148,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "ExamURLParser._code": {
            "name": "_code",
            "location": 224,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "ExamURLParser.year": {
            "name": "year",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.solutions": {
            "name": "solutions",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.continuation": {
            "name": "continuation",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.season": {
            "name": "season",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.language": {
            "name": "language",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.probably_exam": {
            "name": "probably_exam",
            "location": 358,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.parse_physics_url": {
            "name": "parse_physics_url",
            "location": 371,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.__repr__": {
            "name": "__repr__",
            "location": 437,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExamURLParser.__str__": {
            "name": "__str__",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PdfParser.__init__": {
            "name": "__init__",
            "location": 590,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "PdfParser._content_type": {
            "name": "_content_type",
            "location": 607,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "PdfParser._solutions": {
            "name": "_solutions",
            "location": 615,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "PdfParser._course_codes": {
            "name": "_course_codes",
            "location": 620,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "PdfParser._language": {
            "name": "_language",
            "location": 641,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "PdfParser._date": {
            "name": "_date",
            "location": 653,
            "return": [],
            "arguments": {
                "cls": [],
                "text": []
            }
        },
        "PdfParser.__repr__": {
            "name": "__repr__",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/pdf.py": {
        "PdfReader.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "PdfReader.read_text": {
            "name": "read_text",
            "location": 53,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfReader.ocr_text": {
            "name": "ocr_text",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PdfReader._tiff_directory": {
            "name": "_tiff_directory",
            "location": 138,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/urls.py": {},
    "WikiLinks-master/examiner/views.py": {
        "add_context": {
            "name": "add_context",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [],
                "context": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ExamsView.get_context_data": {
            "name": "get_context_data",
            "location": 26,
            "return": [
                "dict[, ]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExamsView.get": {
            "name": "get",
            "location": 60,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "VerifyView.get": {
            "name": "get",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "VerifyView.form_valid": {
            "name": "form_valid",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CourseWithExamsAutocomplete.get_queryset": {
            "name": "get_queryset",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchView.form_valid": {
            "name": "form_valid",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "form": [
                    "str",
                    "typing.IO",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "SearchView.get_context_data": {
            "name": "get_context_data",
            "location": 141,
            "return": [
                "dict[, ]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/__init__.py": {},
    "WikiLinks-master/examiner/management/commands/examiner.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.crawl": {
            "name": "crawl",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "course_code": [
                    "str"
                ]
            }
        },
        "Command.backup": {
            "name": "backup",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "course_code": [
                    "str",
                    "bool"
                ],
                "retry": [
                    "bool",
                    "str",
                    "set[str]",
                    "list[\"libkol.Item\"]"
                ]
            }
        },
        "Command.classify": {
            "name": "classify",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.test": {
            "name": "test",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gui": [
                    "bool"
                ]
            }
        }
    },
    "WikiLinks-master/examiner/migrations/0001_initial.py": {},
    "WikiLinks-master/examiner/migrations/0002_auto_20190125_1255.py": {},
    "WikiLinks-master/examiner/migrations/__init__.py": {},
    "WikiLinks-master/examiner/signals/handlers.py": {
        "delete_pdf_backup_on_deletion": {
            "name": "delete_pdf_backup_on_deletion",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "str",
                    "bool",
                    "typing.Iterable[int]"
                ],
                "instance": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        }
    },
    "WikiLinks-master/examiner/signals/__init__.py": {},
    "WikiLinks-master/examiner/tests/test_models.py": {
        "test_derive_course_from_course_code_on_save": {
            "name": "test_derive_course_from_course_code_on_save",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_derive_course_code_from_course_on_save": {
            "name": "test_derive_course_code_from_course_on_save",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_prevention_of_non_unique_url": {
            "name": "test_prevention_of_non_unique_url",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_url_classify_method": {
            "name": "test_url_classify_method",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_classify_url_of_already_verified_url": {
            "name": "test_classify_url_of_already_verified_url",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_file_backup": {
            "name": "test_file_backup",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "settings": []
            }
        },
        "test_file_backup_of_dead_link": {
            "name": "test_file_backup_of_dead_link",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "settings": []
            }
        },
        "test_queryset_organize_method": {
            "name": "test_queryset_organize_method",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string_content": {
            "name": "test_string_content",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_deletion_of_file_on_delete": {
            "name": "test_deletion_of_file_on_delete",
            "location": 355,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "settings": []
            }
        },
        "test_raising_validation_errors_of_wrong_sha1_formatting": {
            "name": "test_raising_validation_errors_of_wrong_sha1_formatting",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_absolute_url_for_pdf": {
            "name": "test_get_absolute_url_for_pdf",
            "location": 386,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestExamClassification.test_classify_pdf": {
            "name": "test_classify_pdf",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamClassification.test_classify_pdf_with_several_course_codes": {
            "name": "test_classify_pdf_with_several_course_codes",
            "location": 472,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamClassification.test_combining_urls_and_content_for_classification": {
            "name": "test_combining_urls_and_content_for_classification",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamClassification.test_classifiying_bad_content": {
            "name": "test_classifiying_bad_content",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamClassification.test_using_courses_from_url_in_classification": {
            "name": "test_using_courses_from_url_in_classification",
            "location": 569,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamClassification.test_determining_solutions_of_exam_without_content": {
            "name": "test_determining_solutions_of_exam_without_content",
            "location": 597,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamRelatedCourse.test_deriving_course_from_course_code": {
            "name": "test_deriving_course_from_course_code",
            "location": 625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamRelatedCourse.test_when_course_cant_be_derived_from_course_code": {
            "name": "test_when_course_cant_be_derived_from_course_code",
            "location": 636,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamRelatedCourse.test_creating_two_primary_courses_for_one_secondary_course": {
            "name": "test_creating_two_primary_courses_for_one_secondary_course",
            "location": 646,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamRelatedCourse.test_setting_a_primary_course_as_a_secondary_one": {
            "name": "test_setting_a_primary_course_as_a_secondary_one",
            "location": 662,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamRelatedCourse.test_primary_course_with_several_secondary_courses": {
            "name": "test_primary_course_with_several_secondary_courses",
            "location": 678,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentInfoContentType.test_default_type_of_document_info_being_unknown": {
            "name": "test_default_type_of_document_info_being_unknown",
            "location": 697,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentInfoContentType.test_number_only_being_allowed_for_exercise": {
            "name": "test_number_only_being_allowed_for_exercise",
            "location": 703,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/examiner/tests/test_parsers.py": {
        "test_tokenize": {
            "name": "test_tokenize",
            "location": 558,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ExamURL.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "code": [],
                "year": [],
                "season": [],
                "solutions": [],
                "language": [],
                "probably_exam": []
            }
        },
        "ExamURL.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamURLParser.test_getting_url": {
            "name": "test_getting_url",
            "location": 523,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_year_parsing": {
            "name": "test_year_parsing",
            "location": 528,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_course_code_parsing": {
            "name": "test_course_code_parsing",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_season_parser": {
            "name": "test_season_parser",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_solutions_parser": {
            "name": "test_solutions_parser",
            "location": 543,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_probably_exam": {
            "name": "test_probably_exam",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "TestExamURLParser.test_language_parser": {
            "name": "test_language_parser",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exam": []
            }
        },
        "ExamPDF.__init__": {
            "name": "__init__",
            "location": 569,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pages": [],
                "course_codes": [],
                "year": [],
                "season": [],
                "solutions": [],
                "language": [],
                "content_type": []
            }
        },
        "ExamPDF.__repr__": {
            "name": "__repr__",
            "location": 587,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExamPdfParser.test_year_parsing": {
            "name": "test_year_parsing",
            "location": 769,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        },
        "TestExamPdfParser.test_course_code_parsing": {
            "name": "test_course_code_parsing",
            "location": 774,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        },
        "TestExamPdfParser.test_season_parser": {
            "name": "test_season_parser",
            "location": 779,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        },
        "TestExamPdfParser.test_solutions_parser": {
            "name": "test_solutions_parser",
            "location": 784,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        },
        "TestExamPdfParser.test_content_type": {
            "name": "test_content_type",
            "location": 789,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        },
        "TestExamPdfParser.test_language_parser": {
            "name": "test_language_parser",
            "location": 794,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pdf": []
            }
        }
    },
    "WikiLinks-master/examiner/tests/test_pdf.py": {
        "pdf_path": {
            "name": "pdf_path",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "ocr_many_pages": {
            "name": "ocr_many_pages",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "test_creation_of_temporary_tiff_file": {
            "name": "test_creation_of_temporary_tiff_file",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "pdf_path": [
                    "str"
                ]
            }
        },
        "test_read_text": {
            "name": "test_read_text",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "pdf_path": [
                    "str"
                ]
            }
        },
        "test_read_text_of_text_indexed_pdf": {
            "name": "test_read_text_of_text_indexed_pdf",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "allow_ocr": [
                    "int"
                ],
                "monkeypatch": []
            }
        },
        "test_read_text_of_non_indexed_pdf_without_ocr": {
            "name": "test_read_text_of_non_indexed_pdf_without_ocr",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "pdf_path": [
                    "str"
                ]
            }
        },
        "test_read_text_of_non_indexed_pdf_with_ocr": {
            "name": "test_read_text_of_non_indexed_pdf_with_ocr",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ],
                "pdf_path": [
                    "str"
                ]
            }
        },
        "test_pdf_with_many_pages_requires_ocr": {
            "name": "test_pdf_with_many_pages_requires_ocr",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "ocr_many_pages": []
            }
        },
        "test_force_ocr": {
            "name": "test_force_ocr",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "WikiLinks-master/examiner/tests/test_views.py": {
        "test_empty_exams_view": {
            "name": "test_empty_exams_view",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_verify_random_pdf_view": {
            "name": "test_verify_random_pdf_view",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "django_user_model": []
            }
        },
        "test_verify_pdf_view": {
            "name": "test_verify_pdf_view",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        }
    },
    "WikiLinks-master/examiner/tests/utils.py": {
        "sha1": {
            "name": "sha1",
            "location": 6,
            "return": [],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "WikiLinks-master/kokekunster/cronjobs.py": {
        "Backup.do": {
            "name": "do",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/kokekunster/oauth.py": {
        "allauth_token": {
            "name": "allauth_token",
            "location": 6,
            "return": [],
            "arguments": {
                "user": [
                    "str",
                    "None",
                    "list[U]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "WikiLinks-master/kokekunster/settings.py": {},
    "WikiLinks-master/kokekunster/settings_dev.py": {},
    "WikiLinks-master/kokekunster/settings_prod.py": {},
    "WikiLinks-master/kokekunster/settings_test.py": {},
    "WikiLinks-master/kokekunster/urls.py": {},
    "WikiLinks-master/kokekunster/wsgi.py": {},
    "WikiLinks-master/kokekunster/__init__.py": {},
    "WikiLinks-master/kokekunster/tests/conftest.py": {
        "dataporten_user": {
            "name": "dataporten_user",
            "location": 8,
            "return": [
                "DataportenUserFactory"
            ],
            "arguments": {}
        }
    },
    "WikiLinks-master/kokekunster/tests/test_settings.py": {
        "test_dataporten_user_token": {
            "name": "test_dataporten_user_token",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "dataporten_user": []
            }
        }
    },
    "WikiLinks-master/kokekunster/tests/__init__.py": {},
    "WikiLinks-master/semesterpage/adapters.py": {
        "reconcile_dataporten_data": {
            "name": "reconcile_dataporten_data",
            "location": 10,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "sync_dataporten_courses_with_db": {
            "name": "sync_dataporten_courses_with_db",
            "location": 19,
            "return": [],
            "arguments": {
                "courses": []
            }
        },
        "sync_options_of_user_with_dataporten": {
            "name": "sync_options_of_user_with_dataporten",
            "location": 50,
            "return": [],
            "arguments": {
                "user": []
            }
        }
    },
    "WikiLinks-master/semesterpage/admin.py": {
        "StudyProgramAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CourseLinkInline.get_fields": {
            "name": "get_fields",
            "location": 75,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "set[str]"
                ],
                "obj": [
                    "None",
                    "str"
                ]
            }
        },
        "CourseUploadInline.get_fields": {
            "name": "get_fields",
            "location": 100,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "set[str]"
                ],
                "obj": [
                    "None",
                    "str"
                ]
            }
        },
        "CourseAdmin.save_formset": {
            "name": "save_formset",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ],
                "form": [
                    "tuple[int]",
                    "dict[, ]"
                ],
                "formset": [],
                "change": [
                    "bytes"
                ]
            }
        },
        "CourseAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CourseAdmin.get_fieldsets": {
            "name": "get_fieldsets",
            "location": 152,
            "return": [
                "tuple[tuple[dict[typing.Text, tuple[typing.Text]]]]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "CourseAdmin.formfield_for_manytomany": {
            "name": "formfield_for_manytomany",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "db_field": [
                    "typing.Callable[, ]",
                    "typing.Mapping"
                ],
                "request": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "CourseAdmin.response_change": {
            "name": "response_change",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CourseAdmin.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "obj": [
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "CourseAdmin.has_add_permission": {
            "name": "has_add_permission",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "set[str]"
                ],
                "obj": [
                    "None",
                    "bool"
                ]
            }
        },
        "CourseAdmin.save_model": {
            "name": "save_model",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ],
                "obj": [],
                "form": [
                    "bool",
                    "dict[, ]"
                ],
                "change": [
                    "str"
                ]
            }
        },
        "ResourceLinkListAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResourceLinkListAdmin.formfield_for_manytomany": {
            "name": "formfield_for_manytomany",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "db_field": [
                    "typing.Callable[, ]",
                    "typing.Mapping"
                ],
                "request": [
                    "str"
                ]
            }
        },
        "CustomLinkCategoryAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "OptionsAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "OptionsAdmin.response_change": {
            "name": "response_change",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "obj": []
            }
        },
        "OptionsAdmin.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "obj": [
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "OptionsAdmin.save_model": {
            "name": "save_model",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "tuple[int]"
                ],
                "obj": [],
                "form": [
                    "dict[, ]",
                    "tuple[int]"
                ],
                "change": [
                    "dict[, ]",
                    "tuple[int]"
                ]
            }
        }
    },
    "WikiLinks-master/semesterpage/apps.py": {
        "create_contributor_groups": {
            "name": "create_contributor_groups",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SemesterpageConfig.ready": {
            "name": "ready",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/forms.py": {
        "OptionsForm.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/models.py": {
        "upload_path": {
            "name": "upload_path",
            "location": 23,
            "return": [],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "norwegian_slugify": {
            "name": "norwegian_slugify",
            "location": 32,
            "return": [],
            "arguments": {
                "instance": []
            }
        },
        "course_file_path": {
            "name": "course_file_path",
            "location": 477,
            "return": [],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "StudyProgram.simple_semesters": {
            "name": "simple_semesters",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StudyProgram.grouped_split_semesters": {
            "name": "grouped_split_semesters",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StudyProgram.resource_link_lists": {
            "name": "resource_link_lists",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StudyProgram.check_access": {
            "name": "check_access",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "StudyProgram.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StudyProgram.__str__": {
            "name": "__str__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainProfile.check_access": {
            "name": "check_access",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "MainProfile.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainProfile.__str__": {
            "name": "__str__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Semester.get": {
            "name": "get",
            "location": 205,
            "return": [],
            "arguments": {
                "study_program": [],
                "main_profile": [
                    "None"
                ],
                "number": []
            }
        },
        "Semester.check_access": {
            "name": "check_access",
            "location": 244,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Semester.get_archive_url": {
            "name": "get_archive_url",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Semester.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Semester.__str__": {
            "name": "__str__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkList.logo": {
            "name": "logo",
            "location": 331,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkList.__str__": {
            "name": "__str__",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkList.clean": {
            "name": "clean",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Course.check_access": {
            "name": "check_access",
            "location": 395,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Course.get_admin_url": {
            "name": "get_admin_url",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.save": {
            "name": "save",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Course.short_name": {
            "name": "short_name",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.url": {
            "name": "url",
            "location": 457,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.__str__": {
            "name": "__str__",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CourseUpload.url": {
            "name": "url",
            "location": 522,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CourseUpload.filename": {
            "name": "filename",
            "location": 526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CourseUpload.check_access": {
            "name": "check_access",
            "location": 529,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "CourseUpload.__str__": {
            "name": "__str__",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceLinkList.check_access": {
            "name": "check_access",
            "location": 571,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "CustomLinkCategory.check_access": {
            "name": "check_access",
            "location": 598,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "CustomLinkCategory.__str__": {
            "name": "__str__",
            "location": 601,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.__str__": {
            "name": "__str__",
            "location": 688,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.clean": {
            "name": "clean",
            "location": 691,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CourseLink.check_access": {
            "name": "check_access",
            "location": 725,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "CourseLink.__str__": {
            "name": "__str__",
            "location": 728,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceLink.check_access": {
            "name": "check_access",
            "location": 755,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "ResourceLink.__str__": {
            "name": "__str__",
            "location": 759,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.study_program": {
            "name": "study_program",
            "location": 814,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.main_profile": {
            "name": "main_profile",
            "location": 822,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.has_contributor_access_to": {
            "name": "has_contributor_access_to",
            "location": 832,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "Contributor.accessible_study_programs": {
            "name": "accessible_study_programs",
            "location": 847,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_main_profiles": {
            "name": "accessible_main_profiles",
            "location": 853,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_semesters": {
            "name": "accessible_semesters",
            "location": 863,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_courses": {
            "name": "accessible_courses",
            "location": 875,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_resource_link_lists": {
            "name": "accessible_resource_link_lists",
            "location": 894,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_custom_link_categories": {
            "name": "accessible_custom_link_categories",
            "location": 897,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_course_links": {
            "name": "accessible_course_links",
            "location": 900,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_course_uploads": {
            "name": "accessible_course_uploads",
            "location": 903,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.accessible_resource_links": {
            "name": "accessible_resource_links",
            "location": 906,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contributor.__str__": {
            "name": "__str__",
            "location": 909,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Options.study_program": {
            "name": "study_program",
            "location": 972,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.main_profile": {
            "name": "main_profile",
            "location": 976,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.get_archive_url": {
            "name": "get_archive_url",
            "location": 979,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.courses": {
            "name": "courses",
            "location": 987,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.check_access": {
            "name": "check_access",
            "location": 993,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Options.get_admin_url": {
            "name": "get_admin_url",
            "location": 996,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 1000,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Options.__str__": {
            "name": "__str__",
            "location": 1003,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/rules.py": {
        "has_contributor_access": {
            "name": "has_contributor_access",
            "location": 10,
            "return": [],
            "arguments": {
                "user": [
                    "bool"
                ],
                "object": [
                    "bool"
                ]
            }
        }
    },
    "WikiLinks-master/semesterpage/urls.py": {},
    "WikiLinks-master/semesterpage/views.py": {
        "homepage": {
            "name": "homepage",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "studentpage": {
            "name": "studentpage",
            "location": 51,
            "return": [],
            "arguments": {
                "request": [],
                "homepage": []
            }
        },
        "semester_view": {
            "name": "semester_view",
            "location": 94,
            "return": [],
            "arguments": {
                "request": [
                    "str",
                    "None"
                ],
                "study_program": [
                    "bool",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "main_profile": [
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "semester_number": [
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "save_location": [
                    "bool"
                ]
            }
        },
        "profile": {
            "name": "profile",
            "location": 163,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_calendar_name": {
            "name": "get_calendar_name",
            "location": 179,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "calendar": {
            "name": "calendar",
            "location": 194,
            "return": [],
            "arguments": {
                "request": [],
                "calendar_name": [
                    "str"
                ]
            }
        },
        "admin_login": {
            "name": "admin_login",
            "location": 205,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "admin_course_history": {
            "name": "admin_course_history",
            "location": 222,
            "return": [],
            "arguments": {
                "request": [
                    "str"
                ],
                "course_pk": [
                    "str"
                ]
            }
        },
        "new_course_url": {
            "name": "new_course_url",
            "location": 242,
            "return": [],
            "arguments": {
                "request": [],
                "course_pk": []
            }
        },
        "remove_course": {
            "name": "remove_course",
            "location": 261,
            "return": [],
            "arguments": {
                "request": [
                    "dict[, ]"
                ],
                "course_pk": [
                    "str"
                ]
            }
        },
        "CourseAutocomplete.get_queryset": {
            "name": "get_queryset",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/__init__.py": {},
    "WikiLinks-master/semesterpage/management/commands/populate_courses.py": {
        "Command.handle": {
            "name": "handle",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IMEAPI.all_courses": {
            "name": "all_courses",
            "location": 45,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text], ]]"
            ],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "str",
                    "dict[str, str]",
                    "bytes",
                    "dict[, ]"
                ],
                "skip": [
                    "set[str]",
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "list[int]",
                    "str"
                ]
            }
        },
        "IMEAPI.course_homepage": {
            "name": "course_homepage",
            "location": 68,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "course": []
            }
        }
    },
    "WikiLinks-master/semesterpage/migrations/0001_initial.py": {},
    "WikiLinks-master/semesterpage/migrations/0002_auto_20160805_0243.py": {},
    "WikiLinks-master/semesterpage/migrations/0003_load_init_data.py": {
        "set_admin_theme": {
            "name": "set_admin_theme",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str"
                ]
            }
        },
        "set_site": {
            "name": "set_site",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "WikiLinks-master/semesterpage/migrations/0004_course_created_by.py": {},
    "WikiLinks-master/semesterpage/migrations/0005_auto_20160805_1840.py": {},
    "WikiLinks-master/semesterpage/migrations/0006_auto_20160806_0305.py": {},
    "WikiLinks-master/semesterpage/migrations/0007_auto_20160807_0038.py": {},
    "WikiLinks-master/semesterpage/migrations/0008_auto_20160812_2305.py": {},
    "WikiLinks-master/semesterpage/migrations/0009_auto_20160813_0020.py": {},
    "WikiLinks-master/semesterpage/migrations/0010_auto_20170801_1719.py": {},
    "WikiLinks-master/semesterpage/migrations/0011_auto_20170801_2108.py": {},
    "WikiLinks-master/semesterpage/migrations/0012_auto_20170801_2134.py": {},
    "WikiLinks-master/semesterpage/migrations/0013_auto_20170801_2136.py": {},
    "WikiLinks-master/semesterpage/migrations/0014_auto_20170802_1253.py": {},
    "WikiLinks-master/semesterpage/migrations/0015_remove_options_homepage_slug.py": {},
    "WikiLinks-master/semesterpage/migrations/0016_auto_20170802_1532.py": {},
    "WikiLinks-master/semesterpage/migrations/0017_auto_20170805_2359.py": {},
    "WikiLinks-master/semesterpage/migrations/0018_auto_20170806_0147.py": {},
    "WikiLinks-master/semesterpage/migrations/0019_auto_20170806_0205.py": {},
    "WikiLinks-master/semesterpage/migrations/0020_auto_20170806_1342.py": {},
    "WikiLinks-master/semesterpage/migrations/0021_remove_options_self_chosen_semester.py": {},
    "WikiLinks-master/semesterpage/migrations/0022_semester_has_electives.py": {},
    "WikiLinks-master/semesterpage/migrations/0023_auto_20170809_2327.py": {},
    "WikiLinks-master/semesterpage/migrations/0024_course_uploads.py": {},
    "WikiLinks-master/semesterpage/migrations/0025_auto_20170815_2238.py": {},
    "WikiLinks-master/semesterpage/migrations/0026_auto_20170815_2311.py": {},
    "WikiLinks-master/semesterpage/migrations/0027_options_last_user_modification.py": {},
    "WikiLinks-master/semesterpage/migrations/0028_auto_20170906_2226.py": {},
    "WikiLinks-master/semesterpage/migrations/0029_auto_20181228_0012.py": {},
    "WikiLinks-master/semesterpage/migrations/__init__.py": {},
    "WikiLinks-master/semesterpage/signals/handlers.py": {
        "user_save": {
            "name": "user_save",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "list[str]",
                    "bool",
                    "str",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ],
                "instance": [],
                "created": [
                    "list[str]",
                    "bool",
                    "str",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ],
                "raw": [
                    "list[str]",
                    "bool",
                    "str",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ]
            }
        },
        "contributor_save": {
            "name": "contributor_save",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "str",
                    "int",
                    "list[dict[, ]]"
                ],
                "instance": [
                    "int",
                    "list[]",
                    "typing.Callable[, ]",
                    "list[str]",
                    "None"
                ],
                "created": [
                    "int",
                    "list[]",
                    "typing.Callable[, ]",
                    "list[str]",
                    "None"
                ],
                "raw": [
                    "int",
                    "list[]",
                    "typing.Callable[, ]",
                    "list[str]",
                    "None"
                ]
            }
        },
        "set_groups": {
            "name": "set_groups",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "str"
                ]
            }
        },
        "dataporten_sync_at_login": {
            "name": "dataporten_sync_at_login",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "list[dict[str, typing.Any]]"
                ],
                "user": [
                    "bool"
                ]
            }
        }
    },
    "WikiLinks-master/semesterpage/tests/conftest.py": {
        "fysmat_user": {
            "name": "fysmat_user",
            "location": 21,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "dataporten_user": [
                    "str",
                    "None"
                ],
                "dataporten": [
                    "str",
                    "None"
                ]
            }
        },
        "study_program": {
            "name": "study_program",
            "location": 29,
            "return": [
                "StudyProgramFactory"
            ],
            "arguments": {}
        },
        "main_profile": {
            "name": "main_profile",
            "location": 33,
            "return": [
                "MainProfileFactory"
            ],
            "arguments": {}
        },
        "semester": {
            "name": "semester",
            "location": 37,
            "return": [
                "SemesterFactory"
            ],
            "arguments": {}
        },
        "course": {
            "name": "course",
            "location": 41,
            "return": [
                "CourseFactory"
            ],
            "arguments": {
                "semester": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "resource_link_list": {
            "name": "resource_link_list",
            "location": 45,
            "return": [
                "ResourceLinkListFactory"
            ],
            "arguments": {
                "study_program": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "str",
                    "typing.Callable[str, T]"
                ]
            }
        },
        "course_link": {
            "name": "course_link",
            "location": 49,
            "return": [
                "CourseLinkFactory"
            ],
            "arguments": {}
        },
        "resource_link": {
            "name": "resource_link",
            "location": 53,
            "return": [
                "ResourceLinkFactory"
            ],
            "arguments": {}
        },
        "contributor": {
            "name": "contributor",
            "location": 57,
            "return": [
                "ContributorFactory"
            ],
            "arguments": {}
        },
        "options": {
            "name": "options",
            "location": 61,
            "return": [
                "OptionsFactory"
            ],
            "arguments": {}
        }
    },
    "WikiLinks-master/semesterpage/tests/factories.py": {
        "CourseFactory.semesters": {
            "name": "semesters",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "tuple[typing.Union[int,str]]",
                    "typing.Iterator"
                ],
                "extracted": [
                    "tuple[typing.Union[int,str]]"
                ]
            }
        },
        "ResourceLinkListFactory.study_programs": {
            "name": "study_programs",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "tuple[typing.Union[int,str]]",
                    "typing.Iterator"
                ],
                "extracted": [
                    "tuple[typing.Union[int,str]]"
                ]
            }
        }
    },
    "WikiLinks-master/semesterpage/tests/test_adapters.py": {
        "TestSyncDataportenCoursesWithDB.test_basic_properties_of_saving_new_courses_to_db": {
            "name": "test_basic_properties_of_saving_new_courses_to_db",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_course": [],
                "non_finished_course": [],
                "ongoing_course": []
            }
        },
        "TestSyncOptionsOfUserWithDataporten.test_new_user": {
            "name": "test_new_user",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataporten": [
                    "str",
                    "float"
                ]
            }
        },
        "TestSyncOptionsOfUserWithDataporten.test_user_has_removed_one_of_the_self_chosen_courses": {
            "name": "test_user_has_removed_one_of_the_self_chosen_courses",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncOptionsOfUserWithDataporten.test_user_has_finished_a_course_since_last_time": {
            "name": "test_user_has_finished_a_course_since_last_time",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/tests/test_models.py": {
        "test_norwegian_slugify": {
            "name": "test_norwegian_slugify",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestUser.test_new_user_permissions": {
            "name": "test_new_user_permissions",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_that_new_users_do_not_have_options_last_modified_attribute": {
            "name": "test_that_new_users_do_not_have_options_last_modified_attribute",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStudyProgram.test_study_program_factory": {
            "name": "test_study_program_factory",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "study_program": []
            }
        },
        "TestStudyProgram.test_slug_field": {
            "name": "test_slug_field",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMainProfile.test_main_profile_factory": {
            "name": "test_main_profile_factory",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "main_profile": []
            }
        },
        "TestMainProfile.test_slug_field": {
            "name": "test_slug_field",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_creation_of_semester_with_factory": {
            "name": "test_creation_of_semester_with_factory",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "semester": []
            }
        },
        "TestSemester.test_simple_semester": {
            "name": "test_simple_semester",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_main_profile_semester": {
            "name": "test_main_profile_semester",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_getting_lowest_semester_of_study_program": {
            "name": "test_getting_lowest_semester_of_study_program",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_alphabetical_reverse_ordering_when_several_lowest_semesters": {
            "name": "test_alphabetical_reverse_ordering_when_several_lowest_semesters",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_case_insensitive_search": {
            "name": "test_case_insensitive_search",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_lowest_main_profile_semester": {
            "name": "test_lowest_main_profile_semester",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSemester.test_non_existing_semester": {
            "name": "test_non_existing_semester",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourse.test_creation_of_course_with_many_to_many_field": {
            "name": "test_creation_of_course_with_many_to_many_field",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "course": []
            }
        },
        "TestCourse.test_capitalize_course_code": {
            "name": "test_capitalize_course_code",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourse.test_string_representation": {
            "name": "test_string_representation",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourse.test_course_url_property": {
            "name": "test_course_url_property",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourseUpload.test_url": {
            "name": "test_url",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourseUpload.test_filename": {
            "name": "test_filename",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCourseUpload.test_str_representation": {
            "name": "test_str_representation",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResourceLinkList.test_resource_link_list_factory_with_many_to_many_field": {
            "name": "test_resource_link_list_factory_with_many_to_many_field",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource_link_list": []
            }
        },
        "TestCourseLink.test_basic_properties_of_course_link": {
            "name": "test_basic_properties_of_course_link",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "course_link": []
            }
        },
        "TestResourceLink.test_resource_link_factory": {
            "name": "test_resource_link_factory",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource_link": []
            }
        },
        "TestContributor.test_contributor_factory": {
            "name": "test_contributor_factory",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contributor": []
            }
        },
        "TestContributor.test_dataporten_access": {
            "name": "test_dataporten_access",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fysmat_user": []
            }
        },
        "TestOptions.test_options_factory": {
            "name": "test_options_factory",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "TestOptions.test_last_user_modification": {
            "name": "test_last_user_modification",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/tests/test_urls.py": {
        "test_simple_semester": {
            "name": "test_simple_semester",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_study_program": {
            "name": "test_study_program",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_main_profile": {
            "name": "test_main_profile",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_semester": {
            "name": "test_semester",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_studentpage": {
            "name": "test_studentpage",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_course_history": {
            "name": "test_course_history",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "WikiLinks-master/semesterpage/tests/test_views.py": {
        "TestProfileView.test_user_which_should_choose_their_courses": {
            "name": "test_user_which_should_choose_their_courses",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "settings": [
                    "bool"
                ]
            }
        },
        "TestProfileView.test_user_which_has_already_chosen_their_courses": {
            "name": "test_user_which_has_already_chosen_their_courses",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "settings": [
                    "bool"
                ]
            }
        },
        "TestProfileView.test_not_choosing_courses_based_on_settings": {
            "name": "test_not_choosing_courses_based_on_settings",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "settings": []
            }
        },
        "TestAdminModelHistory.test_non_superuser_being_refused_access": {
            "name": "test_non_superuser_being_refused_access",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestAdminModelHistory.test_superuser_being_given_history_access": {
            "name": "test_superuser_being_given_history_access",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestHomepageView.test_logged_in_user_visiting_homepage": {
            "name": "test_logged_in_user_visiting_homepage",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestHomepageView.test_user_with_old_visit_to_student_page": {
            "name": "test_user_with_old_visit_to_student_page",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rf": [
                    "str"
                ]
            }
        },
        "TestHomepageView.test_user_with_old_visit_to_semester": {
            "name": "test_user_with_old_visit_to_semester",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rf": [
                    "str"
                ]
            }
        },
        "TestRemoveCourseFromStudentPageView.test_course_is_removed": {
            "name": "test_course_is_removed",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveCourseFromStudentPageView.test_removing_course_requires_login": {
            "name": "test_removing_course_requires_login",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rf": []
            }
        },
        "TestRemoveCourseFromStudentPageView.test_remove_course_which_has_already_been_hidden": {
            "name": "test_remove_course_which_has_already_been_hidden",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "WikiLinks-master/semesterpage/tests/__init__.py": {}
}
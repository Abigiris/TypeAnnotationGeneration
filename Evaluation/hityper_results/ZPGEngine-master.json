{
    "ZPGEngine-master/main.py": {
        "main": {
            "name": "main",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ZPGEngine-master/setup.py": {},
    "ZPGEngine-master/src/__init__.py": {},
    "ZPGEngine-master/src/core/board.py": {
        "generate_movements": {
            "name": "generate_movements",
            "location": 9,
            "return": [
                "typing.Generator[Position]"
            ],
            "arguments": {
                "pos": [
                    "int",
                    "float"
                ],
                "distance": [
                    "int"
                ]
            }
        },
        "get_fov_mask": {
            "name": "get_fov_mask",
            "location": 16,
            "return": [
                "set[typing.Text]"
            ],
            "arguments": {
                "position": [
                    "int",
                    "float",
                    "None"
                ],
                "fow_size": [
                    "int",
                    "float",
                    "None"
                ],
                "board_size": [
                    "int",
                    "str",
                    "float",
                    "tuple[typing.Union[int,int]]"
                ],
                "is_full": [
                    "typing.Callable[, ]",
                    "bool",
                    "str"
                ]
            }
        },
        "get_distance": {
            "name": "get_distance",
            "location": 35,
            "return": [
                "Distance"
            ],
            "arguments": {
                "pos1": [
                    "float",
                    "str",
                    "list[str]"
                ],
                "pos2": [
                    "float",
                    "str",
                    "list[str]"
                ]
            }
        },
        "get_line_of_view": {
            "name": "get_line_of_view",
            "location": 41,
            "return": [
                "typing.Generator[Position]"
            ],
            "arguments": {
                "pos1": [
                    "list['cirq.Qid']",
                    "int"
                ],
                "pos2": [
                    "list['cirq.Qid']",
                    "int"
                ]
            }
        },
        "get_fov_mask.is_visible": {
            "name": "is_visible",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "pos_to": []
            }
        }
    },
    "ZPGEngine-master/src/core/components.py": {
        "Entities.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entities": [
                    "bool",
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Entities.filter": {
            "name": "filter",
            "location": 18,
            "return": [
                "typing.Generator[typing.Union[set[],int,None,list[]]]"
            ],
            "arguments": {
                "self": [],
                "component_classes": [
                    "str"
                ]
            }
        },
        "Entities.get": {
            "name": "get",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [
                    "dict[, ]",
                    "None",
                    "str",
                    "float",
                    "dict[str, typing.Any]"
                ],
                "component_class": [
                    "dict[, ]",
                    "None",
                    "str",
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Entities.set": {
            "name": "set",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": [
                    "dict[str, set[str]]",
                    "int",
                    "float"
                ],
                "component_class": [
                    "dict[str, set[str]]",
                    "int",
                    "float"
                ],
                "value": [
                    "dict[str, set[str]]",
                    "int",
                    "float"
                ]
            }
        },
        "Entities.count": {
            "name": "count",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Components.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entities": [
                    "dict[, ]"
                ]
            }
        },
        "Components.get": {
            "name": "get",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "component": [
                    "str",
                    "bool"
                ]
            }
        },
        "Components.get_need_clean": {
            "name": "get_need_clean",
            "location": 52,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Manager.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "components": [
                    "None",
                    "dict[str, str]",
                    "typing.Sequence[float]",
                    "list[str]",
                    "int"
                ]
            }
        },
        "Manager.reinit": {
            "name": "reinit",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Manager.serialize": {
            "name": "serialize",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Manager.add": {
            "name": "add",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EntityBuilder.to_dict": {
            "name": "to_dict",
            "location": 163,
            "return": [
                "dict[typing.Union[Name,Actions,FOV,Visible,AI,UnderUserControl,Vision,Viewer,Position,Movable,NextPosition], ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ZPGEngine-master/src/core/constants.py": {},
    "ZPGEngine-master/src/core/events.py": {
        "Event.__call__": {
            "name": "__call__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prev_state": [
                    "BaseException"
                ]
            }
        },
        "Move._is_valid": {
            "name": "_is_valid",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "tuple[typing.Union[int,int]]",
                    "list[tuple[typing.Union[int,int]]]",
                    "int"
                ]
            }
        },
        "Move.__call__": {
            "name": "__call__",
            "location": 36,
            "return": [
                "Position",
                "int",
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "int",
                    "typing.Type"
                ]
            }
        },
        "SetActions.__call__": {
            "name": "__call__",
            "location": 49,
            "return": [
                "Actions"
            ],
            "arguments": {
                "self": [],
                "actions": [
                    "bool"
                ]
            }
        },
        "SetFOV.__call__": {
            "name": "__call__",
            "location": 57,
            "return": [
                "FOV"
            ],
            "arguments": {
                "self": [],
                "fov": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ]
            }
        },
        "Clean.__call__": {
            "name": "__call__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "_": [
                    "dict[, ]"
                ]
            }
        }
    },
    "ZPGEngine-master/src/core/systems.py": {
        "System.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "manager": [
                    "int",
                    "float"
                ]
            }
        },
        "System.process": {
            "name": "process",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "World.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "manager": [
                    "int",
                    "float"
                ],
                "systems": [
                    "int",
                    "float"
                ]
            }
        },
        "World.step": {
            "name": "step",
            "location": 49,
            "return": [
                "World"
            ],
            "arguments": {
                "self": []
            }
        },
        "World.serialize": {
            "name": "serialize",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AISystem.process": {
            "name": "process",
            "location": 74,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserControlSystem.process": {
            "name": "process",
            "location": 82,
            "return": [
                "typing.Generator[Move]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AllowActionSystem._generate_directions": {
            "name": "_generate_directions",
            "location": 104,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AllowActionSystem.process": {
            "name": "process",
            "location": 111,
            "return": [
                "typing.Generator[SetActions]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewSystem._generate_board": {
            "name": "_generate_board",
            "location": 128,
            "return": [
                "list[list[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "ViewSystem.process": {
            "name": "process",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CleanupSystem.process": {
            "name": "process",
            "location": 156,
            "return": [
                "typing.Generator[Clean]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FOVSystem.process": {
            "name": "process",
            "location": 166,
            "return": [
                "typing.Generator[SetFOV]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ZPGEngine-master/src/core/__init__.py": {},
    "ZPGEngine-master/tests/core/test_board.py": {
        "test_line_of_view": {
            "name": "test_line_of_view",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "p1": [
                    "int",
                    "str"
                ],
                "p2": [
                    "int",
                    "str"
                ],
                "expected": [
                    "int",
                    "str"
                ]
            }
        },
        "test_get_distance": {
            "name": "test_get_distance",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "p1": [
                    "list[int]",
                    "str",
                    "int",
                    "float"
                ],
                "p2": [
                    "list[int]",
                    "str",
                    "int",
                    "float"
                ],
                "expected": [
                    "list[int]",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "test_generate_movements": {
            "name": "test_generate_movements",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "p": [
                    "typing.Callable[, ]",
                    "list[int]"
                ],
                "distance": [
                    "typing.Callable[, ]",
                    "list[int]"
                ],
                "expected": [
                    "typing.Callable[, ]",
                    "list[int]"
                ]
            }
        }
    }
}
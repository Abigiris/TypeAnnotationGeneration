{
    "adventofcode-master/2018/day01.py": {
        "part1": {
            "name": "part1",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "puzzle": []
            }
        },
        "part2": {
            "name": "part2",
            "location": 11,
            "return": [],
            "arguments": {
                "puzzle": [
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "adventofcode-master/2018/day02.py": {
        "part1": {
            "name": "part1",
            "location": 8,
            "return": [],
            "arguments": {
                "puzzle": []
            }
        },
        "part2": {
            "name": "part2",
            "location": 20,
            "return": [],
            "arguments": {
                "puzzle": []
            }
        },
        "main": {
            "name": "main",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "adventofcode-master/2018/day03.py": {
        "parse": {
            "name": "parse",
            "location": 18,
            "return": [
                "list[Instruction]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 37,
            "return": [],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 46,
            "return": [],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "adventofcode-master/2018/day04.py": {
        "parse": {
            "name": "parse",
            "location": 25,
            "return": [
                "list[shift]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 82,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 103,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "adventofcode-master/2018/day05.py": {
        "part1": {
            "name": "part1",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 22,
            "return": [
                "list[]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Part1Test.test_examples": {
            "name": "test_examples",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Part2Test.test_example": {
            "name": "test_example",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day06.py": {
        "parse": {
            "name": "parse",
            "location": 15,
            "return": [
                "list[tuple[int]]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "manhattan_dist": {
            "name": "manhattan_dist",
            "location": 27,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "iter_border": {
            "name": "iter_border",
            "location": 32,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "upper_left": [],
                "lower_right": []
            }
        },
        "iter_area": {
            "name": "iter_area",
            "location": 45,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "upper_left": [
                    "list[str]"
                ],
                "lower_right": [
                    "list[str]"
                ]
            }
        },
        "lesser_median": {
            "name": "lesser_median",
            "location": 52,
            "return": [],
            "arguments": {
                "iterable": [
                    "list[]",
                    "tuple[frozenset]"
                ]
            }
        },
        "find_bound": {
            "name": "find_bound",
            "location": 61,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "start": [
                    "int"
                ],
                "produce": [
                    "int"
                ],
                "in_bounds": [
                    "int"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 76,
            "return": [
                "list[int]"
            ],
            "arguments": {
                "puzzle": [
                    "int",
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 95,
            "return": [
                "int"
            ],
            "arguments": {
                "puzzle": [
                    "int",
                    "str",
                    "dict[str, str]"
                ],
                "dist_limit": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "part1.closest": {
            "name": "closest",
            "location": 80,
            "return": [
                "int"
            ],
            "arguments": {
                "start": []
            }
        },
        "part2.total_dist": {
            "name": "total_dist",
            "location": 99,
            "return": [
                "bool"
            ],
            "arguments": {
                "p": []
            }
        },
        "part2.in_bounds": {
            "name": "in_bounds",
            "location": 102,
            "return": [
                "bool"
            ],
            "arguments": {
                "p": []
            }
        },
        "Part1Test.test_example": {
            "name": "test_example",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Part2Test.test_example": {
            "name": "test_example",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day07.py": {
        "parse": {
            "name": "parse",
            "location": 12,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 24,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 48,
            "return": [
                "int"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "int",
                    "float"
                ],
                "nworkers": [
                    "int"
                ],
                "base_time": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "part2.step_time": {
            "name": "step_time",
            "location": 51,
            "return": [
                "int"
            ],
            "arguments": {
                "step": []
            }
        },
        "ExampleTest.test_part1": {
            "name": "test_part1",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part2": {
            "name": "test_part2",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day08.py": {
        "parse_node": {
            "name": "parse_node",
            "location": 16,
            "return": [
                "Node"
            ],
            "arguments": {
                "stream": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 26,
            "return": [
                "str",
                "list[str]",
                "list[]",
                "tuple[str]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "metadata_sum": {
            "name": "metadata_sum",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "tree": []
            }
        },
        "value": {
            "name": "value",
            "location": 41,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "node": [
                    "typing.Any",
                    "None",
                    "int"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 55,
            "return": [],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 61,
            "return": [],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ExampleTest.test_part1": {
            "name": "test_part1",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part2": {
            "name": "test_part2",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day09.py": {
        "part1": {
            "name": "part1",
            "location": 66,
            "return": [],
            "arguments": {
                "nplayers": [
                    "int"
                ],
                "highest_marble": [
                    "int",
                    "list[int]"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 83,
            "return": [],
            "arguments": {
                "nplayers": [
                    "int",
                    "str",
                    "typing.Iterable[list[str]]"
                ],
                "highest_node": [
                    "int",
                    "str",
                    "typing.Iterable[list[str]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prev": [
                    "int",
                    "str",
                    "float",
                    "list[str]"
                ],
                "next": [
                    "int",
                    "str",
                    "float",
                    "list[str]"
                ],
                "value": [
                    "int",
                    "str"
                ]
            }
        },
        "Node.default": {
            "name": "default",
            "location": 19,
            "return": [
                "Node"
            ],
            "arguments": {}
        },
        "Node.forward": {
            "name": "forward",
            "location": 26,
            "return": [
                "Node"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Node.back": {
            "name": "back",
            "location": 33,
            "return": [
                "Node"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Node.insert": {
            "name": "insert",
            "location": 40,
            "return": [
                "Node"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Sequence[T]",
                    "None"
                ]
            }
        },
        "Node.remove": {
            "name": "remove",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.value": {
            "name": "value",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.chain_values": {
            "name": "chain_values",
            "location": 57,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part1": {
            "name": "test_part1",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day10.py": {
        "bounding_circumference": {
            "name": "bounding_circumference",
            "location": 33,
            "return": [],
            "arguments": {
                "points": [
                    "str"
                ]
            }
        },
        "run_until_compact": {
            "name": "run_until_compact",
            "location": 43,
            "return": [
                "tuple[typing.Union[set[],int]]"
            ],
            "arguments": {
                "points": [
                    "list[]"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 59,
            "return": [
                "set[]"
            ],
            "arguments": {
                "puzzle": [
                    "str"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 74,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 93,
            "return": [],
            "arguments": {
                "puzzle": [
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Point.step": {
            "name": "step",
            "location": 25,
            "return": [
                "Point"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part1": {
            "name": "test_part1",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part2": {
            "name": "test_part2",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "adventofcode-master/2018/day11.py": {
        "power": {
            "name": "power",
            "location": 11,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "x": [
                    "int",
                    "list[]"
                ],
                "y": [
                    "int",
                    "typing.AbstractSet"
                ],
                "serial": [
                    "int",
                    "float"
                ]
            }
        },
        "square_power": {
            "name": "square_power",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "serial": [
                    "int"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "part1": {
            "name": "part1",
            "location": 27,
            "return": [
                "int"
            ],
            "arguments": {
                "serial": [
                    "int",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "part2": {
            "name": "part2",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "serial": [
                    "int",
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ExampleTest.test_power_level": {
            "name": "test_power_level",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_sq_pow": {
            "name": "test_sq_pow",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExampleTest.test_part1": {
            "name": "test_part1",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
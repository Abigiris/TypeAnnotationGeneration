{
    "aioapp_redis-master/setup.py": {},
    "aioapp_redis-master/travis_pypi_setup.py": {
        "load_key": {
            "name": "load_key",
            "location": 28,
            "return": [],
            "arguments": {
                "pubkey": [
                    "str"
                ]
            }
        },
        "encrypt": {
            "name": "encrypt",
            "location": 44,
            "return": [],
            "arguments": {
                "pubkey": [
                    "str",
                    "list[str]",
                    "typing.Callable[T, bool]",
                    "bytes",
                    "None"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "fetch_public_key": {
            "name": "fetch_public_key",
            "location": 55,
            "return": [
                "str",
                "tuple[typing.Union[typing.Any,typing.Any,None]]"
            ],
            "arguments": {
                "repo": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "prepend_line": {
            "name": "prepend_line",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "line": [
                    "str",
                    "int",
                    "typing.Mapping",
                    "typing.Iterator"
                ]
            }
        },
        "load_yaml_config": {
            "name": "load_yaml_config",
            "location": 80,
            "return": [],
            "arguments": {
                "filepath": [
                    "str"
                ]
            }
        },
        "save_yaml_config": {
            "name": "save_yaml_config",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "config": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "update_travis_deploy_password": {
            "name": "update_travis_deploy_password",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "encrypted_password": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "aioapp_redis-master/aioapp_redis/__init__.py": {
        "RedisTracerConfig.on_acquire_start": {
            "name": "on_acquire_start",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "RedisTracerConfig.on_acquire_end": {
            "name": "on_acquire_end",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "err": [
                    "Exception",
                    "None"
                ]
            }
        },
        "RedisTracerConfig.on_query_start": {
            "name": "on_query_start",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "str",
                    "tuple[]",
                    "float",
                    "None",
                    "int"
                ],
                "id": [
                    "str",
                    "tuple[]",
                    "float",
                    "None",
                    "int"
                ],
                "command": [
                    "str",
                    "tuple[]",
                    "float",
                    "None",
                    "int"
                ]
            }
        },
        "RedisTracerConfig.on_query_end": {
            "name": "on_query_end",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "err": [
                    "Exception",
                    "None",
                    "str",
                    "bool"
                ],
                "result": [
                    "bool",
                    "str",
                    "tuple[str]"
                ]
            }
        },
        "RedisTracerConfig.on_pubsub_start": {
            "name": "on_pubsub_start",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "str",
                    "tuple[str]",
                    "tuple[]",
                    "float",
                    "None"
                ],
                "id": [
                    "str",
                    "tuple[str]",
                    "tuple[]",
                    "float",
                    "None"
                ],
                "command": [
                    "str",
                    "tuple[str]",
                    "tuple[]",
                    "float",
                    "None"
                ],
                "channels_or_patterns": [
                    "str",
                    "tuple[str]",
                    "tuple[]",
                    "float",
                    "None"
                ]
            }
        },
        "RedisTracerConfig.on_pubsub_end": {
            "name": "on_pubsub_end",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "err": [
                    "Exception",
                    "None",
                    "bool",
                    "list[str]",
                    "str"
                ],
                "result": [
                    "str",
                    "bool",
                    "tuple[str]"
                ]
            }
        },
        "Redis.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "bool",
                    "list[str]",
                    "None",
                    "typing.Callable[..., None]",
                    "str"
                ],
                "pool_min_size": [
                    "int"
                ],
                "pool_max_size": [
                    "int"
                ],
                "connect_max_attempts": [
                    "int"
                ],
                "connect_retry_delay": [
                    "float"
                ]
            }
        },
        "Redis.connection": {
            "name": "connection",
            "location": 94,
            "return": [
                "ConnectionContextManager"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "bool",
                    "str"
                ],
                "tracer_config": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "ConnectionContextManager.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis": [
                    "bool",
                    "typing.Iterable[str]",
                    "str"
                ],
                "ctx": [],
                "tracer_config": [
                    "None",
                    "bool",
                    "dict[str, typing.Any]",
                    "dict[tuple[typing.Union[str,str]], Exception]"
                ]
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis": [
                    "int",
                    "float"
                ],
                "conn": [
                    "int",
                    "float"
                ]
            }
        },
        "Connection.pubsub_channels": {
            "name": "pubsub_channels",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "aioapp_redis-master/examples/redis.py": {},
    "aioapp_redis-master/tests/conftest.py": {
        "event_loop": {
            "name": "event_loop",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "loop": {
            "name": "loop",
            "location": 24,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 28,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "redis_override_addr": {
            "name": "redis_override_addr",
            "location": 39,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "redis": {
            "name": "redis",
            "location": 124,
            "return": [],
            "arguments": {
                "docker_compose": []
            }
        },
        "get_free_port": {
            "name": "get_free_port",
            "location": 128,
            "return": [],
            "arguments": {
                "protocol": []
            }
        }
    },
    "aioapp_redis-master/tests/test_redis.py": {
        "_create_span": {
            "name": "_create_span",
            "location": 22,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "aioapp_redis-master/tests/__init__.py": {}
}
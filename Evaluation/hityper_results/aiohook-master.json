{
    "aiohook-master/setup.py": {},
    "aiohook-master/aiohook/type_inference.py": {
        "_type_field_of_object": {
            "name": "_type_field_of_object",
            "location": 6,
            "return": [],
            "arguments": {
                "obj": [
                    "int",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "infer_type": {
            "name": "infer_type",
            "location": 59,
            "return": [
                "ObjectType"
            ],
            "arguments": {
                "o": [
                    "typing.Type"
                ]
            }
        },
        "_A.sync_method": {
            "name": "sync_method",
            "location": 25,
            "return": [
                "int",
                "typing.Callable[, ]"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "_A.sync_generator_method": {
            "name": "sync_generator_method",
            "location": 31,
            "return": [
                "typing.Generator[typing.Union[int,list[str],list[int],bytes]]"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "int",
                    "list[str]",
                    "list[int]",
                    "bytes"
                ]
            }
        }
    },
    "aiohook-master/aiohook/__init__.py": {
        "spec": {
            "name": "spec",
            "location": 83,
            "return": [],
            "arguments": {
                "fn": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "impl": {
            "name": "impl",
            "location": 124,
            "return": [],
            "arguments": {
                "spec_ref": [
                    "str",
                    "list[tuple[typing.Union[str,typing.Any]]]",
                    "bool",
                    "None"
                ]
            }
        },
        "register": {
            "name": "register",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "typing.Callable[str, str]"
                ]
            }
        },
        "is_hookable": {
            "name": "is_hookable",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "elem": [
                    "str",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "get_hook_marker": {
            "name": "get_hook_marker",
            "location": 160,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "elem": [
                    "str",
                    "int",
                    "typing.Type",
                    "dict[str, str]"
                ]
            }
        },
        "find_hook_implementations": {
            "name": "find_hook_implementations",
            "location": 167,
            "return": [
                "typing.Generator[typing.Union[list[tuple[typing.Union[str,...]]],dict[str, typing.Any],set[str],typing.Mapping,dict[str, set[str]],dict[str, list[str]],dict[str, str],str]]"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "dict[, ]",
                    "int",
                    "None"
                ]
            }
        },
        "Singleton.__call__": {
            "name": "__call__",
            "location": 35,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "set[str]",
                    "str"
                ]
            }
        },
        "PluginRegistry.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PluginRegistry.__repr__": {
            "name": "__repr__",
            "location": 59,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PluginRegistry.declare_hook_spec": {
            "name": "declare_hook_spec",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spec_ref": [
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "PluginRegistry.register_hook_impl": {
            "name": "register_hook_impl",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ref": [
                    "typing.Callable[, ]",
                    "None",
                    "str"
                ],
                "fn_or_coro": []
            }
        },
        "PluginRegistry.hook_specs_without_plugin_impl": {
            "name": "hook_specs_without_plugin_impl",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PluginRegistry.plugin_impl_without_hook_specs": {
            "name": "plugin_impl_without_hook_specs",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "impl.mark_function": {
            "name": "mark_function",
            "location": 127,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "spec.wrapper": {
            "name": "wrapper",
            "location": 89,
            "return": [],
            "arguments": {}
        }
    },
    "aiohook-master/tests/examine_types.py": {
        "reveal_type": {
            "name": "reveal_type",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "o": []
            }
        },
        "sync_function": {
            "name": "sync_function",
            "location": 51,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "sync_generator_function": {
            "name": "sync_generator_function",
            "location": 64,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "arg": []
            }
        },
        "A.sync_method": {
            "name": "sync_method",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "A.__call__": {
            "name": "__call__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiohook-master/tests/functional/text_processing_app/setup.py": {},
    "aiohook-master/tests/functional/text_processing_app/tests/step_defs/__init__.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc/main.py": {
        "cli": {
            "name": "cli",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "aiohook-master/tests/functional/text_processing_app/textproc/pluginspecs.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc/__init__.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc_plugin/rudin_shapiro_xor.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc_plugin/rudin_sharpio_seq.py": {
        "a": {
            "name": "a",
            "location": 1,
            "return": [
                "bool"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "b": {
            "name": "b",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int",
                    "float",
                    "str",
                    "None"
                ]
            }
        }
    },
    "aiohook-master/tests/functional/text_processing_app/textproc_plugin/settings.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc_plugin/tokenizer.py": {},
    "aiohook-master/tests/functional/text_processing_app/textproc_plugin/__init__.py": {}
}
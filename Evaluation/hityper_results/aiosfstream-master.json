{
    "aiosfstream-master/setup.py": {
        "read": {
            "name": "read",
            "location": 25,
            "return": [],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "aiosfstream-master/aiosfstream/auth.py": {
        "AuthenticatorBase.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sandbox": [
                    "bool"
                ],
                "json_dumps": [],
                "json_loads": []
            }
        },
        "AuthenticatorBase._token_url": {
            "name": "_token_url",
            "location": 61,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PasswordAuthenticator.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "consumer_key": [],
                "consumer_secret": [],
                "username": [],
                "password": [],
                "sandbox": [
                    "bool"
                ],
                "json_dumps": [],
                "json_loads": []
            }
        },
        "PasswordAuthenticator.__repr__": {
            "name": "__repr__",
            "location": 156,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "RefreshTokenAuthenticator.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "consumer_key": [],
                "consumer_secret": [],
                "refresh_token": [],
                "sandbox": [
                    "bool"
                ],
                "json_dumps": [],
                "json_loads": []
            }
        },
        "RefreshTokenAuthenticator.__repr__": {
            "name": "__repr__",
            "location": 209,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosfstream-master/aiosfstream/client.py": {
        "Client.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "authenticator": []
            }
        },
        "Client.create_replay_storage": {
            "name": "create_replay_storage",
            "location": 255,
            "return": [
                "ReplayMarkerStorage",
                "MappingStorage",
                "ConstantReplayId",
                "None"
            ],
            "arguments": {
                "replay_param": []
            }
        },
        "Client.get_cometd_url": {
            "name": "get_cometd_url",
            "location": 273,
            "return": [
                "str"
            ],
            "arguments": {
                "instance_url": []
            }
        },
        "SalesforceStreamingClient.__init__": {
            "name": "__init__",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosfstream-master/aiosfstream/exceptions.py": {
        "translate_errors_context": {
            "name": "translate_errors_context",
            "location": 104,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "translate_errors": {
            "name": "translate_errors",
            "location": 126,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[[], typing.Any]"
                ]
            }
        }
    },
    "aiosfstream-master/aiosfstream/replay.py": {
        "ReplayMarkerStorage.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReplayMarkerStorage.get_message_date": {
            "name": "get_message_date",
            "location": 78,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "message": []
            }
        },
        "ReplayMarkerStorage.__call__": {
            "name": "__call__",
            "location": 168,
            "return": [
                "ReplayMarkerStorageContextManager"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "ReplayMarkerStorageContextManager.__init__": {
            "name": "__init__",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "replay_storage": [],
                "message": []
            }
        },
        "MappingStorage.__init__": {
            "name": "__init__",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MappingStorage.__repr__": {
            "name": "__repr__",
            "location": 221,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "DefaultReplayIdMixin.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_id": []
            }
        },
        "ConstantReplayId.__repr__": {
            "name": "__repr__",
            "location": 272,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "DefaultMappingStorage.__init__": {
            "name": "__init__",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mapping": [],
                "default_id": []
            }
        },
        "DefaultMappingStorage.__repr__": {
            "name": "__repr__",
            "location": 297,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosfstream-master/aiosfstream/_metadata.py": {},
    "aiosfstream-master/aiosfstream/__init__.py": {},
    "aiosfstream-master/docs/source/conf.py": {
        "read": {
            "name": "read",
            "location": 24,
            "return": [],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "aiosfstream-master/tests/test_auth.py": {
        "TestAuthenticatorBase.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuthenticatorBase.test_init": {
            "name": "test_init",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuthenticatorBase.test_token_url_non_sandbox": {
            "name": "test_token_url_non_sandbox",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAuthenticatorBase.test_token_url_sandbox": {
            "name": "test_token_url_sandbox",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPasswordAuthenticator.setUp": {
            "name": "setUp",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPasswordAuthenticator.test_repr": {
            "name": "test_repr",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRefreshTokenAuthenticator.setUp": {
            "name": "setUp",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRefreshTokenAuthenticator.test_repr": {
            "name": "test_repr",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosfstream-master/tests/test_client.py": {
        "TestGetCometdUrl.test_get": {
            "name": "test_get",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.setUp": {
            "name": "setUp",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.make_asyncgen": {
            "name": "make_asyncgen",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "return_value": []
            }
        },
        "TestClient.test_init": {
            "name": "test_init",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.test_init_translates_errors": {
            "name": "test_init_translates_errors",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "super_init": []
            }
        },
        "TestClient.test_init_verifies_authenticator": {
            "name": "test_init_verifies_authenticator",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.test_init_verifies_replay": {
            "name": "test_init_verifies_replay",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.test_init_creates_replay_storage": {
            "name": "test_init_creates_replay_storage",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "create_replay_storage": []
            }
        },
        "TestCreateReplayStorage.test_returns_replay_storage": {
            "name": "test_returns_replay_storage",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateReplayStorage.test_returns_mapping_storage_for_dict": {
            "name": "test_returns_mapping_storage_for_dict",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateReplayStorage.test_returns_constant_replay_id_storage_for_replay_option": {
            "name": "test_returns_constant_replay_id_storage_for_replay_option",
            "location": 388,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateReplayStorage.test_returns_none_for_invalid_param": {
            "name": "test_returns_none_for_invalid_param",
            "location": 396,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSalesforceStreamingClient.test_init": {
            "name": "test_init",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "super_init": [],
                "authenticator_cls": []
            }
        }
    },
    "aiosfstream-master/tests/test_exceptions.py": {
        "TestExceptionHierarchy.test_root_exception": {
            "name": "test_root_exception",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_authentication_error": {
            "name": "test_authentication_error",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_transport_invalid_operation": {
            "name": "test_transport_invalid_operation",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_transport_timeout": {
            "name": "test_transport_timeout",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_connection_closed": {
            "name": "test_connection_closed",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_server_error": {
            "name": "test_server_error",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_client_error": {
            "name": "test_client_error",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHierarchy.test_client_invalid_operation": {
            "name": "test_client_invalid_operation",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTranslateError.test_returns_result_on_no_error": {
            "name": "test_returns_result_on_no_error",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTranslateError.test_reraises_non_cometd_error": {
            "name": "test_reraises_non_cometd_error",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTranslateError.test_translates_cometd_error": {
            "name": "test_translates_cometd_error",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTranslateError.test_reraises_sfstream_error": {
            "name": "test_reraises_sfstream_error",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTranslateError.test_reraises_non_cometd_error.raise_error": {
            "name": "raise_error",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTranslateError.test_translates_cometd_error.raise_error": {
            "name": "raise_error",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTranslateError.test_reraises_sfstream_error.raise_error": {
            "name": "raise_error",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "aiosfstream-master/tests/test_replay.py": {
        "TestReplayStorage.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_init": {
            "name": "test_init",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_get_message_date_for_push_topic": {
            "name": "test_get_message_date_for_push_topic",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_get_message_date_for_platform_event": {
            "name": "test_get_message_date_for_platform_event",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_get_message_date_for_change_data_capture": {
            "name": "test_get_message_date_for_change_data_capture",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_get_message_date_error_if_no_date_found": {
            "name": "test_get_message_date_error_if_no_date_found",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayStorage.test_call_returns_context_manager": {
            "name": "test_call_returns_context_manager",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReplayMarkerStorageContextManager.setUp": {
            "name": "setUp",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMappingReplayStorage.setUp": {
            "name": "setUp",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMappingReplayStorage.test_init": {
            "name": "test_init",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMappingReplayStorage.test_init_error_on_non_mapping": {
            "name": "test_init_error_on_non_mapping",
            "location": 386,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMappingReplayStorage.test_repr": {
            "name": "test_repr",
            "location": 423,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstantReplayId.setUp": {
            "name": "setUp",
            "location": 435,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstantReplayId.test_repr": {
            "name": "test_repr",
            "location": 452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDefaultReplayIdMixin.setUp": {
            "name": "setUp",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDefaultMappingReplayStorage.setUp": {
            "name": "setUp",
            "location": 493,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDefaultMappingReplayStorage.test_init": {
            "name": "test_init",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDefaultMappingReplayStorage.test_repr": {
            "name": "test_repr",
            "location": 502,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosfstream-master/tests/__init__.py": {}
}
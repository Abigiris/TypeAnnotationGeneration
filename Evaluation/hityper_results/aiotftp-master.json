{
    "aiotftp-master/setup.py": {
        "read": {
            "name": "read",
            "location": 7,
            "return": [],
            "arguments": {
                "fname": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "aiotftp-master/aiotftp/helpers.py": {
        "set_result": {
            "name": "set_result",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "fut": [],
                "result": [
                    "bool",
                    "dict[, ]",
                    "dict[str, str]",
                    "typing.Callable[str, bool]",
                    "str"
                ]
            }
        },
        "set_exception": {
            "name": "set_exception",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "fut": [],
                "etc": [
                    "BaseException",
                    "bool",
                    "str"
                ]
            }
        },
        "get_tid": {
            "name": "get_tid",
            "location": 11,
            "return": [],
            "arguments": {
                "addr": []
            }
        }
    },
    "aiotftp-master/aiotftp/logger.py": {
        "AccessLogger.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "str",
                    "None",
                    "int"
                ],
                "log_format": []
            }
        },
        "AccessLogger.compile_format": {
            "name": "compile_format",
            "location": 41,
            "return": [
                "tuple[typing.Union[str,list[KeyMethod]]]"
            ],
            "arguments": {
                "self": [],
                "log_format": [
                    "str"
                ]
            }
        },
        "AccessLogger._format_a": {
            "name": "_format_a",
            "location": 54,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "dict[str, str]",
                    "None"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_t": {
            "name": "_format_t",
            "location": 61,
            "return": [],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "int",
                    "str",
                    "float",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "AccessLogger._format_P": {
            "name": "_format_P",
            "location": 67,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_o": {
            "name": "_format_o",
            "location": 71,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "dict[str, str]",
                    "None",
                    "str"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_r": {
            "name": "_format_r",
            "location": 77,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "str",
                    "None",
                    "typing.Any"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_b": {
            "name": "_format_b",
            "location": 83,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_T": {
            "name": "_format_T",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float",
                    "int"
                ]
            }
        },
        "AccessLogger._format_Tf": {
            "name": "_format_Tf",
            "location": 93,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_D": {
            "name": "_format_D",
            "location": 97,
            "return": [
                "int"
            ],
            "arguments": {
                "request": [
                    "float"
                ],
                "response": [
                    "float"
                ],
                "time": [
                    "float"
                ]
            }
        },
        "AccessLogger._format_line": {
            "name": "_format_line",
            "location": 100,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "dict[str, typing.Any]",
                    "float"
                ],
                "response": [
                    "str",
                    "dict[str, typing.Any]",
                    "float"
                ],
                "time": [
                    "str",
                    "dict[str, typing.Any]",
                    "float"
                ]
            }
        },
        "AccessLogger.log": {
            "name": "log",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "float",
                    "str",
                    "None"
                ],
                "response": [
                    "dict[, ]",
                    "float",
                    "str",
                    "None"
                ],
                "time": [
                    "dict[, ]",
                    "float",
                    "str",
                    "None"
                ]
            }
        }
    },
    "aiotftp-master/aiotftp/packet.py": {
        "ushort": {
            "name": "ushort",
            "location": 5,
            "return": [
                "bytes"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "parse_ushort": {
            "name": "parse_ushort",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "buf": []
            }
        },
        "pairwise": {
            "name": "pairwise",
            "location": 15,
            "return": [],
            "arguments": {
                "data": [
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 135,
            "return": [],
            "arguments": {
                "data": [
                    "str",
                    "bytes",
                    "list[str]",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "Opcode.is_request": {
            "name": "is_request",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mode.get": {
            "name": "get",
            "location": 38,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "int"
                ],
                "s": [
                    "str"
                ]
            }
        },
        "Packet.is_request": {
            "name": "is_request",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.parse": {
            "name": "parse",
            "location": 67,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "dict[, ]",
                    "typing.Type"
                ],
                "buf": [
                    "str",
                    "bytes"
                ]
            }
        },
        "Request.__bytes__": {
            "name": "__bytes__",
            "location": 75,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Data.parse": {
            "name": "parse",
            "location": 88,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "float",
                    "int",
                    "bytearray"
                ],
                "buf": [
                    "bytearray"
                ]
            }
        },
        "Data.__bytes__": {
            "name": "__bytes__",
            "location": 91,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ack.parse": {
            "name": "parse",
            "location": 102,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "list[str]",
                    "tuple[()]"
                ],
                "buf": [
                    "list[str]",
                    "tuple[()]"
                ]
            }
        },
        "Ack.__bytes__": {
            "name": "__bytes__",
            "location": 105,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Error.parse": {
            "name": "parse",
            "location": 117,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.IO",
                    "list[str]"
                ],
                "buf": []
            }
        },
        "Error.__bytes__": {
            "name": "__bytes__",
            "location": 121,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotftp-master/aiotftp/protocol.py": {
        "InboundDataProtocol.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float"
                ]
            }
        },
        "InboundDataProtocol.connection_made": {
            "name": "connection_made",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "InboundDataProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "exc": [
                    "BaseException",
                    "bool",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "InboundDataProtocol.datagram_received": {
            "name": "datagram_received",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "int"
                ],
                "addr": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "InboundDataProtocol.ack": {
            "name": "ack",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "blockid": [
                    "str",
                    "bool",
                    "float",
                    "tuple['cirq.Qid']"
                ],
                "last": [
                    "str",
                    "bool",
                    "float",
                    "tuple['cirq.Qid']"
                ]
            }
        },
        "InboundDataProtocol.start": {
            "name": "start",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutboundDataProtocol.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutboundDataProtocol.connection_made": {
            "name": "connection_made",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "OutboundDataProtocol.datagram_received": {
            "name": "datagram_received",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict[, ]",
                    "str"
                ],
                "addr": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        }
    },
    "aiotftp-master/aiotftp/response.py": {
        "StreamResponse.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str"
                ]
            }
        },
        "FileResponse.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "aiotftp-master/aiotftp/server.py": {
        "Request._get_event_loop": {
            "name": "_get_event_loop",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestHandler.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "app": [],
                "read": [],
                "write": []
            }
        },
        "RequestHandler.connection_made": {
            "name": "connection_made",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "RequestHandler.connection_lost": {
            "name": "connection_lost",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "RequestHandler.datagram_received": {
            "name": "datagram_received",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "addr": []
            }
        },
        "RequestHandler.send": {
            "name": "send",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "packet": [],
                "addr": []
            }
        },
        "RequestHandler.log_access": {
            "name": "log_access",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "time": []
            }
        }
    },
    "aiotftp-master/aiotftp/streams.py": {
        "AsyncStreamIterator.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "read_func": [
                    "str",
                    "bytes",
                    "typing.Sequence[typing.Sequence[T]]",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "AsyncStreamIterator.__aiter__": {
            "name": "__aiter__",
            "location": 12,
            "return": [
                "AsyncStreamIterator"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.exception": {
            "name": "exception",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.set_exception": {
            "name": "set_exception",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str",
                    "BaseException",
                    "dict[str, typing.Any]",
                    "float",
                    "typing.Callable[str, None]"
                ]
            }
        },
        "StreamReader.feed_eof": {
            "name": "feed_eof",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.is_eof": {
            "name": "is_eof",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.at_eof": {
            "name": "at_eof",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamReader.feed_data": {
            "name": "feed_data",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "StreamReader.read_nowait": {
            "name": "read_nowait",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamReader._read_nowait_chunk": {
            "name": "_read_nowait_chunk",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "StreamReader._read_nowait": {
            "name": "_read_nowait",
            "location": 138,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "StreamReader.__aiter__": {
            "name": "__aiter__",
            "location": 167,
            "return": [
                "AsyncStreamIterator"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotftp-master/aiotftp/__init__.py": {
        "read": {
            "name": "read",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "rrq": [],
                "wrq": []
            }
        },
        "Server.__call__": {
            "name": "__call__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.__getitem__": {
            "name": "__getitem__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Server.__setitem__": {
            "name": "__setitem__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Server.__delitem__": {
            "name": "__delitem__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Server.__iter__": {
            "name": "__iter__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.__len__": {
            "name": "__len__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Request.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "resource": [],
                "local_addr": []
            }
        }
    },
    "aiotftp-master/aiotftp/extras/aiohttp_proxy.py": {},
    "aiotftp-master/aiotftp/extras/__init__.py": {},
    "aiotftp-master/example/client.py": {},
    "aiotftp-master/example/server.py": {},
    "aiotftp-master/example/upload.py": {},
    "aiotftp-master/tests/conftest.py": {
        "files": {
            "name": "files",
            "location": 19,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "filename": {
            "name": "filename",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "files": [
                    "list[str]",
                    "list[]"
                ]
            }
        },
        "contents": {
            "name": "contents",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "files": [
                    "list[]",
                    "list[str]",
                    "str"
                ]
            }
        },
        "server.Runner.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiotftp-master/tests/test_client.py": {},
    "aiotftp-master/tests/test_delayed_ack.py": {
        "DelayedAckClient.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "loop": []
            }
        },
        "DelayedAckClient.connection_made": {
            "name": "connection_made",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "DelayedAckClient.datagram_received": {
            "name": "datagram_received",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int"
                ],
                "addr": [
                    "int",
                    "str"
                ]
            }
        },
        "DelayedAckClient.send_ack": {
            "name": "send_ack",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blockid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "addr": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "aiotftp-master/tests/test_parser.py": {
        "test_parse_valid_packet": {
            "name": "test_parse_valid_packet",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "test_parse_invalid_packet": {
            "name": "test_parse_invalid_packet",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "test_parsing_ushort": {
            "name": "test_parsing_ushort",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "buf": [
                    "int",
                    "str"
                ]
            }
        },
        "test_request_packets": {
            "name": "test_request_packets",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "pkt": []
            }
        },
        "test_data_packets": {
            "name": "test_data_packets",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "pkt": []
            }
        },
        "test_ack_packets": {
            "name": "test_ack_packets",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "pkt": []
            }
        },
        "test_error_packets": {
            "name": "test_error_packets",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "pkt": []
            }
        }
    },
    "aiotftp-master/tests/__init__.py": {}
}
{
    "amalgama-pq-master/amalgama/amalgama.py": {
        "get_url": {
            "name": "get_url",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "artist": [],
                "title": []
            }
        },
        "get_html": {
            "name": "get_html",
            "location": 18,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "get_all_translates_lines": {
            "name": "get_all_translates_lines",
            "location": 27,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "html": []
            }
        },
        "get_all_original_lines": {
            "name": "get_all_original_lines",
            "location": 42,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "html": []
            }
        },
        "split_before": {
            "name": "split_before",
            "location": 54,
            "return": [
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "iterable": [],
                "pred": []
            }
        },
        "get_all_translates": {
            "name": "get_all_translates",
            "location": 64,
            "return": [
                "list[]"
            ],
            "arguments": {
                "html": []
            }
        },
        "get_all_originals": {
            "name": "get_all_originals",
            "location": 70,
            "return": [
                "list[]"
            ],
            "arguments": {
                "html": [],
                "song": []
            }
        },
        "get_first_translate_text": {
            "name": "get_first_translate_text",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "html": []
            }
        },
        "get_first_original_text": {
            "name": "get_first_original_text",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "html": [],
                "song": []
            }
        }
    },
    "amalgama-pq-master/amalgama/__init__.py": {},
    "amalgama-pq-master/tests/test_amalgama_pq.py": {
        "html": {
            "name": "html",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "result_html": {
            "name": "result_html",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_get_html": {
            "name": "test_get_html",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "html": [
                    "str",
                    "bool"
                ],
                "result_html": [
                    "str",
                    "bool"
                ]
            }
        },
        "load_json": {
            "name": "load_json",
            "location": 22,
            "return": [],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "test_pq_translate": {
            "name": "test_pq_translate",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "dict[str, typing.Any]",
                    "None",
                    "bytes",
                    "str",
                    "typing.Type"
                ],
                "data": [
                    "dict[str, typing.Any]",
                    "None",
                    "bytes",
                    "str",
                    "typing.Type"
                ],
                "html": [
                    "dict[str, typing.Any]",
                    "None",
                    "bytes",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "test_pq_original": {
            "name": "test_pq_original",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "str",
                    "dict[, ]",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "dict[, ]",
                    "typing.Type"
                ],
                "html": [
                    "str",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        }
    },
    "amalgama-pq-master/tests/test_csv.py": {
        "test_amalgama": {
            "name": "test_amalgama",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "artist": [
                    "str",
                    "None",
                    "typing.Sequence[str]"
                ],
                "title": [
                    "str",
                    "None",
                    "typing.Sequence[str]"
                ],
                "url": [
                    "str",
                    "None",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "amalgama-pq-master/tests/test_split_before.py": {
        "test_split_before": {
            "name": "test_split_before",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "iterable": [
                    "str",
                    "list[str]",
                    "None"
                ],
                "expected": [
                    "str"
                ]
            }
        }
    },
    "amalgama-pq-master/tests/lyrics_page/extract_html&css.py": {},
    "amalgama-pq-master/tests/tests_data/prepare_data.py": {
        "update_html": {
            "name": "update_html",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "amt-test-master/backend.py": {
        "get_object_or_404": {
            "name": "get_object_or_404",
            "location": 37,
            "return": [
                "str",
                "int",
                "list[]",
                "set[str]",
                "float",
                "list[typing.Callable[..., typing.Any]]",
                "dict[, ]",
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "start_tournament": {
            "name": "start_tournament",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "id": [
                    "int",
                    "list[int]",
                    "str"
                ],
                "group_size": [
                    "int",
                    "typing.Iterable[typing.Union[int,str]]",
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "rewarding_players": {
            "name": "rewarding_players",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "id": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "create_player": {
            "name": "create_player",
            "location": 117,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {}
        },
        "player_detail": {
            "name": "player_detail",
            "location": 135,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "list[tuple[typing.Union[str,typing.Any]]]",
                    "int",
                    "None"
                ]
            }
        },
        "create_tournament": {
            "name": "create_tournament",
            "location": 141,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {}
        },
        "tournament_detail": {
            "name": "tournament_detail",
            "location": 192,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "participate": {
            "name": "participate",
            "location": 208,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_opponent": {
            "name": "get_opponent",
            "location": 242,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "None"
                ],
                "player_id": [
                    "str",
                    "int",
                    "None",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ]
            }
        },
        "attack": {
            "name": "attack",
            "location": 266,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 326,
            "return": [
                "Bottle"
            ],
            "arguments": {}
        },
        "UUIDEncoder.default": {
            "name": "default",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool",
                    "str"
                ]
            }
        },
        "Validator._validate_is_uuid": {
            "name": "_validate_is_uuid",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_uuid": [
                    "str",
                    "None",
                    "typing.Iterator",
                    "dict[str, typing.Any]"
                ],
                "field": [
                    "int",
                    "float",
                    "typing.Sequence[int]",
                    "None"
                ],
                "value": [
                    "str",
                    "None",
                    "typing.Iterator",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "GetMixin.get_or_create": {
            "name": "get_or_create",
            "location": 47,
            "return": [
                "tuple[bool]",
                "tuple[typing.Union[dict[str, str],bytes,typing.Type,dict[str, int],dict[str, dict[, ]],list[str],bool]]"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[[], None]",
                    "int",
                    "None",
                    "typing.AnyStr"
                ]
            }
        },
        "Tournament.started": {
            "name": "started",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tournament.finished": {
            "name": "finished",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "create_app.uuid_filter": {
            "name": "uuid_filter",
            "location": 328,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "config": []
            }
        },
        "create_app.error_handler": {
            "name": "error_handler",
            "location": 340,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "create_app.uuid_filter.to_python": {
            "name": "to_python",
            "location": 332,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "create_app.uuid_filter.to_url": {
            "name": "to_url",
            "location": 335,
            "return": [],
            "arguments": {
                "uuid": []
            }
        }
    },
    "amt-test-master/tournament.py": {
        "generate_player": {
            "name": "generate_player",
            "location": 35,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {}
        },
        "print_winners": {
            "name": "print_winners",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "groups": []
            }
        }
    }
}
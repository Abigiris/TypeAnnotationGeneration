{
    "angstrom-master/py/build.py": {
        "msdosDate": {
            "name": "msdosDate",
            "location": 17,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "t": [
                    "int"
                ]
            }
        },
        "print_size": {
            "name": "print_size",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "sz": [
                    "str",
                    "int",
                    "bytes"
                ],
                "name": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "build_html": {
            "name": "build_html",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "File.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None",
                    "list[str]",
                    "int"
                ],
                "data": [
                    "str",
                    "dict[str, str]",
                    "bytes",
                    "dict[, ]"
                ],
                "cdata": [
                    "bool",
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "FileSet.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "zippath": [
                    "int",
                    "float"
                ],
                "filepath": [
                    "int",
                    "float"
                ]
            }
        },
        "FileSet.add": {
            "name": "add",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "data": []
            }
        },
        "FileSet.save": {
            "name": "save",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileSet.test": {
            "name": "test",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "angstrom-master/py/opuscraft/analyze.py": {
        "get_period": {
            "name": "get_period",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "data": [],
                "pos": [
                    "int"
                ]
            }
        },
        "extract_clip": {
            "name": "extract_clip",
            "location": 32,
            "return": [],
            "arguments": {
                "data": [],
                "pos": [
                    "int"
                ],
                "length": [
                    "int"
                ]
            }
        },
        "extract_looped": {
            "name": "extract_looped",
            "location": 39,
            "return": [],
            "arguments": {
                "data": [],
                "pos": [
                    "int"
                ],
                "length": [
                    "int"
                ],
                "overlap": [
                    "bool"
                ]
            }
        },
        "extract_pitched": {
            "name": "extract_pitched",
            "location": 58,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "float",
                    "typing.Callable[, ]",
                    "list[str]"
                ],
                "data": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "pos": [
                    "int",
                    "list[]"
                ],
                "length": []
            }
        }
    },
    "angstrom-master/py/opuscraft/audio.py": {
        "load_audio": {
            "name": "load_audio",
            "location": 10,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "Packet.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int",
                    "list[float]",
                    "float",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "Packet.write": {
            "name": "write",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dfp": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "sfp": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "ZeroPacket.write": {
            "name": "write",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dfp": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "sfp": [
                    "str"
                ]
            }
        },
        "AudioPacket.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AudioPacket.write": {
            "name": "write",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "dfp": [
                    "str",
                    "typing.Sequence[dict[str, typing.Any]]",
                    "typing.BinaryIO",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "sfp": [
                    "typing.IO",
                    "str",
                    "bytes"
                ]
            }
        },
        "Stream.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stream.append": {
            "name": "append",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packet": [
                    "int",
                    "bytes"
                ]
            }
        },
        "Stream.extend": {
            "name": "extend",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packets": []
            }
        },
        "Stream.encode": {
            "name": "encode",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "angstrom-master/py/opuscraft/pitch.py": {
        "midi_from_sci": {
            "name": "midi_from_sci",
            "location": 15,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "sci_from_midi": {
            "name": "sci_from_midi",
            "location": 39,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "hz_from_midi": {
            "name": "hz_from_midi",
            "location": 46,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "angstrom-master/py/opuscraft/script.py": {
        "packetize": {
            "name": "packetize",
            "location": 289,
            "return": [
                "typing.Generator[int]"
            ],
            "arguments": {
                "length": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ScriptError.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "None",
                    "typing.TextIO"
                ],
                "filename": [
                    "None",
                    "str"
                ],
                "lineno": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "State.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_path": [
                    "str"
                ]
            }
        },
        "State.run": {
            "name": "run",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "State.command_input": {
            "name": "command_input",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "State.command_word": {
            "name": "command_word",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "State.command_output": {
            "name": "command_output",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Group.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "str"
                ]
            }
        },
        "Group.command_end": {
            "name": "command_end",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "InputGroup.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "bool",
                    "str"
                ],
                "data": [
                    "str",
                    "bytes",
                    "dict[str, str]",
                    "tuple[]",
                    "dict[, ]"
                ]
            }
        },
        "InputGroup.command": {
            "name": "command",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "InputGroup.get_sound": {
            "name": "get_sound",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "start": [
                    "int",
                    "str"
                ],
                "length": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "InputGroup.add_sound_once": {
            "name": "add_sound_once",
            "location": 153,
            "return": [
                "OnceSound"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "bool",
                    "str",
                    "list[str]",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "start": [
                    "str",
                    "None"
                ],
                "length": [
                    "str",
                    "None"
                ],
                "args": []
            }
        },
        "InputGroup.add_sound_looped": {
            "name": "add_sound_looped",
            "location": 159,
            "return": [
                "LoopedSound"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "bool",
                    "str",
                    "list[str]",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "start": [
                    "str"
                ],
                "length": [
                    "str"
                ],
                "args": []
            }
        },
        "InputGroup.add_sound_pitched": {
            "name": "add_sound_pitched",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int"
                ],
                "start": [
                    "int",
                    "tuple[typing.Union[str,...]]",
                    "float",
                    "list[float]"
                ],
                "length": [
                    "int"
                ],
                "args": []
            }
        },
        "StreamGroup.__init__": {
            "name": "__init__",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "dict[, ]",
                    "bool"
                ],
                "stream": [
                    "str"
                ]
            }
        },
        "StreamGroup.command": {
            "name": "command",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "WordGroup.__init__": {
            "name": "__init__",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "dict[, ]",
                    "None",
                    "typing.Sequence[int]",
                    "bool",
                    "str"
                ],
                "name": [
                    "str",
                    "typing.OrderedDict",
                    "dict[str, str]",
                    "None"
                ]
            }
        },
        "WordGroup.command_end": {
            "name": "command_end",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "OutputGroup.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "list[str]",
                    "None",
                    "str"
                ],
                "out_path": [
                    "str"
                ]
            }
        },
        "OutputGroup.command_clip": {
            "name": "command_clip",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "OutputGroup.command_end": {
            "name": "command_end",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Sound.emit": {
            "name": "emit",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "length": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "OnceSound.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packets": [
                    "int",
                    "float"
                ]
            }
        },
        "OnceSound.emit": {
            "name": "emit",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "list[str]",
                    "list[]",
                    "str",
                    "None"
                ],
                "length": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "LoopedSound.__init__": {
            "name": "__init__",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packets": [
                    "int",
                    "float"
                ]
            }
        },
        "LoopedSound.emit": {
            "name": "emit",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "typing.Iterable[int]",
                    "str"
                ],
                "length": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "StretchSound.__init__": {
            "name": "__init__",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "groups": [
                    "str"
                ]
            }
        },
        "StretchSound.emit": {
            "name": "emit",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [],
                "length": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "StretchPitchSound.__init__": {
            "name": "__init__",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "groups": []
            }
        },
        "StretchPitchSound.emit": {
            "name": "emit",
            "location": 363,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "typing.MutableMapping"
                ],
                "length": [
                    "int",
                    "str",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "angstrom-master/py/opuscraft/__init__.py": {}
}
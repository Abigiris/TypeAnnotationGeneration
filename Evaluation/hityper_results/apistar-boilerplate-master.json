{
    "apistar-boilerplate-master/app/environment.py": {
        "var": {
            "name": "var",
            "location": 14,
            "return": [
                "typing.Type"
            ],
            "arguments": {
                "cls": [
                    "float",
                    "typing.Type",
                    "dict[, ]"
                ],
                "default": [],
                "required": [
                    "bool"
                ]
            }
        },
        "Boolean.validate": {
            "name": "validate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Environment.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vars_dict": [
                    "dict[, ]",
                    "dict[str, float]",
                    "dict[str, dict[str, typing.Any]]",
                    "dict[str, dict[, ]]"
                ]
            }
        },
        "Environment._resolve_value": {
            "name": "_resolve_value",
            "location": 30,
            "return": [
                "str",
                "dict[str, typing.Any]",
                "tuple[]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ],
                "var_func": []
            }
        }
    },
    "apistar-boilerplate-master/app/routes.py": {
        "RouteDecorator.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str",
                    "list[dict[, ]]",
                    "bool",
                    "typing.MutableMapping",
                    "None"
                ],
                "path": [
                    "str",
                    "int",
                    "None"
                ],
                "name": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "int"
                ],
                "auth_required": [
                    "bool"
                ]
            }
        },
        "RouteDecorator.__call__": {
            "name": "__call__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "view": [
                    "dict[, ]"
                ]
            }
        },
        "RouteDecorator.__call__.wrapped_view": {
            "name": "wrapped_view",
            "location": 56,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {}
        }
    },
    "apistar-boilerplate-master/app/types.py": {},
    "apistar-boilerplate-master/app/views.py": {
        "get_account": {
            "name": "get_account",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "apistar-boilerplate-master/app/__init__.py": {
        "homepage": {
            "name": "homepage",
            "location": 11,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        }
    },
    "apistar-boilerplate-master/app/business/account.py": {
        "get_account": {
            "name": "get_account",
            "location": 3,
            "return": [
                "dict[typing.Text, typing.Union[int,typing.Text]]"
            ],
            "arguments": {
                "account_id": [
                    "int",
                    "list[str]"
                ]
            }
        }
    },
    "apistar-boilerplate-master/commands/project.py": {
        "Cli.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env_name": [
                    "typing.Text"
                ]
            }
        },
        "Cli.shell": {
            "name": "shell",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cli.run": {
            "name": "run",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "int"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "Cli.app": {
            "name": "app",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.migrate": {
            "name": "migrate",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "typing.Text"
                ]
            }
        },
        "Cli.downgrade": {
            "name": "downgrade",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "typing.Text"
                ]
            }
        },
        "Cli.makemigrations": {
            "name": "makemigrations",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "None",
                    "str",
                    "int"
                ],
                "autogenerate": [
                    "bool"
                ]
            }
        },
        "Cli.createuser": {
            "name": "createuser",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "Cli.deploy": {
            "name": "deploy",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apistar-boilerplate-master/commands/utils.py": {
        "alembic_cfg": {
            "name": "alembic_cfg",
            "location": 11,
            "return": [
                "dict[, ]",
                "int",
                "dict[str, typing.Any]",
                "dict[str, str]"
            ],
            "arguments": {}
        },
        "configure_debug_logging": {
            "name": "configure_debug_logging",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "load_modules_wildcard": {
            "name": "load_modules_wildcard",
            "location": 28,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        },
        "load_modules": {
            "name": "load_modules",
            "location": 37,
            "return": [
                "dict[typing.Union[tuple[typing.Union[str,typing.Any]],typing.Text], ]"
            ],
            "arguments": {}
        },
        "run_ipython_shell": {
            "name": "run_ipython_shell",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "project_name": [
                    "bool",
                    "str"
                ],
                "banner": [
                    "bool",
                    "str"
                ],
                "exit_msg": [
                    "typing.Text"
                ],
                "domains": [
                    "None",
                    "list[str]",
                    "str",
                    "dict[, ]",
                    "float"
                ]
            }
        },
        "run_ipython_shell.CustomPrompt.in_prompt_tokens": {
            "name": "in_prompt_tokens",
            "location": 47,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "cli": [
                    "None"
                ]
            }
        },
        "run_ipython_shell.CustomPrompt.out_prompt_tokens": {
            "name": "out_prompt_tokens",
            "location": 54,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apistar-boilerplate-master/commands/__init__.py": {},
    "apistar-boilerplate-master/tests/test_example.py": {
        "test_example": {
            "name": "test_example",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "apistar-boilerplate-master/tests/__init__.py": {
        "test_example": {
            "name": "test_example",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
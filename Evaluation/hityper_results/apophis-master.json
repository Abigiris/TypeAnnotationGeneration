{
    "apophis-master/apophis/__init__.py": {},
    "apophis-master/apophis/__main__.py": {
        "BotClient.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apophis-master/apophis/cmds/access.py": {},
    "apophis-master/apophis/cmds/command.py": {
        "command_handler": {
            "name": "command_handler",
            "location": 9,
            "return": [],
            "arguments": {
                "module": [
                    "str",
                    "list[\"Outcome\"]",
                    "list[]",
                    "typing.Callable[str, str]"
                ],
                "handler": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apophis-master/apophis/cmds/decide.py": {},
    "apophis-master/apophis/cmds/define.py": {
        "DefineCommand.handle": {
            "name": "handle",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "context": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ],
                "message": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "apophis-master/apophis/cmds/help.py": {
        "HelpCommand.handle": {
            "name": "handle",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "context": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ],
                "message": [
                    "str",
                    "int",
                    "list[str]",
                    "list[list[str]]",
                    "list[]"
                ]
            }
        }
    },
    "apophis-master/apophis/cmds/insult.py": {},
    "apophis-master/apophis/cmds/music.py": {
        "handle_after_song": {
            "name": "handle_after_song",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "bytes"
                ],
                "message": []
            }
        },
        "get_next_song": {
            "name": "get_next_song",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "random_song": {
            "name": "random_song",
            "location": 198,
            "return": [
                "int"
            ],
            "arguments": {
                "context": [
                    "str"
                ]
            }
        }
    },
    "apophis-master/apophis/cmds/quit.py": {},
    "apophis-master/apophis/cmds/remind.py": {
        "convert_times": {
            "name": "convert_times",
            "location": 14,
            "return": [],
            "arguments": {
                "when": [
                    "str",
                    "bytes",
                    "dict[, ]"
                ]
            }
        }
    },
    "apophis-master/apophis/cmds/roll.py": {
        "dice": {
            "name": "dice",
            "location": 34,
            "return": [
                "Expression"
            ],
            "arguments": {
                "rolls": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "faces": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "constant": {
            "name": "constant",
            "location": 38,
            "return": [
                "Expression"
            ],
            "arguments": {
                "c": [
                    "int",
                    "str",
                    "typing.Counter",
                    "typing.Iterable[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 42,
            "return": [
                "Expression"
            ],
            "arguments": {
                "lhs": [
                    "int"
                ],
                "rhs": [
                    "int"
                ]
            }
        },
        "evaluate": {
            "name": "evaluate",
            "location": 46,
            "return": [
                "list[]"
            ],
            "arguments": {
                "expr": [
                    "str"
                ]
            }
        },
        "lex": {
            "name": "lex",
            "location": 83,
            "return": [
                "None",
                "list[Token]"
            ],
            "arguments": {
                "input": []
            }
        },
        "parse_dice": {
            "name": "parse_dice",
            "location": 104,
            "return": [
                "None",
                "Result"
            ],
            "arguments": {
                "tokens": []
            }
        },
        "parse_constant": {
            "name": "parse_constant",
            "location": 120,
            "return": [
                "None",
                "Result"
            ],
            "arguments": {
                "tokens": []
            }
        },
        "parse_term": {
            "name": "parse_term",
            "location": 130,
            "return": [
                "dict[str, str]",
                "typing.KeysView",
                "dict[, ]",
                "list[str]",
                "bool",
                "dict[str, typing.Union[None,typing.Any,str]]",
                "None"
            ],
            "arguments": {
                "tokens": [
                    "str",
                    "set[str]",
                    "list[typing.Match]",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "parse_plus": {
            "name": "parse_plus",
            "location": 142,
            "return": [
                "None",
                "Result"
            ],
            "arguments": {
                "tokens": []
            }
        },
        "parse_addition": {
            "name": "parse_addition",
            "location": 152,
            "return": [
                "None",
                "Result"
            ],
            "arguments": {
                "tokens": [
                    "str",
                    "list[str]",
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "None",
                    "list[]"
                ]
            }
        },
        "parse_expression": {
            "name": "parse_expression",
            "location": 168,
            "return": [
                "dict[str, str]",
                "typing.KeysView",
                "dict[, ]",
                "list[str]",
                "bool",
                "dict[str, typing.Union[None,typing.Any,str]]",
                "None"
            ],
            "arguments": {
                "tokens": [
                    "dict[str, typing.Any]",
                    "str",
                    "typing.NamedTuple",
                    "tuple[bytes]"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "input": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "apophis-master/apophis/cmds/short.py": {},
    "apophis-master/apophis/cmds/theo.py": {},
    "apophis-master/apophis/cmds/uptime.py": {},
    "apophis-master/apophis/cmds/weather.py": {},
    "apophis-master/apophis/cmds/__init__.py": {},
    "apophis-master/apophis/core/http.py": {},
    "apophis-master/apophis/core/readers.py": {
        "fetch_config": {
            "name": "fetch_config",
            "location": 4,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        }
    },
    "apophis-master/apophis/core/__init__.py": {},
    "apophis-master/apophis/processes/lolesports_match_notifier.py": {
        "get_event_message": {
            "name": "get_event_message",
            "location": 41,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "event": [
                    "str"
                ]
            }
        }
    },
    "apophis-master/apophis/processes/reminders.py": {}
}
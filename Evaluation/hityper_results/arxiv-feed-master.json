{
    "arxiv-feed-master/app.py": {},
    "arxiv-feed-master/rss/config.py": {},
    "arxiv-feed-master/rss/controller.py": {
        "get_xml": {
            "name": "get_xml",
            "location": 17,
            "return": [
                "tuple[typing.Union[typing.Text,dict[, ]]]",
                "tuple[dict[, ]]"
            ],
            "arguments": {
                "archive_id": [
                    "str",
                    "int",
                    "typing.Iterable[str]",
                    "None"
                ],
                "version": [
                    "str",
                    "int",
                    "None",
                    "list[A]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/domain.py": {},
    "arxiv-feed-master/rss/factory.py": {
        "create_web_app": {
            "name": "create_web_app",
            "location": 9,
            "return": [
                "Flask"
            ],
            "arguments": {}
        }
    },
    "arxiv-feed-master/rss/index.py": {
        "perform_search": {
            "name": "perform_search",
            "location": 10,
            "return": [
                "list[]",
                "dict[str, typing.Union[typing.Any,typing.Any]]",
                "list[tuple[typing.Union[int,int]]]",
                "dict[str, dict[, ]]",
                "set[str]",
                "typing.Pattern"
            ],
            "arguments": {
                "archive": [
                    "str",
                    "int",
                    "list[datetime.date]",
                    "typing.Sequence[str]"
                ],
                "date_time": [
                    "str",
                    "int",
                    "list[datetime.date]",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/routes.py": {
        "rss": {
            "name": "rss",
            "location": 11,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "archive_id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/__init__.py": {},
    "arxiv-feed-master/rss/serializers/atom_1_0.py": {
        "Atom_1_0.get_xml": {
            "name": "get_xml",
            "location": 17,
            "return": [
                "tuple[typing.Union[int,list[str],bytes,str,list[int]]]"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "arxiv-feed-master/rss/serializers/atom_extensions.py": {
        "ArxivExtension.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArxivExtension.extend_atom": {
            "name": "extend_atom",
            "location": 18,
            "return": [
                "int",
                "str",
                "typing.Iterable['Context']"
            ],
            "arguments": {
                "atom_feed": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "ArxivExtension.extend_rss": {
            "name": "extend_rss",
            "location": 36,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "rss_feed": [
                    "int",
                    "float"
                ]
            }
        },
        "ArxivExtension.extend_ns": {
            "name": "extend_ns",
            "location": 54,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "ArxivEntryExtension.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArxivEntryExtension.extend_atom": {
            "name": "extend_atom",
            "location": 78,
            "return": [
                "BaseException",
                "None",
                "list[str]",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "BaseException",
                    "None",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "ArxivEntryExtension.extend_rss": {
            "name": "extend_rss",
            "location": 114,
            "return": [
                "int",
                "typing.Optional[]"
            ],
            "arguments": {
                "entry": [
                    "int",
                    "typing.Optional[]"
                ]
            }
        },
        "ArxivEntryExtension.comment": {
            "name": "comment",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "ArxivEntryExtension.primary_category": {
            "name": "primary_category",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArxivEntryExtension.journal_ref": {
            "name": "journal_ref",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "int"
                ]
            }
        },
        "ArxivEntryExtension.doi": {
            "name": "doi",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list": [
                    "int",
                    "typing.Type",
                    "str"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/rss_2_0.py": {
        "Content.get_namespace": {
            "name": "get_namespace",
            "location": 22,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "Taxonomy.get_namespace": {
            "name": "get_namespace",
            "location": 44,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "Syndication.get_namespace": {
            "name": "get_namespace",
            "location": 66,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "Admin.get_namespace": {
            "name": "get_namespace",
            "location": 88,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "RSS_2_0.get_xml": {
            "name": "get_xml",
            "location": 105,
            "return": [
                "tuple[typing.Union[int,list[str]]]"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "arxiv-feed-master/rss/serializers/serializer.py": {
        "Serializer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Serializer.get_xml": {
            "name": "get_xml",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/__init__.py": {},
    "arxiv-feed-master/tests/test_typings.py": {
        "MyPyTest.test_run_mypy_module": {
            "name": "test_run_mypy_module",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyPyTest.test_run_mypy_tests": {
            "name": "test_run_mypy_tests",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyPyTest.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-feed-master/tests/__init__.py": {}
}
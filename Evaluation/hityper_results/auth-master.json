{
    "auth-master/auth/config.py": {},
    "auth-master/auth/db.py": {},
    "auth-master/auth/errors.py": {},
    "auth-master/auth/handlers.py": {},
    "auth-master/auth/main.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "auth-master/auth/mq.py": {},
    "auth-master/auth/response.py": {
        "return_error": {
            "name": "return_error",
            "location": 9,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "return_200": {
            "name": "return_200",
            "location": 21,
            "return": [],
            "arguments": {
                "maybe_json": []
            }
        },
        "return_201": {
            "name": "return_201",
            "location": 27,
            "return": [],
            "arguments": {
                "maybe_json": []
            }
        },
        "return_204": {
            "name": "return_204",
            "location": 33,
            "return": [],
            "arguments": {
                "maybe_json": []
            }
        }
    },
    "auth-master/auth/security.py": {
        "fake_basic_auth": {
            "name": "fake_basic_auth",
            "location": 3,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "required_scopes": [
                    "None",
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        }
    },
    "auth-master/auth/token.py": {
        "generate_token": {
            "name": "generate_token",
            "location": 13,
            "return": [
                "JWTEncodeError",
                "dict[typing.Text, typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "user": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "auth-master/auth/user.py": {
        "to_dict": {
            "name": "to_dict",
            "location": 13,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "user": [
                    "bool",
                    "str",
                    "None",
                    "bytes"
                ]
            }
        }
    },
    "auth-master/auth/utils.py": {
        "current_timestamp": {
            "name": "current_timestamp",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "auth-master/auth/verify.py": {},
    "auth-master/auth/__init__.py": {},
    "auth-master/auth/__main__.py": {},
    "auth-master/test/test_db.py": {},
    "auth-master/test/test_handlers.py": {
        "cli": {
            "name": "cli",
            "location": 15,
            "return": [],
            "arguments": {
                "loop": [
                    "int"
                ],
                "aiohttp_client": [
                    "int"
                ]
            }
        }
    },
    "auth-master/test/__init__.py": {}
}
{
    "autocomplete-metadata-master/src/autocomplete.py": {
        "starts_with_term": {
            "name": "starts_with_term",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "tokens": [
                    "str",
                    "list[]",
                    "bytes",
                    "list[int]"
                ],
                "term": [
                    "str"
                ]
            }
        },
        "all_match": {
            "name": "all_match",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "terms": [
                    "set[]",
                    "list[]",
                    "list[int]"
                ],
                "tokens": [
                    "set[]",
                    "list[]",
                    "int",
                    "typing.Callable[, ]",
                    "list[int]"
                ]
            }
        },
        "match_terms": {
            "name": "match_terms",
            "location": 18,
            "return": [
                "list[]"
            ],
            "arguments": {
                "terms": [
                    "list[]",
                    "set[]",
                    "str",
                    "typing.Pattern",
                    "list[str]",
                    "dict[, ]"
                ],
                "repository": [
                    "list[]",
                    "set[]",
                    "str",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "sort_completions": {
            "name": "sort_completions",
            "location": 22,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "completions": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "find_completions": {
            "name": "find_completions",
            "location": 27,
            "return": [
                "list[]"
            ],
            "arguments": {
                "query": [
                    "str",
                    "typing.IO",
                    "typing.Mapping",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "repository": [
                    "typing.Any",
                    "None",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "int"
                ]
            }
        },
        "display_completions": {
            "name": "display_completions",
            "location": 57,
            "return": [
                "list[]"
            ],
            "arguments": {
                "completions": [
                    "str",
                    "set[str]",
                    "list[]",
                    "list[int]"
                ]
            }
        }
    },
    "autocomplete-metadata-master/src/autocomplete_controller.py": {},
    "autocomplete-metadata-master/src/autocomplete_manual.py": {},
    "autocomplete-metadata-master/src/completion.py": {
        "tokenize_name": {
            "name": "tokenize_name",
            "location": 21,
            "return": [
                "list[]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "tokenize_tag": {
            "name": "tokenize_tag",
            "location": 25,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tag": [
                    "str"
                ]
            }
        },
        "tokenize_names": {
            "name": "tokenize_names",
            "location": 29,
            "return": [
                "list[]"
            ],
            "arguments": {
                "names": [
                    "str"
                ]
            }
        },
        "parse_course_record": {
            "name": "parse_course_record",
            "location": 36,
            "return": [
                "Completion",
                "None"
            ],
            "arguments": {
                "record": [
                    "str"
                ]
            }
        },
        "get_courses": {
            "name": "get_courses",
            "location": 51,
            "return": [
                "list[]"
            ],
            "arguments": {
                "course_records": [
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "get_courses_from_json": {
            "name": "get_courses_from_json",
            "location": 59,
            "return": [
                "list[]"
            ],
            "arguments": {
                "repo_blob": []
            }
        },
        "parse_author_record": {
            "name": "parse_author_record",
            "location": 63,
            "return": [
                "Completion",
                "None"
            ],
            "arguments": {
                "record": []
            }
        },
        "get_authors": {
            "name": "get_authors",
            "location": 74,
            "return": [
                "list[]"
            ],
            "arguments": {
                "author_records": [
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "get_authors_from_json": {
            "name": "get_authors_from_json",
            "location": 82,
            "return": [
                "list[]"
            ],
            "arguments": {
                "repo_blob": []
            }
        },
        "load_repository_from_file": {
            "name": "load_repository_from_file",
            "location": 86,
            "return": [
                "Repository"
            ],
            "arguments": {
                "file_name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "autocomplete-metadata-master/src/server.py": {
        "complete": {
            "name": "complete",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "autocomplete-metadata-master/src/test_autocomplete.py": {
        "test_no_query_yields_empty_list": {
            "name": "test_no_query_yields_empty_list",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_matches_yields_empty_list": {
            "name": "test_no_matches_yields_empty_list",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_angular_matches_two_courses": {
            "name": "test_angular_matches_two_courses",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_angular_fundamentals_matches_one_course": {
            "name": "test_angular_fundamentals_matches_one_course",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fundamental_angular_matches_one_course": {
            "name": "test_fundamental_angular_matches_one_course",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ha_phan_matches_two_courses": {
            "name": "test_ha_phan_matches_two_courses",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_jared_matches_one_author": {
            "name": "test_jared_matches_one_author",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_results_are_sorted": {
            "name": "test_display_results_are_sorted",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "autocomplete-metadata-master/src/test_completion.py": {
        "test_name_tokenizes_as_lowercase_list": {
            "name": "test_name_tokenizes_as_lowercase_list",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_name_tokenizes_as_empty_list": {
            "name": "test_no_name_tokenizes_as_empty_list",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tag_tokenizes_as_lowercase_list": {
            "name": "test_tag_tokenizes_as_lowercase_list",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tag_name_tokenizes_as_empty_list": {
            "name": "test_tag_name_tokenizes_as_empty_list",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_course_record_parses_as_completion_object": {
            "name": "test_valid_course_record_parses_as_completion_object",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_course_record_parses_as_none": {
            "name": "test_invalid_course_record_parses_as_none",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_author_record_parses_as_completion_object": {
            "name": "test_valid_author_record_parses_as_completion_object",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_author_record_parses_as_none": {
            "name": "test_invalid_author_record_parses_as_none",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "autocomplete-metadata-master/src/utilities/config.example.py": {},
    "autocomplete-metadata-master/src/utilities/create_metadata_json.py": {
        "fetch_authors_query": {
            "name": "fetch_authors_query",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "format_author": {
            "name": "format_author",
            "location": 51,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "author": [
                    "float",
                    "str"
                ]
            }
        },
        "fetch_courses_query": {
            "name": "fetch_courses_query",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "format_course": {
            "name": "format_course",
            "location": 84,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "course": [
                    "int",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "fetch_modules_query": {
            "name": "fetch_modules_query",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "format_module": {
            "name": "format_module",
            "location": 117,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, ]]]"
            ],
            "arguments": {
                "index": [
                    "str"
                ],
                "module": [
                    "str"
                ]
            }
        },
        "fetch_clips_query": {
            "name": "fetch_clips_query",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "format_clip": {
            "name": "format_clip",
            "location": 163,
            "return": [
                "dict[typing.Text, typing.Union[str,bool,dict[typing.Text, ]]]"
            ],
            "arguments": {
                "index": [
                    "str",
                    "bool"
                ],
                "clip": [
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "autocomplete-metadata-master/src/utilities/search_models.py": {}
}
{
    "aws-sam-sample-master/s3-local-init.py": {
        "put_files": {
            "name": "put_files",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "bucket": [
                    "str",
                    "bytes"
                ]
            }
        },
        "put_files.put_file": {
            "name": "put_file",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "bucket": [],
                "path": []
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/controller.py": {
        "account": {
            "name": "account",
            "location": 27,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "form": [
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "member": {
            "name": "member",
            "location": 40,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "form": []
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/dao.py": {
        "find_member": {
            "name": "find_member",
            "location": 27,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/service.py": {
        "fetch_account": {
            "name": "fetch_account",
            "location": 8,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "fetch_member": {
            "name": "fetch_member",
            "location": 12,
            "return": [],
            "arguments": {
                "id": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/session.py": {},
    "aws-sam-sample-master/aws_sam_sample/storage.py": {
        "fetch_account": {
            "name": "fetch_account",
            "location": 21,
            "return": [
                "Account",
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/__init__.py": {},
    "aws-sam-sample-master/aws_sam_sample/libs/saucisse.py": {
        "omit_none": {
            "name": "omit_none",
            "location": 8,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "d": [
                    "dict[, ]"
                ]
            }
        },
        "create_error": {
            "name": "create_error",
            "location": 71,
            "return": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ],
            "arguments": {
                "error": []
            }
        },
        "create_response": {
            "name": "create_response",
            "location": 81,
            "return": [
                "dict[typing.Text, typing.Union[int,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {
                "body": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "endpoint": {
            "name": "endpoint",
            "location": 91,
            "return": [],
            "arguments": {
                "form": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "HttpError.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "str",
                    "typing.Sequence[dict[str, str]]"
                ],
                "status": [
                    "str",
                    "typing.Sequence[dict[str, str]]"
                ],
                "type_": [
                    "None",
                    "str",
                    "typing.Sequence[dict[str, str]]"
                ],
                "detail": [
                    "None",
                    "str",
                    "typing.Sequence[dict[str, str]]"
                ]
            }
        },
        "HttpError.to_json": {
            "name": "to_json",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BadRequestError.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str"
                ],
                "invalid_params": [
                    "str",
                    "int"
                ]
            }
        },
        "NotFoundError.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "dict[, ]",
                    "str"
                ],
                "detail": [
                    "int",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "Form.from_dict": {
            "name": "from_dict",
            "location": 59,
            "return": [
                "str",
                "int",
                "dict[str, int]",
                "dict[, ]",
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "typing.OrderedDict",
                    "Exception"
                ],
                "d": [
                    "dict[, ]",
                    "typing.Type",
                    "typing.Callable[[], None]"
                ]
            }
        },
        "endpoint.endpoint_wrapper": {
            "name": "endpoint_wrapper",
            "location": 92,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "endpoint.endpoint_wrapper.wrapper": {
            "name": "wrapper",
            "location": 94,
            "return": [],
            "arguments": {
                "event": [],
                "context": []
            }
        }
    },
    "aws-sam-sample-master/aws_sam_sample/libs/__init__.py": {},
    "aws-sam-sample-master/tests/test_dao.py": {
        "initdb": {
            "name": "initdb",
            "location": 8,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "TestFindMember.test_found": {
            "name": "test_found",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindMember.test_not_found": {
            "name": "test_not_found",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aws-sam-sample-master/tests/test_service.py": {
        "fetch_account_returns": {
            "name": "fetch_account_returns",
            "location": 9,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "find_member_returns": {
            "name": "find_member_returns",
            "location": 18,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "fetch_account_returns.stub": {
            "name": "stub",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "account": []
            }
        },
        "find_member_returns.stub": {
            "name": "stub",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "member": []
            }
        },
        "TestFetchAccount.test_found": {
            "name": "test_found",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fetch_account_returns": []
            }
        },
        "TestFetchAccount.test_not_found": {
            "name": "test_not_found",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fetch_account_returns": []
            }
        },
        "TestFetchMember.test_found": {
            "name": "test_found",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "find_member_returns": []
            }
        },
        "TestFetchMember.test_not_found": {
            "name": "test_not_found",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aws-sam-sample-master/tests/__init__.py": {}
}
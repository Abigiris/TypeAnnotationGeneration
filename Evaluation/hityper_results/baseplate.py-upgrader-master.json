{
    "baseplate.py-upgrader-master/setup.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/colors.py": {
        "colorize": {
            "name": "colorize",
            "location": 39,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "message": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "color": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "print": {
            "name": "print",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "Color.BOLD": {
            "name": "BOLD",
            "location": 32,
            "return": [
                "Color"
            ],
            "arguments": {
                "self": []
            }
        },
        "Color.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/docker.py": {
        "replace_docker_image_references": {
            "name": "replace_docker_image_references",
            "location": 16,
            "return": [],
            "arguments": {
                "target_series": [],
                "content": []
            }
        },
        "upgrade_docker_image_references_in_file": {
            "name": "upgrade_docker_image_references_in_file",
            "location": 42,
            "return": [],
            "arguments": {
                "target_series": [],
                "filepath": []
            }
        },
        "upgrade_docker_image_references": {
            "name": "upgrade_docker_image_references",
            "location": 54,
            "return": [],
            "arguments": {
                "target_series": [],
                "root": []
            }
        },
        "replace_docker_image_references.replace_docker_image_reference": {
            "name": "replace_docker_image_reference",
            "location": 23,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/package_repo.py": {
        "Version.from_str": {
            "name": "from_str",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "bytes",
                    "float"
                ],
                "version": [
                    "str"
                ]
            }
        },
        "SpecifierSet.from_str": {
            "name": "from_str",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "list[]",
                    "int"
                ],
                "requirements": [
                    "str"
                ]
            }
        },
        "SpecifierSet.satisfied_by": {
            "name": "satisfied_by",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str",
                    "int",
                    "typing.Callable[str, typing.Any]",
                    "typing.Iterable[]",
                    "None"
                ]
            }
        },
        "PackageRepo.new": {
            "name": "new",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "PackageRepo.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageRepo.get_available_versions": {
            "name": "get_available_versions",
            "location": 78,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "distribution_name": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, typing.Any]",
                    "int"
                ]
            }
        },
        "PackageRepo.get_latest_version": {
            "name": "get_latest_version",
            "location": 106,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "distribution_name": [
                    "str",
                    "None"
                ],
                "prefix": [
                    "str"
                ]
            }
        },
        "PackageRepo.ensure": {
            "name": "ensure",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "requirements_file": [
                    "str"
                ],
                "requirement": [
                    "str"
                ],
                "required": [
                    "bool"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/python_version.py": {
        "_make_version_tuple": {
            "name": "_make_version_tuple",
            "location": 18,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "version_str": [
                    "str"
                ]
            }
        },
        "guess_python_version": {
            "name": "guess_python_version",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "root": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/refactor.py": {
        "refactor_python_files": {
            "name": "refactor_python_files",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "root": [
                    "str",
                    "list[pathlib.Path]"
                ],
                "fix_package": [
                    "str"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/requirements.py": {
        "RequirementsNotFoundError.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "RequirementsFile.from_root": {
            "name": "from_root",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": [],
                "root": []
            }
        },
        "RequirementsFile.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "lines": []
            }
        },
        "RequirementsFile.__getitem__": {
            "name": "__getitem__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "distribution_name": []
            }
        },
        "RequirementsFile.__setitem__": {
            "name": "__setitem__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "distribution_name": [],
                "version": []
            }
        },
        "RequirementsFile.__delitem__": {
            "name": "__delitem__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "distribution_name": []
            }
        },
        "RequirementsFile.__contains__": {
            "name": "__contains__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "distribution_name": []
            }
        },
        "RequirementsFile.write": {
            "name": "write",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/__init__.py": {
        "no_op_upgrade": {
            "name": "no_op_upgrade",
            "location": 25,
            "return": [
                "int"
            ],
            "arguments": {
                "root": [],
                "python_version": [],
                "requirements_file": [],
                "package_repo": []
            }
        },
        "is_git_repo_and_clean": {
            "name": "is_git_repo_and_clean",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "root": []
            }
        },
        "get_target_series": {
            "name": "get_target_series",
            "location": 107,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "current_version": []
            }
        },
        "_main": {
            "name": "_main",
            "location": 114,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "LogFormatter.format": {
            "name": "format",
            "location": 96,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/__init__.py": {
        "split_package_and_name": {
            "name": "split_package_and_name",
            "location": 30,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "dotted_name": [
                    "str"
                ]
            }
        },
        "traverse_dotted_name": {
            "name": "traverse_dotted_name",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "dotted_name": []
            }
        },
        "DottedName": {
            "name": "DottedName",
            "location": 47,
            "return": [
                "Node"
            ],
            "arguments": {
                "full_name": [
                    "str"
                ],
                "prefix": [
                    "str",
                    "None"
                ]
            }
        },
        "ImportAsName": {
            "name": "ImportAsName",
            "location": 59,
            "return": [
                "Name",
                "Node"
            ],
            "arguments": {
                "name": [
                    "str",
                    "None",
                    "dict[, ]",
                    "int"
                ],
                "nick": [
                    "str",
                    "None"
                ],
                "prefix": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "FromImport": {
            "name": "FromImport",
            "location": 69,
            "return": [
                "Node"
            ],
            "arguments": {
                "package": [
                    "str"
                ],
                "imports": [
                    "list[tuple[typing.Union[str,typing.Any]]]",
                    "str"
                ],
                "prefix": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "AttrChain": {
            "name": "AttrChain",
            "location": 90,
            "return": [
                "list[typing.Union[Name,Node]]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "BaseplateBaseFix.warn": {
            "name": "warn",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "message": [
                    "str",
                    "int",
                    "dict[, ]",
                    "Exception"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/common/fix_import_from.py": {
        "BaseFixImportFrom.renames": {
            "name": "renames",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFixImportFrom.transform": {
            "name": "transform",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "capture": [
                    "str"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/common/fix_import_name.py": {
        "BaseFixImportName.renames": {
            "name": "renames",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFixImportName.transform": {
            "name": "transform",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/common/fix_module_usage.py": {
        "BaseFixModuleUsage.renames": {
            "name": "renames",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFixModuleUsage.transform": {
            "name": "transform",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/common/fix_strings.py": {
        "BaseFixStrings.renames": {
            "name": "renames",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFixStrings.transform": {
            "name": "transform",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/common/__init__.py": {
        "NameRemovedError.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "typing.Mapping"
                ]
            }
        },
        "RenamedSymbols.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "renames": [
                    "int",
                    "float"
                ]
            }
        },
        "RenamedSymbols._update_seen": {
            "name": "_update_seen",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_name": [
                    "str"
                ]
            }
        },
        "RenamedSymbols.get_new_name": {
            "name": "get_new_name",
            "location": 35,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "RenamedSymbols.replace_module_references": {
            "name": "replace_module_references",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "corpus": [
                    "str"
                ]
            }
        },
        "RenamedSymbols.replace_module_references.replace_name": {
            "name": "replace_name",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "m": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v0_29/fix_thrift_entrypoint.py": {
        "FixThriftEntrypoint.transform": {
            "name": "transform",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "capture": [
                    "str"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v0_29/thrift.py": {
        "read_tokens": {
            "name": "read_tokens",
            "location": 143,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "find_invalid_thrift_idl": {
            "name": "find_invalid_thrift_idl",
            "location": 163,
            "return": [],
            "arguments": {
                "root": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v0_29/__init__.py": {
        "add_max_concurrency": {
            "name": "add_max_concurrency",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "root": []
            }
        },
        "fix_thrift_compiler_references": {
            "name": "fix_thrift_compiler_references",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "root": []
            }
        },
        "update": {
            "name": "update",
            "location": 72,
            "return": [
                "int"
            ],
            "arguments": {
                "root": [
                    "str",
                    "bool",
                    "None"
                ],
                "python_version": [
                    "bool",
                    "str",
                    "None",
                    "typing.IO"
                ],
                "requirements_file": [
                    "str",
                    "int",
                    "typing.Sequence[str]",
                    "None",
                    "float"
                ],
                "package_repo": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_cass_execution_profiles.py": {
        "FixCassExecutionProfiles.transform": {
            "name": "transform",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_import_from.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_import_name.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_make_context_object.py": {
        "FixMakeContextObject.transform": {
            "name": "transform",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_module_usage.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/fix_strings.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_0/__init__.py": {
        "update": {
            "name": "update",
            "location": 79,
            "return": [
                "int"
            ],
            "arguments": {
                "root": [],
                "python_version": [],
                "requirements_file": [
                    "str",
                    "int",
                    "list[]",
                    "typing.TextIO",
                    "typing.Deque"
                ],
                "package_repo": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_3/fix_deprecated_wireup.py": {
        "FixDeprecatedWireup.transform": {
            "name": "transform",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": [
                    "str"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v1_3/__init__.py": {
        "update": {
            "name": "update",
            "location": 10,
            "return": [
                "int"
            ],
            "arguments": {
                "root": [
                    "str",
                    "typing.Sequence[str]",
                    "None"
                ],
                "python_version": [
                    "bool",
                    "str",
                    "None",
                    "typing.IO"
                ],
                "requirements_file": [
                    "bool",
                    "str",
                    "None",
                    "typing.IO"
                ],
                "package_repo": [
                    "bool",
                    "str",
                    "None",
                    "typing.IO"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_context_attributes.py": {
        "FixContextAttributes.transform": {
            "name": "transform",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[int]"
                ],
                "capture": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_deprecated_wireup.py": {
        "FixDeprecatedWireup.transform": {
            "name": "transform",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": [
                    "str"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_import_from.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_import_name.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_module_usage.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_observer_wireup.py": {
        "FixObserverWireup.transform": {
            "name": "transform",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": [
                    "bytes"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_sentry.py": {
        "FixSentry.transform": {
            "name": "transform",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ],
                "capture": []
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_strings.py": {},
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_thrift_pool.py": {
        "FixThriftPool.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FixThriftPool.transform": {
            "name": "transform",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[int]"
                ],
                "capture": [
                    "list[int]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/fix_trust_trace_headers.py": {
        "pairwise": {
            "name": "pairwise",
            "location": 23,
            "return": [],
            "arguments": {
                "iterable": [
                    "typing.Iterable[typing.Any]",
                    "typing.Iterable[T]",
                    "int",
                    "BaseException",
                    "None"
                ]
            }
        },
        "FixTrustTraceHeaders.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FixTrustTraceHeaders.transform": {
            "name": "transform",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ],
                "capture": []
            }
        },
        "FixTrustTraceHeaders.finish_tree": {
            "name": "finish_tree",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tree": [
                    "typing.Iterable[bytes]",
                    "int"
                ],
                "filename": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/baseplate_py_upgrader/fixes/v2_0/__init__.py": {
        "update_config_file": {
            "name": "update_config_file",
            "location": 49,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "check_for_old_docker_builder": {
            "name": "check_for_old_docker_builder",
            "location": 159,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "update": {
            "name": "update",
            "location": 173,
            "return": [],
            "arguments": {
                "root": [],
                "python_version": [],
                "requirements_file": [],
                "package_repo": []
            }
        },
        "DefaultHandlingDefaultDict.__setitem__": {
            "name": "__setitem__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "baseplate.py-upgrader-master/tests/conftest.py": {
        "reformat": {
            "name": "reformat",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "print_node_tree": {
            "name": "print_node_tree",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "node": [],
                "indent": [
                    "int"
                ]
            }
        },
        "make_refactorer": {
            "name": "make_refactorer",
            "location": 54,
            "return": [
                "TestRefactoringTool"
            ],
            "arguments": {}
        },
        "TestRefactoringTool.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fixer": [
                    "str",
                    "bool"
                ]
            }
        },
        "TestRefactoringTool.refactor": {
            "name": "refactor",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "before": [
                    "str"
                ]
            }
        },
        "TestRefactoringTool.refactor_and_check": {
            "name": "refactor_and_check",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "before": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "expected": [
                    "str",
                    "bytes",
                    "typing.IO",
                    "int",
                    "dict[, ]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/tests/test_0_29.py": {
        "test_thrift_entrypoint": {
            "name": "test_thrift_entrypoint",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "str",
                    "float",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "before": [
                    "bool"
                ],
                "expected": [
                    "bool"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/tests/test_1_0.py": {
        "test_fix_import_name": {
            "name": "test_fix_import_name",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "dict[str, typing.Any]",
                    "None",
                    "str"
                ],
                "before": [
                    "int",
                    "str"
                ],
                "expected": [
                    "int",
                    "str"
                ]
            }
        },
        "test_fix_import_from": {
            "name": "test_fix_import_from",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "before": [
                    "int"
                ],
                "expected": [
                    "int"
                ]
            }
        },
        "test_fix_module_usage": {
            "name": "test_fix_module_usage",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "str",
                    "float",
                    "dict[str, typing.Any]",
                    "None",
                    "int"
                ],
                "before": [
                    "bool"
                ],
                "expected": [
                    "bool"
                ]
            }
        },
        "test_fix_strings": {
            "name": "test_fix_strings",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "float",
                    "int"
                ],
                "before": [
                    "int"
                ],
                "expected": [
                    "int"
                ]
            }
        },
        "test_fix_make_context_object": {
            "name": "test_fix_make_context_object",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str",
                    "float"
                ],
                "make_refactorer": [
                    "str",
                    "float"
                ],
                "input": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_fix_cass_execution_profiles": {
            "name": "test_fix_cass_execution_profiles",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "make_refactorer": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "input": [
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/tests/test_1_3.py": {
        "test_fix_deprecated_wireup": {
            "name": "test_fix_deprecated_wireup",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "bool",
                    "str",
                    "set[str]",
                    "None"
                ],
                "make_refactorer": [
                    "bool",
                    "list[int]",
                    "str",
                    "float"
                ],
                "input": [
                    "int"
                ],
                "expected_logs": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/tests/test_2_0.py": {
        "test_fix_context_attributes": {
            "name": "test_fix_context_attributes",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "str",
                    "float",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "before": [
                    "bool"
                ],
                "expected": [
                    "bool"
                ]
            }
        },
        "test_fix_deprecated_wireup": {
            "name": "test_fix_deprecated_wireup",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "bool",
                    "str",
                    "set[str]",
                    "None"
                ],
                "make_refactorer": [
                    "bool",
                    "list[int]",
                    "str",
                    "float"
                ],
                "input": [
                    "int"
                ],
                "expected_logs": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_fix_observer_wireup": {
            "name": "test_fix_observer_wireup",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "bool",
                    "str",
                    "set[str]",
                    "None"
                ],
                "make_refactorer": [
                    "bool",
                    "list[int]",
                    "str",
                    "float"
                ],
                "input": [
                    "int"
                ],
                "expected_logs": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_fix_trust_trace_headers": {
            "name": "test_fix_trust_trace_headers",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "before": [
                    "int",
                    "str",
                    "None"
                ],
                "expected": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "test_fix_thrift_pool": {
            "name": "test_fix_thrift_pool",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "make_refactorer": [
                    "str",
                    "float",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "before": [
                    "bool"
                ],
                "expected": [
                    "bool"
                ]
            }
        },
        "test_fix_sentry": {
            "name": "test_fix_sentry",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "bool",
                    "None",
                    "str",
                    "set[str]"
                ],
                "make_refactorer": [
                    "str",
                    "float",
                    "int"
                ],
                "before": [
                    "str",
                    "dict[, ]",
                    "typing.Sequence[str]"
                ],
                "expected": [
                    "str",
                    "dict[, ]",
                    "typing.Sequence[str]"
                ],
                "expected_logs": [
                    "list[list[typing.Any]]",
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "baseplate.py-upgrader-master/tests/test_docker.py": {
        "test_replace_docker_image_references": {
            "name": "test_replace_docker_image_references",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "dict[str, typing.Sequence[typing.Any]]",
                    "str"
                ],
                "input": [
                    "dict[str, typing.Sequence[typing.Any]]",
                    "str"
                ],
                "expected": [
                    "str",
                    "list[str]"
                ]
            }
        }
    }
}
{
    "batch-file-processor-master/backup_increment.py": {
        "do_backup": {
            "name": "do_backup",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "input_file": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/batch_log_sender.py": {
        "do": {
            "name": "do",
            "location": 13,
            "return": [],
            "arguments": {
                "settings": [],
                "reporting": [],
                "emails_table": [],
                "sent_emails_removal_queue": [],
                "time": [],
                "args": [],
                "root": [],
                "batch_number": [],
                "emails_count": [],
                "total_emails": [],
                "simple_output": [],
                "run_summary_string": []
            }
        }
    },
    "batch-file-processor-master/clear_old_files.py": {
        "do_clear": {
            "name": "do_clear",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_path": [
                    "str"
                ],
                "maximum_files": [
                    "bool"
                ]
            }
        }
    },
    "batch-file-processor-master/convert_to_csv.py": {
        "edi_convert": {
            "name": "edi_convert",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "output_filename": [
                    "str"
                ],
                "each_upc_lut": [
                    "dict[str, typing.Any]",
                    "bool",
                    "bytes",
                    "dict[str, dict[str, typing.Any]]",
                    "str"
                ],
                "parameters_dict": [
                    "str"
                ]
            }
        },
        "edi_convert.convert_to_price": {
            "name": "convert_to_price",
            "location": 22,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "batch-file-processor-master/convert_to_jolley_edi.py": {
        "edi_convert": {
            "name": "edi_convert",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "output_filename": [
                    "str"
                ],
                "settings_dict": [
                    "str",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "edi_convert.convert_to_price": {
            "name": "convert_to_price",
            "location": 15,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "edi_convert.prettify_dates": {
            "name": "prettify_dates",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "date_string": [],
                "offset": [],
                "adj_offset": [
                    "int"
                ]
            }
        },
        "edi_convert.get_uom": {
            "name": "get_uom",
            "location": 209,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "item_number": [],
                "packsize": []
            }
        },
        "edi_convert.convert_to_item_total": {
            "name": "convert_to_item_total",
            "location": 228,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "unit_cost": [],
                "qty": []
            }
        },
        "edi_convert.generate_full_upc": {
            "name": "generate_full_upc",
            "location": 245,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "input_upc": []
            }
        }
    },
    "batch-file-processor-master/convert_to_scannerware.py": {
        "edi_convert": {
            "name": "edi_convert",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "output_filename": [
                    "str"
                ],
                "parameters_dict": [
                    "list[dict[, ]]"
                ]
            }
        }
    },
    "batch-file-processor-master/convert_to_scansheet_type_a.py": {
        "edi_convert": {
            "name": "edi_convert",
            "location": 15,
            "return": [
                "bool",
                "str",
                "typing.Callable[, ]",
                "tuple[typing.Union[str,str]]"
            ],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "output_filename": [
                    "bool",
                    "str",
                    "typing.Callable[, ]",
                    "tuple[typing.Union[str,str]]"
                ],
                "settings_dict": [
                    "str",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "edi_convert.adjust_column_width": {
            "name": "adjust_column_width",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "adjust_worksheet": []
            }
        },
        "edi_convert.generate_barcode": {
            "name": "generate_barcode",
            "location": 98,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "input_string": [],
                "tempdir": []
            }
        },
        "edi_convert.interpret_barcode_string": {
            "name": "interpret_barcode_string",
            "location": 138,
            "return": [],
            "arguments": {
                "upc_barcode_string": []
            }
        },
        "edi_convert.do_process_workbook": {
            "name": "do_process_workbook",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "batch-file-processor-master/convert_to_simplified_csv.py": {
        "edi_convert": {
            "name": "edi_convert",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "output_filename": [
                    "str"
                ]
            }
        },
        "edi_convert.convert_to_price": {
            "name": "convert_to_price",
            "location": 11,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "edi_convert.qty_to_int": {
            "name": "qty_to_int",
            "location": 25,
            "return": [
                "int"
            ],
            "arguments": {
                "qty": []
            }
        }
    },
    "batch-file-processor-master/copy_backend.py": {
        "do": {
            "name": "do",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "process_parameters": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/create_database.py": {
        "do": {
            "name": "do",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "database_version": [
                    "bool",
                    "dict[, ]",
                    "list[tuple[typing.Union[str,...]]]"
                ],
                "database_path": [
                    "str"
                ],
                "config_folder": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "running_platform": [
                    "bool",
                    "dict[, ]",
                    "list[tuple[typing.Union[str,...]]]"
                ]
            }
        }
    },
    "batch-file-processor-master/database_import.py": {
        "import_interface": {
            "name": "import_interface",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "master_window": [],
                "original_database_path": [
                    "bool",
                    "str",
                    "None"
                ],
                "running_platform": [
                    "bool",
                    "str",
                    "None"
                ],
                "backup_path": [
                    "bool",
                    "str",
                    "None"
                ],
                "current_db_version": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "import_interface.select_database": {
            "name": "select_database",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "import_interface.database_migrate_job_wrapper": {
            "name": "database_migrate_job_wrapper",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "import_interface.close_database_import_window": {
            "name": "close_database_import_window",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        }
    },
    "batch-file-processor-master/dialog.py": {
        "Dialog.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "foldersnameinput": [
                    "set[str]",
                    "int",
                    "typing.Mapping",
                    "None",
                    "typing.Type",
                    "str",
                    "list[typing.Any]"
                ],
                "title": [
                    "None",
                    "set[str]",
                    "int",
                    "typing.Mapping",
                    "typing.Type",
                    "str",
                    "list[typing.Any]"
                ]
            }
        },
        "Dialog.body": {
            "name": "body",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "int",
                    "typing.Callable[[], None]",
                    "str",
                    "typing.IO"
                ]
            }
        },
        "Dialog.buttonbox": {
            "name": "buttonbox",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dialog.ok": {
            "name": "ok",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "None",
                    "str"
                ]
            }
        },
        "Dialog.cancel": {
            "name": "cancel",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "None",
                    "str"
                ]
            }
        },
        "Dialog.validate": {
            "name": "validate",
            "location": 90,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dialog.apply": {
            "name": "apply",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "foldersnameapply": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        }
    },
    "batch-file-processor-master/dispatch.py": {
        "generate_match_lists": {
            "name": "generate_match_lists",
            "location": 27,
            "return": [
                "tuple[typing.Union[list[tuple[typing.Text]],list[typing.Text]]]"
            ],
            "arguments": {
                "folder_temp_processed_files_list": [
                    "list[]",
                    "set[]",
                    "str"
                ]
            }
        },
        "generate_file_hash": {
            "name": "generate_file_hash",
            "location": 41,
            "return": [
                "tuple[typing.Union[str,list[str],int,list[],dict[, ],list[tuple[typing.Union[typing.Any,typing.Any]]]]]"
            ],
            "arguments": {
                "source_file_struct": [
                    "str"
                ]
            }
        },
        "process": {
            "name": "process",
            "location": 87,
            "return": [],
            "arguments": {
                "database_connection": [
                    "bytes",
                    "str",
                    "None",
                    "float",
                    "bool"
                ],
                "folders_database": [],
                "run_log": [],
                "emails_table": [
                    "str",
                    "None",
                    "bool",
                    "dict[str, object]"
                ],
                "run_log_directory": [
                    "str",
                    "list[str]"
                ],
                "reporting": [
                    "tuple[str]"
                ],
                "processed_files": [],
                "root": [
                    "bool",
                    "tuple[str]"
                ],
                "args": [],
                "version": [],
                "errors_folder": [
                    "str"
                ],
                "edi_converter_scratch_folder": [
                    "tuple[str]"
                ],
                "settings": [
                    "tuple[str]"
                ],
                "simple_output": [
                    "None",
                    "bool",
                    "tuple[str]"
                ]
            }
        },
        "process.update_overlay": {
            "name": "update_overlay",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "overlay_text": [],
                "dispatch_folder_count": [],
                "folder_total": [],
                "dispatch_file_count": [],
                "file_total": [],
                "footer": []
            }
        },
        "process.empty_directory": {
            "name": "empty_directory",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "top": []
            }
        },
        "process.validate_file": {
            "name": "validate_file",
            "location": 175,
            "return": [],
            "arguments": {
                "input_file": [],
                "file_name": []
            }
        },
        "process.hash_thread_target": {
            "name": "hash_thread_target",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "process.hash_thread_target.search_dictionaries": {
            "name": "search_dictionaries",
            "location": 196,
            "return": [
                "list[]"
            ],
            "arguments": {
                "key": [],
                "value": [],
                "list_of_dictionaries": []
            }
        },
        "process.process_files": {
            "name": "process_files",
            "location": 333,
            "return": [],
            "arguments": {
                "file_index_number": []
            }
        }
    },
    "batch-file-processor-master/doingstuffoverlay.py": {
        "make_overlay": {
            "name": "make_overlay",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "parent": [
                    "dict[, ]"
                ],
                "overlay_text": [
                    "str"
                ],
                "header": [
                    "typing.Text"
                ],
                "footer": [
                    "typing.Text"
                ],
                "overlay_height": [
                    "int"
                ]
            }
        },
        "update_overlay": {
            "name": "update_overlay",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "parent": [],
                "overlay_text": [
                    "str",
                    "typing.Callable[..., T]",
                    "dict[, ]"
                ],
                "header": [
                    "typing.Text"
                ],
                "footer": [
                    "typing.Text"
                ],
                "overlay_height": [
                    "None",
                    "bool",
                    "list[typing.Any]",
                    "float",
                    "str"
                ]
            }
        },
        "destroy_overlay": {
            "name": "destroy_overlay",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DoingStuffOverlay.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "str",
                    "bool",
                    "list[str]",
                    "tuple[typing.Type]"
                ]
            }
        }
    },
    "batch-file-processor-master/edi_tweaks.py": {
        "edi_tweak": {
            "name": "edi_tweak",
            "location": 9,
            "return": [],
            "arguments": {
                "edi_process": [],
                "output_filename": [],
                "each_upc_dict": [],
                "parameters_dict": []
            }
        }
    },
    "batch-file-processor-master/email_backend.py": {
        "do": {
            "name": "do",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "process_parameters": [
                    "str"
                ],
                "settings": [
                    "str",
                    "bytes"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/folders_database_migrator.py": {
        "upgrade_database": {
            "name": "upgrade_database",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "database_connection": [
                    "str"
                ],
                "config_folder": [
                    "str",
                    "bytes",
                    "bool"
                ],
                "running_platform": [
                    "dict[str, typing.Any]",
                    "int",
                    "str",
                    "float",
                    "dict[, ]"
                ]
            }
        }
    },
    "batch-file-processor-master/ftp_backend.py": {
        "do": {
            "name": "do",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "process_parameters": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/interface.py": {
        "connect_to_databases": {
            "name": "connect_to_databases",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "open_tables": {
            "name": "open_tables",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "check_logs_directory": {
            "name": "check_logs_directory",
            "location": 169,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "add_folder_entry": {
            "name": "add_folder_entry",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "proposed_folder": [
                    "str"
                ]
            }
        },
        "check_folder_exists": {
            "name": "check_folder_exists",
            "location": 239,
            "return": [
                "dict[typing.Text, bool]",
                "dict[typing.Text, typing.Union[bool,None]]"
            ],
            "arguments": {
                "check_folder": [
                    "str",
                    "bool"
                ]
            }
        },
        "select_folder": {
            "name": "select_folder",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "batch_add_folders": {
            "name": "batch_add_folders",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "edit_folder_selector": {
            "name": "edit_folder_selector",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_to_be_edited": [
                    "dict[str, typing.Any]",
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "send_single": {
            "name": "send_single",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "disable_folder": {
            "name": "disable_folder",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "set_folders_filter": {
            "name": "set_folders_filter",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "filter_field_contents": [
                    "str",
                    "bool",
                    "dict[str, dict[, ]]"
                ]
            }
        },
        "make_users_list": {
            "name": "make_users_list",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "update_reporting": {
            "name": "update_reporting",
            "location": 1462,
            "return": [
                "None"
            ],
            "arguments": {
                "changes": [
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]",
                    "dict[str, str]",
                    "bytes",
                    "str"
                ]
            }
        },
        "update_folder_alias": {
            "name": "update_folder_alias",
            "location": 1467,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_edit": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "refresh_users_list": {
            "name": "refresh_users_list",
            "location": 1472,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "delete_folder_entry": {
            "name": "delete_folder_entry",
            "location": 1479,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_to_be_removed": [
                    "str"
                ]
            }
        },
        "delete_folder_entry_wrapper": {
            "name": "delete_folder_entry_wrapper",
            "location": 1486,
            "return": [
                "None"
            ],
            "arguments": {
                "folder_to_be_removed": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "alias": [
                    "str"
                ]
            }
        },
        "graphical_process_directories": {
            "name": "graphical_process_directories",
            "location": 1494,
            "return": [
                "None"
            ],
            "arguments": {
                "folders_table_process": [
                    "str"
                ]
            }
        },
        "set_defaults_popup": {
            "name": "set_defaults_popup",
            "location": 1512,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "process_directories": {
            "name": "process_directories",
            "location": 1517,
            "return": [
                "None"
            ],
            "arguments": {
                "folders_table_process": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]"
                ]
            }
        },
        "automatic_process_directories": {
            "name": "automatic_process_directories",
            "location": 1689,
            "return": [
                "None"
            ],
            "arguments": {
                "automatic_process_folders_table": [
                    "str",
                    "tuple[int]"
                ]
            }
        },
        "remove_inactive_folders": {
            "name": "remove_inactive_folders",
            "location": 1707,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "mark_active_as_processed": {
            "name": "mark_active_as_processed",
            "location": 1726,
            "return": [
                "None"
            ],
            "arguments": {
                "master": [
                    "list[str]"
                ],
                "selected_folder": [
                    "None"
                ]
            }
        },
        "set_all_inactive": {
            "name": "set_all_inactive",
            "location": 1788,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_all_active": {
            "name": "set_all_active",
            "location": 1799,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "clear_resend_flags": {
            "name": "clear_resend_flags",
            "location": 1810,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "clear_processed_files_log": {
            "name": "clear_processed_files_log",
            "location": 1820,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "destroy_maintenance_popup": {
            "name": "destroy_maintenance_popup",
            "location": 1828,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None",
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "database_import_wrapper": {
            "name": "database_import_wrapper",
            "location": 1832,
            "return": [
                "None"
            ],
            "arguments": {
                "backup_path": [
                    "str"
                ]
            }
        },
        "maintenance_functions_popup": {
            "name": "maintenance_functions_popup",
            "location": 1856,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "export_processed_report": {
            "name": "export_processed_report",
            "location": 1905,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "output_folder": [
                    "str"
                ]
            }
        },
        "processed_files_popup": {
            "name": "processed_files_popup",
            "location": 1928,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_main_button_states": {
            "name": "set_main_button_states",
            "location": 2026,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "add_folder_entry.folder_alias_checker": {
            "name": "folder_alias_checker",
            "location": 184,
            "return": [
                "bool"
            ],
            "arguments": {
                "check": []
            }
        },
        "make_users_list.search_field_callback": {
            "name": "search_field_callback",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "make_users_list.clear_search_field": {
            "name": "clear_search_field",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "EditSettingsDialog.body": {
            "name": "body",
            "location": 513,
            "return": [
                "bool",
                "dict[, ]",
                "typing.DefaultDict",
                "list[int]",
                "list[float]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "int",
                    "typing.Callable[[], None]",
                    "str",
                    "typing.IO"
                ]
            }
        },
        "EditSettingsDialog.validate": {
            "name": "validate",
            "location": 684,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditSettingsDialog.ok": {
            "name": "ok",
            "location": 766,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "None",
                    "str"
                ]
            }
        },
        "EditSettingsDialog.apply": {
            "name": "apply",
            "location": 778,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folders_name_apply": []
            }
        },
        "EditDialog.body": {
            "name": "body",
            "location": 817,
            "return": [
                "int",
                "float",
                "dict[, ]",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "int",
                    "typing.Callable[[], None]",
                    "str",
                    "typing.IO"
                ]
            }
        },
        "EditDialog.ok": {
            "name": "ok",
            "location": 1259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "None",
                    "str"
                ]
            }
        },
        "EditDialog.apply": {
            "name": "apply",
            "location": 1272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "apply_to_folder": []
            }
        },
        "EditDialog.validate": {
            "name": "validate",
            "location": 1319,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "export_processed_report.avoid_overwrite": {
            "name": "avoid_overwrite",
            "location": 1906,
            "return": [],
            "arguments": {
                "input_file_name": []
            }
        },
        "processed_files_popup.close_processed_files_popup": {
            "name": "close_processed_files_popup",
            "location": 1929,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "processed_files_popup.folder_button_pressed": {
            "name": "folder_button_pressed",
            "location": 1933,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "processed_files_popup.set_output_folder": {
            "name": "set_output_folder",
            "location": 1949,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "make_users_list.copyf": {
            "name": "copyf",
            "location": 411,
            "return": [
                "list[]"
            ],
            "arguments": {
                "dictlist": [],
                "key": [],
                "valuelist": []
            }
        },
        "EditSettingsDialog.body.reporting_options_fields_state_set": {
            "name": "reporting_options_fields_state_set",
            "location": 546,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditSettingsDialog.body.email_options_fields_state_set": {
            "name": "email_options_fields_state_set",
            "location": 554,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditSettingsDialog.body.interval_backup_options_set": {
            "name": "interval_backup_options_set",
            "location": 565,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditSettingsDialog.body.select_log_directory": {
            "name": "select_log_directory",
            "location": 624,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.make_convert_to_options": {
            "name": "make_convert_to_options",
            "location": 881,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "EditDialog.body.show_folder_path": {
            "name": "show_folder_path",
            "location": 911,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.select_copy_to_directory": {
            "name": "select_copy_to_directory",
            "location": 914,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.set_send_options_fields_state": {
            "name": "set_send_options_fields_state",
            "location": 928,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.set_header_state": {
            "name": "set_header_state",
            "location": 979,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.set_dialog_variables": {
            "name": "set_dialog_variables",
            "location": 1088,
            "return": [
                "None"
            ],
            "arguments": {
                "config_dict": [],
                "copied": []
            }
        },
        "EditDialog.body.reset_ediconvert_options": {
            "name": "reset_ediconvert_options",
            "location": 1151,
            "return": [
                "None"
            ],
            "arguments": {
                "argument": []
            }
        },
        "EditDialog.body.make_ediconvert_options": {
            "name": "make_ediconvert_options",
            "location": 1158,
            "return": [
                "None"
            ],
            "arguments": {
                "argument": []
            }
        },
        "EditDialog.body.config_from_others": {
            "name": "config_from_others",
            "location": 1198,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "EditDialog.body.config_from_others.recurse_set_default": {
            "name": "recurse_set_default",
            "location": 1199,
            "return": [
                "None"
            ],
            "arguments": {
                "parent": []
            }
        }
    },
    "batch-file-processor-master/line_from_mtc_edi_to_dict.py": {
        "capture_records": {
            "name": "capture_records",
            "location": 1,
            "return": [
                "dict[str, typing.Any]",
                "dict[, ]",
                "int",
                "list[tuple[typing.Union[typing.Any,typing.Any]]]",
                "dict[str, tuple[typing.Union[str,str]]]",
                "typing.Mapping",
                "None"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/mover.py": {
        "DbMigrationThing.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "original_folder_path": [
                    "str",
                    "list[str]",
                    "None"
                ],
                "new_folder_path": [
                    "str",
                    "None"
                ]
            }
        },
        "DbMigrationThing.do_migrate": {
            "name": "do_migrate",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "progress_bar": [],
                "master": [],
                "original_database_path": [
                    "str"
                ]
            }
        },
        "DbMigrationThing.do_migrate.database_preimport_operations": {
            "name": "database_preimport_operations",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DbMigrationThing.do_migrate.test_line_for_match": {
            "name": "test_line_for_match",
            "location": 48,
            "return": [
                "tuple[typing.Optional[bool]]"
            ],
            "arguments": {
                "line": []
            }
        }
    },
    "batch-file-processor-master/mtc_edi_validator.py": {
        "check": {
            "name": "check",
            "location": 7,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "input_file": [
                    "str"
                ]
            }
        },
        "report_edi_issues": {
            "name": "report_edi_issues",
            "location": 55,
            "return": [
                "tuple[typing.Union[StringIO,bool]]"
            ],
            "arguments": {
                "input_file": [
                    "str"
                ]
            }
        },
        "report_edi_issues._insert_description_and_number": {
            "name": "_insert_description_and_number",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "issue_line": []
            }
        }
    },
    "batch-file-processor-master/print_run_log.py": {
        "do": {
            "name": "do",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "batch-file-processor-master/query_runner.py": {
        "query_runner.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "password": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "as400_hostname": [
                    "str",
                    "bool"
                ],
                "driver": [
                    "str",
                    "bool"
                ]
            }
        },
        "query_runner.run_arbitrary_query": {
            "name": "run_arbitrary_query",
            "location": 13,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "query_string": [
                    "str"
                ]
            }
        }
    },
    "batch-file-processor-master/rclick_menu.py": {
        "RightClickMenu.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "str",
                    "bool",
                    "list[str]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "RightClickMenu.__call__": {
            "name": "__call__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "float",
                    "dict[, ]"
                ]
            }
        },
        "RightClickMenu.build_menu": {
            "name": "build_menu",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "RightClickMenu.select_all": {
            "name": "select_all",
            "location": 74,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "RightClickMenu.paste_string_state": {
            "name": "paste_string_state",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "batch-file-processor-master/record_error.py": {
        "do": {
            "name": "do",
            "location": 4,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "run_log": [],
                "errors_log": [],
                "error_message": [
                    "str",
                    "int"
                ],
                "filename": [
                    "str"
                ],
                "error_source": [
                    "str"
                ],
                "threaded": [
                    "bool"
                ]
            }
        }
    },
    "batch-file-processor-master/resend_interface.py": {
        "do": {
            "name": "do",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "database_connection": [
                    "str",
                    "list[typing.Sequence[int]]"
                ],
                "master_window": []
            }
        },
        "do.set_resend_flag": {
            "name": "set_resend_flag",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "identifier": [],
                "resend_flag": []
            }
        },
        "do.make_file_checkbutton_list": {
            "name": "make_file_checkbutton_list",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "do.folder_button_pressed": {
            "name": "folder_button_pressed",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "button": []
            }
        },
        "do.close_window": {
            "name": "close_window",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "None"
                ]
            }
        },
        "do.folder_button_pressed.round_to_next5": {
            "name": "round_to_next5",
            "location": 59,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "do.CheckButtons.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [],
                "file_name": [],
                "resend_flag": [],
                "identifier": [],
                "sent_date_time": [],
                "checkbutton_file_name_length": []
            }
        },
        "do.CheckButtons.cb": {
            "name": "cb",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "batch-file-processor-master/scrollbuttons.py": {
        "VerticalScrolledFrame.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None",
                    "bool",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "VerticalScrolledFrame.__init__._configure_interior": {
            "name": "_configure_interior",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_canvas": {
            "name": "_configure_canvas",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel": {
            "name": "_configure_scrollwheel",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel.onMouseWheel": {
            "name": "onMouseWheel",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel.build_function_onMouseWheel": {
            "name": "build_function_onMouseWheel",
            "location": 106,
            "return": [],
            "arguments": {
                "widget": [],
                "orient": [],
                "factor": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel.mouseWheel_bind": {
            "name": "mouseWheel_bind",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "widget": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel.mouseWheel_unbind": {
            "name": "mouseWheel_unbind",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerticalScrolledFrame.__init__._configure_scrollwheel.build_function_onMouseWheel.onMouseWheel": {
            "name": "onMouseWheel",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        }
    },
    "batch-file-processor-master/split_edi.py": {
        "do_split_edi": {
            "name": "do_split_edi",
            "location": 5,
            "return": [],
            "arguments": {
                "edi_process": [
                    "str"
                ],
                "work_directory": [
                    "str",
                    "bool"
                ]
            }
        },
        "do_split_edi.col_to_excel": {
            "name": "col_to_excel",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "col": []
            }
        }
    },
    "batch-file-processor-master/upc_e_to_upc_a.py": {
        "calc_check_digit": {
            "name": "calc_check_digit",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "str",
                    "list[float]",
                    "bool",
                    "typing.Any",
                    "float"
                ]
            }
        },
        "convert_UPCE_to_UPCA": {
            "name": "convert_UPCE_to_UPCA",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "upce_value": []
            }
        }
    }
}
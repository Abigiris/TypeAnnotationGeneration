{
    "batch_crop-master/setup.py": {},
    "batch_crop-master/batch_crop/batch_crop.py": {
        "display_block": {
            "name": "display_block",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "crop_file": {
            "name": "crop_file",
            "location": 527,
            "return": [
                "None"
            ],
            "arguments": {
                "box_ratio": [
                    "str",
                    "int"
                ],
                "in_path": [
                    "str"
                ],
                "out_path": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "crop_image": {
            "name": "crop_image",
            "location": 559,
            "return": [],
            "arguments": {
                "box_ratio": [
                    "float",
                    "int"
                ],
                "image": [
                    "int"
                ]
            }
        },
        "scale_image": {
            "name": "scale_image",
            "location": 577,
            "return": [],
            "arguments": {
                "scale_factor": [
                    "int",
                    "float",
                    "tuple[typing.Union[int,int]]"
                ],
                "image_raw": []
            }
        },
        "get_scale_factor": {
            "name": "get_scale_factor",
            "location": 599,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "max_dimen": [
                    "float",
                    "int",
                    "list[int]"
                ],
                "image_raw": [
                    "str",
                    "typing.IO",
                    "float",
                    "int",
                    "typing.Collection"
                ]
            }
        },
        "coor_to_box": {
            "name": "coor_to_box",
            "location": 614,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "coors": [
                    "tuple[typing.Union[float,float,float,float]]",
                    "int",
                    "list[]"
                ]
            }
        },
        "coors_to_ratios": {
            "name": "coors_to_ratios",
            "location": 649,
            "return": [
                "tuple[typing.Union[int,list[int],str,AttributeError,typing.Type,list[],list[list[typing.Any]],float,bytes]]"
            ],
            "arguments": {
                "image_size": [
                    "tuple[typing.Union[float,float]]",
                    "float",
                    "typing.Mapping"
                ],
                "coors": [
                    "tuple[typing.Union[float,float,float,float]]",
                    "bool"
                ]
            }
        },
        "ratios_to_coors": {
            "name": "ratios_to_coors",
            "location": 674,
            "return": [
                "tuple[typing.Union[int,list[int],str,AttributeError,typing.Type,list[],list[list[typing.Any]],float,bytes]]"
            ],
            "arguments": {
                "image_size": [
                    "tuple[typing.Union[float,float]]",
                    "float",
                    "typing.Mapping"
                ],
                "ratios": [
                    "tuple[typing.Union[float,float,float,float]]",
                    "bool"
                ]
            }
        },
        "gen_ratios_config": {
            "name": "gen_ratios_config",
            "location": 695,
            "return": [],
            "arguments": {
                "box_ratio": [
                    "tuple[typing.Union[float,float,float,float]]",
                    "str",
                    "int"
                ]
            }
        },
        "save_ratios_to_file": {
            "name": "save_ratios_to_file",
            "location": 728,
            "return": [
                "None"
            ],
            "arguments": {
                "box_ratio": [
                    "tuple[typing.Union[float,float,float,float]]",
                    "str",
                    "int",
                    "None",
                    "typing.Callable[str, None]"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "get_ratios_from_file": {
            "name": "get_ratios_from_file",
            "location": 753,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_ratios_from_config": {
            "name": "get_ratios_from_config",
            "location": 772,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "config": []
            }
        },
        "open_image": {
            "name": "open_image",
            "location": 793,
            "return": [
                "int",
                "tuple[]",
                "list[str]",
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "open_raw_image": {
            "name": "open_raw_image",
            "location": 817,
            "return": [],
            "arguments": {
                "path": [
                    "str",
                    "bool"
                ]
            }
        },
        "display_block.close": {
            "name": "close",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BatchCropper.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "window": [
                    "int",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BatchCropper.callback_load_image": {
            "name": "callback_load_image",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BatchCropper.display_image": {
            "name": "display_image",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "image": [
                    "int"
                ]
            }
        },
        "BatchCropper.get_coors_ratios": {
            "name": "get_coors_ratios",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BatchCropper.set_coors_ratios": {
            "name": "set_coors_ratios",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "box_ratio": [
                    "int",
                    "float"
                ]
            }
        },
        "BatchCropper.callback_save_coors": {
            "name": "callback_save_coors",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BatchCropper.callback_load_coors": {
            "name": "callback_load_coors",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BatchCropper.callback_mouse_down": {
            "name": "callback_mouse_down",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "typing.Callable[str, bool]",
                    "typing.Mapping",
                    "int",
                    "set[]",
                    "str"
                ]
            }
        },
        "BatchCropper.replace_rect": {
            "name": "replace_rect",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ]
            }
        },
        "BatchCropper.callback_mouse_move": {
            "name": "callback_mouse_move",
            "location": 378,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "BatchCropper.callback_quit": {
            "name": "callback_quit",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BatchCropper.callback_about": {
            "name": "callback_about",
            "location": 415,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BatchCropper.callback_license": {
            "name": "callback_license",
            "location": 430,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BatchCropper.resize_rect": {
            "name": "resize_rect",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x1": [],
                "y1": [],
                "x2": [],
                "y2": []
            }
        },
        "BatchCropper.callback_mouse_up": {
            "name": "callback_mouse_up",
            "location": 461,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "int"
                ]
            }
        },
        "BatchCropper.callback_crop": {
            "name": "callback_crop",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BatchCropper.crop_all_files": {
            "name": "crop_all_files",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "batch_crop-master/batch_crop/__init__.py": {},
    "batch_crop-master/docs/conf.py": {},
    "batch_crop-master/tests/src/test_batch_crop.py": {
        "test_coor_to_box": {
            "name": "test_coor_to_box",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "x1": [
                    "int",
                    "float",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "y1": [
                    "int",
                    "float",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "x2": [
                    "int",
                    "float",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "y2": [
                    "int",
                    "float",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "test_coors_to_ratios": {
            "name": "test_coors_to_ratios",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "width": [
                    "int",
                    "float"
                ],
                "height": [
                    "int",
                    "list[int]",
                    "typing.Sequence[list[int]]"
                ],
                "x1": [
                    "int",
                    "list[str]"
                ],
                "y1": [
                    "int",
                    "float",
                    "None",
                    "typing.Iterable[int]"
                ],
                "x2": [
                    "int",
                    "list[str]"
                ],
                "y2": [
                    "int",
                    "float",
                    "None",
                    "typing.Iterable[int]"
                ]
            }
        },
        "test_ratios_to_coors": {
            "name": "test_ratios_to_coors",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "width": [
                    "int",
                    "float"
                ],
                "height": [
                    "int"
                ],
                "x1": [
                    "float",
                    "str",
                    "None",
                    "int",
                    "tuple[]"
                ],
                "y1": [
                    "float",
                    "list[str]",
                    "tuple[]",
                    "str"
                ],
                "x2": [
                    "float",
                    "str",
                    "None",
                    "int",
                    "tuple[]"
                ],
                "y2": [
                    "float",
                    "list[str]",
                    "tuple[]",
                    "str"
                ]
            }
        },
        "test_ratios_coors_interconversion": {
            "name": "test_ratios_coors_interconversion",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "x1": [
                    "int",
                    "float",
                    "str"
                ],
                "y1": [
                    "int",
                    "float",
                    "str"
                ],
                "x2": [
                    "int",
                    "float",
                    "str"
                ],
                "y2": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "test_coors_ratios_interconversion": {
            "name": "test_coors_ratios_interconversion",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "x1": [
                    "int",
                    "float",
                    "str"
                ],
                "y1": [
                    "int",
                    "float",
                    "str"
                ],
                "x2": [
                    "int",
                    "float",
                    "str"
                ],
                "y2": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "test_ratios_config_interconversion": {
            "name": "test_ratios_config_interconversion",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "x1": [
                    "int",
                    "float"
                ],
                "y1": [
                    "int",
                    "float"
                ],
                "x2": [
                    "int",
                    "float"
                ],
                "y2": [
                    "int",
                    "float"
                ]
            }
        },
        "test_open_image": {
            "name": "test_open_image",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
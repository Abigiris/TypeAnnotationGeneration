{
    "bel_resources-master/app/settings.py": {},
    "bel_resources-master/app/setup_logging.py": {},
    "bel_resources-master/app/__version__.py": {},
    "bel_resources-master/app/backbone/gene2protein.py": {
        "process_backbone": {
            "name": "process_backbone",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/backbone/__init__.py": {},
    "bel_resources-master/app/common/collect_sources.py": {
        "file_newer": {
            "name": "file_newer",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "check_file": [
                    "str"
                ],
                "base_file": [
                    "str",
                    "list[pathlib.Path]",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "get_web_file": {
            "name": "get_web_file",
            "location": 43,
            "return": [
                "tuple[typing.Union[bool,typing.Text]]"
            ],
            "arguments": {
                "url": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "bytes"
                ],
                "download_fn": [
                    "str",
                    "int",
                    "typing.Type"
                ],
                "days_old": [],
                "force_download": [
                    "bool"
                ]
            }
        },
        "get_ftp_file": {
            "name": "get_ftp_file",
            "location": 119,
            "return": [
                "tuple[typing.Union[bool,typing.Text]]"
            ],
            "arguments": {
                "url": [
                    "int",
                    "str"
                ],
                "download_fn": [
                    "str"
                ],
                "days_old": [],
                "force_download": [
                    "bool"
                ]
            }
        },
        "get_chembl_version": {
            "name": "get_chembl_version",
            "location": 210,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "float"
                ]
            }
        },
        "get_mesh_version": {
            "name": "get_mesh_version",
            "location": 245,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "float"
                ]
            }
        },
        "send_mail": {
            "name": "send_mail",
            "location": 279,
            "return": [
                "bool"
            ],
            "arguments": {
                "mail_to": [
                    "str",
                    "float",
                    "bytes"
                ],
                "subject": [
                    "str",
                    "float",
                    "bytes"
                ],
                "msg": [
                    "str",
                    "float",
                    "bytes"
                ],
                "mail_from": []
            }
        }
    },
    "bel_resources-master/app/common/resources.py": {
        "get_metadata": {
            "name": "get_metadata",
            "location": 10,
            "return": [],
            "arguments": {
                "namespace_def": [],
                "version": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "get_species_labels": {
            "name": "get_species_labels",
            "location": 43,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/common/save_entities.py": {},
    "bel_resources-master/app/common/text.py": {
        "strip_quotes": {
            "name": "strip_quotes",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "quote_id": {
            "name": "quote_id",
            "location": 19,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "timestamp_to_date": {
            "name": "timestamp_to_date",
            "location": 28,
            "return": [],
            "arguments": {
                "ts": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "dt_now": {
            "name": "dt_now",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "bel_resources-master/app/named_complexes/__init__.py": {},
    "bel_resources-master/app/namespaces/chebi.py": {
        "build_json": {
            "name": "build_json",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 117,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/chembl.py": {
        "query_db": {
            "name": "query_db",
            "location": 51,
            "return": [
                "typing.Generator[dict[typing.Text, typing.Union[str,None,list[typing.Text]]]]"
            ],
            "arguments": {}
        },
        "build_json": {
            "name": "build_json",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/do.py": {
        "build_json": {
            "name": "build_json",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 133,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/eg.py": {
        "get_history": {
            "name": "get_history",
            "location": 45,
            "return": [
                "dict[typing.Union[int,str], dict[typing.Union[dict[str, str],typing.Iterator], int]]"
            ],
            "arguments": {}
        },
        "build_json": {
            "name": "build_json",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/fma.py": {
        "build_json": {
            "name": "build_json",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 133,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/go.py": {
        "is_parent": {
            "name": "is_parent",
            "location": 47,
            "return": [],
            "arguments": {
                "check_id": [],
                "target_parent_id": [],
                "parent_ids": []
            }
        },
        "build_json": {
            "name": "build_json",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 166,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/hgnc.py": {
        "build_json": {
            "name": "build_json",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/mesh.py": {
        "process_types": {
            "name": "process_types",
            "location": 56,
            "return": [],
            "arguments": {
                "mesh_tree_ids": []
            }
        },
        "build_json": {
            "name": "build_json",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 219,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/mgi.py": {
        "build_json": {
            "name": "build_json",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/migrate_openbel_namespaces.py": {
        "migrate_file": {
            "name": "migrate_file",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "fn": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/openbel_annotations.py": {
        "update_data_files": {
            "name": "update_data_files",
            "location": 29,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {}
        },
        "add_metadata": {
            "name": "add_metadata",
            "location": 52,
            "return": [
                "dict[typing.Text, dict[typing.Text, typing.Text]]"
            ],
            "arguments": {}
        },
        "read_annofile": {
            "name": "read_annofile",
            "location": 65,
            "return": [
                "tuple[None]"
            ],
            "arguments": {
                "annofile": [
                    "str",
                    "typing.IO"
                ]
            }
        },
        "build_json": {
            "name": "build_json",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "annofiles": [
                    "list[]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/openbel_namespaces.py": {
        "update_data_files": {
            "name": "update_data_files",
            "location": 48,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {}
        },
        "convert_entity_types": {
            "name": "convert_entity_types",
            "location": 72,
            "return": [
                "list[]"
            ],
            "arguments": {
                "entity_types_abbrev": []
            }
        },
        "read_nsfile": {
            "name": "read_nsfile",
            "location": 82,
            "return": [],
            "arguments": {
                "nsfile": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "build_json": {
            "name": "build_json",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "nsfiles": [
                    "list[]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/openbel_update.py": {
        "namespace_quoting": {
            "name": "namespace_quoting",
            "location": 15,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/rgd.py": {
        "build_json": {
            "name": "build_json",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/SCHEM_equivalences.py": {
        "collect_equivalences": {
            "name": "collect_equivalences",
            "location": 18,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "fn": [
                    "str"
                ]
            }
        },
        "add_equivalences": {
            "name": "add_equivalences",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "equivalences": [
                    "str",
                    "int",
                    "tuple[]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/SCOMP_equivalences.py": {
        "collect_equivalences": {
            "name": "collect_equivalences",
            "location": 18,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "fn": [
                    "str"
                ]
            }
        },
        "add_equivalences": {
            "name": "add_equivalences",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "equivalences": [
                    "str",
                    "int",
                    "tuple[]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/sp.py": {
        "process_record": {
            "name": "process_record",
            "location": 52,
            "return": [],
            "arguments": {
                "record": []
            }
        },
        "build_json": {
            "name": "build_json",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 230,
            "return": [],
            "arguments": {
                "overwrite": [],
                "force_download": []
            }
        }
    },
    "bel_resources-master/app/namespaces/tax.py": {
        "build_json": {
            "name": "build_json",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/TEMPLATE.py": {
        "build_json": {
            "name": "build_json",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/namespaces/virtuals.py": {
        "build_json": {
            "name": "build_json",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/namespaces/zfin.py": {
        "build_json": {
            "name": "build_json",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/nanopubs/SFAM_family_members.py": {
        "process_members": {
            "name": "process_members",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/app/nanopubs/__init__.py": {},
    "bel_resources-master/app/orthologs/eg.py": {
        "build_json": {
            "name": "build_json",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "overwrite": [
                    "Option"
                ],
                "force_download": [
                    "Option"
                ]
            }
        }
    },
    "bel_resources-master/app/orthologs/__init__.py": {},
    "bel_resources-master/app/schemas/main.py": {},
    "bel_resources-master/bin/check_sp_parents.py": {
        "process_sp": {
            "name": "process_sp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bel_resources-master/bin/tmp_fix_SCHEM.py": {},
    "bel_resources-master/docs/source/conf.py": {}
}
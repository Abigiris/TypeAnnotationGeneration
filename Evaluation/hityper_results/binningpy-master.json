{
    "binningpy-master/setup.py": {},
    "binningpy-master/binningpy/base.py": {
        "BinningBase.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "bin_nbr": [],
                "confined": [],
                "copy": []
            }
        },
        "BinningBase._transform_item": {
            "name": "_transform_item",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "features_line": []
            }
        },
        "BinningBase._transform": {
            "name": "_transform",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "features_line": []
            }
        },
        "BinningBase.transform": {
            "name": "transform",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "X": []
            }
        },
        "BinningBase._inverse_transform_item": {
            "name": "_inverse_transform_item",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "features_line": []
            }
        },
        "BinningBase._inverse_transform": {
            "name": "_inverse_transform",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "features_line": []
            }
        },
        "BinningBase.inverse_transform": {
            "name": "inverse_transform",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "X": []
            }
        },
        "BinningBase.fit": {
            "name": "fit",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "y": []
            }
        }
    },
    "binningpy-master/binningpy/__init__.py": {},
    "binningpy-master/binningpy/supervised/chi_merge.py": {},
    "binningpy-master/binningpy/supervised/minimum_entropy.py": {},
    "binningpy-master/binningpy/supervised/__init__.py": {},
    "binningpy-master/binningpy/unsupervised/constant_frequency.py": {},
    "binningpy-master/binningpy/unsupervised/constant_width.py": {
        "ConstantWidthBinning._reset": {
            "name": "_reset",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConstantWidthBinning.fit": {
            "name": "fit",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "y": [
                    "None"
                ]
            }
        },
        "ConstantWidthBinning.partial_fit": {
            "name": "partial_fit",
            "location": 55,
            "return": [
                "ConstantWidthBinning"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "y": [
                    "None"
                ]
            }
        }
    },
    "binningpy-master/binningpy/unsupervised/__init__.py": {},
    "binningpy-master/test/test_base.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BinningBase_suite": {
            "name": "BinningBase_suite",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "TestBinningBase.setUpClass": {
            "name": "setUpClass",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "TestBinningBase.tearDownClass": {
            "name": "tearDownClass",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TestBinningBase.setUp": {
            "name": "setUp",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBinningBase.tearDown": {
            "name": "tearDown",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBinningBase.test_BinningBase_init": {
            "name": "test_BinningBase_init",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBinningBase.test_confined_transform": {
            "name": "test_confined_transform",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBinningBase.test_unconfined_transform": {
            "name": "test_unconfined_transform",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "binningpy-master/test/test_constant_width.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BinningBase_suite": {
            "name": "BinningBase_suite",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "TestConstantWidthBinning.setUpClass": {
            "name": "setUpClass",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "TestConstantWidthBinning.tearDownClass": {
            "name": "tearDownClass",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TestConstantWidthBinning.setUp": {
            "name": "setUp",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstantWidthBinning.tearDown": {
            "name": "tearDown",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstantWidthBinning.test_confined_transform": {
            "name": "test_confined_transform",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "binningpy-master/test/__init__.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
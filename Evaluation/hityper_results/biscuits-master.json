{
    "biscuits-master/bnh/bnh.py": {
        "Bin.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uniq": [
                    "int",
                    "float"
                ],
                "cnts": [
                    "int",
                    "float"
                ]
            }
        },
        "Bin.best_split": {
            "name": "best_split",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "metric": []
            }
        },
        "BNH.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_bins": [
                    "int"
                ],
                "min_obs_per_bin": [
                    "int"
                ],
                "exceptions": [
                    "None",
                    "int",
                    "dict[str, np.ndarray]",
                    "str"
                ],
                "epsilon_break": [
                    "float"
                ],
                "epsilon_heal": [
                    "float"
                ]
            }
        },
        "BNH._break_bin": {
            "name": "_break_bin",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bin": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "BNH._merge_bins": {
            "name": "_merge_bins",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "binx": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "biny": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "BNH._break": {
            "name": "_break",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BNH._heal": {
            "name": "_heal",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BNH._break_and_heal": {
            "name": "_break_and_heal",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BNH._fit": {
            "name": "_fit",
            "location": 68,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ],
                "w": [
                    "None",
                    "int",
                    "float"
                ]
            }
        }
    },
    "biscuits-master/bnh/metrics.py": {
        "Metric.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Metric.evaluate": {
            "name": "evaluate",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "bin": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Metric.best_index": {
            "name": "best_index",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "values": [
                    "int",
                    "tuple[typing.Union[str,int]]",
                    "complex",
                    "list[]"
                ]
            }
        },
        "IV.evaluate": {
            "name": "evaluate",
            "location": 27,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "bin": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "IV.best_index": {
            "name": "best_index",
            "location": 43,
            "return": [],
            "arguments": {
                "values": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        }
    },
    "biscuits-master/bnh/tabulate.py": {
        "tabulate": {
            "name": "tabulate",
            "location": 5,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "x": [],
                "y": [
                    "list[]",
                    "float",
                    "list[float]"
                ],
                "w": [
                    "None",
                    "list[]",
                    "float"
                ]
            }
        }
    },
    "biscuits-master/bnh/util.py": {
        "pairwise": {
            "name": "pairwise",
            "location": 3,
            "return": [],
            "arguments": {
                "iterable": [
                    "typing.Iterable[typing.Any]",
                    "typing.Iterable[T]",
                    "int",
                    "BaseException",
                    "None"
                ]
            }
        }
    },
    "biscuits-master/bnh/tests/test_util.py": {
        "TestTabulate.test_tabulate": {
            "name": "test_tabulate",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "biscuits-master/bnh/tests/__init__.py": {}
}
{
    "bitbox02-firmware-master/py/load_firmware.py": {
        "eprint": {
            "name": "eprint",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_get_bitbox_and_reboot": {
            "name": "_get_bitbox_and_reboot",
            "location": 41,
            "return": [],
            "arguments": {
                "use_cache": [
                    "bool"
                ]
            }
        },
        "_find_and_open_usb_bitbox02": {
            "name": "_find_and_open_usb_bitbox02",
            "location": 87,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "use_cache": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[int, dict[, ]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 120,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "main.progress": {
            "name": "progress",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "perc": []
            }
        },
        "_get_bitbox_and_reboot.NoiseConfig.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_get_bitbox_and_reboot.NoiseConfig.show_pairing": {
            "name": "show_pairing",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "device_response": []
            }
        },
        "_get_bitbox_and_reboot.NoiseConfigNoCache.show_pairing": {
            "name": "show_pairing",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "device_response": []
            }
        }
    },
    "bitbox02-firmware-master/py/send_message.py": {
        "eprint": {
            "name": "eprint",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "ask_user": {
            "name": "ask_user",
            "location": 57,
            "return": [],
            "arguments": {
                "choices": []
            }
        },
        "_btc_demo_inputs_outputs": {
            "name": "_btc_demo_inputs_outputs",
            "location": 78,
            "return": [],
            "arguments": {
                "bip44_account": []
            }
        },
        "connect_to_usb_bitbox": {
            "name": "connect_to_usb_bitbox",
            "location": 1339,
            "return": [],
            "arguments": {
                "debug": [],
                "use_cache": []
            }
        },
        "main": {
            "name": "main",
            "location": 1421,
            "return": [],
            "arguments": {}
        },
        "SendMessage.__init__": {
            "name": "__init__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "device": [],
                "debug": []
            }
        },
        "SendMessage._change_name_workflow": {
            "name": "_change_name_workflow",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SendMessage._setup_workflow": {
            "name": "_setup_workflow",
            "location": 184,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._print_backups": {
            "name": "_print_backups",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "backups": []
            }
        },
        "SendMessage._restore_backup_workflow": {
            "name": "_restore_backup_workflow",
            "location": 219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._restore_from_mnemonic": {
            "name": "_restore_from_mnemonic",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._list_device_info": {
            "name": "_list_device_info",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._reboot": {
            "name": "_reboot",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._check_sd_presence": {
            "name": "_check_sd_presence",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._insert_sdcard": {
            "name": "_insert_sdcard",
            "location": 271,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._remove_sdcard": {
            "name": "_remove_sdcard",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._get_root_fingerprint": {
            "name": "_get_root_fingerprint",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._display_zpub": {
            "name": "_display_zpub",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._get_electrum_encryption_key": {
            "name": "_get_electrum_encryption_key",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._btc_address": {
            "name": "_btc_address",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._btc_multisig_config": {
            "name": "_btc_multisig_config",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "coin": []
            }
        },
        "SendMessage._btc_multisig_address": {
            "name": "_btc_multisig_address",
            "location": 357,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_normal": {
            "name": "_sign_btc_normal",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_multiple_changes": {
            "name": "_sign_btc_multiple_changes",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_locktime_rbf": {
            "name": "_sign_btc_locktime_rbf",
            "location": 438,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_taproot_inputs": {
            "name": "_sign_btc_taproot_inputs",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_taproot_output": {
            "name": "_sign_btc_taproot_output",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_tx_from_raw": {
            "name": "_sign_btc_tx_from_raw",
            "location": 526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_tx": {
            "name": "_sign_btc_tx",
            "location": 613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_btc_message": {
            "name": "_sign_btc_message",
            "location": 630,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._check_backup": {
            "name": "_check_backup",
            "location": 661,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._show_mnemnoic_seed": {
            "name": "_show_mnemnoic_seed",
            "location": 673,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._create_backup": {
            "name": "_create_backup",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._toggle_mnemonic_passphrase": {
            "name": "_toggle_mnemonic_passphrase",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._get_eth_xpub": {
            "name": "_get_eth_xpub",
            "location": 720,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._display_eth_address": {
            "name": "_display_eth_address",
            "location": 732,
            "return": [],
            "arguments": {
                "self": [],
                "contract_address": []
            }
        },
        "SendMessage._sign_eth_tx": {
            "name": "_sign_eth_tx",
            "location": 747,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_eth_message": {
            "name": "_sign_eth_message",
            "location": 802,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._sign_eth_typed_message": {
            "name": "_sign_eth_typed_message",
            "location": 817,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._cardano": {
            "name": "_cardano",
            "location": 867,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._reset_device": {
            "name": "_reset_device",
            "location": 1111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._menu_notinit": {
            "name": "_menu_notinit",
            "location": 1118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._menu_init": {
            "name": "_menu_init",
            "location": 1140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._menu": {
            "name": "_menu",
            "location": 1183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage.run": {
            "name": "run",
            "location": 1189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader.__init__": {
            "name": "__init__",
            "location": 1203,
            "return": [],
            "arguments": {
                "self": [],
                "device": []
            }
        },
        "SendMessageBootloader._boot": {
            "name": "_boot",
            "location": 1207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._get_versions": {
            "name": "_get_versions",
            "location": 1211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._erase": {
            "name": "_erase",
            "location": 1218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._show_fw_hash": {
            "name": "_show_fw_hash",
            "location": 1221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._dont_show_fw_hash": {
            "name": "_dont_show_fw_hash",
            "location": 1224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._get_hashes": {
            "name": "_get_hashes",
            "location": 1227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader._menu": {
            "name": "_menu",
            "location": 1238,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessageBootloader.run": {
            "name": "run",
            "location": 1256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp.__init__": {
            "name": "__init__",
            "location": 1268,
            "return": [],
            "arguments": {
                "self": [],
                "device": [],
                "debug": []
            }
        },
        "U2FApp._wink": {
            "name": "_wink",
            "location": 1276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp._ping": {
            "name": "_ping",
            "location": 1280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp._register": {
            "name": "_register",
            "location": 1285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp._bogus": {
            "name": "_bogus",
            "location": 1293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp._authenticate": {
            "name": "_authenticate",
            "location": 1302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp._menu": {
            "name": "_menu",
            "location": 1313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FApp.run": {
            "name": "run",
            "location": 1331,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendMessage._btc_address.address": {
            "name": "address",
            "location": 301,
            "return": [],
            "arguments": {
                "display": []
            }
        },
        "SendMessage._sign_btc_tx_from_raw.get": {
            "name": "get",
            "location": 534,
            "return": [],
            "arguments": {
                "tx_id": []
            }
        },
        "SendMessage._display_eth_address.address": {
            "name": "address",
            "location": 733,
            "return": [],
            "arguments": {
                "display": []
            }
        },
        "SendMessage._cardano.xpubs": {
            "name": "xpubs",
            "location": 868,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.get_address": {
            "name": "get_address",
            "location": 885,
            "return": [],
            "arguments": {
                "display": []
            }
        },
        "SendMessage._cardano.address": {
            "name": "address",
            "location": 894,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.sign": {
            "name": "sign",
            "location": 898,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.sign_zero_ttl": {
            "name": "sign_zero_ttl",
            "location": 930,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.sign_tokens": {
            "name": "sign_tokens",
            "location": 963,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.delegate": {
            "name": "delegate",
            "location": 1015,
            "return": [],
            "arguments": {}
        },
        "SendMessage._cardano.withdraw": {
            "name": "withdraw",
            "location": 1063,
            "return": [],
            "arguments": {}
        },
        "connect_to_usb_bitbox.show_pairing": {
            "name": "show_pairing",
            "location": 1366,
            "return": [],
            "arguments": {
                "code": [],
                "device_response": []
            }
        },
        "connect_to_usb_bitbox.NoiseConfig.__init__": {
            "name": "__init__",
            "location": 1376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "connect_to_usb_bitbox.NoiseConfig.show_pairing": {
            "name": "show_pairing",
            "location": 1379,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "device_response": []
            }
        },
        "connect_to_usb_bitbox.NoiseConfig.attestation_check": {
            "name": "attestation_check",
            "location": 1382,
            "return": [],
            "arguments": {
                "self": [],
                "result": []
            }
        },
        "connect_to_usb_bitbox.NoiseConfigNoCache.show_pairing": {
            "name": "show_pairing",
            "location": 1391,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "device_response": []
            }
        },
        "connect_to_usb_bitbox.NoiseConfigNoCache.attestation_check": {
            "name": "attestation_check",
            "location": 1394,
            "return": [],
            "arguments": {
                "self": [],
                "result": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/setup.py": {
        "read": {
            "name": "read",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "find_version": {
            "name": "find_version",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/util.py": {
        "parse_xpub": {
            "name": "parse_xpub",
            "location": 31,
            "return": [],
            "arguments": {
                "xpub": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "UserCache.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_cache": [
                    "None",
                    "str",
                    "bool",
                    "typing.Iterable[]"
                ]
            }
        },
        "UserCache.serialize": {
            "name": "serialize",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserCache.deserialize": {
            "name": "deserialize",
            "location": 75,
            "return": [
                "tuple[typing.Optional[list[]]]"
            ],
            "arguments": {
                "raw": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "NoiseConfigUserCache.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "appid": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "NoiseConfigUserCache._find_cache_file": {
            "name": "_find_cache_file",
            "location": 107,
            "return": [
                "float"
            ],
            "arguments": {
                "appid": [
                    "bool"
                ]
            }
        },
        "NoiseConfigUserCache._read_cache": {
            "name": "_read_cache",
            "location": 118,
            "return": [
                "UserCache"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoiseConfigUserCache._write_cache": {
            "name": "_write_cache",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "NoiseConfigUserCache.contains_device_static_pubkey": {
            "name": "contains_device_static_pubkey",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "pubkey": [
                    "str",
                    "float",
                    "bytes",
                    "dict[, ]",
                    "typing.IO"
                ]
            }
        },
        "NoiseConfigUserCache.add_device_static_pubkey": {
            "name": "add_device_static_pubkey",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pubkey": []
            }
        },
        "NoiseConfigUserCache.get_app_static_privkey": {
            "name": "get_app_static_privkey",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoiseConfigUserCache.set_app_static_privkey": {
            "name": "set_app_static_privkey",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "privkey": [
                    "bytes",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        },
        "BitBoxAppNoiseConfig.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxAppNoiseConfig._read": {
            "name": "_read",
            "location": 179,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxAppNoiseConfig._write": {
            "name": "_write",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "dict[str, object]",
                    "int"
                ]
            }
        },
        "BitBoxAppNoiseConfig.contains_device_static_pubkey": {
            "name": "contains_device_static_pubkey",
            "location": 193,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "pubkey": [
                    "str"
                ]
            }
        },
        "BitBoxAppNoiseConfig.add_device_static_pubkey": {
            "name": "add_device_static_pubkey",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pubkey": [
                    "dict[int, dict[int, typing.Any]]",
                    "list[typing.Mapping]",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BitBoxAppNoiseConfig.get_app_static_privkey": {
            "name": "get_app_static_privkey",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxAppNoiseConfig.set_app_static_privkey": {
            "name": "set_app_static_privkey",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "privkey": [
                    "dict[, ]",
                    "bytes",
                    "int",
                    "str"
                ]
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/__init__.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/bitbox02/bitbox02.py": {
        "is_taproot": {
            "name": "is_taproot",
            "location": 70,
            "return": [
                "bool"
            ],
            "arguments": {
                "script_config": [
                    "dict[, ]",
                    "None",
                    "str"
                ]
            }
        },
        "btc_sign_needs_prevtxs": {
            "name": "btc_sign_needs_prevtxs",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "script_configs": [
                    "bool",
                    "str",
                    "float",
                    "typing.Sequence[int]"
                ]
            }
        },
        "BTCOutputInternal.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keypath": [
                    "bool",
                    "tuple[typing.Union[list[str],str,None]]",
                    "tuple[typing.Union[str,str,str]]",
                    "str",
                    "None",
                    "list[]",
                    "bytes"
                ],
                "value": [
                    "str"
                ],
                "script_config_index": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "BTCOutputExternal.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output_type": [
                    "str",
                    "None",
                    "typing.Sequence[]"
                ],
                "output_payload": [
                    "int",
                    "list[str]",
                    "str"
                ],
                "value": [
                    "str",
                    "int",
                    "list[str]",
                    "list[int]"
                ]
            }
        },
        "BitBox02.device_info": {
            "name": "device_info",
            "location": 145,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.set_device_name": {
            "name": "set_device_name",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "device_name": [
                    "str",
                    "tuple[str]",
                    "None"
                ]
            }
        },
        "BitBox02.set_password": {
            "name": "set_password",
            "location": 172,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "entropy_size": [
                    "int"
                ]
            }
        },
        "BitBox02.create_backup": {
            "name": "create_backup",
            "location": 192,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.list_backups": {
            "name": "list_backups",
            "location": 209,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.restore_backup": {
            "name": "restore_backup",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backup_id": [
                    "str"
                ]
            }
        },
        "BitBox02.check_backup": {
            "name": "check_backup",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "silent": [
                    "bool"
                ]
            }
        },
        "BitBox02.show_mnemonic": {
            "name": "show_mnemonic",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02._btc_msg_query": {
            "name": "_btc_msg_query",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "btc_request": [
                    "bytes",
                    "dict[, ]",
                    "dict[str, tuple[typing.Union[typing.Any,typing.Any,typing.Any]]]",
                    "typing.TextIO"
                ],
                "expected_response": [
                    "None",
                    "dict[, ]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "BitBox02.btc_xpub": {
            "name": "btc_xpub",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "keypath": [
                    "bool",
                    "typing.Sequence[int]",
                    "str"
                ],
                "coin": [],
                "xpub_type": [],
                "display": [
                    "bool"
                ]
            }
        },
        "BitBox02.btc_address": {
            "name": "btc_address",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "keypath": [
                    "bool",
                    "typing.Sequence[int]",
                    "bytes",
                    "dict[str, typing.Any]"
                ],
                "coin": [],
                "script_config": [],
                "display": [
                    "bool"
                ]
            }
        },
        "BitBox02.btc_is_script_config_registered": {
            "name": "btc_is_script_config_registered",
            "location": 322,
            "return": [],
            "arguments": {
                "self": [],
                "coin": [
                    "typing.Sequence[int]",
                    "dict[str, typing.Any]"
                ],
                "script_config": [
                    "typing.Sequence[int]",
                    "dict[str, typing.Any]"
                ],
                "keypath": [
                    "typing.Sequence[int]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BitBox02.btc_register_script_config": {
            "name": "btc_register_script_config",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coin": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "script_config": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "keypath": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "name": [
                    "str"
                ],
                "xpub_type": []
            }
        },
        "BitBox02.btc_sign": {
            "name": "btc_sign",
            "location": 383,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "coin": [
                    "int",
                    "str",
                    "tuple[typing.Union[int,int]]"
                ],
                "script_configs": [
                    "bytes"
                ],
                "inputs": [],
                "outputs": [],
                "version": [
                    "int"
                ],
                "locktime": [
                    "int"
                ]
            }
        },
        "BitBox02.btc_sign_msg": {
            "name": "btc_sign_msg",
            "location": 578,
            "return": [
                "tuple[typing.Union[bytes,int]]"
            ],
            "arguments": {
                "self": [],
                "coin": [
                    "int",
                    "None",
                    "typing.Sequence[int]"
                ],
                "script_config": [
                    "int",
                    "None",
                    "typing.Sequence[int]"
                ],
                "msg": [
                    "int",
                    "None",
                    "typing.Sequence[int]"
                ]
            }
        },
        "BitBox02.check_sdcard": {
            "name": "check_sdcard",
            "location": 631,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.insert_sdcard": {
            "name": "insert_sdcard",
            "location": 638,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.remove_sdcard": {
            "name": "remove_sdcard",
            "location": 648,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.root_fingerprint": {
            "name": "root_fingerprint",
            "location": 658,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.electrum_encryption_key": {
            "name": "electrum_encryption_key",
            "location": 668,
            "return": [],
            "arguments": {
                "self": [],
                "keypath": [
                    "typing.Sequence[int]",
                    "Exception",
                    "None",
                    "bool"
                ]
            }
        },
        "BitBox02.enable_mnemonic_passphrase": {
            "name": "enable_mnemonic_passphrase",
            "location": 679,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.disable_mnemonic_passphrase": {
            "name": "disable_mnemonic_passphrase",
            "location": 688,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02._eth_msg_query": {
            "name": "_eth_msg_query",
            "location": 697,
            "return": [],
            "arguments": {
                "self": [],
                "eth_request": [
                    "bytes",
                    "dict[, ]",
                    "dict[str, tuple[typing.Union[typing.Any,typing.Any,typing.Any]]]",
                    "typing.TextIO"
                ],
                "expected_response": [
                    "None",
                    "dict[, ]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "BitBox02._eth_coin": {
            "name": "_eth_coin",
            "location": 718,
            "return": [],
            "arguments": {
                "self": [],
                "chain_id": [
                    "int",
                    "str",
                    "list[float]",
                    "list[int]"
                ]
            }
        },
        "BitBox02.eth_pub": {
            "name": "eth_pub",
            "location": 728,
            "return": [],
            "arguments": {
                "self": [],
                "keypath": [
                    "str",
                    "None",
                    "dict[str, str]",
                    "int"
                ],
                "chain_id": [
                    "int"
                ],
                "output_type": [],
                "display": [
                    "bool"
                ],
                "contract_address": [
                    "bytes"
                ]
            }
        },
        "BitBox02.eth_sign": {
            "name": "eth_sign",
            "location": 754,
            "return": [],
            "arguments": {
                "self": [],
                "transaction": [
                    "int"
                ],
                "keypath": [
                    "int",
                    "str"
                ],
                "chain_id": [
                    "int"
                ]
            }
        },
        "BitBox02.eth_sign_msg": {
            "name": "eth_sign_msg",
            "location": 799,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "int",
                    "str"
                ],
                "keypath": [
                    "int",
                    "str"
                ],
                "chain_id": [
                    "int"
                ]
            }
        },
        "BitBox02.eth_sign_typed_msg": {
            "name": "eth_sign_typed_msg",
            "location": 845,
            "return": [],
            "arguments": {
                "self": [],
                "keypath": [
                    "str",
                    "bool",
                    "bytes",
                    "typing.Type"
                ],
                "msg": [
                    "str",
                    "bytes"
                ],
                "chain_id": [
                    "int"
                ]
            }
        },
        "BitBox02.reset": {
            "name": "reset",
            "location": 1023,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02.restore_from_mnemonic": {
            "name": "restore_from_mnemonic",
            "location": 1041,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBox02._cardano_msg_query": {
            "name": "_cardano_msg_query",
            "location": 1054,
            "return": [],
            "arguments": {
                "self": [],
                "cardano_request": [
                    "bytes",
                    "dict[, ]",
                    "dict[str, tuple[typing.Union[typing.Any,typing.Any,typing.Any]]]",
                    "typing.TextIO"
                ],
                "expected_response": [
                    "None",
                    "dict[, ]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "BitBox02.cardano_xpubs": {
            "name": "cardano_xpubs",
            "location": 1075,
            "return": [],
            "arguments": {
                "self": [],
                "keypaths": [
                    "bytes",
                    "str"
                ]
            }
        },
        "BitBox02.cardano_address": {
            "name": "cardano_address",
            "location": 1083,
            "return": [],
            "arguments": {
                "self": [],
                "address": [
                    "bool"
                ]
            }
        },
        "BitBox02.cardano_sign_transaction": {
            "name": "cardano_sign_transaction",
            "location": 1089,
            "return": [],
            "arguments": {
                "self": [],
                "transaction": [
                    "str",
                    "memoryview",
                    "int"
                ]
            }
        },
        "BitBox02.eth_sign_msg.format_as_uncompressed": {
            "name": "format_as_uncompressed",
            "location": 805,
            "return": [
                "bytes"
            ],
            "arguments": {
                "sig": []
            }
        },
        "BitBox02.eth_sign_typed_msg.format_as_uncompressed": {
            "name": "format_as_uncompressed",
            "location": 855,
            "return": [
                "bytes"
            ],
            "arguments": {
                "sig": []
            }
        },
        "BitBox02.eth_sign_typed_msg.to_type": {
            "name": "to_type",
            "location": 866,
            "return": [],
            "arguments": {
                "typ": []
            }
        },
        "BitBox02.eth_sign_typed_msg.get_value": {
            "name": "get_value",
            "location": 915,
            "return": [
                "bytes",
                "str"
            ],
            "arguments": {
                "root_object": [],
                "path": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/bitbox02/bootloader.py": {
        "parse_signed_firmware": {
            "name": "parse_signed_firmware",
            "location": 47,
            "return": [
                "tuple[typing.Union[tuple[typing.Union[list[str],tuple[typing.Union[typing.Literal,typing.Literal]],list[str]]],str,int,dict[, ],list[int],list[list[int]]]]"
            ],
            "arguments": {
                "firmware": []
            }
        },
        "Bootloader.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "list[int]",
                    "bool",
                    "str"
                ],
                "device_info": []
            }
        },
        "Bootloader._query": {
            "name": "_query",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "Bootloader.versions": {
            "name": "versions",
            "location": 89,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.get_hashes": {
            "name": "get_hashes",
            "location": 97,
            "return": [
                "tuple[typing.Union[str,dict[str, str]]]"
            ],
            "arguments": {
                "self": [],
                "display_firmware_hash": [],
                "display_signing_keydata_hash": []
            }
        },
        "Bootloader.show_firmware_hash_enabled": {
            "name": "show_firmware_hash_enabled",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.set_show_firmware_hash": {
            "name": "set_show_firmware_hash",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enable": []
            }
        },
        "Bootloader._erase": {
            "name": "_erase",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "firmware_num_chunks": [
                    "bytes",
                    "int",
                    "str",
                    "bytearray"
                ]
            }
        },
        "Bootloader._write_chunk": {
            "name": "_write_chunk",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chunk_num": [
                    "int",
                    "bytearray",
                    "list[int]"
                ],
                "chunk": []
            }
        },
        "Bootloader.flash_unsigned_firmware": {
            "name": "flash_unsigned_firmware",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "firmware": [],
                "progress_callback": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "Bootloader.flash_signed_firmware": {
            "name": "flash_signed_firmware",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "firmware": [
                    "str",
                    "tuple[typing.Union[str,str]]",
                    "bytes"
                ],
                "progress_callback": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Bootloader.erase": {
            "name": "erase",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.erased": {
            "name": "erased",
            "location": 180,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.reboot": {
            "name": "reboot",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.screen_rotate": {
            "name": "screen_rotate",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bootloader.close": {
            "name": "close",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/bitbox02/secp256k1.py": {
        "tagged_sha256": {
            "name": "tagged_sha256",
            "location": 25,
            "return": [],
            "arguments": {
                "tag": [
                    "str",
                    "bool",
                    "tuple[str]"
                ],
                "msg": [
                    "list[str]",
                    "bool",
                    "str",
                    "dict[str, list[typing.Any]]",
                    "None"
                ]
            }
        },
        "antiklepto_host_commit": {
            "name": "antiklepto_host_commit",
            "location": 30,
            "return": [],
            "arguments": {
                "host_nonce": [
                    "int",
                    "Exception",
                    "str"
                ]
            }
        },
        "antiklepto_verify": {
            "name": "antiklepto_verify",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "host_nonce": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "signer_commitment": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "signature": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/bitbox02/__init__.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/bitbox_api_protocol.py": {
        "Bitbox02Exception.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "int",
                    "str",
                    "float"
                ],
                "message": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "Bitbox02Exception.__str__": {
            "name": "__str__",
            "location": 200,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FirmwareVersionOutdatedException.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str",
                    "None"
                ],
                "required_version": [
                    "str",
                    "None"
                ]
            }
        },
        "LibraryVersionOutdatedException.__init__": {
            "name": "__init__",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str",
                    "None"
                ]
            }
        },
        "UnsupportedException.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "need_atleast": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Sequence[str]"
                ]
            }
        },
        "BitBoxNoiseConfig.show_pairing": {
            "name": "show_pairing",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "code": [
                    "typing.Callable[[], bool]",
                    "str",
                    "int",
                    "None",
                    "float"
                ],
                "device_response": [
                    "typing.Callable[[], bool]",
                    "str",
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "BitBoxNoiseConfig.attestation_check": {
            "name": "attestation_check",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "bool",
                    "Exception"
                ]
            }
        },
        "BitBoxNoiseConfig.contains_device_static_pubkey": {
            "name": "contains_device_static_pubkey",
            "location": 254,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "pubkey": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "BitBoxNoiseConfig.add_device_static_pubkey": {
            "name": "add_device_static_pubkey",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pubkey": [
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "BitBoxNoiseConfig.get_app_static_privkey": {
            "name": "get_app_static_privkey",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxNoiseConfig.set_app_static_privkey": {
            "name": "set_app_static_privkey",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "privkey": [
                    "bytes",
                    "str",
                    "bool",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "BitBoxProtocol.__init__": {
            "name": "__init__",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "int",
                    "float"
                ]
            }
        },
        "BitBoxProtocol.close": {
            "name": "close",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocol._raw_query": {
            "name": "_raw_query",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "BitBoxProtocol.query": {
            "name": "query",
            "location": 285,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "cmd": [],
                "msg_data": []
            }
        },
        "BitBoxProtocol._encode_noise_request": {
            "name": "_encode_noise_request",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": [
                    "bytes"
                ]
            }
        },
        "BitBoxProtocol._decode_noise_response": {
            "name": "_decode_noise_response",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": [
                    "bytes",
                    "bool",
                    "typing.Iterable[str]"
                ]
            }
        },
        "BitBoxProtocol._handshake_query": {
            "name": "_handshake_query",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "bytes",
                    "typing.Type"
                ]
            }
        },
        "BitBoxProtocol.encrypted_query": {
            "name": "encrypted_query",
            "location": 309,
            "return": [
                "dict[, ]",
                "dict[typing.Any, dict[, ]]"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "int",
                    "float",
                    "str",
                    "list[str]"
                ]
            }
        },
        "BitBoxProtocol._create_noise_channel": {
            "name": "_create_noise_channel",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "noise_config": []
            }
        },
        "BitBoxProtocol.noise_connect": {
            "name": "noise_connect",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "noise_config": [
                    "typing.Callable[..., None]",
                    "int"
                ]
            }
        },
        "BitBoxProtocol.unlock_query": {
            "name": "unlock_query",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocol.cancel_outstanding_request": {
            "name": "cancel_outstanding_request",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocolV1.unlock_query": {
            "name": "unlock_query",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocolV1._encode_noise_request": {
            "name": "_encode_noise_request",
            "location": 408,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": [
                    "bytes"
                ]
            }
        },
        "BitBoxProtocolV1._decode_noise_response": {
            "name": "_decode_noise_response",
            "location": 411,
            "return": [
                "tuple[bytes]"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": []
            }
        },
        "BitBoxProtocolV1._handshake_query": {
            "name": "_handshake_query",
            "location": 421,
            "return": [
                "tuple[typing.Union[bytes,str,dict[str, str]]]"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "bool"
                ]
            }
        },
        "BitBoxProtocolV1.cancel_outstanding_request": {
            "name": "cancel_outstanding_request",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocolV2.unlock_query": {
            "name": "unlock_query",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocolV3.unlock_query": {
            "name": "unlock_query",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocolV4._encode_noise_request": {
            "name": "_encode_noise_request",
            "location": 457,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": [
                    "bytes"
                ]
            }
        },
        "BitBoxProtocolV7.__init__": {
            "name": "__init__",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Callable[A, bool]"
                ]
            }
        },
        "BitBoxProtocolV7._handshake_query": {
            "name": "_handshake_query",
            "location": 468,
            "return": [],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "float",
                    "str",
                    "list[str]"
                ]
            }
        },
        "BitBoxProtocolV7._decode_noise_response": {
            "name": "_decode_noise_response",
            "location": 471,
            "return": [
                "tuple[typing.Union[bytes,str]]"
            ],
            "arguments": {
                "self": [],
                "encrypted_msg": [
                    "bytes",
                    "str"
                ]
            }
        },
        "BitBoxProtocolV7._raw_query": {
            "name": "_raw_query",
            "location": 474,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "bytes",
                    "dict[, ]",
                    "list[str]",
                    "None"
                ]
            }
        },
        "BitBoxProtocolV7.cancel_outstanding_request": {
            "name": "cancel_outstanding_request",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxCommonAPI.__init__": {
            "name": "__init__",
            "location": 528,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [],
                "device_info": [
                    "str"
                ],
                "noise_config": [
                    "str",
                    "bool"
                ]
            }
        },
        "BitBoxCommonAPI._perform_attestation": {
            "name": "_perform_attestation",
            "location": 576,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxCommonAPI._msg_query": {
            "name": "_msg_query",
            "location": 625,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "expected_response": [
                    "None",
                    "str",
                    "dict[, ]",
                    "typing.Mapping",
                    "typing.Callable[..., collections.abc.Awaitable[dict[, ]]]"
                ]
            }
        },
        "BitBoxCommonAPI.reboot": {
            "name": "reboot",
            "location": 652,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "purpose": []
            }
        },
        "BitBoxCommonAPI.get_info": {
            "name": "get_info",
            "location": 673,
            "return": [
                "tuple[typing.Union[str,float,list[],int,typing.Match,None]]"
            ],
            "arguments": {
                "transport": []
            }
        },
        "BitBoxCommonAPI.check_min_version": {
            "name": "check_min_version",
            "location": 701,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxCommonAPI.cancel_outstanding_request": {
            "name": "cancel_outstanding_request",
            "location": 717,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxCommonAPI._check_max_version": {
            "name": "_check_max_version",
            "location": 720,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxCommonAPI._require_atleast": {
            "name": "_require_atleast",
            "location": 732,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str"
                ]
            }
        },
        "BitBoxCommonAPI.close": {
            "name": "close",
            "location": 739,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitBoxProtocol._create_noise_channel.get_device_response": {
            "name": "get_device_response",
            "location": 364,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/communication.py": {
        "TransportLayer.write": {
            "name": "write",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ],
                "endpoint": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ],
                "cid": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "TransportLayer.read": {
            "name": "read",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "cid": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "TransportLayer.query": {
            "name": "query",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "bytes",
                    "list[str]",
                    "typing.Any",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "endpoint": [
                    "bool",
                    "dict[, ]"
                ],
                "cid": [
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "TransportLayer.generate_cid": {
            "name": "generate_cid",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportLayer.close": {
            "name": "close",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhysicalLayer.write": {
            "name": "write",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "PhysicalLayer.read": {
            "name": "read",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "float",
                    "list[T]",
                    "int",
                    "str"
                ],
                "timeout_ms": [
                    "float",
                    "list[T]",
                    "int",
                    "str"
                ]
            }
        },
        "PhysicalLayer.close": {
            "name": "close",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/devices.py": {
        "get_devices": {
            "name": "get_devices",
            "location": 46,
            "return": [
                "list[]"
            ],
            "arguments": {
                "product_string": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "interface_number": [
                    "int"
                ]
            }
        },
        "get_device": {
            "name": "get_device",
            "location": 65,
            "return": [],
            "arguments": {
                "product_string": [
                    "str"
                ],
                "interface_number": [
                    "int"
                ]
            }
        },
        "get_bitbox02multi_device": {
            "name": "get_bitbox02multi_device",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02multi_bootloader": {
            "name": "get_bitbox02multi_bootloader",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02btc_device": {
            "name": "get_bitbox02btc_device",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02btc_bootloader": {
            "name": "get_bitbox02btc_bootloader",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02multi_devices": {
            "name": "get_bitbox02multi_devices",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02multi_bootloaders": {
            "name": "get_bitbox02multi_bootloaders",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02btc_devices": {
            "name": "get_bitbox02btc_devices",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "get_bitbox02btc_bootloaders": {
            "name": "get_bitbox02btc_bootloaders",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "get_any_bitbox02s": {
            "name": "get_any_bitbox02s",
            "location": 106,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "get_any_bitbox02": {
            "name": "get_any_bitbox02",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "get_any_bitbox02_bootloaders": {
            "name": "get_any_bitbox02_bootloaders",
            "location": 133,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "get_any_bitbox02_bootloader": {
            "name": "get_any_bitbox02_bootloader",
            "location": 144,
            "return": [],
            "arguments": {}
        },
        "parse_device_version": {
            "name": "parse_device_version",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "serial_number": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "TooManyFoundException.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Callable[Any,Any, bool]"
                ]
            }
        },
        "NoneFoundException.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/__init__.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/antiklepto_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/backup_commands_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/bitbox02_system_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/btc_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/cardano_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/common_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/eth_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/hww_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/keystore_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/mnemonic_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/perform_attestation_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/system_pb2.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/generated/__init__.py": {},
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/u2fhid/u2fhid.py": {
        "U2FHid.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "device": [
                    "int",
                    "float"
                ]
            }
        },
        "U2FHid.generate_cid": {
            "name": "generate_cid",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "U2FHid._throw_error": {
            "name": "_throw_error",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error_code": [
                    "int",
                    "str",
                    "dict[, ]",
                    "list[str]"
                ]
            }
        },
        "U2FHid.write": {
            "name": "write",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "endpoint": [
                    "int"
                ],
                "cid": [
                    "int"
                ]
            }
        },
        "U2FHid.read": {
            "name": "read",
            "location": 119,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "int"
                ],
                "cid": [
                    "int"
                ]
            }
        },
        "U2FHid.close": {
            "name": "close",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bitbox02-firmware-master/py/bitbox02/bitbox02/communication/u2fhid/__init__.py": {},
    "bitbox02-firmware-master/py/u2f/bitbox02.py": {
        "get_bitbox02_u2f_device": {
            "name": "get_bitbox02_u2f_device",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "BitBox02U2F.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "BitBox02U2F.close": {
            "name": "close",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitBox02U2F._query": {
            "name": "_query",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "cid": [],
                "cmd": [],
                "msg": []
            }
        },
        "BitBox02U2F._maybe_error": {
            "name": "_maybe_error",
            "location": 42,
            "return": [],
            "arguments": {
                "response_bytes": [],
                "cmd": []
            }
        },
        "BitBox02U2F._parse_u2f_init_response": {
            "name": "_parse_u2f_init_response",
            "location": 47,
            "return": [],
            "arguments": {
                "response_bytes": []
            }
        },
        "BitBox02U2F.u2fhid_init": {
            "name": "u2fhid_init",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "allocate": []
            }
        },
        "BitBox02U2F.u2fhid_ping": {
            "name": "u2fhid_ping",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "BitBox02U2F.u2fhid_wink": {
            "name": "u2fhid_wink",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitBox02U2F.u2fhid_msg": {
            "name": "u2fhid_msg",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "BitBox02U2F.u2f_register": {
            "name": "u2f_register",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "appid": []
            }
        },
        "BitBox02U2F.u2f_authenticate": {
            "name": "u2f_authenticate",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "appid": [],
                "key_handle": [],
                "pub_key": []
            }
        },
        "BitBox02U2F.u2f_register_bogus": {
            "name": "u2f_register_bogus",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "vendor": []
            }
        }
    },
    "bitbox02-firmware-master/py/u2f/u2f.py": {
        "_status_code_to_exception": {
            "name": "_status_code_to_exception",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "code_bytes": [
                    "str"
                ]
            }
        },
        "_random_32": {
            "name": "_random_32",
            "location": 70,
            "return": [
                "bytearray"
            ],
            "arguments": {}
        },
        "_der_to_sig": {
            "name": "_der_to_sig",
            "location": 77,
            "return": [
                "tuple[bytearray]"
            ],
            "arguments": {
                "der": []
            }
        },
        "WrongLengthException.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataInvalidException.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConditionsNotSatisfiedException.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WrongDataException.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FSender.u2fhid_msg": {
            "name": "u2fhid_msg",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes",
                    "str",
                    "float",
                    "typing.Callable[..., None]"
                ]
            }
        },
        "APDU.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ins": [
                    "int",
                    "list[float]",
                    "list[int]",
                    "str",
                    "list[]"
                ],
                "p1": [
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ],
                "p2": [
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ],
                "length": [
                    "bool"
                ],
                "data": [
                    "typing.Callable[, ]",
                    "list[list[typing.Any]]",
                    "bool",
                    "str"
                ]
            }
        },
        "APDU.__bytes__": {
            "name": "__bytes__",
            "location": 145,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationResponse.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response_bytes": [
                    "bytes",
                    "str"
                ],
                "challenge": [
                    "str",
                    "bytes",
                    "bool",
                    "list[str]",
                    "None",
                    "list[dict[, ]]",
                    "dict[str, str]"
                ],
                "appid": [
                    "str",
                    "bytes",
                    "bool",
                    "list[str]",
                    "None",
                    "list[dict[, ]]",
                    "dict[str, str]"
                ]
            }
        },
        "RegistrationResponse._get_cert": {
            "name": "_get_cert",
            "location": 181,
            "return": [
                "tuple[typing.Union[str,list[typing.Union[str,typing.Any,typing.Any]],bytes]]"
            ],
            "arguments": {
                "msg": [
                    "bytes"
                ]
            }
        },
        "RegistrationResponse._get_subject_pub_key": {
            "name": "_get_subject_pub_key",
            "location": 199,
            "return": [
                "bytes"
            ],
            "arguments": {
                "cert": []
            }
        },
        "RegistrationResponse.verify": {
            "name": "verify",
            "location": 208,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationRequest.__init__": {
            "name": "__init__",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_id": [
                    "str"
                ],
                "bogus": [
                    "typing.Text"
                ]
            }
        },
        "RegistrationRequest.send": {
            "name": "send",
            "location": 259,
            "return": [
                "RegistrationResponse"
            ],
            "arguments": {
                "self": [],
                "bitbox": [
                    "bytes",
                    "tuple[]",
                    "str",
                    "int"
                ]
            }
        },
        "AuthenticationResponse.__init__": {
            "name": "__init__",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response_bytes": [
                    "bytes",
                    "tuple[typing.Union[int,int,bytearray]]"
                ],
                "appid": [
                    "str",
                    "bytes",
                    "bool",
                    "list[str]",
                    "None",
                    "list[dict[, ]]",
                    "dict[str, str]"
                ],
                "challenge": [
                    "str",
                    "bytes",
                    "bool",
                    "list[str]",
                    "None",
                    "list[dict[, ]]",
                    "dict[str, str]"
                ]
            }
        },
        "AuthenticationResponse.verify": {
            "name": "verify",
            "location": 279,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "public_key": [
                    "bytes",
                    "str"
                ]
            }
        },
        "AuthenticationRequest.__init__": {
            "name": "__init__",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_id": [
                    "str"
                ],
                "key_handle": []
            }
        },
        "AuthenticationRequest.send": {
            "name": "send",
            "location": 325,
            "return": [
                "AuthenticationResponse"
            ],
            "arguments": {
                "self": [],
                "bitbox": [
                    "bytes",
                    "tuple[]",
                    "str",
                    "int"
                ]
            }
        },
        "InitResponse.__init__": {
            "name": "__init__",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nonce": [
                    "bool",
                    "typing.Callable[, ]",
                    "str",
                    "bytes",
                    "dict[str, typing.Any]",
                    "None",
                    "tuple[]",
                    "list[typing.Any]"
                ],
                "cid": [
                    "int"
                ],
                "version_interface": [
                    "str",
                    "list[str]",
                    "bool",
                    "float",
                    "dict[str, str]"
                ],
                "version_major": [
                    "str",
                    "list[str]",
                    "bool",
                    "float",
                    "dict[str, str]"
                ],
                "version_minor": [
                    "str",
                    "list[str]",
                    "bool",
                    "float",
                    "dict[str, str]"
                ],
                "version_build": [
                    "str",
                    "list[str]",
                    "bool",
                    "float",
                    "dict[str, str]"
                ],
                "cap_flags": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "typing.Mapping"
                ]
            }
        }
    },
    "bitbox02-firmware-master/py/u2f/__init__.py": {},
    "bitbox02-firmware-master/releases/describe_signed_firmware.py": {
        "main": {
            "name": "main",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "bitbox02-firmware-master/scripts/graphics/convert.py": {
        "convert": {
            "name": "convert",
            "location": 6,
            "return": [
                "typing.Generator[typing.Union[list[],list[typing.Text]]]"
            ],
            "arguments": {
                "content": [
                    "bytes"
                ],
                "width": [
                    "int",
                    "str",
                    "bytes"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bitbox02-firmware-master/src/rust/vendor/bip32-ed25519/tests/testdata/gen_table.py": {}
}
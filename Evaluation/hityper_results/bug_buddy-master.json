{
    "bug_buddy-master/setup.py": {},
    "bug_buddy-master/bin/quick_scripts.py": {},
    "bug_buddy-master/bug_buddy/blaming.py": {
        "synthetic_blame_all_commits": {
            "name": "synthetic_blame_all_commits",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "synthetic_blame": {
            "name": "synthetic_blame",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "str",
                    "float",
                    "None"
                ],
                "test_run": [
                    "bool"
                ]
            }
        },
        "get_synthetic_children_commits": {
            "name": "get_synthetic_children_commits",
            "location": 101,
            "return": [
                "list[typing.Union[str,dict[, ]]]"
            ],
            "arguments": {
                "commit": [
                    "int",
                    "list[str]"
                ]
            }
        },
        "get_hash_given_base_synthetic_ids": {
            "name": "get_hash_given_base_synthetic_ids",
            "location": 134,
            "return": [
                "int"
            ],
            "arguments": {
                "base_synthetic_ids": []
            }
        },
        "powerset": {
            "name": "powerset",
            "location": 143,
            "return": [],
            "arguments": {
                "diffs": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/cli.py": {
        "is_affirmative": {
            "name": "is_affirmative",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_response": [
                    "str",
                    "typing.Any",
                    "None",
                    "int"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/collection.py": {
        "create_results_from_junit_xml": {
            "name": "create_results_from_junit_xml",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "output_file": [
                    "str",
                    "list[str]"
                ],
                "repository": [
                    "dict[str, str]",
                    "bool"
                ],
                "test_run": [
                    "dict[str, dict[, ]]",
                    "list[str]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/commands.py": {
        "train_command": {
            "name": "train_command",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str"
                ]
            }
        },
        "do_command": {
            "name": "do_command",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str",
                    "typing.Callable[str, None]"
                ]
            }
        },
        "watch_command": {
            "name": "watch_command",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str"
                ],
                "commit_only": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "set[str]"
                ]
            }
        },
        "initialize_command": {
            "name": "initialize_command",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "initialize_commands": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ],
                "test_commands": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ],
                "src_directory": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ],
                "commit_only": [
                    "bool"
                ],
                "ignored_files": [
                    "typing.Text"
                ]
            }
        },
        "analyze_command": {
            "name": "analyze_command",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "repository_name": [
                    "str",
                    "list[]",
                    "bool"
                ]
            }
        },
        "generate_command": {
            "name": "generate_command",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str",
                    "bool",
                    "None"
                ],
                "run_limit": [
                    "None",
                    "int",
                    "list[str]",
                    "str",
                    "tuple[]",
                    "typing.IO"
                ]
            }
        },
        "delete_command": {
            "name": "delete_command",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "src_path": [
                    "str",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "_check_repo_is_clean": {
            "name": "_check_repo_is_clean",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str"
                ],
                "path": [
                    "None",
                    "str"
                ]
            }
        },
        "_initialize_repository": {
            "name": "_initialize_repository",
            "location": 139,
            "return": [],
            "arguments": {
                "session": [],
                "src_path": [
                    "str",
                    "list[str]"
                ],
                "initialize_commands": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "list[str]"
                ],
                "test_commands": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "list[str]"
                ],
                "src_directory": [
                    "None",
                    "str",
                    "dict[str, str]"
                ],
                "commit_only": [
                    "bool"
                ],
                "ignored_files": [
                    "typing.Text"
                ]
            }
        },
        "_migrate_repository_to_new_path": {
            "name": "_migrate_repository_to_new_path",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "repository": [
                    "str"
                ],
                "new_path": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_get_repository_from_src_path": {
            "name": "_get_repository_from_src_path",
            "location": 212,
            "return": [
                "str",
                "dict[str, list[str]]",
                "dict[str, dict[str, typing.Any]]",
                "list[]"
            ],
            "arguments": {
                "session": [
                    "str"
                ],
                "src_path": [
                    "str"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/constants.py": {},
    "bug_buddy-master/bug_buddy/db.py": {
        "session_manager": {
            "name": "session_manager",
            "location": 26,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "get": {
            "name": "get",
            "location": 39,
            "return": [
                "dict[str, str]",
                "str",
                "typing.Iterator",
                "set[]",
                "typing.Type"
            ],
            "arguments": {
                "session": [],
                "sql_class": [
                    "str"
                ]
            }
        },
        "get_all": {
            "name": "get_all",
            "location": 48,
            "return": [],
            "arguments": {
                "session": [],
                "sql_class": [],
                "limit": [
                    "None",
                    "str",
                    "int",
                    "float"
                ],
                "random": [
                    "bool"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 64,
            "return": [],
            "arguments": {
                "session": [
                    "dict[, ]",
                    "str",
                    "typing.Mapping"
                ],
                "sql_class": [
                    "str"
                ]
            }
        },
        "get_or_create": {
            "name": "get_or_create",
            "location": 73,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "session": [
                    "bool",
                    "str"
                ],
                "sql_class": [
                    "bool",
                    "str"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "sql_instance": [
                    "tuple[typing.Union[float,float]]",
                    "str"
                ]
            }
        },
        "get_or_create_diff": {
            "name": "get_or_create_diff",
            "location": 93,
            "return": [],
            "arguments": {
                "session": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "repository": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "first_line": [
                    "bool",
                    "str"
                ],
                "last_line": [
                    "bool",
                    "str"
                ],
                "file_path": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "patch": [
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "get_or_create_repository": {
            "name": "get_or_create_repository",
            "location": 117,
            "return": [],
            "arguments": {
                "name": [
                    "None",
                    "str"
                ],
                "url": [
                    "None",
                    "str"
                ],
                "path": [
                    "None",
                    "str",
                    "typing.Iterable[int]",
                    "float"
                ],
                "test_commands": [
                    "None",
                    "str",
                    "typing.Iterable[int]",
                    "float"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/errors.py": {},
    "bug_buddy-master/bug_buddy/git_utils.py": {
        "db_and_git_match": {
            "name": "db_and_git_match",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "repository": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]"
                ],
                "num_commits": [
                    "int"
                ],
                "branch": [
                    "typing.Text"
                ]
            }
        },
        "run_cmd": {
            "name": "run_cmd",
            "location": 75,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "command": [
                    "str",
                    "dict[, ]",
                    "None",
                    "typing.Mapping",
                    "typing.Any"
                ],
                "log": [
                    "bool"
                ]
            }
        },
        "is_repo_clean": {
            "name": "is_repo_clean",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "repository": [
                    "str"
                ],
                "path": [
                    "None",
                    "str"
                ]
            }
        },
        "set_bug_buddy_branch": {
            "name": "set_bug_buddy_branch",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "float",
                    "str",
                    "typing.BinaryIO"
                ]
            }
        },
        "get_commit_id": {
            "name": "get_commit_id",
            "location": 132,
            "return": [],
            "arguments": {
                "repository": [
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "get_branch_name": {
            "name": "get_branch_name",
            "location": 142,
            "return": [],
            "arguments": {
                "repository": [
                    "str"
                ]
            }
        },
        "git_add": {
            "name": "git_add",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "create_commit": {
            "name": "create_commit",
            "location": 160,
            "return": [],
            "arguments": {
                "repository": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "name": [
                    "None",
                    "str",
                    "bytes"
                ],
                "commit_type": [],
                "allow_empty": [
                    "bool"
                ]
            }
        },
        "_store_commit": {
            "name": "_store_commit",
            "location": 187,
            "return": [],
            "arguments": {
                "repository": [
                    "str",
                    "int"
                ],
                "commit_id": [
                    "str",
                    "None",
                    "bool",
                    "list[int]"
                ],
                "commit_type": []
            }
        },
        "update_commit": {
            "name": "update_commit",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "dict[str, typing.Any]",
                    "set[int]",
                    "int"
                ]
            }
        },
        "revert_commit": {
            "name": "revert_commit",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "list[str]"
                ],
                "commit": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "revert_unstaged_changes": {
            "name": "revert_unstaged_changes",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "git_push": {
            "name": "git_push",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "get_repository_name_from_url": {
            "name": "get_repository_name_from_url",
            "location": 250,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "get_repository_url_from_path": {
            "name": "get_repository_url_from_path",
            "location": 257,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_most_recent_commit": {
            "name": "get_most_recent_commit",
            "location": 264,
            "return": [],
            "arguments": {
                "repository": [],
                "branch": [
                    "typing.Text"
                ],
                "create": [
                    "bool"
                ]
            }
        },
        "get_commits_only_in_branch": {
            "name": "get_commits_only_in_branch",
            "location": 293,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "repository": [
                    "dict[str, typing.Any]"
                ],
                "branch": [
                    "typing.Text"
                ]
            }
        },
        "get_previous_commit": {
            "name": "get_previous_commit",
            "location": 316,
            "return": [],
            "arguments": {
                "commit": [
                    "bytes",
                    "int"
                ]
            }
        },
        "get_previous_commit_id": {
            "name": "get_previous_commit_id",
            "location": 326,
            "return": [],
            "arguments": {
                "commit": [
                    "str"
                ]
            }
        },
        "revert_to_master": {
            "name": "revert_to_master",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str"
                ]
            }
        },
        "go_to_commit": {
            "name": "go_to_commit",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str"
                ],
                "commit": [
                    "list[str]",
                    "int",
                    "typing.Pattern",
                    "list[]",
                    "str"
                ],
                "force": [
                    "bool"
                ]
            }
        },
        "create_reset_commit": {
            "name": "create_reset_commit",
            "location": 370,
            "return": [],
            "arguments": {
                "repository": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "delete_bug_buddy_branch": {
            "name": "delete_bug_buddy_branch",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "None",
                    "typing.Callable[, ]"
                ]
            }
        },
        "clone_repository": {
            "name": "clone_repository",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "list[str]"
                ],
                "path": [
                    "str"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/logger.py": {},
    "bug_buddy-master/bug_buddy/runner.py": {
        "get_list_of_tests": {
            "name": "get_list_of_tests",
            "location": 16,
            "return": [],
            "arguments": {
                "commit": [
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "run_test": {
            "name": "run_test",
            "location": 25,
            "return": [],
            "arguments": {
                "test_run": [
                    "list[str]",
                    "str",
                    "typing.Callable[typing.Any, bool]",
                    "bool"
                ],
                "test": [
                    "typing.Mapping",
                    "None",
                    "bool"
                ]
            }
        },
        "run_all_tests": {
            "name": "run_all_tests",
            "location": 49,
            "return": [],
            "arguments": {
                "commit": [
                    "str",
                    "Exception"
                ]
            }
        },
        "_run_tests": {
            "name": "_run_tests",
            "location": 77,
            "return": [
                "str"
            ],
            "arguments": {
                "test_run": [
                    "str"
                ],
                "test_command": [
                    "typing.Mapping",
                    "None",
                    "dict[str, typing.Any]",
                    "list[str]"
                ]
            }
        },
        "library_is_testable": {
            "name": "library_is_testable",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "repository": [
                    "float",
                    "str",
                    "int"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/scorecard.py": {
        "Scorecard.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scorecard.score": {
            "name": "score",
            "location": 25,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scorecard.render": {
            "name": "render",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "None"
                ],
                "clear": [
                    "bool"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/snapshot.py": {
        "snapshot": {
            "name": "snapshot",
            "location": 44,
            "return": [],
            "arguments": {
                "repository": [],
                "commit_type": [],
                "allow_empty": [
                    "bool"
                ],
                "commit_only": [
                    "bool"
                ]
            }
        },
        "snapshot_commit": {
            "name": "snapshot_commit",
            "location": 80,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "repository": [
                    "bool"
                ],
                "commit": [
                    "str",
                    "int"
                ],
                "skip_diffs": [
                    "bool"
                ]
            }
        },
        "save_function_histories": {
            "name": "save_function_histories",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "typing.Type",
                    "str"
                ],
                "commit": [
                    "str"
                ],
                "function_nodes": [],
                "patches": [
                    "str"
                ]
            }
        },
        "_save_altered_file_function_history": {
            "name": "_save_altered_file_function_history",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "list[typing.Optional[int]]",
                    "dict[, ]"
                ],
                "previous_commit": [
                    "bool",
                    "dict[, ]"
                ],
                "altered_file_paths": [
                    "str"
                ],
                "altered_function_nodes": [],
                "patches": [
                    "bool",
                    "str"
                ]
            }
        },
        "create_new_functions_from_nodes": {
            "name": "create_new_functions_from_nodes",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "dict[str, typing.Any]",
                    "typing.Type"
                ],
                "function_nodes": [
                    "list[str]",
                    "list[typing.Union[str,F]]"
                ]
            }
        },
        "_match_nodes_with_history": {
            "name": "_match_nodes_with_history",
            "location": 285,
            "return": [
                "tuple[typing.Union[list[typing.Union[list[typing.Optional[typing.Any]],tuple[int]]],list[int]]]"
            ],
            "arguments": {
                "previous_histories": [],
                "current_nodes": [
                    "list[]",
                    "list[int]"
                ]
            }
        },
        "save_diffs": {
            "name": "save_diffs",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str"
                ],
                "commit": [
                    "str",
                    "dict[str, str]",
                    "bool"
                ],
                "diffs": []
            }
        },
        "create_diffs": {
            "name": "create_diffs",
            "location": 329,
            "return": [
                "list[]"
            ],
            "arguments": {
                "repository": [
                    "int",
                    "dict[str, set[str]]"
                ],
                "commit": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "is_synthetic": [
                    "bool"
                ],
                "function": [
                    "None",
                    "typing.Mapping"
                ],
                "allow_empty": [
                    "bool"
                ],
                "only_unstaged": [
                    "bool"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/source.py": {
        "get_function_nodes_from_repo": {
            "name": "get_function_nodes_from_repo",
            "location": 70,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "get_module_from_file": {
            "name": "get_module_from_file",
            "location": 88,
            "return": [],
            "arguments": {
                "repo_file": []
            }
        },
        "sync_mirror_repo": {
            "name": "sync_mirror_repo",
            "location": 98,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "get_diff_patches": {
            "name": "get_diff_patches",
            "location": 125,
            "return": [],
            "arguments": {
                "commit": [],
                "split_per_method": [],
                "only_unstaged": []
            }
        },
        "_split_patches_by_method": {
            "name": "_split_patches_by_method",
            "location": 160,
            "return": [],
            "arguments": {
                "commit": [],
                "patches": []
            }
        },
        "_split_patch_by_method": {
            "name": "_split_patch_by_method",
            "location": 173,
            "return": [],
            "arguments": {
                "commit": [],
                "patch": []
            }
        },
        "_match_patch_with_history": {
            "name": "_match_patch_with_history",
            "location": 220,
            "return": [],
            "arguments": {
                "patch": [],
                "function_histories": []
            }
        },
        "get_range_of_patch": {
            "name": "get_range_of_patch",
            "location": 291,
            "return": [],
            "arguments": {
                "patch": []
            }
        },
        "get_function_from_patch": {
            "name": "get_function_from_patch",
            "location": 320,
            "return": [],
            "arguments": {
                "repository": [],
                "patch": [],
                "file_path": [],
                "first_line": [],
                "last_line": []
            }
        },
        "apply_diff": {
            "name": "apply_diff",
            "location": 349,
            "return": [],
            "arguments": {
                "diff": []
            }
        },
        "revert_diff": {
            "name": "revert_diff",
            "location": 356,
            "return": [],
            "arguments": {
                "diff": []
            }
        },
        "_apply_diff": {
            "name": "_apply_diff",
            "location": 363,
            "return": [],
            "arguments": {
                "diff": [],
                "revert": []
            }
        },
        "AstTreeWalker.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "repository": [],
                "file_path": [],
                "commit": [],
                "prepend_assert_false": []
            }
        },
        "AstTreeWalker.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/synthetic_alterations.py": {
        "yield_blame_set": {
            "name": "yield_blame_set",
            "location": 73,
            "return": [
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "synthetic_diffs": []
            }
        },
        "generate_synthetic_test_results": {
            "name": "generate_synthetic_test_results",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [],
                "run_limit": [
                    "int",
                    "float"
                ]
            }
        },
        "_get_assert_statement": {
            "name": "_get_assert_statement",
            "location": 191,
            "return": [],
            "arguments": {
                "repo_function": [
                    "typing.Callable[..., None]",
                    "typing.Type",
                    "None"
                ]
            }
        },
        "create_synthetic_alterations": {
            "name": "create_synthetic_alterations",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "get_matching_commit_for_diffs": {
            "name": "get_matching_commit_for_diffs",
            "location": 231,
            "return": [],
            "arguments": {
                "repository": [
                    "bool",
                    "str"
                ],
                "base_synthetic_diffs": []
            }
        },
        "apply_synthetic_diffs": {
            "name": "apply_synthetic_diffs",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "str",
                    "dict[, ]"
                ],
                "diff_subset": [
                    "str"
                ]
            }
        },
        "create_synthetic_diff_for_node": {
            "name": "create_synthetic_diff_for_node",
            "location": 273,
            "return": [],
            "arguments": {
                "repository": [
                    "bool"
                ],
                "commit": [],
                "node": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/watcher.py": {
        "watch": {
            "name": "watch",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "typing.Callable[, ]"
                ],
                "commit_only": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "_watch": {
            "name": "_watch",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "bytes"
                ],
                "commit_only": [
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "ChangeWatchdog.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "int",
                    "float"
                ],
                "commit_only": [
                    "int",
                    "float"
                ]
            }
        },
        "ChangeWatchdog.on_any_event": {
            "name": "on_any_event",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/__init__.py": {},
    "bug_buddy-master/bug_buddy/brain/agent.py": {
        "BugBuddyProcessor.process_state_batch": {
            "name": "process_state_batch",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "batch": [
                    "int",
                    "str",
                    "dict[str, str]"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/brain.py": {
        "Brain.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "int",
                    "float"
                ]
            }
        },
        "Brain.set_commit": {
            "name": "set_commit",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "float"
                ]
            }
        },
        "Brain.act": {
            "name": "act",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/env.py": {
        "ChangeEnvironment.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "str",
                    "None"
                ],
                "synthetic_training": [
                    "bool"
                ]
            }
        },
        "ChangeEnvironment.set_commit": {
            "name": "set_commit",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "str",
                    "int"
                ]
            }
        },
        "ChangeEnvironment.step": {
            "name": "step",
            "location": 79,
            "return": [
                "tuple[dict[, ]]"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ChangeEnvironment.get_reward": {
            "name": "get_reward",
            "location": 164,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "test_result": [
                    "str"
                ]
            }
        },
        "ChangeEnvironment.is_newly_changed_result": {
            "name": "is_newly_changed_result",
            "location": 203,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "test_result": [
                    "str",
                    "None",
                    "typing.Mapping"
                ]
            }
        },
        "ChangeEnvironment.get_current_status": {
            "name": "get_current_status",
            "location": 211,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "str",
                    "bool"
                ]
            }
        },
        "ChangeEnvironment.get_previous_status": {
            "name": "get_previous_status",
            "location": 222,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "str",
                    "bool"
                ]
            }
        },
        "ChangeEnvironment.update_state": {
            "name": "update_state",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_result": [
                    "bool",
                    "typing.Callable[[], str]"
                ]
            }
        },
        "ChangeEnvironment.get_state_test_id": {
            "name": "get_state_test_id",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "test": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "ChangeEnvironment.done": {
            "name": "done",
            "location": 256,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChangeEnvironment.get_synthetic_test_result": {
            "name": "get_synthetic_test_result",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "test_to_run": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "ChangeEnvironment.reset": {
            "name": "reset",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChangeEnvironment.render": {
            "name": "render",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": [
                    "typing.Text"
                ],
                "close": [
                    "bool"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/predict_blame.py": {
        "predict_blames": {
            "name": "predict_blames",
            "location": 59,
            "return": [
                "list[]"
            ],
            "arguments": {
                "commit": [
                    "int"
                ]
            }
        },
        "commit_generator": {
            "name": "commit_generator",
            "location": 68,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "repository_id": [
                    "int",
                    "list[str]",
                    "dict[, ]",
                    "str",
                    "None"
                ],
                "batch_size": [
                    "int",
                    "str",
                    "None"
                ],
                "no_noise_epochs": [
                    "int"
                ]
            }
        },
        "train": {
            "name": "train",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "train_model_keras": {
            "name": "train_model_keras",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "int",
                    "str",
                    "None",
                    "typing.Callable[..., None]",
                    "typing.Any"
                ],
                "model": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "get_model_schema": {
            "name": "get_model_schema",
            "location": 146,
            "return": [],
            "arguments": {}
        },
        "load_blame_model": {
            "name": "load_blame_model",
            "location": 192,
            "return": [
                "None",
                "str"
            ],
            "arguments": {}
        },
        "precision": {
            "name": "precision",
            "location": 208,
            "return": [],
            "arguments": {
                "y_true": [
                    "str",
                    "int"
                ],
                "y_pred": [
                    "int",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        },
        "recall": {
            "name": "recall",
            "location": 221,
            "return": [],
            "arguments": {
                "y_true": [
                    "str",
                    "list[]",
                    "typing.Sequence[typing.Mapping]",
                    "float"
                ],
                "y_pred": [
                    "int"
                ]
            }
        },
        "f1_score": {
            "name": "f1_score",
            "location": 233,
            "return": [
                "int"
            ],
            "arguments": {
                "y_true": [
                    "typing.Mapping",
                    "dict[str, typing.Any]",
                    "bool",
                    "set[str]",
                    "None"
                ],
                "y_pred": [
                    "typing.Mapping",
                    "dict[str, typing.Any]",
                    "bool",
                    "set[str]",
                    "None"
                ]
            }
        },
        "predict_blame": {
            "name": "predict_blame",
            "location": 244,
            "return": [],
            "arguments": {
                "test_failure": [
                    "bool",
                    "typing.Callable[, ]",
                    "tuple[]"
                ]
            }
        },
        "test_failure_to_feature": {
            "name": "test_failure_to_feature",
            "location": 263,
            "return": [],
            "arguments": {
                "test_failure": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "bytes"
                ],
                "add_noise": [
                    "bool"
                ],
                "use_cache": [
                    "bool"
                ]
            }
        },
        "test_failure_to_label": {
            "name": "test_failure_to_label",
            "location": 334,
            "return": [],
            "arguments": {
                "test_failure": [
                    "str",
                    "int"
                ],
                "use_cache": [
                    "bool"
                ]
            }
        },
        "add_test_failure_noise": {
            "name": "add_test_failure_noise",
            "location": 355,
            "return": [
                "str",
                "dict[, ]",
                "int"
            ],
            "arguments": {
                "test_failure": [
                    "str",
                    "dict[str, str]"
                ],
                "input_vector": [
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "commit_to_blame_matrix_labels": {
            "name": "commit_to_blame_matrix_labels",
            "location": 369,
            "return": [],
            "arguments": {
                "commit": [
                    "dict[, ]",
                    "typing.Type",
                    "bool"
                ]
            }
        },
        "function_changed_since_test_passed": {
            "name": "function_changed_since_test_passed",
            "location": 409,
            "return": [
                "bool"
            ],
            "arguments": {
                "test_failure_result": [
                    "list[str]",
                    "typing.Callable[, ]"
                ],
                "function": [
                    "int"
                ],
                "previous_commits": [
                    "list[]"
                ]
            }
        },
        "validate": {
            "name": "validate",
            "location": 459,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "int"
                ]
            }
        },
        "get_validation_data": {
            "name": "get_validation_data",
            "location": 469,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "int"
                ]
            }
        },
        "commit_to_features": {
            "name": "commit_to_features",
            "location": 505,
            "return": [
                "list[]"
            ],
            "arguments": {
                "commit": [
                    "bool",
                    "None",
                    "str"
                ],
                "add_noise": [
                    "bool"
                ]
            }
        },
        "commit_to_labels": {
            "name": "commit_to_labels",
            "location": 518,
            "return": [
                "list[]"
            ],
            "arguments": {
                "commit": [
                    "str",
                    "list[str]",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "to_tf_float": {
            "name": "to_tf_float",
            "location": 530,
            "return": [],
            "arguments": {
                "value": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "write_records": {
            "name": "write_records",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "cache_test_results": {
            "name": "cache_test_results",
            "location": 563,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "int"
                ]
            }
        },
        "tensor_feeder": {
            "name": "tensor_feeder",
            "location": 583,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "bool",
                    "None",
                    "typing.Collection",
                    "list[str]"
                ],
                "perform_shuffle": [
                    "bool"
                ],
                "repeat_count": [
                    "int"
                ],
                "batch_size": [
                    "int"
                ]
            }
        },
        "train_model_as_estimator": {
            "name": "train_model_as_estimator",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {
                "model": [
                    "int"
                ]
            }
        },
        "tensor_feeder.parse": {
            "name": "parse",
            "location": 593,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "serialized": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/predict_tests.py": {
        "commit_generator": {
            "name": "commit_generator",
            "location": 27,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "repository_id": [
                    "str",
                    "int",
                    "typing.MutableMapping"
                ],
                "batch_size": [
                    "int",
                    "str"
                ]
            }
        },
        "train": {
            "name": "train",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "float"
                ]
            }
        },
        "predict_test_output": {
            "name": "predict_test_output",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": []
            }
        },
        "validate": {
            "name": "validate",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "int"
                ]
            }
        },
        "get_validation_data": {
            "name": "get_validation_data",
            "location": 130,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "int"
                ]
            }
        },
        "commit_to_test_failure_label": {
            "name": "commit_to_test_failure_label",
            "location": 166,
            "return": [],
            "arguments": {
                "commit": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/rl_brain.py": {
        "synthetic_train": {
            "name": "synthetic_train",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "Brain.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "str",
                    "int",
                    "None",
                    "list[str]",
                    "typing.Sequence[S]",
                    "typing.Sequence[ticketing.models.tickeTicket]",
                    "tuple[int]"
                ]
            }
        },
        "Brain.train": {
            "name": "train",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "typing.NamedTuple",
                    "dict[str, str]",
                    "str"
                ]
            }
        },
        "Brain.run": {
            "name": "run",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/utils.py": {
        "get_output_dir": {
            "name": "get_output_dir",
            "location": 41,
            "return": [],
            "arguments": {
                "file_name": []
            }
        },
        "cache_commits": {
            "name": "cache_commits",
            "location": 60,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "get_input_shape": {
            "name": "get_input_shape",
            "location": 75,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "get_test_function_blame_count": {
            "name": "get_test_function_blame_count",
            "location": 84,
            "return": [],
            "arguments": {
                "function": [],
                "test": []
            }
        },
        "get_blame_counts_for_function": {
            "name": "get_blame_counts_for_function",
            "location": 97,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "get_blame_counts_for_tests": {
            "name": "get_blame_counts_for_tests",
            "location": 116,
            "return": [],
            "arguments": {
                "test": []
            }
        },
        "commit_to_tensor": {
            "name": "commit_to_tensor",
            "location": 135,
            "return": [],
            "arguments": {
                "commit": []
            }
        },
        "get_previous_commits": {
            "name": "get_previous_commits",
            "location": 216,
            "return": [],
            "arguments": {
                "commit": [],
                "num_commits": []
            }
        },
        "commit_to_state": {
            "name": "commit_to_state",
            "location": 233,
            "return": [],
            "arguments": {
                "commit": [],
                "max_length": []
            }
        },
        "set_functions_altered_noise": {
            "name": "set_functions_altered_noise",
            "location": 260,
            "return": [],
            "arguments": {
                "state_tensor": [],
                "num_noise": []
            }
        },
        "set_tests_not_run_noise": {
            "name": "set_tests_not_run_noise",
            "location": 279,
            "return": [],
            "arguments": {
                "state_tensor": [],
                "num_noise": []
            }
        },
        "get_commits": {
            "name": "get_commits",
            "location": 301,
            "return": [],
            "arguments": {
                "repository": [],
                "num_commits": [],
                "synthetic": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/brain/__init__.py": {},
    "bug_buddy-master/bug_buddy/schema/aliases.py": {},
    "bug_buddy-master/bug_buddy/schema/base.py": {},
    "bug_buddy-master/bug_buddy/schema/blame.py": {
        "Blame.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "diff": [
                    "int",
                    "dict[str, object]"
                ],
                "test_result": [
                    "list[]",
                    "str",
                    "bool"
                ]
            }
        },
        "Blame.__repr__": {
            "name": "__repr__",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/commit.py": {
        "Commit.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "str",
                    "int",
                    "None"
                ],
                "commit_id": [
                    "str",
                    "set[int]"
                ],
                "branch": [
                    "str",
                    "int",
                    "None"
                ],
                "commit_type": []
            }
        },
        "Commit.get_matching_test_result": {
            "name": "get_matching_test_result",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "test_result": [
                    "str",
                    "bool"
                ]
            }
        },
        "Commit.causes_test_failures": {
            "name": "causes_test_failures",
            "location": 122,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.get_function_histories": {
            "name": "get_function_histories",
            "location": 128,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "int",
                    "str",
                    "None",
                    "float"
                ],
                "start_range": [
                    "int",
                    "str",
                    "None",
                    "float"
                ],
                "end_range": [
                    "int",
                    "str",
                    "None",
                    "float"
                ]
            }
        },
        "Commit.get_corresponding_function": {
            "name": "get_corresponding_function",
            "location": 140,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "bool",
                    "str",
                    "None",
                    "float"
                ],
                "start_range": [
                    "str",
                    "int",
                    "None",
                    "list[str]",
                    "dict[str, 'LabwareDefinition']"
                ],
                "end_range": [
                    "str",
                    "int",
                    "None",
                    "list[str]",
                    "dict[str, 'LabwareDefinition']"
                ]
            }
        },
        "Commit.get_function_for_node": {
            "name": "get_function_for_node",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "node": [
                    "dict[, ]"
                ]
            }
        },
        "Commit.is_synthetic": {
            "name": "is_synthetic",
            "location": 185,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.blames": {
            "name": "blames",
            "location": 192,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.latest_test_run": {
            "name": "latest_test_run",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.earliest_test_run": {
            "name": "earliest_test_run",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.commit_tensor": {
            "name": "commit_tensor",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.needs_blaming": {
            "name": "needs_blaming",
            "location": 229,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.num_tests": {
            "name": "num_tests",
            "location": 236,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.functions": {
            "name": "functions",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.test_failures": {
            "name": "test_failures",
            "location": 252,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.num_test_failures": {
            "name": "num_test_failures",
            "location": 266,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.failed_test_results": {
            "name": "failed_test_results",
            "location": 274,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.num_functions": {
            "name": "num_functions",
            "location": 288,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.num_features": {
            "name": "num_features",
            "location": 295,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.input_shape": {
            "name": "input_shape",
            "location": 302,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.test_result_prediction": {
            "name": "test_result_prediction",
            "location": 309,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.sorted_tests": {
            "name": "sorted_tests",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Commit.has_same_test_result_output": {
            "name": "has_same_test_result_output",
            "location": 328,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "test_result": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "bool"
                ],
                "status": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "set[]",
                    "list[str]"
                ]
            }
        },
        "Commit.summary": {
            "name": "summary",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ],
                "blame": [
                    "bool"
                ],
                "prediction": [
                    "bool"
                ],
                "edits": [
                    "bool"
                ]
            }
        },
        "Commit.blame_summary": {
            "name": "blame_summary",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ]
            }
        },
        "Commit.prediction_summary": {
            "name": "prediction_summary",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ]
            }
        },
        "Commit.__repr__": {
            "name": "__repr__",
            "location": 411,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/diff.py": {
        "Diff.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "str",
                    "bytes",
                    "None",
                    "list[str]"
                ],
                "first_line": [
                    "str",
                    "bytes",
                    "None",
                    "list[str]"
                ],
                "last_line": [
                    "str",
                    "bytes",
                    "None",
                    "list[str]"
                ],
                "patch": [
                    "str",
                    "bytes",
                    "None",
                    "list[str]"
                ],
                "file_path": [
                    "str"
                ],
                "is_synthetic": [
                    "bool"
                ],
                "function": [
                    "None",
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "Diff.size_difference": {
            "name": "size_difference",
            "location": 74,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Diff.__repr__": {
            "name": "__repr__",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/function.py": {
        "Function.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "list[str]",
                    "dict[, ]",
                    "int",
                    "bytes",
                    "None",
                    "typing.Callable[str, str]"
                ],
                "file_path": [
                    "str",
                    "None"
                ]
            }
        },
        "Function.latest_history": {
            "name": "latest_history",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Function.abs_path": {
            "name": "abs_path",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Function.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/function_history.py": {
        "FunctionHistory.name": {
            "name": "name",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionHistory.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "str",
                    "None",
                    "list[float]",
                    "int"
                ],
                "commit": [
                    "str",
                    "None",
                    "list[float]",
                    "int"
                ],
                "node": [
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]",
                    "typing.Type"
                ],
                "first_line": [
                    "str",
                    "None",
                    "list[float]",
                    "int"
                ],
                "last_line": [
                    "str",
                    "None",
                    "list[float]",
                    "int"
                ]
            }
        },
        "FunctionHistory.abs_path": {
            "name": "abs_path",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionHistory.remove_line": {
            "name": "remove_line",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "int"
                ]
            }
        },
        "FunctionHistory.prepend_statement": {
            "name": "prepend_statement",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "statement": [],
                "offset": [
                    "int"
                ]
            }
        },
        "FunctionHistory.altered": {
            "name": "altered",
            "location": 136,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionHistory.__repr__": {
            "name": "__repr__",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionHistory.prepend_statement._is_comment": {
            "name": "_is_comment",
            "location": 94,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/function_to_test_link.py": {
        "FunctionToTestLink.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "function_history": [
                    "list[int]",
                    "None",
                    "typing.Sequence[]",
                    "bool"
                ],
                "test_result": [
                    "str",
                    "None"
                ]
            }
        },
        "FunctionToTestLink.__repr__": {
            "name": "__repr__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/line.py": {
        "Line.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "starting_commit": [
                    "int"
                ],
                "content": [
                    "str",
                    "dict[, ]",
                    "bool",
                    "list[str]",
                    "bytes"
                ],
                "method": [
                    "int",
                    "None",
                    "typing.Sequence[int]",
                    "typing.Iterable[typing.Iterable[]]"
                ],
                "line_number": [
                    "int",
                    "None",
                    "typing.Sequence[int]",
                    "typing.Iterable[typing.Iterable[]]"
                ],
                "file_path": [
                    "str"
                ]
            }
        },
        "Line.__repr__": {
            "name": "__repr__",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/repository.py": {
        "Repository.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "url": [
                    "str"
                ],
                "src_path": [
                    "str",
                    "None"
                ],
                "initialize_commands": [
                    "str"
                ],
                "test_commands": [
                    "str"
                ],
                "src_directory": [
                    "str"
                ],
                "mirror_path": [
                    "None",
                    "str"
                ],
                "ignored_files": [
                    "str"
                ]
            }
        },
        "Repository.src_path": {
            "name": "src_path",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repository.mirror_path": {
            "name": "mirror_path",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repository.path": {
            "name": "path",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repository.get_src_files": {
            "name": "get_src_files",
            "location": 116,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "filter_file_type": [
                    "None",
                    "str"
                ]
            }
        },
        "Repository.ignored_files": {
            "name": "ignored_files",
            "location": 137,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repository.base_synthetic_commits": {
            "name": "base_synthetic_commits",
            "location": 144,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repository.get_synthetic_diffs": {
            "name": "get_synthetic_diffs",
            "location": 151,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repository.__repr__": {
            "name": "__repr__",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/test.py": {
        "Test.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "name": [
                    "str",
                    "dict[, ]"
                ],
                "file": [
                    "dict[, ]",
                    "int",
                    "list[typing.Mapping]"
                ],
                "classname": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Test.failing_instances": {
            "name": "failing_instances",
            "location": 43,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/test_result.py": {
        "TestResult.failed": {
            "name": "failed",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResult.passed": {
            "name": "passed",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResult.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "str",
                    "int",
                    "list[str]",
                    "typing.IO",
                    "None",
                    "dict[str, object]"
                ],
                "test_run": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "status": [
                    "bool",
                    "list[list[str]]",
                    "float",
                    "typing.Mapping",
                    "None",
                    "typing.Sequence[]"
                ],
                "time": [
                    "bool",
                    "list[list[str]]",
                    "float",
                    "typing.Mapping",
                    "None",
                    "typing.Sequence[]"
                ]
            }
        },
        "TestResult.blamed_function_prediction": {
            "name": "blamed_function_prediction",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResult.blamed_function_prediction_dict": {
            "name": "blamed_function_prediction_dict",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestResult.predicted_blamed_functions": {
            "name": "predicted_blamed_functions",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestResult.cached_function_blame_feature": {
            "name": "cached_function_blame_feature",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResult.cached_function_blame_label": {
            "name": "cached_function_blame_label",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResult.summary": {
            "name": "summary",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ]
            }
        },
        "TestResult.blame_summary": {
            "name": "blame_summary",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ]
            }
        },
        "TestResult.__repr__": {
            "name": "__repr__",
            "location": 175,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/test_run.py": {
        "TestRun.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "int",
                    "dict[, ]"
                ],
                "start_timestamp": []
            }
        },
        "TestRun.num_passed_tests": {
            "name": "num_passed_tests",
            "location": 48,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.passed_tests": {
            "name": "passed_tests",
            "location": 55,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.num_failed_tests": {
            "name": "num_failed_tests",
            "location": 63,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.test_results_ordered": {
            "name": "test_results_ordered",
            "location": 70,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.test_failures": {
            "name": "test_failures",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRun.failed_tests": {
            "name": "failed_tests",
            "location": 84,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.num_skipped_tests": {
            "name": "num_skipped_tests",
            "location": 92,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.skipped_tests": {
            "name": "skipped_tests",
            "location": 99,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRun.summary": {
            "name": "summary",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "indent": [
                    "int"
                ]
            }
        },
        "TestRun.__repr__": {
            "name": "__repr__",
            "location": 115,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/bug_buddy/schema/__init__.py": {},
    "bug_buddy-master/test/test_collection.py": {
        "TestCollection.test_pytest_create_results_from_junit_xml": {
            "name": "test_pytest_create_results_from_junit_xml",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/test/test_synthetic_alterations.py": {
        "TestSyntheticAlterations.test_get_routines_from_file": {
            "name": "test_get_routines_from_file",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyntheticAlterations.test_get_routines_from_repo": {
            "name": "test_get_routines_from_repo",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyntheticAlterations.test_edit_random_routines": {
            "name": "test_edit_random_routines",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_random": []
            }
        }
    },
    "bug_buddy-master/test/__init__.py": {
        "BugBuddyTest.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BugBuddyTest.populate_example_data": {
            "name": "populate_example_data",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/test/testenv/altered_example_repo/src_dir/fun.py": {
        "present_wrapper": {
            "name": "present_wrapper",
            "location": 6,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "pets_are_great": {
            "name": "pets_are_great",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "mk": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "here": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "are": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "multiple": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "params": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ]
            }
        },
        "present_wrapper.wrapper": {
            "name": "wrapper",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pets_are_great._can_we_handle_func_within_func": {
            "name": "_can_we_handle_func_within_func",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "yes": []
            }
        }
    },
    "bug_buddy-master/test/testenv/altered_example_repo/src_dir/moves.py": {
        "BigMoves.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BigMoves.much": {
            "name": "much",
            "location": 16,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BigMoves.progress": {
            "name": "progress",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/test/testenv/altered_example_repo/src_dir/__init__.py": {},
    "bug_buddy-master/test/testenv/example_repo/src_dir/fun.py": {
        "present_wrapper": {
            "name": "present_wrapper",
            "location": 6,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "pets_are_great": {
            "name": "pets_are_great",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "mk": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "here": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "are": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "multiple": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ],
                "params": [
                    "int",
                    "None",
                    "list[float]",
                    "float"
                ]
            }
        },
        "present_wrapper.wrapper": {
            "name": "wrapper",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pets_are_great._can_we_handle_func_within_func": {
            "name": "_can_we_handle_func_within_func",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "yes": []
            }
        }
    },
    "bug_buddy-master/test/testenv/example_repo/src_dir/moves.py": {
        "BigMoves.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BigMoves.much": {
            "name": "much",
            "location": 15,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BigMoves.progress": {
            "name": "progress",
            "location": 21,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bug_buddy-master/test/testenv/example_repo/src_dir/__init__.py": {}
}
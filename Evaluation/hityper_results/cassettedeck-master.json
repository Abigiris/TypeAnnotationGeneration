{
    "cassettedeck-master/setup.py": {},
    "cassettedeck-master/cassettedeck/cassette.py": {},
    "cassettedeck-master/cassettedeck/deck.py": {
        "CassetteDeck.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "cassette_library_dir": [],
                "ignore_localhost": [],
                "ignore_hosts": [],
                "mode": [],
                "mocked_services": []
            }
        },
        "CassetteDeck.use_cassette": {
            "name": "use_cassette",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "cassette": [],
                "mode": [],
                "custom_matchers": []
            }
        },
        "CassetteDeck.__enter__": {
            "name": "__enter__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CassetteDeck.__exit__": {
            "name": "__exit__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        }
    },
    "cassettedeck-master/cassettedeck/request.py": {},
    "cassettedeck-master/cassettedeck/service.py": {
        "BaseService.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseService.clear": {
            "name": "clear",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseService.matches": {
            "name": "matches",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "list[str]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "cassettedeck-master/cassettedeck/store.py": {
        "CassetteStore.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cassette_library_dir": [
                    "None",
                    "typing.TextIO",
                    "str",
                    "dict[str, str]",
                    "typing.Callable[float, None]"
                ],
                "ignore_hosts": [
                    "tuple[]"
                ],
                "ignore_localhost": [
                    "bool"
                ],
                "record_mode": [
                    "typing.Text"
                ],
                "custom_matchers": [
                    "None",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "CassetteStore.add_ignored_host": {
            "name": "add_ignored_host",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "CassetteStore.library_dir": {
            "name": "library_dir",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "library_dir": []
            }
        },
        "CassetteStore.match_on": {
            "name": "match_on",
            "location": 56,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CassetteStore.load_cassette": {
            "name": "load_cassette",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "CassetteStore.store_cassette": {
            "name": "store_cassette",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cassette": []
            }
        },
        "CassetteStore.use_cassette": {
            "name": "use_cassette",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cassette": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "CassetteStore.skip": {
            "name": "skip",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "float",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "CassetteStore.build_response": {
            "name": "build_response",
            "location": 138,
            "return": [
                "tuple[typing.Optional[bool]]",
                "tuple[typing.Union[ClientResponse,bool]]"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "url": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ],
                "params": [
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "data": [],
                "headers": [
                    "dict[, ]",
                    "None",
                    "str",
                    "typing.Mapping"
                ]
            }
        }
    },
    "cassettedeck-master/cassettedeck/vcr.py": {
        "vcr": {
            "name": "vcr",
            "location": 10,
            "return": [],
            "arguments": {
                "test_case": []
            }
        }
    },
    "cassettedeck-master/cassettedeck/__init__.py": {},
    "cassettedeck-master/cassettedeck/tests/conftest.py": {},
    "cassettedeck-master/cassettedeck/tests/fixtures.py": {
        "ctd": {
            "name": "ctd",
            "location": 12,
            "return": [
                "typing.Generator[CassetteDeck]"
            ],
            "arguments": {}
        },
        "local_server": {
            "name": "local_server",
            "location": 21,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "ctd_ignore_localhost": {
            "name": "ctd_ignore_localhost",
            "location": 31,
            "return": [
                "typing.Generator[CassetteDeck]"
            ],
            "arguments": {
                "local_server": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "ctd_custom_dir": {
            "name": "ctd_custom_dir",
            "location": 52,
            "return": [
                "typing.Generator[CassetteDeck]"
            ],
            "arguments": {}
        },
        "MockedService.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockedService.matches": {
            "name": "matches",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        }
    },
    "cassettedeck-master/cassettedeck/tests/test_vcr.py": {},
    "cassettedeck-master/cassettedeck/tests/test_works.py": {
        "CustomMatcher": {
            "name": "CustomMatcher",
            "location": 152,
            "return": [
                "bool"
            ],
            "arguments": {
                "r1": [
                    "str",
                    "list[str]",
                    "set[int]",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]",
                    "float",
                    "None"
                ],
                "r2": [
                    "str",
                    "list[str]",
                    "set[int]",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]",
                    "float",
                    "None"
                ]
            }
        }
    },
    "cassettedeck-master/cassettedeck/tests/__init__.py": {}
}
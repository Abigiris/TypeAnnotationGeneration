{
    "catalog-master/catalogclient/client.py": {
        "_main": {
            "name": "_main",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ClientTransport.get_json": {
            "name": "get_json",
            "location": 17,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "typing.Mapping",
                    "None"
                ]
            }
        },
        "RequestsTransport.get_json": {
            "name": "get_json",
            "location": 24,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "CatalogClient.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_url": [
                    "str",
                    "None",
                    "typing.Callable[str, typing.Any]"
                ],
                "transport": [
                    "list[tuple[typing.Union[int,int]]]",
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "CatalogClient.base_url": {
            "name": "base_url",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CatalogClient.get_items": {
            "name": "get_items",
            "location": 51,
            "return": [
                "dict[str, str]",
                "dict[int, str]",
                "typing.Pattern"
            ],
            "arguments": {
                "self": []
            }
        },
        "CatalogClient.get_item": {
            "name": "get_item",
            "location": 59,
            "return": [
                "None",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "sku": [
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "None"
                ]
            }
        },
        "CatalogClient.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogclient/tests/client_test.py": {
        "ClientTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_items": {
            "name": "test_get_items",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_item": {
            "name": "test_get_item",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_no_item": {
            "name": "test_get_no_item",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockTransport.get_json": {
            "name": "get_json",
            "location": 33,
            "return": [
                "list[dict[typing.Text, typing.Union[int,typing.Text]]]",
                "dict[typing.Text, typing.Union[int,typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        }
    },
    "catalog-master/catalogserver/filedb.py": {
        "FileDB.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "FileDB.get_item": {
            "name": "get_item",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sku": [
                    "int",
                    "tuple[bytes]",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "FileDB.get_items": {
            "name": "get_items",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileDB.filename": {
            "name": "filename",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileDB.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogserver/server.py": {
        "get_items": {
            "name": "get_items",
            "location": 16,
            "return": [
                "HTTPResponse"
            ],
            "arguments": {
                "sku": []
            }
        },
        "initdb": {
            "name": "initdb",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "catalog_file": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "catalog-master/catalogserver/tests/filedb_test.py": {
        "FileDBTestCase.test_file_not_exists": {
            "name": "test_file_not_exists",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_empty": {
            "name": "test_empty",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_schema_version_items": {
            "name": "test_schema_version_items",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_schema_version_item": {
            "name": "test_schema_version_item",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogserver/tests/server_test.py": {
        "_parsed_json": {
            "name": "_parsed_json",
            "location": 28,
            "return": [
                "dict[typing.Any, str]",
                "typing.OrderedDict",
                "typing.Type",
                "str",
                "dict[int, str]",
                "dict[, ]"
            ],
            "arguments": {
                "resp": [
                    "dict[, ]",
                    "typing.Callable[[], None]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ServerTestCase.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_items": {
            "name": "test_get_items",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_item": {
            "name": "test_get_item",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_none": {
            "name": "test_get_none",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "cayenne-benchmarks-master/run_benchmarks.py": {
        "get_benchmark_cmd": {
            "name": "get_benchmark_cmd",
            "location": 11,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "lib": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "model": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "algo": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "nrep": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "lib": [
                    "str",
                    "int",
                    "tuple[str]"
                ],
                "model": [
                    "str",
                    "int",
                    "tuple[str]"
                ],
                "algo": [
                    "str",
                    "int",
                    "tuple[str]"
                ],
                "nrep": [
                    "str",
                    "int",
                    "tuple[str]"
                ],
                "timeout": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "float"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/run_simulations.py": {
        "wrapper": {
            "name": "wrapper",
            "location": 15,
            "return": [],
            "arguments": {
                "x": [
                    "str",
                    "float",
                    "typing.Callable[, ]",
                    "collections.abc.Awaitable[T]",
                    "list[str]",
                    "bool"
                ],
                "func": [
                    "str",
                    "float",
                    "typing.Callable[, ]",
                    "collections.abc.Awaitable[T]",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "get_cmd": {
            "name": "get_cmd",
            "location": 19,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lib": [
                    "str",
                    "int",
                    "None"
                ],
                "model": [
                    "float",
                    "dict[str, typing.Any]"
                ],
                "algo": [
                    "int",
                    "str"
                ],
                "nrep": [
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "results_check": {
            "name": "results_check",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "lib": [
                    "dict[, ]",
                    "bytes",
                    "int",
                    "None",
                    "str"
                ],
                "model": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "algo": [
                    "str",
                    "list[str]",
                    "typing.Mapping",
                    "dict[str, list[str]]"
                ],
                "nrep": []
            }
        },
        "run_simulation": {
            "name": "run_simulation",
            "location": 52,
            "return": [
                "dict[typing.Text, typing.Union[str,dict[str, typing.Any],int]]"
            ],
            "arguments": {
                "lib": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "model": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "algo": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "nrep": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "update_file": {
            "name": "update_file",
            "location": 90,
            "return": [],
            "arguments": {
                "file_name": [
                    "str",
                    "None"
                ],
                "data_list": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "lib": [
                    "list[str]",
                    "int",
                    "set[str]",
                    "list[dict[, ]]"
                ],
                "models": [
                    "list[]",
                    "str"
                ],
                "algos": [
                    "list[]",
                    "str"
                ],
                "nrep": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "nprocs": [
                    "bool",
                    "float",
                    "str",
                    "None"
                ],
                "save": [
                    "bool",
                    "float",
                    "str",
                    "None"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/accuracy/accuracy.py": {
        "test_accuracy": {
            "name": "test_accuracy",
            "location": 18,
            "return": [
                "list[None]"
            ],
            "arguments": {
                "id_": [
                    "str",
                    "int"
                ],
                "library": [
                    "str",
                    "int"
                ],
                "algo": [
                    "str",
                    "int"
                ],
                "nrep": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/accuracy/helpers.py": {
        "read_results_analytical": {
            "name": "read_results_analytical",
            "location": 14,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "test_id": [
                    "str",
                    "int"
                ]
            }
        },
        "read_results_analytical_2sp": {
            "name": "read_results_analytical_2sp",
            "location": 54,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "test_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_results_from_index": {
            "name": "get_results_from_index",
            "location": 99,
            "return": [
                "list[]"
            ],
            "arguments": {
                "res": [],
                "ind": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[int,int]]]",
                    "list[]",
                    "None"
                ]
            }
        },
        "calculate_zy": {
            "name": "calculate_zy",
            "location": 122,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "res": [
                    "int",
                    "typing.Sequence[int]",
                    "float"
                ],
                "time_arr": [],
                "mu_analytical": [
                    "list[int]"
                ],
                "std_analytical": [
                    "list[float]",
                    "dict[int, dict[int, typing.Any]]",
                    "typing.Callable[, ]"
                ],
                "saved_results_interpolated": [
                    "bool"
                ]
            }
        },
        "calculate_ms_ratios": {
            "name": "calculate_ms_ratios",
            "location": 188,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "mu_obs": [
                    "int"
                ],
                "mu_analytical": [
                    "int"
                ],
                "std_obs": [
                    "int"
                ],
                "std_analytical": [
                    "int"
                ]
            }
        },
        "calculate_zy_2sp": {
            "name": "calculate_zy_2sp",
            "location": 215,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "res": [
                    "int",
                    "typing.Sequence[int]",
                    "float"
                ],
                "time_arr": [],
                "mu_analytical": [],
                "std_analytical": [
                    "list[float]"
                ],
                "saved_results_interpolated": [
                    "bool",
                    "float",
                    "str",
                    "None"
                ]
            }
        },
        "get_highest_rep_in_path": {
            "name": "get_highest_rep_in_path",
            "location": 283,
            "return": [
                "int"
            ],
            "arguments": {
                "this_path": [
                    "str"
                ]
            }
        },
        "read_results_simulation": {
            "name": "read_results_simulation",
            "location": 291,
            "return": [
                "Results"
            ],
            "arguments": {
                "model": [
                    "typing.Text"
                ],
                "library": [
                    "typing.Text"
                ],
                "algo": [
                    "typing.Text"
                ],
                "n_reps": [
                    "None",
                    "tuple[typing.Union[str,int]]",
                    "tuple[typing.Union[float,float]]",
                    "dict[, ]",
                    "int"
                ],
                "res_folder": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "read_results_simulation_2sp": {
            "name": "read_results_simulation_2sp",
            "location": 347,
            "return": [
                "Results"
            ],
            "arguments": {
                "model": [
                    "typing.Text"
                ],
                "library": [
                    "typing.Text"
                ],
                "algo": [
                    "typing.Text"
                ],
                "n_reps": [
                    "None",
                    "tuple[typing.Union[str,int]]",
                    "tuple[typing.Union[float,float]]",
                    "dict[, ]",
                    "int"
                ],
                "res_folder": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "make_zy_plot": {
            "name": "make_zy_plot",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "time_pts": [
                    "bool"
                ],
                "value_obs": [
                    "list[int]"
                ],
                "value_analytical": [
                    "float",
                    "None"
                ],
                "stat": [],
                "stat_thresh": [
                    "float",
                    "int"
                ],
                "ax": []
            }
        },
        "make_ratio_plot": {
            "name": "make_ratio_plot",
            "location": 441,
            "return": [
                "None"
            ],
            "arguments": {
                "time_pts": [
                    "float",
                    "list[int]"
                ],
                "value_obs": [
                    "list[]"
                ],
                "value_analytical": [
                    "list[]"
                ],
                "stat_thresh": [
                    "list[]"
                ],
                "ax": []
            }
        },
        "make_plot": {
            "name": "make_plot",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "time_arr": [
                    "float",
                    "str",
                    "None"
                ],
                "mu_analytical": [
                    "int",
                    "float"
                ],
                "std_analytical": [
                    "float"
                ],
                "mu_obs": [
                    "int",
                    "float"
                ],
                "std_obs": [
                    "float"
                ],
                "Z": [
                    "int",
                    "float"
                ],
                "Y": [
                    "float"
                ],
                "plt_name": [
                    "str"
                ]
            }
        },
        "make_plot_2sp": {
            "name": "make_plot_2sp",
            "location": 539,
            "return": [
                "None"
            ],
            "arguments": {
                "time_arr": [
                    "float",
                    "str",
                    "None"
                ],
                "mu_analytical": [],
                "std_analytical": [],
                "mu_obs": [],
                "std_obs": [],
                "Z": [],
                "Y": [],
                "plt_name": [
                    "str"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/accuracy/__init__.py": {},
    "cayenne-benchmarks-master/cayenne_test/make_cayenne_results.py": {
        "run_model": {
            "name": "run_model",
            "location": 13,
            "return": [],
            "arguments": {
                "model_id": [
                    "int",
                    "bytes"
                ],
                "algorithm": [
                    "int",
                    "str"
                ],
                "n_rep": [
                    "int",
                    "str"
                ]
            }
        },
        "write_model": {
            "name": "write_model",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "str"
                ],
                "dir_path": [
                    "str",
                    "int",
                    "None",
                    "Exception"
                ],
                "n_reps": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/cayenne_test/models.py": {
        "setup_00001": {
            "name": "setup_00001",
            "location": 11,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00003": {
            "name": "setup_00003",
            "location": 34,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00004": {
            "name": "setup_00004",
            "location": 57,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00005": {
            "name": "setup_00005",
            "location": 80,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00011": {
            "name": "setup_00011",
            "location": 103,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00020": {
            "name": "setup_00020",
            "location": 128,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00021": {
            "name": "setup_00021",
            "location": 152,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00022": {
            "name": "setup_00022",
            "location": 175,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00023": {
            "name": "setup_00023",
            "location": 198,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00030": {
            "name": "setup_00030",
            "location": 221,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00031": {
            "name": "setup_00031",
            "location": 248,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00037": {
            "name": "setup_00037",
            "location": 275,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00038": {
            "name": "setup_00038",
            "location": 298,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "setup_00039": {
            "name": "setup_00039",
            "location": 326,
            "return": [
                "tuple[typing.Union[list[typing.Text],int]]"
            ],
            "arguments": {}
        },
        "get_model": {
            "name": "get_model",
            "location": 354,
            "return": [],
            "arguments": {
                "model_id": [
                    "str"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/cayenne_test/simulation.py": {},
    "cayenne-benchmarks-master/notebooks/utils.py": {
        "make_accuracy_df": {
            "name": "make_accuracy_df",
            "location": 65,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "typing.Sequence[str]"
                ],
                "use_ratio_for_approx": [
                    "bool"
                ]
            }
        },
        "make_benchmark_df": {
            "name": "make_benchmark_df",
            "location": 117,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "plot_accuracy_barplot": {
            "name": "plot_accuracy_barplot",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "df": [],
                "hue": [
                    "typing.Text"
                ]
            }
        },
        "plot_benchmark_barplot": {
            "name": "plot_benchmark_barplot",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "df": []
            }
        }
    },
    "cayenne-benchmarks-master/tellurium_test/make_tel_results.py": {
        "run_model": {
            "name": "run_model",
            "location": 13,
            "return": [
                "list[]"
            ],
            "arguments": {
                "id_": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "n_reps": [
                    "int",
                    "typing.Sequence[int]"
                ]
            }
        },
        "write_model": {
            "name": "write_model",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "int",
                    "str",
                    "None"
                ],
                "dir_path": [
                    "str",
                    "int",
                    "None",
                    "Exception"
                ],
                "n_reps": [
                    "int",
                    "typing.Iterable[str]",
                    "str"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/tellurium_test/models.py": {
        "get_model": {
            "name": "get_model",
            "location": 159,
            "return": [],
            "arguments": {
                "model_id": [
                    "str"
                ]
            }
        }
    },
    "cayenne-benchmarks-master/tellurium_test/simulation.py": {
        "te_simulation": {
            "name": "te_simulation",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "plot_results": {
            "name": "plot_results",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cayenne-benchmarks-master/tests/test_helpers.py": {
        "test_rr_analytical": {
            "name": "test_rr_analytical",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rr_analytical_2sp": {
            "name": "test_rr_analytical_2sp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_highest_rep_in_path": {
            "name": "test_highest_rep_in_path",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rr_simulation": {
            "name": "test_rr_simulation",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_zy": {
            "name": "test_calculate_zy",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rr_simulation_2sp": {
            "name": "test_rr_simulation_2sp",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_zy_2sp": {
            "name": "test_calculate_zy_2sp",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ms_ratios": {
            "name": "test_ms_ratios",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cayenne-benchmarks-master/tests/__init__.py": {}
}
{
    "ceryx-master/api/api.py": {
        "default": {
            "name": "default",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "req": [
                    "str",
                    "int",
                    "dict[str, str]"
                ],
                "resp": [
                    "str",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ceryx-master/api/tests.py": {
        "client": {
            "name": "client",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "host": {
            "name": "host",
            "location": 15,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_list_routes": {
            "name": "test_list_routes",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "host": [
                    "str"
                ]
            }
        },
        "test_create_route": {
            "name": "test_create_route",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "host": []
            }
        },
        "test_update_route": {
            "name": "test_update_route",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "host": []
            }
        },
        "test_delete_route": {
            "name": "test_delete_route",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "host": []
            }
        }
    },
    "ceryx-master/api/ceryx/db.py": {
        "_str": {
            "name": "_str",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "subject": [
                    "str",
                    "typing.Callable[A, tuple[typing.Union[bytes,int]]]",
                    "typing.Mapping",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "RedisClient.from_config": {
            "name": "from_config",
            "location": 15,
            "return": [
                "RedisClient"
            ],
            "arguments": {
                "path": [
                    "None",
                    "bool",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "RedisClient.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "port": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "password": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "db": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "prefix": [
                    "str"
                ],
                "timeout": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "RedisClient._prefixed_key": {
            "name": "_prefixed_key",
            "location": 33,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "dict[str, str]",
                    "None",
                    "typing.Type",
                    "int",
                    "typing.Callable[KT, VT]",
                    "tuple[]"
                ]
            }
        },
        "RedisClient._route_key": {
            "name": "_route_key",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "RedisClient._settings_key": {
            "name": "_settings_key",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "RedisClient._delete_target": {
            "name": "_delete_target",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "typing.Callable[KT,VT, bool]",
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "RedisClient._delete_settings": {
            "name": "_delete_settings",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "typing.Callable[KT,VT, bool]",
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "RedisClient._lookup_target": {
            "name": "_lookup_target",
            "location": 50,
            "return": [
                "int",
                "dict[, ]",
                "bytes",
                "dict[str, typing.Union[typing.Any,typing.Any,typing.Any,str]]"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "typing.Mapping",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Type",
                    "bool",
                    "None"
                ],
                "raise_exception": [
                    "bool"
                ]
            }
        },
        "RedisClient._lookup_settings": {
            "name": "_lookup_settings",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "bool",
                    "typing.Sequence[str]",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "RedisClient.lookup_hosts": {
            "name": "lookup_hosts",
            "location": 63,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "typing.Text"
                ]
            }
        },
        "RedisClient._set_target": {
            "name": "_set_target",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "dict[str, str]",
                    "bool",
                    "dict[, ]",
                    "tuple[]",
                    "str"
                ],
                "target": [
                    "typing.Mapping",
                    "str",
                    "typing.OrderedDict",
                    "int"
                ]
            }
        },
        "RedisClient._set_settings": {
            "name": "_set_settings",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "dict[str, str]",
                    "bool",
                    "dict[, ]",
                    "tuple[]",
                    "str"
                ],
                "settings": [
                    "str",
                    "int",
                    "dict[int, typing.Any]"
                ]
            }
        },
        "RedisClient._set_route": {
            "name": "_set_route",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "route": []
            }
        },
        "RedisClient.get_route": {
            "name": "get_route",
            "location": 83,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ]
            }
        },
        "RedisClient.list_routes": {
            "name": "list_routes",
            "location": 93,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedisClient.create_route": {
            "name": "create_route",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "RedisClient.update_route": {
            "name": "update_route",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "dict[, ]"
                ],
                "data": []
            }
        },
        "RedisClient.delete_route": {
            "name": "delete_route",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "ceryx-master/api/ceryx/exceptions.py": {},
    "ceryx-master/api/ceryx/schemas.py": {
        "ensure_protocol": {
            "name": "ensure_protocol",
            "location": 5,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "url": [
                    "str",
                    "int"
                ]
            }
        },
        "boolean_to_redis": {
            "name": "boolean_to_redis",
            "location": 10,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "value": [
                    "bool",
                    "str",
                    "typing.Sequence[typing.Union[int,str]]",
                    "bytes",
                    "float"
                ]
            }
        },
        "redis_to_boolean": {
            "name": "redis_to_boolean",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "bool",
                    "str",
                    "dict[, ]",
                    "bytes",
                    "typing.Sequence[T]",
                    "None"
                ]
            }
        },
        "ensure_string": {
            "name": "ensure_string",
            "location": 18,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "value": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "value_to_redis": {
            "name": "value_to_redis",
            "location": 26,
            "return": [],
            "arguments": {
                "field": [
                    "str"
                ],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "redis_to_value": {
            "name": "redis_to_value",
            "location": 36,
            "return": [],
            "arguments": {
                "field": [
                    "list[]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "redis_value": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BaseSchema.from_redis": {
            "name": "from_redis",
            "location": 48,
            "return": [],
            "arguments": {
                "cls": [],
                "redis_data": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "BaseSchema.to_redis": {
            "name": "to_redis",
            "location": 55,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Route.validate": {
            "name": "validate",
            "location": 84,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        }
    },
    "ceryx-master/api/ceryx/settings.py": {},
    "ceryx-master/api/ceryx/__init__.py": {},
    "ceryx-master/ceryx/tests/base.py": {
        "BaseTest.setup_method": {
            "name": "setup_method",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ceryx-master/ceryx/tests/test_certificates.py": {
        "TestCertificates.test_custom_certificate": {
            "name": "test_custom_certificate",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCertificates.test_fallback_certificate": {
            "name": "test_fallback_certificate",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ceryx-master/ceryx/tests/test_routes.py": {
        "TestRoutes.test_no_route": {
            "name": "test_no_route",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRoutes.test_proxy": {
            "name": "test_proxy",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRoutes.test_redirect": {
            "name": "test_redirect",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRoutes.test_enforce_https": {
            "name": "test_enforce_https",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ceryx-master/ceryx/tests/utils.py": {
        "create_certificates_for_host": {
            "name": "create_certificates_for_host",
            "location": 10,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "host": [
                    "str",
                    "typing.BinaryIO",
                    "int"
                ]
            }
        }
    },
    "ceryx-master/ceryx/tests/client/adapters.py": {
        "CeryxTestsHTTPAdapter.init_poolmanager": {
            "name": "init_poolmanager",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connections": [
                    "bool",
                    "list[]"
                ],
                "maxsize": [
                    "int"
                ],
                "block": []
            }
        }
    },
    "ceryx-master/ceryx/tests/client/client.py": {
        "CeryxTestClient.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ceryx-master/ceryx/tests/client/connection.py": {
        "CeryxTestsHTTPConnection.host": {
            "name": "host",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "CeryxTestsHTTPSConnection.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "int",
                    "str",
                    "None"
                ],
                "port": [
                    "None",
                    "int",
                    "str"
                ],
                "key_file": [
                    "None",
                    "str",
                    "list[str]",
                    "typing.TextIO"
                ],
                "cert_file": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "key_password": [
                    "None",
                    "str",
                    "list[str]",
                    "bool",
                    "list[]"
                ],
                "strict": [
                    "None",
                    "int",
                    "str"
                ],
                "timeout": [],
                "ssl_context": [
                    "None",
                    "str",
                    "bool"
                ],
                "server_hostname": [
                    "None",
                    "bool",
                    "str",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "ceryx-master/ceryx/tests/client/connectionpool.py": {
        "CeryxTestsHTTPConnectionPool.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "int",
                    "str"
                ]
            }
        },
        "CeryxTestsHTTPConnectionPool.urlopen": {
            "name": "urlopen",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CeryxTestsHTTPSConnectionPool.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "float",
                    "tuple[float]",
                    "int"
                ]
            }
        }
    },
    "ceryx-master/ceryx/tests/client/poolmanager.py": {
        "CeryxTestsPoolManager.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ceryx-master/ceryx/tests/client/__init__.py": {}
}
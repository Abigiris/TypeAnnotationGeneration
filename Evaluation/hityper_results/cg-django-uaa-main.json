{
    "cg-django-uaa-main/test.py": {
        "SimpleCommand.initialize_options": {
            "name": "initialize_options",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleCommand.finalize_options": {
            "name": "finalize_options",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ManualTestCommand.run": {
            "name": "run",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DevDocsCommand.run": {
            "name": "run",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/docs/conf.py": {
        "setup": {
            "name": "setup",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "cg-django-uaa-main/example/manage.py": {},
    "cg-django-uaa-main/example/example/settings.py": {},
    "cg-django-uaa-main/example/example/urls.py": {
        "index": {
            "name": "index",
            "location": 26,
            "return": [],
            "arguments": {
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "logout": {
            "name": "logout",
            "location": 30,
            "return": [],
            "arguments": {
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "cg-django-uaa-main/example/example/wsgi.py": {},
    "cg-django-uaa-main/example/example/__init__.py": {},
    "cg-django-uaa-main/uaa_client/apps.py": {
        "UaaClientConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/authentication.py": {
        "get_auth_url": {
            "name": "get_auth_url",
            "location": 18,
            "return": [],
            "arguments": {
                "request": [
                    "Exception",
                    "typing.Callable[, ]"
                ]
            }
        },
        "get_token_url": {
            "name": "get_token_url",
            "location": 24,
            "return": [],
            "arguments": {
                "request": [
                    "Exception",
                    "typing.Callable[, ]"
                ]
            }
        },
        "obtain_access_token": {
            "name": "obtain_access_token",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [],
                "payload": [
                    "str"
                ]
            }
        },
        "update_access_token_with_refresh_token": {
            "name": "update_access_token_with_refresh_token",
            "location": 48,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "exchange_code_for_access_token": {
            "name": "exchange_code_for_access_token",
            "location": 60,
            "return": [],
            "arguments": {
                "request": [
                    "bytes",
                    "int"
                ],
                "code": [
                    "str",
                    "bool"
                ]
            }
        },
        "UaaBackend.get_user_by_email": {
            "name": "get_user_by_email",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "email": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "UaaBackend.should_create_user_for_email": {
            "name": "should_create_user_for_email",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[catalogsources.models.FetchedPlatform]",
                    "dict[str, typing.Any]"
                ],
                "email": [
                    "str"
                ]
            }
        },
        "UaaBackend.create_user_with_email": {
            "name": "create_user_with_email",
            "location": 134,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "email": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "UaaBackend.authenticate": {
            "name": "authenticate",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "None",
                    "float"
                ],
                "uaa_oauth2_code": [
                    "None",
                    "int",
                    "float"
                ]
            }
        }
    },
    "cg-django-uaa-main/uaa_client/compat.py": {
        "is_user_authenticated": {
            "name": "is_user_authenticated",
            "location": 8,
            "return": [],
            "arguments": {
                "user": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/configuration.py": {
        "validate_configuration": {
            "name": "validate_configuration",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "use_earliest_debug_setting": [
                    "bool"
                ]
            }
        },
        "require_debug": {
            "name": "require_debug",
            "location": 65,
            "return": [],
            "arguments": {
                "func": [
                    "str",
                    "bool",
                    "typing.Callable[, ]"
                ]
            }
        },
        "require_debug.wrapper": {
            "name": "wrapper",
            "location": 73,
            "return": [
                "HttpResponseNotFound"
            ],
            "arguments": {}
        }
    },
    "cg-django-uaa-main/uaa_client/decorators.py": {
        "staff_login_required": {
            "name": "staff_login_required",
            "location": 12,
            "return": [],
            "arguments": {
                "function": [
                    "None",
                    "bool",
                    "str",
                    "list[str]"
                ],
                "redirect_field_name": [],
                "login_url": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "staff_login_required.check_if_staff": {
            "name": "check_if_staff",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/fake_uaa_provider.py": {
        "expect": {
            "name": "expect",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "authorize": {
            "name": "authorize",
            "location": 24,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": []
            }
        },
        "access_token": {
            "name": "access_token",
            "location": 44,
            "return": [
                "HttpResponseBadRequest",
                "HttpResponse"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/middleware.py": {
        "uaa_refresh_exempt": {
            "name": "uaa_refresh_exempt",
            "location": 59,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "UaaRefreshMiddleware._refresh": {
            "name": "_refresh",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UaaRefreshMiddleware.process_view": {
            "name": "process_view",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "typing.Callable[, ]",
                    "bool"
                ],
                "view_func": [
                    "typing.Callable[, ]",
                    "frozenset"
                ],
                "view_args": [
                    "dict[, ]",
                    "list[str]",
                    "dict[str, typing.Any]"
                ],
                "view_kwargs": [
                    "dict[, ]",
                    "list[str]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "cg-django-uaa-main/uaa_client/runtests.py": {
        "run_tests": {
            "name": "run_tests",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cg-django-uaa-main/uaa_client/urls.py": {},
    "cg-django-uaa-main/uaa_client/views.py": {
        "login_error": {
            "name": "login_error",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [
                    "int",
                    "str",
                    "None"
                ],
                "error_code": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "login": {
            "name": "login",
            "location": 18,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": []
            }
        },
        "oauth2_callback": {
            "name": "oauth2_callback",
            "location": 38,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/__init__.py": {},
    "cg-django-uaa-main/uaa_client/tests/test_authentication.py": {
        "FakeAuthenticationTests.test_get_auth_url_works": {
            "name": "test_get_auth_url_works",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_get_token_url_works": {
            "name": "test_get_token_url_works",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_authorize_endpoint_displays_page_without_email": {
            "name": "test_authorize_endpoint_displays_page_without_email",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_authorize_endpoint_redirects_with_email": {
            "name": "test_authorize_endpoint_redirects_with_email",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_token_endpoint_returns_400_on_invalid_grant_type": {
            "name": "test_token_endpoint_returns_400_on_invalid_grant_type",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_token_endpoint_supports_refresh": {
            "name": "test_token_endpoint_supports_refresh",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_token_endpoint_works": {
            "name": "test_token_endpoint_works",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_authorize_endpoint_404s_when_debug_is_false": {
            "name": "test_authorize_endpoint_404s_when_debug_is_false",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeAuthenticationTests.test_token_endpoint_404s_when_debug_is_false": {
            "name": "test_token_endpoint_404s_when_debug_is_false",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_auth_url_works": {
            "name": "test_get_auth_url_works",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_token_url_works": {
            "name": "test_get_token_url_works",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_update_access_token_returns_none_on_failure": {
            "name": "test_update_access_token_returns_none_on_failure",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "AuthenticationTests.test_update_access_token_returns_token_on_success": {
            "name": "test_update_access_token_returns_token_on_success",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_time": [
                    "typing.Callable[, ]",
                    "typing.Generator[typing.Union[None,typing.Any,None]]"
                ]
            }
        },
        "AuthenticationTests.test_exchange_code_for_access_token_returns_none_on_failure": {
            "name": "test_exchange_code_for_access_token_returns_none_on_failure",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "AuthenticationTests.test_exchange_code_for_access_token_returns_token_on_success": {
            "name": "test_exchange_code_for_access_token_returns_token_on_success",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_time": []
            }
        },
        "AuthenticationTests.test_get_user_by_email_returns_existing_user": {
            "name": "test_get_user_by_email_returns_existing_user",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_user_by_email_is_case_insensitive": {
            "name": "test_get_user_by_email_is_case_insensitive",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_user_by_email_returns_none_when_user_does_not_exist": {
            "name": "test_get_user_by_email_returns_none_when_user_does_not_exist",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "AuthenticationTests.test_get_user_by_email_returns_none_when_many_users_exist": {
            "name": "test_get_user_by_email_returns_none_when_many_users_exist",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "AuthenticationTests.test_authenticate_returns_none_when_kwargs_not_passed": {
            "name": "test_authenticate_returns_none_when_kwargs_not_passed",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_authenticate_returns_none_when_code_is_invalid": {
            "name": "test_authenticate_returns_none_when_code_is_invalid",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "AuthenticationTests.test_authenticate_returns_user_on_success": {
            "name": "test_authenticate_returns_user_on_success",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_user_returns_none_when_id_is_invalid": {
            "name": "test_get_user_returns_none_when_id_is_invalid",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_get_user_returns_user_when_id_is_valid": {
            "name": "test_get_user_returns_user_when_id_is_valid",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticationTests.test_create_user_when_domain_is_approved": {
            "name": "test_create_user_when_domain_is_approved",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m1": [],
                "m2": []
            }
        },
        "AuthenticationTests.test_slugify_user_when_domain_is_approved": {
            "name": "test_slugify_user_when_domain_is_approved",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m1": [],
                "m2": []
            }
        },
        "AuthenticationTests.test_do_not_create_user_when_domain_is_not_approved": {
            "name": "test_do_not_create_user_when_domain_is_not_approved",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m1": [
                    "str"
                ],
                "m2": [
                    "str"
                ]
            }
        },
        "AuthenticationTests.test_update_access_token_returns_none_on_failure.mock_404_response": {
            "name": "mock_404_response",
            "location": 110,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        },
        "AuthenticationTests.test_update_access_token_returns_token_on_success.mock_200_response": {
            "name": "mock_200_response",
            "location": 122,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        },
        "AuthenticationTests.test_exchange_code_for_access_token_returns_none_on_failure.mock_404_response": {
            "name": "mock_404_response",
            "location": 153,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        },
        "AuthenticationTests.test_exchange_code_for_access_token_returns_token_on_success.mock_200_response": {
            "name": "mock_200_response",
            "location": 165,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_compat.py": {
        "FakeUser.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_authenticated": [
                    "bool",
                    "typing.Any",
                    "None",
                    "list[str]",
                    "typing.Callable[str, bool]",
                    "float",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "CompatTests.test_is_user_authenticated_works_on_django_1": {
            "name": "test_is_user_authenticated_works_on_django_1",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CompatTests.test_is_user_authenticated_works_on_django_2": {
            "name": "test_is_user_authenticated_works_on_django_2",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_configuration.py": {
        "validate_configuration": {
            "name": "validate_configuration",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ConfigurationTests.test_err_if_no_settings_are_defined": {
            "name": "test_err_if_no_settings_are_defined",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_if_settings_are_empty": {
            "name": "test_err_if_settings_are_empty",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_if_settings_are_not_strings": {
            "name": "test_err_if_settings_are_not_strings",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_nothing_raised_if_prod_settings_are_ok": {
            "name": "test_nothing_raised_if_prod_settings_are_ok",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_nothing_raised_if_fake_backend_used_in_dev_mode": {
            "name": "test_nothing_raised_if_fake_backend_used_in_dev_mode",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_raised_if_only_one_url_is_fake": {
            "name": "test_err_raised_if_only_one_url_is_fake",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_if_fake_uaa_used_but_debug_is_false": {
            "name": "test_err_if_fake_uaa_used_but_debug_is_false",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_if_prod_urls_are_not_https": {
            "name": "test_err_if_prod_urls_are_not_https",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigurationTests.test_err_if_auth_backends_are_invalid": {
            "name": "test_err_if_auth_backends_are_invalid",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_decorators.py": {
        "staff_only_view": {
            "name": "staff_only_view",
            "location": 12,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "staff_only_view_with_custom_login_url": {
            "name": "staff_only_view_with_custom_login_url",
            "location": 17,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": [
                    "int"
                ]
            }
        },
        "StaffLoginRequiredTests.setUp": {
            "name": "setUp",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffLoginRequiredTests.login": {
            "name": "login",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "is_staff": [
                    "bool"
                ]
            }
        },
        "StaffLoginRequiredTests.test_redirects_to_login": {
            "name": "test_redirects_to_login",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffLoginRequiredTests.test_staff_user_is_permitted": {
            "name": "test_staff_user_is_permitted",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffLoginRequiredTests.test_non_staff_user_is_denied": {
            "name": "test_non_staff_user_is_denied",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_example_app.py": {
        "ExampleAppTests.test_example_app_tests_work": {
            "name": "test_example_app_tests_work",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_middleware.py": {
        "noop": {
            "name": "noop",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "FakeUser.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_authenticated": [
                    "bool",
                    "typing.Any",
                    "None",
                    "list[str]",
                    "typing.Callable[str, bool]",
                    "float",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "FakeUser.is_authenticated": {
            "name": "is_authenticated",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FakeRequest.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_authenticated": [
                    "bool"
                ],
                "session": [
                    "None",
                    "int",
                    "typing.Any",
                    "list[list[str]]",
                    "float"
                ]
            }
        },
        "MiddlewareTests.assertNoRefresh": {
            "name": "assertNoRefresh",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "None"
                ],
                "view_func": [],
                "time": [
                    "int"
                ]
            }
        },
        "MiddlewareTests.test_no_refresh_if_unauthenticated": {
            "name": "test_no_refresh_if_unauthenticated",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MiddlewareTests.test_no_refresh_if_no_uaa_expiry": {
            "name": "test_no_refresh_if_no_uaa_expiry",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MiddlewareTests.test_no_refresh_if_token_not_expired": {
            "name": "test_no_refresh_if_token_not_expired",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MiddlewareTests.test_no_refresh_if_view_func_is_exempt": {
            "name": "test_no_refresh_if_view_func_is_exempt",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MiddlewareTests.test_logout_when_refresh_fails": {
            "name": "test_logout_when_refresh_fails",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh": [],
                "logout": []
            }
        },
        "MiddlewareTests.test_no_logout_when_refresh_succeeds": {
            "name": "test_no_logout_when_refresh_succeeds",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh": [],
                "logout": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/test_views.py": {
        "get_query": {
            "name": "get_query",
            "location": 8,
            "return": [],
            "arguments": {
                "urlinfo": [
                    "str",
                    "int"
                ]
            }
        },
        "ViewTests.assertErrorCode": {
            "name": "assertErrorCode",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "None"
                ],
                "error_code": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "None"
                ]
            }
        },
        "ViewTests.set_session_kvs": {
            "name": "set_session_kvs",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_login_redirects_to_uaa": {
            "name": "test_login_redirects_to_uaa",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_random_string": []
            }
        },
        "ViewTests.test_login_stores_oauth2_state": {
            "name": "test_login_stores_oauth2_state",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "ViewTests.test_callback_reports_missing_state_in_querystring": {
            "name": "test_callback_reports_missing_state_in_querystring",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_callback_reports_missing_state_in_session": {
            "name": "test_callback_reports_missing_state_in_session",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_callback_reports_mismatched_state": {
            "name": "test_callback_reports_mismatched_state",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_callback_reports_missing_code_in_querystring": {
            "name": "test_callback_reports_missing_code_in_querystring",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_callback_reports_authenticate_failed": {
            "name": "test_callback_reports_authenticate_failed",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "ViewTests.login_via_callback": {
            "name": "login_via_callback",
            "location": 81,
            "return": [
                "typing.Generator[typing.Union[dict[str, str],dict[, ],dict[str, dict[str, typing.Any]]]]"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "typing.Text"
                ],
                "next_url": [
                    "typing.Text"
                ]
            }
        },
        "ViewTests.test_callback_redirects_to_next": {
            "name": "test_callback_redirects_to_next",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_callback_redirects_to_login_url_on_unsafe_next": {
            "name": "test_callback_redirects_to_login_url_on_unsafe_next",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cg-django-uaa-main/uaa_client/tests/urls.py": {},
    "cg-django-uaa-main/uaa_client/tests/__init__.py": {}
}
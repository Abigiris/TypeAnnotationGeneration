{
    "chrisdoescoding.com-master/chrisdoescoding/factories.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/manage.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/wsgi.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/acnh/apps.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/acnh/urls.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/acnh/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/acnh/migrations/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/urls.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/wsgi.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/settings/common.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/settings/local.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/settings/prod.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/config/settings/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/admin.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/apps.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/factories.py": {
        "PostFactory.last_updated": {
            "name": "last_updated",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "float"
                ],
                "create": [
                    "typing.Type",
                    "typing.Callable[, ]",
                    "None",
                    "int"
                ],
                "extracted": [
                    "int",
                    "float"
                ]
            }
        },
        "PostFactory.publication_date": {
            "name": "publication_date",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "create": [
                    "bool",
                    "typing.Iterable[]",
                    "str",
                    "float"
                ],
                "extracted": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/feed.py": {
        "RssPostFeed.items": {
            "name": "items",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RssPostFeed.item_title": {
            "name": "item_title",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "str"
                ]
            }
        },
        "RssPostFeed.item_description": {
            "name": "item_description",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "list[dict[, ]]",
                    "str",
                    "list[int]",
                    "typing.Type"
                ]
            }
        },
        "RssPostFeed.item_link": {
            "name": "item_link",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "typing.Callable[..., T]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/models.py": {
        "calculate_excerpt_from_markdown": {
            "name": "calculate_excerpt_from_markdown",
            "location": 30,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "markdown": [
                    "str",
                    "dict[int, str]",
                    "dict[str, str]"
                ]
            }
        },
        "Post.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.save": {
            "name": "save",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/urls.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/utils.py": {
        "MarkdownParser.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "unparsed_text": [
                    "str"
                ]
            }
        },
        "MarkdownParser.__enter__": {
            "name": "__enter__",
            "location": 24,
            "return": [
                "MarkdownParser"
            ],
            "arguments": {
                "self": []
            }
        },
        "MarkdownParser.__exit__": {
            "name": "__exit__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "exc_value": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "exc_traceback": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ]
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/views.py": {
        "BasePostView.get_queryset": {
            "name": "get_queryset",
            "location": 16,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePostView.get": {
            "name": "get",
            "location": 22,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "BasePostView.get_next_and_prev": {
            "name": "get_next_and_prev",
            "location": 41,
            "return": [
                "dict[typing.Text, None]"
            ],
            "arguments": {
                "self": [],
                "current": [
                    "float",
                    "int"
                ]
            }
        },
        "LatestPostView.get_object": {
            "name": "get_object",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AllPostsView.get_queryset": {
            "name": "get_queryset",
            "location": 81,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomPostView.get_queryset": {
            "name": "get_queryset",
            "location": 91,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomPostView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 97,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/management/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/management/commands/bootstrap.py": {
        "Command.handle": {
            "name": "handle",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/management/commands/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/migrations/0001_initial.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/migrations/0002_auto_20180304_2232.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/migrations/0003_auto_20180304_2236.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/migrations/0004_post_excerpt.py": {
        "forwards_func": {
            "name": "forwards_func",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "list[dict[str, typing.Any]]",
                    "str",
                    "int"
                ]
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/migrations/__init__.py": {},
    "chrisdoescoding.com-master/chrisdoescoding/posts/tests/test_bootstrap.py": {
        "TestBootstrap.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_command_fails_in_prod": {
            "name": "test_command_fails_in_prod",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_creates_post_when_it_doesnt_exist_before": {
            "name": "test_creates_post_when_it_doesnt_exist_before",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_creates_published_post_if_only_unpublished_posts_exist": {
            "name": "test_creates_published_post_if_only_unpublished_posts_exist",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_creates_superuser_when_it_doesnt_exist_before": {
            "name": "test_creates_superuser_when_it_doesnt_exist_before",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_sets_superuser_password_to_test": {
            "name": "test_sets_superuser_password_to_test",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBootstrap.test_command_uses_correct_stdout": {
            "name": "test_command_uses_correct_stdout",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/tests/test_views.py": {
        "FakeMarkdownParser.__exit__": {
            "name": "__exit__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.setUpTestData": {
            "name": "setUpTestData",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestView.test_unable_to_find_post": {
            "name": "test_unable_to_find_post",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_unable_to_find_unpublished_post": {
            "name": "test_unable_to_find_unpublished_post",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_unable_to_find_hidden_post": {
            "name": "test_unable_to_find_hidden_post",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_redirect_to_latest": {
            "name": "test_redirect_to_latest",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_get_post_requested": {
            "name": "test_get_post_requested",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_uses_markdownparser": {
            "name": "test_uses_markdownparser",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_mp": []
            }
        },
        "TestView.test_sets_next_prev_ids_in_context": {
            "name": "test_sets_next_prev_ids_in_context",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestView.test_raw_returns_post_body": {
            "name": "test_raw_returns_post_body",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_mp": []
            }
        },
        "TestView.test_excerpt_calculation": {
            "name": "test_excerpt_calculation",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chrisdoescoding.com-master/chrisdoescoding/posts/tests/__init__.py": {}
}
{
    "chupi-master/manage.py": {},
    "chupi-master/chupi/middlewares.py": {
        "GQLThrottlingMiddleware.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "GQLThrottlingMiddleware.__call__": {
            "name": "__call__",
            "location": 20,
            "return": [
                "HttpThrottled"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "chupi-master/chupi/urls.py": {},
    "chupi-master/chupi/wsgi.py": {},
    "chupi-master/chupi/__init__.py": {},
    "chupi-master/chupi/settings/base.py": {},
    "chupi-master/chupi/settings/production.py": {},
    "chupi-master/chupi/settings/tests.py": {},
    "chupi-master/chupi/settings/__init__.py": {},
    "chupi-master/drinks/admin.py": {},
    "chupi-master/drinks/apps.py": {},
    "chupi-master/drinks/factories.py": {
        "DrinkFactory.ingredients": {
            "name": "ingredients",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "tuple[typing.Union[int,str]]",
                    "typing.Iterator"
                ],
                "extracted": [
                    "tuple[typing.Union[int,str]]"
                ]
            }
        },
        "DrinkFactory._create": {
            "name": "_create",
            "location": 60,
            "return": [],
            "arguments": {
                "cls": [
                    "Exception",
                    "str",
                    "bool"
                ],
                "model_class": [
                    "int",
                    "tuple[typing.Type]",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]",
                    "list[str]",
                    "None"
                ]
            }
        }
    },
    "chupi-master/drinks/models.py": {
        "NamedItem.__str__": {
            "name": "__str__",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Drink.likes": {
            "name": "likes",
            "location": 90,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Drink.add_like": {
            "name": "add_like",
            "location": 94,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Drink.remove_like": {
            "name": "remove_like",
            "location": 97,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Drink._set_likes": {
            "name": "_set_likes",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "chupi-master/drinks/tests.py": {
        "UrlTests.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlTests.test_template_urls": {
            "name": "test_template_urls",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlTests.test_error_url": {
            "name": "test_error_url",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TemplateViewTests.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TemplateViewTests.test_index": {
            "name": "test_index",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TemplateViewTests.test_detail": {
            "name": "test_detail",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorViewTests.test_error_view": {
            "name": "test_error_view",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeViewTests.test_error_view": {
            "name": "test_error_view",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chupi-master/drinks/urls.py": {},
    "chupi-master/drinks/utils.py": {
        "RedisKeyMixin.redis_key": {
            "name": "redis_key",
            "location": 3,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chupi-master/drinks/views.py": {
        "generate_error_view": {
            "name": "generate_error_view",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "status_badge_view": {
            "name": "status_badge_view",
            "location": 20,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": [
                    "dict[str, str]"
                ]
            }
        }
    },
    "chupi-master/drinks/__init__.py": {},
    "chupi-master/drinks/api/__init__.py": {},
    "chupi-master/drinks/api/graphql/schema.py": {
        "Query.resolve_all_drinks": {
            "name": "resolve_all_drinks",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "info": [
                    "list[dict[, ]]",
                    "dict[, ]"
                ]
            }
        },
        "Query.resolve_all_ingredients": {
            "name": "resolve_all_ingredients",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "info": [
                    "list[dict[, ]]",
                    "dict[, ]"
                ]
            }
        },
        "Query.resolve_drink": {
            "name": "resolve_drink",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "info": [
                    "bool"
                ]
            }
        },
        "Query.resolve_ingredient": {
            "name": "resolve_ingredient",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "info": [
                    "bool"
                ]
            }
        },
        "CreateDrink.mutate": {
            "name": "mutate",
            "location": 75,
            "return": [
                "CreateDrink"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "str",
                    "typing.Type",
                    "set[str]"
                ],
                "name": [
                    "str"
                ],
                "ingredients": [
                    "list[int]",
                    "str"
                ]
            }
        },
        "UpdateDrink.mutate": {
            "name": "mutate",
            "location": 95,
            "return": [
                "UpdateDrink"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "typing.Callable[[], None]",
                    "str",
                    "list[dict[str, str]]",
                    "None"
                ],
                "drink_id": [
                    "int",
                    "str",
                    "list[]"
                ],
                "name": [
                    "str",
                    "typing.Sequence[str]"
                ],
                "ingredients": [
                    "list[int]",
                    "str"
                ]
            }
        },
        "LikeDrink.mutate": {
            "name": "mutate",
            "location": 122,
            "return": [
                "LikeDrink"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "str",
                    "list[]",
                    "list[dict[, ]]",
                    "None",
                    "list[str]"
                ],
                "drink_id": [
                    "int"
                ],
                "add": [
                    "str"
                ]
            }
        },
        "CreateIngredient.mutate": {
            "name": "mutate",
            "location": 143,
            "return": [
                "CreateIngredient"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "str",
                    "typing.Type",
                    "set[str]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "UpdateIngredient.mutate": {
            "name": "mutate",
            "location": 157,
            "return": [
                "CreateIngredient"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "typing.Callable[[], None]",
                    "str",
                    "list[dict[str, str]]",
                    "None"
                ],
                "ingredient_id": [
                    "int",
                    "str",
                    "list[]"
                ],
                "name": [
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "chupi-master/drinks/api/graphql/tests.py": {
        "UrlTests.test_drink_urls": {
            "name": "test_drink_urls",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.test_create_drink_empty_ingredients_validation": {
            "name": "test_create_drink_empty_ingredients_validation",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.test_update_drink_empty_ingredients_validation": {
            "name": "test_update_drink_empty_ingredients_validation",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.test_update_drink_wrong_id_validation": {
            "name": "test_update_drink_wrong_id_validation",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.test_update_ingredient_wrong_id_validation": {
            "name": "test_update_ingredient_wrong_id_validation",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaMutationsValidationsTests.test_like_wrong_id_validation": {
            "name": "test_like_wrong_id_validation",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryAPI.query": {
            "name": "query",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "list[list[str]]",
                    "typing.Type",
                    "typing.Callable[, ]",
                    "int"
                ],
                "variables": [
                    "None",
                    "str",
                    "list[list[str]]",
                    "typing.Type",
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        },
        "APIQueriesTestCase.setUp": {
            "name": "setUp",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIQueriesTestCase.test_all_drinks": {
            "name": "test_all_drinks",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIQueriesTestCase.test_get_drink": {
            "name": "test_get_drink",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIQueriesTestCase.test_all_ingredients": {
            "name": "test_all_ingredients",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIQueriesTestCase.test_get_ingredient": {
            "name": "test_get_ingredient",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.setUp": {
            "name": "setUp",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_create_drink": {
            "name": "test_create_drink",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_update_drink": {
            "name": "test_update_drink",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_create_ingredient": {
            "name": "test_create_ingredient",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_update_ingredient": {
            "name": "test_update_ingredient",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_add_like": {
            "name": "test_add_like",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIMutationsTestCase.test_remove_like": {
            "name": "test_remove_like",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chupi-master/drinks/api/graphql/urls.py": {},
    "chupi-master/drinks/api/graphql/__init__.py": {},
    "chupi-master/drinks/api/rest/routers.py": {},
    "chupi-master/drinks/api/rest/serializers.py": {},
    "chupi-master/drinks/api/rest/tests.py": {
        "UrlTests.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlTests.test_drink_urls": {
            "name": "test_drink_urls",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlTests.test_ingredients_urls": {
            "name": "test_ingredients_urls",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.setUp": {
            "name": "setUp",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_serializer": {
            "name": "test_drink_serializer",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_deserializer": {
            "name": "test_drink_deserializer",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_empty_ingredients_validation": {
            "name": "test_drink_empty_ingredients_validation",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_write_serializer": {
            "name": "test_drink_write_serializer",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_write_deserializer": {
            "name": "test_drink_write_deserializer",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_drink_write_empty_ingredients_validation": {
            "name": "test_drink_write_empty_ingredients_validation",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_ingredient_serializer": {
            "name": "test_ingredient_serializer",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SerializersTests.test_ingredient_deserializer": {
            "name": "test_ingredient_deserializer",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.setUp": {
            "name": "setUp",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_get_drink": {
            "name": "test_get_drink",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_create_drink": {
            "name": "test_create_drink",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_update_drink": {
            "name": "test_update_drink",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_partial_update_drink": {
            "name": "test_partial_update_drink",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_get_ingredient": {
            "name": "test_get_ingredient",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_create_ingredient": {
            "name": "test_create_ingredient",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chupi-master/drinks/api/rest/views.py": {
        "DrinkViewSet.get_serializer_class": {
            "name": "get_serializer_class",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DrinkViewSet.like": {
            "name": "like",
            "location": 29,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "chupi-master/drinks/api/rest/__init__.py": {},
    "chupi-master/drinks/migrations/0001_initial.py": {},
    "chupi-master/drinks/migrations/__init__.py": {},
    "chupi-master/front_vue/apps.py": {},
    "chupi-master/front_vue/urls.py": {},
    "chupi-master/front_vue/views.py": {},
    "chupi-master/front_vue/__init__.py": {}
}
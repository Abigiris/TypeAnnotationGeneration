{
    "clortho-master/src/clortho.py": {
        "get_client": {
            "name": "get_client",
            "location": 36,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "request": [
                    "Exception"
                ]
            }
        },
        "setup_app": {
            "name": "setup_app",
            "location": 97,
            "return": [],
            "arguments": {
                "loop": [
                    "dict[, ]"
                ]
            }
        },
        "setup_parser": {
            "name": "setup_parser",
            "location": 112,
            "return": [
                "ArgumentParser"
            ],
            "arguments": {}
        },
        "read_keystore": {
            "name": "read_keystore",
            "location": 120,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "clean_exit": {
            "name": "clean_exit",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "signame": [
                    "str",
                    "typing.Sequence[str]"
                ],
                "loop": [],
                "filename": [
                    "str",
                    "dict[str, dict[str, str]]"
                ],
                "keystore": [
                    "str",
                    "dict[str, dict[str, str]]"
                ]
            }
        },
        "handle_usr1": {
            "name": "handle_usr1",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "dict[str, dict[str, str]]",
                    "list[str]",
                    "list[tuple[typing.Union[int,int]]]"
                ],
                "keystore": [
                    "str",
                    "dict[str, dict[str, str]]",
                    "list[str]",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "hourly_save_keystore": {
            "name": "hourly_save_keystore",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": [
                    "str",
                    "bytes",
                    "list[dict[str, typing.Any]]"
                ],
                "filename": [
                    "str",
                    "dict[str, dict[str, str]]",
                    "set[str]",
                    "bytes"
                ],
                "keystore": [
                    "str",
                    "dict[str, dict[str, str]]",
                    "set[str]",
                    "bytes"
                ]
            }
        },
        "save_keystore": {
            "name": "save_keystore",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "keystore": [
                    "dict[str, dict[str, str]]",
                    "str",
                    "dict[, ]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "clortho-master/src/clortho_test.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {
                "loop": [],
                "test_client": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_proxy_client": {
            "name": "test_proxy_client",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_client_peer": {
            "name": "test_client_peer",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_client_peer.MockTransport.get_extra_info": {
            "name": "get_extra_info",
            "location": 44,
            "return": [
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "self": [],
                "ignore": []
            }
        }
    }
}
{
    "cmbot-master/config.py": {},
    "cmbot-master/plugins/hello_world.py": {
        "hello_world.activate": {
            "name": "activate",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "hello_world.callback_message": {
            "name": "callback_message",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "cmbot-master/plugins/labhub.py": {
        "LabHub.activate": {
            "name": "activate",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LabHub.GH_ORG_NAME": {
            "name": "GH_ORG_NAME",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LabHub.TEAMS": {
            "name": "TEAMS",
            "location": 46,
            "return": [
                "str",
                "dict[str, typing.Any]",
                "dict[, ]",
                "int"
            ],
            "arguments": {
                "self": [],
                "new": []
            }
        },
        "LabHub.team_mapping": {
            "name": "team_mapping",
            "location": 49,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LabHub.is_team_member": {
            "name": "is_team_member",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "team": []
            }
        },
        "LabHub.is_room_member": {
            "name": "is_room_member",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "invitee": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str",
                    "int"
                ]
            }
        },
        "LabHub.invite_cmd": {
            "name": "invite_cmd",
            "location": 67,
            "return": [
                "typing.Generator[typing.Text]",
                "None",
                "typing.Generator[str]",
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "dict[str, typing.Any]",
                    "int"
                ],
                "match": []
            }
        },
        "LabHub.invite_cmd.invite": {
            "name": "invite",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "invitee": [],
                "team": []
            }
        }
    },
    "cmbot-master/tests/cmbot_testcase.py": {
        "CmbotTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "klasses": [
                    "str",
                    "list[str]",
                    "set[str]",
                    "list[]",
                    "set[]"
                ]
            }
        },
        "CmbotTestCase.load_plugin_templates": {
            "name": "load_plugin_templates",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "klass": [
                    "dict[str, int]"
                ]
            }
        },
        "CmbotTestCase.load_plugin": {
            "name": "load_plugin",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "plugin_name": [
                    "str",
                    "None",
                    "dict[str, str]",
                    "bool"
                ],
                "mock_dict": [
                    "bool"
                ],
                "plugin_config": [
                    "None",
                    "int",
                    "typing.Sequence[str]",
                    "typing.Type",
                    "str"
                ]
            }
        }
    },
    "cmbot-master/tests/hello_world_test.py": {
        "HelloWorldTest.test_hello_world_callback": {
            "name": "test_hello_world_callback",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cmbot-master/tests/isolated_testcase.py": {
        "IsolatedTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "extra_config": [
                    "None",
                    "dict[, ]",
                    "tuple[]",
                    "dict[str, typing.Any]",
                    "bool",
                    "typing.Mapping"
                ]
            }
        },
        "IsolatedTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Exception",
                    "list[str]"
                ]
            }
        },
        "IsolatedTestCase.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extra_config": [
                    "None"
                ]
            }
        }
    },
    "cmbot-master/tests/labhub_test.py": {
        "TestLabHub.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLabHub.test_is_room_member": {
            "name": "test_is_room_member",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLabHub.test_invite_cmd": {
            "name": "test_invite_cmd",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLabHub.test_invalid_token": {
            "name": "test_invalid_token",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cmbot-master/tests/labhub_testcase.py": {
        "LabHubTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "klasses": [
                    "None",
                    "dict[, ]",
                    "list[int]",
                    "list[]",
                    "int",
                    "str"
                ]
            }
        }
    },
    "cmbot-master/tests/__init__.py": {},
    "cmbot-master/utils/backends.py": {
        "GitterPerson.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idd": [
                    "None",
                    "str",
                    "bool",
                    "typing.Mapping"
                ],
                "username": [
                    "None",
                    "str",
                    "bool",
                    "typing.Mapping"
                ],
                "displayName": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "url": [
                    "None",
                    "str",
                    "bool",
                    "typing.Mapping"
                ],
                "avatarSmall": [
                    "None",
                    "str",
                    "bool",
                    "typing.Mapping"
                ],
                "avatarMedium": [
                    "None",
                    "str",
                    "bool",
                    "typing.Mapping"
                ]
            }
        },
        "GitterPerson.idd": {
            "name": "idd",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.username": {
            "name": "username",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.displayName": {
            "name": "displayName",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.url": {
            "name": "url",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.avatarSmall": {
            "name": "avatarSmall",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.avatarMedium": {
            "name": "avatarMedium",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.person": {
            "name": "person",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.nick": {
            "name": "nick",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.fullname": {
            "name": "fullname",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.client": {
            "name": "client",
            "location": 57,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitterPerson.build_from_json": {
            "name": "build_from_json",
            "location": 61,
            "return": [
                "GitterPerson"
            ],
            "arguments": {
                "from_user": [
                    "str"
                ]
            }
        },
        "GitterPerson.__eq__": {
            "name": "__eq__",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "tuple[typing.Union[float,float,float]]",
                    "int"
                ]
            }
        },
        "GitterPerson.__unicode__": {
            "name": "__unicode__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterRoomOccupant.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room": [
                    "str",
                    "int",
                    "None",
                    "typing.Mapping"
                ],
                "idd": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "username": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "displayName": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "url": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "avatarSmall": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "avatarMedium": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "GitterRoomOccupant.room": {
            "name": "room",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterRoomOccupant.build_from_json": {
            "name": "build_from_json",
            "location": 101,
            "return": [
                "GitterRoomOccupant"
            ],
            "arguments": {
                "room": [
                    "dict[str, typing.Any]",
                    "str",
                    "int"
                ],
                "json_user": [
                    "str"
                ]
            }
        },
        "GitterRoomOccupant.__unicode__": {
            "name": "__unicode__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GitterRoomOccupant.__eq__": {
            "name": "__eq__",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str"
                ]
            }
        }
    },
    "cmbot-master/utils/mixin.py": {
        "DefaultConfigMixin._default_config": {
            "name": "_default_config",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DefaultConfigMixin.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "str"
                ],
                "name": [
                    "None",
                    "str",
                    "list[str]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "DefaultConfigMixin.get_configuration_template": {
            "name": "get_configuration_template",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DefaultConfigMixin.configure": {
            "name": "configure",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "configuration": [
                    "typing.Any",
                    "None",
                    "list[str]"
                ]
            }
        }
    },
    "cmbot-master/utils/__init__.py": {}
}
{
    "comics_sentiment_analysis-master/api.py": {
        "ComicsWritersSentiment.on_get": {
            "name": "on_get",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [
                    "dict[, ]",
                    "None",
                    "str"
                ]
            }
        }
    },
    "comics_sentiment_analysis-master/queries.py": {},
    "comics_sentiment_analysis-master/settings.py": {},
    "comics_sentiment_analysis-master/stats.py": {
        "upload_stats": {
            "name": "upload_stats",
            "location": 23,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "query": [
                    "dict[, ]"
                ],
                "test": [
                    "bool"
                ]
            }
        },
        "retrieve_stats": {
            "name": "retrieve_stats",
            "location": 60,
            "return": [],
            "arguments": {
                "query": [
                    "str",
                    "int",
                    "None",
                    "bytes"
                ]
            }
        }
    },
    "comics_sentiment_analysis-master/upload.py": {},
    "comics_sentiment_analysis-master/analysis/main.py": {
        "app": {
            "name": "app",
            "location": 9,
            "return": [
                "tuple[typing.Union[tuple[typing.Union[int,int]],bool,str]]"
            ],
            "arguments": {
                "handle": [
                    "tuple[typing.Union[int,int]]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "comics_sentiment_analysis-master/analysis/__init__.py": {},
    "comics_sentiment_analysis-master/helpers/analyze.py": {
        "analyze_sentiment": {
            "name": "analyze_sentiment",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "post": [
                    "str",
                    "bytes",
                    "typing.IO"
                ]
            }
        }
    },
    "comics_sentiment_analysis-master/helpers/reset_db.py": {
        "reset_db": {
            "name": "reset_db",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "comics_sentiment_analysis-master/helpers/upload.py": {
        "clean_text": {
            "name": "clean_text",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "get_tweet": {
            "name": "get_tweet",
            "location": 24,
            "return": [],
            "arguments": {
                "tweet_json": [
                    "str"
                ]
            }
        }
    },
    "comics_sentiment_analysis-master/tests/test_api.py": {
        "MyTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_t_king": {
            "name": "test_get_t_king",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_s_snyder": {
            "name": "test_get_s_snyder",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_j_jones": {
            "name": "test_get_j_jones",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_j_tynion": {
            "name": "test_get_j_tynion",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_g_johns": {
            "name": "test_get_g_johns",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_get_j_robinson": {
            "name": "test_get_j_robinson",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_no_creator_parameter": {
            "name": "test_no_creator_parameter",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_unsupported_creator_parameter": {
            "name": "test_unsupported_creator_parameter",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApi.test_unsupported_parameter": {
            "name": "test_unsupported_parameter",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "comics_sentiment_analysis-master/tests/test_connections.py": {
        "test_tweepy": {
            "name": "test_tweepy",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mongo": {
            "name": "test_mongo",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reddit": {
            "name": "test_reddit",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "comics_sentiment_analysis-master/tests/test_stats.py": {
        "test_upload_stats": {
            "name": "test_upload_stats",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_retrieve_stats": {
            "name": "test_retrieve_stats",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "comics_sentiment_analysis-master/uploaders/reddit.py": {
        "reddit_setup": {
            "name": "reddit_setup",
            "location": 8,
            "return": [
                "Reddit"
            ],
            "arguments": {}
        },
        "criteria_top": {
            "name": "criteria_top",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "r_subreddit": [],
                "query": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "limit": [
                    "float",
                    "int",
                    "str"
                ]
            }
        },
        "criteria_controversial": {
            "name": "criteria_controversial",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "r_subreddit": [],
                "query": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "limit": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "criteria_hot": {
            "name": "criteria_hot",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "r_subreddit": [],
                "query": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "limit": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "criteria_new": {
            "name": "criteria_new",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "r_subreddit": [],
                "query": [
                    "str",
                    "float",
                    "None",
                    "bool",
                    "typing.Collection"
                ],
                "limit": [
                    "str",
                    "float",
                    "None",
                    "bool",
                    "typing.Collection"
                ]
            }
        },
        "criteria_rising": {
            "name": "criteria_rising",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "r_subreddit": [],
                "query": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "limit": [
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "upload_posts": {
            "name": "upload_posts",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "api": [],
                "subreddits": [
                    "str",
                    "dict[, ]"
                ],
                "query": [
                    "str",
                    "None"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "reddit": {
            "name": "reddit",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "comics_sentiment_analysis-master/uploaders/twitter.py": {
        "twitter_setup": {
            "name": "twitter_setup",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "upload_tweets": {
            "name": "upload_tweets",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "api": [],
                "searchQuery": [
                    "str"
                ]
            }
        },
        "twitter": {
            "name": "twitter",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "comics_sentiment_analysis-master/uploaders/__init__.py": {}
}
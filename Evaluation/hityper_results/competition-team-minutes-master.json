{
    "competition-team-minutes-master/scripts/create-actions.py": {
        "make_repo_relative_url": {
            "name": "make_repo_relative_url",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "file_name": [
                    "str"
                ]
            }
        },
        "load_name_map": {
            "name": "load_name_map",
            "location": 158,
            "return": [
                "dict[, GitHubIdentity]"
            ],
            "arguments": {}
        },
        "parse_args": {
            "name": "parse_args",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 226,
            "return": [
                "int"
            ],
            "arguments": {
                "args": []
            }
        },
        "FileIsNotInARepositoryError.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_name": [
                    "str"
                ]
            }
        },
        "ActionsProcessor.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "name_map": [
                    "str",
                    "bytes",
                    "None",
                    "dict[str, str]",
                    "dict[str, dict[str, typing.Any]]",
                    "bool"
                ],
                "dry_run": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "interactive": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ]
            }
        },
        "ActionsProcessor._process_action": {
            "name": "_process_action",
            "location": 71,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "typing.Callable[, ]",
                    "bytes"
                ],
                "from_url": [
                    "str",
                    "int",
                    "typing.Callable[str, bool]",
                    "dict[str, str]",
                    "typing.AnyStr"
                ]
            }
        },
        "ActionsProcessor.process_actions": {
            "name": "process_actions",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "markdown_file": []
            }
        },
        "Formatter.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Formatter._enable_ansii_escapes": {
            "name": "_enable_ansii_escapes",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Formatter.as_error": {
            "name": "as_error",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "competition-team-minutes-master/scripts/make_github_issue.py": {
        "get_credentials": {
            "name": "get_credentials",
            "location": 20,
            "return": [
                "tuple[typing.Optional[str]]",
                "tuple[typing.Union[int,list[str],float,dict[, ],str,None]]"
            ],
            "arguments": {}
        },
        "FailedToCreateIssue.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "str",
                    "set[str]"
                ],
                "response": [
                    "int",
                    "str",
                    "float",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "GitHub.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_owner": [
                    "str"
                ],
                "repo_name": [
                    "str"
                ]
            }
        },
        "GitHub.make_issue": {
            "name": "make_issue",
            "location": 70,
            "return": [
                "Issue"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "body": [
                    "str",
                    "BaseException",
                    "None",
                    "bytes"
                ],
                "assignee": [
                    "str",
                    "BaseException",
                    "None",
                    "bytes"
                ]
            }
        }
    },
    "competition-team-minutes-master/scripts/parse_actions.py": {
        "action_url": {
            "name": "action_url",
            "location": 35,
            "return": [],
            "arguments": {
                "action_id": [
                    "int",
                    "str"
                ]
            }
        },
        "action_link": {
            "name": "action_link",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "action_id": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "sentence_case": {
            "name": "sentence_case",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "parse_action": {
            "name": "parse_action",
            "location": 54,
            "return": [
                "None",
                "Action"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "process_actions": {
            "name": "process_actions",
            "location": 78,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "process_actions_returning_lines": {
            "name": "process_actions_returning_lines",
            "location": 119,
            "return": [],
            "arguments": {
                "text": [
                    "str"
                ],
                "callback": [
                    "str",
                    "bytes"
                ]
            }
        },
        "func": {
            "name": "func",
            "location": 139,
            "return": [
                "int"
            ],
            "arguments": {
                "action": [
                    "str",
                    "bool",
                    "Exception",
                    "None"
                ]
            }
        }
    }
}
{
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/setup.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/conftest.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/openapi.py": {
        "includeme": {
            "name": "includeme",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "json_renderer": {
            "name": "json_renderer",
            "location": 34,
            "return": [
                "JSON"
            ],
            "arguments": {}
        },
        "datetime_adapter": {
            "name": "datetime_adapter",
            "location": 41,
            "return": [],
            "arguments": {
                "obj": [],
                "request": [
                    "int"
                ]
            }
        },
        "object_or_404": {
            "name": "object_or_404",
            "location": 53,
            "return": [
                "int",
                "list[typing.Callable[, ]]",
                "str"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "None",
                    "list[typing.Callable[, ]]",
                    "str"
                ]
            }
        },
        "unknown_error": {
            "name": "unknown_error",
            "location": 71,
            "return": [],
            "arguments": {
                "exc": [
                    "str"
                ],
                "request": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "unauthorized": {
            "name": "unauthorized",
            "location": 90,
            "return": [],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "notfound": {
            "name": "notfound",
            "location": 100,
            "return": [],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/__init__.py": {
        "configure_logging": {
            "name": "configure_logging",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "configure": {
            "name": "configure",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "main": {
            "name": "main",
            "location": 62,
            "return": [],
            "arguments": {
                "global_config": []
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/models.py": {
        "LowerCaseString.process_bind_param": {
            "name": "process_bind_param",
            "location": 26,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes"
                ],
                "dialect": [
                    "int",
                    "tuple[typing.Union[str,int]]",
                    "complex",
                    "list[]"
                ]
            }
        },
        "User.__json__": {
            "name": "__json__",
            "location": 36,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "User.by_id": {
            "name": "by_id",
            "location": 53,
            "return": [],
            "arguments": {
                "cls": [],
                "uuid": [
                    "str",
                    "dict[, ]"
                ],
                "db": [
                    "str"
                ]
            }
        },
        "User.by_username": {
            "name": "by_username",
            "location": 60,
            "return": [],
            "arguments": {
                "cls": [],
                "username": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[object]"
                ],
                "db": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "User.by_email": {
            "name": "by_email",
            "location": 67,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]"
                ],
                "email": [
                    "str",
                    "float",
                    "bool"
                ],
                "db": []
            }
        },
        "User.verify_password": {
            "name": "verify_password",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/views.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/__init__.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/tests/test_auth_views.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/tests/test_user_model.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/auth/tests/__init__.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/migrations/versions/e3bcef9530e1_create_users_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/models.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/views.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/__init__.py": {
        "includeme": {
            "name": "includeme",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/tests/test_profile_model.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/tests/test_profile_views.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/profile/tests/__init__.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/drop_tables.py": {
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/populate.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/__init__.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/tests/test_drop_tables.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/tests/test_populate.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/scripts/tests/__init__.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/tests/test_check_db_migrated.py": {
        "old_db": {
            "name": "old_db",
            "location": 15,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "db": [
                    "str"
                ],
                "ini_path": [
                    "str"
                ]
            }
        },
        "test_database_outdated": {
            "name": "test_database_outdated",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "sys": [
                    "int"
                ],
                "ini_path": [
                    "str"
                ],
                "old_db": [
                    "bool"
                ]
            }
        },
        "test_database_up_to_date": {
            "name": "test_database_up_to_date",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "sys": [],
                "ini_path": [
                    "str"
                ],
                "db": []
            }
        }
    },
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/tests/test_init.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/tests/test_openapi.py": {},
    "cookiecutter-pyramid-realworld-master/{{cookiecutter.project_slug}}/src/{{cookiecutter.project_slug}}/tests/__init__.py": {}
}
{
    "cryptopals-python-master/setup.py": {},
    "cryptopals-python-master/crypto/aes.py": {
        "aes_ecb_128": {
            "name": "aes_ecb_128",
            "location": 4,
            "return": [],
            "arguments": {
                "bs": [
                    "bytes",
                    "str",
                    "int",
                    "typing.Iterable[typing.Iterable[T]]",
                    "None"
                ],
                "key": [
                    "int",
                    "str",
                    "typing.Type",
                    "bytes",
                    "list[str]",
                    "typing.MutableMapping"
                ]
            }
        }
    },
    "cryptopals-python-master/crypto/english.py": {
        "score_by_weight": {
            "name": "score_by_weight",
            "location": 1,
            "return": [
                "float"
            ],
            "arguments": {
                "s": []
            }
        },
        "get_letter_counts": {
            "name": "get_letter_counts",
            "location": 37,
            "return": [],
            "arguments": {
                "s": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_frequency_order": {
            "name": "get_frequency_order",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "letter_counts": []
            }
        },
        "matches": {
            "name": "matches",
            "location": 79,
            "return": [
                "int"
            ],
            "arguments": {
                "s1": [
                    "list[str]"
                ],
                "s2": [
                    "str",
                    "bytes"
                ]
            }
        },
        "score_by_order": {
            "name": "score_by_order",
            "location": 87,
            "return": [
                "int"
            ],
            "arguments": {
                "str": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "score_blended": {
            "name": "score_blended",
            "location": 98,
            "return": [
                "int",
                "float",
                "list[]"
            ],
            "arguments": {
                "s": [
                    "str",
                    "bytes",
                    "None"
                ]
            }
        }
    },
    "cryptopals-python-master/crypto/hamming.py": {
        "bit_distance": {
            "name": "bit_distance",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "b1": [],
                "b2": [
                    "bytes",
                    "str",
                    "list[int]",
                    "int",
                    "bytearray",
                    "list[dict[, ]]"
                ]
            }
        },
        "normalized_bit_distance": {
            "name": "normalized_bit_distance",
            "location": 13,
            "return": [],
            "arguments": {
                "bs": [],
                "x": [
                    "bytes"
                ]
            }
        },
        "average_bit_distance": {
            "name": "average_bit_distance",
            "location": 19,
            "return": [
                "float"
            ],
            "arguments": {
                "bs": [],
                "x": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "cryptopals-python-master/crypto/xor.py": {
        "fixed_xor": {
            "name": "fixed_xor",
            "location": 6,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bs1": [],
                "bs2": [
                    "list[]",
                    "tuple[]",
                    "str",
                    "typing.Sequence[T]",
                    "typing.Sequence[int]"
                ]
            }
        },
        "single_byte_xor": {
            "name": "single_byte_xor",
            "location": 13,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bs": [],
                "b": [
                    "int"
                ]
            }
        },
        "break_single_byte_xor": {
            "name": "break_single_byte_xor",
            "location": 22,
            "return": [
                "tuple[typing.Optional[int]]"
            ],
            "arguments": {
                "bs": [
                    "bool",
                    "typing.Any",
                    "None",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "repeating_key_xor": {
            "name": "repeating_key_xor",
            "location": 41,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bs": [],
                "key": []
            }
        },
        "transpose": {
            "name": "transpose",
            "location": 48,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "bs": [],
                "key_size": [
                    "int"
                ]
            }
        },
        "guess_key": {
            "name": "guess_key",
            "location": 55,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bs": [
                    "bytes",
                    "int",
                    "str"
                ],
                "key_size": [
                    "bytes",
                    "int",
                    "str"
                ]
            }
        },
        "guess_key_sizes": {
            "name": "guess_key_sizes",
            "location": 63,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "bs": [
                    "bytes",
                    "dict[bytes, 'Queue[Any]']"
                ]
            }
        },
        "break_repeating_key_xor": {
            "name": "break_repeating_key_xor",
            "location": 73,
            "return": [
                "tuple[typing.Optional[int]]"
            ],
            "arguments": {
                "bs": [
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge1.py": {
        "hex_to_base64": {
            "name": "hex_to_base64",
            "location": 4,
            "return": [],
            "arguments": {
                "data": [
                    "str",
                    "dict[, ]",
                    "memoryview",
                    "bytes"
                ]
            }
        },
        "test_s1c1": {
            "name": "test_s1c1",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge2.py": {
        "test_s1c2": {
            "name": "test_s1c2",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge3.py": {
        "test_s1c3": {
            "name": "test_s1c3",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge4.py": {
        "find_encrypted": {
            "name": "find_encrypted",
            "location": 6,
            "return": [
                "None",
                "dict[, ]",
                "dict[str, str]",
                "bytes",
                "dict[int, int]",
                "dict[str, list[typing.Any]]",
                "dict[str, typing.Union[None,typing.Any,int,str]]"
            ],
            "arguments": {
                "hex_strs": [
                    "list[str]",
                    "list[object]",
                    "list[]",
                    "str"
                ]
            }
        },
        "test_s1c4": {
            "name": "test_s1c4",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge5.py": {
        "test_s1c5": {
            "name": "test_s1c5",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge6.py": {
        "test_transpose": {
            "name": "test_transpose",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_break_repeating_key_xor": {
            "name": "test_break_repeating_key_xor",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_s1c6": {
            "name": "test_s1c6",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-python-master/tests/set1/test_challenge7.py": {
        "strip": {
            "name": "strip",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "test_s1c7": {
            "name": "test_s1c7",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "csv-hound-master/client.py": {},
    "csv-hound-master/example.py": {},
    "csv-hound-master/csvhound/client.py": {},
    "csv-hound-master/csvhound/core.py": {
        "do_another_thing": {
            "name": "do_another_thing",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "file_exists": {
            "name": "file_exists",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "BaseHound.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHound.get_table_from_file": {
            "name": "get_table_from_file",
            "location": 32,
            "return": [
                "memoryview",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "input_file": [
                    "str",
                    "typing.Sequence[str]",
                    "None"
                ],
                "column_types": [
                    "None",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "BaseHound.describe_table": {
            "name": "describe_table",
            "location": 42,
            "return": [
                "typing.Iterator",
                "dict[, ]",
                "dict[str, str]",
                "typing.Type",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHound.distinct_values": {
            "name": "distinct_values",
            "location": 49,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "with_count": [
                    "bool"
                ]
            }
        },
        "BaseHound.get_columns": {
            "name": "get_columns",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "csv-hound-master/csvhound/logger.py": {},
    "csv-hound-master/csvhound/__init__.py": {
        "set_stream_logger": {
            "name": "set_stream_logger",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "typing.Text"
                ],
                "level": [],
                "format_string": [
                    "None",
                    "bool",
                    "bytes",
                    "str"
                ]
            }
        },
        "do_something": {
            "name": "do_something",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "csv-hound-master/csvhound/cli/cli.py": {
        "HoundCli.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundCli.get_titlebar_text": {
            "name": "get_titlebar_text",
            "location": 148,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundCli.get_status_text": {
            "name": "get_status_text",
            "location": 154,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ]
            }
        },
        "HoundCli.do_open": {
            "name": "do_open",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "str",
                    "bool",
                    "Exception"
                ]
            }
        },
        "HoundCli.do_inspect": {
            "name": "do_inspect",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "int",
                    "None",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "HoundCli.create_cmd_buffer": {
            "name": "create_cmd_buffer",
            "location": 200,
            "return": [
                "Buffer"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        },
        "HoundCli.create_cmd_control": {
            "name": "create_cmd_control",
            "location": 215,
            "return": [
                "BufferControl"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bool",
                    "float"
                ],
                "prompt": [
                    "typing.Text"
                ]
            }
        },
        "HoundCli.create_application": {
            "name": "create_application",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundCli.run_application": {
            "name": "run_application",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundCli.__init__._": {
            "name": "_",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        }
    },
    "csv-hound-master/csvhound/cli/__init__.py": {},
    "csv-hound-master/tests/test_clihound.py": {
        "HoundTestCase.test_model_creation": {
            "name": "test_model_creation",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundTestCase.test_get_table_from_file": {
            "name": "test_get_table_from_file",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundTestCase.test_describe_table": {
            "name": "test_describe_table",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoundTestCase.test_distinct_values": {
            "name": "test_distinct_values",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "csv-hound-master/tests/__init__.py": {}
}
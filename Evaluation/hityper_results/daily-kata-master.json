{
    "daily-kata-master/.vscode/.ropeproject/config.py": {
        "set_prefs": {
            "name": "set_prefs",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "prefs": []
            }
        },
        "project_opened": {
            "name": "project_opened",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [
                    "set[str]",
                    "bool"
                ]
            }
        }
    },
    "daily-kata-master/kata/python/adfly-encoder-decoder.py": {
        "adFly_decoder": {
            "name": "adFly_decoder",
            "location": 9,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "sc": []
            }
        },
        "adFly_encoder": {
            "name": "adFly_encoder",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        }
    },
    "daily-kata-master/kata/python/bouncing-balls.py": {
        "bouncingBall": {
            "name": "bouncingBall",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "h": [
                    "float",
                    "bool",
                    "str"
                ],
                "bounce": [
                    "float",
                    "bool",
                    "str"
                ],
                "window": [
                    "float",
                    "bool",
                    "str"
                ]
            }
        },
        "validateParams": {
            "name": "validateParams",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "h": [
                    "float",
                    "int"
                ],
                "bounce": [
                    "float",
                    "bool"
                ],
                "window": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "daily-kata-master/kata/python/roboscript-1.py": {
        "highlight": {
            "name": "highlight",
            "location": 7,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "daily-kata-master/kata/python/roboscript-2.py": {
        "execute": {
            "name": "execute",
            "location": 104,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "Cardinal.move": {
            "name": "move",
            "location": 15,
            "return": [
                "Cardinal"
            ],
            "arguments": {
                "self": [],
                "inc": [
                    "list[int]",
                    "list[list[str]]",
                    "bytearray",
                    "list[float]",
                    "int"
                ]
            }
        },
        "Cardinal.right": {
            "name": "right",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cardinal.left": {
            "name": "left",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Roboscript.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "Roboscript.execute": {
            "name": "execute",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Roboscript.perform": {
            "name": "perform",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instruction": [],
                "times": [
                    "int",
                    "float",
                    "typing.Callable[int, bool]"
                ]
            }
        },
        "Roboscript.output": {
            "name": "output",
            "location": 82,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Roboscript.getCoords": {
            "name": "getCoords",
            "location": 100,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "daily-kata-master/kata/python/spinning-rings.py": {
        "spinning_rings": {
            "name": "spinning_rings",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "inner_max": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "outer_max": [
                    "int"
                ]
            }
        }
    },
    "daily-kata-master/kata/python/ulam-sequences-1.py": {
        "ulam_sequence": {
            "name": "ulam_sequence",
            "location": 8,
            "return": [],
            "arguments": {
                "u0": [
                    "int",
                    "list[int]"
                ],
                "u1": [
                    "int",
                    "list[int]"
                ],
                "n": [
                    "int"
                ]
            }
        }
    }
}
{
    "data_models_analytics-master/api/setup.py": {},
    "data_models_analytics-master/api/data_models_analytics/hello_world.py": {},
    "data_models_analytics-master/api/data_models_analytics/utils/etl_table.py": {
        "ETLTable.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "io": [
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "list[dict[, ]]",
                    "str",
                    "bytes"
                ],
                "schema": [
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "list[dict[, ]]",
                    "str",
                    "bytes"
                ],
                "timezone": [
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "list[dict[, ]]",
                    "str",
                    "bytes"
                ],
                "dataframe": [
                    "None",
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "list[dict[, ]]",
                    "str",
                    "bytes"
                ],
                "Model": [
                    "None",
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "list[dict[, ]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "ETLTable.to_datetime": {
            "name": "to_datetime",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "None",
                    "typing.Hashable",
                    "float",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "ETLTable.to_date": {
            "name": "to_date",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "typing.Any",
                    "int",
                    "float"
                ]
            }
        },
        "ETLTable.to_str": {
            "name": "to_str",
            "location": 52,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None",
                    "int",
                    "float",
                    "typing.Any",
                    "typing.Sequence[typing.Any]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "ETLTable.to_float": {
            "name": "to_float",
            "location": 59,
            "return": [
                "None",
                "float"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None",
                    "typing.Any",
                    "bytes",
                    "int"
                ]
            }
        },
        "ETLTable.to_dicts": {
            "name": "to_dicts",
            "location": 68,
            "return": [
                "int",
                "typing.Type",
                "typing.DefaultDict",
                "dict[str, dict[str, typing.Any]]",
                "list[str]",
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETLTable.to_models": {
            "name": "to_models",
            "location": 79,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETLTable.to_dataframe": {
            "name": "to_dataframe",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ETLTable.extract": {
            "name": "extract",
            "location": 98,
            "return": [
                "ETLTable"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETLTable.transform": {
            "name": "transform",
            "location": 108,
            "return": [
                "ETLTable"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETLTable.load": {
            "name": "load",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/api/tests/__init__.py": {},
    "data_models_analytics-master/api/tests/utils/test_etl_table.py": {
        "timezone": {
            "name": "timezone",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "schema": {
            "name": "schema",
            "location": 23,
            "return": [
                "list[dict[typing.Text, typing.Text]]"
            ],
            "arguments": {}
        },
        "Model": {
            "name": "Model",
            "location": 39,
            "return": [
                "Model"
            ],
            "arguments": {}
        },
        "extract_dataframe": {
            "name": "extract_dataframe",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "io": {
            "name": "io",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "extract_dataframe": []
            }
        },
        "etl_table": {
            "name": "etl_table",
            "location": 104,
            "return": [
                "ETLTable"
            ],
            "arguments": {
                "io": [
                    "typing.BinaryIO",
                    "tuple[typing.Union[int,int,bytearray]]",
                    "typing.Callable[, ]"
                ],
                "schema": [
                    "typing.BinaryIO",
                    "tuple[typing.Union[int,int,bytearray]]",
                    "typing.Callable[, ]"
                ],
                "Model": [
                    "typing.BinaryIO",
                    "tuple[typing.Union[int,int,bytearray]]",
                    "typing.Callable[, ]"
                ],
                "timezone": [
                    "typing.BinaryIO",
                    "tuple[typing.Union[int,int,bytearray]]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "transform_data": {
            "name": "transform_data",
            "location": 132,
            "return": [
                "list[dict[typing.Text, typing.Union[int,typing.Text,float]]]"
            ],
            "arguments": {}
        },
        "transform_dataframe": {
            "name": "transform_dataframe",
            "location": 152,
            "return": [],
            "arguments": {
                "transform_data": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "transform_dataframe_row": {
            "name": "transform_dataframe_row",
            "location": 157,
            "return": [],
            "arguments": {
                "transform_dataframe": [
                    "int",
                    "list[int]",
                    "float"
                ]
            }
        },
        "models": {
            "name": "models",
            "location": 162,
            "return": [
                "list[Model]"
            ],
            "arguments": {
                "Model": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "transform_data": []
            }
        },
        "model": {
            "name": "model",
            "location": 170,
            "return": [
                "Model"
            ],
            "arguments": {
                "Model": [
                    "dict[, ]",
                    "str"
                ],
                "transform_data": [
                    "str"
                ]
            }
        },
        "test_to_datetime": {
            "name": "test_to_datetime",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [],
                "value": [
                    "str",
                    "None",
                    "float",
                    "bool"
                ],
                "expected": [
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        },
        "test_to_date": {
            "name": "test_to_date",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [],
                "value": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "expected": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_to_str": {
            "name": "test_to_str",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [
                    "str",
                    "float",
                    "list[\"ItemShippingTarget\"]",
                    "int"
                ],
                "value": [
                    "str",
                    "float",
                    "list[\"ItemShippingTarget\"]",
                    "int"
                ],
                "expected": [
                    "str",
                    "float",
                    "list[\"ItemShippingTarget\"]",
                    "int"
                ]
            }
        },
        "test_to_float": {
            "name": "test_to_float",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [
                    "typing.Callable[, ]",
                    "list[str]",
                    "bool"
                ],
                "value": [
                    "typing.Callable[, ]",
                    "list[str]",
                    "bool"
                ],
                "expected": [
                    "typing.Callable[, ]",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "test_constructor": {
            "name": "test_constructor",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "io": [],
                "schema": [],
                "timezone": [],
                "extract_dataframe": [],
                "Model": [
                    "bytes"
                ]
            }
        },
        "test_extract": {
            "name": "test_extract",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [],
                "extract_dataframe": [
                    "bool",
                    "typing.Sequence[str]"
                ]
            }
        },
        "test_transform": {
            "name": "test_transform",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [],
                "extract_dataframe": [
                    "typing.Callable[list[], None]"
                ],
                "transform_dataframe": []
            }
        },
        "test_to_models": {
            "name": "test_to_models",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": [],
                "transform_dataframe": [
                    "typing.Callable[list[], None]",
                    "list[str]",
                    "set[str]"
                ],
                "models": [
                    "list[str]",
                    "list[dict[, ]]"
                ],
                "Model": [
                    "typing.Callable[M, None]",
                    "bool",
                    "str",
                    "list[typing.Any]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "test_load": {
            "name": "test_load",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "etl_table": []
            }
        },
        "Model.Model.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "published": [
                    "None"
                ],
                "imported": [
                    "None"
                ],
                "value": [
                    "None"
                ]
            }
        },
        "Model.Model.__str__": {
            "name": "__str__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.Model.__eq__": {
            "name": "__eq__",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Model.Model.__lt__": {
            "name": "__lt__",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "data_models_analytics-master/backend/manage.py": {},
    "data_models_analytics-master/backend/merge_production_dotenvs_in_dotenv.py": {
        "merge": {
            "name": "merge",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "output_file_path": [
                    "str"
                ],
                "merged_file_paths": [
                    "str",
                    "list[str]",
                    "tuple[str]",
                    "bytes"
                ],
                "append_linesep": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge": {
            "name": "test_merge",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_factory": [],
                "merged_file_count": [
                    "int",
                    "tuple[typing.Union[str,str]]",
                    "str"
                ],
                "append_linesep": [
                    "bool",
                    "str"
                ]
            }
        }
    },
    "data_models_analytics-master/backend/tasks.py": {},
    "data_models_analytics-master/backend/__init__.py": {},
    "data_models_analytics-master/backend/apps/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "data_models_analytics-master/backend/apps/__init__.py": {},
    "data_models_analytics-master/backend/apps/contrib/__init__.py": {},
    "data_models_analytics-master/backend/apps/contrib/sites/__init__.py": {},
    "data_models_analytics-master/backend/apps/contrib/sites/migrations/0001_initial.py": {},
    "data_models_analytics-master/backend/apps/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "data_models_analytics-master/backend/apps/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "data_models_analytics-master/backend/apps/contrib/sites/migrations/__init__.py": {},
    "data_models_analytics-master/backend/apps/docs/admin.py": {},
    "data_models_analytics-master/backend/apps/docs/apps.py": {},
    "data_models_analytics-master/backend/apps/docs/models.py": {},
    "data_models_analytics-master/backend/apps/docs/urls.py": {},
    "data_models_analytics-master/backend/apps/docs/views.py": {},
    "data_models_analytics-master/backend/apps/docs/__init__.py": {},
    "data_models_analytics-master/backend/apps/docs/source/conf.py": {},
    "data_models_analytics-master/backend/apps/docs/tests/test_urls.py": {
        "test_docs": {
            "name": "test_docs",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "dict[, ]"
                ],
                "url": [
                    "dict[, ]"
                ]
            }
        }
    },
    "data_models_analytics-master/backend/apps/docs/tests/__init__.py": {},
    "data_models_analytics-master/backend/apps/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ],
                "sociallogin": [
                    "dict[, ]"
                ]
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/admin.py": {},
    "data_models_analytics-master/backend/apps/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/urls.py": {},
    "data_models_analytics-master/backend/apps/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/__init__.py": {},
    "data_models_analytics-master/backend/apps/users/migrations/0001_initial.py": {},
    "data_models_analytics-master/backend/apps/users/migrations/__init__.py": {},
    "data_models_analytics-master/backend/apps/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "data_models_analytics-master/backend/apps/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int"
                ],
                "request_factory": []
            }
        }
    },
    "data_models_analytics-master/backend/apps/users/tests/__init__.py": {},
    "data_models_analytics-master/backend/config/urls.py": {},
    "data_models_analytics-master/backend/config/wsgi.py": {},
    "data_models_analytics-master/backend/config/__init__.py": {},
    "data_models_analytics-master/backend/config/settings/base.py": {},
    "data_models_analytics-master/backend/config/settings/local.py": {},
    "data_models_analytics-master/backend/config/settings/production.py": {},
    "data_models_analytics-master/backend/config/settings/test.py": {},
    "data_models_analytics-master/backend/config/settings/__init__.py": {},
    "data_models_analytics-master/blog/pelican-livereload.py": {
        "compile": {
            "name": "compile",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "data_models_analytics-master/blog/pelicanconf.py": {},
    "data_models_analytics-master/blog/publishconf.py": {},
    "data_models_analytics-master/blog/tasks.py": {
        "clean": {
            "name": "clean",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [
                    "str",
                    "tuple[str]"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "rebuild": {
            "name": "rebuild",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "livereload": {
            "name": "livereload",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "publish": {
            "name": "publish",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        }
    },
    "data_models_analytics-master/sandbox/data_models_analytics_path.py": {},
    "data_models_analytics-master/sandbox/getting_started.py": {
        "run": {
            "name": "run",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "deluge-master/deluge/application.py": {
        "main": {
            "name": "main",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Vote.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "page": [
                    "int",
                    "str",
                    "None",
                    "list[float]"
                ],
                "useful": [
                    "int",
                    "str",
                    "None",
                    "list[float]"
                ],
                "fields": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "ip": [
                    "str",
                    "None",
                    "int",
                    "bytes"
                ],
                "vote_id": [
                    "int",
                    "None",
                    "str",
                    "dict['cirq.Qid', str]",
                    "dict[str, str]"
                ]
            }
        },
        "Vote.parse": {
            "name": "parse",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, typing.Any]"
                ],
                "request": []
            }
        },
        "Vote.parse_qs": {
            "name": "parse_qs",
            "location": 83,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, str]"
                ],
                "query_string": [
                    "str"
                ]
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection_uri": [
                    "str",
                    "bool",
                    "float"
                ],
                "votesSizeBytes": [
                    "int",
                    "None",
                    "str"
                ]
            }
        },
        "Connection.vote": {
            "name": "vote",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vote": [
                    "str",
                    "None"
                ]
            }
        },
        "Connection.vote_initial": {
            "name": "vote_initial",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vote": [
                    "str",
                    "None"
                ]
            }
        },
        "Deluge.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int"
                ]
            }
        },
        "Deluge.application": {
            "name": "application",
            "location": 150,
            "return": [
                "MethodNotAllowed",
                "Response",
                "BadRequest"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Deluge.run": {
            "name": "run",
            "location": 176,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.TextIO",
                    "int",
                    "float"
                ]
            }
        }
    },
    "deluge-master/deluge/test_anonymize.py": {
        "test_ipv4": {
            "name": "test_ipv4",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ipv6": {
            "name": "test_ipv6",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "deluge-master/deluge/utils.py": {
        "anonymize_ip": {
            "name": "anonymize_ip",
            "location": 4,
            "return": [],
            "arguments": {
                "ip": [
                    "str"
                ]
            }
        }
    },
    "deluge-master/deluge/__init__.py": {},
    "deluge-master/deluge/__main__.py": {},
    "deluge-master/stubs/pymongo/__init__.py": {},
    "deluge-master/stubs/pymongo/collection/__init__.py": {
        "Collection.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "database": [],
                "name": []
            }
        },
        "Collection.create_index": {
            "name": "create_index",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "keys": []
            }
        },
        "Collection.save": {
            "name": "save",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "doc": []
            }
        }
    },
    "deluge-master/stubs/pymongo/database/__init__.py": {
        "Database.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "Database.create_collection": {
            "name": "create_collection",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "capped": [],
                "size": []
            }
        },
        "Database.__getitem__": {
            "name": "__getitem__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "deluge-master/stubs/pymongo/errors/__init__.py": {},
    "deluge-master/stubs/pymongo/mongo_client/__init__.py": {
        "MongoClient.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "ssl": []
            }
        },
        "MongoClient.__getitem__": {
            "name": "__getitem__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "deluge-master/stubs/werkzeug/__init__.py": {},
    "deluge-master/stubs/werkzeug/exceptions/__init__.py": {
        "MethodNotAllowed.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "valid_methods": []
            }
        }
    },
    "deluge-master/stubs/werkzeug/serving/__init__.py": {
        "run_simple": {
            "name": "run_simple",
            "location": 5,
            "return": [],
            "arguments": {
                "host": [],
                "port": [],
                "app": []
            }
        }
    },
    "deluge-master/stubs/werkzeug/wrappers/__init__.py": {
        "Request.method": {
            "name": "method",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.path": {
            "name": "path",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.query_string": {
            "name": "query_string",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.access_route": {
            "name": "access_route",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.application": {
            "name": "application",
            "location": 19,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "Response.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "content_type": []
            }
        }
    }
}
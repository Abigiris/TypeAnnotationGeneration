{
    "dependency-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 13,
            "return": [],
            "arguments": {
                "package": []
            }
        },
        "get_packages": {
            "name": "get_packages",
            "location": 21,
            "return": [
                "list[]"
            ],
            "arguments": {
                "package": []
            }
        }
    },
    "dependency-master/dependency/core.py": {
        "is_context_manager": {
            "name": "is_context_manager",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": []
            }
        },
        "provides_parameterized_type": {
            "name": "provides_parameterized_type",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "func": []
            }
        },
        "get_key": {
            "name": "get_key",
            "location": 135,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "param_name": [],
                "parameterized_types": []
            }
        },
        "create_step": {
            "name": "create_step",
            "location": 152,
            "return": [
                "Step"
            ],
            "arguments": {
                "func": [],
                "provided_type": [],
                "param_name": [],
                "parameterized_types": []
            }
        },
        "create_steps": {
            "name": "create_steps",
            "location": 184,
            "return": [
                "list[]"
            ],
            "arguments": {
                "func": [],
                "provided_type": [],
                "param_name": [],
                "providers": [],
                "parameterized_types": [],
                "seen_keys": []
            }
        },
        "InjectedFunction.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "steps": [],
                "required_state": []
            }
        },
        "InjectedFunction.__call__": {
            "name": "__call__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "None"
                ]
            }
        },
        "InjectedFunction.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "InjectedFunction._step_repr": {
            "name": "_step_repr",
            "location": 60,
            "return": [
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "self": [],
                "step": [],
                "indent": [
                    "int"
                ],
                "final": [
                    "bool"
                ]
            }
        },
        "Injector.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "providers": [
                    "None"
                ],
                "required_state": [
                    "None"
                ]
            }
        },
        "Injector.add_provider": {
            "name": "add_provider",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "Injector.inject": {
            "name": "inject",
            "location": 105,
            "return": [
                "InjectedFunction"
            ],
            "arguments": {
                "self": [],
                "func": []
            }
        }
    },
    "dependency-master/dependency/wrappers.py": {
        "_get_default_injector": {
            "name": "_get_default_injector",
            "location": 8,
            "return": [
                "Injector"
            ],
            "arguments": {}
        },
        "set_required_state": {
            "name": "set_required_state",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "required_state": []
            }
        },
        "add_provider": {
            "name": "add_provider",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "func": []
            }
        },
        "inject": {
            "name": "inject",
            "location": 26,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "dependency-master/dependency/__init__.py": {},
    "dependency-master/examples/test_framework.py": {
        "run_tests": {
            "name": "run_tests",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dependency-master/examples/web_framework.py": {
        "get_request": {
            "name": "get_request",
            "location": 27,
            "return": [
                "Request"
            ],
            "arguments": {
                "environ": []
            }
        },
        "get_method": {
            "name": "get_method",
            "location": 32,
            "return": [
                "Method"
            ],
            "arguments": {
                "environ": []
            }
        },
        "get_path": {
            "name": "get_path",
            "location": 37,
            "return": [
                "Path"
            ],
            "arguments": {
                "environ": []
            }
        },
        "get_headers": {
            "name": "get_headers",
            "location": 42,
            "return": [
                "Headers"
            ],
            "arguments": {
                "environ": []
            }
        },
        "get_header": {
            "name": "get_header",
            "location": 47,
            "return": [
                "Header"
            ],
            "arguments": {
                "name": [],
                "headers": []
            }
        },
        "get_queryparams": {
            "name": "get_queryparams",
            "location": 52,
            "return": [
                "QueryParams"
            ],
            "arguments": {
                "environ": []
            }
        },
        "get_queryparam": {
            "name": "get_queryparam",
            "location": 57,
            "return": [
                "QueryParam"
            ],
            "arguments": {
                "name": [],
                "params": []
            }
        },
        "get_url_arg": {
            "name": "get_url_arg",
            "location": 62,
            "return": [],
            "arguments": {
                "name": [],
                "args": []
            }
        },
        "App.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "urls": []
            }
        },
        "App.__call__": {
            "name": "__call__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "environ": [],
                "start_response": []
            }
        },
        "App.run": {
            "name": "run",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hostname": [
                    "typing.Text"
                ],
                "port": [
                    "int"
                ]
            }
        }
    },
    "dependency-master/examples/__init__.py": {},
    "dependency-master/tests/test_dependancy.py": {
        "test_injection": {
            "name": "test_injection",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wrappers": {
            "name": "test_wrappers",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_context_manager": {
            "name": "test_context_manager",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_param_name": {
            "name": "test_param_name",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_injection.get_method": {
            "name": "get_method",
            "location": 19,
            "return": [
                "Method"
            ],
            "arguments": {
                "environ": []
            }
        },
        "test_injection.get_headers": {
            "name": "get_headers",
            "location": 22,
            "return": [
                "Headers"
            ],
            "arguments": {
                "environ": []
            }
        },
        "test_injection.echo_method_and_headers": {
            "name": "echo_method_and_headers",
            "location": 43,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "method": [],
                "headers": []
            }
        },
        "test_wrappers.get_method": {
            "name": "get_method",
            "location": 81,
            "return": [
                "Method"
            ],
            "arguments": {
                "environ": []
            }
        },
        "test_wrappers.get_headers": {
            "name": "get_headers",
            "location": 85,
            "return": [
                "Headers"
            ],
            "arguments": {
                "environ": []
            }
        },
        "test_wrappers.echo_method_and_headers": {
            "name": "echo_method_and_headers",
            "location": 101,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "method": [],
                "headers": []
            }
        },
        "test_context_manager.do_something": {
            "name": "do_something",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "session": []
            }
        },
        "test_param_name.get_lookup": {
            "name": "get_lookup",
            "location": 166,
            "return": [],
            "arguments": {
                "name": [],
                "lookups": []
            }
        },
        "test_param_name.make_lookups": {
            "name": "make_lookups",
            "location": 178,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "test_context_manager.Session.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "test_context_manager.Session.__enter__": {
            "name": "__enter__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "test_context_manager.Session.__exit__": {
            "name": "__exit__",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
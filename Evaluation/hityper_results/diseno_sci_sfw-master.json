{
    "diseno_sci_sfw-master/extra/plot/test_particle_plot.py": {
        "test_ParticleOOP_scatterhist": {
            "name": "test_ParticleOOP_scatterhist",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "fig_test": [],
                "fig_ref": []
            }
        },
        "ParticlePlotter.__repr__": {
            "name": "__repr__",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParticlePlotter.__call__": {
            "name": "__call__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "kind": [
                    "typing.Text"
                ]
            }
        },
        "ParticlePlotter.scatter_hexbin": {
            "name": "scatter_hexbin",
            "location": 19,
            "return": [
                "list[]",
                "float",
                "int",
                "list[int]"
            ],
            "arguments": {
                "self": [],
                "ax": [
                    "None",
                    "tuple[typing.Union[float,float]]",
                    "int",
                    "typing.Any",
                    "typing.Generator[]"
                ],
                "hexbin_kws": [
                    "None"
                ],
                "scatter_kws": [
                    "None",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "ParticlePlotter.scatter_hist": {
            "name": "scatter_hist",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "ax": [
                    "None",
                    "tuple[typing.Union[float,float]]",
                    "int",
                    "typing.Any",
                    "typing.Generator[]"
                ],
                "hist_kws": [
                    "None"
                ],
                "scatter_kws": [
                    "None",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "ParticleOOPAcc.plot": {
            "name": "plot",
            "location": 55,
            "return": [
                "ParticlePlotter"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase01/proyectos/build.py": {},
    "diseno_sci_sfw-master/legacy/clase02/codes/historia.py": {
        "matar": {
            "name": "matar",
            "location": 1,
            "return": [
                "bool"
            ],
            "arguments": {
                "bicho": [],
                "arma": []
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase08/code/test_sample.py": {
        "inc": {
            "name": "inc",
            "location": 1,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float"
                ]
            }
        },
        "test_answer": {
            "name": "test_answer",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase08/code/test_typeerror.py": {
        "sum": {
            "name": "sum",
            "location": 4,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "a": [
                    "int"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "test_mytest": {
            "name": "test_mytest",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_buggy_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "dict[, ]",
                    "dict[int, int]"
                ],
                "num2": [
                    "int",
                    "str",
                    "dict[, ]",
                    "dict[int, int]"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "num2": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "expected": [
                    "int",
                    "list[]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_cov.py": {
        "division": {
            "name": "division",
            "location": 2,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "sum": {
            "name": "sum",
            "location": 5,
            "return": [
                "int",
                "float",
                "list[typing.Union[int,int]]"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "list[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "list[int]"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_param_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "num2": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "expected": [
                    "int",
                    "list[]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_property_example.py": {
        "sum": {
            "name": "sum",
            "location": 4,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_property_srink_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase09/code/test_property_v_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/example_ipdb.py": {
        "fact": {
            "name": "fact",
            "location": 3,
            "return": [
                "int"
            ],
            "arguments": {
                "num": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/example_ipdb_exception.py": {
        "div": {
            "name": "div",
            "location": 6,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/server.py": {
        "random": {
            "name": "random",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/test_div.py": {
        "div": {
            "name": "div",
            "location": 3,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/test_roll.py": {
        "roll": {
            "name": "roll",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "success": [
                    "int"
                ]
            }
        },
        "test_win": {
            "name": "test_win",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lose": {
            "name": "test_lose",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase10/code/test_roll_dec.py": {
        "roll": {
            "name": "roll",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "success": [
                    "int"
                ]
            }
        },
        "test_win": {
            "name": "test_win",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "mget": []
            }
        },
        "test_lose": {
            "name": "test_lose",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "mget": []
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase16/cli/prog.py": {},
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-2.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-3.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-4.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-5.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-6.py": {
        "mean": {
            "name": "mean",
            "location": 7,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 12,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 21,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 38,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence-7.py": {
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 7,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 24,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/cProfile/confidence.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 19,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 37,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/time/printdf.py": {
        "open_file": {
            "name": "open_file",
            "location": 19,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/timeit/fib1.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/timeit/fib2.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/timeit/fib3.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [],
            "arguments": {
                "n": [
                    "int",
                    "float"
                ],
                "m": []
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase17/timeit/fib4.py": {
        "fib": {
            "name": "fib",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase18/libs/dask_data_creation.py": {
        "generate_sample_data": {
            "name": "generate_sample_data",
            "location": 11,
            "return": [
                "dict[, list[dict[typing.Text, ]]]"
            ],
            "arguments": {}
        },
        "generate_dask_bag_files": {
            "name": "generate_dask_bag_files",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_dask_dataframe_files": {
            "name": "generate_dask_dataframe_files",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_presentation_data": {
            "name": "generate_presentation_data",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/legacy/clase18/libs/__init__.py": {},
    "diseno_sci_sfw-master/legacy/clase20/cython/ez_setup.py": {
        "_python_cmd": {
            "name": "_python_cmd",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "_install": {
            "name": "_install",
            "location": 48,
            "return": [],
            "arguments": {
                "archive_filename": [],
                "install_args": []
            }
        },
        "_build_egg": {
            "name": "_build_egg",
            "location": 60,
            "return": [],
            "arguments": {
                "egg": [],
                "archive_filename": [],
                "to_dir": []
            }
        },
        "archive_context": {
            "name": "archive_context",
            "location": 90,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_do_download": {
            "name": "_do_download",
            "location": 115,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "download_delay": []
            }
        },
        "use_setuptools": {
            "name": "use_setuptools",
            "location": 134,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "download_delay": []
            }
        },
        "_conflict_bail": {
            "name": "_conflict_bail",
            "location": 173,
            "return": [],
            "arguments": {
                "VC_err": [],
                "version": []
            }
        },
        "_unload_pkg_resources": {
            "name": "_unload_pkg_resources",
            "location": 191,
            "return": [],
            "arguments": {}
        },
        "_clean_check": {
            "name": "_clean_check",
            "location": 200,
            "return": [],
            "arguments": {
                "cmd": [],
                "target": []
            }
        },
        "download_file_powershell": {
            "name": "download_file_powershell",
            "location": 214,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_powershell": {
            "name": "has_powershell",
            "location": 236,
            "return": [],
            "arguments": {}
        },
        "download_file_curl": {
            "name": "download_file_curl",
            "location": 250,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_curl": {
            "name": "has_curl",
            "location": 255,
            "return": [],
            "arguments": {}
        },
        "download_file_wget": {
            "name": "download_file_wget",
            "location": 266,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_wget": {
            "name": "has_wget",
            "location": 271,
            "return": [],
            "arguments": {}
        },
        "download_file_insecure": {
            "name": "download_file_insecure",
            "location": 282,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "get_best_downloader": {
            "name": "get_best_downloader",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "download_setuptools": {
            "name": "download_setuptools",
            "location": 308,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "delay": [],
                "downloader_factory": []
            }
        },
        "_build_install_args": {
            "name": "_build_install_args",
            "location": 336,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 345,
            "return": [],
            "arguments": {}
        },
        "_download_args": {
            "name": "_download_args",
            "location": 374,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "main": {
            "name": "main",
            "location": 384,
            "return": [],
            "arguments": {}
        },
        "ContextualZipFile.__enter__": {
            "name": "__enter__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContextualZipFile.__exit__": {
            "name": "__exit__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "traceback": []
            }
        },
        "ContextualZipFile.__new__": {
            "name": "__new__",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase20/cython/setup.py": {},
    "diseno_sci_sfw-master/legacy/clase20/fortran/setup.py": {},
    "diseno_sci_sfw-master/legacy/clase21/ctypes/callclib1.py": {
        "call_function_with_no_args": {
            "name": "call_function_with_no_args",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": []
            }
        },
        "call_string_modifier": {
            "name": "call_string_modifier",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": []
            }
        },
        "call_memory_allocation": {
            "name": "call_memory_allocation",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/legacy/clase21/c_extensions/setup.py": {
        "main": {
            "name": "main",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad1/codes/historia.py": {
        "matar": {
            "name": "matar",
            "location": 1,
            "return": [
                "bool"
            ],
            "arguments": {
                "bicho": [],
                "arma": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/02_style_code/style_example.py": {
        "OnlyEven": {
            "name": "OnlyEven",
            "location": 4,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "long_line": {
            "name": "long_line",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool"
                ]
            }
        },
        "Animal.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nombre": [
                    "int",
                    "float"
                ]
            }
        },
        "Animal.nombre": {
            "name": "nombre",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Animal.vivir": {
            "name": "vivir",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Animal.morirse": {
            "name": "morirse",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mamifero.Lactar": {
            "name": "Lactar",
            "location": 26,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mamifero.nacer": {
            "name": "nacer",
            "location": 28,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/03_testing_code/test_sample.py": {
        "inc": {
            "name": "inc",
            "location": 1,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float"
                ]
            }
        },
        "test_answer": {
            "name": "test_answer",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/03_testing_code/test_typeerror.py": {
        "sum": {
            "name": "sum",
            "location": 4,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "a": [
                    "int"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "test_mytest": {
            "name": "test_mytest",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/04_code_coverage_code/test_cov.py": {
        "division": {
            "name": "division",
            "location": 2,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "sum": {
            "name": "sum",
            "location": 5,
            "return": [
                "int",
                "float",
                "list[typing.Union[int,int]]"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "list[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "list[int]"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/05_debug_code/test_div.py": {
        "div": {
            "name": "div",
            "location": 4,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/06_mock_code/server.py": {
        "random": {
            "name": "random",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/06_mock_code/test_div.py": {
        "div": {
            "name": "div",
            "location": 3,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/06_mock_code/test_roll.py": {
        "roll": {
            "name": "roll",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "success": [
                    "int"
                ]
            }
        },
        "test_win": {
            "name": "test_win",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lose": {
            "name": "test_lose",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/06_mock_code/test_roll_dec.py": {
        "roll": {
            "name": "roll",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "success": [
                    "int"
                ]
            }
        },
        "test_win": {
            "name": "test_win",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "mget": []
            }
        },
        "test_lose": {
            "name": "test_lose",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "mget": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_buggy_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "dict[, ]",
                    "dict[int, int]"
                ],
                "num2": [
                    "int",
                    "str",
                    "dict[, ]",
                    "dict[int, int]"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "num2": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "expected": [
                    "int",
                    "list[]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_cov.py": {
        "division": {
            "name": "division",
            "location": 2,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        },
        "sum": {
            "name": "sum",
            "location": 5,
            "return": [
                "int",
                "float",
                "list[typing.Union[int,int]]"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "list[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "list[int]"
                ]
            }
        },
        "test_division": {
            "name": "test_division",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_param_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "num2": [
                    "int",
                    "list[]",
                    "list[int]"
                ],
                "expected": [
                    "int",
                    "list[]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_property_example.py": {
        "sum": {
            "name": "sum",
            "location": 4,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_property_srink_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/10_PBT/test_property_v_example.py": {
        "sum": {
            "name": "sum",
            "location": 1,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "str",
                    "float"
                ],
                "num2": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "typing.Sequence[int]"
                ],
                "num2": [
                    "int",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/11_mutation/funclibs.py": {
        "risso_candidate_entropy": {
            "name": "risso_candidate_entropy",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "windows_size": []
            }
        },
        "argnearest": {
            "name": "argnearest",
            "location": 36,
            "return": [],
            "arguments": {
                "arr": [],
                "v": []
            }
        },
        "loss_sequence": {
            "name": "loss_sequence",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "windows_size": [],
                "loss_probability": [],
                "seed": [
                    "None"
                ]
            }
        },
        "make_stock_price": {
            "name": "make_stock_price",
            "location": 53,
            "return": [
                "float"
            ],
            "arguments": {
                "price": [],
                "loss": [],
                "seed": [
                    "None"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad2/11_mutation/test_funclibs.py": {
        "test_risso_candidate_entropy": {
            "name": "test_risso_candidate_entropy",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "windows_size": [
                    "bool",
                    "list[str]",
                    "str"
                ],
                "h": [
                    "bool",
                    "list[]",
                    "set[]",
                    "str",
                    "None"
                ]
            }
        },
        "test_risso_candidate_entropy_le0": {
            "name": "test_risso_candidate_entropy_le0",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "windows_size": [
                    "str",
                    "int",
                    "float",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "test_argnearest": {
            "name": "test_argnearest",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_loss_sequence": {
            "name": "test_loss_sequence",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "windows_size": [
                    "int",
                    "str",
                    "list[float]",
                    "float"
                ],
                "sequence": [
                    "str",
                    "bool",
                    "list[]",
                    "set[]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_make_stock_price": {
            "name": "test_make_stock_price",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-2.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-3.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-4.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-5.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 19,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 36,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int",
                    "set[str]",
                    "list[int]"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-6.py": {
        "mean": {
            "name": "mean",
            "location": 7,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 12,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 21,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 38,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence-7.py": {
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 7,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 24,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/cProfile/confidence.py": {
        "mean": {
            "name": "mean",
            "location": 5,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "variance": {
            "name": "variance",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "values": []
            }
        },
        "confidence_interval": {
            "name": "confidence_interval",
            "location": 19,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "values": [],
                "iterations": [
                    "int",
                    "float"
                ],
                "alpha": [
                    "int",
                    "float"
                ]
            }
        },
        "adaptive_confidence_interval": {
            "name": "adaptive_confidence_interval",
            "location": 37,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "values": [
                    "typing.Sequence[float]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "max_iterations": [
                    "int"
                ],
                "alpha": [
                    "float"
                ],
                "trials": [
                    "int"
                ],
                "variance_threshold": [
                    "float"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_size": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/time/printdf.py": {
        "open_file": {
            "name": "open_file",
            "location": 19,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/timeit/fib1.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/timeit/fib2.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/timeit/fib3.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [],
            "arguments": {
                "n": [
                    "int",
                    "float"
                ],
                "m": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/01_profiling/timeit/fib4.py": {
        "fib": {
            "name": "fib",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad4/libs/dask_data_creation.py": {
        "generate_sample_data": {
            "name": "generate_sample_data",
            "location": 11,
            "return": [
                "dict[, list[dict[typing.Text, ]]]"
            ],
            "arguments": {}
        },
        "generate_dask_bag_files": {
            "name": "generate_dask_bag_files",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_dask_dataframe_files": {
            "name": "generate_dask_dataframe_files",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_presentation_data": {
            "name": "generate_presentation_data",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad4/libs/__init__.py": {},
    "diseno_sci_sfw-master/unidad5/ctypes/callclib1.py": {
        "call_function_with_no_args": {
            "name": "call_function_with_no_args",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": []
            }
        },
        "call_string_modifier": {
            "name": "call_string_modifier",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": []
            }
        },
        "call_memory_allocation": {
            "name": "call_memory_allocation",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "libc": [
                    "int"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad5/cython/ez_setup.py": {
        "_python_cmd": {
            "name": "_python_cmd",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "_install": {
            "name": "_install",
            "location": 48,
            "return": [],
            "arguments": {
                "archive_filename": [],
                "install_args": []
            }
        },
        "_build_egg": {
            "name": "_build_egg",
            "location": 60,
            "return": [],
            "arguments": {
                "egg": [],
                "archive_filename": [],
                "to_dir": []
            }
        },
        "archive_context": {
            "name": "archive_context",
            "location": 90,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_do_download": {
            "name": "_do_download",
            "location": 115,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "download_delay": []
            }
        },
        "use_setuptools": {
            "name": "use_setuptools",
            "location": 134,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "download_delay": []
            }
        },
        "_conflict_bail": {
            "name": "_conflict_bail",
            "location": 173,
            "return": [],
            "arguments": {
                "VC_err": [],
                "version": []
            }
        },
        "_unload_pkg_resources": {
            "name": "_unload_pkg_resources",
            "location": 191,
            "return": [],
            "arguments": {}
        },
        "_clean_check": {
            "name": "_clean_check",
            "location": 200,
            "return": [],
            "arguments": {
                "cmd": [],
                "target": []
            }
        },
        "download_file_powershell": {
            "name": "download_file_powershell",
            "location": 214,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_powershell": {
            "name": "has_powershell",
            "location": 236,
            "return": [],
            "arguments": {}
        },
        "download_file_curl": {
            "name": "download_file_curl",
            "location": 250,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_curl": {
            "name": "has_curl",
            "location": 255,
            "return": [],
            "arguments": {}
        },
        "download_file_wget": {
            "name": "download_file_wget",
            "location": 266,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "has_wget": {
            "name": "has_wget",
            "location": 271,
            "return": [],
            "arguments": {}
        },
        "download_file_insecure": {
            "name": "download_file_insecure",
            "location": 282,
            "return": [],
            "arguments": {
                "url": [],
                "target": []
            }
        },
        "get_best_downloader": {
            "name": "get_best_downloader",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "download_setuptools": {
            "name": "download_setuptools",
            "location": 308,
            "return": [],
            "arguments": {
                "version": [],
                "download_base": [],
                "to_dir": [],
                "delay": [],
                "downloader_factory": []
            }
        },
        "_build_install_args": {
            "name": "_build_install_args",
            "location": 336,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 345,
            "return": [],
            "arguments": {}
        },
        "_download_args": {
            "name": "_download_args",
            "location": 374,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "main": {
            "name": "main",
            "location": 384,
            "return": [],
            "arguments": {}
        },
        "ContextualZipFile.__enter__": {
            "name": "__enter__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContextualZipFile.__exit__": {
            "name": "__exit__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "traceback": []
            }
        },
        "ContextualZipFile.__new__": {
            "name": "__new__",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad5/cython/setup.py": {},
    "diseno_sci_sfw-master/unidad5/c_extensions/setup.py": {
        "main": {
            "name": "main",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "diseno_sci_sfw-master/unidad5/fortran/setup.py": {},
    "diseno_sci_sfw-master/unidad6/cli/main.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad6/cli/main2.py": {
        "hello": {
            "name": "hello",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "goodbye": {
            "name": "goodbye",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "set[str]",
                    "None",
                    "bool",
                    "dict[, ]"
                ],
                "formal": [
                    "bool"
                ]
            }
        }
    },
    "diseno_sci_sfw-master/unidad6/cli/prog.py": {},
    "diseno_sci_sfw-master/unidad6/mycode/example.py": {
        "Person.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "age": [
                    "int",
                    "float"
                ]
            }
        },
        "Person.say_hello": {
            "name": "say_hello",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "diseno_sci_sfw-master/unidad6/mycode/__init__.py": {}
}
{
    "draco-master/setup.py": {
        "RunTests.initialize_options": {
            "name": "initialize_options",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunTests.finalize_options": {
            "name": "finalize_options",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunTests.run": {
            "name": "run",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "draco-master/asp/process_soft.py": {
        "absolute_path": {
            "name": "absolute_path",
            "location": 10,
            "return": [],
            "arguments": {
                "p": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "draco-master/draco/cli.py": {
        "create_parser": {
            "name": "create_parser",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ArgEnum.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArgEnum.from_string": {
            "name": "from_string",
            "location": 24,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "draco-master/draco/helper.py": {
        "is_valid": {
            "name": "is_valid",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "draco_query": [
                    "str",
                    "bool",
                    "tuple[]"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "data_to_asp": {
            "name": "data_to_asp",
            "location": 27,
            "return": [],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "read_data_to_asp": {
            "name": "read_data_to_asp",
            "location": 37,
            "return": [],
            "arguments": {
                "file": []
            }
        }
    },
    "draco-master/draco/js.py": {
        "absolute_path": {
            "name": "absolute_path",
            "location": 11,
            "return": [],
            "arguments": {
                "p": [
                    "str"
                ]
            }
        },
        "vl2asp": {
            "name": "vl2asp",
            "location": 15,
            "return": [
                "list[]"
            ],
            "arguments": {
                "vl": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "asp2vl": {
            "name": "asp2vl",
            "location": 30,
            "return": [],
            "arguments": {
                "asp": [
                    "list[str]",
                    "str",
                    "typing.Sequence[str]",
                    "int",
                    "list[]"
                ]
            }
        },
        "cql2asp": {
            "name": "cql2asp",
            "location": 45,
            "return": [],
            "arguments": {
                "cql": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "data2schema": {
            "name": "data2schema",
            "location": 60,
            "return": [],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "str",
                    "typing.Mapping",
                    "bytes"
                ]
            }
        },
        "schema2asp": {
            "name": "schema2asp",
            "location": 75,
            "return": [],
            "arguments": {
                "schema": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "draco-master/draco/run.py": {
        "load_file": {
            "name": "load_file",
            "location": 64,
            "return": [
                "dict[, ]",
                "str",
                "dict[str, list[str]]",
                "dict[str, bytes]",
                "dict[typing.Any, str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "run_clingo": {
            "name": "run_clingo",
            "location": 74,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "draco_query": [],
                "constants": [
                    "None",
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, bool]",
                    "str",
                    "dict[str, dict[, ]]",
                    "bool"
                ],
                "files": [
                    "None",
                    "str",
                    "bytes",
                    "typing.Sequence[str]",
                    "int",
                    "typing.IO"
                ],
                "relax_hard": [
                    "bool"
                ],
                "silence_warnings": [
                    "bool"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 121,
            "return": [
                "None",
                "Result"
            ],
            "arguments": {
                "draco_query": [
                    "list[str]",
                    "dict[str, str]",
                    "bool"
                ],
                "constants": [
                    "None",
                    "list[str]",
                    "dict[str, str]",
                    "bool"
                ],
                "files": [
                    "None",
                    "list[str]",
                    "dict[str, str]",
                    "bool"
                ],
                "relax_hard": [
                    "bool"
                ],
                "silence_warnings": [
                    "bool"
                ],
                "debug": [
                    "bool"
                ],
                "clear_cache": [
                    "bool"
                ]
            }
        },
        "Result.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "answers": [
                    "str"
                ],
                "cost": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Result.as_vl": {
            "name": "as_vl",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "draco-master/draco/__init__.py": {},
    "draco-master/tests/test_cli.py": {
        "TestCli.setup_class": {
            "name": "setup_class",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool"
                ]
            }
        },
        "TestCli.test_with_unknown_args": {
            "name": "test_with_unknown_args",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "draco-master/tests/test_recommendation.py": {
        "get_rec": {
            "name": "get_rec",
            "location": 8,
            "return": [],
            "arguments": {
                "data_schema": [
                    "list[str]"
                ],
                "spec": [
                    "bool",
                    "str"
                ],
                "relax_hard": [
                    "bool"
                ]
            }
        },
        "run_spec": {
            "name": "run_spec",
            "location": 13,
            "return": [],
            "arguments": {
                "data_schema": [
                    "list[str]"
                ],
                "spec": [
                    "int",
                    "str"
                ],
                "relax_hard": [
                    "bool"
                ]
            }
        },
        "TestSpecs.test_scatter": {
            "name": "test_scatter",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSpecs.test_histogram": {
            "name": "test_histogram",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSpecs.test_strip": {
            "name": "test_strip",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSpecs.test_disable_hard_integrity": {
            "name": "test_disable_hard_integrity",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTypeChannel.get_spec": {
            "name": "get_spec",
            "location": 95,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Union[typing.Text,int,typing.Callable[, ],None], dict[typing.Text, typing.Union[typing.Text,int,typing.Callable[, ],None]]]]]"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "int",
                    "typing.Callable[, ]",
                    "None"
                ],
                "channel": [
                    "int",
                    "typing.Callable[, ]",
                    "None"
                ]
            }
        },
        "TestTypeChannel.test_q": {
            "name": "test_q",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTypeChannel.test_o": {
            "name": "test_o",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "draco-master/tests/test_run.py": {
        "TestFull.test_output_schema": {
            "name": "test_output_schema",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "draco-master/tests/test_valid_specs.py": {
        "TestValidSpecs.test_hist": {
            "name": "test_hist",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_bar": {
            "name": "test_bar",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_one_bar": {
            "name": "test_one_bar",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_scatter": {
            "name": "test_scatter",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_stack": {
            "name": "test_stack",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_stack_agg": {
            "name": "test_stack_agg",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_stack_q_q": {
            "name": "test_stack_q_q",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidSpecs.test_heatmap": {
            "name": "test_heatmap",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInvalidSpecs.test_row_only": {
            "name": "test_row_only",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInvalidSpecs.test_q_q_bar": {
            "name": "test_q_q_bar",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInvalidSpecs.test_only_one_agg": {
            "name": "test_only_one_agg",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInvalidSpecs.test_stack_multiple": {
            "name": "test_stack_multiple",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
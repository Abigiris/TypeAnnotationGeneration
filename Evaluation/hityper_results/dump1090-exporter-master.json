{
    "dump1090-exporter-master/setup.py": {
        "read_version": {
            "name": "read_version",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "dump1090-exporter-master/dump1090exporter/exporter.py": {
        "build_resources": {
            "name": "build_resources",
            "location": 41,
            "return": [
                "Dump1090Resources"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ]
            }
        },
        "haversine_distance": {
            "name": "haversine_distance",
            "location": 69,
            "return": [
                "float"
            ],
            "arguments": {
                "pos1": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float]]"
                ],
                "pos2": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float]]"
                ],
                "radius": [
                    "float"
                ]
            }
        },
        "Dump1090Exporter.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "bool",
                    "float"
                ],
                "host": [
                    "None",
                    "int",
                    "str"
                ],
                "port": [
                    "int"
                ],
                "aircraft_interval": [
                    "int"
                ],
                "stats_interval": [
                    "int"
                ],
                "time_periods": [
                    "tuple[typing.Text]"
                ],
                "origin": [
                    "None",
                    "int",
                    "list[str]",
                    "dict[str, typing.Any]"
                ],
                "fetch_timeout": [
                    "float"
                ],
                "loop": [
                    "None"
                ]
            }
        },
        "Dump1090Exporter.initialise_metrics": {
            "name": "initialise_metrics",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dump1090Exporter._create_gauge_metric": {
            "name": "_create_gauge_metric",
            "location": 217,
            "return": [
                "Gauge"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "str",
                    "bool"
                ],
                "doc": [
                    "str",
                    "bool"
                ]
            }
        },
        "Dump1090Exporter.process_stats": {
            "name": "process_stats",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stats": [],
                "time_periods": [
                    "tuple[typing.Text]"
                ]
            }
        },
        "Dump1090Exporter.process_aircraft": {
            "name": "process_aircraft",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aircraft": [
                    "str"
                ],
                "threshold": []
            }
        }
    },
    "dump1090-exporter-master/dump1090exporter/metrics.py": {},
    "dump1090-exporter-master/dump1090exporter/__init__.py": {},
    "dump1090-exporter-master/dump1090exporter/__main__.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
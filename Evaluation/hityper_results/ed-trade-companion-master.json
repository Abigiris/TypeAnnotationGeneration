{
    "ed-trade-companion-master/trade_companion/models.py": {
        "create_tables": {
            "name": "create_tables",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Defaults.__tablename__": {
            "name": "__tablename__",
            "location": 50,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "Defaults.id_column": {
            "name": "id_column",
            "location": 54,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "list[int]",
                    "typing.Type"
                ]
            }
        },
        "Defaults.from_dict": {
            "name": "from_dict",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type",
                    "list[]"
                ]
            }
        },
        "Defaults.to_filtered_dict": {
            "name": "to_filtered_dict",
            "location": 64,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "tuple[typing.Union[typing.Any,dict[str, typing.Any]]]",
                    "float",
                    "typing.Generator[typing.Union[typing.Any,None,None]]",
                    "int"
                ],
                "data": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/pluralize.py": {
        "pluralize": {
            "name": "pluralize",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "singular": []
            }
        }
    },
    "ed-trade-companion-master/trade_companion/__init__.py": {},
    "ed-trade-companion-master/trade_companion/__main__.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/database.py": {},
    "ed-trade-companion-master/trade_companion/cmd/database_migrate.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "_options": [
                    "list[str]",
                    "bool",
                    "typing.Sequence[str]",
                    "None"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/import.py": {
        "_entity_lookup": {
            "name": "_entity_lookup",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "entity_name": [
                    "str"
                ]
            }
        },
        "input_file": {
            "name": "input_file",
            "location": 34,
            "return": [
                "typing.IO"
            ],
            "arguments": {
                "file_name": [
                    "str"
                ]
            }
        },
        "chunked": {
            "name": "chunked",
            "location": 86,
            "return": [
                "typing.Generator[typing.Union[int,dict[, ],list[int],list[list[int]],str]]"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "typing.Iterable[list[str]]"
                ],
                "batch_size": [
                    "int",
                    "typing.Iterable[list[str]]"
                ]
            }
        },
        "model_import": {
            "name": "model_import",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "options": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/__init__.py": {
        "_log_level_from_string": {
            "name": "_log_level_from_string",
            "location": 22,
            "return": [],
            "arguments": {
                "log_level_name": [
                    "str"
                ]
            }
        }
    }
}
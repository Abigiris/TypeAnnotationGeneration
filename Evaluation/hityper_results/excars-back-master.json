{
    "excars-back-master/excars/config.py": {
        "get_bool": {
            "name": "get_bool",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "key": [
                    "str",
                    "list[]"
                ]
            }
        }
    },
    "excars-back-master/excars/main.py": {},
    "excars-back-master/excars/oauth2_redirect.py": {
        "oauth2_redirect": {
            "name": "oauth2_redirect",
            "location": 10,
            "return": [
                "HTMLResponse"
            ],
            "arguments": {}
        },
        "get_oauth2_redirect_html": {
            "name": "get_oauth2_redirect_html",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "excars-back-master/excars/redis.py": {},
    "excars-back-master/excars/__init__.py": {},
    "excars-back-master/excars/api/__init__.py": {},
    "excars-back-master/excars/api/utils/receivers.py": {},
    "excars-back-master/excars/api/utils/redis.py": {
        "get_redis_cli": {
            "name": "get_redis_cli",
            "location": 4,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "excars-back-master/excars/api/utils/security.py": {
        "verify_id_token": {
            "name": "verify_id_token",
            "location": 49,
            "return": [],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "fetch_certs": {
            "name": "fetch_certs",
            "location": 54,
            "return": [],
            "arguments": {}
        }
    },
    "excars-back-master/excars/api/utils/senders.py": {
        "send": {
            "name": "send",
            "location": 13,
            "return": [
                "list[]"
            ],
            "arguments": {
                "websocket": [
                    "list[int]"
                ],
                "user": [
                    "list[int]"
                ],
                "redis_cli": [
                    "list[int]"
                ]
            }
        }
    },
    "excars-back-master/excars/api/utils/stream.py": {},
    "excars-back-master/excars/api/utils/__init__.py": {},
    "excars-back-master/excars/api/v1/profiles.py": {},
    "excars-back-master/excars/api/v1/rides.py": {},
    "excars-back-master/excars/api/v1/users.py": {},
    "excars-back-master/excars/api/v1/ws.py": {},
    "excars-back-master/excars/api/v1/__init__.py": {},
    "excars-back-master/excars/models/locations.py": {},
    "excars-back-master/excars/models/messages.py": {},
    "excars-back-master/excars/models/profiles.py": {
        "Role.opposite": {
            "name": "opposite",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ],
                "role": [
                    "typing.Type",
                    "float"
                ]
            }
        },
        "Profile.from_user": {
            "name": "from_user",
            "location": 38,
            "return": [],
            "arguments": {
                "cls": [
                    "bool"
                ],
                "user": [
                    "bool"
                ],
                "role": [
                    "bool"
                ],
                "destination": [
                    "bool"
                ]
            }
        }
    },
    "excars-back-master/excars/models/rides.py": {
        "RideRequest.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RideRequest.passenger": {
            "name": "passenger",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RideRequest._get_profile_by_role": {
            "name": "_get_profile_by_role",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "role": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "excars-back-master/excars/models/token.py": {},
    "excars-back-master/excars/models/user.py": {
        "User.from_token": {
            "name": "from_token",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None"
                ],
                "token": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "excars-back-master/excars/models/__init__.py": {},
    "excars-back-master/excars/repositories/locations.py": {
        "_get_key": {
            "name": "_get_key",
            "location": 10,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "_get_key_for": {
            "name": "_get_key_for",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        },
        "_decode": {
            "name": "_decode",
            "location": 18,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[typing.AbstractSet, set[typing.Any]]"
                ]
            }
        }
    },
    "excars-back-master/excars/repositories/profile.py": {
        "_get_key_for": {
            "name": "_get_key_for",
            "location": 9,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        }
    },
    "excars-back-master/excars/repositories/rides.py": {
        "_get_ride_key": {
            "name": "_get_ride_key",
            "location": 13,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "ride_id": [
                    "str",
                    "int"
                ],
                "passenger_id": [
                    "str",
                    "int"
                ]
            }
        },
        "_get_ride_request_key": {
            "name": "_get_ride_request_key",
            "location": 17,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "ride_id": [
                    "str",
                    "int"
                ],
                "passenger_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "excars-back-master/excars/repositories/stream.py": {
        "_get_key_for": {
            "name": "_get_key_for",
            "location": 10,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        }
    },
    "excars-back-master/excars/repositories/users.py": {
        "_get_key_for": {
            "name": "_get_key_for",
            "location": 8,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        }
    },
    "excars-back-master/excars/repositories/__init__.py": {},
    "excars-back-master/excars/tests/conftest.py": {
        "make_token_payload": {
            "name": "make_token_payload",
            "location": 11,
            "return": [],
            "arguments": {
                "faker": [
                    "str",
                    "typing.Iterator",
                    "dict[str, str]",
                    "bool"
                ]
            }
        },
        "make_token_headers": {
            "name": "make_token_headers",
            "location": 29,
            "return": [],
            "arguments": {
                "mocker": [
                    "str",
                    "None",
                    "bool",
                    "typing.Callable[[], int]"
                ],
                "faker": [
                    "str",
                    "None",
                    "bool",
                    "typing.Callable[[], int]"
                ],
                "make_token_payload": [
                    "str",
                    "None",
                    "bool",
                    "typing.Callable[[], int]"
                ]
            }
        },
        "client": {
            "name": "client",
            "location": 40,
            "return": [
                "typing.Generator[TestClient]"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "profile_factory": {
            "name": "profile_factory",
            "location": 75,
            "return": [],
            "arguments": {
                "client": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "None",
                    "list[int]"
                ],
                "faker": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "None",
                    "list[int]"
                ]
            }
        },
        "location_factory": {
            "name": "location_factory",
            "location": 101,
            "return": [],
            "arguments": {
                "client": [
                    "set[]",
                    "bool",
                    "dict[, ]",
                    "None",
                    "list[int]",
                    "str"
                ],
                "faker": []
            }
        },
        "make_token_payload.token_payload": {
            "name": "token_payload",
            "location": 12,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "make_token_headers.token_headers_for": {
            "name": "token_headers_for",
            "location": 30,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "user_id": [
                    "None"
                ]
            }
        },
        "profile_factory.make_profile": {
            "name": "make_profile",
            "location": 76,
            "return": [
                "Profile"
            ],
            "arguments": {}
        },
        "location_factory.make_location": {
            "name": "make_location",
            "location": 105,
            "return": [
                "Location"
            ],
            "arguments": {}
        },
        "client.WebSocketTestSessionMonkeyPatch._loop": {
            "name": "_loop",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "excars-back-master/excars/tests/__init__.py": {},
    "excars-back-master/excars/tests/api/__init__.py": {},
    "excars-back-master/excars/tests/api/v1/test_profiles.py": {
        "test_join": {
            "name": "test_join",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "faker": [],
                "make_token_headers": [
                    "dict[, ]"
                ]
            }
        },
        "test_get_profile": {
            "name": "test_get_profile",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "list[str]",
                    "None",
                    "bool"
                ]
            }
        },
        "test_get_profile_returns_404": {
            "name": "test_get_profile_returns_404",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "faker": [],
                "make_token_headers": [
                    "float",
                    "None",
                    "str"
                ]
            }
        },
        "test_delete_profile": {
            "name": "test_delete_profile",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "make_token_headers": [
                    "dict[str, str]"
                ]
            }
        }
    },
    "excars-back-master/excars/tests/api/v1/test_rides.py": {
        "test_create_ride_request": {
            "name": "test_create_ride_request",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [],
                "role": [
                    "str"
                ]
            }
        },
        "test_create_ride_request_raises_404": {
            "name": "test_create_ride_request_raises_404",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "faker": [],
                "make_token_headers": []
            }
        },
        "test_create_ride_request_when_sender_is_not_joined": {
            "name": "test_create_ride_request_when_sender_is_not_joined",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "test_update_ride": {
            "name": "test_update_ride",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "float",
                    "None",
                    "str"
                ],
                "role": [
                    "str"
                ]
            }
        },
        "test_update_ride_receiver_not_found": {
            "name": "test_update_ride_receiver_not_found",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "faker": [],
                "make_token_headers": [
                    "dict[str, str]",
                    "str",
                    "int",
                    "list[list[int]]"
                ]
            }
        },
        "test_update_ride_sender_not_found": {
            "name": "test_update_ride_sender_not_found",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "faker": [],
                "profile_factory": [],
                "make_token_headers": [
                    "bool"
                ]
            }
        },
        "test_update_ride_ride_request_not_found": {
            "name": "test_update_ride_ride_request_not_found",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "int"
                ]
            }
        },
        "test_leaves_ride": {
            "name": "test_leaves_ride",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "float",
                    "None",
                    "str"
                ],
                "role": []
            }
        },
        "test_leaves_ride_when_no_ride_exists": {
            "name": "test_leaves_ride_when_no_ride_exists",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "str",
                    "float",
                    "None",
                    "int"
                ],
                "role": [
                    "str"
                ]
            }
        },
        "test_leave_ride_raises_404": {
            "name": "test_leave_ride_raises_404",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "make_token_headers": []
            }
        },
        "test_get_current_ride": {
            "name": "test_get_current_ride",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "str",
                    "dict[str, str]"
                ],
                "role": []
            }
        },
        "test_get_current_ride_404": {
            "name": "test_get_current_ride_404",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "str",
                    "dict[str, str]"
                ],
                "role": []
            }
        }
    },
    "excars-back-master/excars/tests/api/v1/test_users.py": {
        "test_users_me": {
            "name": "test_users_me",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "make_token_headers": [
                    "dict[str, str]",
                    "str"
                ]
            }
        }
    },
    "excars-back-master/excars/tests/api/v1/test_ws.py": {
        "assert_map_item": {
            "name": "assert_map_item",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str"
                ],
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "location": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ],
                "has_same_ride": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "wait_for_message_type": {
            "name": "wait_for_message_type",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "ws": [],
                "message_type": [
                    "typing.Type"
                ],
                "count": [
                    "int"
                ]
            }
        },
        "test_ws_close_for_unauthorized_user": {
            "name": "test_ws_close_for_unauthorized_user",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_ws_receive_empty_map": {
            "name": "test_ws_receive_empty_map",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "make_token_headers": []
            }
        },
        "test_ws_receive_map_for_user_without_ride": {
            "name": "test_ws_receive_map_for_user_without_ride",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "location_factory": [],
                "profile_factory": [],
                "make_token_headers": [
                    "str"
                ],
                "role": []
            }
        },
        "test_ws_receive_map_without_ride_and_profile": {
            "name": "test_ws_receive_map_without_ride_and_profile",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "location_factory": [],
                "profile_factory": [],
                "make_token_headers": [
                    "int"
                ],
                "role": []
            }
        },
        "test_ws_receive_no_map_without_profile": {
            "name": "test_ws_receive_no_map_without_profile",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "faker": [],
                "location_factory": [
                    "bool"
                ],
                "make_token_headers": [
                    "int",
                    "str"
                ]
            }
        },
        "test_ws_receive_map_within_same_ride": {
            "name": "test_ws_receive_map_within_same_ride",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "location_factory": [],
                "profile_factory": [],
                "make_token_headers": [
                    "int"
                ],
                "role": []
            }
        },
        "test_ws_receive_map_within_different_ride": {
            "name": "test_ws_receive_map_within_different_ride",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "location_factory": [],
                "profile_factory": [],
                "make_token_headers": [
                    "str"
                ],
                "role": []
            }
        },
        "test_ws_send_location": {
            "name": "test_ws_send_location",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [],
                "make_token_headers": [
                    "str"
                ]
            }
        },
        "test_ws_send_invalid_data": {
            "name": "test_ws_send_invalid_data",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "str"
                ]
            }
        },
        "test_ws_receive_ride_requested": {
            "name": "test_ws_receive_ride_requested",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "int"
                ]
            }
        },
        "test_ws_receive_ride_request_updated": {
            "name": "test_ws_receive_ride_request_updated",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "int"
                ],
                "profile_factory": [
                    "int",
                    "str"
                ],
                "make_token_headers": [
                    "int"
                ],
                "status": [
                    "int",
                    "str"
                ],
                "expected": [
                    "str",
                    "typing.Callable[[], str]",
                    "set[]",
                    "bool"
                ]
            }
        },
        "test_ws_ride_updated": {
            "name": "test_ws_ride_updated",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "profile_factory": [
                    "str",
                    "float",
                    "None"
                ],
                "make_token_headers": [
                    "int",
                    "str"
                ],
                "role": [
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "test_ws_ride_cancelled": {
            "name": "test_ws_ride_cancelled",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "int"
                ]
            }
        },
        "test_ws_reconnect": {
            "name": "test_ws_reconnect",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "profile_factory": [
                    "str"
                ],
                "make_token_headers": [
                    "str"
                ]
            }
        }
    },
    "excars-back-master/excars/tests/api/v1/__init__.py": {}
}
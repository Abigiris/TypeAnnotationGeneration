{
    "fauxmo-master/docs/conf.py": {
        "setup": {
            "name": "setup",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "fauxmo-master/src/fauxmo/cli.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fauxmo-master/src/fauxmo/fauxmo.py": {
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "config_path_str": [
                    "None",
                    "str"
                ],
                "verbosity": [
                    "int"
                ]
            }
        }
    },
    "fauxmo-master/src/fauxmo/protocols.py": {
        "Fauxmo.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "tuple[typing.Union[str,str]]"
                ],
                "plugin": [
                    "int",
                    "str",
                    "typing.Sequence[]",
                    "None"
                ]
            }
        },
        "Fauxmo.connection_made": {
            "name": "connection_made",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "Fauxmo.data_received": {
            "name": "data_received",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "Fauxmo.handle_setup": {
            "name": "handle_setup",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fauxmo.handle_action": {
            "name": "handle_action",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Fauxmo.handle_metainfo": {
            "name": "handle_metainfo",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fauxmo.handle_event": {
            "name": "handle_event",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fauxmo.add_http_headers": {
            "name": "add_http_headers",
            "location": 274,
            "return": [],
            "arguments": {
                "xml": [
                    "str"
                ]
            }
        },
        "SSDPServer.__init__": {
            "name": "__init__",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "devices": [
                    "None",
                    "bool",
                    "str",
                    "list[tuple[]]",
                    "list[str]"
                ]
            }
        },
        "SSDPServer.add_device": {
            "name": "add_device",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.Sequence[utils.types.A]",
                    "list[str]"
                ],
                "ip_address": [
                    "str",
                    "typing.Sequence[utils.types.A]",
                    "list[str]"
                ],
                "port": [
                    "str",
                    "typing.Sequence[utils.types.A]",
                    "list[str]"
                ]
            }
        },
        "SSDPServer.connection_made": {
            "name": "connection_made",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "int"
                ]
            }
        },
        "SSDPServer.datagram_received": {
            "name": "datagram_received",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict[, ]",
                    "list[int]",
                    "str",
                    "int"
                ],
                "addr": [
                    "tuple[typing.Union[int,int]]",
                    "dict[, ]",
                    "typing.MutableMapping",
                    "bytes",
                    "tuple[]",
                    "str"
                ]
            }
        },
        "SSDPServer.respond_to_search": {
            "name": "respond_to_search",
            "location": 376,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "str",
                    "dict[str, typing.Any]",
                    "int"
                ],
                "discover_pattern": [
                    "str"
                ],
                "mx": [
                    "float"
                ]
            }
        },
        "SSDPServer.connection_lost": {
            "name": "connection_lost",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str"
                ]
            }
        }
    },
    "fauxmo-master/src/fauxmo/utils.py": {
        "get_local_ip": {
            "name": "get_local_ip",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "ip_address": [
                    "str"
                ]
            }
        },
        "make_serial": {
            "name": "make_serial",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int"
                ]
            }
        },
        "module_from_file": {
            "name": "module_from_file",
            "location": 61,
            "return": [
                "tuple[typing.Union[typing.Literal,typing.Literal]]",
                "int",
                "typing.Type",
                "list[]"
            ],
            "arguments": {
                "modname": [
                    "str",
                    "dict[str, str]",
                    "typing.Pattern",
                    "None"
                ],
                "path_str": [
                    "str",
                    "list[pathlib.Path]"
                ]
            }
        },
        "make_udp_sock": {
            "name": "make_udp_sock",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "get_unused_port": {
            "name": "get_unused_port",
            "location": 112,
            "return": [],
            "arguments": {}
        }
    },
    "fauxmo-master/src/fauxmo/__init__.py": {},
    "fauxmo-master/src/fauxmo/plugins/commandlineplugin.py": {
        "CommandLinePlugin.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "None"
                ],
                "port": [
                    "str",
                    "int",
                    "None"
                ],
                "on_cmd": [
                    "bool",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]",
                    "str"
                ],
                "off_cmd": [
                    "bool",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]",
                    "str"
                ],
                "state_cmd": [
                    "None",
                    "bool",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]",
                    "str"
                ],
                "use_fake_state": [
                    "bool"
                ]
            }
        },
        "CommandLinePlugin.run_cmd": {
            "name": "run_cmd",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str",
                    "Exception"
                ]
            }
        },
        "CommandLinePlugin.on": {
            "name": "on",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandLinePlugin.off": {
            "name": "off",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandLinePlugin.get_state": {
            "name": "get_state",
            "location": 126,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fauxmo-master/src/fauxmo/plugins/homeassistantplugin.py": {
        "HomeAssistantPlugin.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "None"
                ],
                "port": [
                    "str",
                    "int",
                    "None"
                ],
                "entity_id": [
                    "str",
                    "None"
                ],
                "ha_host": [
                    "str",
                    "int"
                ],
                "ha_port": [
                    "int"
                ],
                "ha_protocol": [
                    "typing.Text"
                ],
                "ha_token": [
                    "None",
                    "bool",
                    "typing.Sequence[]",
                    "str"
                ],
                "domain": [
                    "None",
                    "str"
                ]
            }
        },
        "HomeAssistantPlugin.send": {
            "name": "send",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "signal": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "HomeAssistantPlugin.on": {
            "name": "on",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeAssistantPlugin.off": {
            "name": "off",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HomeAssistantPlugin.get_state": {
            "name": "get_state",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fauxmo-master/src/fauxmo/plugins/simplehttpplugin.py": {
        "SimpleHTTPPlugin.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleHTTPPlugin._to_bytes": {
            "name": "_to_bytes",
            "location": 126,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "SimpleHTTPPlugin.set_state": {
            "name": "set_state",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "data": []
            }
        },
        "SimpleHTTPPlugin.on": {
            "name": "on",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleHTTPPlugin.off": {
            "name": "off",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleHTTPPlugin.get_state": {
            "name": "get_state",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fauxmo-master/src/fauxmo/plugins/__init__.py": {
        "FauxmoPlugin.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.__getattribute__": {
            "name": "__getattribute__",
            "location": 47,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "FauxmoPlugin.port": {
            "name": "port",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.name": {
            "name": "name",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.on": {
            "name": "on",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.off": {
            "name": "off",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.get_state": {
            "name": "get_state",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.close": {
            "name": "close",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.latest_action": {
            "name": "latest_action",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FauxmoPlugin.__repr__": {
            "name": "__repr__",
            "location": 107,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fauxmo-master/tests/conftest.py": {
        "fauxmo_server": {
            "name": "fauxmo_server",
            "location": 66,
            "return": [
                "TestFauxmoServer"
            ],
            "arguments": {}
        },
        "simplehttpplugin_target": {
            "name": "simplehttpplugin_target",
            "location": 72,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "TestFauxmoServer.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_path_str": [
                    "str"
                ]
            }
        },
        "TestFauxmoServer.__enter__": {
            "name": "__enter__",
            "location": 34,
            "return": [
                "dict[str, dict[typing.Any, typing.Any]]",
                "str",
                "dict[str, str]",
                "typing.Pattern",
                "dict[, ]",
                "list[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFauxmoServer.__exit__": {
            "name": "__exit__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "exc_value": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "traceback": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ]
            }
        }
    },
    "fauxmo-master/tests/test_commandlineplugin.py": {
        "test_commandlineplugin_integration": {
            "name": "test_commandlineplugin_integration",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": [
                    "str",
                    "None"
                ]
            }
        },
        "test_commandlineplugin_unit": {
            "name": "test_commandlineplugin_unit",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_commandlineplugin_fake_state": {
            "name": "test_commandlineplugin_fake_state",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fauxmo-master/tests/test_fauxmo.py": {
        "test_udp_search": {
            "name": "test_udp_search",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": []
            }
        },
        "test_setup": {
            "name": "test_setup",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": []
            }
        },
        "test_turnon": {
            "name": "test_turnon",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": [],
                "simplehttpplugin_target": []
            }
        },
        "test_getbinarystate": {
            "name": "test_getbinarystate",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": [],
                "simplehttpplugin_target": []
            }
        },
        "test_getfriendlyname": {
            "name": "test_getfriendlyname",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": [],
                "simplehttpplugin_target": []
            }
        },
        "test_old_config_fails": {
            "name": "test_old_config_fails",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_content_length": {
            "name": "test_content_length",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_unused_port": {
            "name": "test_get_unused_port",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fauxmo-master/tests/test_homeassistantplugin.py": {
        "test_homeassistantplugin": {
            "name": "test_homeassistantplugin",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "mock": []
            }
        }
    },
    "fauxmo-master/tests/test_simplehttpplugin.py": {
        "test_simplehttpplugin": {
            "name": "test_simplehttpplugin",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "simplehttpplugin_target": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "test_simplehttpplugin_state": {
            "name": "test_simplehttpplugin_state",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "fauxmo_server": [
                    "str",
                    "dict[str, typing.Sequence[str]]"
                ],
                "simplehttpplugin_target": [
                    "str",
                    "dict[str, typing.Sequence[str]]"
                ]
            }
        }
    }
}
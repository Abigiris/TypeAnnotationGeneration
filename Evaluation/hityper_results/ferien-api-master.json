{
    "ferien-api-master/setup.py": {
        "readme": {
            "name": "readme",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "ferien-api-master/examples/run_async.py": {},
    "ferien-api-master/examples/run_async_gather.py": {},
    "ferien-api-master/examples/run_sync.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ferien-api-master/ferien/async_.py": {},
    "ferien-api-master/ferien/const.py": {},
    "ferien-api-master/ferien/model.py": {
        "Vacation._parse_date": {
            "name": "_parse_date",
            "location": 54,
            "return": [],
            "arguments": {
                "candidate": [
                    "str",
                    "dict[, ]",
                    "list[str]",
                    "dict[str, str]"
                ]
            }
        },
        "Vacation.from_dict": {
            "name": "from_dict",
            "location": 67,
            "return": [],
            "arguments": {
                "cls": [],
                "dct": []
            }
        }
    },
    "ferien-api-master/ferien/sync_.py": {
        "_make_api_request": {
            "name": "_make_api_request",
            "location": 12,
            "return": [],
            "arguments": {
                "api_url": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "_convert_json": {
            "name": "_convert_json",
            "location": 21,
            "return": [
                "list[]"
            ],
            "arguments": {
                "resp": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "state_codes": {
            "name": "state_codes",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "all_vacations": {
            "name": "all_vacations",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "state_vacations": {
            "name": "state_vacations",
            "location": 37,
            "return": [],
            "arguments": {
                "state_code": [
                    "str"
                ],
                "year": [
                    "None",
                    "str",
                    "list[]",
                    "tuple[]",
                    "bytes",
                    "int"
                ]
            }
        },
        "current_vacation": {
            "name": "current_vacation",
            "location": 56,
            "return": [],
            "arguments": {
                "state_code": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ],
                "vacs": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ],
                "dt": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ]
            }
        },
        "next_vacation": {
            "name": "next_vacation",
            "location": 65,
            "return": [],
            "arguments": {
                "state_code": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ],
                "vacs": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ],
                "dt": [
                    "None",
                    "typing.Iterable[V]",
                    "str"
                ]
            }
        },
        "_apply_fun": {
            "name": "_apply_fun",
            "location": 77,
            "return": [],
            "arguments": {
                "fun": [
                    "int",
                    "None",
                    "str",
                    "list[str]",
                    "list[datetime.datetime]"
                ],
                "state_code": [
                    "None",
                    "str",
                    "int"
                ],
                "vacs": [
                    "None",
                    "typing.Iterable[V]",
                    "int",
                    "float",
                    "str"
                ],
                "dt": [
                    "None",
                    "bytes",
                    "str"
                ]
            }
        }
    },
    "ferien-api-master/ferien/types.py": {},
    "ferien-api-master/ferien/util.py": {
        "is_tz_aware_timestamp": {
            "name": "is_tz_aware_timestamp",
            "location": 9,
            "return": [],
            "arguments": {
                "dt": [
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ]
            }
        },
        "make_tz_aware_timestamp": {
            "name": "make_tz_aware_timestamp",
            "location": 14,
            "return": [
                "None",
                "str",
                "int"
            ],
            "arguments": {
                "dt": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "parse_state_code": {
            "name": "parse_state_code",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "candidate": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "parse_year": {
            "name": "parse_year",
            "location": 35,
            "return": [],
            "arguments": {
                "candidate": [
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "is_iterable_but_no_str": {
            "name": "is_iterable_but_no_str",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "candidate": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "check_vac_list": {
            "name": "check_vac_list",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "vacs": [
                    "str"
                ]
            }
        },
        "check_datetime": {
            "name": "check_datetime",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "dt": [
                    "None",
                    "int"
                ]
            }
        },
        "find_current": {
            "name": "find_current",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "vacs": [
                    "dict[, ]"
                ],
                "dt": [
                    "None",
                    "int",
                    "typing.Sequence[util.datetime.range.DateTimeRange]"
                ]
            }
        },
        "find_next": {
            "name": "find_next",
            "location": 86,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "vacs": [
                    "str"
                ],
                "dt": [
                    "None",
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "ferien-api-master/ferien/__init__.py": {},
    "ferien-api-master/tests/test_async.py": {},
    "ferien-api-master/tests/test_sync.py": {
        "_configure_mock": {
            "name": "_configure_mock",
            "location": 33,
            "return": [
                "bool",
                "str",
                "dict[int, datetime.datetime]",
                "None"
            ],
            "arguments": {
                "m": [
                    "bool",
                    "str",
                    "dict[int, datetime.datetime]",
                    "None"
                ],
                "status_code": [
                    "int"
                ],
                "response": [
                    "list[dict[typing.Text, typing.Union[typing.Text,int]]]"
                ]
            }
        },
        "test_state_codes": {
            "name": "test_state_codes",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_all_vacations": {
            "name": "test_get_all_vacations",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_get_all_vacations_bad_status_code": {
            "name": "test_get_all_vacations_bad_status_code",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_get_state_vacations_by_state": {
            "name": "test_get_state_vacations_by_state",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_get_state_vacations_by_state_year": {
            "name": "test_get_state_vacations_by_state_year",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_get_state_vacations_unknown_state": {
            "name": "test_get_state_vacations_unknown_state",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_state_vacations_with_bad_year": {
            "name": "test_get_state_vacations_with_bad_year",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_current_vacation": {
            "name": "test_current_vacation",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_current_vacation_arguments_fail": {
            "name": "test_current_vacation_arguments_fail",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_next_vacation": {
            "name": "test_next_vacation",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_requests": []
            }
        },
        "test_next_vacation_arguments_fail": {
            "name": "test_next_vacation_arguments_fail",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "flake8-adjustable-complexity-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/ast_helpers.py": {
        "get_all_funcdefs_from": {
            "name": "get_all_funcdefs_from",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tree": [
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "extract_all_vars_in_node": {
            "name": "extract_all_vars_in_node",
            "location": 13,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "ast_tree": [
                    "str",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "get_var_names_from_assignment": {
            "name": "get_var_names_from_assignment",
            "location": 26,
            "return": [
                "list[]"
            ],
            "arguments": {
                "assignment_node": []
            }
        },
        "get_var_names_from_funcdef": {
            "name": "get_var_names_from_funcdef",
            "location": 38,
            "return": [
                "list[]"
            ],
            "arguments": {
                "funcdef_node": [
                    "typing.Type",
                    "set[str]"
                ]
            }
        },
        "get_var_names_from_for": {
            "name": "get_var_names_from_for",
            "location": 45,
            "return": [
                "list[]"
            ],
            "arguments": {
                "for_node": [
                    "typing.Iterable[T]",
                    "None",
                    "typing.Callable[..., None]",
                    "bool"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/checker.py": {
        "CyclomaticComplexityAdjustableChecker.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tree": [
                    "typing.Iterable[bytes]",
                    "int"
                ],
                "filename": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "CyclomaticComplexityAdjustableChecker.add_options": {
            "name": "add_options",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]"
                ],
                "parser": []
            }
        },
        "CyclomaticComplexityAdjustableChecker.parse_options": {
            "name": "parse_options",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, str]"
                ],
                "option_manager": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, str]"
                ],
                "options": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, str]"
                ],
                "args": []
            }
        },
        "CyclomaticComplexityAdjustableChecker.parse_options_to_config": {
            "name": "parse_options_to_config",
            "location": 81,
            "return": [
                "Config"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]"
                ],
                "option_manager": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]"
                ],
                "options": [
                    "str",
                    "list[dict[, ]]",
                    "typing.Mapping",
                    "list[str]",
                    "bool",
                    "None"
                ],
                "args": []
            }
        },
        "CyclomaticComplexityAdjustableChecker.run": {
            "name": "run",
            "location": 110,
            "return": [
                "typing.Generator[tuple[typing.Type]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/complexity_helpers.py": {
        "validate_adjustable_complexity_in_tree": {
            "name": "validate_adjustable_complexity_in_tree",
            "location": 14,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tree": [
                    "list[str]",
                    "None",
                    "bool",
                    "str"
                ],
                "var_names_blacklist": [
                    "bool",
                    "typing.Callable[T, typing.Any]"
                ],
                "max_complexity": [
                    "bool",
                    "typing.Callable[T, typing.Any]"
                ],
                "bad_var_name_penalty": [
                    "bool",
                    "typing.Callable[T, typing.Any]"
                ],
                "allow_single_names_in_vars": [
                    "bool",
                    "typing.Callable[T, typing.Any]"
                ],
                "single_letter_var_whitelist": [
                    "None",
                    "bool",
                    "typing.Callable[T, typing.Any]"
                ]
            }
        },
        "check_funcdef_adjustable_complexity": {
            "name": "check_funcdef_adjustable_complexity",
            "location": 37,
            "return": [
                "ComplexityViolation",
                "PenaltyTooHighViolation"
            ],
            "arguments": {
                "funcdef": [
                    "str",
                    "bool"
                ],
                "var_names_blacklist": [
                    "int",
                    "dict[str, object]",
                    "list[int]"
                ],
                "default_max_complexity": [
                    "bool",
                    "float"
                ],
                "bad_var_name_penalty": [
                    "int"
                ],
                "allow_single_names_in_vars": [
                    "bool",
                    "str",
                    "typing.Mapping",
                    "typing.Type",
                    "None"
                ],
                "single_letter_var_whitelist": [
                    "None",
                    "bool",
                    "typing.Hashable"
                ]
            }
        },
        "get_mccabe_complexity_for": {
            "name": "get_mccabe_complexity_for",
            "location": 75,
            "return": [],
            "arguments": {
                "node": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/config.py": {},
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/list_helpers.py": {
        "flat": {
            "name": "flat",
            "location": 4,
            "return": [
                "list[T]"
            ],
            "arguments": {
                "list_of_lists": [
                    "list[list[]]",
                    "list[]",
                    "list[list[T]]",
                    "list[int]",
                    "list[float]",
                    "list[typing.Union[int,float]]"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/violations.py": {
        "BaseViolation.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lineno": [
                    "str",
                    "bool",
                    "list[int]",
                    "dict[, ]",
                    "None"
                ],
                "col_offset": [
                    "str",
                    "bool",
                    "list[int]",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "BaseViolation.format_message": {
            "name": "format_message",
            "location": 19,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "typing.Callable[..., T]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        },
        "BaseViolation.get_context": {
            "name": "get_context",
            "location": 23,
            "return": [
                "bool",
                "str",
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComplexityViolation.get_context": {
            "name": "get_context",
            "location": 31,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PenaltyTooHighViolation.get_context": {
            "name": "get_context",
            "location": 46,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flake8-adjustable-complexity-master/flake8_adjustable_complexity/__init__.py": {},
    "flake8-adjustable-complexity-master/tests/conftest.py": {
        "get_option_manager": {
            "name": "get_option_manager",
            "location": 13,
            "return": [
                "OptionManager"
            ],
            "arguments": {}
        },
        "_parse_options": {
            "name": "_parse_options",
            "location": 19,
            "return": [],
            "arguments": {
                "manager": [
                    "typing.Sequence[str]"
                ],
                "args": []
            }
        },
        "parse_options": {
            "name": "parse_options",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "run_validator_for_test_file": {
            "name": "run_validator_for_test_file",
            "location": 39,
            "return": [
                "list[]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "args": [
                    "None"
                ]
            }
        },
        "parse_options.with_args": {
            "name": "with_args",
            "location": 30,
            "return": [],
            "arguments": {
                "args": [
                    "None"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/tests/test_adjustable_complexity.py": {
        "test_checker": {
            "name": "test_checker",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "list[str]",
                    "None",
                    "str",
                    "typing.Callable[typing.Any, None]"
                ],
                "args": [],
                "expected": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/tests/test_config.py": {
        "test_parse_max_mccabe_complexity": {
            "name": "test_parse_max_mccabe_complexity",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "parse_options": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "args": [],
                "max_mccabe_complexity": [
                    "int"
                ]
            }
        },
        "test_parse_max_complexity_per_path": {
            "name": "test_parse_max_complexity_per_path",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "parse_options": [
                    "typing.Callable[, ]",
                    "str"
                ],
                "args": [],
                "max_complexity_per_path": [
                    "int"
                ]
            }
        },
        "test_parse_max_complexity_per_path_error": {
            "name": "test_parse_max_complexity_per_path_error",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "parse_options": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "test_parse_var_names_blacklist": {
            "name": "test_parse_var_names_blacklist",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "parse_options": [
                    "str",
                    "list[str]"
                ],
                "args": [],
                "var_names_blacklist": [
                    "str"
                ]
            }
        }
    },
    "flake8-adjustable-complexity-master/tests/test_files/code_CAC001.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flake8-adjustable-complexity-master/tests/test_files/code_CAC002.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flake8-adjustable-complexity-master/tests/test_files/too_complex_with_blacklisted.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
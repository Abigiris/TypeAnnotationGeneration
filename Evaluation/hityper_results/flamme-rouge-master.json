{
    "flamme-rouge-master/setup.py": {
        "UploadCommand.status": {
            "name": "status",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "string": []
            }
        },
        "UploadCommand.initialize_options": {
            "name": "initialize_options",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.finalize_options": {
            "name": "finalize_options",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.run": {
            "name": "run",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/actions.py": {},
    "flamme-rouge-master/flamme_rouge/cards.py": {
        "Card.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_front": [
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "typing.Callable[T, None]",
                    "bool",
                    "float"
                ],
                "value_behind": [
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "typing.Callable[T, None]",
                    "bool",
                    "float"
                ],
                "exhaustion": [
                    "float",
                    "bool",
                    "list[tuple[typing.Union[int,float]]]"
                ]
            }
        },
        "Card.value_comp": {
            "name": "value_comp",
            "location": 30,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/const.py": {},
    "flamme-rouge-master/flamme_rouge/core.py": {
        "_execute_cyclist_action": {
            "name": "_execute_cyclist_action",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "action": []
            }
        },
        "_execute_card_action": {
            "name": "_execute_card_action",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "action": []
            }
        },
        "Phase.next_phase": {
            "name": "next_phase",
            "location": 37,
            "return": [
                "Phase"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "track": [],
                "teams": []
            }
        },
        "Game.reset": {
            "name": "reset",
            "location": 72,
            "return": [
                "Game"
            ],
            "arguments": {
                "self": [],
                "teams": [
                    "None"
                ]
            }
        },
        "Game.finished": {
            "name": "finished",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.winner": {
            "name": "winner",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.active_teams": {
            "name": "active_teams",
            "location": 106,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.sorted_teams": {
            "name": "sorted_teams",
            "location": 128,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.cyclists": {
            "name": "cyclists",
            "location": 133,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game._available_actions_start": {
            "name": "_available_actions_start",
            "location": 137,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "team": []
            }
        },
        "Game.available_actions": {
            "name": "available_actions",
            "location": 147,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "team": []
            }
        },
        "Game.take_action": {
            "name": "take_action",
            "location": 163,
            "return": [
                "Phase_@_RACE",
                "Phase_@_START"
            ],
            "arguments": {
                "self": [],
                "team": [],
                "action": []
            }
        },
        "Game._execute_start_action": {
            "name": "_execute_start_action",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "Game._execute_race_action": {
            "name": "_execute_race_action",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "Game.play_action": {
            "name": "play_action",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.play": {
            "name": "play",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.__str__": {
            "name": "__str__",
            "location": 249,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/env.py": {
        "_flatten": {
            "name": "_flatten",
            "location": 87,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "_count_cards": {
            "name": "_count_cards",
            "location": 128,
            "return": [],
            "arguments": {
                "cards": []
            }
        },
        "_to_action": {
            "name": "_to_action",
            "location": 235,
            "return": [],
            "arguments": {
                "number": [],
                "team": []
            }
        },
        "_main": {
            "name": "_main",
            "location": 486,
            "return": [],
            "arguments": {}
        },
        "FRAction.from_action": {
            "name": "from_action",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [],
                "action": []
            }
        },
        "ArrayData.to_array": {
            "name": "to_array",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "dtype": []
            }
        },
        "FRSectionData.from_section": {
            "name": "from_section",
            "location": 118,
            "return": [],
            "arguments": {
                "cls": [],
                "section": []
            }
        },
        "FROwnCyclistData.from_cyclist": {
            "name": "from_cyclist",
            "location": 147,
            "return": [],
            "arguments": {
                "cls": [],
                "cyclist": []
            }
        },
        "FROtherCyclistData.from_cyclist": {
            "name": "from_cyclist",
            "location": 177,
            "return": [],
            "arguments": {
                "cls": [],
                "cyclist": []
            }
        },
        "FRData.from_game": {
            "name": "from_game",
            "location": 214,
            "return": [],
            "arguments": {
                "cls": [],
                "game": [],
                "team": []
            }
        },
        "AgentTeam.__init__": {
            "name": "__init__",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "agent": [],
                "name": [],
                "max_tries": []
            }
        },
        "AgentTeam.starting_position": {
            "name": "starting_position",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "AgentTeam._select_action": {
            "name": "_select_action",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "AgentTeam.next_cyclist": {
            "name": "next_cyclist",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "AgentTeam.choose_card": {
            "name": "choose_card",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": [],
                "game": []
            }
        },
        "AvailableActions.__init__": {
            "name": "__init__",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "nb_actions": [],
                "space": []
            }
        },
        "AvailableActions.sample": {
            "name": "sample",
            "location": 319,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AvailableActions.contains": {
            "name": "contains",
            "location": 322,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "AvailableActions.__contains__": {
            "name": "__contains__",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AvailableActions.__getattr__": {
            "name": "__getattr__",
            "location": 330,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FREnv.__init__": {
            "name": "__init__",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "team": [],
                "opponents": [],
                "track": []
            }
        },
        "FREnv._play_others": {
            "name": "_play_others",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FREnv.reset": {
            "name": "reset",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FREnv.step": {
            "name": "step",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "FREnv.render": {
            "name": "render",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "mode": [],
                "close": []
            }
        },
        "FREnv.close": {
            "name": "close",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FREnv.seed": {
            "name": "seed",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "seed": []
            }
        },
        "FREnv.configure": {
            "name": "configure",
            "location": 437,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FREnv.observation": {
            "name": "observation",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AvailableAgent.process_state_batch": {
            "name": "process_state_batch",
            "location": 459,
            "return": [],
            "arguments": {
                "self": [],
                "batch": []
            }
        },
        "AvailableAgent.compute_q_values": {
            "name": "compute_q_values",
            "location": 470,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/strategies.py": {
        "_first_available": {
            "name": "_first_available",
            "location": 22,
            "return": [],
            "arguments": {
                "game": [
                    "bool",
                    "typing.Sequence[str]",
                    "str"
                ],
                "cyclists": [
                    "str",
                    "bytes",
                    "list[str]",
                    "dict[str, str]"
                ],
                "key": [
                    "None",
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        },
        "Peloton.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Peloton.reset": {
            "name": "reset",
            "location": 50,
            "return": [
                "Peloton"
            ],
            "arguments": {
                "self": []
            }
        },
        "Peloton.starting_position": {
            "name": "starting_position",
            "location": 56,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "str"
                ]
            }
        },
        "Peloton.next_cyclist": {
            "name": "next_cyclist",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "Peloton.choose_card": {
            "name": "choose_card",
            "location": 73,
            "return": [
                "float",
                "list[]",
                "list[str]",
                "dict[, ]",
                "dict[str, typing.Literal]",
                "int"
            ],
            "arguments": {
                "self": [],
                "cyclist": [
                    "str",
                    "set[]"
                ],
                "game": [
                    "None"
                ]
            }
        },
        "Muscle.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Muscle.reset": {
            "name": "reset",
            "location": 106,
            "return": [
                "Muscle"
            ],
            "arguments": {
                "self": []
            }
        },
        "Muscle.starting_position": {
            "name": "starting_position",
            "location": 111,
            "return": [
                "tuple[typing.Union[str,float]]"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "tuple[int]",
                    "str"
                ]
            }
        },
        "Human.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Human._select_cyclist": {
            "name": "_select_cyclist",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclists": [
                    "None",
                    "list[dict[str, typing.Any]]",
                    "bytes",
                    "int",
                    "list[str]"
                ]
            }
        },
        "Human.starting_position": {
            "name": "starting_position",
            "location": 147,
            "return": [
                "tuple[typing.Union[tuple[typing.Union[typing.Type,typing.Type]],tuple[typing.Union[int,int,int,int,int,int,int,int,int,int]],list[str]]]"
            ],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "Human.next_cyclist": {
            "name": "next_cyclist",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "Human.choose_card": {
            "name": "choose_card",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclist": [
                    "str"
                ],
                "game": [
                    "None",
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Simple.starting_position": {
            "name": "starting_position",
            "location": 204,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "int",
                    "float"
                ]
            }
        },
        "Simple.choose_card": {
            "name": "choose_card",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclist": [],
                "game": [
                    "None",
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Heuristic.starting_position": {
            "name": "starting_position",
            "location": 224,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "int",
                    "float"
                ]
            }
        },
        "Heuristic.next_cyclist": {
            "name": "next_cyclist",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "Heuristic.choose_card": {
            "name": "choose_card",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclist": [
                    "str",
                    "typing.Iterable[str]"
                ],
                "game": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/teams.py": {
        "Cyclist.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deck": [
                    "None"
                ],
                "team": [
                    "None"
                ],
                "hand_size": [
                    "int"
                ],
                "colors": [
                    "None"
                ],
                "handicap": [
                    "None"
                ]
            }
        },
        "Cyclist.reset": {
            "name": "reset",
            "location": 79,
            "return": [
                "Cyclist"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cyclist.cards": {
            "name": "cards",
            "location": 112,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cyclist.colors": {
            "name": "colors",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Cyclist._draw": {
            "name": "_draw",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cyclist.draw_hand": {
            "name": "draw_hand",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "None"
                ]
            }
        },
        "Cyclist.select_card": {
            "name": "select_card",
            "location": 155,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "card": []
            }
        },
        "Cyclist.discard": {
            "name": "discard",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "card": []
            }
        },
        "Cyclist.discard_hand": {
            "name": "discard_hand",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cyclist.ahead_of": {
            "name": "ahead_of",
            "location": 180,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [],
                "track": []
            }
        },
        "Cyclist.__str__": {
            "name": "__str__",
            "location": 184,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.__init__": {
            "name": "__init__",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclists": [],
                "name": [
                    "None"
                ],
                "exhaustion": [
                    "bool"
                ],
                "order": [],
                "colors": [
                    "None"
                ],
                "handicap": [
                    "int"
                ],
                "hand_size": [
                    "None"
                ]
            }
        },
        "Team.available_cyclists": {
            "name": "available_cyclists",
            "location": 248,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.sorted_cyclists": {
            "name": "sorted_cyclists",
            "location": 253,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.need_to_select_cyclist": {
            "name": "need_to_select_cyclist",
            "location": 265,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.need_to_select_card": {
            "name": "need_to_select_card",
            "location": 270,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.cyclist_to_select_card": {
            "name": "cyclist_to_select_card",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.available_actions": {
            "name": "available_actions",
            "location": 282,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.select_action": {
            "name": "select_action",
            "location": 296,
            "return": [
                "None",
                "SelectStartPositionAction",
                "SelectCyclistAction",
                "SelectCardAction"
            ],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "Team.starting_position": {
            "name": "starting_position",
            "location": 333,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "Team.next_cyclist": {
            "name": "next_cyclist",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "Team.order_cyclists": {
            "name": "order_cyclists",
            "location": 347,
            "return": [
                "None",
                "typing.Generator[None]"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "Team.choose_card": {
            "name": "choose_card",
            "location": 364,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cyclist": [],
                "game": [
                    "None"
                ]
            }
        },
        "Team.reset": {
            "name": "reset",
            "location": 370,
            "return": [
                "Team"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.__str__": {
            "name": "__str__",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Regular.__init__": {
            "name": "__init__",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/tracks.py": {
        "Section.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "position": [],
                "lanes": [],
                "slipstream": [],
                "min_speed": [],
                "max_speed": []
            }
        },
        "Section.cyclists": {
            "name": "cyclists",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Section.empty": {
            "name": "empty",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Section.full": {
            "name": "full",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Section.add_cyclist": {
            "name": "add_cyclist",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": []
            }
        },
        "Section.remove_cyclist": {
            "name": "remove_cyclist",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": []
            }
        },
        "Section.lane": {
            "name": "lane",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": []
            }
        },
        "Section.reset": {
            "name": "reset",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Section.__str__": {
            "name": "__str__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Section3.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Finish.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Finish3.__init__": {
            "name": "__init__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "MountainUp.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "MountainDown.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Supply.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Cobblestone1.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Cobblestone2.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Track.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "sections": [],
                "start": [],
                "finish": [],
                "min_players": [],
                "max_players": []
            }
        },
        "Track.__len__": {
            "name": "__len__",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__getitem__": {
            "name": "__getitem__",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Track.__iter__": {
            "name": "__iter__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__reversed__": {
            "name": "__reversed__",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.available_start": {
            "name": "available_start",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.cyclists": {
            "name": "cyclists",
            "location": 233,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track._move_cyclist": {
            "name": "_move_cyclist",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": [],
                "value": [],
                "start": [],
                "min_speed": []
            }
        },
        "Track.move_cyclist": {
            "name": "move_cyclist",
            "location": 266,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist": [],
                "card": [],
                "min_speed": []
            }
        },
        "Track.do_slipstream": {
            "name": "do_slipstream",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.do_exhaustion": {
            "name": "do_exhaustion",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.leading": {
            "name": "leading",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.non_empty": {
            "name": "non_empty",
            "location": 328,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.finished": {
            "name": "finished",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "all_cyclists": []
            }
        },
        "Track.reset": {
            "name": "reset",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.compare": {
            "name": "compare",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "cyclist_1": [],
                "cyclist_2": []
            }
        },
        "Track.__str__": {
            "name": "__str__",
            "location": 365,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.from_sections": {
            "name": "from_sections",
            "location": 379,
            "return": [],
            "arguments": {
                "cls": [],
                "sections": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/utils.py": {
        "clear_list": {
            "name": "clear_list",
            "location": 19,
            "return": [
                "list[]"
            ],
            "arguments": {
                "items": [
                    "dict[str, str]",
                    "dict[, ]",
                    "list[str]"
                ]
            }
        },
        "window": {
            "name": "window",
            "location": 24,
            "return": [],
            "arguments": {
                "iterable": [
                    "int"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "parse_int": {
            "name": "parse_int",
            "location": 36,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "string": [
                    "str"
                ],
                "base": [
                    "int"
                ]
            }
        },
        "input_int": {
            "name": "input_int",
            "location": 57,
            "return": [
                "float",
                "int",
                "str"
            ],
            "arguments": {
                "prompt": [
                    "str",
                    "bytes"
                ],
                "base": [
                    "int"
                ],
                "lower": [
                    "bool",
                    "str",
                    "float"
                ],
                "upper": [
                    "bool",
                    "str",
                    "float"
                ]
            }
        },
        "class_from_path": {
            "name": "class_from_path",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "OrderedEnum.value_comp": {
            "name": "value_comp",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OrderedEnum.__ge__": {
            "name": "__ge__",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__gt__": {
            "name": "__gt__",
            "location": 124,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__le__": {
            "name": "__le__",
            "location": 129,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__lt__": {
            "name": "__lt__",
            "location": 134,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "flamme-rouge-master/flamme_rouge/__init__.py": {},
    "flamme-rouge-master/flamme_rouge/__main__.py": {
        "_parse_args": {
            "name": "_parse_args",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flamme-rouge-master/flamme_rouge/__version__.py": {}
}
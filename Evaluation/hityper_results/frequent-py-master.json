{
    "frequent-py-master/setup.py": {},
    "frequent-py-master/docs/conf.py": {},
    "frequent-py-master/src/frequent/config.py": {
        "_make_sentinel": {
            "name": "_make_sentinel",
            "location": 44,
            "return": [
                "Sentinel"
            ],
            "arguments": {
                "name": [
                    "typing.Text"
                ]
            }
        },
        "load_config": {
            "name": "load_config",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "None",
                    "str",
                    "typing.IO",
                    "typing.NamedTuple",
                    "typing.Iterable[str]"
                ],
                "config_cls": [
                    "Configuration"
                ]
            }
        },
        "_ensure_config": {
            "name": "_ensure_config",
            "location": 352,
            "return": [],
            "arguments": {
                "f": [
                    "typing.Callable[, ]",
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "save_config": {
            "name": "save_config",
            "location": 363,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 377,
            "return": [],
            "arguments": {
                "name": [
                    "None",
                    "str"
                ],
                "default": []
            }
        },
        "set_config": {
            "name": "set_config",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "clear_config": {
            "name": "clear_config",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "temp_config": {
            "name": "temp_config",
            "location": 432,
            "return": [
                "typing.Generator[typing.Union[dict[str, str],dict[str, typing.Union[str,None]],set[]]]",
                "None"
            ],
            "arguments": {}
        },
        "Configuration.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.__repr__": {
            "name": "__repr__",
            "location": 115,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Configuration.__getitem__": {
            "name": "__getitem__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool"
                ]
            }
        },
        "Configuration.__setitem__": {
            "name": "__setitem__",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes",
                    "int"
                ],
                "value": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Configuration.__delitem__": {
            "name": "__delitem__",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "Configuration.__len__": {
            "name": "__len__",
            "location": 145,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Configuration.__iter__": {
            "name": "__iter__",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.__getattr__": {
            "name": "__getattr__",
            "location": 151,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.MutableMapping",
                    "bool"
                ]
            }
        },
        "Configuration.__setattr__": {
            "name": "__setattr__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "list[]"
                ],
                "value": [
                    "str",
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "Configuration.__delattr__": {
            "name": "__delattr__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Configuration.clear": {
            "name": "clear",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.copy": {
            "name": "copy",
            "location": 177,
            "return": [
                "dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Configuration.dumps": {
            "name": "dumps",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "compact": [
                    "bool"
                ]
            }
        },
        "Configuration.loads": {
            "name": "loads",
            "location": 217,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]"
                ],
                "text": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "Configuration.save": {
            "name": "save",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Configuration.load": {
            "name": "load",
            "location": 255,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Sequence[str]",
                    "None"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Configuration.from_dict": {
            "name": "from_dict",
            "location": 281,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "Configuration.to_dict": {
            "name": "to_dict",
            "location": 302,
            "return": [
                "dict[, typing.Union[list[str],list[],list[tuple[typing.Union[int,int,int]]],list[int]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Configuration._key_helper": {
            "name": "_key_helper",
            "location": 319,
            "return": [
                "tuple[typing.Union[str,int,None]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, str]",
                    "int"
                ],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "_ensure_config.wrapper": {
            "name": "wrapper",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "_make_sentinel.Sentinel.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_make_sentinel.Sentinel.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "_make_sentinel.Sentinel.__nonzero__": {
            "name": "__nonzero__",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "frequent-py-master/src/frequent/messaging.py": {
        "convert_to_message": {
            "name": "convert_to_message",
            "location": 77,
            "return": [
                "str",
                "None",
                "tuple[]",
                "int",
                "typing.Type"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "typing.Type"
                ],
                "target_cls": [
                    "str",
                    "typing.Any"
                ]
            }
        },
        "message": {
            "name": "message",
            "location": 109,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "int",
                    "complex",
                    "bytes"
                ]
            }
        },
        "chain": {
            "name": "chain",
            "location": 362,
            "return": [],
            "arguments": {}
        },
        "MessageHandler.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "bus": [
                    "int",
                    "float"
                ]
            }
        },
        "MessageHandler.bus": {
            "name": "bus",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageHandler.__call__": {
            "name": "__call__",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ],
                "successor": [
                    "None",
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ]
            }
        },
        "MessageHandler.handle": {
            "name": "handle",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ],
                "successor": [
                    "None",
                    "str",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "HandlerRegistry.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandlerRegistry.__repr__": {
            "name": "__repr__",
            "location": 211,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandlerRegistry.__getitem__": {
            "name": "__getitem__",
            "location": 222,
            "return": [
                "dict[, ]",
                "str",
                "dict[int, str]",
                "typing.Type",
                "dict[str, str]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes"
                ]
            }
        },
        "HandlerRegistry.__iter__": {
            "name": "__iter__",
            "location": 228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandlerRegistry.__len__": {
            "name": "__len__",
            "location": 231,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandlerRegistry.add": {
            "name": "add",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg_cls": [
                    "dict[, ]",
                    "str",
                    "typing.DefaultDict"
                ],
                "handler": [
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "HandlerRegistry.clear": {
            "name": "clear",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandlerRegistry.get": {
            "name": "get",
            "location": 262,
            "return": [
                "None",
                "str",
                "typing.Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes",
                    "int",
                    "list[tuple[typing.Union[int,int]]]",
                    "None"
                ],
                "default": [
                    "None",
                    "str",
                    "typing.Any"
                ]
            }
        },
        "HandlerRegistry.remove": {
            "name": "remove",
            "location": 288,
            "return": [
                "typing.Iterator",
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "msg_cls": [
                    "typing.IO",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "MessageBus.__init__": {
            "name": "__init__",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "registry": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "MessageBus.__repr__": {
            "name": "__repr__",
            "location": 331,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessageBus.registry": {
            "name": "registry",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageBus.__call__": {
            "name": "__call__",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ]
            }
        },
        "MessageBus.handle": {
            "name": "handle",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "set[]",
                    "bytes"
                ]
            }
        },
        "chain._chain": {
            "name": "_chain",
            "location": 404,
            "return": [],
            "arguments": {
                "head": [],
                "tail": []
            }
        },
        "NoHandlersFoundException.__init__": {
            "name": "__init__",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "msg_cls": [
                    "str",
                    "list[str]",
                    "tuple[str]"
                ]
            }
        }
    },
    "frequent-py-master/src/frequent/repository.py": {
        "ObjectNotFoundError.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ],
                "field": [
                    "typing.Text"
                ]
            }
        },
        "Repository.add": {
            "name": "add",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "Repository.all": {
            "name": "all",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repository._get": {
            "name": "_get",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "int",
                    "str"
                ]
            }
        },
        "Repository.get": {
            "name": "get",
            "location": 109,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "Repository.remove": {
            "name": "remove",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bool",
                    "float",
                    "None",
                    "list[str]"
                ]
            }
        }
    },
    "frequent-py-master/src/frequent/singleton.py": {
        "Singleton.__call__": {
            "name": "__call__",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]",
                    "typing.IO",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        }
    },
    "frequent-py-master/src/frequent/unit_of_work.py": {
        "UnitOfWork.__enter__": {
            "name": "__enter__",
            "location": 32,
            "return": [
                "UnitOfWork"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.__exit__": {
            "name": "__exit__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "exc_value": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ],
                "traceback": [
                    "typing.Type",
                    "None",
                    "BaseException"
                ]
            }
        },
        "UnitOfWork.commit": {
            "name": "commit",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.rollback": {
            "name": "rollback",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWorkManager.start": {
            "name": "start",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "frequent-py-master/src/frequent/__init__.py": {},
    "frequent-py-master/src/frequent/__version__.py": {},
    "frequent-py-master/tasks/docs.py": {
        "log": {
            "name": "log",
            "location": 18,
            "return": [],
            "arguments": {
                "msg": [
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool",
                    "None"
                ],
                "level": [
                    "None",
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool"
                ]
            }
        },
        "generate_make": {
            "name": "generate_make",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "clean_apidocs": {
            "name": "clean_apidocs",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "frequent-py-master/tasks/generate.py": {
        "log": {
            "name": "log",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool",
                    "None"
                ],
                "level": [
                    "None",
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 40,
            "return": [],
            "arguments": {
                "ctx": [],
                "cmd": [],
                "draft": []
            }
        },
        "create_docs_changelog": {
            "name": "create_docs_changelog",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "new_entry": [
                    "str"
                ],
                "write": [
                    "bool"
                ]
            }
        },
        "changelog_rst_to_md": {
            "name": "changelog_rst_to_md",
            "location": 77,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "None",
                    "bool"
                ],
                "path": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "authors": {
            "name": "authors",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "draft": [
                    "bool"
                ],
                "branch": [
                    "typing.Text"
                ]
            }
        },
        "todos": {
            "name": "todos",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "draft": [
                    "bool"
                ]
            }
        },
        "changelog": {
            "name": "changelog",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "draft": [
                    "bool"
                ]
            }
        }
    },
    "frequent-py-master/tasks/helpers.py": {
        "convert_rst_to_markdown": {
            "name": "convert_rst_to_markdown",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "content": [
                    "str",
                    "bytes"
                ]
            }
        },
        "create_change_item": {
            "name": "create_change_item",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "reference": [
                    "str",
                    "list[str]"
                ],
                "context": [
                    "str",
                    "list[str]"
                ],
                "message": [
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "log": {
            "name": "log",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "level": [
                    "str"
                ]
            }
        },
        "ctx_run": {
            "name": "ctx_run",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "cmd": [
                    "str"
                ],
                "draft": [
                    "bool"
                ],
                "log_fn": []
            }
        },
        "get_alias_cmd": {
            "name": "get_alias_cmd",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "alias": [
                    "str"
                ]
            }
        },
        "get_todos": {
            "name": "get_todos",
            "location": 71,
            "return": [],
            "arguments": {
                "file": [
                    "str"
                ],
                "context": [
                    "None",
                    "bool",
                    "str",
                    "typing.Iterable[str]"
                ],
                "project": [
                    "None",
                    "bool",
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        },
        "insert_text": {
            "name": "insert_text",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "original": [
                    "str"
                ],
                "new": [
                    "str"
                ],
                "after": [
                    "int",
                    "list[str]",
                    "frozenset"
                ]
            }
        },
        "print_block": {
            "name": "print_block",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "frequent-py-master/tasks/release.py": {
        "log": {
            "name": "log",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool",
                    "None"
                ],
                "level": [
                    "None",
                    "str",
                    "list[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool"
                ]
            }
        }
    },
    "frequent-py-master/tasks/__init__.py": {},
    "frequent-py-master/tests/test_config.py": {
        "test_get_set_config": {
            "name": "test_get_set_config",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_temp_config": {
            "name": "test_temp_config",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestConfiguration.test_usage": {
            "name": "test_usage",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.test_clear": {
            "name": "test_clear",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.test_copy": {
            "name": "test_copy",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.test_file_functions": {
            "name": "test_file_functions",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "frequent-py-master/tests/test_messaging.py": {
        "test_message_decorator": {
            "name": "test_message_decorator",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestNoHandlersFoundException": {
            "name": "TestNoHandlersFoundException",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "object": []
            }
        },
        "test_chain": {
            "name": "test_chain",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DecoratedHandler.handle": {
            "name": "handle",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "TestMessage.test_create": {
            "name": "test_create",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNoHandlersFoundException.test_exception": {
            "name": "test_exception",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMessageBus.test_create": {
            "name": "test_create",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHandlerRegistry.test_create": {
            "name": "test_create",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHandlerRegistry.test_usage": {
            "name": "test_usage",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "test_chain.save_result": {
            "name": "save_result",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "test_chain.check_target": {
            "name": "check_target",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [],
                "successor": []
            }
        },
        "test_chain.LogMsgHandler.handle": {
            "name": "handle",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [],
                "successor": [
                    "None"
                ]
            }
        }
    },
    "frequent-py-master/tests/test_singletons.py": {
        "BaseClass.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "float",
                    "str"
                ],
                "b": [
                    "int",
                    "float"
                ],
                "c": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "SingleClass.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnotherSingleClass.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSingleton.test_is_singleton": {
            "name": "test_is_singleton",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleton.test_delete": {
            "name": "test_delete",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleton.test_attributes": {
            "name": "test_attributes",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleton.test_inheritance": {
            "name": "test_inheritance",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
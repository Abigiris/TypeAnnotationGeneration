{
    "full-stack-fastapi-couchbase-master/hooks/post_gen_project.py": {},
    "full-stack-fastapi-couchbase-master/scripts/generate_cookiecutter_config.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/backend_pre_start.py": {
        "init": {
            "name": "init",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/celeryworker_pre_start.py": {
        "init": {
            "name": "init",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/main.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests_pre_start.py": {
        "init": {
            "name": "init",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/utils.py": {
        "send_email": {
            "name": "send_email",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "email_to": [
                    "str",
                    "dict[, ]",
                    "int",
                    "typing.Type",
                    "list[str]"
                ],
                "subject_template": [
                    "typing.Text"
                ],
                "html_template": [
                    "typing.Text"
                ],
                "environment": [
                    "dict[, ]"
                ]
            }
        },
        "send_test_email": {
            "name": "send_test_email",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "email_to": [
                    "str"
                ]
            }
        },
        "send_reset_password_email": {
            "name": "send_reset_password_email",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "email_to": [
                    "str",
                    "dict[str, str]"
                ],
                "username": [
                    "str"
                ],
                "token": []
            }
        },
        "send_new_account_email": {
            "name": "send_new_account_email",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "email_to": [
                    "str"
                ],
                "username": [
                    "str",
                    "None"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "generate_password_reset_token": {
            "name": "generate_password_reset_token",
            "location": 92,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "verify_password_reset_token": {
            "name": "verify_password_reset_token",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "token": [
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/worker.py": {
        "test_celery": {
            "name": "test_celery",
            "location": 10,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "word": [
                    "str",
                    "typing.Mapping"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/api.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/items.py": {
        "read_items": {
            "name": "read_items",
            "location": 15,
            "return": [
                "str",
                "dict[, ]"
            ],
            "arguments": {
                "skip": [
                    "int"
                ],
                "limit": [
                    "int"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "search_items": {
            "name": "search_items",
            "location": 38,
            "return": [
                "dict[, ]",
                "typing.Type"
            ],
            "arguments": {
                "q": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "typing.MutableMapping",
                    "str"
                ],
                "skip": [
                    "int"
                ],
                "limit": [
                    "int"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "create_item": {
            "name": "create_item",
            "location": 66,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        },
        "update_item": {
            "name": "update_item",
            "location": 81,
            "return": [
                "dict[, ]",
                "set[tuple[typing.Union[typing.Any,typing.Any]]]",
                "typing.Type",
                "typing.DefaultDict"
            ],
            "arguments": {}
        },
        "read_item": {
            "name": "read_item",
            "location": 105,
            "return": [
                "dict[, ]",
                "set[tuple[typing.Union[typing.Any,typing.Any]]]",
                "typing.Type",
                "typing.DefaultDict"
            ],
            "arguments": {
                "id": [
                    "dict[, ]",
                    "bool",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "delete_item": {
            "name": "delete_item",
            "location": 121,
            "return": [
                "dict[, ]",
                "set[tuple[typing.Union[typing.Any,typing.Any]]]",
                "typing.Type",
                "typing.DefaultDict"
            ],
            "arguments": {
                "id": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, typing.Any]]"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/login.py": {
        "login": {
            "name": "login",
            "location": 24,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "form_data": [
                    "Depends"
                ]
            }
        },
        "test_token": {
            "name": "test_token",
            "location": 46,
            "return": [
                "Depends"
            ],
            "arguments": {
                "current_user": [
                    "Depends"
                ]
            }
        },
        "recover_password": {
            "name": "recover_password",
            "location": 54,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "username": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "reset_password": {
            "name": "reset_password",
            "location": 74,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "token": [
                    "Body"
                ],
                "new_password": [
                    "Body"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/roles.py": {
        "read_roles": {
            "name": "read_roles",
            "location": 12,
            "return": [
                "dict[typing.Text, typing.Union[int,dict[, ],list[int],list[list[int]],str]]"
            ],
            "arguments": {
                "current_user": [
                    "Depends"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/users.py": {
        "read_users": {
            "name": "read_users",
            "location": 17,
            "return": [
                "dict[str, str]",
                "str"
            ],
            "arguments": {
                "skip": [
                    "int"
                ],
                "limit": [
                    "int"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "search_users": {
            "name": "search_users",
            "location": 31,
            "return": [
                "typing.Pattern",
                "str",
                "list[str]",
                "dict[str, typing.Union[int,str]]"
            ],
            "arguments": {
                "q": [
                    "str",
                    "int"
                ],
                "skip": [
                    "int"
                ],
                "limit": [
                    "int"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "create_user": {
            "name": "create_user",
            "location": 50,
            "return": [
                "dict[str, str]",
                "dict[, ]",
                "dict[typing.Any, dict[str, typing.Any]]"
            ],
            "arguments": {}
        },
        "update_user_me": {
            "name": "update_user_me",
            "location": 74,
            "return": [
                "dict[str, str]",
                "str",
                "dict[typing.Any, dict[str, typing.Any]]"
            ],
            "arguments": {}
        },
        "read_user_me": {
            "name": "read_user_me",
            "location": 97,
            "return": [
                "Depends"
            ],
            "arguments": {
                "current_user": [
                    "Depends"
                ]
            }
        },
        "create_user_open": {
            "name": "create_user_open",
            "location": 105,
            "return": [
                "dict[str, str]",
                "dict[str, list[typing.Any]]",
                "dict[, ]",
                "str"
            ],
            "arguments": {}
        },
        "read_user": {
            "name": "read_user",
            "location": 139,
            "return": [
                "dict[typing.Any, dict[str, typing.Any]]",
                "dict[str, typing.Union[typing.Any,typing.Any,typing.Any]]",
                "dict[, ]"
            ],
            "arguments": {
                "username": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "update_user": {
            "name": "update_user",
            "location": 155,
            "return": [
                "dict[str, str]",
                "dict[typing.Any, dict[str, typing.Any]]",
                "dict[, ]"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/utils.py": {
        "test_celery": {
            "name": "test_celery",
            "location": 14,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "msg": [],
                "current_user": [
                    "Depends"
                ]
            }
        },
        "test_email": {
            "name": "test_email",
            "location": 25,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "email_to": [
                    "str",
                    "list[cmk.gui.plugins.visuals.utils.Filter]"
                ],
                "current_user": [
                    "Depends"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/api_v1/endpoints/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/utils/security.py": {
        "get_current_user": {
            "name": "get_current_user",
            "location": 17,
            "return": [
                "dict[str, str]",
                "dict[, ]",
                "dict[str, int]",
                "dict[str, None]"
            ],
            "arguments": {
                "token": [
                    "Security"
                ]
            }
        },
        "get_current_active_user": {
            "name": "get_current_active_user",
            "location": 32,
            "return": [
                "Security"
            ],
            "arguments": {
                "current_user": [
                    "Security"
                ]
            }
        },
        "get_current_active_superuser": {
            "name": "get_current_active_superuser",
            "location": 38,
            "return": [
                "Security"
            ],
            "arguments": {
                "current_user": [
                    "Security"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/api/utils/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/core/celery_app.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/core/config.py": {
        "getenv_boolean": {
            "name": "getenv_boolean",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "var_name": [
                    "str",
                    "bool"
                ],
                "default_value": [
                    "bool"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/core/jwt.py": {
        "create_access_token": {
            "name": "create_access_token",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/core/security.py": {
        "verify_password": {
            "name": "verify_password",
            "location": 6,
            "return": [],
            "arguments": {
                "plain_password": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "hashed_password": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "get_password_hash": {
            "name": "get_password_hash",
            "location": 10,
            "return": [],
            "arguments": {
                "password": [
                    "str"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/core/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/crud/item.py": {
        "get_doc_id": {
            "name": "get_doc_id",
            "location": 14,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "get": {
            "name": "get",
            "location": 18,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "upsert": {
            "name": "upsert",
            "location": 23,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "update": {
            "name": "update",
            "location": 39,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "remove": {
            "name": "remove",
            "location": 58,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "get_multi": {
            "name": "get_multi",
            "location": 65,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "get_multi_by_owner": {
            "name": "get_multi_by_owner",
            "location": 75,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search": {
            "name": "search",
            "location": 90,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_with_owner": {
            "name": "search_with_owner",
            "location": 102,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_search_results_to_docs": {
            "name": "search_get_search_results_to_docs",
            "location": 119,
            "return": [],
            "arguments": {
                "bucket": []
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/crud/user.py": {
        "get_doc_id": {
            "name": "get_doc_id",
            "location": 18,
            "return": [],
            "arguments": {
                "username": []
            }
        },
        "get": {
            "name": "get",
            "location": 22,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "get_by_email": {
            "name": "get_by_email",
            "location": 27,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "insert_sync_gateway": {
            "name": "insert_sync_gateway",
            "location": 43,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "update_sync_gateway": {
            "name": "update_sync_gateway",
            "location": 51,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "upsert_in_db": {
            "name": "upsert_in_db",
            "location": 62,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "update_in_db": {
            "name": "update_in_db",
            "location": 74,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "upsert": {
            "name": "upsert",
            "location": 89,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "update": {
            "name": "update",
            "location": 96,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "authenticate": {
            "name": "authenticate",
            "location": 109,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "is_active": {
            "name": "is_active",
            "location": 118,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "is_superuser": {
            "name": "is_superuser",
            "location": 122,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "get_multi": {
            "name": "get_multi",
            "location": 128,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search": {
            "name": "search",
            "location": 139,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_search_results_to_docs": {
            "name": "search_get_search_results_to_docs",
            "location": 152,
            "return": [],
            "arguments": {
                "bucket": []
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/crud/utils.py": {
        "generate_new_id": {
            "name": "generate_new_id",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "ensure_enums_to_strs": {
            "name": "ensure_enums_to_strs",
            "location": 21,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "get_doc_results_by_type": {
            "name": "get_doc_results_by_type",
            "location": 31,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "get_docs_by_keys": {
            "name": "get_docs_by_keys",
            "location": 45,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "doc_result_to_model": {
            "name": "doc_result_to_model",
            "location": 56,
            "return": [],
            "arguments": {
                "couchbase_result": []
            }
        },
        "doc_results_to_model": {
            "name": "doc_results_to_model",
            "location": 64,
            "return": [],
            "arguments": {
                "results_from_couchbase": []
            }
        },
        "search_results_to_model": {
            "name": "search_results_to_model",
            "location": 75,
            "return": [],
            "arguments": {
                "results_from_couchbase": []
            }
        },
        "get_docs": {
            "name": "get_docs",
            "location": 98,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "get_doc": {
            "name": "get_doc",
            "location": 107,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "upsert": {
            "name": "upsert",
            "location": 117,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "update": {
            "name": "update",
            "location": 130,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "remove": {
            "name": "remove",
            "location": 149,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_doc_ids": {
            "name": "search_get_doc_ids",
            "location": 168,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_search_results": {
            "name": "search_get_search_results",
            "location": 184,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_by_type_get_search_results": {
            "name": "search_by_type_get_search_results",
            "location": 203,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_docs": {
            "name": "search_get_docs",
            "location": 225,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_get_search_results_to_docs": {
            "name": "search_get_search_results_to_docs",
            "location": 253,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "search_by_type_get_results_to_docs": {
            "name": "search_by_type_get_results_to_docs",
            "location": 272,
            "return": [],
            "arguments": {
                "bucket": []
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/crud/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/db/couchbase_utils.py": {
        "get_cluster_http_url": {
            "name": "get_cluster_http_url",
            "location": 26,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "typing.Text"
                ]
            }
        },
        "get_cluster_couchbase_url": {
            "name": "get_cluster_couchbase_url",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "typing.Text"
                ],
                "fetch_mutation_tokens": [
                    "typing.Text"
                ],
                "operation_timeout": [
                    "typing.Text"
                ],
                "n1ql_timeout": [
                    "typing.Text"
                ]
            }
        },
        "get_allowed_username": {
            "name": "get_allowed_username",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "is_couchbase_ready": {
            "name": "is_couchbase_ready",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "cluster_url": [
                    "str"
                ]
            }
        },
        "setup_couchbase_services": {
            "name": "setup_couchbase_services",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "setup_memory_quota": {
            "name": "setup_memory_quota",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "setup_index_storage": {
            "name": "setup_index_storage",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "setup_couchbase_username_password": {
            "name": "setup_couchbase_username_password",
            "location": 97,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "check_couchbase_username_password": {
            "name": "check_couchbase_username_password",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "ensure_couchbase_username_password": {
            "name": "ensure_couchbase_username_password",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "import_couchbase_default_data": {
            "name": "import_couchbase_default_data",
            "location": 125,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_bucket_created": {
            "name": "is_bucket_created",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "create_bucket": {
            "name": "create_bucket",
            "location": 142,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "ensure_create_bucket": {
            "name": "ensure_create_bucket",
            "location": 158,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_couchbase_user_created": {
            "name": "is_couchbase_user_created",
            "location": 184,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "create_couchbase_user": {
            "name": "create_couchbase_user",
            "location": 191,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "ensure_create_couchbase_user": {
            "name": "ensure_create_couchbase_user",
            "location": 205,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "config_couchbase": {
            "name": "config_couchbase",
            "location": 224,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/db/database.py": {
        "get_default_bucket": {
            "name": "get_default_bucket",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "get_cluster": {
            "name": "get_cluster",
            "location": 27,
            "return": [
                "Cluster"
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "typing.Text"
                ]
            }
        },
        "get_bucket": {
            "name": "get_bucket",
            "location": 38,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "str",
                    "int"
                ],
                "bucket_name": [
                    "str",
                    "int"
                ],
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "typing.Text"
                ],
                "timeout": [],
                "n1ql_timeout": []
            }
        },
        "ensure_create_primary_index": {
            "name": "ensure_create_primary_index",
            "location": 54,
            "return": [],
            "arguments": {
                "bucket": []
            }
        },
        "ensure_create_type_index": {
            "name": "ensure_create_type_index",
            "location": 59,
            "return": [],
            "arguments": {
                "bucket": []
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/db/full_text_search_utils.py": {
        "get_index": {
            "name": "get_index",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "index_name": [
                    "str",
                    "dict[tuple[typing.Union[typing.Any,str]], int]",
                    "None"
                ]
            }
        },
        "create_index": {
            "name": "create_index",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "index_definition": [
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "ensure_create_full_text_indexes": {
            "name": "ensure_create_full_text_indexes",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "index_dir": [],
                "username": [],
                "password": [],
                "host": [
                    "typing.Text"
                ],
                "port": [
                    "typing.Text"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/db/init_db.py": {
        "init_db": {
            "name": "init_db",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/db/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/config.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/item.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/msg.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/role.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/token.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/user.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/models/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/conftest.py": {
        "server_api": {
            "name": "server_api",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "superuser_token_headers": {
            "name": "superuser_token_headers",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "normal_user_token_headers": {
            "name": "normal_user_token_headers",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/api_v1/test_celery.py": {
        "test_celery_worker_test": {
            "name": "test_celery_worker_test",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "dict[str, str]",
                    "str",
                    "list[list[int]]"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/api_v1/test_items.py": {
        "test_create_item": {
            "name": "test_create_item",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "bool"
                ]
            }
        },
        "test_read_item": {
            "name": "test_read_item",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "typing.Callable[, ]",
                    "dict[, ]"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/api_v1/test_login.py": {
        "test_get_access_token": {
            "name": "test_get_access_token",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_use_access_token": {
            "name": "test_use_access_token",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "str",
                    "dict[str, str]",
                    "list[list[int]]"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/api_v1/test_users.py": {
        "test_get_users_superuser_me": {
            "name": "test_get_users_superuser_me",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_get_users_normal_user_me": {
            "name": "test_get_users_normal_user_me",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "normal_user_token_headers": [
                    "bool",
                    "list[list[int]]"
                ]
            }
        },
        "test_create_user_new_email": {
            "name": "test_create_user_new_email",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "list[list[int]]"
                ]
            }
        },
        "test_get_existing_user": {
            "name": "test_get_existing_user",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "str",
                    "dict[str, str]",
                    "bool"
                ]
            }
        },
        "test_create_user_existing_username": {
            "name": "test_create_user_existing_username",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": []
            }
        },
        "test_create_user_by_normal_user": {
            "name": "test_create_user_by_normal_user",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "normal_user_token_headers": [
                    "list[list[int]]",
                    "int"
                ]
            }
        },
        "test_retrieve_users": {
            "name": "test_retrieve_users",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "superuser_token_headers": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/api/api_v1/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/crud/test_get_ids.py": {
        "test_get_user_id": {
            "name": "test_get_user_id",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/crud/test_item.py": {
        "test_create_item": {
            "name": "test_create_item",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_item": {
            "name": "test_get_item",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update_item": {
            "name": "test_update_item",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_delete_item": {
            "name": "test_delete_item",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/crud/test_user.py": {
        "test_create_user": {
            "name": "test_create_user",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_authenticate_user": {
            "name": "test_authenticate_user",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_not_authenticate_user": {
            "name": "test_not_authenticate_user",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_if_user_is_active": {
            "name": "test_check_if_user_is_active",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_if_user_is_active_inactive": {
            "name": "test_check_if_user_is_active_inactive",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_if_user_is_superuser": {
            "name": "test_check_if_user_is_superuser",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_if_user_is_superuser_normal_user": {
            "name": "test_check_if_user_is_superuser_normal_user",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_user": {
            "name": "test_get_user",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/crud/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/utils/item.py": {
        "create_random_item": {
            "name": "create_random_item",
            "location": 8,
            "return": [],
            "arguments": {
                "owner_username": [
                    "None",
                    "typing.Type",
                    "bool"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/utils/user.py": {
        "user_authentication_headers": {
            "name": "user_authentication_headers",
            "location": 10,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "server_api": [
                    "str",
                    "typing.IO"
                ],
                "email": [
                    "str",
                    "dict[, ]"
                ],
                "password": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "create_random_user": {
            "name": "create_random_user",
            "location": 20,
            "return": [
                "str",
                "None"
            ],
            "arguments": {}
        },
        "authentication_token_from_email": {
            "name": "authentication_token_from_email",
            "location": 29,
            "return": [],
            "arguments": {
                "email": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/utils/utils.py": {
        "random_lower_string": {
            "name": "random_lower_string",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_server_api": {
            "name": "get_server_api",
            "location": 13,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "get_superuser_token_headers": {
            "name": "get_superuser_token_headers",
            "location": 18,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        }
    },
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/backend/app/app/tests/utils/__init__.py": {},
    "full-stack-fastapi-couchbase-master/{{cookiecutter.project_slug}}/sync-gateway/create_config.py": {
        "getenv_boolean": {
            "name": "getenv_boolean",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "var_name": [
                    "str",
                    "bool"
                ],
                "default_value": [
                    "bool"
                ]
            }
        }
    }
}
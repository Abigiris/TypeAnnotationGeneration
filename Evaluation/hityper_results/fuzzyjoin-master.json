{
    "fuzzyjoin-master/fuzzyjoin_cli.py": {},
    "fuzzyjoin-master/setup.py": {},
    "fuzzyjoin-master/tasks.py": {
        "execute_command": {
            "name": "execute_command",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd_name": [
                    "str",
                    "dict[, ]"
                ],
                "cmd": [
                    "str",
                    "None"
                ]
            }
        },
        "check_for_sentinel": {
            "name": "check_for_sentinel",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "bump_version_file": {
            "name": "bump_version_file",
            "location": 48,
            "return": [],
            "arguments": {
                "version_part": [
                    "str",
                    "int"
                ]
            }
        },
        "bump_version_init_file": {
            "name": "bump_version_init_file",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "int",
                    "str",
                    "set[]"
                ]
            }
        },
        "create_names_sample": {
            "name": "create_names_sample",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_count": [
                    "bool"
                ]
            }
        },
        "tasks_cli": {
            "name": "tasks_cli",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cmd_create_sample": {
            "name": "cmd_create_sample",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_type": [
                    "str",
                    "int"
                ],
                "sample_count": [
                    "str"
                ]
            }
        },
        "cmd_bump": {
            "name": "cmd_bump",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "version_part": [
                    "str",
                    "list[str]",
                    "typing.Type"
                ]
            }
        },
        "cmd_check": {
            "name": "cmd_check",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cmd_build": {
            "name": "cmd_build",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cmd_publish": {
            "name": "cmd_publish",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "test": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "Exception"
                ]
            }
        }
    },
    "fuzzyjoin-master/fuzzyjoin/cli.py": {
        "main": {
            "name": "main",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "fields": [
                    "str",
                    "list[list[str]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "threshold": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "output": [
                    "typing.IO",
                    "None"
                ],
                "multiples_file": [
                    "typing.BinaryIO",
                    "typing.IO",
                    "None",
                    "str"
                ],
                "exclude": [
                    "int",
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ],
                "collate": [
                    "int",
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ],
                "compare": [
                    "int",
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ],
                "numbers_exact": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "numbers_permutation": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "numbers_subset": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "ngram_size": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "no_progress": [
                    "typing.Mapping",
                    "typing.Callable[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.Iterable[str]",
                    "str"
                ],
                "debug": [
                    "bool",
                    "str",
                    "typing.Iterable[typing.Optional[typing.Any]]",
                    "typing.Sequence[str]"
                ],
                "yes": [
                    "bool",
                    "str",
                    "typing.Iterable[typing.Optional[typing.Any]]",
                    "typing.Sequence[str]"
                ],
                "left_csv": [
                    "str",
                    "bytes",
                    "typing.IO"
                ],
                "right_csv": [
                    "str",
                    "bytes",
                    "typing.IO"
                ]
            }
        }
    },
    "fuzzyjoin-master/fuzzyjoin/collate.py": {
        "to_tokens": {
            "name": "to_tokens",
            "location": 11,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "to_sorted_tokens": {
            "name": "to_sorted_tokens",
            "location": 16,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "text": [
                    "str",
                    "int"
                ]
            }
        },
        "default_collate": {
            "name": "default_collate",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "fuzzyjoin-master/fuzzyjoin/compare.py": {
        "identity": {
            "name": "identity",
            "location": 27,
            "return": [
                "bool",
                "float",
                "typing.Iterable[typing.Iterable[float]]",
                "str",
                "bytes"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "default_exclude": {
            "name": "default_exclude",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "left": [
                    "dict[, ]",
                    "str"
                ],
                "right": [
                    "dict[, ]",
                    "str"
                ],
                "options": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "default_compare": {
            "name": "default_compare",
            "location": 38,
            "return": [
                "list[dict[typing.Text, typing.Union[bool,float]]]",
                "list[typing.Union[list[str],str]]"
            ],
            "arguments": {
                "record_1": [
                    "str"
                ],
                "record_2": [
                    "str"
                ],
                "options": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "ngram_blocker": {
            "name": "ngram_blocker",
            "location": 68,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "table_1": [
                    "str"
                ],
                "table_2": [
                    "str",
                    "typing.Sequence[str]",
                    "list[bytes]",
                    "bool"
                ],
                "options": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "bytes"
                ]
            }
        },
        "compare_fuzzy": {
            "name": "compare_fuzzy",
            "location": 112,
            "return": [
                "dict[typing.Text, typing.Union[bool,float,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {
                "record_1": [
                    "int",
                    "typing.IO"
                ],
                "record_2": [
                    "int",
                    "typing.IO"
                ],
                "options": []
            }
        },
        "compare_numbers_exact": {
            "name": "compare_numbers_exact",
            "location": 145,
            "return": [
                "dict[typing.Text, typing.Union[bool,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {
                "record_1": [],
                "record_2": [],
                "options": [
                    "str"
                ]
            }
        },
        "compare_numbers_permutation": {
            "name": "compare_numbers_permutation",
            "location": 170,
            "return": [
                "dict[typing.Text, typing.Union[bool,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {
                "record_1": [],
                "record_2": [],
                "options": [
                    "str"
                ]
            }
        },
        "compare_numbers_subset": {
            "name": "compare_numbers_subset",
            "location": 195,
            "return": [
                "dict[typing.Text, typing.Union[bool,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {
                "record_1": [],
                "record_2": [],
                "options": [
                    "str"
                ]
            }
        },
        "index_by_ngrams": {
            "name": "index_by_ngrams",
            "location": 222,
            "return": [],
            "arguments": {
                "records": [
                    "str",
                    "bytes",
                    "dict[, ]"
                ],
                "ngram_size": [
                    "str",
                    "bytes",
                    "float",
                    "None"
                ],
                "index_key": [
                    "str",
                    "bytes",
                    "float",
                    "None"
                ],
                "tx_fn": []
            }
        },
        "to_ngrams": {
            "name": "to_ngrams",
            "location": 237,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "item": [
                    "dict[, ]",
                    "int",
                    "list[dict[str, typing.Any]]",
                    "dict[int, int]",
                    "dict[str, dict[str, typing.Any]]",
                    "dict[str, tuple[typing.Union[typing.Any,str]]]"
                ],
                "ngram_size": [
                    "int",
                    "str"
                ]
            }
        },
        "token_to_ngrams": {
            "name": "token_to_ngrams",
            "location": 247,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "token": [],
                "ngram_size": [
                    "bool"
                ]
            }
        },
        "inner_join": {
            "name": "inner_join",
            "location": 261,
            "return": [],
            "arguments": {
                "table_1": [
                    "bool"
                ],
                "table_2": [
                    "bool"
                ],
                "options": [
                    "str",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "tuple[typing.Union[str,typing.Callable[, ]]]"
                ]
            }
        },
        "filter_multiples": {
            "name": "filter_multiples",
            "location": 328,
            "return": [
                "list[]",
                "list[typing.Text]"
            ],
            "arguments": {
                "matches": [
                    "str"
                ]
            }
        },
        "Options.__getitem__": {
            "name": "__getitem__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "None",
                    "tuple[]",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[T, T]",
                    "typing.Type"
                ]
            }
        },
        "Options.__setitem__": {
            "name": "__setitem__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        }
    },
    "fuzzyjoin-master/fuzzyjoin/io.py": {
        "inner_join_csv_files": {
            "name": "inner_join_csv_files",
            "location": 7,
            "return": [],
            "arguments": {
                "left_file": [
                    "str",
                    "int",
                    "float",
                    "None"
                ],
                "right_file": [
                    "str",
                    "int",
                    "float",
                    "None"
                ],
                "options": [
                    "str",
                    "int",
                    "float",
                    "None"
                ]
            }
        },
        "write_matches": {
            "name": "write_matches",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "matches": [
                    "list[dict[, ]]",
                    "list[str]"
                ],
                "output_file": [
                    "str"
                ]
            }
        }
    },
    "fuzzyjoin-master/fuzzyjoin/utils.py": {
        "iter_csv_as_records": {
            "name": "iter_csv_as_records",
            "location": 13,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ]
            }
        },
        "load_csv_as_records": {
            "name": "load_csv_as_records",
            "location": 24,
            "return": [
                "list[]"
            ],
            "arguments": {
                "filepath": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "prompt_if_exists": {
            "name": "prompt_if_exists",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "int",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "append_to_stack": {
            "name": "append_to_stack",
            "location": 40,
            "return": [],
            "arguments": {
                "stack": [],
                "item": [
                    "int",
                    "list[]",
                    "list[int]",
                    "list[typing.Union[int,float]]"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "color_red": {
            "name": "color_red",
            "location": 52,
            "return": [],
            "arguments": {
                "text": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "scan_for_token": {
            "name": "scan_for_token",
            "location": 56,
            "return": [
                "list[str]",
                "None"
            ],
            "arguments": {
                "token": [
                    "str"
                ],
                "filepath": [
                    "str"
                ],
                "context_lines": [
                    "int",
                    "str"
                ]
            }
        },
        "import_function": {
            "name": "import_function",
            "location": 81,
            "return": [],
            "arguments": {
                "fq_module_path": [
                    "str"
                ]
            }
        },
        "yield_chunks": {
            "name": "yield_chunks",
            "location": 90,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "l": [],
                "n": [
                    "int",
                    "list[]",
                    "typing.Sequence[]",
                    "list[str]",
                    "list[int]"
                ]
            }
        },
        "bump_version": {
            "name": "bump_version",
            "location": 96,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "version_text": [
                    "str"
                ],
                "part": [
                    "str",
                    "bool"
                ]
            }
        },
        "current_frame": {
            "name": "current_frame",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "current_function": {
            "name": "current_function",
            "location": 122,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "fuzzyjoin-master/fuzzyjoin/__init__.py": {},
    "fuzzyjoin-master/tests/test_compare.py": {
        "options": {
            "name": "options",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "demo_records": {
            "name": "demo_records",
            "location": 14,
            "return": [
                "list[dict[typing.Text, typing.Union[int,typing.Text]]]"
            ],
            "arguments": {}
        },
        "test_default_compare": {
            "name": "test_default_compare",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "options": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_ngrams": {
            "name": "test_ngrams",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_inner_join": {
            "name": "test_inner_join",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_inner_join_lower_threshold": {
            "name": "test_inner_join_lower_threshold",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_inner_join_multiples": {
            "name": "test_inner_join_multiples",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_compare_numbers_exact": {
            "name": "test_compare_numbers_exact",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_compare_numbers_permutation": {
            "name": "test_compare_numbers_permutation",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_compare_numbers_subset": {
            "name": "test_compare_numbers_subset",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "test_default_compare.do_compare": {
            "name": "do_compare",
            "location": 23,
            "return": [],
            "arguments": {
                "text_1": [],
                "text_2": []
            }
        },
        "test_compare_numbers_exact.do_compare": {
            "name": "do_compare",
            "location": 110,
            "return": [],
            "arguments": {
                "text_1": [],
                "text_2": []
            }
        },
        "test_compare_numbers_permutation.do_compare": {
            "name": "do_compare",
            "location": 123,
            "return": [],
            "arguments": {
                "text_1": [],
                "text_2": []
            }
        },
        "test_compare_numbers_subset.do_compare": {
            "name": "do_compare",
            "location": 136,
            "return": [],
            "arguments": {
                "text_1": [],
                "text_2": []
            }
        }
    },
    "fuzzyjoin-master/tests/test_utils.py": {
        "test_bump_version": {
            "name": "test_bump_version",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_append_to_stack": {
            "name": "test_append_to_stack",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_import_function": {
            "name": "test_import_function",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_yield_chunks": {
            "name": "test_yield_chunks",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fuzzyjoin-master/tests/__init__.py": {}
}
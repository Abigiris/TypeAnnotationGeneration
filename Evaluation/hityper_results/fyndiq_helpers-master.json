{
    "fyndiq_helpers-master/setup.py": {},
    "fyndiq_helpers-master/fyndiq_helpers/decorators.py": {
        "check_required_params.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "required_params": [
                    "int",
                    "float"
                ]
            }
        },
        "check_required_params.__call__": {
            "name": "__call__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "function": [
                    "typing.Callable[, ]",
                    "Exception"
                ]
            }
        },
        "validate_payload.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [
                    "int",
                    "typing.Sequence[str]",
                    "str",
                    "typing.Callable[, ]"
                ],
                "allow_unknown_fields": [
                    "bool"
                ]
            }
        },
        "validate_payload.__call__": {
            "name": "__call__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "view": [
                    "dict[, ]"
                ]
            }
        },
        "validate_data.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [
                    "int",
                    "typing.Sequence[str]",
                    "str",
                    "typing.Callable[, ]"
                ],
                "allow_unknown_fields": [
                    "bool"
                ]
            }
        },
        "validate_data.__call__": {
            "name": "__call__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "in_state.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "allowed_states": [
                    "None",
                    "int"
                ]
            }
        },
        "in_state.__call__": {
            "name": "__call__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "function": [
                    "typing.Callable[, ]",
                    "Exception"
                ]
            }
        },
        "check_required_params.__call__.wrapped_view_function": {
            "name": "wrapped_view_function",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "validate_payload.__call__.wrapped_function": {
            "name": "wrapped_function",
            "location": 57,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "validate_data.__call__.wrapped_function": {
            "name": "wrapped_function",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "in_state.__call__.wrapped_function": {
            "name": "wrapped_function",
            "location": 139,
            "return": [],
            "arguments": {}
        }
    },
    "fyndiq_helpers-master/fyndiq_helpers/exceptions.py": {
        "ExtendedException.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "details": [
                    "int",
                    "float"
                ]
            }
        },
        "ExtendedException.__str__": {
            "name": "__str__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtendedException.__repr__": {
            "name": "__repr__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fyndiq_helpers-master/fyndiq_helpers/log_config.py": {
        "add_sanic_request": {
            "name": "add_sanic_request",
            "location": 13,
            "return": [],
            "arguments": {
                "logger": [
                    "str",
                    "int"
                ],
                "level": [
                    "str",
                    "int"
                ],
                "event_dict": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "use_colors": [
                    "bool",
                    "str",
                    "tuple[typing.Union[str,str]]"
                ],
                "use_logstash": [
                    "bool",
                    "str",
                    "tuple[typing.Union[str,str]]"
                ],
                "use_filters": [
                    "bool",
                    "str",
                    "tuple[typing.Union[str,str]]"
                ],
                "use_quiet_libraries": [
                    "bool"
                ],
                "loglevel": [
                    "typing.Text"
                ]
            }
        },
        "HealthFilter.filter": {
            "name": "filter",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "typing.Callable[, ]",
                    "typing.Type"
                ]
            }
        }
    },
    "fyndiq_helpers-master/fyndiq_helpers/message_fields.py": {
        "MoneyField.get_amount_from_decimal": {
            "name": "get_amount_from_decimal",
            "location": 24,
            "return": [],
            "arguments": {
                "decimal_amount": [
                    "int",
                    "str"
                ]
            }
        },
        "MoneyField.get_vat_rate_from_decimal": {
            "name": "get_vat_rate_from_decimal",
            "location": 28,
            "return": [],
            "arguments": {
                "decimal_vat_rate": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "MoneyField.to_decimals": {
            "name": "to_decimals",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MoneyField.set_amount_from_decimal": {
            "name": "set_amount_from_decimal",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "decimal_amount": [
                    "bool"
                ]
            }
        },
        "MoneyField.set_vat_rate_from_decimal": {
            "name": "set_vat_rate_from_decimal",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "decimal_vat_rate": [
                    "dict[, ]",
                    "dict[str, set[str]]",
                    "int",
                    "str"
                ]
            }
        },
        "MoneyField.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": [
                    "int",
                    "bytes",
                    "list[typing.Any]",
                    "None"
                ],
                "currency": [
                    "int",
                    "bytes",
                    "list[typing.Any]",
                    "None"
                ],
                "vat_amount": [
                    "int",
                    "bytes",
                    "list[typing.Any]",
                    "None"
                ],
                "vat_rate": [
                    "int",
                    "bytes",
                    "list[typing.Any]",
                    "None"
                ]
            }
        },
        "MoneyField.to_dict": {
            "name": "to_dict",
            "location": 46,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalMoneyField.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "decimal_amount": [
                    "float",
                    "None"
                ],
                "currency": [
                    "str",
                    "int"
                ],
                "decimal_vat_amount": [
                    "float",
                    "None"
                ],
                "decimal_vat_rate": [
                    "int",
                    "list[str]",
                    "float"
                ]
            }
        }
    },
    "fyndiq_helpers-master/fyndiq_helpers/unit_converter.py": {
        "UnitConverter.to_minor_units": {
            "name": "to_minor_units",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "amount": [
                    "int"
                ]
            }
        },
        "UnitConverter.to_decimals": {
            "name": "to_decimals",
            "location": 30,
            "return": [],
            "arguments": {
                "amount": [
                    "int",
                    "float"
                ]
            }
        },
        "UnitConverter.vat_rate_to_decimal": {
            "name": "vat_rate_to_decimal",
            "location": 34,
            "return": [],
            "arguments": {
                "vat_rate": [
                    "float",
                    "int",
                    "None",
                    "str"
                ]
            }
        },
        "UnitConverter.vat_rate_to_minor_units": {
            "name": "vat_rate_to_minor_units",
            "location": 38,
            "return": [
                "int"
            ],
            "arguments": {
                "vat_rate": [
                    "str",
                    "int",
                    "list[list[]]"
                ]
            }
        },
        "UnitConverterPriceField.convert_price_field_to_decimal": {
            "name": "convert_price_field_to_decimal",
            "location": 48,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "price_field": []
            }
        }
    },
    "fyndiq_helpers-master/fyndiq_helpers/__init__.py": {},
    "fyndiq_helpers-master/tests/test_decorators.py": {
        "TestViewDecorators.setup_method": {
            "name": "setup_method",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_payload_success": {
            "name": "test_validate_payload_success",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_content_type_with_parameters": {
            "name": "test_validate_content_type_with_parameters",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_payload_incorrect_content_type": {
            "name": "test_validate_payload_incorrect_content_type",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_payload_incorrect_type": {
            "name": "test_validate_payload_incorrect_type",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_payload_should_ignore_extra_fields": {
            "name": "test_validate_payload_should_ignore_extra_fields",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_payload_ignore_should_complain_about_fields": {
            "name": "test_validate_payload_ignore_should_complain_about_fields",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_check_required_params_success": {
            "name": "test_check_required_params_success",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_decorator_argument": {
            "name": "test_check_required_params_missing_decorator_argument",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_param": {
            "name": "test_check_required_params_missing_param",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_multiple_params": {
            "name": "test_check_required_params_missing_multiple_params",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewDecorators.test_validate_data_raises_exception_on_faulty_data": {
            "name": "test_validate_data_raises_exception_on_faulty_data",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [
                    "bool",
                    "list[str]"
                ],
                "indata": [
                    "int"
                ],
                "expected_result": [
                    "bool",
                    "tuple[]"
                ]
            }
        },
        "TestViewDecorators.test_validate_payload_success.view": {
            "name": "view",
            "location": 25,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_validate_content_type_with_parameters.view": {
            "name": "view",
            "location": 41,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_validate_payload_incorrect_content_type.view": {
            "name": "view",
            "location": 57,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_validate_payload_incorrect_type.view": {
            "name": "view",
            "location": 77,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_validate_payload_should_ignore_extra_fields.view": {
            "name": "view",
            "location": 99,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_validate_payload_ignore_should_complain_about_fields.view": {
            "name": "view",
            "location": 118,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        },
        "TestViewDecorators.test_check_required_params_success.view": {
            "name": "view",
            "location": 133,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_param.view": {
            "name": "view",
            "location": 150,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_multiple_params.view": {
            "name": "view",
            "location": 164,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "TestViewDecorators.test_validate_data_raises_exception_on_faulty_data.test_method": {
            "name": "test_method",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "field": []
            }
        },
        "TestViewDecorators.test_check_required_params_missing_decorator_argument.view": {
            "name": "view",
            "location": 143,
            "return": [],
            "arguments": {
                "request": [],
                "payload": []
            }
        }
    },
    "fyndiq_helpers-master/tests/test_log_config.py": {
        "TestHealthFilter.test_filter_should_find_health_requests": {
            "name": "test_filter_should_find_health_requests",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHealthFilter.test_filter_should_ignore_non_health_requests": {
            "name": "test_filter_should_ignore_non_health_requests",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fyndiq_helpers-master/tests/test_message_fields.py": {
        "TestMoneyField.test_init": {
            "name": "test_init",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoneyField.test_to_decimals_should_return_decimal": {
            "name": "test_to_decimals_should_return_decimal",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoneyField.test_get_amount_from_decimal_should_return_minor_units": {
            "name": "test_get_amount_from_decimal_should_return_minor_units",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoneyField.test_set_amount_from_decimal_should_update_amount": {
            "name": "test_set_amount_from_decimal_should_update_amount",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoneyField.test_to_dict_method": {
            "name": "test_to_dict_method",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecimalMoneyField.test_init": {
            "name": "test_init",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fyndiq_helpers-master/tests/test_unit_converter.py": {
        "TestConverter.test_to_minor_units": {
            "name": "test_to_minor_units",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_minor_units_round_up": {
            "name": "test_to_minor_units_round_up",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_minor_units_round_down": {
            "name": "test_to_minor_units_round_down",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_minor_units_from_float_assertion_error": {
            "name": "test_to_minor_units_from_float_assertion_error",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_vat_rate_to_minor_units": {
            "name": "test_vat_rate_to_minor_units",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_vat_rate_to_minor_units_rounding": {
            "name": "test_vat_rate_to_minor_units_rounding",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_decimals_success": {
            "name": "test_to_decimals_success",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_decimals_fraction": {
            "name": "test_to_decimals_fraction",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_to_decimals_zero": {
            "name": "test_to_decimals_zero",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_vat_rate_to_decimal": {
            "name": "test_vat_rate_to_decimal",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConverter.test_price_field_to_decimals": {
            "name": "test_price_field_to_decimals",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fyndiq_helpers-master/tests/__init__.py": {}
}
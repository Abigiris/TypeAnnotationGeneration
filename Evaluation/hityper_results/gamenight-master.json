{
    "gamenight-master/setup.py": {},
    "gamenight-master/docs/conf.py": {},
    "gamenight-master/src/gamenight/wsgi.py": {},
    "gamenight-master/src/gamenight/__init__.py": {},
    "gamenight-master/src/gamenight/__main__.py": {},
    "gamenight-master/src/gamenight/app/extensions.py": {},
    "gamenight-master/src/gamenight/app/factory.py": {
        "make_app": {
            "name": "make_app",
            "location": 15,
            "return": [
                "Flask"
            ],
            "arguments": {
                "config_path": [
                    "None",
                    "str"
                ],
                "instance_path": [
                    "None",
                    "str",
                    "typing.Iterable[str]",
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "setup_instance_path": {
            "name": "setup_instance_path",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str",
                    "list[]",
                    "None"
                ]
            }
        },
        "configure_app": {
            "name": "configure_app",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "dict[, ]",
                    "str",
                    "dict[str, str]"
                ],
                "config_path": [
                    "None",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "initialize_extensions": {
            "name": "initialize_extensions",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str"
                ]
            }
        },
        "register_blueprints": {
            "name": "register_blueprints",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "finalize": {
            "name": "finalize",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "gamenight-master/src/gamenight/app/__init__.py": {},
    "gamenight-master/src/gamenight/app/blueprints/external.py": {
        "ExternalGameSearch.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search": [
                    "int",
                    "list[str]",
                    "str",
                    "float"
                ]
            }
        },
        "ExternalGameSearch.get": {
            "name": "get",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteGameView.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search": [
                    "int",
                    "list[str]",
                    "str",
                    "float"
                ]
            }
        },
        "RemoteGameView.get": {
            "name": "get",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "RemoteGameImport.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "importer": [
                    "int",
                    "float"
                ]
            }
        },
        "RemoteGameImport.post": {
            "name": "post",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "int",
                    "None",
                    "typing.Iterable[int]",
                    "str"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/blueprints/games.py": {
        "GamesView.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uowm": [
                    "int",
                    "float"
                ]
            }
        },
        "GamesView.get": {
            "name": "get",
            "location": 21,
            "return": [
                "tuple[typing.Union[typing.Pattern,dict[str, str],int]]"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "SpecificGameView.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uowm": [
                    "int",
                    "float"
                ]
            }
        },
        "SpecificGameView.get": {
            "name": "get",
            "location": 35,
            "return": [
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "typing.Iterable[int]"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/blueprints/_helpers.py": {},
    "gamenight-master/src/gamenight/app/blueprints/__init__.py": {},
    "gamenight-master/src/gamenight/app/config/default.py": {},
    "gamenight-master/src/gamenight/app/config/find.py": {
        "config_from_path": {
            "name": "config_from_path",
            "location": 19,
            "return": [
                "str",
                "None",
                "typing.Final",
                "int"
            ],
            "arguments": {
                "app": [
                    "str",
                    "None"
                ],
                "path": [
                    "None",
                    "str"
                ]
            }
        },
        "root_around": {
            "name": "root_around",
            "location": 46,
            "return": [],
            "arguments": {
                "app": [
                    "typing.Callable[, ]",
                    "int"
                ],
                "filename": [
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        },
        "is_qualname_path": {
            "name": "is_qualname_path",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "find_in_project_path": {
            "name": "find_in_project_path",
            "location": 54,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "look_in_instance_path": {
            "name": "look_in_instance_path",
            "location": 81,
            "return": [],
            "arguments": {
                "app": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "filename": []
            }
        },
        "_here": {
            "name": "_here",
            "location": 87,
            "return": [
                "Path"
            ],
            "arguments": {}
        },
        "config_from_env": {
            "name": "config_from_env",
            "location": 91,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "prefix": [
                    "str",
                    "dict[, ]"
                ],
                "ignore": [
                    "frozenset"
                ]
            }
        },
        "getqualname": {
            "name": "getqualname",
            "location": 107,
            "return": [
                "str"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "bool",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/config/__init__.py": {},
    "gamenight-master/src/gamenight/app/modules/extensions.py": {
        "ExtensionsModule.provide_session": {
            "name": "provide_session",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "gamenight-master/src/gamenight/app/modules/remote_game.py": {
        "RemoteGameModule.configure": {
            "name": "configure",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "binder": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "RemoteGameModule.boardgamegeek": {
            "name": "boardgamegeek",
            "location": 20,
            "return": [
                "BoardGameGeek"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gamenight-master/src/gamenight/app/modules/repository.py": {
        "RepositoryModule.configure": {
            "name": "configure",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "binder": [
                    "typing.Callable[, ]",
                    "None"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/modules/_helpers.py": {
        "_to_class_provider": {
            "name": "_to_class_provider",
            "location": 18,
            "return": [
                "ClassProvider",
                "typing.Type"
            ],
            "arguments": {
                "cls": [
                    "typing.Type"
                ]
            }
        },
        "ListOfProviders.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classes": [
                    "tuple[]"
                ]
            }
        },
        "ClassProviderList.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classes": [
                    "tuple[]"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/modules/__init__.py": {},
    "gamenight-master/src/gamenight/app/repository/game.py": {
        "_parse_params_to_query": {
            "name": "_parse_params_to_query",
            "location": 95,
            "return": [],
            "arguments": {
                "params": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "str"
                ]
            }
        },
        "_handle_name_param": {
            "name": "_handle_name_param",
            "location": 108,
            "return": [
                "list[]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_handle_description_param": {
            "name": "_handle_description_param",
            "location": 114,
            "return": [
                "list[]"
            ],
            "arguments": {
                "descript": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "_make_like": {
            "name": "_make_like",
            "location": 121,
            "return": [
                "str"
            ],
            "arguments": {
                "param": [
                    "str"
                ]
            }
        },
        "_handle_age": {
            "name": "_handle_age",
            "location": 131,
            "return": [
                "list[]",
                "list[bool]"
            ],
            "arguments": {
                "ages": []
            }
        },
        "_handle_players": {
            "name": "_handle_players",
            "location": 145,
            "return": [
                "list[]",
                "list[bool]"
            ],
            "arguments": {
                "players": []
            }
        },
        "_handle_tags": {
            "name": "_handle_tags",
            "location": 157,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tags": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_last_seen": {
            "name": "_last_seen",
            "location": 165,
            "return": [
                "list[]",
                "list[bool]"
            ],
            "arguments": {
                "id": [
                    "int"
                ]
            }
        },
        "SQLAGameRepo.fetch": {
            "name": "fetch",
            "location": 15,
            "return": [
                "str",
                "dict[, ]",
                "dict[str, typing.Any]",
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "SQLAGameRepo.add": {
            "name": "add",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": []
            }
        },
        "SQLAGameRepo.remove": {
            "name": "remove",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": [
                    "None"
                ]
            }
        },
        "SQLAGameRepo.by_name": {
            "name": "by_name",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "SQLAGameRepo.search": {
            "name": "search",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "params": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "SQLAGameRepo.configure": {
            "name": "configure",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "SQLAGameRepo._find_or_create_tag": {
            "name": "_find_or_create_tag",
            "location": 83,
            "return": [
                "tuple[typing.Union[typing.Type,typing.Type]]",
                "str",
                "typing.Final",
                "list[str]",
                "GameTag"
            ],
            "arguments": {
                "name": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/repository/uow.py": {
        "_attach_repo": {
            "name": "_attach_repo",
            "location": 8,
            "return": [],
            "arguments": {
                "repo": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "SQLAUnitOfWork.open": {
            "name": "open",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLAUnitOfWork.close": {
            "name": "close",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLAUnitOfWork.commit": {
            "name": "commit",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLAUnitOfWork.rollback": {
            "name": "rollback",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLAUnitOfWorkManager.start": {
            "name": "start",
            "location": 32,
            "return": [
                "SQLAUnitOfWork"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLAUnitOfWorkManager.configure": {
            "name": "configure",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "float"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/repository/__init__.py": {},
    "gamenight-master/src/gamenight/app/serialization/game.py": {
        "GameSearchParamsSchema.make_obj": {
            "name": "make_obj",
            "location": 18,
            "return": [
                "GameSearchParams"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "list[]",
                    "bytes"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/serialization/helpers.py": {
        "_unpack_for_serialization": {
            "name": "_unpack_for_serialization",
            "location": 13,
            "return": [
                "tuple[None]"
            ],
            "arguments": {
                "resp": []
            }
        },
        "serialize_with": {
            "name": "serialize_with",
            "location": 20,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "f": [
                    "None",
                    "typing.Iterable[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "serialize_with.wrapper": {
            "name": "wrapper",
            "location": 28,
            "return": [
                "Response",
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "gamenight-master/src/gamenight/app/serialization/remote.py": {},
    "gamenight-master/src/gamenight/app/serialization/__init__.py": {},
    "gamenight-master/src/gamenight/app/services/game_importer.py": {
        "BoardGameGeekSearch.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "str",
                    "float"
                ]
            }
        },
        "BoardGameGeekSearch.search": {
            "name": "search",
            "location": 18,
            "return": [
                "list[]",
                "list[RemoteGame]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str"
                ]
            }
        },
        "BoardGameGeekSearch.retrieve": {
            "name": "retrieve",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "None"
                ]
            }
        },
        "BoardGameGeekSearch._convert_to_game": {
            "name": "_convert_to_game",
            "location": 27,
            "return": [
                "Game"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "typing.NamedTuple",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/app/services/__init__.py": {},
    "gamenight-master/src/gamenight/cli/group.py": {
        "app_factory": {
            "name": "app_factory",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "script_info": [
                    "str",
                    "bytes",
                    "None"
                ]
            }
        },
        "set_config": {
            "name": "set_config",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str"
                ],
                "param": [
                    "bool",
                    "list[]",
                    "tuple[str]"
                ],
                "value": [
                    "bool",
                    "str"
                ]
            }
        },
        "set_instance_path": {
            "name": "set_instance_path",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "param": [
                    "tuple[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "bool",
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "get_version": {
            "name": "get_version",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "param": [
                    "str",
                    "tuple[str]"
                ],
                "value": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "gamenight": {
            "name": "gamenight",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "shell": {
            "name": "shell",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "gamenight-master/src/gamenight/cli/__init__.py": {},
    "gamenight-master/src/gamenight/core/__init__.py": {},
    "gamenight-master/src/gamenight/core/entities/game.py": {},
    "gamenight-master/src/gamenight/core/entities/__init__.py": {},
    "gamenight-master/src/gamenight/core/importer/base.py": {
        "GameImporter.import_game": {
            "name": "import_game",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bool",
                    "float",
                    "None"
                ]
            }
        },
        "RemoteGameSearch.search": {
            "name": "search",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "int",
                    "None",
                    "dict[, ]",
                    "str",
                    "list[]",
                    "tuple[]"
                ]
            }
        },
        "RemoteGameSearch.retrieve": {
            "name": "retrieve",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bool",
                    "float",
                    "None"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/importer/importer.py": {
        "DefaultGameImporter.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uowm": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "None"
                ],
                "search": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "None"
                ]
            }
        },
        "DefaultGameImporter.import_game": {
            "name": "import_game",
            "location": 17,
            "return": [
                "dict[str, typing.Type]",
                "list[]",
                "str",
                "list[list[str]]",
                "dict[str, typing.Union[typing.Any,int,str]]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "typing.Pattern",
                    "None"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/importer/__init__.py": {},
    "gamenight-master/src/gamenight/core/repository/base.py": {
        "Repo.fetch": {
            "name": "fetch",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bool",
                    "float",
                    "None",
                    "list[str]"
                ]
            }
        },
        "Repo.add": {
            "name": "add",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": [
                    "str",
                    "list[]",
                    "list[dict[str, typing.Any]]",
                    "dict[, ]"
                ]
            }
        },
        "Repo.remove": {
            "name": "remove",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": [
                    "list[dict[str, typing.Any]]",
                    "dict[, ]",
                    "bool",
                    "str"
                ]
            }
        },
        "Repo.configure": {
            "name": "configure",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/repository/game.py": {
        "GameRepo.by_name": {
            "name": "by_name",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/repository/mixins.py": {
        "Searchable.search": {
            "name": "search",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "int",
                    "str",
                    "list[int]",
                    "list[str]",
                    "bytes"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/repository/uow.py": {
        "UnitOfWork.commit": {
            "name": "commit",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.rollback": {
            "name": "rollback",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.open": {
            "name": "open",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.close": {
            "name": "close",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.__enter__": {
            "name": "__enter__",
            "location": 26,
            "return": [
                "UnitOfWork"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWork.__exit__": {
            "name": "__exit__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "BaseException",
                    "bool",
                    "typing.Callable[str, typing.Any]",
                    "dict[str, typing.Any]"
                ],
                "value": [
                    "typing.Type",
                    "None",
                    "BaseException",
                    "bool",
                    "typing.Callable[str, typing.Any]",
                    "dict[str, typing.Any]"
                ],
                "traceback": [
                    "typing.Type",
                    "None",
                    "BaseException",
                    "bool",
                    "typing.Callable[str, typing.Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "UnitOfWork.games": {
            "name": "games",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWorkManager.start": {
            "name": "start",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnitOfWorkManager.configure": {
            "name": "configure",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "gamenight-master/src/gamenight/core/repository/__init__.py": {},
    "gamenight-master/tests/conftest.py": {}
}
{
    "git-reviewers-master/setup.py": {},
    "git-reviewers-master/git_reviewers/reviewers.py": {
        "show_reviewers": {
            "name": "show_reviewers",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "reviewer_list": [
                    "list[str]",
                    "list[list[str]]"
                ],
                "copy_clipboard": [
                    "list[tuple[typing.Union[str,str]]]",
                    "typing.Sequence[dict[, ]]",
                    "list[]",
                    "list[str]",
                    "typing.Iterator",
                    "bool"
                ]
            }
        },
        "get_reviewers": {
            "name": "get_reviewers",
            "location": 188,
            "return": [
                "list[int]",
                "list[str]",
                "dict[str, list[str]]",
                "dict[str, str]",
                "list[]",
                "str"
            ],
            "arguments": {
                "config": [
                    "dict[, ]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "FindReviewers.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "FindReviewers.get_reviewers": {
            "name": "get_reviewers",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FindReviewers.run_command": {
            "name": "run_command",
            "location": 33,
            "return": [
                "list[str]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "FindReviewers.extract_username_from_email": {
            "name": "extract_username_from_email",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str"
                ]
            }
        },
        "FindReviewers.check_phabricator_activated": {
            "name": "check_phabricator_activated",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "username": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "FindReviewers.parse_phabricator": {
            "name": "parse_phabricator",
            "location": 61,
            "return": [
                "int",
                "str",
                "typing.Iterable[C]",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ],
                "process": []
            }
        },
        "FindReviewers.filter_phabricator_activated": {
            "name": "filter_phabricator_activated",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "all_users": [
                    "str"
                ]
            }
        },
        "FindFileLogReviewers.extract_username_from_shortlog": {
            "name": "extract_username_from_shortlog",
            "location": 97,
            "return": [
                "tuple[typing.Union[int,float,list[],list[typing.Callable[[], bool]],tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal]]]]"
            ],
            "arguments": {
                "self": [],
                "shortlog": [
                    "str"
                ]
            }
        },
        "FindFileLogReviewers.get_log_reviewers_from_file": {
            "name": "get_log_reviewers_from_file",
            "location": 106,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "file_paths": []
            }
        },
        "FindFileLogReviewers.get_changed_files": {
            "name": "get_changed_files",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FindFileLogReviewers.get_reviewers": {
            "name": "get_reviewers",
            "location": 127,
            "return": [
                "str",
                "dict[str, tuple[typing.Union[str,bool]]]",
                "list[str]",
                "dict[, ]",
                "dict[int, typing.Union[typing.Any,typing.Any,typing.Any,typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FindLogReviewers.get_changed_files": {
            "name": "get_changed_files",
            "location": 135,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FindHistoricalReviewers.get_reviewers": {
            "name": "get_reviewers",
            "location": 144,
            "return": [
                "str",
                "dict[str, typing.Union[int,str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FindArcCommitReviewers.get_log_reviewers_from_file": {
            "name": "get_log_reviewers_from_file",
            "location": 154,
            "return": [
                "dict[, ]",
                "Counter"
            ],
            "arguments": {
                "self": [],
                "file_paths": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.default_global_json": {
            "name": "default_global_json",
            "location": 233,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Config.read_configs": {
            "name": "read_configs",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Config.read_from_json": {
            "name": "read_from_json",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args_json": [
                    "str"
                ]
            }
        },
        "Config.read_from_args": {
            "name": "read_from_args",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        }
    },
    "git-reviewers-master/git_reviewers/__init__.py": {},
    "git-reviewers-master/git_reviewers/tests/fixtures.py": {},
    "git-reviewers-master/git_reviewers/tests/test.py": {
        "TestFindReviewers.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindReviewers.tearDown": {
            "name": "tearDown",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindReviewers.test_get_reviewers": {
            "name": "test_get_reviewers",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindReviewers.test_run_command": {
            "name": "test_run_command",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_run": [
                    "str",
                    "int"
                ]
            }
        },
        "TestFindReviewers.test_run_command_empty_response": {
            "name": "test_run_command_empty_response",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_run": [
                    "str",
                    "int"
                ]
            }
        },
        "TestFindReviewers.check_extract_username": {
            "name": "check_extract_username",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "bool",
                    "set[str]",
                    "typing.Sequence[int]",
                    "list[tuple[typing.Union[int,int]]]"
                ],
                "expected_user": []
            }
        },
        "TestFindReviewers.test_extract_username_from_generic_email": {
            "name": "test_extract_username_from_generic_email",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindReviewers.test_extract_uber_username_from_email": {
            "name": "test_extract_uber_username_from_email",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindReviewers.test_check_phabricator_activated": {
            "name": "test_check_phabricator_activated",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_popen": []
            }
        },
        "TestFindReviewers.test_check_phabricator_activated_none": {
            "name": "test_check_phabricator_activated_none",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_popen": []
            }
        },
        "TestFindReviewers.test_filter_phabricator_activated": {
            "name": "test_filter_phabricator_activated",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.setUp": {
            "name": "setUp",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.check_extract_username_from_shortlog": {
            "name": "check_extract_username_from_shortlog",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shortlog": [
                    "str",
                    "dict[, ]",
                    "bytes",
                    "int"
                ],
                "email": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "weight": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestFindLogReviewers.test_gets_generic_emails": {
            "name": "test_gets_generic_emails",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.test_gets_uber_emails": {
            "name": "test_gets_uber_emails",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.test_gets_user_weight": {
            "name": "test_gets_user_weight",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.test_get_changed_files": {
            "name": "test_get_changed_files",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindLogReviewers.test_gets_reviewers": {
            "name": "test_gets_reviewers",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_run": []
            }
        },
        "TestLogReviewers.setUp": {
            "name": "setUp",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogReviewers.test_get_changed_files": {
            "name": "test_get_changed_files",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHistoricalReviewers.setUp": {
            "name": "setUp",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHistoricalReviewers.test_get_reviewers": {
            "name": "test_get_reviewers",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindArcCommitReviewers.setUp": {
            "name": "setUp",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindArcCommitReviewers.test_no_reviewers": {
            "name": "test_no_reviewers",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindArcCommitReviewers.test_reviewers": {
            "name": "test_reviewers",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindArcCommitReviewers.test_multiple_reviews": {
            "name": "test_multiple_reviews",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestShowReviewers.test_show_reviewers": {
            "name": "test_show_reviewers",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestShowReviewers.test_copy_reviewers": {
            "name": "test_copy_reviewers",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_popen": []
            }
        },
        "TestShowReviewers.test_copy_reviewers_no_pbcopy": {
            "name": "test_copy_reviewers_no_pbcopy",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_popen": []
            }
        },
        "TestGetReviewers.test_verbose_reviewers": {
            "name": "test_verbose_reviewers",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": [
                    "tuple[typing.Union[str,M]]"
                ]
            }
        },
        "TestConfig.setUp": {
            "name": "setUp",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.tearDown": {
            "name": "tearDown",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_default_global_json": {
            "name": "test_default_global_json",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_read_configs_args": {
            "name": "test_read_configs_args",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_read_configs_copy": {
            "name": "test_read_configs_copy",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_read_json": {
            "name": "test_read_json",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_read_malformed_json": {
            "name": "test_read_malformed_json",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_read_unusable": {
            "name": "test_read_unusable",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMain.test_main": {
            "name": "test_main",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestMain.test_version": {
            "name": "test_version",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestMain.test_ignore_reviewers": {
            "name": "test_ignore_reviewers",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestMain.test_phabricator_disabled_reviewers": {
            "name": "test_phabricator_disabled_reviewers",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestFindReviewers.test_filter_phabricator_activated.mock_check": {
            "name": "mock_check",
            "location": 73,
            "return": [
                "int"
            ],
            "arguments": {
                "u": []
            }
        },
        "TestFindReviewers.test_filter_phabricator_activated.mock_parse": {
            "name": "mock_parse",
            "location": 79,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "u": [],
                "p": []
            }
        }
    },
    "git-reviewers-master/git_reviewers/tests/__init__.py": {}
}
{
    "gql_py-master/setup.py": {},
    "gql_py-master/gql_py/gql.py": {
        "normalise_query": {
            "name": "normalise_query",
            "location": 15,
            "return": [],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        },
        "to_camelcase": {
            "name": "to_camelcase",
            "location": 22,
            "return": [
                "dict[typing.Union[list[],str,int,bytes], typing.Union[typing.Type,list[]]]"
            ],
            "arguments": {
                "variables": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, set[str]]"
                ]
            }
        },
        "prepared_payload": {
            "name": "prepared_payload",
            "location": 41,
            "return": [
                "dict[typing.Text, typing.Union[str,list[dict[str, typing.Any]],list[],typing.OrderedDict,dict[, ]]]"
            ],
            "arguments": {}
        },
        "to_camelcase.convert": {
            "name": "convert",
            "location": 28,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "Gql.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Gql.generate_result": {
            "name": "generate_result",
            "location": 72,
            "return": [
                "GraphQLResponse"
            ],
            "arguments": {
                "self": [],
                "result": []
            }
        },
        "Gql.send": {
            "name": "send",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "gql_py-master/gql_py/__init__.py": {},
    "gql_py-master/tests/test_graphql_py.py": {
        "test_basic_object": {
            "name": "test_basic_object",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_headers_are_set": {
            "name": "test_headers_are_set",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_headers_are_set_during_object_creation": {
            "name": "test_headers_are_set_during_object_creation",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_good_formatted_data_is_sent": {
            "name": "test_good_formatted_data_is_sent",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_good_response": {
            "name": "test_good_response",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_response": {
            "name": "test_bad_response",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_camel_case": {
            "name": "test_to_camel_case",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "input": [
                    "str",
                    "typing.Type"
                ],
                "output": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "test_normalise_query": {
            "name": "test_normalise_query",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_query_exception_raised_with_bad_data": {
            "name": "test_query_exception_raised_with_bad_data",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "gql_py-master/tests/__init__.py": {}
}
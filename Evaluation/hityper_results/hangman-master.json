{
    "hangman-master/setup.py": {},
    "hangman-master/hangman/field.py": {
        "HangmanField.draw": {
            "name": "draw",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wrong_tries": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "hangman-master/hangman/game.py": {
        "Game.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.add_round": {
            "name": "add_round",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "played_round": [],
                "player": [
                    "int",
                    "str",
                    "None"
                ],
                "opponent": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "Game.get_winner": {
            "name": "get_winner",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hangman-master/hangman/main.py": {
        "start_game": {
            "name": "start_game",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "hangman-master/hangman/players.py": {
        "ComputerPlayer.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComputerPlayer.quess_new_word": {
            "name": "quess_new_word",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ComputerPlayer.should_change_turns": {
            "name": "should_change_turns",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HumanPlayer._validate_word": {
            "name": "_validate_word",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "int",
                    "list[typing.Callable[, ]]",
                    "str"
                ]
            }
        },
        "HumanPlayer.select_other_player": {
            "name": "select_other_player",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HumanPlayer.quess_new_word": {
            "name": "quess_new_word",
            "location": 51,
            "return": [
                "str",
                "None",
                "list[int]",
                "dict[str, typing.Any]",
                "dict[, ]",
                "frozenset"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hangman-master/hangman/round.py": {
        "Round.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "Round.is_word_solved": {
            "name": "is_word_solved",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Round.is_lost": {
            "name": "is_lost",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Round.is_finished": {
            "name": "is_finished",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Round.try_letter": {
            "name": "try_letter",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "letter": [
                    "float",
                    "list[]"
                ]
            }
        },
        "Round.mask_word": {
            "name": "mask_word",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Round.draw_field": {
            "name": "draw_field",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Round.draw_result": {
            "name": "draw_result",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hangman-master/hangman/__init__.py": {},
    "hangman-master/hangman/cli/__init__.py": {
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
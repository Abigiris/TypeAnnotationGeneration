{
    "home-assistant-cli-master/setup.py": {
        "read": {
            "name": "read",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "find_version": {
            "name": "find_version",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "get_git_commit_datetime": {
            "name": "get_git_commit_datetime",
            "location": 33,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "home-assistant-cli-master/homeassistant_cli/autocompletion.py": {
        "_init_ctx": {
            "name": "_init_ctx",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "services": {
            "name": "services",
            "location": 45,
            "return": [
                "list[tuple[str]]"
            ],
            "arguments": {
                "ctx": [],
                "args": [],
                "incomplete": [
                    "str"
                ]
            }
        },
        "entities": {
            "name": "entities",
            "location": 76,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ],
                "args": [],
                "incomplete": [
                    "str"
                ]
            }
        },
        "events": {
            "name": "events",
            "location": 100,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ],
                "args": [],
                "incomplete": [
                    "str"
                ]
            }
        },
        "table_formats": {
            "name": "table_formats",
            "location": 123,
            "return": [
                "list[tuple[typing.Text]]"
            ],
            "arguments": {
                "ctx": [],
                "args": [],
                "incomplete": [
                    "str"
                ]
            }
        },
        "api_methods": {
            "name": "api_methods",
            "location": 160,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "ctx": [],
                "args": [],
                "incomplete": [
                    "bool"
                ]
            }
        },
        "wsapi_methods": {
            "name": "wsapi_methods",
            "location": 178,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "ctx": [],
                "args": [],
                "incomplete": [
                    "bool"
                ]
            }
        },
        "_quoteifneeded": {
            "name": "_quoteifneeded",
            "location": 196,
            "return": [
                "str",
                "tuple['cirq.Qid']"
            ],
            "arguments": {
                "val": [
                    "str",
                    "tuple['cirq.Qid']"
                ]
            }
        },
        "areas": {
            "name": "areas",
            "location": 203,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "ctx": [
                    "float",
                    "bool"
                ],
                "args": [],
                "incomplete": [
                    "str"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/cli.py": {
        "run": {
            "name": "run",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_default_token": {
            "name": "_default_token",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "None"
                ],
                "verbose": [
                    "bool",
                    "list[dict[, ]]"
                ],
                "server": [
                    "str",
                    "bool",
                    "None"
                ],
                "token": [
                    "str",
                    "None",
                    "bool"
                ],
                "password": [
                    "bool",
                    "str",
                    "None"
                ],
                "output": [
                    "str",
                    "None",
                    "tuple[str]",
                    "typing.Callable[str, str]"
                ],
                "timeout": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[str,int]]]"
                ],
                "debug": [
                    "bool",
                    "str"
                ],
                "insecure": [
                    "bool",
                    "str",
                    "None"
                ],
                "showexceptions": [
                    "bool",
                    "str",
                    "None"
                ],
                "cert": [
                    "bool",
                    "str",
                    "None"
                ],
                "columns": [
                    "str",
                    "None",
                    "int"
                ],
                "no_headers": [
                    "bool",
                    "str",
                    "None"
                ],
                "table_format": [
                    "str"
                ],
                "sort_by": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "HomeAssistantCli.list_commands": {
            "name": "list_commands",
            "location": 68,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "bool"
                ]
            }
        },
        "HomeAssistantCli.get_command": {
            "name": "get_command",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "str",
                    "tuple[]"
                ],
                "cmd_name": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/config.py": {
        "_locate_ha": {
            "name": "_locate_ha",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "resolve_server": {
            "name": "resolve_server",
            "location": 76,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "_ZeroconfListener.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ZeroconfListener.remove_service": {
            "name": "remove_service",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "_zeroconf": [],
                "_type": [],
                "name": []
            }
        },
        "_ZeroconfListener.add_service": {
            "name": "add_service",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "_zeroconf": [],
                "_type": [],
                "name": []
            }
        },
        "Configuration.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.echo": {
            "name": "echo",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Configuration.log": {
            "name": "log",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Configuration.vlog": {
            "name": "vlog",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Configuration.__repr__": {
            "name": "__repr__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.resolve_server": {
            "name": "resolve_server",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.auto_output": {
            "name": "auto_output",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "auto_output": []
            }
        },
        "Configuration.yaml": {
            "name": "yaml",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configuration.yamlload": {
            "name": "yamlload",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Configuration.yamldump": {
            "name": "yamldump",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/const.py": {},
    "home-assistant-cli-master/homeassistant_cli/exceptions.py": {},
    "home-assistant-cli-master/homeassistant_cli/hassconst.py": {},
    "home-assistant-cli-master/homeassistant_cli/helper.py": {
        "to_attributes": {
            "name": "to_attributes",
            "location": 19,
            "return": [
                "dict[, ]",
                "dict[str, str]",
                "str"
            ],
            "arguments": {
                "entry": [
                    "str",
                    "None",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "to_tuples": {
            "name": "to_tuples",
            "location": 34,
            "return": [
                "list[]"
            ],
            "arguments": {
                "entry": [
                    "str",
                    "None",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "raw_format_output": {
            "name": "raw_format_output",
            "location": 49,
            "return": [
                "str",
                "dict[str, str]",
                "typing.Match",
                "None",
                "dict[str, typing.Union[int,str]]"
            ],
            "arguments": {
                "output": [
                    "int",
                    "str",
                    "None",
                    "tuple[typing.Union[int,int]]"
                ],
                "data": [
                    "str"
                ],
                "yamlparser": [
                    "str",
                    "None",
                    "bytes"
                ],
                "columns": [
                    "list[str]",
                    "list[dict[str, typing.Any]]",
                    "bytes"
                ],
                "no_headers": [
                    "bool"
                ],
                "table_format": [
                    "typing.Text"
                ],
                "sort_by": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "bytes",
                    "typing.Sequence[typing.Any]",
                    "dict[typing.Any, list[]]"
                ]
            }
        },
        "_sort_table": {
            "name": "_sort_table",
            "location": 120,
            "return": [
                "list[]",
                "dict[, ]",
                "typing.Match",
                "dict[int, dict[str, typing.Any]]"
            ],
            "arguments": {
                "result": [
                    "list[]",
                    "dict[, ]",
                    "typing.Match",
                    "dict[int, dict[str, typing.Any]]"
                ],
                "sort_by": [
                    "str",
                    "dict[, ]",
                    "list[]",
                    "typing.Callable[, ]",
                    "typing.Type"
                ]
            }
        },
        "format_output": {
            "name": "format_output",
            "location": 134,
            "return": [],
            "arguments": {
                "ctx": [],
                "data": [
                    "list[]",
                    "None",
                    "list[dict[str, typing.Any]]",
                    "bool"
                ],
                "columns": [
                    "None",
                    "list[]",
                    "list[dict[str, typing.Any]]",
                    "bool"
                ]
            }
        },
        "debug_requests_on": {
            "name": "debug_requests_on",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "debug_requests_off": {
            "name": "debug_requests_off",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "debug_requests": {
            "name": "debug_requests",
            "location": 178,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "_sort_table._internal_sort": {
            "name": "_internal_sort",
            "location": 126,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "row": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/remote.py": {
        "restapi": {
            "name": "restapi",
            "location": 46,
            "return": [],
            "arguments": {
                "ctx": [
                    "int",
                    "None",
                    "str",
                    "Exception"
                ],
                "method": [
                    "str",
                    "None",
                    "bool"
                ],
                "path": [
                    "str",
                    "bool",
                    "list[int]"
                ],
                "data": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "wsapi": {
            "name": "wsapi",
            "location": 91,
            "return": [
                "bool"
            ],
            "arguments": {
                "ctx": [],
                "frame": [],
                "callback": [
                    "None"
                ]
            }
        },
        "get_areas": {
            "name": "get_areas",
            "location": 159,
            "return": [
                "str",
                "dict[str, list[str]]",
                "dict[str, str]",
                "list[dict[str, typing.Any]]",
                "list[]",
                "int",
                "dict[, ]"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        },
        "find_area": {
            "name": "find_area",
            "location": 170,
            "return": [
                "list[]",
                "typing.Type",
                "str",
                "int",
                "set[str]"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int"
                ],
                "id_or_name": [
                    "tuple[typing.Union[str,str,str]]",
                    "list[int]",
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "create_area": {
            "name": "create_area",
            "location": 181,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "None"
                ],
                "name": [
                    "str",
                    "tuple[typing.Union[int,str]]"
                ]
            }
        },
        "delete_area": {
            "name": "delete_area",
            "location": 188,
            "return": [],
            "arguments": {
                "ctx": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "bool",
                    "Exception"
                ],
                "area_id": [
                    "str",
                    "None"
                ]
            }
        },
        "rename_area": {
            "name": "rename_area",
            "location": 195,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "None",
                    "int"
                ],
                "area_id": [
                    "str",
                    "None"
                ],
                "new_name": [
                    "str",
                    "None"
                ]
            }
        },
        "rename_entity": {
            "name": "rename_entity",
            "location": 208,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "entity_id": [
                    "str",
                    "typing.Callable[str, str]",
                    "int",
                    "None",
                    "bytes"
                ],
                "new_id": [
                    "str",
                    "bytes",
                    "int"
                ],
                "new_name": [
                    "tuple[str]",
                    "str",
                    "None"
                ]
            }
        },
        "rename_device": {
            "name": "rename_device",
            "location": 228,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "None",
                    "int"
                ],
                "device_id": [
                    "str",
                    "None"
                ],
                "new_name": [
                    "str",
                    "None"
                ]
            }
        },
        "assign_area": {
            "name": "assign_area",
            "location": 241,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "None",
                    "typing.BinaryIO",
                    "int"
                ],
                "device_id": [
                    "str",
                    "int",
                    "None"
                ],
                "area_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "get_health": {
            "name": "get_health",
            "location": 254,
            "return": [
                "dict[str, dict[, ]]",
                "dict[str, dict[str, typing.Any]]"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get_devices": {
            "name": "get_devices",
            "location": 263,
            "return": [
                "list[]",
                "dict[str, typing.Sequence[typing.Any]]",
                "typing.Type",
                "dict[str, list[int]]",
                "dict[str, str]",
                "typing.Literal"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "get_entities": {
            "name": "get_entities",
            "location": 274,
            "return": [
                "list[]",
                "dict[str, typing.Sequence[typing.Any]]",
                "typing.Type",
                "dict[str, list[int]]",
                "dict[str, str]",
                "typing.Literal"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str"
                ]
            }
        },
        "get_entity": {
            "name": "get_entity",
            "location": 285,
            "return": [
                "str"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int"
                ],
                "entity_id": [
                    "str"
                ]
            }
        },
        "validate_api": {
            "name": "validate_api",
            "location": 294,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "get_info": {
            "name": "get_info",
            "location": 311,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get_events": {
            "name": "get_events",
            "location": 327,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "get_history": {
            "name": "get_history",
            "location": 340,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool"
                ],
                "entities": [
                    "str"
                ],
                "start_time": [],
                "end_time": []
            }
        },
        "get_states": {
            "name": "get_states",
            "location": 373,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "get_raw_error_log": {
            "name": "get_raw_error_log",
            "location": 387,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 400,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "get_state": {
            "name": "get_state",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "bytes"
                ],
                "entity_id": [
                    "bool",
                    "str"
                ]
            }
        },
        "remove_state": {
            "name": "remove_state",
            "location": 440,
            "return": [
                "bool"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ],
                "entity_id": [
                    "bool"
                ]
            }
        },
        "set_state": {
            "name": "set_state",
            "location": 463,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "bytes",
                    "int"
                ],
                "entity_id": [
                    "bytes",
                    "int",
                    "str"
                ],
                "data": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "render_template": {
            "name": "render_template",
            "location": 487,
            "return": [],
            "arguments": {
                "ctx": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "template": [
                    "str",
                    "bool",
                    "list[str]",
                    "bytes"
                ],
                "variables": [
                    "str",
                    "bool",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "get_event_listeners": {
            "name": "get_event_listeners",
            "location": 505,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "fire_event": {
            "name": "fire_event",
            "location": 519,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "int"
                ],
                "event_type": [
                    "str",
                    "int"
                ],
                "data": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "call_service": {
            "name": "call_service",
            "location": 539,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "domain": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "service": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "service_data": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "get_services": {
            "name": "get_services",
            "location": 564,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "APIStatus.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONEncoder.default": {
            "name": "default",
            "location": 144,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "o": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/yaml.py": {
        "yaml": {
            "name": "yaml",
            "location": 9,
            "return": [
                "YAML"
            ],
            "arguments": {}
        },
        "loadyaml": {
            "name": "loadyaml",
            "location": 17,
            "return": [],
            "arguments": {
                "yamlp": [],
                "source": [
                    "str"
                ]
            }
        },
        "dumpyaml": {
            "name": "dumpyaml",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "yamlp": [
                    "str",
                    "dict[, ]",
                    "typing.DefaultDict"
                ],
                "data": [
                    "dict[, ]",
                    "str",
                    "bytes",
                    "int",
                    "typing.BinaryIO",
                    "typing.Hashable"
                ],
                "stream": [
                    "None",
                    "typing.IO",
                    "bytes",
                    "str",
                    "typing.TextIO",
                    "typing.BinaryIO",
                    "dict[str, typing.Any]",
                    "bytearray"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/__init__.py": {},
    "home-assistant-cli-master/homeassistant_cli/plugins/area.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "listcmd": {
            "name": "listcmd",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "areafilter": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "names": [
                    "str"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "names": [
                    "str",
                    "tuple[]"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "oldname": [
                    "str"
                ],
                "newname": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/completion.py": {
        "cli": {
            "name": "cli",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dump_script": {
            "name": "dump_script",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "shell": [
                    "str"
                ]
            }
        },
        "bash": {
            "name": "bash",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "zsh": {
            "name": "zsh",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/config.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "full": {
            "name": "full",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "components": {
            "name": "components",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "whitelist_dirs": {
            "name": "whitelist_dirs",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "release": {
            "name": "release",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/device.py": {
        "cli": {
            "name": "cli",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "listcmd": {
            "name": "listcmd",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "devicefilter": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "assign": {
            "name": "assign",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "area_id_or_name": [
                    "str",
                    "None",
                    "tuple[str]"
                ],
                "names": [
                    "list[str]",
                    "tuple[str]"
                ],
                "match": [
                    "None",
                    "str",
                    "tuple[int]"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "device_id_or_name": [
                    "str",
                    "bool",
                    "None",
                    "set[int]",
                    "list[str]"
                ],
                "new_name": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/discover.py": {
        "cli": {
            "name": "cli",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int"
                ],
                "raw": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/entity.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "listcmd": {
            "name": "listcmd",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entityfilter": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "oldid": [
                    "str"
                ],
                "newid": [
                    "str",
                    "None"
                ],
                "name": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/event.py": {
        "cli": {
            "name": "cli",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "fire": {
            "name": "fire",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "event": [
                    "str",
                    "typing.Iterable[]",
                    "bytes"
                ],
                "json": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "watch": {
            "name": "watch",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "event_type": [
                    "str",
                    "bool",
                    "list[]",
                    "typing.Type"
                ]
            }
        },
        "watch._msghandler": {
            "name": "_msghandler",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/ha.py": {
        "cli": {
            "name": "cli",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "_report": {
            "name": "_report",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "list[dict[str, object]]",
                    "dict[, ]"
                ],
                "cmd": [
                    "str",
                    "int",
                    "bytes"
                ],
                "method": [
                    "str",
                    "int",
                    "bytes"
                ],
                "response": []
            }
        },
        "_handle": {
            "name": "_handle",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "method": [],
                "httpmethod": [
                    "typing.Text"
                ],
                "raw": [
                    "bool"
                ]
            }
        },
        "_handle_raw": {
            "name": "_handle_raw",
            "location": 57,
            "return": [],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "method": [],
                "httpmethod": [
                    "typing.Text"
                ]
            }
        },
        "supervisor": {
            "name": "supervisor",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_ping": {
            "name": "supervisor_ping",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_info": {
            "name": "supervisor_info",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "supervisor_update": {
            "name": "supervisor_update",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_options": {
            "name": "supervisor_options",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_reload": {
            "name": "supervisor_reload",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_logs": {
            "name": "supervisor_logs",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_repair": {
            "name": "supervisor_repair",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "supervisor_stats": {
            "name": "supervisor_stats",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "snapshot": {
            "name": "snapshot",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "snapshot_reload": {
            "name": "snapshot_reload",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "snapshot_shutdown": {
            "name": "snapshot_shutdown",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host": {
            "name": "host",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host_reboot": {
            "name": "host_reboot",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host_reload": {
            "name": "host_reload",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host_shutdown": {
            "name": "host_shutdown",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host_info": {
            "name": "host_info",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "host_options": {
            "name": "host_options",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "host_services": {
            "name": "host_services",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "os": {
            "name": "os",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "os_info": {
            "name": "os_info",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "os_update": {
            "name": "os_update",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "hardware": {
            "name": "hardware",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "hardware_info": {
            "name": "hardware_info",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "hardware_audio": {
            "name": "hardware_audio",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "hardware_trigger": {
            "name": "hardware_trigger",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "addons": {
            "name": "addons",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "addons_all": {
            "name": "addons_all",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        },
        "addons_reload": {
            "name": "addons_reload",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core": {
            "name": "core",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_info": {
            "name": "core_info",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "core_update": {
            "name": "core_update",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_logs": {
            "name": "core_logs",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_restart": {
            "name": "core_restart",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_check": {
            "name": "core_check",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "core_start": {
            "name": "core_start",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        },
        "core_stop": {
            "name": "core_stop",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_rebuild": {
            "name": "core_rebuild",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_options": {
            "name": "core_options",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_websocket": {
            "name": "core_websocket",
            "location": 388,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "core_stats": {
            "name": "core_stats",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dns": {
            "name": "dns",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dns_info": {
            "name": "dns_info",
            "location": 412,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "dns_options": {
            "name": "dns_options",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dns_restart": {
            "name": "dns_restart",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dns_logs": {
            "name": "dns_logs",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "dns_stats": {
            "name": "dns_stats",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "multicast": {
            "name": "multicast",
            "location": 450,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "multicast_info": {
            "name": "multicast_info",
            "location": 457,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "multicast_update": {
            "name": "multicast_update",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "multicast_restart": {
            "name": "multicast_restart",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "multicast_logs": {
            "name": "multicast_logs",
            "location": 491,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "multicast_stats": {
            "name": "multicast_stats",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ha_cli": {
            "name": "ha_cli",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ha_info": {
            "name": "ha_info",
            "location": 512,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "float"
                ]
            }
        },
        "ha_update": {
            "name": "ha_update",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ha_restart": {
            "name": "ha_restart",
            "location": 536,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ha_logs": {
            "name": "ha_logs",
            "location": 546,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ha_stats": {
            "name": "ha_stats",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/info.py": {
        "cli": {
            "name": "cli",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/map.py": {
        "cli": {
            "name": "cli",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "service": [
                    "str",
                    "None"
                ],
                "entity": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/raw.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "_report": {
            "name": "_report",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "list[dict[str, object]]",
                    "dict[, ]"
                ],
                "cmd": [
                    "str",
                    "int",
                    "bytes"
                ],
                "method": [
                    "str",
                    "int",
                    "bytes"
                ],
                "response": []
            }
        },
        "get": {
            "name": "get",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "method": []
            }
        },
        "post": {
            "name": "post",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "method": [],
                "json": [
                    "str"
                ]
            }
        },
        "websocket": {
            "name": "websocket",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "wstype": [],
                "json": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/service.py": {
        "cli": {
            "name": "cli",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "list_cmd": {
            "name": "list_cmd",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "servicefilter": [
                    "str",
                    "tuple[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "call": {
            "name": "call",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "service": [
                    "str"
                ],
                "arguments": [
                    "bool",
                    "str",
                    "Exception"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/state.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get": {
            "name": "get",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entity": [
                    "str",
                    "None",
                    "bool",
                    "set[str]"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entity": []
            }
        },
        "list": {
            "name": "list",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entityfilter": [
                    "str",
                    "tuple[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entity": [
                    "str"
                ],
                "newstate": [
                    "int",
                    "None",
                    "list[]",
                    "list[dict[str, typing.Any]]",
                    "str"
                ],
                "attributes": [
                    "str",
                    "None",
                    "bool"
                ],
                "merge": [
                    "bool",
                    "list[]"
                ],
                "json": [
                    "str",
                    "bool"
                ]
            }
        },
        "_report": {
            "name": "_report",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "result": [],
                "action": [
                    "str"
                ]
            }
        },
        "_homeassistant_cmd": {
            "name": "_homeassistant_cmd",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entities": [
                    "str",
                    "TypeError"
                ],
                "cmd": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "toggle": {
            "name": "toggle",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entities": [
                    "str"
                ]
            }
        },
        "off_cmd": {
            "name": "off_cmd",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entities": [
                    "str"
                ]
            }
        },
        "on_cmd": {
            "name": "on_cmd",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entities": [
                    "str"
                ]
            }
        },
        "history": {
            "name": "history",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "entities": [
                    "str"
                ],
                "since": [
                    "int",
                    "None",
                    "str"
                ],
                "end": [
                    "str",
                    "int",
                    "float"
                ]
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/system.py": {
        "cli": {
            "name": "cli",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "log": {
            "name": "log",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "typing.Sequence[str]",
                    "int"
                ]
            }
        },
        "health": {
            "name": "health",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "home-assistant-cli-master/homeassistant_cli/plugins/template.py": {
        "render": {
            "name": "render",
            "location": 16,
            "return": [
                "str",
                "list[dict[str, typing.Any]]",
                "typing.Generator[typing.Union[typing.Any,None,None]]",
                "list[str]",
                "dict[str, str]"
            ],
            "arguments": {
                "template_path": [
                    "str",
                    "typing.BinaryIO",
                    "None"
                ],
                "data": [
                    "str",
                    "dict[, ]",
                    "typing.BinaryIO"
                ],
                "strict": [
                    "bool"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "template": [],
                "datafile": [
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "local": [
                    "bool",
                    "str"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/conftest.py": {
        "generate_fixture": {
            "name": "generate_fixture",
            "location": 25,
            "return": [],
            "arguments": {
                "content": [
                    "str",
                    "int",
                    "bytes",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_inject_fixture": {
            "name": "_inject_fixture",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "someparam": [
                    "str"
                ]
            }
        },
        "_all_fixtures": {
            "name": "_all_fixtures",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_fixture.my_fixture": {
            "name": "my_fixture",
            "location": 30,
            "return": [],
            "arguments": {}
        }
    },
    "home-assistant-cli-master/tests/test_area.py": {
        "test_area_list": {
            "name": "test_area_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "default_areas": []
            }
        },
        "test_area_list_filter": {
            "name": "test_area_list_filter",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "default_areas": []
            }
        }
    },
    "home-assistant-cli-master/tests/test_completion.py": {
        "test_entity_completion": {
            "name": "test_entity_completion",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str"
                ]
            }
        },
        "test_service_completion": {
            "name": "test_service_completion",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services_text": [
                    "str",
                    "typing.Type",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "test_event_completion": {
            "name": "test_event_completion",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "default_events_text": [
                    "str",
                    "dict[, ]",
                    "None",
                    "typing.Type"
                ]
            }
        },
        "test_area_completion": {
            "name": "test_area_completion",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "default_events_text": [
                    "str",
                    "dict[, ]",
                    "None"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/test_defaults.py": {
        "test_defaults": {
            "name": "test_defaults",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "description": [
                    "str",
                    "list[tuple[typing.Union[str,str]]]",
                    "set[str]"
                ],
                "env": [
                    "str",
                    "list[]",
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, typing.Any]]"
                ],
                "expected_resolved_server": [
                    "str",
                    "int"
                ],
                "expected_server": [
                    "str",
                    "int",
                    "typing.Iterable[str]",
                    "None"
                ],
                "expected_token": [
                    "str",
                    "None",
                    "int"
                ],
                "expected_password": [
                    "str",
                    "None",
                    "bool",
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/test_device.py": {
        "test_device_list": {
            "name": "test_device_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "default_devices": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "default_areas": [
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_device_list_filter": {
            "name": "test_device_list_filter",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "default_devices": [
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "default_areas": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_device_assign": {
            "name": "test_device_assign",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "default_areas": [
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "default_devices": [
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/test_helper.py": {
        "test_to_attributes_multiples": {
            "name": "test_to_attributes_multiples",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_attributes_none": {
            "name": "test_to_attributes_none",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_tuples": {
            "name": "test_to_tuples",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_tuples_no_header": {
            "name": "test_to_tuples_no_header",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sorting_by_jsonpath": {
            "name": "test_sorting_by_jsonpath",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "home-assistant-cli-master/tests/test_info.py": {
        "ordered": {
            "name": "ordered",
            "location": 20,
            "return": [
                "list[]",
                "tuple[typing.Union[str,...]]",
                "None",
                "dict[, ]"
            ],
            "arguments": {
                "obj": [
                    "dict[, ]",
                    "tuple[typing.Union[str,...]]",
                    "None"
                ]
            }
        },
        "test_info_without_server_running": {
            "name": "test_info_without_server_running",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_info_json": {
            "name": "test_info_json",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_info_unauth": {
            "name": "test_info_unauth",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_info_yaml": {
            "name": "test_info_yaml",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "home-assistant-cli-master/tests/test_map.py": {
        "test_map_services": {
            "name": "test_map_services",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "service": [
                    "str",
                    "list[str]",
                    "None",
                    "dict[, ]"
                ],
                "url": [
                    "str"
                ],
                "default_entities": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/test_plugins.py": {
        "defaultplugins_fixture": {
            "name": "defaultplugins_fixture",
            "location": 31,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {}
        },
        "test_commands_match_expected": {
            "name": "test_commands_match_expected",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "defaultplugins_sorted": []
            }
        },
        "test_commands_loads": {
            "name": "test_commands_loads",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "plugin": []
            }
        },
        "test_commands_not_loads": {
            "name": "test_commands_not_loads",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "plugin": []
            }
        }
    },
    "home-assistant-cli-master/tests/test_raw.py": {
        "test_raw_get": {
            "name": "test_raw_get",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_raw_post": {
            "name": "test_raw_post",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_apimethod_completion": {
            "name": "test_apimethod_completion",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services": [
                    "list[str]",
                    "set[str]",
                    "str",
                    "list[bool]",
                    "bool"
                ]
            }
        },
        "test_raw_ws": {
            "name": "test_raw_ws",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_raw_ws_data": {
            "name": "test_raw_ws_data",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "home-assistant-cli-master/tests/test_service.py": {
        "test_service_list": {
            "name": "test_service_list",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services": [
                    "str"
                ]
            }
        },
        "test_service_filter": {
            "name": "test_service_filter",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "test_service_completion": {
            "name": "test_service_completion",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services": []
            }
        },
        "test_service_call": {
            "name": "test_service_call",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "default_services": [
                    "str",
                    "dict[str, tuple[typing.Union[str,str]]]",
                    "list[]",
                    "bool"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/test_state.py": {
        "test_state_list": {
            "name": "test_state_list",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str",
                    "bool"
                ]
            }
        },
        "output_formats": {
            "name": "output_formats",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd": [
                    "str",
                    "int"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "bytes",
                    "dict[str, str]",
                    "None"
                ],
                "output": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "bytes",
                    "list[int]"
                ]
            }
        },
        "test_state_list_table": {
            "name": "test_state_list_table",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str"
                ],
                "basic_entities_table_text": [
                    "str"
                ]
            }
        },
        "test_state_default_list_table": {
            "name": "test_state_default_list_table",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str",
                    "None"
                ],
                "basic_entities_table_text": [
                    "str",
                    "None"
                ]
            }
        },
        "test_state_list_tblformat": {
            "name": "test_state_list_tblformat",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str"
                ],
                "basic_entities_table_format_text": [
                    "str"
                ]
            }
        },
        "test_state_list_table_columns": {
            "name": "test_state_list_table_columns",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str",
                    "int"
                ],
                "basic_entities_table_columns_text": [
                    "str",
                    "int"
                ]
            }
        },
        "test_state_list_table_columns_sortby": {
            "name": "test_state_list_table_columns_sortby",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "list[str]"
                ],
                "basic_entities_table_sorted_text": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_state_list_no_header": {
            "name": "test_state_list_no_header",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "Exception",
                    "None",
                    "str",
                    "typing.Type"
                ],
                "basic_entities_table_no_header_text": [
                    "Exception",
                    "None",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "test_state_get": {
            "name": "test_state_get",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "bool"
                ],
                "basic_entities": []
            }
        },
        "test_state_edit": {
            "name": "test_state_edit",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "str"
                ],
                "basic_entities": [
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "test_state_toggle": {
            "name": "test_state_toggle",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "basic_entities_text": [
                    "dict[, ]",
                    "int",
                    "str"
                ],
                "basic_entities": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_state_filter": {
            "name": "test_state_filter",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "default_entities": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "test_state_history": {
            "name": "test_state_history",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "default_entities": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "home-assistant-cli-master/tests/__init__.py": {}
}
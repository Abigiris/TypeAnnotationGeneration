{
    "index_runner-master/test_reads.py": {
        "test_reads_valid1": {
            "name": "test_reads_valid1",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/src/__init__.py": {},
    "index_runner-master/src/admin_tools/main.py": {
        "_get_count": {
            "name": "_get_count",
            "location": 18,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "_get_count_by_type": {
            "name": "_get_count_by_type",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_get_upas": {
            "name": "_get_upas",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_print_upas": {
            "name": "_print_upas",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "doc": [
                    "bool",
                    "str",
                    "float",
                    "typing.Sequence[int]"
                ]
            }
        },
        "_pad": {
            "name": "_pad",
            "location": 87,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "left": [],
                "right": [
                    "int",
                    "float",
                    "str",
                    "typing.Iterable[list[str]]"
                ],
                "amount": [
                    "int"
                ]
            }
        },
        "_reindex": {
            "name": "_reindex",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_reindex_ws_range": {
            "name": "_reindex_ws_range",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_reindex_ws_type": {
            "name": "_reindex_ws_type",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_produce": {
            "name": "_produce",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "dict[str, str]"
                ],
                "topic": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "dict[str, str]"
                ]
            }
        },
        "_delivery_report": {
            "name": "_delivery_report",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "err": [
                    "str",
                    "None",
                    "BaseException",
                    "int"
                ],
                "msg": []
            }
        }
    },
    "index_runner-master/src/admin_tools/__init__.py": {},
    "index_runner-master/src/index_runner/es_indexer.py": {
        "init_indexes": {
            "name": "init_indexes",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "reload_aliases": {
            "name": "reload_aliases",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_indexer": {
            "name": "run_indexer",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "bytes"
                ],
                "ws_info": [
                    "bytes"
                ],
                "msg": [
                    "bytes"
                ]
            }
        },
        "delete_obj": {
            "name": "delete_obj",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "delete_ws": {
            "name": "delete_ws",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "set_perms": {
            "name": "set_perms",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "set_user_perms": {
            "name": "set_user_perms",
            "location": 161,
            "return": [
                "dict[str, typing.Any]",
                "list[]",
                "dict[, ]",
                "list[tuple[typing.Union[typing.Any,typing.Any,typing.Any,str]]]"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "_init_generic_index": {
            "name": "_init_generic_index",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "_write_to_elastic": {
            "name": "_write_to_elastic",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "data": []
            }
        },
        "_global_doc_defaults": {
            "name": "_global_doc_defaults",
            "location": 225,
            "return": [],
            "arguments": {
                "doc": [
                    "str",
                    "int"
                ]
            }
        },
        "_update_by_query": {
            "name": "_update_by_query",
            "location": 236,
            "return": [],
            "arguments": {
                "query": [
                    "dict[, ]",
                    "None"
                ],
                "script": [
                    "dict[, ]",
                    "None"
                ],
                "config": [
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "_create_alias": {
            "name": "_create_alias",
            "location": 256,
            "return": [],
            "arguments": {
                "alias_name": [
                    "str",
                    "bool",
                    "None"
                ],
                "index_names": [
                    "str",
                    "None"
                ]
            }
        },
        "_create_index": {
            "name": "_create_index",
            "location": 269,
            "return": [],
            "arguments": {
                "index_name": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "_put_mapping": {
            "name": "_put_mapping",
            "location": 293,
            "return": [],
            "arguments": {
                "index_name": [
                    "str"
                ],
                "mapping": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "_init_index": {
            "name": "_init_index",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "None"
                ],
                "props": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/event_loop.py": {
        "start_loop": {
            "name": "start_loop",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "consumer": [],
                "message_handler": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[str, dict[, ]]"
                ],
                "on_success": [
                    "typing.Callable[, ]"
                ],
                "on_failure": [
                    "typing.Callable[, ]"
                ],
                "on_config_update": [
                    "typing.Callable[, ]"
                ],
                "return_on_empty": [
                    "bool"
                ],
                "timeout": [
                    "float"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/main.py": {
        "_handle_msg": {
            "name": "_handle_msg",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "_log_msg_to_elastic": {
            "name": "_log_msg_to_elastic",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "_fetch_obj_data": {
            "name": "_fetch_obj_data",
            "location": 117,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "msg": []
            }
        },
        "_fetch_ws_info": {
            "name": "_fetch_ws_info",
            "location": 143,
            "return": [
                "list[str]",
                "dict[str, str]",
                "str",
                "dict[str, int]"
            ],
            "arguments": {
                "msg": []
            }
        },
        "_reindex_narrative": {
            "name": "_reindex_narrative",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "str"
                ],
                "ws_info": [
                    "bytes"
                ]
            }
        },
        "_log_err_to_es": {
            "name": "_log_err_to_es",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "dict[, ]"
                ],
                "err": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "_delivery_report": {
            "name": "_delivery_report",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "err": [
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ],
                "msg": []
            }
        },
        "_exit_handler": {
            "name": "_exit_handler",
            "location": 193,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "consumer": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_exit_handler.handler": {
            "name": "handler",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "signum": [],
                "stack_frame": []
            }
        },
        "_exit_handler.handler_noargs": {
            "name": "handler_noargs",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/src/index_runner/releng_importer.py": {
        "run_importer": {
            "name": "run_importer",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "str"
                ],
                "ws_info": [
                    "str",
                    "None",
                    "bytes",
                    "dict[, ]"
                ],
                "msg": [
                    "str",
                    "dict[, ]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "delete_obj": {
            "name": "delete_obj",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "delete_ws": {
            "name": "delete_ws",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bool",
                    "typing.Iterable[int]"
                ]
            }
        },
        "set_perms": {
            "name": "set_perms",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/__init__.py": {},
    "index_runner-master/src/index_runner/es_indexers/annotated_metagenome_assembly.py": {
        "_index_ama": {
            "name": "_index_ama",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "features_file_gz_path": [
                    "str"
                ],
                "data": [
                    "dict[str, str]"
                ],
                "ama_id": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, typing.Sequence[str]]",
                    "dict[str, typing.Sequence[typing.Any]]",
                    "bool",
                    "bytes",
                    "typing.Any",
                    "None"
                ],
                "ver_ama_id": [
                    "str"
                ],
                "tmp_dir": [
                    "str",
                    "None"
                ],
                "conf": [
                    "str",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 109,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "obj_data": [
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, str]]",
                    "dict[str, bool]",
                    "dict[, ]"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/assembly.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[None,tuple[typing.Union[typing.Type,typing.Type]],dict[str, list[]],str,dict[, ],None,tuple[typing.Union[typing.Type,typing.Type]],dict[str, list[]],str,dict[, ],None,tuple[typing.Union[typing.Type,typing.Type]],dict[str, list[]],str,dict[, ]]],str,typing.Text]]]"
            ],
            "arguments": {
                "obj_data": [
                    "bytes",
                    "str"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/from_sdk.py": {
        "_get_docker_image_name": {
            "name": "_get_docker_image_name",
            "location": 22,
            "return": [],
            "arguments": {
                "sdk_app": [
                    "str",
                    "dict[, ]"
                ],
                "module_version": [
                    "None",
                    "str"
                ]
            }
        },
        "_verify_and_format_output": {
            "name": "_verify_and_format_output",
            "location": 46,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "data_path": [
                    "str"
                ],
                "job_dir": [
                    "str"
                ],
                "workspace_id": [
                    "bool",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "object_id": [
                    "bool",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "index_name_ver": [
                    "bool",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "sub_obj_index": [
                    "bool",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "_cleanup": {
            "name": "_cleanup",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "job_dir": [
                    "str"
                ]
            }
        },
        "_pull_docker_image": {
            "name": "_pull_docker_image",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "image": [
                    "str",
                    "tuple[typing.Union[str,str]]",
                    "bool",
                    "None",
                    "typing.Callable[, ]",
                    "list[str]"
                ]
            }
        },
        "_setup_docker_inputs": {
            "name": "_setup_docker_inputs",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "job_dir": [
                    "str"
                ],
                "obj_data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "list[list[str]]",
                    "bytes",
                    "None"
                ],
                "ws_info": [
                    "dict[str, typing.Any]",
                    "typing.Any",
                    "None",
                    "dict[, ]",
                    "typing.Mapping",
                    "str"
                ],
                "obj_data_v1": [
                    "dict[, ]",
                    "list[dict[, ]]"
                ],
                "sdk_app": [
                    "str"
                ],
                "sdk_func": [
                    "str"
                ]
            }
        },
        "_get_index_name": {
            "name": "_get_index_name",
            "location": 173,
            "return": [
                "str",
                "frozenset",
                "list[str]"
            ],
            "arguments": {
                "type_module": [
                    "str"
                ],
                "type_name": [
                    "str"
                ],
                "type_version": [
                    "str",
                    "None",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_get_sub_obj_index": {
            "name": "_get_sub_obj_index",
            "location": 187,
            "return": [
                "dict[str, str]",
                "list[str]",
                "None"
            ],
            "arguments": {
                "indexer_app_vars": []
            }
        },
        "index_from_sdk": {
            "name": "index_from_sdk",
            "location": 200,
            "return": [],
            "arguments": {
                "obj_data": [
                    "list[str]"
                ],
                "ws_info": [
                    "bool",
                    "None",
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "None",
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "conf": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "list[typing.Sequence[int]]",
                    "typing.Sequence[]",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "_verify_and_format_output.check_datatypes": {
            "name": "check_datatypes",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "d": []
            }
        },
        "_verify_and_format_output.format_data": {
            "name": "format_data",
            "location": 66,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,bool]]"
            ],
            "arguments": {
                "d": []
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/genome.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_data": [],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/indexer_utils.py": {
        "check_object_deleted": {
            "name": "check_object_deleted",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "ws_id": [
                    "str",
                    "int",
                    "typing.MutableSequence",
                    "None"
                ],
                "obj_id": [
                    "str",
                    "int"
                ]
            }
        },
        "is_workspace_public": {
            "name": "is_workspace_public",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "ws_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "check_workspace_deleted": {
            "name": "check_workspace_deleted",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "ws_id": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "get_shared_users": {
            "name": "get_shared_users",
            "location": 54,
            "return": [
                "list[]"
            ],
            "arguments": {
                "ws_id": [
                    "str",
                    "int",
                    "None",
                    "list[int]"
                ]
            }
        },
        "_get_tags": {
            "name": "_get_tags",
            "location": 74,
            "return": [
                "list[]"
            ],
            "arguments": {
                "ws_info": [
                    "str"
                ]
            }
        },
        "merge_default_fields": {
            "name": "merge_default_fields",
            "location": 86,
            "return": [],
            "arguments": {
                "indexer_ret": [],
                "defaults": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_remove_dupes": {
            "name": "_remove_dupes",
            "location": 118,
            "return": [
                "list[str]",
                "list[typing.Union[int,str]]"
            ],
            "arguments": {
                "ls": [
                    "list[int]",
                    "list[]",
                    "dict[typing.Union[str,str,str,str,str,str,str,str,str,str], ]",
                    "str"
                ]
            }
        },
        "default_fields": {
            "name": "default_fields",
            "location": 132,
            "return": [
                "dict[typing.Text, typing.Union[str,bool,dict[int, list[str]],list[bytes]]]"
            ],
            "arguments": {
                "obj_data": [],
                "ws_info": [
                    "str",
                    "list[object]",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "handle_id_to_file": {
            "name": "handle_id_to_file",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "handle_id": [
                    "str"
                ],
                "dest_path": [
                    "str",
                    "None"
                ]
            }
        },
        "mean": {
            "name": "mean",
            "location": 170,
            "return": [
                "None",
                "float"
            ],
            "arguments": {
                "array": []
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/main.py": {
        "index_obj": {
            "name": "index_obj",
            "location": 20,
            "return": [
                "None",
                "typing.Generator[]"
            ],
            "arguments": {
                "obj_data": [
                    "bytes"
                ],
                "ws_info": [
                    "bytes"
                ],
                "msg_data": []
            }
        },
        "_find_indexer": {
            "name": "_find_indexer",
            "location": 73,
            "return": [
                "tuple[dict[, ]]"
            ],
            "arguments": {
                "type_module": [],
                "type_name": [
                    "dict[str, typing.Any]",
                    "int"
                ],
                "type_version": [
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "generic_indexer": {
            "name": "generic_indexer",
            "location": 89,
            "return": [],
            "arguments": {}
        },
        "generic_indexer.fn": {
            "name": "fn",
            "location": 93,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text], typing.Text]]",
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,typing.Text,bool]]]"
            ],
            "arguments": {
                "obj_data": [],
                "ws_info": [],
                "obj_data_v1": [],
                "conf": []
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/narrative.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None",
                "typing.Generator[dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[list[str],list[dict[str, typing.Any]],dict[str, dict[str, typing.Any]],list[],str,int]]]]]"
            ],
            "arguments": {
                "obj_data": [
                    "str"
                ],
                "ws_info": [
                    "set[str]",
                    "None",
                    "typing.Callable[, ]",
                    "tuple[int]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str"
                ]
            }
        },
        "_narrative_is_narratorial": {
            "name": "_narrative_is_narratorial",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "ws_metadata": [
                    "dict[, ]"
                ]
            }
        },
        "_extract_cells": {
            "name": "_extract_cells",
            "location": 70,
            "return": [
                "list[typing.Union[dict[typing.Text, typing.Text],str]]"
            ],
            "arguments": {
                "cells": [
                    "list[str]"
                ],
                "workspace_id": [
                    "bool",
                    "typing.MutableSet",
                    "list[str]",
                    "str"
                ]
            }
        },
        "_process_code_cell": {
            "name": "_process_code_cell",
            "location": 98,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "cell": []
            }
        },
        "_fetch_objects_in_workspace": {
            "name": "_fetch_objects_in_workspace",
            "location": 130,
            "return": [
                "list[dict[typing.Text, typing.Text]]"
            ],
            "arguments": {
                "ws_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/pangenome.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], ],typing.Text]]]",
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], list[]],typing.Text,bool]]]"
            ],
            "arguments": {
                "obj_data": [
                    "bytes",
                    "str"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": []
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/reads.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[str,str,str,str,str,None,str,list[dict[, ]],bool,bool]],str,typing.Text]]]"
            ],
            "arguments": {
                "obj_data": [
                    "str"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/sample_set.py": {
        "_flatten_meta": {
            "name": "_flatten_meta",
            "location": 10,
            "return": [
                "dict[, typing.Text]"
            ],
            "arguments": {
                "meta": [
                    "bytes"
                ],
                "prefix": [
                    "str"
                ]
            }
        },
        "_combine_meta": {
            "name": "_combine_meta",
            "location": 30,
            "return": [],
            "arguments": {
                "meta": [],
                "flattened_meta": [],
                "idx": []
            }
        },
        "main": {
            "name": "main",
            "location": 47,
            "return": [
                "typing.Generator[dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, list[]]]]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "obj_data": [],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/taxon.py": {
        "main": {
            "name": "main",
            "location": 3,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[list[typing.Any],list[typing.Any],list[typing.Any],list[typing.Any],list[typing.Any],list[typing.Any],list[typing.Any]]],str,bytes,typing.Text]]]"
            ],
            "arguments": {
                "obj_data": [
                    "bytes",
                    "str"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "tuple[]",
                    "str",
                    "tuple[typing.Union[bytes,bytes]]"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/tree.py": {
        "main": {
            "name": "main",
            "location": 3,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,dict[typing.Union[typing.Text,typing.Text,typing.Text], list[dict[typing.Union[typing.Text,typing.Text], ]]],typing.Text]]]"
            ],
            "arguments": {
                "obj_data": [
                    "bytes",
                    "str"
                ],
                "ws_info": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "obj_data_v1": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "conf": [
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/es_indexers/__init__.py": {},
    "index_runner-master/src/index_runner/releng/del_obj.py": {
        "delete_object": {
            "name": "delete_object",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_info": []
            }
        }
    },
    "index_runner-master/src/index_runner/releng/genome.py": {
        "process_genome": {
            "name": "process_genome",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "bytes",
                    "dict[, ]",
                    "bool"
                ],
                "obj_data": [
                    "bytes",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "_generate_taxon_edge": {
            "name": "_generate_taxon_edge",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str",
                    "list[str]",
                    "list[list[int]]"
                ],
                "obj_data": [
                    "str",
                    "bytes"
                ]
            }
        },
        "_generate_features": {
            "name": "_generate_features",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "bytes",
                    "str"
                ],
                "obj_data": [
                    "bytes",
                    "str"
                ]
            }
        },
        "_generate_GO_links": {
            "name": "_generate_GO_links",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str",
                    "bytes",
                    "dict[, ]",
                    "int",
                    "None"
                ],
                "obj_data": [
                    "str",
                    "list[bool]"
                ]
            }
        },
        "_resolve_GO_terms": {
            "name": "_resolve_GO_terms",
            "location": 145,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "terms_set": [
                    "set[]",
                    "list[]"
                ],
                "query_time": [
                    "str",
                    "None",
                    "int",
                    "list[list[]]"
                ]
            }
        },
        "_now_epoch_ms": {
            "name": "_now_epoch_ms",
            "location": 178,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "_chunkiter": {
            "name": "_chunkiter",
            "location": 182,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "typing.Iterable[]",
                    "str"
                ],
                "size": [
                    "int"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/releng/import_obj.py": {
        "import_object": {
            "name": "import_object",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "ws_info": [
                    "dict[, ]"
                ]
            }
        },
        "_save_ws_object": {
            "name": "_save_ws_object",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_info": [
                    "str"
                ],
                "ws_info": [
                    "str"
                ]
            }
        },
        "_save_obj_hash": {
            "name": "_save_obj_hash",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "info_tup": [
                    "list[int]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "_save_obj_version": {
            "name": "_save_obj_version",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "None",
                    "typing.Any"
                ],
                "ver": [
                    "str",
                    "None",
                    "float",
                    "int"
                ],
                "info_tup": [
                    "str"
                ],
                "ws_info": [
                    "str"
                ]
            }
        },
        "_save_copy_edge": {
            "name": "_save_copy_edge",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "obj": [
                    "dict[str, str]"
                ]
            }
        },
        "_save_obj_ver_edge": {
            "name": "_save_obj_ver_edge",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "obj_key": [
                    "str"
                ]
            }
        },
        "_save_ws_contains_edge": {
            "name": "_save_ws_contains_edge",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_key": [
                    "str"
                ],
                "info_tup": [
                    "str"
                ]
            }
        },
        "_save_workspace": {
            "name": "_save_workspace",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "ws_info": [
                    "str"
                ]
            }
        },
        "_save_created_with_method_edge": {
            "name": "_save_created_with_method_edge",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "prov": [
                    "str"
                ]
            }
        },
        "_save_created_with_module_edge": {
            "name": "_save_created_with_module_edge",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "prov": [
                    "str"
                ]
            }
        },
        "_save_inst_of_type_edge": {
            "name": "_save_inst_of_type_edge",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "info_tup": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "_save_type_vertices": {
            "name": "_save_type_vertices",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_info": [
                    "list[]",
                    "bytes",
                    "str"
                ]
            }
        },
        "_save_owner_edge": {
            "name": "_save_owner_edge",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "info_tup": [
                    "str"
                ]
            }
        },
        "_save_referral_edge": {
            "name": "_save_referral_edge",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "obj": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_save_prov_desc_edge": {
            "name": "_save_prov_desc_edge",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "str"
                ],
                "obj": [
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "index_runner-master/src/index_runner/releng/samples.py": {
        "process_sample_set": {
            "name": "process_sample_set",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "obj_ver_key": [
                    "bool",
                    "str"
                ],
                "obj_data": [
                    "bytes",
                    "list[typing.Sequence[int]]",
                    "str"
                ]
            }
        },
        "_now_epoch_ms": {
            "name": "_now_epoch_ms",
            "location": 58,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "_get_sample_version_uuid": {
            "name": "_get_sample_version_uuid",
            "location": 62,
            "return": [],
            "arguments": {
                "sample": []
            }
        },
        "_hash": {
            "name": "_hash",
            "location": 82,
            "return": [],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "_generate_link_information": {
            "name": "_generate_link_information",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "sample": [
                    "str",
                    "list[dict[, ]]"
                ],
                "sample_version_uuid": [
                    "str",
                    "list[dict[, ]]",
                    "int"
                ],
                "edges": [
                    "list[str]"
                ],
                "term_bank": []
            }
        }
    },
    "index_runner-master/src/index_runner/releng/__init__.py": {},
    "index_runner-master/src/utils/config.py": {
        "_get_sample_service_url": {
            "name": "_get_sample_service_url",
            "location": 20,
            "return": [],
            "arguments": {
                "sw_url": [
                    "dict[, ]",
                    "str",
                    "int",
                    "None",
                    "bytes",
                    "dict[str, typing.Any]"
                ],
                "ss_release": [
                    "list[tuple[typing.Union[int,int]]]",
                    "str",
                    "int",
                    "float",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "config": {
            "name": "config",
            "location": 39,
            "return": [
                "None",
                "Config"
            ],
            "arguments": {
                "force_reload": [
                    "bool"
                ]
            }
        },
        "_fetch_global_config": {
            "name": "_fetch_global_config",
            "location": 158,
            "return": [],
            "arguments": {
                "config_url": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.OrderedDict",
                    "str"
                ]
            }
        },
        "_get_comma_delimited_env": {
            "name": "_get_comma_delimited_env",
            "location": 168,
            "return": [
                "None",
                "set[str]"
            ],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.reload": {
            "name": "reload",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "force_reload": [
                    "bool"
                ]
            }
        },
        "Config.__getitem__": {
            "name": "__getitem__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "None",
                    "tuple[]",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[KT, VT]",
                    "typing.Type"
                ]
            }
        },
        "Config.__str__": {
            "name": "__str__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "index_runner-master/src/utils/es_utils.py": {
        "check_doc_existence": {
            "name": "check_doc_existence",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "wsid": [
                    "dict[str, dict[str, int]]",
                    "list[str]"
                ],
                "objid": [
                    "dict[str, dict[str, int]]",
                    "list[str]"
                ]
            }
        },
        "_get_document": {
            "name": "_get_document",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "index_name": [
                    "str",
                    "int",
                    "None"
                ],
                "document_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "index_runner-master/src/utils/formatting.py": {
        "ts_to_epoch": {
            "name": "ts_to_epoch",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "ts": [
                    "float",
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "_get_module_ver_hash": {
            "name": "_get_module_ver_hash",
            "location": 13,
            "return": [
                "None",
                "str",
                "dict[str, str]",
                "dict[, ]"
            ],
            "arguments": {
                "prov": [
                    "str"
                ]
            }
        },
        "get_method_key_from_prov": {
            "name": "get_method_key_from_prov",
            "location": 24,
            "return": [],
            "arguments": {
                "prov": []
            }
        },
        "get_module_key_from_prov": {
            "name": "get_module_key_from_prov",
            "location": 46,
            "return": [],
            "arguments": {
                "prov": []
            }
        },
        "sanitize_arangodb_key": {
            "name": "sanitize_arangodb_key",
            "location": 56,
            "return": [],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/utils/get_es_module.py": {
        "get_es_module": {
            "name": "get_es_module",
            "location": 8,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "type_module": [
                    "bool"
                ],
                "type_name": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "type_version": [
                    "None"
                ]
            }
        }
    },
    "index_runner-master/src/utils/get_path.py": {
        "get_path": {
            "name": "get_path",
            "location": 3,
            "return": [
                "str",
                "list[str]",
                "list[]",
                "None",
                "typing.Iterable[str]",
                "typing.Sequence[str]",
                "bool"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "list[str]",
                    "list[]"
                ],
                "path": [],
                "default": [
                    "None",
                    "typing.Iterable[str]",
                    "typing.Sequence[str]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "index_runner-master/src/utils/get_upa_from_msg.py": {
        "get_upa_from_msg_data": {
            "name": "get_upa_from_msg_data",
            "location": 3,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "msg_data": [
                    "dict[, ]"
                ]
            }
        }
    },
    "index_runner-master/src/utils/kafka.py": {
        "init_consumer": {
            "name": "init_consumer",
            "location": 14,
            "return": [
                "Consumer"
            ],
            "arguments": {
                "topics": []
            }
        },
        "close_consumer": {
            "name": "close_consumer",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "consumer": []
            }
        },
        "produce": {
            "name": "produce",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [],
                "topic": [],
                "callback": [
                    "None"
                ]
            }
        }
    },
    "index_runner-master/src/utils/logger.py": {
        "init_logger": {
            "name": "init_logger",
            "location": 11,
            "return": [],
            "arguments": {
                "logger": []
            }
        }
    },
    "index_runner-master/src/utils/re_client.py": {
        "clean_key": {
            "name": "clean_key",
            "location": 18,
            "return": [],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        },
        "stored_query": {
            "name": "stored_query",
            "location": 26,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ],
                "params": [
                    "str"
                ]
            }
        },
        "clear_collection": {
            "name": "clear_collection",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "collection_name": [
                    "str"
                ]
            }
        },
        "get_all_documents": {
            "name": "get_all_documents",
            "location": 56,
            "return": [],
            "arguments": {
                "collection_name": [
                    "str"
                ]
            }
        },
        "get_doc": {
            "name": "get_doc",
            "location": 75,
            "return": [],
            "arguments": {
                "coll": [
                    "str",
                    "dict[, ]",
                    "int",
                    "bytes",
                    "None"
                ],
                "key": [
                    "str",
                    "dict[, ]",
                    "int",
                    "bytes",
                    "None"
                ]
            }
        },
        "check_doc_existence": {
            "name": "check_doc_existence",
            "location": 91,
            "return": [
                "bool"
            ],
            "arguments": {
                "wsid": [
                    "str"
                ],
                "objid": [
                    "str"
                ]
            }
        },
        "get_edge": {
            "name": "get_edge",
            "location": 112,
            "return": [],
            "arguments": {
                "coll": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "from_key": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "to_key": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 135,
            "return": [],
            "arguments": {
                "coll_name": [
                    "str"
                ],
                "docs": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "None"
                ],
                "on_duplicate": [
                    "typing.Text"
                ]
            }
        },
        "execute_query": {
            "name": "execute_query",
            "location": 163,
            "return": [],
            "arguments": {
                "query": [
                    "str",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "params": []
            }
        }
    },
    "index_runner-master/src/utils/sample_utils.py": {
        "get_sample": {
            "name": "get_sample",
            "location": 6,
            "return": [],
            "arguments": {
                "sample_info": []
            }
        }
    },
    "index_runner-master/src/utils/service_utils.py": {
        "wait_for_dependencies": {
            "name": "wait_for_dependencies",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "elasticsearch": [
                    "bool"
                ],
                "re_api": [
                    "bool"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "_wait_for_service": {
            "name": "_wait_for_service",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "int",
                    "None"
                ],
                "name": [
                    "str"
                ],
                "start_time": [
                    "int"
                ],
                "timeout": [
                    "int"
                ],
                "params": [
                    "None",
                    "str",
                    "int"
                ]
            }
        }
    },
    "index_runner-master/src/utils/ws_utils.py": {
        "get_type_pieces": {
            "name": "get_type_pieces",
            "location": 9,
            "return": [
                "tuple[bytes]"
            ],
            "arguments": {
                "type_str": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_obj_type": {
            "name": "get_obj_type",
            "location": 20,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "log_error": {
            "name": "log_error",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "ws_err": [
                    "str",
                    "int"
                ],
                "level": []
            }
        }
    },
    "index_runner-master/src/utils/__init__.py": {},
    "index_runner-master/tests/helpers.py": {
        "assert_subset": {
            "name": "assert_subset",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "testCls": [],
                "subset": [
                    "dict[str, str]",
                    "dict[, ]"
                ],
                "_dict": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "get_es_doc": {
            "name": "get_es_doc",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "_id": [
                    "str",
                    "int",
                    "bytes",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "get_es_doc_blocking": {
            "name": "get_es_doc_blocking",
            "location": 44,
            "return": [
                "str",
                "list[tuple[typing.Union[str,typing.Any]]]"
            ],
            "arguments": {
                "_id": [
                    "str"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "get_es_aliases": {
            "name": "get_es_aliases",
            "location": 57,
            "return": [
                "None",
                "dict[, list[]]"
            ],
            "arguments": {}
        },
        "wait_for_re_doc": {
            "name": "wait_for_re_doc",
            "location": 78,
            "return": [],
            "arguments": {
                "coll": [
                    "str",
                    "bool",
                    "bytes",
                    "dict[, ]"
                ],
                "key": [
                    "dict[, ]",
                    "str",
                    "int",
                    "bytes",
                    "None"
                ],
                "timeout": [
                    "int"
                ]
            }
        },
        "_delivery_report": {
            "name": "_delivery_report",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "err": [
                    "str",
                    "None",
                    "BaseException",
                    "int"
                ],
                "msg": []
            }
        },
        "produce": {
            "name": "produce",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "list[]",
                    "dict[str, typing.Any]"
                ],
                "topic": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "dict[str, str]"
                ]
            }
        },
        "set_env": {
            "name": "set_env",
            "location": 108,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/wait_for_deps.py": {},
    "index_runner-master/tests/__init__.py": {},
    "index_runner-master/tests/integration/test_integration.py": {
        "test_integration": {
            "name": "test_integration",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/test_indexer_utils.py": {
        "lists_are_same": {
            "name": "lists_are_same",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "L1": [],
                "L2": []
            }
        },
        "test_merge_scalars": {
            "name": "test_merge_scalars",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge_same_scalar": {
            "name": "test_merge_same_scalar",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge_lists": {
            "name": "test_merge_lists",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge_add_new_field": {
            "name": "test_merge_add_new_field",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge_no_doc_error": {
            "name": "test_merge_no_doc_error",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/test_spec_config.py": {
        "test_sdk_index_names": {
            "name": "test_sdk_index_names",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_alias_index_names": {
            "name": "test_alias_index_names",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_type_to_indexes": {
            "name": "test_type_to_indexes",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_latest_version_names": {
            "name": "test_latest_version_names",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mappings": {
            "name": "test_mappings",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_elasticsearch_module_schema": {
            "name": "test_elasticsearch_module_schema",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_elasticsearch_module_paths": {
            "name": "test_elasticsearch_module_paths",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/helpers.py": {
        "MockMessage.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "typing.Text"
                ]
            }
        },
        "MockMessage.error": {
            "name": "error",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockMessage.value": {
            "name": "value",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockConsumer.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "topics": [
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "MockConsumer.poll": {
            "name": "poll",
            "location": 27,
            "return": [
                "dict[str, str]",
                "str",
                "int",
                "dict[, ]",
                "dict[tuple[typing.Union[int,int]], str]",
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float",
                    "None",
                    "int"
                ]
            }
        },
        "MockConsumer.commit": {
            "name": "commit",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "MockConsumer.produce_test": {
            "name": "produce_test",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bool",
                    "typing.Callable[[], bytes]",
                    "BaseException"
                ]
            }
        }
    },
    "index_runner-master/tests/unit/index_runner/test_es_indexer.py": {
        "test_set_user_perms": {
            "name": "test_set_user_perms",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/test_event_loop.py": {
        "test_retry_count": {
            "name": "test_retry_count",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_retry_count.handler_raise": {
            "name": "handler_raise",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        }
    },
    "index_runner-master/tests/unit/index_runner/test_main.py": {
        "test_handle_msg_skip_types": {
            "name": "test_handle_msg_skip_types",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_handle_msg_skip_types2": {
            "name": "test_handle_msg_skip_types2",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_handle_msg_allow_types": {
            "name": "test_handle_msg_allow_types",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_handle_msg_allow_types2": {
            "name": "test_handle_msg_allow_types2",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_handle_msg_no_objtype": {
            "name": "test_handle_msg_no_objtype",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_ama.py": {
        "test_annotated_metagenome_assembly_indexer": {
            "name": "test_annotated_metagenome_assembly_indexer",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_assembly.py": {
        "test_assembly_indexer": {
            "name": "test_assembly_indexer",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_genome.py": {
        "test_genome_valid1": {
            "name": "test_genome_valid1",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_genomeset.py": {},
    "index_runner-master/tests/unit/index_runner/es_indexers/test_narrative.py": {
        "test_basic_valid": {
            "name": "test_basic_valid",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_temporary_narr": {
            "name": "test_temporary_narr",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_narratorial": {
            "name": "test_narratorial",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fail_no_obj_metadata": {
            "name": "test_fail_no_obj_metadata",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fail_no_ws_metadata": {
            "name": "test_fail_no_ws_metadata",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_pangenome.py": {
        "test_genome_valid1": {
            "name": "test_genome_valid1",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_reads.py": {
        "test_reads_valid1": {
            "name": "test_reads_valid1",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_sample_set.py": {
        "test_sample_set_indexer1": {
            "name": "test_sample_set_indexer1",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_taxon.py": {
        "test_taxon_indexer": {
            "name": "test_taxon_indexer",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/es_indexers/test_tree.py": {
        "test_tree_indexer": {
            "name": "test_tree_indexer",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "index_runner-master/tests/unit/index_runner/releng/test_samples.py": {
        "test_generate_sample_set_edges": {
            "name": "test_generate_sample_set_edges",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
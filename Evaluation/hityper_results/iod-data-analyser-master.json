{
    "iod-data-analyser-master/histo.py": {},
    "iod-data-analyser-master/manage.py": {
        "execute_selected_command": {
            "name": "execute_selected_command",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "command_name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "list_all_commands": {
            "name": "list_all_commands",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/setup.py": {
        "long_description": {
            "name": "long_description",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "packages": {
            "name": "packages",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "install_requires": {
            "name": "install_requires",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c000_ut_verification.py": {
        "data_report": {
            "name": "data_report",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "dict[str, dict[str, typing.Any]]"
                ],
                "RowParser": [
                    "str",
                    "dict[, ]"
                ],
                "dirname": [
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c001_ut_intersections.py": {
        "read_badfileslist": {
            "name": "read_badfileslist",
            "location": 19,
            "return": [
                "list[]"
            ],
            "arguments": {
                "basedir": [
                    "str",
                    "bool"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "goodfiles": {
            "name": "goodfiles",
            "location": 23,
            "return": [
                "list[]"
            ],
            "arguments": {
                "basedir": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "badfiles": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "dataof": {
            "name": "dataof",
            "location": 27,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "find_duplicates": {
            "name": "find_duplicates",
            "location": 31,
            "return": [
                "set[]"
            ],
            "arguments": {
                "filenames": [
                    "str"
                ]
            }
        },
        "find_intersections": {
            "name": "find_intersections",
            "location": 49,
            "return": [
                "set[]"
            ],
            "arguments": {
                "filenames": [
                    "str"
                ],
                "RowParser": []
            }
        },
        "filtration": {
            "name": "filtration",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str"
                ],
                "basedir": [
                    "str"
                ],
                "RowParser": [
                    "str",
                    "dict[, ]",
                    "typing.IO",
                    "bool",
                    "list[str]",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c002_draw_good_tracks.py": {
        "chunkup": {
            "name": "chunkup",
            "location": 18,
            "return": [],
            "arguments": {
                "RowParser": [
                    "str"
                ],
                "filename": []
            }
        },
        "date_signature": {
            "name": "date_signature",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "ut_start": [
                    "int"
                ],
                "ut_end": [
                    "int"
                ]
            }
        },
        "draw_chunks": {
            "name": "draw_chunks",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "year": [
                    "str",
                    "None",
                    "list[typing.Any]",
                    "float",
                    "bool"
                ],
                "day": [
                    "str",
                    "None",
                    "list[typing.Any]",
                    "float",
                    "bool"
                ],
                "nacs_chunks": [],
                "wats_chunks": [],
                "destination_dir": [
                    "None",
                    "str",
                    "list[typing.Any]",
                    "float",
                    "bool"
                ]
            }
        },
        "draw_tracks": {
            "name": "draw_tracks",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "destination_dir": [
                    "None",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c003_generate_html_schema_for_tracks.py": {
        "main": {
            "name": "main",
            "location": 793,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c004_sampling_extraction.py": {
        "chunkup": {
            "name": "chunkup",
            "location": 22,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "verify_sampling": {
            "name": "verify_sampling",
            "location": 55,
            "return": [],
            "arguments": {
                "deltas": [],
                "sampling": []
            }
        },
        "artifacts": {
            "name": "artifacts",
            "location": 69,
            "return": [],
            "arguments": {
                "day": [],
                "key": [],
                "sampling": []
            }
        },
        "make_deltas": {
            "name": "make_deltas",
            "location": 76,
            "return": [],
            "arguments": {
                "key": [],
                "dirname": [],
                "RowParser": []
            }
        },
        "sample": {
            "name": "sample",
            "location": 101,
            "return": [],
            "arguments": {
                "key": [],
                "dirname": [],
                "RowParser": [],
                "sampling": []
            }
        },
        "chunkup_samplings": {
            "name": "chunkup_samplings",
            "location": 174,
            "return": [],
            "arguments": {
                "key": [],
                "dirname": [],
                "RowParser": []
            }
        },
        "main": {
            "name": "main",
            "location": 183,
            "return": [],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c005_resolutions_list.py": {
        "round": {
            "name": "round",
            "location": 19,
            "return": [],
            "arguments": {
                "x": [
                    "float"
                ]
            }
        },
        "disambiguate": {
            "name": "disambiguate",
            "location": 23,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "measurements": [
                    "str",
                    "list[]",
                    "set[str]"
                ],
                "key_function": [
                    "str"
                ]
            }
        },
        "load_samplings": {
            "name": "load_samplings",
            "location": 34,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "device_key": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "unique": [
                    "bool"
                ]
            }
        },
        "calculate_statistics": {
            "name": "calculate_statistics",
            "location": 48,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "device_key": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "unique": [
                    "bool"
                ]
            }
        },
        "draw_statistics": {
            "name": "draw_statistics",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "calculate_distributions": {
            "name": "calculate_distributions",
            "location": 110,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "device_key": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "unique": [
                    "bool"
                ]
            }
        },
        "draw_distributions": {
            "name": "draw_distributions",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c006_samplify_data.py": {
        "sampling_segments": {
            "name": "sampling_segments",
            "location": 24,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "sampling": [
                    "str",
                    "bytes"
                ]
            }
        },
        "enhance_segment": {
            "name": "enhance_segment",
            "location": 43,
            "return": [],
            "arguments": {
                "day": [
                    "dict[, ]",
                    "list[str]",
                    "list[T]",
                    "typing.Callable[, ]"
                ],
                "segment": [
                    "tuple[str]"
                ],
                "sampling": [
                    "int",
                    "str",
                    "None",
                    "list[]"
                ]
            }
        },
        "collect_segments": {
            "name": "collect_segments",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "sampling": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c007_moving_average.py": {
        "zerofilled_bounds": {
            "name": "zerofilled_bounds",
            "location": 43,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "original_length": [
                    "int"
                ]
            }
        },
        "zerofilled_signal": {
            "name": "zerofilled_signal",
            "location": 48,
            "return": [],
            "arguments": {
                "original": []
            }
        },
        "zerofilled_ut": {
            "name": "zerofilled_ut",
            "location": 58,
            "return": [],
            "arguments": {
                "ut": [],
                "sampling": [
                    "int",
                    "str"
                ]
            }
        },
        "original_signal": {
            "name": "original_signal",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "signal": [
                    "str"
                ],
                "original_length": [
                    "int",
                    "list[]",
                    "str"
                ]
            }
        },
        "tick_labels": {
            "name": "tick_labels",
            "location": 72,
            "return": [
                "list[float]"
            ],
            "arguments": {
                "value": [],
                "ticks": [
                    "tuple[typing.Union[str,str,str]]"
                ],
                "precision": [
                    "float"
                ]
            }
        },
        "segments_list": {
            "name": "segments_list",
            "location": 85,
            "return": [
                "list[]"
            ],
            "arguments": {
                "sampling": [
                    "str",
                    "bytes"
                ]
            }
        },
        "omit_zeros": {
            "name": "omit_zeros",
            "location": 95,
            "return": [],
            "arguments": {
                "arr": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "draw_bare": {
            "name": "draw_bare",
            "location": 100,
            "return": [],
            "arguments": {
                "day": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "list[str]",
                    "dict[str, str]"
                ],
                "hours": [
                    "typing.Sequence[util.datetime.range.DateTimeRange]",
                    "str",
                    "float",
                    "list[]"
                ],
                "lat": [
                    "bool",
                    "str",
                    "None"
                ],
                "legend": [
                    "int",
                    "float",
                    "list[str]",
                    "str"
                ],
                "density": [
                    "int",
                    "float",
                    "list[str]",
                    "str"
                ]
            }
        },
        "draw_segment": {
            "name": "draw_segment",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "sampling": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "segment_file": []
            }
        },
        "smooth_signal": {
            "name": "smooth_signal",
            "location": 149,
            "return": [],
            "arguments": {
                "sampling": [
                    "int"
                ],
                "parameter": [
                    "typing.Sequence[str]",
                    "None"
                ],
                "window_len": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "remove_trend": {
            "name": "remove_trend",
            "location": 158,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "sampling": [
                    "None",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "parameter": [
                    "int"
                ]
            }
        },
        "ideal_signal_filter": {
            "name": "ideal_signal_filter",
            "location": 167,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "wave": [],
                "sampling": [
                    "int"
                ]
            }
        },
        "data_title": {
            "name": "data_title",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "day": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "hours": [
                    "str"
                ]
            }
        },
        "discrete_ticks": {
            "name": "discrete_ticks",
            "location": 196,
            "return": [
                "tuple[typing.Union[list[int],list[float]]]"
            ],
            "arguments": {
                "lat": [],
                "precision": [
                    "float"
                ]
            }
        },
        "hours_ticks": {
            "name": "hours_ticks",
            "location": 211,
            "return": [
                "list[float]"
            ],
            "arguments": {
                "hours": []
            }
        },
        "make_patch_spines_invisible": {
            "name": "make_patch_spines_invisible",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "ax": []
            }
        },
        "draw_trend": {
            "name": "draw_trend",
            "location": 223,
            "return": [],
            "arguments": {
                "name": [
                    "int",
                    "str"
                ],
                "day": [
                    "str",
                    "float",
                    "bool"
                ],
                "hours": [
                    "bool",
                    "float",
                    "str"
                ],
                "lat": [
                    "bool",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "None"
                ],
                "lon": [
                    "bool",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "None"
                ],
                "parameter": [
                    "bool",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "None"
                ],
                "avg_trend": [
                    "bool"
                ],
                "fft_trend": [
                    "bool"
                ],
                "noise": [
                    "bool",
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "ut_to_hours": {
            "name": "ut_to_hours",
            "location": 273,
            "return": [],
            "arguments": {
                "uts": [
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "draw_wave": {
            "name": "draw_wave",
            "location": 277,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "bool",
                    "typing.Iterable[typing.Sequence[str]]",
                    "typing.Callable[, ]"
                ],
                "day": [
                    "str"
                ],
                "hours": [
                    "str",
                    "tuple[typing.Union[float,float]]",
                    "bool"
                ],
                "lat": [
                    "str",
                    "None"
                ],
                "lon": [
                    "str",
                    "None"
                ],
                "wave": [
                    "int",
                    "typing.Sequence[str]",
                    "str"
                ],
                "noise": [
                    "str",
                    "None"
                ]
            }
        },
        "analyze_param": {
            "name": "analyze_param",
            "location": 328,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "sampling": [
                    "bool",
                    "str",
                    "None",
                    "list[str]",
                    "list[tuple[typing.Union[int,int]]]",
                    "typing.Pattern"
                ],
                "day": [
                    "typing.Sequence[str]",
                    "None",
                    "str",
                    "bool"
                ],
                "hours": [
                    "typing.Sequence[str]",
                    "None",
                    "str",
                    "bool"
                ],
                "lat": [
                    "typing.Sequence[str]",
                    "None",
                    "str",
                    "bool"
                ],
                "lon": [
                    "typing.Sequence[str]",
                    "None",
                    "str",
                    "bool"
                ],
                "parameter": [
                    "int",
                    "str",
                    "None"
                ],
                "name": [
                    "typing.Sequence[str]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c008_sampled_report.py": {
        "main": {
            "name": "main",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/c009_active_zones.py": {
        "zerofilled_bounds": {
            "name": "zerofilled_bounds",
            "location": 42,
            "return": [],
            "arguments": {
                "original_length": []
            }
        },
        "zerofilled_signal": {
            "name": "zerofilled_signal",
            "location": 47,
            "return": [],
            "arguments": {
                "original": []
            }
        },
        "zerofilled_ut": {
            "name": "zerofilled_ut",
            "location": 57,
            "return": [],
            "arguments": {
                "ut": [],
                "sampling": []
            }
        },
        "original_signal": {
            "name": "original_signal",
            "location": 66,
            "return": [],
            "arguments": {
                "signal": [],
                "original_length": []
            }
        },
        "data_title": {
            "name": "data_title",
            "location": 71,
            "return": [],
            "arguments": {
                "name": [],
                "ut": []
            }
        },
        "discrete_ticks": {
            "name": "discrete_ticks",
            "location": 79,
            "return": [],
            "arguments": {
                "lat": [],
                "precision": []
            }
        },
        "hours_ticks": {
            "name": "hours_ticks",
            "location": 94,
            "return": [],
            "arguments": {
                "hours": []
            }
        },
        "ut_to_hours": {
            "name": "ut_to_hours",
            "location": 99,
            "return": [],
            "arguments": {
                "uts": []
            }
        },
        "make_patch_spines_invisible": {
            "name": "make_patch_spines_invisible",
            "location": 103,
            "return": [],
            "arguments": {
                "ax": []
            }
        },
        "analyze_segment": {
            "name": "analyze_segment",
            "location": 110,
            "return": [],
            "arguments": {
                "sampling": [],
                "segment_file": []
            }
        },
        "select_packages": {
            "name": "select_packages",
            "location": 203,
            "return": [],
            "arguments": {
                "signal": [],
                "threshold": []
            }
        },
        "main": {
            "name": "main",
            "location": 252,
            "return": [],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/cclearcache.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/__init__.py": {
        "list_commands": {
            "name": "list_commands",
            "location": 11,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "find_command": {
            "name": "find_command",
            "location": 30,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "id": [
                    "str"
                ],
                "commands": [
                    "str"
                ]
            }
        },
        "execute_command": {
            "name": "execute_command",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "command": [
                    "str"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/all_files.py": {
        "all_files": {
            "name": "all_files",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/files_of_the_day.py": {
        "files_of_the_day": {
            "name": "files_of_the_day",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str"
                ],
                "year": [
                    "int",
                    "str"
                ],
                "day": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/list_days.py": {
        "list_days": {
            "name": "list_days",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str"
                ],
                "filtered": [
                    "bool"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/moving_average.py": {
        "moving_average_sequence": {
            "name": "moving_average_sequence",
            "location": 7,
            "return": [],
            "arguments": {
                "x": [],
                "window_len": [],
                "split_by_nans": [
                    "bool"
                ]
            }
        },
        "moving_average": {
            "name": "moving_average",
            "location": 36,
            "return": [],
            "arguments": {
                "data_chunk": []
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/parsed_data.py": {
        "parsed_data": {
            "name": "parsed_data",
            "location": 7,
            "return": [
                "FileParser"
            ],
            "arguments": {
                "source_marker": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/sampled_day.py": {
        "adjust_sampling": {
            "name": "adjust_sampling",
            "location": 11,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "deltas": [
                    "str"
                ],
                "sampling": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "make_deltas": {
            "name": "make_deltas",
            "location": 29,
            "return": [],
            "arguments": {
                "ut": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "make_continuity_filter": {
            "name": "make_continuity_filter",
            "location": 38,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "data": [
                    "dict[, ]"
                ],
                "continuity_params": [],
                "zero_cond": [
                    "bool"
                ]
            }
        },
        "sample": {
            "name": "sample",
            "location": 52,
            "return": [],
            "arguments": {
                "data": [
                    "dict[, ]"
                ],
                "sampling": [
                    "int",
                    "tuple[typing.Union[int,int,bytearray]]",
                    "dict[, ]"
                ],
                "continuity_params": [
                    "bytes",
                    "int",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "sampled_day": {
            "name": "sampled_day",
            "location": 97,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "source_marker": [
                    "int",
                    "str",
                    "list[int]"
                ],
                "year": [
                    "int"
                ],
                "day": [
                    "int"
                ],
                "sampling": [
                    "int",
                    "str"
                ]
            }
        },
        "make_continuity_filter.is_present": {
            "name": "is_present",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "make_continuity_filter.check_value": {
            "name": "check_value",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "idx": []
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/wave_decomposition.py": {
        "zerofilled_bounds": {
            "name": "zerofilled_bounds",
            "location": 12,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "original_length": [
                    "int"
                ]
            }
        },
        "zerofilled_signal": {
            "name": "zerofilled_signal",
            "location": 17,
            "return": [],
            "arguments": {
                "original": [
                    "float",
                    "bool",
                    "set[str]"
                ]
            }
        },
        "original_signal": {
            "name": "original_signal",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "signal": [
                    "str"
                ],
                "original_length": [
                    "int",
                    "list[]",
                    "str"
                ]
            }
        },
        "ideal_signal_filter": {
            "name": "ideal_signal_filter",
            "location": 32,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "wave": [
                    "int",
                    "dict[, ]",
                    "tuple[typing.Union[int,int,int,int]]",
                    "BaseException",
                    "None",
                    "str"
                ],
                "sampling": [
                    "int"
                ]
            }
        },
        "wave_decomposition": {
            "name": "wave_decomposition",
            "location": 57,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "data_chunk": []
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/__init__.py": {},
    "iod-data-analyser-master/commands/artifacts/base_filtering/deduplicated_files.py": {
        "deduplicated_files": {
            "name": "deduplicated_files",
            "location": 10,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str",
                    "list[]"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/base_filtering/filtered_files.py": {},
    "iod-data-analyser-master/commands/artifacts/base_filtering/monotone_files.py": {
        "monotone_files": {
            "name": "monotone_files",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str",
                    "None",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/base_filtering/not_monotone_files.py": {
        "not_monotone_files": {
            "name": "not_monotone_files",
            "location": 8,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/base_filtering/unintersected_files.py": {
        "unintersected_files": {
            "name": "unintersected_files",
            "location": 12,
            "return": [
                "list[]"
            ],
            "arguments": {
                "source_marker": [
                    "str",
                    "typing.Callable[, ]",
                    "dict[, ]"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/artifacts/base_filtering/__init__.py": {},
    "iod-data-analyser-master/commands/filters/monotone.py": {
        "monotone": {
            "name": "monotone",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "parameter_name": [
                    "str",
                    "bool"
                ],
                "filename": [
                    "str",
                    "None"
                ],
                "source_marker": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/filters/__init__.py": {},
    "iod-data-analyser-master/commands/parsers/file_parser.py": {
        "slice_by": {
            "name": "slice_by",
            "location": 10,
            "return": [
                "list[]"
            ],
            "arguments": {
                "it": [
                    "int",
                    "list[str]"
                ],
                "n": [
                    "int",
                    "list[str]"
                ]
            }
        },
        "FileParser.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "RowParser": [],
                "filename": [
                    "bool"
                ],
                "shallow": [
                    "bool"
                ]
            }
        },
        "FileParser._parse": {
            "name": "_parse",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileParser.get": {
            "name": "get",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileParser.data": {
            "name": "data",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileParser.__repr__": {
            "name": "__repr__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileParserWindow.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "origin": [
                    "str",
                    "None",
                    "typing.Callable[, ]",
                    "typing.Sequence[str]"
                ],
                "sequence_filter": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/parsers/file_writer.py": {
        "FileWriter.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row_parser": [
                    "int",
                    "dict[str, str]",
                    "str",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, str]",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "FileWriter.reflect": {
            "name": "reflect",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileobject": []
            }
        }
    },
    "iod-data-analyser-master/commands/parsers/row_parser.py": {
        "NoFileSpecifiedError.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RowParser.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "RowParser.parse": {
            "name": "parse",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RowParser._parse": {
            "name": "_parse",
            "location": 33,
            "return": [
                "list[]",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "seed": []
            }
        },
        "RowParser.stringify": {
            "name": "stringify",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "typing.Type",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "RowParser.format_line": {
            "name": "format_line",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RowParser.names": {
            "name": "names",
            "location": 69,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RowParser.lines": {
            "name": "lines",
            "location": 73,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "iod-data-analyser-master/commands/parsers/__init__.py": {},
    "iod-data-analyser-master/commands/parsers/de2/sampled_nacs_row.py": {},
    "iod-data-analyser-master/commands/parsers/de2/source_nacs_row.py": {},
    "iod-data-analyser-master/commands/parsers/de2/source_wats_row.py": {},
    "iod-data-analyser-master/commands/parsers/de2/__init__.py": {},
    "iod-data-analyser-master/commands/settings/analysis.py": {},
    "iod-data-analyser-master/commands/settings/base.py": {},
    "iod-data-analyser-master/commands/settings/checks.py": {},
    "iod-data-analyser-master/commands/settings/de2.py": {},
    "iod-data-analyser-master/commands/settings/__init__.py": {},
    "iod-data-analyser-master/commands/tests/average_values.py": {},
    "iod-data-analyser-master/commands/tests/test_all_files.py": {
        "test_all_nacs_files": {
            "name": "test_all_nacs_files",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_all_wats_files": {
            "name": "test_all_wats_files",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_cache.py": {
        "test_function_will_be_called_once": {
            "name": "test_function_will_be_called_once",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cache_hash_property": {
            "name": "test_cache_hash_property",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "HashableObject.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valuable": [
                    "int",
                    "float"
                ],
                "invaluable": [
                    "int",
                    "float"
                ]
            }
        },
        "HashableObject.cache_hash": {
            "name": "cache_hash",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_function_will_be_called_once.func": {
            "name": "func",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_cache_hash_property.func": {
            "name": "func",
            "location": 32,
            "return": [],
            "arguments": {
                "input_value": []
            }
        }
    },
    "iod-data-analyser-master/commands/tests/test_de2_settings.py": {
        "test_source_nacs_selector": {
            "name": "test_source_nacs_selector",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_source_nacs_features": {
            "name": "test_source_nacs_features",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_source_wats_selector": {
            "name": "test_source_wats_selector",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_source_wats_features": {
            "name": "test_source_wats_features",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_files_of_the_day.py": {
        "test_files_of_the_day": {
            "name": "test_files_of_the_day",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_monotone_filter.py": {},
    "iod-data-analyser-master/commands/tests/test_moving_average.py": {
        "test_moving_average": {
            "name": "test_moving_average",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_moving_average_sequence.py": {
        "test_no_gaps_small_window": {
            "name": "test_no_gaps_small_window",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_gaps_large_window": {
            "name": "test_no_gaps_large_window",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gaps_small_window": {
            "name": "test_gaps_small_window",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gaps_large_window": {
            "name": "test_gaps_large_window",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_edge_gaps": {
            "name": "test_edge_gaps",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_parser_nacs.py": {
        "test_simple_nacs_parse": {
            "name": "test_simple_nacs_parse",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_parser_wats.py": {
        "test_simple_wats": {
            "name": "test_simple_wats",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_sampled_day.py": {
        "sampled_day_continuity_params": {
            "name": "sampled_day_continuity_params",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "source_marker": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "year": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "day": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "sampling": [
                    "int",
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_sampled_day_continuity_params_1": {
            "name": "test_sampled_day_continuity_params_1",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sampled_day_continuity_params_2": {
            "name": "test_sampled_day_continuity_params_2",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sampled_day_continuity_params_3": {
            "name": "test_sampled_day_continuity_params_3",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sampled_day_continuity_params_4": {
            "name": "test_sampled_day_continuity_params_4",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_sampled_day_adjust_sampling.py": {
        "test_adjust_sampling_empty": {
            "name": "test_adjust_sampling_empty",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_adjust_sampling_ones": {
            "name": "test_adjust_sampling_ones",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_adjust_sampling_twos": {
            "name": "test_adjust_sampling_twos",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_sampled_day_make_continuity_filter.py": {
        "test_make_continuity_filter_empty": {
            "name": "test_make_continuity_filter_empty",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_continuity_filter_o_dens": {
            "name": "test_make_continuity_filter_o_dens",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_continuity_filter_o_dens_he_dens": {
            "name": "test_make_continuity_filter_o_dens_he_dens",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_continuity_filter_o_dens_he_dens_ar_dens_1": {
            "name": "test_make_continuity_filter_o_dens_he_dens_ar_dens_1",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_continuity_filter_o_dens_he_dens_ar_dens_2": {
            "name": "test_make_continuity_filter_o_dens_he_dens_ar_dens_2",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_sampled_day_make_deltas.py": {
        "test_make_deltas_empty_array": {
            "name": "test_make_deltas_empty_array",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_deltas_single_point_array": {
            "name": "test_make_deltas_single_point_array",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_deltas_even_sequence": {
            "name": "test_make_deltas_even_sequence",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_deltas_fluctuated_sequence": {
            "name": "test_make_deltas_fluctuated_sequence",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/test_wave_decomposition.py": {},
    "iod-data-analyser-master/commands/tests/test_writer_nacs.py": {
        "test_writer_nacs": {
            "name": "test_writer_nacs",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_write_read": {
            "name": "test_write_read",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/__init__.py": {},
    "iod-data-analyser-master/commands/tests/base_filtering/test_artifact_deduplicated_files.py": {
        "test_deduplicated_files": {
            "name": "test_deduplicated_files",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/base_filtering/test_artifact_monotone_files.py": {
        "test_monotone_files": {
            "name": "test_monotone_files",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/base_filtering/test_artifact_not_monotone_files.py": {
        "test_not_monotone_files": {
            "name": "test_not_monotone_files",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/base_filtering/test_artifact_unintersected_files.py": {
        "test_unintersected_files": {
            "name": "test_unintersected_files",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/tests/base_filtering/__init__.py": {},
    "iod-data-analyser-master/commands/transformers/__init__.py": {},
    "iod-data-analyser-master/commands/utils/cache_property.py": {
        "cached_property.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ttl": [
                    "int"
                ]
            }
        },
        "cached_property.__call__": {
            "name": "__call__",
            "location": 43,
            "return": [
                "cached_property"
            ],
            "arguments": {
                "self": [],
                "fget": [],
                "doc": [
                    "None"
                ]
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "inst": [],
                "owner": []
            }
        }
    },
    "iod-data-analyser-master/commands/utils/chalk.py": {
        "_make_color_function": {
            "name": "_make_color_function",
            "location": 6,
            "return": [],
            "arguments": {
                "color": [
                    "str",
                    "typing.Iterable[]",
                    "bool"
                ]
            }
        },
        "_make_color_function.wrapped": {
            "name": "wrapped",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "msg": []
            }
        }
    },
    "iod-data-analyser-master/commands/utils/local_cache.py": {
        "LocalCache.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "None",
                    "str",
                    "dict[, ]"
                ],
                "force_reload": [
                    "bool"
                ],
                "cache_dir": []
            }
        },
        "LocalCache.__call__": {
            "name": "__call__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "LocalCache._hash": {
            "name": "_hash",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes"
                ]
            }
        },
        "LocalCache._filename": {
            "name": "_filename",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "hash": [
                    "str"
                ]
            }
        },
        "LocalCache._cache_result": {
            "name": "_cache_result",
            "location": 55,
            "return": [
                "dict[str, typing.Any]",
                "dict[, ]",
                "int",
                "None",
                "dict[str, object]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "hash": [
                    "str",
                    "typing.BinaryIO",
                    "list[]"
                ],
                "result": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "int",
                    "None",
                    "dict[str, object]",
                    "dict[str, str]"
                ]
            }
        },
        "LocalCache._recover_result": {
            "name": "_recover_result",
            "location": 60,
            "return": [
                "tuple[bool]",
                "tuple[typing.Optional[bool]]"
            ],
            "arguments": {
                "self": [],
                "hash": [
                    "str"
                ]
            }
        },
        "LocalCache._process_parameters": {
            "name": "_process_parameters",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocalCache._process_value": {
            "name": "_process_value",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "LocalCache.clear_cache": {
            "name": "clear_cache",
            "location": 81,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "list[]",
                    "None"
                ],
                "cache_dir": []
            }
        },
        "LocalCache.__call__.wrapper": {
            "name": "wrapper",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/commands/utils/logger.py": {},
    "iod-data-analyser-master/commands/utils/resolve_data_source.py": {
        "resolve_data_source": {
            "name": "resolve_data_source",
            "location": 5,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "source": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "iod-data-analyser-master/commands/utils/types.py": {},
    "iod-data-analyser-master/commands/utils/__init__.py": {},
    "iod-data-analyser-master/ionospheredata/configuration.py": {
        "isDir": {
            "name": "isDir",
            "location": 10,
            "return": [
                "S_ISDIR"
            ],
            "arguments": {
                "dirname": [
                    "str",
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "assertConfig": {
            "name": "assertConfig",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "statement": [
                    "str",
                    "None",
                    "typing.Callable[, ]",
                    "list[str]",
                    "int"
                ],
                "message": [
                    "typing.Text"
                ]
            }
        },
        "ensureDir": {
            "name": "ensureDir",
            "location": 19,
            "return": [],
            "arguments": {
                "dirname": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/consts.py": {},
    "iod-data-analyser-master/ionospheredata/settings.py": {},
    "iod-data-analyser-master/ionospheredata/__init__.py": {},
    "iod-data-analyser-master/ionospheredata/method/break_points.py": {
        "break_points": {
            "name": "break_points",
            "location": 4,
            "return": [],
            "arguments": {
                "ut": [],
                "sampling": [
                    "int",
                    "bytes",
                    "list[float]",
                    "list[]",
                    "typing.Sequence[typing.Any]",
                    "tuple[frozenset]"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/method/gravitation_wave.py": {
        "gravitation_wave": {
            "name": "gravitation_wave",
            "location": 9,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "concentration": []
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/method/moving_average.py": {
        "moving_average": {
            "name": "moving_average",
            "location": 4,
            "return": [],
            "arguments": {
                "x": [],
                "window_len": [],
                "split_by_nans": [
                    "bool"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/method/nyquist_theorem.py": {
        "nyquist_theorem": {
            "name": "nyquist_theorem",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "bool",
                    "dict[, ]"
                ],
                "time_span": [
                    "bool",
                    "dict[, ]"
                ],
                "length": [
                    "bool",
                    "dict[, ]"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/method/__init__.py": {},
    "iod-data-analyser-master/ionospheredata/tests/test_moving_average.py": {
        "test_no_gaps_small_window": {
            "name": "test_no_gaps_small_window",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_gaps_large_window": {
            "name": "test_no_gaps_large_window",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gaps_small_window": {
            "name": "test_gaps_small_window",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gaps_large_window": {
            "name": "test_gaps_large_window",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_edge_gaps": {
            "name": "test_edge_gaps",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/ionospheredata/tests/__init__.py": {},
    "iod-data-analyser-master/ionospheredata/utils/absolute_ut.py": {
        "absolute_ut": {
            "name": "absolute_ut",
            "location": 4,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "year": [],
                "day_of_year": [],
                "ms_of_day": [
                    "int"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/utils/cached_property.py": {
        "cached_property.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ttl": [
                    "int"
                ]
            }
        },
        "cached_property.__call__": {
            "name": "__call__",
            "location": 42,
            "return": [
                "cached_property"
            ],
            "arguments": {
                "self": [],
                "fget": [],
                "doc": [
                    "None"
                ]
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "inst": [],
                "owner": []
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/utils/list_datafiles.py": {
        "list_datafiles": {
            "name": "list_datafiles",
            "location": 6,
            "return": [
                "list[]"
            ],
            "arguments": {
                "dirname": [
                    "int",
                    "str",
                    "typing.IO",
                    "float"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/utils/local_preload.py": {
        "local_preload": {
            "name": "local_preload",
            "location": 8,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ],
                "caller": [
                    "str",
                    "typing.Container"
                ]
            }
        },
        "local_preload.calculate": {
            "name": "calculate",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/ionospheredata/utils/round.py": {
        "round": {
            "name": "round",
            "location": 4,
            "return": [],
            "arguments": {
                "x": [
                    "float"
                ]
            }
        }
    },
    "iod-data-analyser-master/ionospheredata/utils/__init__.py": {},
    "iod-data-analyser-master/postponed/a001_method_spectral_analysis.py": {},
    "iod-data-analyser-master/postponed/fft_moving_window.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "iod-data-analyser-master/postponed/Proba_BreakArias.py": {},
    "iod-data-analyser-master/postponed/SpectrSPREAD.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
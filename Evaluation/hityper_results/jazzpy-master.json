{
    "jazzpy-master/jazz.py": {},
    "jazzpy-master/setup.py": {},
    "jazzpy-master/jazzpy/main.py": {
        "JazzPy.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JazzPy._load_screen": {
            "name": "_load_screen",
            "location": 38,
            "return": [
                "int",
                "typing.Sequence[tuple[typing.Union[typing.Any,typing.Any]]]",
                "dict[, ]",
                "float"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "JazzPy._load_scene_manager": {
            "name": "_load_scene_manager",
            "location": 57,
            "return": [
                "SceneManager"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "JazzPy._before_gameover_hook": {
            "name": "_before_gameover_hook",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JazzPy._check_for_gameover": {
            "name": "_check_for_gameover",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JazzPy._wait_for_next_frame": {
            "name": "_wait_for_next_frame",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JazzPy._update_state": {
            "name": "_update_state",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JazzPy.play": {
            "name": "play",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jazzpy-master/jazzpy/__init__.py": {},
    "jazzpy-master/jazzpy/exceptions/levels.py": {},
    "jazzpy-master/jazzpy/exceptions/spritesheets.py": {},
    "jazzpy-master/jazzpy/exceptions/__init__.py": {},
    "jazzpy-master/jazzpy/interfaces/observable.py": {
        "ObserverMixin.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ObserverMixin.update": {
            "name": "update",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observable_state": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "int",
                    "typing.Sequence[str]"
                ],
                "observable_id": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "int",
                    "typing.Sequence[str]"
                ]
            }
        },
        "ObservableMixin.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ObservableMixin.add_observer": {
            "name": "add_observer",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observer": [
                    "int"
                ]
            }
        },
        "ObservableMixin._notify_observers": {
            "name": "_notify_observers",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observable_state": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ],
                "observable_id": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/interfaces/__init__.py": {},
    "jazzpy-master/jazzpy/levels/level.py": {
        "Level.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spritesheet_file": [
                    "str",
                    "dict[int, str]",
                    "int",
                    "None",
                    "list[str]"
                ],
                "level_platforms_file": [
                    "str",
                    "None"
                ],
                "level_music_file": [
                    "str",
                    "None"
                ],
                "platforms_width": [
                    "int"
                ],
                "platforms_height": [
                    "int",
                    "float",
                    "dict[str, tuple[typing.Union[str,int,int]]]",
                    "dict[str, tuple[typing.Union[str,str,typing.Any]]]",
                    "tuple[]",
                    "str"
                ],
                "spritesheet_matrix_dimensions": [
                    "None",
                    "str",
                    "dict[int, str]",
                    "int",
                    "list[str]"
                ]
            }
        },
        "Level.build": {
            "name": "build",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Level.level_char_code_to_platform": {
            "name": "level_char_code_to_platform",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level_char_code": [
                    "str",
                    "list[str]",
                    "None"
                ],
                "level_x": [
                    "str",
                    "list[str]",
                    "None"
                ],
                "level_y": [
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/levels/__init__.py": {},
    "jazzpy-master/jazzpy/levels/diamondus/diamondus_level_one.py": {
        "DiamondusLevelOne._get_level_char_code_info": {
            "name": "_get_level_char_code_info",
            "location": 18,
            "return": [
                "dict[typing.Text, bool]"
            ],
            "arguments": {
                "self": [],
                "level_char_code": []
            }
        },
        "DiamondusLevelOne.level_char_code_to_platform": {
            "name": "level_char_code_to_platform",
            "location": 41,
            "return": [
                "None",
                "Platform"
            ],
            "arguments": {
                "self": [],
                "level_char_code": [
                    "str"
                ],
                "level_x": [
                    "int",
                    "str"
                ],
                "level_y": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/levels/diamondus/__init__.py": {},
    "jazzpy-master/jazzpy/levels/diamondus/music/__init__.py": {},
    "jazzpy-master/jazzpy/levels/diamondus/platform_codes/__init__.py": {},
    "jazzpy-master/jazzpy/levels/diamondus/spritesheets/__init__.py": {},
    "jazzpy-master/jazzpy/scenes/abstract_scene.py": {
        "Scene.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scene.update": {
            "name": "update",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scene.render": {
            "name": "render",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scene._get_pressed_keys": {
            "name": "_get_pressed_keys",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scene._get_all_events": {
            "name": "_get_all_events",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "jazzpy-master/jazzpy/scenes/manager.py": {
        "SceneManager.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_scene": [
                    "int",
                    "float"
                ]
            }
        },
        "SceneManager.update_current_scene": {
            "name": "update_current_scene",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SceneManager.current_scene_captured_quit_event": {
            "name": "current_scene_captured_quit_event",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "jazzpy-master/jazzpy/scenes/play_scene.py": {
        "PlayScene.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [
                    "int",
                    "str",
                    "typing.Iterator"
                ]
            }
        },
        "PlayScene._get_pressed_keys": {
            "name": "_get_pressed_keys",
            "location": 57,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayScene._filter_sprites_out_of_screen": {
            "name": "_filter_sprites_out_of_screen",
            "location": 81,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "sprites_list": [
                    "str",
                    "bytes"
                ],
                "x_extension": [
                    "int"
                ],
                "y_extension": [
                    "int"
                ]
            }
        },
        "PlayScene.update": {
            "name": "update",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayScene.render": {
            "name": "render",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jazzpy-master/jazzpy/scenes/__init__.py": {},
    "jazzpy-master/jazzpy/settings/bullet.py": {},
    "jazzpy-master/jazzpy/settings/general.py": {},
    "jazzpy-master/jazzpy/settings/hud.py": {},
    "jazzpy-master/jazzpy/settings/jazz.py": {},
    "jazzpy-master/jazzpy/settings/levels.py": {},
    "jazzpy-master/jazzpy/settings/physics.py": {},
    "jazzpy-master/jazzpy/settings/scenes.py": {},
    "jazzpy-master/jazzpy/settings/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/jazz/jazz.py": {
        "Jazz.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level_x": [
                    "list[str]"
                ],
                "level_y": [
                    "list[str]"
                ],
                "hud": [
                    "float",
                    "int",
                    "str",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "Jazz._get_running_sprite": {
            "name": "_get_running_sprite",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Jazz._change_sprite": {
            "name": "_change_sprite",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dimensions": []
            }
        },
        "Jazz._platform_collision_callback": {
            "name": "_platform_collision_callback",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "speed_x": [
                    "int"
                ],
                "speed_y": [
                    "int"
                ],
                "platform_sprite": [
                    "float",
                    "int"
                ]
            }
        },
        "Jazz._enemy_collision_callback": {
            "name": "_enemy_collision_callback",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enemy_sprite": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Jazz._detect_collision": {
            "name": "_detect_collision",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sprite_collision_candidates": [
                    "bool",
                    "str"
                ],
                "candidate_type": [
                    "str",
                    "int",
                    "float"
                ],
                "is_x_axis": [
                    "bool",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "list[str]"
                ]
            }
        },
        "Jazz._move_x_axis": {
            "name": "_move_x_axis",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "left": [],
                "right": []
            }
        },
        "Jazz._move_y_axis": {
            "name": "_move_y_axis",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "alt": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Jazz._change_shooting_state": {
            "name": "_change_shooting_state",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "space": [
                    "Exception",
                    "None",
                    "bool"
                ]
            }
        },
        "Jazz.update": {
            "name": "update",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pressed_keys": [
                    "str",
                    "int",
                    "tuple[int]"
                ],
                "platforms": [
                    "str",
                    "tuple[]",
                    "int"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/sprites/jazz/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/jazz/spritesheets/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/misc/bullet.py": {
        "Bullet.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level_x": [
                    "int",
                    "str"
                ],
                "level_y": [
                    "int",
                    "str"
                ],
                "direction": [
                    "float",
                    "int",
                    "str",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "Bullet.update": {
            "name": "update",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "platforms": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "Bullet.collide": {
            "name": "collide",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "speed_x": [
                    "bool"
                ],
                "speed_y": [
                    "bool",
                    "typing.Iterable[]",
                    "str"
                ],
                "platforms": [
                    "str"
                ]
            }
        },
        "Bullet._change_sprite": {
            "name": "_change_sprite",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jazzpy-master/jazzpy/sprites/misc/hud.py": {
        "Hud.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hud.get_position": {
            "name": "get_position",
            "location": 49,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Hud._get_golden_number_image": {
            "name": "_get_golden_number_image",
            "location": 52,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "number": [
                    "int"
                ],
                "width": [
                    "None",
                    "float",
                    "str"
                ],
                "height": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "Hud.update": {
            "name": "update",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observable_state": [
                    "dict[, ]"
                ],
                "observable_id": [
                    "str",
                    "list[str]",
                    "set[str]",
                    "dict[, ]"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/sprites/misc/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/misc/spritesheets/__init__.py": {},
    "jazzpy-master/jazzpy/sprites/platforms/platforms.py": {
        "Platform.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level_x": [
                    "int",
                    "float"
                ],
                "level_y": [
                    "int",
                    "float"
                ],
                "image": [],
                "is_collidable": [
                    "bool"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/sprites/platforms/__init__.py": {},
    "jazzpy-master/jazzpy/support/camera.py": {
        "Camera.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "screen_width": [
                    "int",
                    "None",
                    "float"
                ],
                "screen_height": [
                    "int",
                    "tuple[]",
                    "list[typing.Any]",
                    "None",
                    "str",
                    "float"
                ],
                "level_width": [
                    "int",
                    "None",
                    "float"
                ],
                "level_height": [
                    "int",
                    "tuple[]",
                    "list[typing.Any]",
                    "None",
                    "str",
                    "float"
                ]
            }
        },
        "Camera.apply_offset": {
            "name": "apply_offset",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Camera.compute_offset": {
            "name": "compute_offset",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center_target": [
                    "list[]",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "list[str]",
                    "float"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/support/spritesheet.py": {
        "SpriteSheet.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_name": [
                    "str",
                    "bool"
                ],
                "spritesheet_matrix_dimensions": [
                    "None",
                    "bool",
                    "float"
                ],
                "default_sprite_width": [],
                "default_sprite_height": []
            }
        },
        "SpriteSheet._compute_spritesheet_location": {
            "name": "_compute_spritesheet_location",
            "location": 40,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "self": [],
                "spritesheet_row": [
                    "int"
                ],
                "spritesheet_col": [
                    "int",
                    "float"
                ]
            }
        },
        "SpriteSheet.get_image": {
            "name": "get_image",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "spritesheet_locations": [
                    "tuple[]",
                    "str",
                    "int"
                ],
                "dimensions": [
                    "None",
                    "tuple[]",
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "int",
                    "float"
                ]
            }
        },
        "SpriteSheet.get_image_by_row_and_col": {
            "name": "get_image_by_row_and_col",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "spritesheet_row": [
                    "int",
                    "str",
                    "list[str]",
                    "None",
                    "list[int]"
                ],
                "spritesheet_col": [
                    "int",
                    "str",
                    "list[str]",
                    "None",
                    "list[int]"
                ],
                "dimensions": [
                    "None",
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "float",
                    "list[float]"
                ]
            }
        }
    },
    "jazzpy-master/jazzpy/support/__init__.py": {},
    "jazzpy-master/tests/conftest.py": {
        "pytest_assertrepr_compare": {
            "name": "pytest_assertrepr_compare",
            "location": 6,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "config": [
                    "dict[, ]",
                    "typing.Type",
                    "list[dict[, ]]",
                    "str",
                    "bool"
                ],
                "op": [
                    "bytes",
                    "dict[, ]",
                    "bool",
                    "dict[str, int]",
                    "None",
                    "list[]",
                    "dict[str, list[str]]"
                ],
                "left": [
                    "bytes",
                    "dict[, ]",
                    "bool",
                    "dict[str, int]",
                    "None",
                    "list[]",
                    "dict[str, list[str]]"
                ],
                "right": [
                    "bytes",
                    "dict[, ]",
                    "bool",
                    "dict[str, int]",
                    "None",
                    "list[]",
                    "dict[str, list[str]]"
                ]
            }
        }
    },
    "jazzpy-master/tests/__init__.py": {},
    "jazzpy-master/tests/integration/__init__.py": {},
    "jazzpy-master/tests/resources/__init__.py": {},
    "jazzpy-master/tests/resources/levels/__init__.py": {},
    "jazzpy-master/tests/unit/__init__.py": {},
    "jazzpy-master/tests/unit/levels/test_diamondus_level_one.py": {
        "test_parse_level": {
            "name": "test_parse_level",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_SpriteSheet": [
                    "str",
                    "bool"
                ],
                "mocked_level_char_code_to_platform": []
            }
        }
    },
    "jazzpy-master/tests/unit/levels/__init__.py": {},
    "jazzpy-master/tests/unit/models/__init__.py": {},
    "jazzpy-master/tests/unit/spritesheets/test_spritesheet.py": {
        "test_should_get_pygame_surface_image_with_no_extra_dimensions": {
            "name": "test_should_get_pygame_surface_image_with_no_extra_dimensions",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [],
                "mocked_surface": [],
                "mocked_scale": []
            }
        },
        "test_should_get_pygame_surface_image_with_extra_dimensions": {
            "name": "test_should_get_pygame_surface_image_with_extra_dimensions",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [],
                "mocked_surface": [],
                "mocked_scale": []
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_row": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_row",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_row_too_big": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_row_too_big",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_row_type": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_row_type",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_col": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_col",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_col_too_big": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_col_too_big",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_should_compute_the_right_spritesheet_x_and_y_impossible_col_type": {
            "name": "test_should_compute_the_right_spritesheet_x_and_y_impossible_col_type",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_image_load": [
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "jazzpy-master/tests/unit/spritesheets/__init__.py": {}
}
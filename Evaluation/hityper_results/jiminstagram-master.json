{
    "jiminstagram-master/manage.py": {},
    "jiminstagram-master/config/urls.py": {},
    "jiminstagram-master/config/wsgi.py": {},
    "jiminstagram-master/config/__init__.py": {},
    "jiminstagram-master/config/settings/base.py": {},
    "jiminstagram-master/config/settings/local.py": {},
    "jiminstagram-master/config/settings/production.py": {},
    "jiminstagram-master/config/settings/test.py": {},
    "jiminstagram-master/config/settings/__init__.py": {},
    "jiminstagram-master/jimistagram/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "jiminstagram-master/jimistagram/views.py": {
        "ReactAppView.get": {
            "name": "get",
            "location": 9,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/__init__.py": {},
    "jiminstagram-master/jimistagram/contrib/__init__.py": {},
    "jiminstagram-master/jimistagram/contrib/sites/__init__.py": {},
    "jiminstagram-master/jimistagram/contrib/sites/migrations/0001_initial.py": {},
    "jiminstagram-master/jimistagram/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "jiminstagram-master/jimistagram/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/contrib/sites/migrations/__init__.py": {},
    "jiminstagram-master/jimistagram/images/admin.py": {},
    "jiminstagram-master/jimistagram/images/apps.py": {},
    "jiminstagram-master/jimistagram/images/models.py": {
        "Image.like_count": {
            "name": "like_count",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.comment_count": {
            "name": "comment_count",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.natural_time": {
            "name": "natural_time",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.__str__": {
            "name": "__str__",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Like.__str__": {
            "name": "__str__",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/images/serializers.py": {
        "ImageSerializer.get_is_liked": {
            "name": "get_is_liked",
            "location": 94,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bytes",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/images/tests.py": {},
    "jiminstagram-master/jimistagram/images/urls.py": {},
    "jiminstagram-master/jimistagram/images/views.py": {
        "Images.get": {
            "name": "get",
            "location": 12,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "None",
                    "list[aw_core.models.Event]",
                    "int",
                    "bytes"
                ],
                "format": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        },
        "Images.post": {
            "name": "post",
            "location": 40,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "format": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "Likeimage.get": {
            "name": "get",
            "location": 58,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "bytes",
                    "str",
                    "list[tuple[typing.Union[str,str]]]",
                    "list[str]"
                ],
                "image_id": [
                    "int",
                    "str",
                    "None"
                ],
                "format": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "Likeimage.post": {
            "name": "post",
            "location": 73,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "None",
                    "int"
                ],
                "image_id": [
                    "int",
                    "str",
                    "None"
                ],
                "format": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "UnLikeImage.delete": {
            "name": "delete",
            "location": 101,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "image_id": [
                    "int",
                    "str",
                    "None"
                ],
                "format": [
                    "None",
                    "str"
                ]
            }
        },
        "CommentOnImage.post": {
            "name": "post",
            "location": 126,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "image_id": [
                    "int",
                    "str",
                    "None"
                ],
                "format": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Comment.delete": {
            "name": "delete",
            "location": 152,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int"
                ],
                "comment_id": [
                    "bool",
                    "bytes"
                ],
                "format": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "Search.get": {
            "name": "get",
            "location": 166,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int"
                ],
                "format": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        },
        "ModerateComments.delete": {
            "name": "delete",
            "location": 188,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "image_id": [
                    "bool",
                    "list[S]",
                    "dict[str, typing.Any]"
                ],
                "comment_id": [
                    "bool",
                    "list[S]",
                    "dict[str, typing.Any]"
                ],
                "format": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "ImageDetail.find_own_image": {
            "name": "find_own_image",
            "location": 204,
            "return": [
                "int",
                "list[]",
                "str",
                "bytes",
                "dict[, ]",
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": [
                    "int",
                    "str"
                ],
                "user": [
                    "int",
                    "str"
                ]
            }
        },
        "ImageDetail.get": {
            "name": "get",
            "location": 211,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int",
                    "None",
                    "dict[, ]"
                ],
                "image_id": [
                    "str",
                    "int"
                ],
                "format": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "ImageDetail.put": {
            "name": "put",
            "location": 224,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int",
                    "None"
                ],
                "image_id": [
                    "str",
                    "bool",
                    "bytes",
                    "None"
                ],
                "format": [
                    "None",
                    "str"
                ]
            }
        },
        "ImageDetail.delete": {
            "name": "delete",
            "location": 245,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "image_id": [
                    "str",
                    "None",
                    "int"
                ],
                "format": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/images/__init__.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0001_initial.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0002_like_test.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0003_remove_like_test.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0004_auto_20181020_2338.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0005_auto_20181021_0327.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0006_auto_20181022_0142.py": {},
    "jiminstagram-master/jimistagram/images/migrations/0007_image_tags.py": {},
    "jiminstagram-master/jimistagram/images/migrations/__init__.py": {},
    "jiminstagram-master/jimistagram/notifications/admin.py": {},
    "jiminstagram-master/jimistagram/notifications/apps.py": {},
    "jiminstagram-master/jimistagram/notifications/models.py": {
        "Notification.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/notifications/serializers.py": {},
    "jiminstagram-master/jimistagram/notifications/tests.py": {},
    "jiminstagram-master/jimistagram/notifications/urls.py": {},
    "jiminstagram-master/jimistagram/notifications/views.py": {
        "create_notification": {
            "name": "create_notification",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "creator": [
                    "str",
                    "int"
                ],
                "to": [
                    "str",
                    "int"
                ],
                "notification_type": [
                    "str",
                    "int"
                ],
                "image": [
                    "None",
                    "str",
                    "int"
                ],
                "comment": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Notifications.get": {
            "name": "get",
            "location": 9,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int",
                    "typing.Callable[, ]",
                    "dict[, ]"
                ],
                "format": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/notifications/__init__.py": {},
    "jiminstagram-master/jimistagram/notifications/migrations/0001_initial.py": {},
    "jiminstagram-master/jimistagram/notifications/migrations/0002_auto_20181022_0547.py": {},
    "jiminstagram-master/jimistagram/notifications/migrations/0003_notification_comment.py": {},
    "jiminstagram-master/jimistagram/notifications/migrations/0004_auto_20181031_0101.py": {},
    "jiminstagram-master/jimistagram/notifications/migrations/__init__.py": {},
    "jiminstagram-master/jimistagram/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ],
                "sociallogin": [
                    "dict[, ]"
                ]
            }
        },
        "SocialAccountAdapter.pre_social_login": {
            "name": "pre_social_login",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool"
                ],
                "sociallogin": [
                    "Exception",
                    "str",
                    "None"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/users/admin.py": {},
    "jiminstagram-master/jimistagram/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.post_count": {
            "name": "post_count",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.followers_count": {
            "name": "followers_count",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.following_count": {
            "name": "following_count",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/serializers.py": {
        "ListUserSerializer.get_following": {
            "name": "get_following",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bytes",
                    "str"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/users/urls.py": {},
    "jiminstagram-master/jimistagram/users/views.py": {
        "ExploreUsers.get": {
            "name": "get",
            "location": 12,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int"
                ],
                "format": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        },
        "FollowUser.post": {
            "name": "post",
            "location": 23,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "None"
                ],
                "user_id": [
                    "int",
                    "str"
                ],
                "format": [
                    "None",
                    "int",
                    "typing.Iterable[int]"
                ]
            }
        },
        "UnFollowUser.post": {
            "name": "post",
            "location": 45,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "None"
                ],
                "user_id": [
                    "int",
                    "str"
                ],
                "format": [
                    "None",
                    "int",
                    "typing.Iterable[int]"
                ]
            }
        },
        "UserProfile.get_user": {
            "name": "get_user",
            "location": 63,
            "return": [
                "dict[str, str]",
                "str",
                "int",
                "list[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "UserProfile.get": {
            "name": "get",
            "location": 70,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "dict[, ]"
                ],
                "username": [
                    "str",
                    "None",
                    "bool"
                ],
                "fomat": [
                    "None",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "UserProfile.put": {
            "name": "put",
            "location": 82,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "username": [
                    "str",
                    "None",
                    "int"
                ],
                "format": [
                    "None",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "UserFollowers.get": {
            "name": "get",
            "location": 113,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "fomat": [
                    "None",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "UserFollowing.get": {
            "name": "get",
            "location": 129,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "fomat": [
                    "None",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "Search.get": {
            "name": "get",
            "location": 145,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "bytes"
                ],
                "format": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "list[]"
                ]
            }
        },
        "ChangePassword.put": {
            "name": "put",
            "location": 160,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bytes"
                ],
                "username": [
                    "str",
                    "int"
                ],
                "format": [
                    "None",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/users/__init__.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0001_initial.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0002_auto_20181017_0239.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0003_remove_user_gender.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0004_auto_20181017_0302.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0005_auto_20181017_0303.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0006_auto_20181019_0316.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0007_user_profile_image.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0008_auto_20181203_0659.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0009_auto_20181203_0700.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0010_auto_20190104_1148.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0011_auto_20190104_1151.py": {},
    "jiminstagram-master/jimistagram/users/migrations/0012_auto_20190330_0729.py": {},
    "jiminstagram-master/jimistagram/users/migrations/__init__.py": {},
    "jiminstagram-master/jimistagram/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        }
    },
    "jiminstagram-master/jimistagram/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "jiminstagram-master/jimistagram/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int"
                ],
                "request_factory": []
            }
        }
    },
    "jiminstagram-master/jimistagram/users/tests/__init__.py": {}
}
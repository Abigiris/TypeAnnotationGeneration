{
    "json_kata-master/python/build.py": {
        "git_leaks": {
            "name": "git_leaks",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "git_secrets": {
            "name": "git_secrets",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "clean": {
            "name": "clean",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "formatting": {
            "name": "formatting",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "compile_py": {
            "name": "compile_py",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "prospector": {
            "name": "prospector",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "detect_secrets": {
            "name": "detect_secrets",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "lint": {
            "name": "lint",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "nose_tests": {
            "name": "nose_tests",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "config_pythonpath": {
            "name": "config_pythonpath",
            "location": 269,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "coverage": {
            "name": "coverage",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "docs": {
            "name": "docs",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pip_check": {
            "name": "pip_check",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "compile_mark_down": {
            "name": "compile_mark_down",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "mypy": {
            "name": "mypy",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pin_dependencies": {
            "name": "pin_dependencies",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "jiggle_version": {
            "name": "jiggle_version",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "check_setup_py": {
            "name": "check_setup_py",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "dead_code": {
            "name": "dead_code",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "package": {
            "name": "package",
            "location": 442,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "gemfury": {
            "name": "gemfury",
            "location": 459,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pre_commit_hook": {
            "name": "pre_commit_hook",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pre_push_hook": {
            "name": "pre_push_hook",
            "location": 515,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "do_check_manifest": {
            "name": "do_check_manifest",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "output_file_name": [
                    "str"
                ],
                "env": [
                    "str"
                ]
            }
        },
        "check_manifest": {
            "name": "check_manifest",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "echo": {
            "name": "echo",
            "location": 557,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "json_kata-master/python/build_utils.py": {
        "check_is_aws": {
            "name": "check_is_aws",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "oh_never_mind": {
            "name": "oh_never_mind",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "what": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "has_source_code_tree_changed": {
            "name": "has_source_code_tree_changed",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "task_name": [
                    "str",
                    "None",
                    "typing.Callable[str, None]"
                ],
                "expect_file": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "skip_if_no_change": {
            "name": "skip_if_no_change",
            "location": 113,
            "return": [],
            "arguments": {
                "name": [
                    "bool",
                    "list[str]",
                    "list[dict[str, typing.Any]]",
                    "str"
                ],
                "expect_files": [
                    "None",
                    "bool",
                    "list[str]",
                    "list[dict[str, typing.Any]]",
                    "str"
                ]
            }
        },
        "execute_with_environment": {
            "name": "execute_with_environment",
            "location": 132,
            "return": [],
            "arguments": {
                "command": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ],
                "env": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "execute_get_text": {
            "name": "execute_get_text",
            "location": 143,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "str"
                ]
            }
        },
        "get_packages": {
            "name": "get_packages",
            "location": 177,
            "return": [
                "tuple[typing.Union[list[typing.Text],bool]]"
            ],
            "arguments": {}
        },
        "get_versions": {
            "name": "get_versions",
            "location": 192,
            "return": [
                "list[Version]"
            ],
            "arguments": {}
        },
        "run_gitleaks": {
            "name": "run_gitleaks",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_truffle_hog": {
            "name": "run_truffle_hog",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BuildState.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "what": [
                    "str"
                ],
                "where": [
                    "float",
                    "int"
                ]
            }
        },
        "BuildState.oh_never_mind": {
            "name": "oh_never_mind",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildState.has_source_code_tree_changed": {
            "name": "has_source_code_tree_changed",
            "location": 59,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "skip_if_no_change.real_decorator": {
            "name": "real_decorator",
            "location": 115,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "skip_if_no_change.real_decorator.wrapper": {
            "name": "wrapper",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "json_kata-master/python/setup.py": {},
    "json_kata-master/python/simple_calls/main.py": {
        "fetch": {
            "name": "fetch",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "single": {
            "name": "single",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "time_it.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "show": [
                    "bool"
                ]
            }
        },
        "time_it.__enter__": {
            "name": "__enter__",
            "location": 25,
            "return": [
                "time_it"
            ],
            "arguments": {
                "self": []
            }
        },
        "time_it.format_time": {
            "name": "format_time",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "seconds": [
                    "str",
                    "list[]",
                    "int"
                ]
            }
        },
        "time_it.elapsed": {
            "name": "elapsed",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "time_it.__exit__": {
            "name": "__exit__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "json_kata-master/python/simple_calls/parallel_calls.py": {
        "fetch": {
            "name": "fetch",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "parallel_processes": {
            "name": "parallel_processes",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "parallel_threads": {
            "name": "parallel_threads",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "parallel_threads_all_at_once": {
            "name": "parallel_threads_all_at_once",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "count": []
            }
        },
        "run": {
            "name": "run",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "json_kata-master/python/simple_calls/tests.py": {
        "test_single": {
            "name": "test_single",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "json_kata-master/python/simple_calls/time_it_class.py": {
        "time_it.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "show": [
                    "bool"
                ]
            }
        },
        "time_it.__enter__": {
            "name": "__enter__",
            "location": 27,
            "return": [
                "time_it"
            ],
            "arguments": {
                "self": []
            }
        },
        "time_it.format_time": {
            "name": "format_time",
            "location": 33,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "seconds": [
                    "str",
                    "list[]",
                    "int"
                ]
            }
        },
        "time_it.elapsed": {
            "name": "elapsed",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "time_it.__exit__": {
            "name": "__exit__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        }
    },
    "json_kata-master/python/simple_calls/_version.py": {},
    "json_kata-master/python/simple_calls/__init__.py": {}
}
{
    "kongman-master/setup.py": {},
    "kongman-master/kong/acls.py": {
        "Acls.wrap": {
            "name": "wrap",
            "location": 7,
            "return": [
                "Acl"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        }
    },
    "kongman-master/kong/certificates.py": {
        "Certificates.wrap": {
            "name": "wrap",
            "location": 7,
            "return": [
                "Certificate"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "Certificate.add_sni": {
            "name": "add_sni",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        }
    },
    "kongman-master/kong/cli.py": {
        "kong": {
            "name": "kong",
            "location": 39,
            "return": [],
            "arguments": {
                "ctx": [],
                "admin_url": [
                    "str",
                    "None"
                ],
                "admin_key": [
                    "str",
                    "None"
                ],
                "key_auth": [
                    "str",
                    "bool",
                    "None"
                ],
                "yaml": [
                    "str",
                    "bool"
                ],
                "output": [
                    "str",
                    "None"
                ],
                "version": [
                    "bool",
                    "str"
                ]
            }
        },
        "_run": {
            "name": "_run",
            "location": 50,
            "return": [],
            "arguments": {
                "coro": [
                    "bool"
                ]
            }
        },
        "_output": {
            "name": "_output",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "response": [],
                "query": [
                    "dict[, ]",
                    "typing.Callable[..., collections.abc.Awaitable[dict[, ]]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "kongman-master/kong/client.py": {
        "Kong.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "None",
                    "str",
                    "list[]"
                ],
                "session": [
                    "None",
                    "str",
                    "bool"
                ],
                "admin_key": [
                    "None",
                    "bytes",
                    "list[str]",
                    "list[]"
                ]
            }
        },
        "Kong.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Kong.cli": {
            "name": "cli",
            "location": 41,
            "return": [
                "Kong"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kongman-master/kong/components.py": {
        "KongResponseError.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "list[dict[, ]]",
                    "dict[str, typing.Any]"
                ],
                "message": [
                    "typing.Text"
                ]
            }
        },
        "KongResponseError.status": {
            "name": "status",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KongResponseError.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Component.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "typing.Callable[, ]",
                    "str",
                    "set[str]",
                    "dict[str, str]",
                    "None",
                    "int"
                ],
                "name": [
                    "None",
                    "str",
                    "bool",
                    "Exception",
                    "typing.Callable[..., None]",
                    "list[dict[str, str]]"
                ]
            }
        },
        "Component.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.cli": {
            "name": "cli",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.url": {
            "name": "url",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Component.execute": {
            "name": "execute",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "None",
                    "dict[, ]"
                ],
                "method": [
                    "None",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Component.apply_json": {
            "name": "apply_json",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "CrudComponent.get_list": {
            "name": "get_list",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.get": {
            "name": "get",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "list[int]",
                    "int",
                    "None"
                ]
            }
        },
        "CrudComponent.has": {
            "name": "has",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bytes",
                    "list[int]",
                    "int"
                ]
            }
        },
        "CrudComponent.create": {
            "name": "create",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "skip_error": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "CrudComponent.update": {
            "name": "update",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "CrudComponent.delete": {
            "name": "delete",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "CrudComponent.wrap_list": {
            "name": "wrap_list",
            "location": 80,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "list[]"
                ]
            }
        },
        "CrudComponent.wrap": {
            "name": "wrap",
            "location": 83,
            "return": [
                "int",
                "bytes",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "KongEntity.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "str",
                    "dict[str, dict[, ]]",
                    "float",
                    "tuple[typing.Union[list[typing.Any],list[typing.Any]]]"
                ],
                "data": [
                    "str",
                    "int",
                    "typing.Iterable[]",
                    "typing.TextIO",
                    "bytes"
                ]
            }
        },
        "KongEntity.__getitem__": {
            "name": "__getitem__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "dict[str, typing.Any]",
                    "typing.Type",
                    "typing.Collection",
                    "dict[, ]",
                    "list[]",
                    "typing.MutableMapping",
                    "str"
                ]
            }
        },
        "KongEntity.__contains__": {
            "name": "__contains__",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "bool"
                ]
            }
        },
        "KongEntity.cli": {
            "name": "cli",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.id": {
            "name": "id",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.url": {
            "name": "url",
            "location": 115,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.__repr__": {
            "name": "__repr__",
            "location": 118,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.get": {
            "name": "get",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "float"
                ],
                "default": [
                    "None",
                    "str",
                    "float"
                ]
            }
        },
        "KongEntity.execute": {
            "name": "execute",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "None",
                    "dict[, ]"
                ],
                "method": [
                    "None",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "ServiceEntity.url": {
            "name": "url",
            "location": 130,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceEntity.get_list": {
            "name": "get_list",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kongman-master/kong/consumers.py": {
        "Consumers.wrap": {
            "name": "wrap",
            "location": 5,
            "return": [
                "Consumer"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "Consumer.username": {
            "name": "username",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Consumer.create_jwt": {
            "name": "create_jwt",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Consumer.get_jwt": {
            "name": "get_jwt",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "Consumer.delete_jwt": {
            "name": "delete_jwt",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "Consumer.create_key_auth": {
            "name": "create_key_auth",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Consumer.delete_key_auth": {
            "name": "delete_key_auth",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "Consumer.create_acls": {
            "name": "create_acls",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "group": [
                    "dict[, ]"
                ]
            }
        },
        "Consumer.delete_acls": {
            "name": "delete_acls",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "Consumer.acls": {
            "name": "acls",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kongman-master/kong/plugins.py": {
        "PluginMixin.wrap": {
            "name": "wrap",
            "location": 5,
            "return": [
                "Plugin"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "int",
                    "list[str]",
                    "list[bytes]"
                ]
            }
        },
        "PluginMixin.url": {
            "name": "url",
            "location": 9,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PluginMixin.get_list": {
            "name": "get_list",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PluginMixin.root_plugin": {
            "name": "root_plugin",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "plugin": [
                    "str"
                ]
            }
        }
    },
    "kongman-master/kong/routes.py": {
        "ServiceRoutes.wrap": {
            "name": "wrap",
            "location": 12,
            "return": [
                "Route"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "ServiceRoutes.create": {
            "name": "create",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "skip_error": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "Route.plugins": {
            "name": "plugins",
            "location": 49,
            "return": [
                "RoutePlugins"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kongman-master/kong/services.py": {
        "Services.wrap": {
            "name": "wrap",
            "location": 14,
            "return": [
                "Service"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "Service.plugins": {
            "name": "plugins",
            "location": 63,
            "return": [
                "ServicePlugins"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service.routes": {
            "name": "routes",
            "location": 67,
            "return": [
                "ServiceRoutes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service.name": {
            "name": "name",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Service.host": {
            "name": "host",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kongman-master/kong/snis.py": {
        "Snis.wrap": {
            "name": "wrap",
            "location": 7,
            "return": [
                "Sni"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        }
    },
    "kongman-master/kong/utils.py": {
        "as_list": {
            "name": "as_list",
            "location": 5,
            "return": [],
            "arguments": {
                "key": [
                    "bytes",
                    "str",
                    "typing.Iterable[]",
                    "typing.Type",
                    "int"
                ],
                "data": []
            }
        },
        "local_ip": {
            "name": "local_ip",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "as_params": {
            "name": "as_params",
            "location": 24,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        }
    },
    "kongman-master/kong/__init__.py": {},
    "kongman-master/tests/conftest.py": {
        "loop": {
            "name": "loop",
            "location": 13,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    },
    "kongman-master/tests/test_cli.py": {
        "test_empty": {
            "name": "test_empty",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_plugins": {
            "name": "test_plugins",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_config": {
            "name": "test_bad_config",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_key_auth": {
            "name": "test_key_auth",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "kongman-master/tests/test_kong.py": {
        "test_client": {
            "name": "test_client",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cli": [
                    "str",
                    "dict[str, float]",
                    "int"
                ]
            }
        }
    },
    "kongman-master/tests/test_plugins.py": {},
    "kongman-master/tests/__init__.py": {}
}
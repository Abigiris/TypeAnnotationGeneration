{
    "layabout-master/layabout.py": {
        "_format_parameter_error_message": {
            "name": "_format_parameter_error_message",
            "location": 263,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [
                    "bool",
                    "str",
                    "None"
                ],
                "sig": [
                    "bool",
                    "str",
                    "None"
                ],
                "num_params": [
                    "bool",
                    "str"
                ]
            }
        },
        "_create_slack": {
            "name": "_create_slack",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "connector": [
                    "dict[, ]",
                    "str",
                    "bytes",
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        },
        "_create_slack_with_string": {
            "name": "_create_slack_with_string",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "string": [
                    "str",
                    "int",
                    "None",
                    "typing.Mapping"
                ]
            }
        },
        "_create_slack_with_env_var": {
            "name": "_create_slack_with_env_var",
            "location": 302,
            "return": [
                "SlackClient"
            ],
            "arguments": {
                "env_var": [
                    "str",
                    "int",
                    "set[str]"
                ]
            }
        },
        "_create_slack_with_token": {
            "name": "_create_slack_with_token",
            "location": 311,
            "return": [
                "SlackClient"
            ],
            "arguments": {
                "token": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_create_slack_with_slack_client": {
            "name": "_create_slack_with_slack_client",
            "location": 319,
            "return": [
                "str",
                "typing.Iterator",
                "bool",
                "float"
            ],
            "arguments": {
                "slack": [
                    "str",
                    "typing.Iterator",
                    "bool",
                    "float"
                ]
            }
        },
        "_forever": {
            "name": "_forever",
            "location": 324,
            "return": [
                "bool"
            ],
            "arguments": {
                "events": [
                    "str"
                ]
            }
        },
        "_truncated_exponential": {
            "name": "_truncated_exponential",
            "location": 329,
            "return": [
                "float"
            ],
            "arguments": {
                "retry": [
                    "float",
                    "int"
                ]
            }
        },
        "_SlackClientWrapper.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "slack": [
                    "int",
                    "float"
                ],
                "retries": [
                    "int",
                    "float"
                ],
                "backoff": [
                    "int",
                    "float"
                ]
            }
        },
        "_SlackClientWrapper.connect": {
            "name": "connect",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SlackClientWrapper.is_connected": {
            "name": "is_connected",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_SlackClientWrapper.connect_with_retry": {
            "name": "connect_with_retry",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SlackClientWrapper.fetch_events": {
            "name": "fetch_events",
            "location": 107,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layabout.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layabout.handle": {
            "name": "handle",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "type": [
                    "typing.Iterable[typing.Type]",
                    "typing.Sequence[str]",
                    "typing.Type",
                    "str"
                ]
            }
        },
        "Layabout._ensure_slack": {
            "name": "_ensure_slack",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connector": [
                    "bool"
                ],
                "retries": [
                    "str",
                    "int"
                ],
                "backoff": [
                    "str",
                    "int"
                ]
            }
        },
        "Layabout.run": {
            "name": "run",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layabout.handle.decorator": {
            "name": "decorator",
            "location": 174,
            "return": [],
            "arguments": {
                "fn": []
            }
        }
    },
    "layabout-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 13,
            "return": [],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        }
    },
    "layabout-master/docs/conf.py": {},
    "layabout-master/examples/conditional-exit/example.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.someone_says_the_magic_word": {
            "name": "someone_says_the_magic_word",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "events": []
            }
        }
    },
    "layabout-master/examples/conditional-exit/setup.py": {},
    "layabout-master/examples/early-connection/example.py": {
        "someone_is_typing": {
            "name": "someone_is_typing",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [
                    "dict[str, str]",
                    "bool",
                    "list[dict[, ]]"
                ],
                "event": [
                    "dict[str, str]",
                    "bool",
                    "list[dict[, ]]"
                ]
            }
        },
        "channel_to_id": {
            "name": "channel_to_id",
            "location": 15,
            "return": [],
            "arguments": {
                "slack": [
                    "dict[str, str]",
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "channel": [
                    "list[typing.Optional[str]]",
                    "dict[, ]",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "send_message": {
            "name": "send_message",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": []
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "layabout-master/examples/early-connection/setup.py": {},
    "layabout-master/examples/runtime-handler-definition/example.py": {
        "channel_to_id": {
            "name": "channel_to_id",
            "location": 10,
            "return": [],
            "arguments": {
                "slack": [
                    "dict[str, str]",
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "channel": [
                    "list[typing.Optional[str]]",
                    "dict[, ]",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.debug": {
            "name": "debug",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": []
            }
        }
    },
    "layabout-master/examples/runtime-handler-definition/setup.py": {},
    "layabout-master/examples/simple/example.py": {
        "print_all": {
            "name": "print_all",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]"
                ],
                "event": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "layabout-master/examples/simple/setup.py": {},
    "layabout-master/tests/test_layabout.py": {
        "mock_slack": {
            "name": "mock_slack",
            "location": 23,
            "return": [
                "tuple[MagicMock]"
            ],
            "arguments": {
                "connections": [
                    "None"
                ],
                "reads": [
                    "None"
                ]
            }
        },
        "mock_slack_wrapper": {
            "name": "mock_slack_wrapper",
            "location": 48,
            "return": [
                "tuple[MagicMock]"
            ],
            "arguments": {
                "connections": [
                    "None"
                ]
            }
        },
        "run_once": {
            "name": "run_once",
            "location": 61,
            "return": [
                "MagicMock"
            ],
            "arguments": {}
        },
        "events": {
            "name": "events",
            "location": 66,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "test_layabout_can_register_handler": {
            "name": "test_layabout_can_register_handler",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_register_handler_via_decorator": {
            "name": "test_layabout_can_register_handler_via_decorator",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_register_handler_with_kwargs": {
            "name": "test_layabout_can_register_handler_with_kwargs",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_register_handler_with_kwargs_via_decorator": {
            "name": "test_layabout_can_register_handler_with_kwargs_via_decorator",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_type_error_with_invalid_handler": {
            "name": "test_layabout_raises_type_error_with_invalid_handler",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_type_error_with_invalid_decorated_handler": {
            "name": "test_layabout_raises_type_error_with_invalid_decorated_handler",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_handlers_can_be_decorated_and_used_normally": {
            "name": "test_layabout_handlers_can_be_decorated_and_used_normally",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_type_error_with_invalid_connector": {
            "name": "test_layabout_raises_type_error_with_invalid_connector",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_connect_to_slack_with_token": {
            "name": "test_layabout_can_connect_to_slack_with_token",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_can_connect_to_slack_with_env_var": {
            "name": "test_layabout_can_connect_to_slack_with_env_var",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_can_connect_to_slack_with_existing_slack_client": {
            "name": "test_layabout_can_connect_to_slack_with_existing_slack_client",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_type_error_with_string_connector": {
            "name": "test_layabout_raises_type_error_with_string_connector",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_missing_token_without_token": {
            "name": "test_layabout_raises_missing_token_without_token",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_raises_missing_token_with_empty_token": {
            "name": "test_layabout_raises_missing_token_with_empty_token",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_connect_to_slack": {
            "name": "test_layabout_can_connect_to_slack",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_raises_failed_connection_on_failed_connection": {
            "name": "test_layabout_raises_failed_connection_on_failed_connection",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_reuse_an_existing_client_to_reconnect": {
            "name": "test_layabout_can_reuse_an_existing_client_to_reconnect",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_can_continue_after_successful_reconnection": {
            "name": "test_layabout_can_continue_after_successful_reconnection",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_backoff_backs_off": {
            "name": "test_layabout_backoff_backs_off",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_layabout_backoff_does_not_exceed_64_seconds": {
            "name": "test_layabout_backoff_does_not_exceed_64_seconds",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_can_handle_an_event": {
            "name": "test_layabout_can_handle_an_event",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_an_event_with_kwargs": {
            "name": "test_layabout_can_handle_an_event_with_kwargs",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_only_handle_events_that_happen": {
            "name": "test_layabout_can_only_handle_events_that_happen",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_one_event_multiple_times": {
            "name": "test_layabout_can_handle_one_event_multiple_times",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_multiple_events": {
            "name": "test_layabout_can_handle_multiple_events",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_an_event_with_a_splat_handler": {
            "name": "test_layabout_can_handle_an_event_with_a_splat_handler",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_all_events_with_a_splat_handler": {
            "name": "test_layabout_can_handle_all_events_with_a_splat_handler",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_handle_events_with_normal_and_splat_handlers": {
            "name": "test_layabout_can_handle_events_with_normal_and_splat_handlers",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [],
                "run_once": [],
                "monkeypatch": []
            }
        },
        "test_layabout_can_register_handler.handle_hello": {
            "name": "handle_hello",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": []
            }
        },
        "test_layabout_can_register_handler_via_decorator.handle_hello": {
            "name": "handle_hello",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": []
            }
        },
        "test_layabout_can_register_handler_with_kwargs.handle_hello": {
            "name": "handle_hello",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": []
            }
        },
        "test_layabout_can_register_handler_with_kwargs_via_decorator.handle_hello": {
            "name": "handle_hello",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": [],
                "spam": []
            }
        },
        "test_layabout_raises_type_error_with_invalid_handler.invalid_handler": {
            "name": "invalid_handler",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_layabout_handlers_can_be_decorated_and_used_normally.handle_hello": {
            "name": "handle_hello",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": [],
                "event": []
            }
        },
        "test_layabout_raises_type_error_with_invalid_decorated_handler.invalid_handler": {
            "name": "invalid_handler",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "slack": []
            }
        }
    }
}
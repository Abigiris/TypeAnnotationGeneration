{
    "learnedspatialbucketindex-master/python/gen.py": {
        "load_data": {
            "name": "load_data",
            "location": 3,
            "return": [
                "bytes",
                "dict[str, dict[str, typing.Any]]"
            ],
            "arguments": {
                "instance_count": [
                    "bool",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "learnedspatialbucketindex-master/python/trainmodel.py": {
        "load_data": {
            "name": "load_data",
            "location": 14,
            "return": [
                "tuple[list[list[]]]"
            ],
            "arguments": {
                "fileName": [
                    "str"
                ],
                "bucketSize": [
                    "int"
                ]
            }
        },
        "bucketize": {
            "name": "bucketize",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {
                "data": [
                    "int",
                    "str",
                    "None"
                ],
                "counter": [
                    "int"
                ],
                "min_val": [
                    "bool"
                ],
                "max_val": [
                    "bool"
                ],
                "buckets": [],
                "bucketId": [
                    "int",
                    "str"
                ],
                "n_iterations": [
                    "bool"
                ]
            }
        },
        "normalize": {
            "name": "normalize",
            "location": 80,
            "return": [
                "float"
            ],
            "arguments": {
                "v_min": [
                    "int"
                ],
                "v_max": [
                    "int"
                ],
                "value": [
                    "int"
                ]
            }
        },
        "getcomplexmodel": {
            "name": "getcomplexmodel",
            "location": 84,
            "return": [],
            "arguments": {
                "data": [
                    "bool",
                    "str"
                ],
                "labels": [
                    "str",
                    "int",
                    "None",
                    "float",
                    "list[typing.Callable[, ]]"
                ],
                "verbose": [
                    "bool",
                    "str"
                ],
                "epochs": [
                    "bool",
                    "str"
                ],
                "name": [
                    "str"
                ]
            }
        }
    },
    "learnedspatialbucketindex-master/python/src/kerasify.py": {
        "write_floats": {
            "name": "write_floats",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "int",
                    "dict[int, object]",
                    "str",
                    "typing.Sequence[T]"
                ],
                "floats": []
            }
        },
        "export_model": {
            "name": "export_model",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "model": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "export_model.write_activation": {
            "name": "write_activation",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "activation": []
            }
        }
    },
    "learnedspatialbucketindex-master/python/src/model.py": {
        "getcomplexmodel": {
            "name": "getcomplexmodel",
            "location": 9,
            "return": [],
            "arguments": {
                "data": [
                    "bool",
                    "str"
                ],
                "labels": [
                    "str",
                    "int",
                    "None",
                    "float",
                    "list[typing.Callable[, ]]"
                ],
                "verbose": [
                    "bool",
                    "str"
                ],
                "epochs": [
                    "bool",
                    "str"
                ],
                "name": [
                    "str",
                    "typing.Sequence[typing.Any]",
                    "bytes",
                    "dict[str, src.jira_view.JiraView]"
                ],
                "target": [
                    "str",
                    "bytes",
                    "typing.Sequence[str]",
                    "bool"
                ]
            }
        },
        "getlinearmodel": {
            "name": "getlinearmodel",
            "location": 42,
            "return": [],
            "arguments": {
                "data": [
                    "bool",
                    "str"
                ],
                "labels": [
                    "str",
                    "int",
                    "None",
                    "float",
                    "list[typing.Callable[, ]]"
                ],
                "verbose": [
                    "bool",
                    "str"
                ],
                "epochs": [
                    "bool",
                    "str"
                ],
                "name": [
                    "int",
                    "str",
                    "float"
                ],
                "target": [
                    "str",
                    "bytes",
                    "typing.Sequence[str]",
                    "bool"
                ]
            }
        },
        "getLinearRegModel": {
            "name": "getLinearRegModel",
            "location": 74,
            "return": [
                "typing.Pattern",
                "tuple[int]"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "labels": [
                    "bytes",
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        }
    },
    "learnedspatialbucketindex-master/python/src/__init__.py": {}
}
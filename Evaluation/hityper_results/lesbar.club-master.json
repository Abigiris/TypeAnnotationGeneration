{
    "lesbar.club-master/server/main.py": {},
    "lesbar.club-master/server/nltk_install.py": {},
    "lesbar.club-master/server/lesbar/formulas.py": {
        "gsmog": {
            "name": "gsmog",
            "location": 9,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "text": []
            }
        },
        "wiener_sachtext_formel": {
            "name": "wiener_sachtext_formel",
            "location": 20,
            "return": [
                "dict[typing.Text, float]"
            ],
            "arguments": {
                "text": []
            }
        },
        "flesh_reading_ease": {
            "name": "flesh_reading_ease",
            "location": 50,
            "return": [
                "dict[typing.Text, float]"
            ],
            "arguments": {
                "text": []
            }
        },
        "gunning_fog_index": {
            "name": "gunning_fog_index",
            "location": 82,
            "return": [
                "dict[typing.Text, float]"
            ],
            "arguments": {
                "text": []
            }
        },
        "lix": {
            "name": "lix",
            "location": 98,
            "return": [
                "dict[typing.Text, float]"
            ],
            "arguments": {
                "text": []
            }
        },
        "dale_chall": {
            "name": "dale_chall",
            "location": 121,
            "return": [
                "dict[typing.Text, float]"
            ],
            "arguments": {
                "text": []
            }
        }
    },
    "lesbar.club-master/server/lesbar/text.py": {
        "Text.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "int"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Text.num_characters": {
            "name": "num_characters",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.num_sentences": {
            "name": "num_sentences",
            "location": 26,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.words": {
            "name": "words",
            "location": 30,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.num_words": {
            "name": "num_words",
            "location": 37,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.syllables": {
            "name": "syllables",
            "location": 41,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.num_syllables": {
            "name": "num_syllables",
            "location": 49,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.letters": {
            "name": "letters",
            "location": 53,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.num_letters": {
            "name": "num_letters",
            "location": 62,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.detected_lang": {
            "name": "detected_lang",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.language_match": {
            "name": "language_match",
            "location": 70,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Text.to_dict": {
            "name": "to_dict",
            "location": 73,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sentence.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "typing.Type",
                    "int",
                    "None"
                ],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Sentence.tokenize": {
            "name": "tokenize",
            "location": 96,
            "return": [
                "list[Sentence]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[]",
                    "dict[str, typing.Any]",
                    "tuple[str]"
                ],
                "content": [
                    "str"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Sentence.syllables": {
            "name": "syllables",
            "location": 109,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sentence.to_dict": {
            "name": "to_dict",
            "location": 115,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Word.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "typing.Type",
                    "int",
                    "None"
                ],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Word.tokenize": {
            "name": "tokenize",
            "location": 136,
            "return": [
                "list[Word]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[]",
                    "dict[str, typing.Any]",
                    "tuple[str]"
                ],
                "content": [
                    "str",
                    "int"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Word.to_dict": {
            "name": "to_dict",
            "location": 157,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Syllable.__init__": {
            "name": "__init__",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "int"
                ]
            }
        },
        "Syllable.tokenize": {
            "name": "tokenize",
            "location": 174,
            "return": [
                "list[Syllable]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[]",
                    "dict[str, typing.Any]",
                    "tuple[str]"
                ],
                "content": [
                    "str",
                    "dict[, ]"
                ],
                "lang": [
                    "typing.Text"
                ]
            }
        },
        "Syllable.to_dict": {
            "name": "to_dict",
            "location": 182,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Letter.__init__": {
            "name": "__init__",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "int"
                ]
            }
        },
        "Letter.tokenize": {
            "name": "tokenize",
            "location": 191,
            "return": [
                "list[Letter]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[]",
                    "dict[str, typing.Any]",
                    "tuple[str]"
                ],
                "content": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "lesbar.club-master/server/lesbar/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 24,
            "return": [
                "Flask"
            ],
            "arguments": {}
        },
        "create_app.languages": {
            "name": "languages",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "create_app.lesbar": {
            "name": "lesbar",
            "location": 34,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        }
    },
    "lesbar.club-master/server/lesbar/rules/default.py": {},
    "lesbar.club-master/server/lesbar/rules/__init__.py": {
        "filler": {
            "name": "filler",
            "location": 5,
            "return": [],
            "arguments": {
                "word": [],
                "fillers": []
            }
        },
        "long_word": {
            "name": "long_word",
            "location": 10,
            "return": [],
            "arguments": {
                "word": [],
                "length": []
            }
        },
        "long_sentence": {
            "name": "long_sentence",
            "location": 15,
            "return": [],
            "arguments": {
                "sentence": [],
                "length": []
            }
        },
        "tag": {
            "name": "tag",
            "location": 20,
            "return": [],
            "arguments": {
                "sentence": [],
                "tagger": []
            }
        },
        "passive": {
            "name": "passive",
            "location": 27,
            "return": [],
            "arguments": {
                "sentence": [],
                "passive_indicators": []
            }
        },
        "abbreviations": {
            "name": "abbreviations",
            "location": 44,
            "return": [],
            "arguments": {
                "word": [],
                "regex": []
            }
        },
        "apply_rules": {
            "name": "apply_rules",
            "location": 49,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "lesbar.club-master/server/lesbar/rules/de_DE/ClassifierBasedGermanTagger.py": {
        "ClassifierBasedGermanTagger.feature_detector": {
            "name": "feature_detector",
            "location": 35,
            "return": [
                "dict[typing.Text, typing.Union[None,typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "tokens": [],
                "index": [],
                "history": []
            }
        }
    },
    "lesbar.club-master/server/lesbar/rules/de_DE/fillers.py": {},
    "lesbar.club-master/server/lesbar/rules/de_DE/passive_indicators.py": {},
    "lesbar.club-master/server/lesbar/rules/de_DE/tagger.py": {
        "RenameUnpickler.find_class": {
            "name": "find_class",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "module": [
                    "str",
                    "bool"
                ],
                "name": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "lesbar.club-master/server/lesbar/rules/de_DE/tagger_traning.py": {},
    "lesbar.club-master/server/lesbar/rules/de_DE/__init__.py": {}
}
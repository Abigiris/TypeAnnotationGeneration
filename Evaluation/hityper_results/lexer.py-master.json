{
    "lexer.py-master/main.py": {
        "a_id": {
            "name": "a_id",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lexeme": [
                    "list[dict[, ]]",
                    "str"
                ]
            }
        },
        "a_num": {
            "name": "a_num",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lexeme": [
                    "dict[str, int]"
                ]
            }
        },
        "a_if": {
            "name": "a_if",
            "location": 51,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lexeme": [
                    "dict[str, int]"
                ]
            }
        },
        "a_curly_open": {
            "name": "a_curly_open",
            "location": 71,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lexeme": [
                    "dict[str, int]",
                    "bool"
                ]
            }
        },
        "a_curly_close": {
            "name": "a_curly_close",
            "location": 77,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "lexeme": [
                    "dict[str, int]",
                    "bool"
                ]
            }
        },
        "lex": {
            "name": "lex",
            "location": 114,
            "return": [
                "list[Token]"
            ],
            "arguments": {
                "src": []
            }
        },
        "printTokens": {
            "name": "printTokens",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "tokens": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Token.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token_kind": [
                    "str",
                    "float",
                    "None",
                    "dict[, ]"
                ],
                "lexeme": [
                    "str",
                    "float",
                    "None",
                    "dict[, ]"
                ],
                "line": [
                    "str",
                    "list[str]",
                    "typing.Sequence[str]",
                    "list[tuple[typing.Union[int,int]]]",
                    "int"
                ],
                "col": [
                    "str",
                    "float",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "Token.__eq__": {
            "name": "__eq__",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Token.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lexer.py-master/test.py": {
        "TestLex.test_one": {
            "name": "test_one",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLex.test_integration_one": {
            "name": "test_integration_one",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "lib3to6-master/example.py": {
        "hello": {
            "name": "hello",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "who": [
                    "str",
                    "bool",
                    "float",
                    "bytes"
                ]
            }
        }
    },
    "lib3to6-master/setup.py": {
        "project_path": {
            "name": "project_path",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "read": {
            "name": "read",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "lib3to6-master/my-module/setup.py": {},
    "lib3to6-master/my-module/my_module/__init__.py": {
        "hello": {
            "name": "hello",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "who": []
            }
        }
    },
    "lib3to6-master/scratch/pep563.py": {
        "bar": {
            "name": "bar",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "b": [],
                "s": []
            }
        },
        "baz": {
            "name": "baz",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "before_foo": {
            "name": "before_foo",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "after_foo": {
            "name": "after_foo",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Foo.doer": {
            "name": "doer",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Foo.doer.nested_doer": {
            "name": "nested_doer",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": []
            }
        }
    },
    "lib3to6-master/scratch/pep563_debug.py": {
        "bar": {
            "name": "bar",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "b": [
                    "str",
                    "float",
                    "int"
                ],
                "s": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "Foo.doer": {
            "name": "doer",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Foo.doer.nested_doer": {
            "name": "nested_doer",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "foo": []
            }
        }
    },
    "lib3to6-master/scripts/exit_0_if_empty.py": {},
    "lib3to6-master/src/lib3to6/checkers.py": {
        "_iter_scope_names": {
            "name": "_iter_scope_names",
            "location": 27,
            "return": [
                "typing.Generator[tuple[]]",
                "typing.Generator[tuple[ast_@_arg]]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "_raise_if_complex_named_tuple": {
            "name": "_raise_if_complex_named_tuple",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "node": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "NoStarImports.__call__": {
            "name": "__call__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "NoOverriddenFixerImportsChecker.__call__": {
            "name": "__call__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "bool"
                ]
            }
        },
        "NoOverriddenBuiltinsChecker.__call__": {
            "name": "__call__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "bool"
                ]
            }
        },
        "NoOpenWithEncodingChecker.__call__": {
            "name": "__call__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "NoAsyncAwait.__call__": {
            "name": "__call__",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "dict[, ]"
                ],
                "tree": []
            }
        },
        "NoYieldFromChecker.__call__": {
            "name": "__call__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "NoMatMultOpChecker.__call__": {
            "name": "__call__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "NoComplexNamedTuple.__call__": {
            "name": "__call__",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/checkers_backports.py": {
        "parse_version": {
            "name": "parse_version",
            "location": 33,
            "return": [],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "_iter_module_names": {
            "name": "_iter_module_names",
            "location": 67,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "node": [
                    "tuple[object]"
                ]
            }
        },
        "_iter_maybe_unusable_modules": {
            "name": "_iter_maybe_unusable_modules",
            "location": 77,
            "return": [
                "typing.Generator[tuple[typing.Union[ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo,ModuleVersionInfo]]]"
            ],
            "arguments": {
                "node": [
                    "typing.Container",
                    "list[str]"
                ]
            }
        },
        "NoUnusableImportsChecker.__call__": {
            "name": "__call__",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "list[typing.Any]",
                    "None",
                    "set[str]"
                ],
                "tree": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/checker_base.py": {
        "CheckerBase.__call__": {
            "name": "__call__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/common.py": {
        "init_build_context": {
            "name": "init_build_context",
            "location": 58,
            "return": [
                "BuildContext"
            ],
            "arguments": {
                "target_version": [
                    "typing.Text"
                ],
                "cache_enabled": [
                    "bool"
                ],
                "default_mode": [
                    "typing.Text"
                ],
                "fixers": [
                    "typing.Text"
                ],
                "checkers": [
                    "typing.Text"
                ],
                "install_requires": [
                    "None",
                    "bool"
                ],
                "filepath": [
                    "typing.Text"
                ]
            }
        },
        "get_node_lineno": {
            "name": "get_node_lineno",
            "location": 86,
            "return": [
                "int"
            ],
            "arguments": {
                "node": [
                    "None",
                    "int"
                ],
                "parent": [
                    "None"
                ]
            }
        },
        "CheckError.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "typing.Type",
                    "typing.Callable[, ]",
                    "set[str]"
                ],
                "node": [
                    "None",
                    "bool",
                    "str",
                    "tuple[typing.Type]",
                    "list[str]"
                ],
                "parent": [
                    "None",
                    "bool",
                    "str",
                    "tuple[typing.Type]",
                    "list[str]"
                ]
            }
        },
        "FixerError.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "None"
                ],
                "node": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "str"
                ],
                "parent": [
                    "None",
                    "bool",
                    "typing.Type"
                ],
                "filepath": [
                    "None",
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "str"
                ]
            }
        },
        "FixerError.__str__": {
            "name": "__str__",
            "location": 126,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "apply_since": [
                    "typing.Text"
                ],
                "apply_until": [
                    "None",
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "works_since": [
                    "None",
                    "bool",
                    "float",
                    "typing.Any",
                    "str"
                ],
                "works_until": [
                    "None",
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "VersionInfo.is_required_for": {
            "name": "is_required_for",
            "location": 175,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str"
                ]
            }
        },
        "VersionInfo.is_compatible_with": {
            "name": "is_compatible_with",
            "location": 183,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str"
                ]
            }
        },
        "VersionInfo.is_applicable_to": {
            "name": "is_applicable_to",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "source_version": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "float",
                    "int"
                ],
                "target_version": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "float",
                    "int"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers.py": {
        "is_const_node": {
            "name": "is_const_node",
            "location": 70,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "_FRAFContext.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "local_classes": [
                    "bool",
                    "typing.Type",
                    "set[]",
                    "str",
                    "None",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "_FRAFContext.is_forward_ref": {
            "name": "is_forward_ref",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        },
        "_FRAFContext.update_index_elts": {
            "name": "update_index_elts",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elts": []
            }
        },
        "_FRAFContext.update_subscript": {
            "name": "update_subscript",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "bool"
                ]
            }
        },
        "_FRAFContext.update_index": {
            "name": "update_index",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idx": [
                    "dict[str, str]",
                    "int",
                    "float"
                ]
            }
        },
        "_FRAFContext.update_annotation_refs": {
            "name": "update_annotation_refs",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ],
                "attrname": [
                    "str"
                ]
            }
        },
        "_FRAFContext.remove_forward_references": {
            "name": "remove_forward_references",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int",
                    "list[]",
                    "bytes"
                ]
            }
        },
        "ForwardReferenceAnnotationsFixer.apply_fix": {
            "name": "apply_fix",
            "location": 191,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "dict[, ]"
                ]
            }
        },
        "RemoveFunctionDefAnnotationsFixer.apply_fix": {
            "name": "apply_fix",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "RemoveAnnAssignFixer.visit_AnnAssign": {
            "name": "visit_AnnAssign",
            "location": 228,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "ShortToLongFormSuperFixer.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 246,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "InlineKWOnlyArgsFixer.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 282,
            "return": [
                "list[typing.Type]",
                "typing.Callable[..., None]"
            ],
            "arguments": {
                "node": [
                    "list[typing.Type]",
                    "typing.Callable[..., None]"
                ]
            }
        },
        "NewStyleClassesFixer.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 335,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ItertoolsBuiltinsFixer.apply_fix": {
            "name": "apply_fix",
            "location": 354,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "Exception"
                ]
            }
        },
        "ItertoolsBuiltinsFixer.visit_Name": {
            "name": "visit_Name",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NamedTupleClassToAssignFixer.__init__": {
            "name": "__init__",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NamedTupleClassToAssignFixer.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 379,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NamedTupleClassToAssignFixer.visit_Import": {
            "name": "visit_Import",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NamedTupleClassToAssignFixer.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 399,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "tuple[str]"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_builtin_rename.py": {
        "BuiltinsRenameFixerBase.apply_fix": {
            "name": "apply_fix",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [
                    "tuple[]"
                ],
                "tree": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_fstring.py": {
        "FStringToStrFormatFixer._formatted_value_str": {
            "name": "_formatted_value_str",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fmt_val_node": [
                    "bool",
                    "list[dict[, ]]",
                    "list[dict[str, typing.Any]]"
                ],
                "arg_nodes": []
            }
        },
        "FStringToStrFormatFixer._joined_str_str": {
            "name": "_joined_str_str",
            "location": 34,
            "return": [
                "typing.Text",
                "int",
                "tuple[str]"
            ],
            "arguments": {
                "self": [],
                "joined_str_node": [
                    "str",
                    "dict[str, dict[, ]]",
                    "dict[, ]",
                    "None",
                    "int"
                ],
                "arg_nodes": [
                    "str",
                    "float"
                ]
            }
        },
        "FStringToStrFormatFixer.visit_JoinedStr": {
            "name": "visit_JoinedStr",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_future.py": {
        "FutureImportFixerBase.apply_fix": {
            "name": "apply_fix",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "RemoveUnsupportedFuturesFixer.apply_fix": {
            "name": "apply_fix",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "str"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_import_fallback.py": {
        "_try_fallback": {
            "name": "_try_fallback",
            "location": 13,
            "return": [],
            "arguments": {
                "node": [
                    "str"
                ],
                "fallback_node": [
                    "str"
                ]
            }
        },
        "ModuleImportFallbackFixerBase.visit_Import": {
            "name": "visit_Import",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ModuleImportFallbackFixerBase.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_namedexpr.py": {
        "NamedExprFixer._extract_and_replace_named_exprs": {
            "name": "_extract_and_replace_named_exprs",
            "location": 18,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "NamedExprFixer._update": {
            "name": "_update",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nodelist": [],
                "indent": [
                    "int"
                ]
            }
        },
        "NamedExprFixer.apply_fix": {
            "name": "apply_fix",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixers_unpacking_generalization.py": {
        "_is_dict_call": {
            "name": "_is_dict_call",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "_has_stararg_g12n": {
            "name": "_has_stararg_g12n",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "_has_starstarargs_g12n": {
            "name": "_has_starstarargs_g12n",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "_node_with_elts": {
            "name": "_node_with_elts",
            "location": 61,
            "return": [
                "ast_@_Call"
            ],
            "arguments": {
                "node": [],
                "new_elts": [
                    "str"
                ]
            }
        },
        "_node_with_binop": {
            "name": "_node_with_binop",
            "location": 75,
            "return": [
                "ast_@_Call"
            ],
            "arguments": {
                "node": [],
                "binop": []
            }
        },
        "_is_stmtlist": {
            "name": "_is_stmtlist",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {
                "nodelist": []
            }
        },
        "_iter_walkable_fields": {
            "name": "_iter_walkable_fields",
            "location": 94,
            "return": [
                "typing.Generator[tuple[typing.Union[ast_@_arguments,ast_@_expr_context,common_@_LeafNodeTypes]]]"
            ],
            "arguments": {
                "node": [
                    "int",
                    "float",
                    "typing.Callable[, ]"
                ]
            }
        },
        "_expand_stararg_g12n": {
            "name": "_expand_stararg_g12n",
            "location": 106,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "UnpackingGeneralizationsFixer.expand_starstararg_g12n": {
            "name": "expand_starstararg_g12n",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "UnpackingGeneralizationsFixer.visit_expr": {
            "name": "visit_expr",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "UnpackingGeneralizationsFixer.walk_stmtlist": {
            "name": "walk_stmtlist",
            "location": 292,
            "return": [
                "list[int]"
            ],
            "arguments": {
                "self": [],
                "stmtlist": [
                    "str"
                ]
            }
        },
        "UnpackingGeneralizationsFixer.walk_node": {
            "name": "walk_node",
            "location": 301,
            "return": [
                "common_@_LeafNodeTypes",
                "str",
                "dict[, ]",
                "int",
                "ast_@_Call"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "UnpackingGeneralizationsFixer.walk_stmt": {
            "name": "walk_stmt",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "UnpackingGeneralizationsFixer.apply_fix": {
            "name": "apply_fix",
            "location": 374,
            "return": [
                "str",
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "str",
                    "typing.Type"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/fixer_base.py": {
        "FixerBase.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FixerBase.__call__": {
            "name": "__call__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "FixerBase.apply_fix": {
            "name": "apply_fix",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": []
            }
        },
        "TransformerFixerBase.apply_fix": {
            "name": "apply_fix",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": [],
                "tree": [
                    "Exception"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/packaging.py": {
        "eval_build_config": {
            "name": "eval_build_config",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "_ignore_tmp_files": {
            "name": "_ignore_tmp_files",
            "location": 70,
            "return": [
                "list[str]",
                "str"
            ],
            "arguments": {
                "src": [
                    "str"
                ],
                "names": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "init_build_package_dir": {
            "name": "init_build_package_dir",
            "location": 92,
            "return": [
                "dict[tuple[typing.Union[str,typing.Any]], str]"
            ],
            "arguments": {
                "local_package_dir": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "transpile_path": {
            "name": "transpile_path",
            "location": 117,
            "return": [],
            "arguments": {
                "cfg": [
                    "str",
                    "typing.IO",
                    "bool"
                ],
                "filepath": []
            }
        },
        "build_package": {
            "name": "build_package",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "cfg": [
                    "str"
                ],
                "package": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "typing.Callable[, ]"
                ],
                "build_dir": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "build_packages": {
            "name": "build_packages",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "cfg": [
                    "str",
                    "list[]"
                ],
                "build_package_dir": []
            }
        },
        "fix": {
            "name": "fix",
            "location": 166,
            "return": [
                "str",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "package_dir": [
                    "None",
                    "bool",
                    "list[]",
                    "str"
                ],
                "target_version": [],
                "install_requires": [
                    "None",
                    "bool",
                    "str",
                    "typing.Callable[str,str, None]"
                ],
                "default_mode": [
                    "typing.Text"
                ]
            }
        },
        "build_py._get_outputs": {
            "name": "_get_outputs",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "build_py.run_3to6": {
            "name": "run_3to6",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "build_py.run": {
            "name": "run",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Distribution.__init__": {
            "name": "__init__",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "Distribution.get_command_class": {
            "name": "get_command_class",
            "location": 253,
            "return": [
                "build_py"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/transpile.py": {
        "_parse_header_line": {
            "name": "_parse_header_line",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "line_data": [
                    "str",
                    "bytes",
                    "typing.Any",
                    "None",
                    "dict[, ]",
                    "float",
                    "bool"
                ],
                "coding": [
                    "bool",
                    "str",
                    "list[dict[, ]]",
                    "list[str]"
                ]
            }
        },
        "parse_module_header": {
            "name": "parse_module_header",
            "location": 61,
            "return": [
                "ModuleHeader"
            ],
            "arguments": {
                "module_source": [
                    "str"
                ],
                "target_version": [
                    "str"
                ]
            }
        },
        "normalize_name": {
            "name": "normalize_name",
            "location": 105,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "get_available_classes": {
            "name": "get_available_classes",
            "location": 114,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "module": [
                    "str",
                    "dict[str, typing.Type]",
                    "typing.Type",
                    "typing.Mapping"
                ],
                "clazz": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "get_selected_names": {
            "name": "get_selected_names",
            "location": 134,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "names": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "available_names": [
                    "str",
                    "set[str]"
                ]
            }
        },
        "iter_fuzzy_selected_checkers": {
            "name": "iter_fuzzy_selected_checkers",
            "location": 154,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "names": [
                    "str",
                    "typing.Type",
                    "typing.Sequence[typing.Type]",
                    "None"
                ]
            }
        },
        "iter_fuzzy_selected_fixers": {
            "name": "iter_fuzzy_selected_fixers",
            "location": 162,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "names": [
                    "str",
                    "typing.Type",
                    "typing.Sequence[typing.Type]",
                    "None"
                ]
            }
        },
        "find_import_decls": {
            "name": "find_import_decls",
            "location": 170,
            "return": [
                "None",
                "typing.Generator[]"
            ],
            "arguments": {
                "node": [
                    "typing.Any",
                    "None"
                ]
            }
        },
        "parse_imports": {
            "name": "parse_imports",
            "location": 231,
            "return": [
                "tuple[typing.Union[int,set[]]]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "add_required_imports": {
            "name": "add_required_imports",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "required_imports": []
            }
        },
        "add_module_declarations": {
            "name": "add_module_declarations",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": [
                    "int",
                    "str",
                    "typing.Type"
                ],
                "module_declarations": []
            }
        },
        "transpile_module": {
            "name": "transpile_module",
            "location": 334,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "module_source": [
                    "str",
                    "bytes"
                ]
            }
        },
        "transpile_module_data": {
            "name": "transpile_module_data",
            "location": 379,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "int",
                    "bytes"
                ],
                "module_source_data": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/utils.py": {
        "dump_ast": {
            "name": "dump_ast",
            "location": 21,
            "return": [],
            "arguments": {
                "node": [],
                "annotate_fields": [
                    "bool"
                ],
                "include_attributes": [
                    "bool"
                ],
                "indent": [
                    "typing.Text"
                ]
            }
        },
        "clean_whitespace": {
            "name": "clean_whitespace",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "fixture_str": [
                    "str"
                ]
            }
        },
        "parse_stmt": {
            "name": "parse_stmt",
            "location": 95,
            "return": [],
            "arguments": {
                "code": [
                    "str"
                ]
            }
        },
        "parsedump_ast": {
            "name": "parsedump_ast",
            "location": 101,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "dict[str, dict[str, str]]"
                ],
                "mode": [
                    "typing.Text"
                ]
            }
        },
        "parsedump_source": {
            "name": "parsedump_source",
            "location": 107,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "bytes"
                ],
                "mode": [
                    "typing.Text"
                ]
            }
        },
        "transpile_and_dump": {
            "name": "transpile_and_dump",
            "location": 112,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "ctx": [
                    "float",
                    "bool"
                ],
                "module_str": [
                    "str",
                    "bytes"
                ]
            }
        },
        "has_base_class": {
            "name": "has_base_class",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls_node": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[int,int]]]",
                    "None"
                ],
                "module_name": [
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ],
                "base_class_name": [
                    "None",
                    "str"
                ]
            }
        },
        "dump_ast._format": {
            "name": "_format",
            "location": 38,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "node": [],
                "level": [
                    "int"
                ]
            }
        }
    },
    "lib3to6-master/src/lib3to6/__init__.py": {},
    "lib3to6-master/src/lib3to6/__main__.py": {
        "_configure_logging": {
            "name": "_configure_logging",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "verbose": [
                    "int"
                ]
            }
        },
        "_print_diff": {
            "name": "_print_diff",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "source_text": [
                    "str"
                ],
                "fixed_source_text": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "target_version": [
                    "str",
                    "int"
                ],
                "diff": [
                    "bool",
                    "str"
                ],
                "in_place": [
                    "bool",
                    "str"
                ],
                "install_requires": [
                    "str",
                    "typing.Sequence[str]"
                ],
                "source_files": [],
                "default_mode": [
                    "typing.Text"
                ],
                "verbose": [
                    "int"
                ]
            }
        }
    },
    "lib3to6-master/test/test_checkers.py": {
        "make_fixture": {
            "name": "make_fixture",
            "location": 11,
            "return": [
                "CheckFixture"
            ],
            "arguments": {
                "names": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "test_source": [
                    "str",
                    "typing.Container",
                    "dict[, ]",
                    "typing.Type",
                    "bool"
                ],
                "expected_error_msg": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_checkers": {
            "name": "test_checkers",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture": [
                    "dict[, ]"
                ]
            }
        },
        "_test_unusable_imports": {
            "name": "_test_unusable_imports",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "source": [],
                "ver": [
                    "typing.Text"
                ],
                "req": [
                    "str"
                ]
            }
        },
        "test_backport_checker_warning": {
            "name": "test_backport_checker_warning",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str",
                    "int"
                ]
            }
        },
        "test_backport_checker_nowarning": {
            "name": "test_backport_checker_nowarning",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str",
                    "int"
                ]
            }
        },
        "test_backport_checker_errors": {
            "name": "test_backport_checker_errors",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "lib3to6-master/test/test_error_messages.py": {},
    "lib3to6-master/test/test_fixers.py": {
        "make_fixture": {
            "name": "make_fixture",
            "location": 14,
            "return": [
                "FixerFixture"
            ],
            "arguments": {
                "names": [
                    "str",
                    "list[str]",
                    "bool",
                    "dict[, ]",
                    "None"
                ],
                "target_version": [
                    "str",
                    "list[str]",
                    "bool",
                    "dict[, ]",
                    "None"
                ],
                "test_source": [
                    "str"
                ],
                "expected_source": [
                    "str",
                    "None"
                ]
            }
        },
        "test_numeric_literals_with_underscore": {
            "name": "test_numeric_literals_with_underscore",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_header_preserved": {
            "name": "test_header_preserved",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_normalized_source": {
            "name": "_normalized_source",
            "location": 1212,
            "return": [],
            "arguments": {
                "in_source": [
                    "str",
                    "bool",
                    "float"
                ]
            }
        },
        "_debug_ast": {
            "name": "_debug_ast",
            "location": 1223,
            "return": [
                "None"
            ],
            "arguments": {
                "casename": [
                    "str"
                ],
                "source": [
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "test_fixers": {
            "name": "test_fixers",
            "location": 1236,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "lib3to6-master/test/test_transpile.py": {
        "test_parse_header_simple": {
            "name": "test_parse_header_simple",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_header_coding": {
            "name": "test_parse_header_coding",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "lib3to6-master/test/__init__.py": {},
    "lib3to6-master/test_project/setup.py": {},
    "lib3to6-master/test_project/test_module/mysix.py": {},
    "lib3to6-master/test_project/test_module/__init__.py": {
        "test_unpacking_generalization": {
            "name": "test_unpacking_generalization",
            "location": 55,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        },
        "kwonly_func": {
            "name": "kwonly_func",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Foo.foo": {
            "name": "foo",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "f": []
            }
        }
    },
    "lib3to6-master/test_project/test_module/submodule/__init__.py": {}
}
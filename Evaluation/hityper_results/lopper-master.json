{
    "lopper-master/app.py": {
        "handler": {
            "name": "handler",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "is_configuration_valid": {
            "name": "is_configuration_valid",
            "location": 37,
            "return": [],
            "arguments": {
                "configuration": []
            }
        },
        "is_request_authentic": {
            "name": "is_request_authentic",
            "location": 53,
            "return": [],
            "arguments": {
                "request": [
                    "dict[, ]",
                    "None",
                    "str",
                    "typing.Mapping",
                    "dict[str, str]"
                ],
                "secret_token": []
            }
        },
        "is_request_acceptable": {
            "name": "is_request_acceptable",
            "location": 71,
            "return": [],
            "arguments": {
                "request": [
                    "str",
                    "None",
                    "bool"
                ],
                "head_branch": [],
                "base_branch": [],
                "repository_owner": [],
                "repository_name": [],
                "head_branch_exclusion": []
            }
        },
        "process_request": {
            "name": "process_request",
            "location": 103,
            "return": [],
            "arguments": {
                "request": [
                    "str"
                ],
                "api_access_token": []
            }
        }
    },
    "lopper-master/chalicelib/auth.py": {
        "is_authentic": {
            "name": "is_authentic",
            "location": 13,
            "return": [],
            "arguments": {
                "payload_signature": [
                    "str",
                    "list[int]",
                    "int"
                ],
                "payload": [
                    "str",
                    "list[int]",
                    "int"
                ],
                "secret_token": [
                    "str",
                    "list[int]",
                    "int"
                ]
            }
        },
        "_signature": {
            "name": "_signature",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "payload": [
                    "str",
                    "bool"
                ],
                "secret_token": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "lopper-master/chalicelib/conf.py": {
        "validate": {
            "name": "validate",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "lopper-master/chalicelib/hub.py": {
        "exception_to_response": {
            "name": "exception_to_response",
            "location": 12,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "delete_branch": {
            "name": "delete_branch",
            "location": 27,
            "return": [],
            "arguments": {
                "api_access_token": [
                    "str"
                ],
                "repo": [
                    "str"
                ],
                "ref": [
                    "str"
                ]
            }
        },
        "exception_to_response.decorator": {
            "name": "decorator",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "lopper-master/chalicelib/payload.py": {
        "get_target_branch_metadata": {
            "name": "get_target_branch_metadata",
            "location": 13,
            "return": [],
            "arguments": {
                "payload": [
                    "str"
                ]
            }
        },
        "is_acceptable_payload": {
            "name": "is_acceptable_payload",
            "location": 26,
            "return": [],
            "arguments": {
                "payload": [],
                "head_branch": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "base_branch": [
                    "str",
                    "bool",
                    "None",
                    "bytes"
                ],
                "repository_owner": [
                    "str",
                    "int"
                ],
                "repository_name": [
                    "str",
                    "int",
                    "None"
                ],
                "head_branch_exclusion": [
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "None",
                    "tuple[]",
                    "bool"
                ]
            }
        },
        "_is_pull_request_closed": {
            "name": "_is_pull_request_closed",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "payload": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "_is_pull_request_merged": {
            "name": "_is_pull_request_merged",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {
                "pull_request": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "_is_pull_request_head_branch_match": {
            "name": "_is_pull_request_head_branch_match",
            "location": 110,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "pull_request": [
                    "dict[, ]"
                ],
                "head_branch": [
                    "str",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "_is_pull_request_head_branch_included": {
            "name": "_is_pull_request_head_branch_included",
            "location": 128,
            "return": [
                "bool"
            ],
            "arguments": {
                "pull_request": [],
                "head_branch_exclusion": [
                    "dict[, ]",
                    "dict[str, str]",
                    "str"
                ]
            }
        },
        "_is_pull_request_base_branch_match": {
            "name": "_is_pull_request_base_branch_match",
            "location": 147,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "pull_request": [
                    "dict[, ]"
                ],
                "base_branch": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "_is_repository_owner_match": {
            "name": "_is_repository_owner_match",
            "location": 165,
            "return": [
                "bool"
            ],
            "arguments": {
                "repository": [
                    "dict[str, typing.Any]"
                ],
                "repository_owner": [
                    "str"
                ]
            }
        },
        "_is_repository_name_match": {
            "name": "_is_repository_name_match",
            "location": 183,
            "return": [],
            "arguments": {
                "repository": [],
                "repository_name": [
                    "str"
                ]
            }
        }
    },
    "lopper-master/chalicelib/response.py": {
        "response": {
            "name": "response",
            "location": 34,
            "return": [
                "Response"
            ],
            "arguments": {
                "message": [
                    "int",
                    "dict[, ]"
                ],
                "status_code": [
                    "int"
                ],
                "headers": [
                    "dict[typing.Text, typing.Text]"
                ]
            }
        },
        "partial_for_status": {
            "name": "partial_for_status",
            "location": 76,
            "return": [],
            "arguments": {
                "status_code": [
                    "int"
                ]
            }
        },
        "Response.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.__bool__": {
            "name": "__bool__",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lopper-master/chalicelib/__init__.py": {},
    "lopper-master/tests/test_auth.py": {
        "secret_token": {
            "name": "secret_token",
            "location": 15,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "random_secret_token": {
            "name": "random_secret_token",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "random_payload_bytes": {
            "name": "random_payload_bytes",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "random_payload_shuffled_bytes": {
            "name": "random_payload_shuffled_bytes",
            "location": 41,
            "return": [],
            "arguments": {
                "random_payload_bytes": []
            }
        },
        "test_is_authenticate_with_same_secret_token": {
            "name": "test_is_authenticate_with_same_secret_token",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "secret_token": [],
                "random_payload_bytes": []
            }
        },
        "test_not_is_authenticate_with_different_secret_token": {
            "name": "test_not_is_authenticate_with_different_secret_token",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "secret_token": [
                    "int"
                ],
                "random_secret_token": [
                    "int"
                ],
                "random_payload_bytes": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "lopper-master/tests/test_conf.py": {
        "test_sanity": {
            "name": "test_sanity",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "lopper-master/tests/test_payload.py": {
        "test_sanity": {
            "name": "test_sanity",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    }
}
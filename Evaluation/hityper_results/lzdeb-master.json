{
    "lzdeb-master/setup.py": {},
    "lzdeb-master/lzdeb/lzdeb.py": {
        "handle_build": {
            "name": "handle_build",
            "location": 397,
            "return": [
                "int"
            ],
            "arguments": {
                "args": []
            }
        },
        "handle_common": {
            "name": "handle_common",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 413,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Source.from_data": {
            "name": "from_data",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "list[list[typing.Any]]",
                    "str",
                    "bytes",
                    "dict[str, str]"
                ]
            }
        },
        "Source.retrieve": {
            "name": "retrieve",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "run_cmd": [
                    "str",
                    "typing.Callable[, ]",
                    "bool",
                    "None"
                ],
                "work_dir": [
                    "typing.Text"
                ]
            }
        },
        "SourceFactory.create_source": {
            "name": "create_source",
            "location": 37,
            "return": [],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "GitSource.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "bool",
                    "dict[str, tuple[typing.Union[str,str]]]",
                    "str",
                    "list[]",
                    "None",
                    "dict[, ]"
                ],
                "ref": [
                    "bool",
                    "dict[str, tuple[typing.Union[str,str]]]",
                    "str",
                    "list[]",
                    "None",
                    "dict[, ]"
                ],
                "pull_submodules": [
                    "bool"
                ]
            }
        },
        "GitSource.from_data": {
            "name": "from_data",
            "location": 54,
            "return": [
                "GitSource"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "GitSource.retrieve": {
            "name": "retrieve",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "run_cmd": [
                    "str"
                ],
                "work_dir": [
                    "typing.Text"
                ]
            }
        },
        "CommandError.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rc": [
                    "int",
                    "float"
                ],
                "msg": [
                    "typing.Text"
                ]
            }
        },
        "DockerContainer.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "typing.Text"
                ],
                "bootstrap_cmds": [
                    "list[]"
                ]
            }
        },
        "DockerContainer.bootstrap_container": {
            "name": "bootstrap_container",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DockerContainer.program_available": {
            "name": "program_available",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "program": [
                    "int",
                    "typing.Callable[..., collections.abc.Awaitable[]]"
                ]
            }
        },
        "DockerContainer.start": {
            "name": "start",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "typing.Text"
                ]
            }
        },
        "DockerContainer.stop": {
            "name": "stop",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DockerContainer.from_data": {
            "name": "from_data",
            "location": 137,
            "return": [
                "None",
                "DockerContainer"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None",
                    "str"
                ]
            }
        },
        "DockerContainer.run_cmd": {
            "name": "run_cmd",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str"
                ],
                "cwd": [
                    "None",
                    "str",
                    "typing.AnyStr",
                    "list[str]"
                ],
                "return_output": [
                    "bool"
                ]
            }
        },
        "DockerContainer.import_file": {
            "name": "import_file",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src_path": [
                    "str"
                ],
                "dest_path": [
                    "str"
                ]
            }
        },
        "DockerContainer.list_files": {
            "name": "list_files",
            "location": 175,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "DockerContainer.export_file": {
            "name": "export_file",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "src_path": [
                    "str"
                ],
                "dest_dir": [
                    "str"
                ]
            }
        },
        "DebInfo.__init__": {
            "name": "__init__",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pkgname": [
                    "typing.Text"
                ],
                "pkgversion": [
                    "typing.Text"
                ],
                "pkgrelease": [
                    "typing.Text"
                ],
                "pkglicense": [
                    "typing.Text"
                ],
                "pkggroup": [
                    "typing.Text"
                ],
                "maintainer": [
                    "typing.Text"
                ],
                "description": [
                    "typing.Text"
                ],
                "requires": [
                    "list[]"
                ]
            }
        },
        "DebInfo.from_data": {
            "name": "from_data",
            "location": 221,
            "return": [
                "DebInfo"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "DebInfo.prepare": {
            "name": "prepare",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "builder": [],
                "work_dir": [
                    "str",
                    "bool"
                ]
            }
        },
        "DebInfo.cleanup": {
            "name": "cleanup",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DebInfo._get_checkinstall_requires_opt": {
            "name": "_get_checkinstall_requires_opt",
            "location": 245,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DebInfo.debianize_cmd": {
            "name": "debianize_cmd",
            "location": 259,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str"
                ]
            }
        },
        "LzDeb.__init__": {
            "name": "__init__",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_dir": [
                    "str",
                    "typing.Sequence[str]",
                    "bool"
                ],
                "builder": [
                    "dict[, ]",
                    "list[str]",
                    "None",
                    "str"
                ],
                "validator": [
                    "str",
                    "int"
                ],
                "source": [
                    "str",
                    "dict[str, dict[str, str]]",
                    "tuple[typing.Union[str,str]]",
                    "bytes",
                    "typing.IO",
                    "dict[str, str]",
                    "None"
                ],
                "deb_info": [
                    "str",
                    "dict[str, str]"
                ],
                "collect_path": [
                    "typing.Text"
                ],
                "artifact_type": [
                    "typing.Text"
                ]
            }
        },
        "LzDeb.build_script": {
            "name": "build_script",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.install_script": {
            "name": "install_script",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.validate_script": {
            "name": "validate_script",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.from_data": {
            "name": "from_data",
            "location": 311,
            "return": [
                "LzDeb"
            ],
            "arguments": {
                "config_dir": [
                    "str",
                    "dict[, ]"
                ],
                "data": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "LzDeb.from_config_dir": {
            "name": "from_config_dir",
            "location": 320,
            "return": [],
            "arguments": {
                "config_dir": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "LzDeb.inject_file": {
            "name": "inject_file",
            "location": 332,
            "return": [
                "str",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "container": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "LzDeb.build": {
            "name": "build",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.validate": {
            "name": "validate",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deb_file": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "lzdeb-master/lzdeb/utils.py": {
        "program_available": {
            "name": "program_available",
            "location": 6,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "None",
                    "typing.Callable[..., T]",
                    "dict[, ]"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 11,
            "return": [
                "str",
                "None",
                "bool",
                "float",
                "bytes",
                "typing.Iterator"
            ],
            "arguments": {
                "data": [
                    "str"
                ],
                "key": [],
                "default": [
                    "None",
                    "bool",
                    "str",
                    "float",
                    "bytes",
                    "typing.Iterator"
                ],
                "required": [
                    "bool"
                ]
            }
        },
        "container_exec": {
            "name": "container_exec",
            "location": 49,
            "return": [
                "ContainerExec"
            ],
            "arguments": {
                "container": [
                    "bool",
                    "str"
                ],
                "cmd": [
                    "bool",
                    "str"
                ],
                "stdout": [
                    "bool"
                ],
                "stderr": [
                    "bool"
                ],
                "stdin": [
                    "bool"
                ],
                "tty": [
                    "bool"
                ],
                "privileged": [
                    "bool"
                ],
                "user": [
                    "typing.Text"
                ],
                "detach": [
                    "bool"
                ],
                "stream": [
                    "bool"
                ],
                "socket": [
                    "bool"
                ],
                "environment": [
                    "None",
                    "bool",
                    "str"
                ],
                "workdir": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "ContainerExec.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "id": [
                    "str"
                ],
                "output": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        },
        "ContainerExec.inspect": {
            "name": "inspect",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContainerExec.poll": {
            "name": "poll",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContainerExec.communicate": {
            "name": "communicate",
            "location": 33,
            "return": [
                "tuple[str]",
                "tuple[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "return_output": [
                    "bool"
                ]
            }
        }
    },
    "lzdeb-master/lzdeb/__init__.py": {},
    "lzdeb-master/test/test_lzdeb.py": {
        "run_cmd": {
            "name": "run_cmd",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd": [
                    "str",
                    "list[str]"
                ],
                "cwd": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "TestGitSource.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitSource.test_end_to_end": {
            "name": "test_end_to_end",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitSource.tearDown": {
            "name": "tearDown",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lzdeb-master/test/__init__.py": {}
}
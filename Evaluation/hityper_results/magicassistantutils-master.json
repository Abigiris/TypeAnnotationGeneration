{
    "magicassistantutils-master/setup.py": {},
    "magicassistantutils-master/magicassistantutils/card.py": {
        "Card.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "properties": [
                    "bool",
                    "dict[, ]",
                    "None",
                    "list[str]"
                ],
                "count": [
                    "int"
                ],
                "special": [
                    "str"
                ]
            }
        }
    },
    "magicassistantutils-master/magicassistantutils/collection.py": {
        "translate_deckbox_card_edition": {
            "name": "translate_deckbox_card_edition",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "card_name": [],
                "card_edition": []
            }
        },
        "translate_deckbox_card_name": {
            "name": "translate_deckbox_card_name",
            "location": 33,
            "return": [],
            "arguments": {
                "card_name": []
            }
        },
        "get_deckbox_coll_number": {
            "name": "get_deckbox_coll_number",
            "location": 41,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "card_name": [],
                "card_edition": [],
                "card_id": [],
                "coll_mappings": []
            }
        },
        "create_deckbox_card_line": {
            "name": "create_deckbox_card_line",
            "location": 59,
            "return": [
                "list[typing.Union[int,typing.Text]]"
            ],
            "arguments": {
                "card": [],
                "coll_mappings": []
            }
        },
        "Collection.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Collection.import_mtgassistant_collection": {
            "name": "import_mtgassistant_collection",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Collection.export_to_deckbox_csv": {
            "name": "export_to_deckbox_csv",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Collection._process_mtgassistant_xml": {
            "name": "_process_mtgassistant_xml",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_collection_path": []
            }
        }
    },
    "magicassistantutils-master/magicassistantutils/mappings.py": {
        "CollNumberMapping.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "None",
                    "str"
                ]
            }
        },
        "CollNumberMapping.get_coll_number": {
            "name": "get_coll_number",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "card_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "magicassistantutils-master/magicassistantutils/__init__.py": {},
    "magicassistantutils-master/tests/test_collection.py": {
        "create_test_collection": {
            "name": "create_test_collection",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "CollectionTester.test_save_existing_iam_env_vars": {
            "name": "test_save_existing_iam_env_vars",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magicassistantutils-master/tests/__init__.py": {}
}
{
    "mathematical-modelling-master/glacier/accumulation.py": {
        "simple_model": {
            "name": "simple_model",
            "location": 10,
            "return": [],
            "arguments": {
                "start": [
                    "bool",
                    "str",
                    "list[str]",
                    "None"
                ],
                "stop": [
                    "bool",
                    "str",
                    "list[str]",
                    "None"
                ],
                "permanent_snow_line": [
                    "float",
                    "int"
                ],
                "slope": [
                    "float",
                    "int"
                ],
                "num": [
                    "float",
                    "int"
                ],
                "permanent_snow_rate": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float,float]]"
                ]
            }
        }
    },
    "mathematical-modelling-master/glacier/flow_field.py": {
        "stationary_internal_flow_field": {
            "name": "stationary_internal_flow_field",
            "location": 10,
            "return": [
                "tuple[GlacierParameters]"
            ],
            "arguments": {
                "xs": [
                    "int"
                ],
                "h_0": [
                    "int",
                    "float",
                    "str"
                ],
                "angle": [
                    "int",
                    "float",
                    "str"
                ],
                "production": []
            }
        },
        "plot_internal_flow_field": {
            "name": "plot_internal_flow_field",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "glacier": [],
                "zs": [
                    "int",
                    "typing.Iterable[typing.Union[int,str]]"
                ],
                "U": [
                    "int",
                    "str"
                ],
                "V": [
                    "int",
                    "str"
                ]
            }
        },
        "stationary_internal_flow_field.v": {
            "name": "v",
            "location": 50,
            "return": [],
            "arguments": {
                "i": [],
                "z": [],
                "dx": [],
                "N": []
            }
        }
    },
    "mathematical-modelling-master/glacier/main.py": {},
    "mathematical-modelling-master/glacier/physics.py": {
        "GlacierParameters.__post_init__": {
            "name": "__post_init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlacierParameters.generate_steady_state_height": {
            "name": "generate_steady_state_height",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlacierParameters.create_simple_accumulation_model": {
            "name": "create_simple_accumulation_model",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlacierParameters.plot": {
            "name": "plot",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "show": [
                    "bool"
                ]
            }
        }
    },
    "mathematical-modelling-master/glacier/plot.py": {
        "animate_glacier": {
            "name": "animate_glacier",
            "location": 13,
            "return": [],
            "arguments": {
                "solver": [
                    "bool",
                    "typing.Iterable[str]",
                    "typing.Mapping"
                ],
                "interval": [
                    "int"
                ],
                "plot_interval": [
                    "int"
                ],
                "show": [
                    "bool"
                ],
                "save_to": [
                    "str"
                ],
                "flow_field": [
                    "bool"
                ]
            }
        },
        "animate_glacier.init": {
            "name": "init",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "animate_glacier.update": {
            "name": "update",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "step": []
            }
        }
    },
    "mathematical-modelling-master/glacier/solvers.py": {
        "Solver.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "glacier": [
                    "None",
                    "tuple[typing.Type]",
                    "str"
                ],
                "name": [
                    "None",
                    "str",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "Solver.plot": {
            "name": "plot",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "time_steps": [
                    "int"
                ],
                "show": [
                    "bool"
                ]
            }
        },
        "Solver.save": {
            "name": "save",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solver.load": {
            "name": "load",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solver.get_filepath": {
            "name": "get_filepath",
            "location": 134,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "Solver.on_disk": {
            "name": "on_disk",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solver.calculate_flow_fields": {
            "name": "calculate_flow_fields",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "save_every": [
                    "int"
                ]
            }
        },
        "Solver.solve": {
            "name": "solve",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t_end": [
                    "int"
                ],
                "delta_t": [
                    "None",
                    "int"
                ],
                "method": [
                    "int"
                ],
                "save_every": [
                    "int"
                ]
            }
        },
        "Solver.animate": {
            "name": "animate",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "show": [
                    "bool"
                ],
                "plot_step": [
                    "int"
                ],
                "frame_delay": [
                    "int"
                ]
            }
        }
    },
    "mathematical-modelling-master/glacier/__init__.py": {},
    "mathematical-modelling-master/tests/test_accumulation.py": {
        "test_permanent_snow_line": {
            "name": "test_permanent_snow_line",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathematical-modelling-master/tests/test_plot.py": {
        "test_animate_glacier": {
            "name": "test_animate_glacier",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathematical-modelling-master/tests/test_solvers.py": {
        "finite_volume_solver": {
            "name": "finite_volume_solver",
            "location": 12,
            "return": [
                "Solver"
            ],
            "arguments": {}
        },
        "test_plotting_initial_conditions": {
            "name": "test_plotting_initial_conditions",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_finite_volume_solver": {
            "name": "test_finite_volume_solver",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "finite_volume_solver": []
            }
        },
        "test_solving_with_finite_volume_method": {
            "name": "test_solving_with_finite_volume_method",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "finite_volume_solver": [
                    "bool",
                    "str",
                    "float"
                ]
            }
        },
        "test_glacier_parameters": {
            "name": "test_glacier_parameters",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_generate_steady_state_height_of_glacier": {
            "name": "test_generate_steady_state_height_of_glacier",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculation_of_steady_state": {
            "name": "test_calculation_of_steady_state",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "glacier": {
            "name": "glacier",
            "location": 100,
            "return": [
                "GlacierParameters"
            ],
            "arguments": {}
        },
        "test_generation_of_steady_state_height": {
            "name": "test_generation_of_steady_state_height",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "glacier": []
            }
        },
        "test_plotting_final_result_of_solver": {
            "name": "test_plotting_final_result_of_solver",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "glacier": []
            }
        }
    }
}
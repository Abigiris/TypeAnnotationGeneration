{
    "mayan-feeder-master/setup.py": {},
    "mayan-feeder-master/src/mayan_feeder/cli.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "verbose": [
                    "bool"
                ]
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/config.py": {
        "get": {
            "name": "get",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "mayan-feeder-master/src/mayan_feeder/document.py": {
        "Document.__attrs_post_init__": {
            "name": "__attrs_post_init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.upload": {
            "name": "upload",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.add_to_cabinets": {
            "name": "add_to_cabinets",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.process": {
            "name": "process",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.process_thread": {
            "name": "process_thread",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.scanning": {
            "name": "scanning",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.create_pdf": {
            "name": "create_pdf",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.remove_blanks": {
            "name": "remove_blanks",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.pages": {
            "name": "pages",
            "location": 188,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/forms.py": {
        "create_cabinets": {
            "name": "create_cabinets",
            "location": 14,
            "return": [
                "list[tuple[str]]",
                "None"
            ],
            "arguments": {}
        },
        "DocumentForm.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/logger.py": {
        "SocketIOHandler._colorize_it": {
            "name": "_colorize_it",
            "location": 11,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,bool]]"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "SocketIOHandler.emit": {
            "name": "emit",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/mayan.py": {
        "MayanHandler.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "bytes",
                    "bool"
                ],
                "username": [
                    "str",
                    "bytes",
                    "bool"
                ],
                "password": [
                    "str",
                    "bytes",
                    "bool"
                ]
            }
        },
        "MayanHandler.create_url": {
            "name": "create_url",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "list[str]",
                    "typing.Sequence[str]",
                    "bool"
                ]
            }
        },
        "MayanHandler.r_get": {
            "name": "r_get",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "bytes",
                    "dict[str, typing.Any]",
                    "int"
                ]
            }
        },
        "MayanHandler.r_post": {
            "name": "r_post",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "data": [
                    "str",
                    "bool",
                    "typing.MutableMapping",
                    "None"
                ],
                "files": [
                    "str",
                    "bool",
                    "typing.MutableMapping",
                    "None"
                ]
            }
        },
        "MayanHandler.cabinets": {
            "name": "cabinets",
            "location": 76,
            "return": [
                "float",
                "int",
                "dict[int, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MayanHandler.add_to_cabinet": {
            "name": "add_to_cabinet",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cabinet_id": [
                    "str",
                    "bool"
                ],
                "document_id": [
                    "str",
                    "bool"
                ]
            }
        },
        "MayanHandler.upload": {
            "name": "upload",
            "location": 104,
            "return": [
                "int",
                "list[int]",
                "bytes",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "pdf_file_path": [
                    "str"
                ]
            }
        },
        "MayanHandler.is_available": {
            "name": "is_available",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/utils.py": {
        "open_browser": {
            "name": "open_browser",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "commands_available": {
            "name": "commands_available",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "commands": [
                    "str"
                ]
            }
        },
        "is_blank": {
            "name": "is_blank",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "image_file": [
                    "typing.Sequence[str]",
                    "str",
                    "list[str]",
                    "int"
                ]
            }
        },
        "ChDir.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_dir": [
                    "str",
                    "int"
                ]
            }
        },
        "ChDir.__enter__": {
            "name": "__enter__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChDir.__exit__": {
            "name": "__exit__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mayan-feeder-master/src/mayan_feeder/web.py": {
        "root": {
            "name": "root",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "mayan-feeder-master/src/mayan_feeder/__init__.py": {},
    "mayan-feeder-master/tests/conftest.py": {
        "cabinets_list_0": {
            "name": "cabinets_list_0",
            "location": 7,
            "return": [
                "typing.Generator[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[int,None,None,list[typing.Union[dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[list[],int,typing.Text,typing.Text,int,typing.Text,None,typing.Text,typing.Text]],dict[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text], typing.Union[list[],int,typing.Text,typing.Text,int,typing.Text,None,typing.Text,typing.Text]]]]]]]"
            ],
            "arguments": {}
        },
        "document_config": {
            "name": "document_config",
            "location": 45,
            "return": [
                "typing.Generator[list[typing.Union[typing.Text,typing.Text,typing.Text,list[typing.Text]]]]"
            ],
            "arguments": {}
        },
        "settings": {
            "name": "settings",
            "location": 55,
            "return": [
                "typing.Generator[dict[typing.Text, dict[typing.Union[typing.Text,typing.Text,typing.Text], typing.Union[typing.Text,typing.Text,typing.Text]]]]"
            ],
            "arguments": {}
        },
        "web_app": {
            "name": "web_app",
            "location": 66,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    },
    "mayan-feeder-master/tests/test_cli.py": {
        "test_main_commands_not_available": {
            "name": "test_main_commands_not_available",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_utils": [],
                "mock_log": []
            }
        },
        "test_main_verbose": {
            "name": "test_main_verbose",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_mayan": [],
                "mock_config": [],
                "mock_web": [],
                "mock_utils": [],
                "mock_log": [],
                "mock_threading": [],
                "verbose_level": [],
                "expected": [],
                "settings": []
            }
        },
        "test_main_couldnotconnect": {
            "name": "test_main_couldnotconnect",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_mayan": [],
                "mock_config": [],
                "mock_utils": [],
                "mock_log": [],
                "settings": []
            }
        }
    },
    "mayan-feeder-master/tests/test_config.py": {
        "test_get": {
            "name": "test_get",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_path": [
                    "tuple[str]"
                ],
                "mock_log": [
                    "typing.Iterable[]",
                    "typing.Callable[, ]"
                ],
                "config_data": [
                    "str",
                    "dict[str, dict[str, typing.Any]]",
                    "dict[, ]",
                    "None",
                    "typing.Type"
                ],
                "expected": [
                    "bool"
                ],
                "tmpdir": [
                    "str"
                ]
            }
        },
        "test_get_no_configfile": {
            "name": "test_get_no_configfile",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_echo": [],
                "mock_path": []
            }
        },
        "test_get_missing_mayan_keys": {
            "name": "test_get_missing_mayan_keys",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_path": [
                    "typing.Callable[, ]"
                ],
                "mock_echo": [],
                "config_data": [
                    "dict[str, typing.Union[str,None]]",
                    "dict[, ]",
                    "typing.IO"
                ],
                "tmpdir": []
            }
        },
        "test_get_missing_mayan_key": {
            "name": "test_get_missing_mayan_key",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_echo": [],
                "mock_path": [],
                "tmpdir": []
            }
        }
    },
    "mayan-feeder-master/tests/test_document.py": {
        "test_init": {
            "name": "test_init",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_datetime": [],
                "mock_mayan_handler": [],
                "mock_mkdtemp": [],
                "document_config": []
            }
        },
        "test_upload": {
            "name": "test_upload",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_mayan_handler": [],
                "document_config": []
            }
        },
        "test_upload_exception": {
            "name": "test_upload_exception",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_mayan_handler": [],
                "document_config": []
            }
        },
        "test_add_to_cabinets": {
            "name": "test_add_to_cabinets",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_mayan_handler": [],
                "document_config": []
            }
        },
        "test_add_to_cabinets_exception": {
            "name": "test_add_to_cabinets_exception",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_mayan_handler": [],
                "document_config": []
            }
        },
        "test_process": {
            "name": "test_process",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_thread": [],
                "document_config": []
            }
        },
        "test_process_thread": {
            "name": "test_process_thread",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_sleep": [],
                "mock_rmtree": [],
                "mock_log": [],
                "mock_scanning": [],
                "mock_create_pdf": [],
                "mock_upload": [],
                "mock_add_to_cabinets": [],
                "mock_mkdtemp": [],
                "document_config": []
            }
        },
        "test_scanning": {
            "name": "test_scanning",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_subprocess": [],
                "mock_mkdtemp": [],
                "mock_chdir": [],
                "document_config": []
            }
        },
        "test_scanning_exception": {
            "name": "test_scanning_exception",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_chdir": [],
                "document_config": []
            }
        },
        "test_create_pdf": {
            "name": "test_create_pdf",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_listdir": [],
                "mock_isfile": [],
                "mock_mkdtemp": [],
                "mock_log": [],
                "mock_chdir": [],
                "mock_subprocess": [],
                "mock_datetime": [],
                "document_config": []
            }
        },
        "test_create_pdf_not_enough_pages": {
            "name": "test_create_pdf_not_enough_pages",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_os": [],
                "mock_log": [
                    "typing.Iterable[]"
                ],
                "mock_mkdtemp": [],
                "document_config": []
            }
        },
        "test_create_pdf_exception": {
            "name": "test_create_pdf_exception",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_os": [
                    "dict[str, typing.Sequence[str]]"
                ],
                "mock_log": [
                    "str",
                    "dict[str, dict[str, str]]"
                ],
                "document_config": []
            }
        },
        "test_pages": {
            "name": "test_pages",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_log": [],
                "mock_mkdtemp": [],
                "mock_listdir": [],
                "mock_isfile": [],
                "mock_datetime": [],
                "document_config": [
                    "dict[str, str]"
                ]
            }
        },
        "test_remove_blanks": {
            "name": "test_remove_blanks",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_mkdtemp": [],
                "mock_is_blank": [],
                "mock_remove": [],
                "mock_pages": [],
                "mock_log": [],
                "document_config": []
            }
        },
        "test_remove_blanks_exception": {
            "name": "test_remove_blanks_exception",
            "location": 370,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_mkdtemp": [],
                "mock_is_blank": [],
                "mock_pages": [],
                "mock_log": [],
                "document_config": []
            }
        }
    },
    "mayan-feeder-master/tests/test_forms.py": {
        "test_create_cabinets": {
            "name": "test_create_cabinets",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_config": [],
                "mock_mayan": [],
                "cabinets_list_0": [],
                "settings": []
            }
        },
        "test_create_cabinets_no_config": {
            "name": "test_create_cabinets_no_config",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_config": []
            }
        },
        "test_document_form": {
            "name": "test_document_form",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_create_cabinets": []
            }
        }
    },
    "mayan-feeder-master/tests/test_logger.py": {
        "test__colorize_it": {
            "name": "test__colorize_it",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "level": [
                    "str",
                    "int",
                    "Exception"
                ],
                "expected": [
                    "str",
                    "dict[str, dict[str, str]]"
                ]
            }
        },
        "test_emit": {
            "name": "test_emit",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_web": []
            }
        },
        "test_emit_not_called": {
            "name": "test_emit_not_called",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_web": []
            }
        }
    },
    "mayan-feeder-master/tests/test_mayan.py": {
        "test_create_url": {
            "name": "test_create_url",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "endpoint": [
                    "str"
                ],
                "expected": [
                    "str"
                ]
            }
        },
        "test_is_available": {
            "name": "test_is_available",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_r_get": []
            }
        },
        "test_is_available_empty_dict": {
            "name": "test_is_available_empty_dict",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_r_get": []
            }
        },
        "test_is_available_exception": {
            "name": "test_is_available_exception",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_r_get": []
            }
        }
    },
    "mayan-feeder-master/tests/test_utils.py": {
        "test_chdir": {
            "name": "test_chdir",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_os": [],
                "mock_log": [
                    "tuple[typing.Union[str,mock.Mock]]"
                ]
            }
        },
        "test_commands_available": {
            "name": "test_commands_available",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_spawn": [],
                "commands": [],
                "expected": []
            }
        },
        "test_is_blank": {
            "name": "test_is_blank",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "image_file": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "mayan-feeder-master/tests/test_web.py": {
        "test_root_get": {
            "name": "test_root_get",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_create_cabinets": [],
                "web_app": []
            }
        },
        "test_root_post": {
            "name": "test_root_post",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_document": [],
                "mock_config": [],
                "mock_create_cabinets": [],
                "web_app": [],
                "settings": []
            }
        }
    }
}
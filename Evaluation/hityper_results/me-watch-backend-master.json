{
    "me-watch-backend-master/manage.py": {},
    "me-watch-backend-master/core/admin.py": {},
    "me-watch-backend-master/core/apps.py": {},
    "me-watch-backend-master/core/models.py": {},
    "me-watch-backend-master/core/permissions.py": {},
    "me-watch-backend-master/core/tests.py": {
        "BaseAuthorizedTestCase.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAuthorizedTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "int"
                ]
            }
        }
    },
    "me-watch-backend-master/core/urls.py": {},
    "me-watch-backend-master/core/utils.py": {
        "vk_api_call": {
            "name": "vk_api_call",
            "location": 17,
            "return": [],
            "arguments": {
                "token": [
                    "bool",
                    "str",
                    "bytes",
                    "dict[str, str]"
                ],
                "method": [
                    "str",
                    "bool",
                    "bytes",
                    "typing.Sequence[]"
                ],
                "params": []
            }
        },
        "BaseSocialIntegration.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseSocialIntegration.get_redirect_uri": {
            "name": "get_redirect_uri",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseSocialIntegration.get_redirect_params": {
            "name": "get_redirect_params",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int"
                ]
            }
        },
        "BaseSocialIntegration.get_auth_params": {
            "name": "get_auth_params",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int"
                ],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "BaseSocialIntegration.get_personal_info": {
            "name": "get_personal_info",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "external_token": [
                    "list[str]",
                    "str",
                    "None",
                    "list[int]"
                ],
                "user_id": [
                    "list[str]",
                    "str",
                    "None",
                    "list[int]"
                ]
            }
        },
        "BaseOAuth2InitView.get": {
            "name": "get",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "int"
                ]
            }
        },
        "BaseOAuth2CallbackView.generate_token": {
            "name": "generate_token",
            "location": 100,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "external_token": [
                    "str",
                    "bool"
                ],
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "BaseOAuth2CallbackView.authorize": {
            "name": "authorize",
            "location": 129,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BaseOAuth2CallbackView.get": {
            "name": "get",
            "location": 149,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "VkIntegration.get_personal_info": {
            "name": "get_personal_info",
            "location": 160,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "self": [],
                "external_token": [
                    "str",
                    "bytes"
                ],
                "user_id": [
                    "list[str]",
                    "str",
                    "None",
                    "list[int]"
                ]
            }
        }
    },
    "me-watch-backend-master/core/views.py": {},
    "me-watch-backend-master/core/__init__.py": {},
    "me-watch-backend-master/core/migrations/0001_initial.py": {},
    "me-watch-backend-master/core/migrations/__init__.py": {},
    "me-watch-backend-master/me_watch/settings.py": {},
    "me-watch-backend-master/me_watch/urls.py": {},
    "me-watch-backend-master/me_watch/wsgi.py": {},
    "me-watch-backend-master/me_watch/__init__.py": {},
    "me-watch-backend-master/pictures/admin.py": {},
    "me-watch-backend-master/pictures/apps.py": {},
    "me-watch-backend-master/pictures/models.py": {},
    "me-watch-backend-master/pictures/serializers.py": {},
    "me-watch-backend-master/pictures/tests.py": {
        "BasePictureTestSuite.test_success_get_with_right_names": {
            "name": "test_success_get_with_right_names",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePictureTestSuite.test_fail_get_with_wrong_name": {
            "name": "test_fail_get_with_wrong_name",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePictureTestCase.setUp": {
            "name": "setUp",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "me-watch-backend-master/pictures/types.py": {},
    "me-watch-backend-master/pictures/urls.py": {},
    "me-watch-backend-master/pictures/utils.py": {
        "BaseParser.get_sources": {
            "name": "get_sources",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "YandexParser.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "YandexParser.get_sources": {
            "name": "get_sources",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "YandexParser._get_type_of_soup": {
            "name": "_get_type_of_soup",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "soup": []
            }
        },
        "YandexParser._parse_films": {
            "name": "_parse_films",
            "location": 50,
            "return": [
                "list[Picture]"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "initial_page": []
            }
        },
        "YandexParser._parse_series": {
            "name": "_parse_series",
            "location": 60,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "initial_page": []
            }
        },
        "YandexParser._get_internal_series_name": {
            "name": "_get_internal_series_name",
            "location": 76,
            "return": [],
            "arguments": {
                "initial_page": []
            }
        },
        "YandexParser._parse_source": {
            "name": "_parse_source",
            "location": 86,
            "return": [
                "Picture"
            ],
            "arguments": {
                "self": [],
                "internal_name": [],
                "season": [],
                "episode": []
            }
        },
        "YandexParser._series_parser": {
            "name": "_series_parser",
            "location": 106,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "internal_name": [],
                "season": []
            }
        }
    },
    "me-watch-backend-master/pictures/views.py": {
        "BasePictureListView.get_queryset": {
            "name": "get_queryset",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FilmListView.get_queryset": {
            "name": "get_queryset",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeriesListView.get_queryset": {
            "name": "get_queryset",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PictureSearchView.get": {
            "name": "get",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "picture_name": []
            }
        },
        "PictureSearchView.redirect": {
            "name": "redirect",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "picture": []
            }
        },
        "PictureSearchView.parse_links": {
            "name": "parse_links",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "picture_name": []
            }
        }
    },
    "me-watch-backend-master/pictures/__init__.py": {},
    "me-watch-backend-master/pictures/migrations/0001_initial.py": {},
    "me-watch-backend-master/pictures/migrations/__init__.py": {}
}
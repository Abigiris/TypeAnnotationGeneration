{
    "memologe-master/Memologe_Test.py": {
        "start_bot": {
            "name": "start_bot",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "memologe-master/app/config.py": {},
    "memologe-master/app/main.py": {},
    "memologe-master/app/objects.py": {
        "DataBase.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataBase.reload": {
            "name": "reload",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataBase.check_mysql_connection": {
            "name": "check_mysql_connection",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "memologe-master/app/db_models/__init__.py": {
        "User.create": {
            "name": "create",
            "location": 18,
            "return": [
                "User"
            ],
            "arguments": {
                "platform": [
                    "bool",
                    "float"
                ],
                "username": []
            }
        },
        "User.new_post": {
            "name": "new_post",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Memes.create": {
            "name": "create",
            "location": 40,
            "return": [
                "Memes"
            ],
            "arguments": {
                "link": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "stealer": [
                    "str",
                    "None"
                ],
                "post_time": [
                    "None",
                    "str"
                ]
            }
        },
        "Tags.create": {
            "name": "create",
            "location": 59,
            "return": [
                "Tags"
            ],
            "arguments": {
                "a_tag": [
                    "tuple[typing.Union[bytes,typing.Any]]",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "Association.create": {
            "name": "create",
            "location": 76,
            "return": [
                "Association"
            ],
            "arguments": {
                "meme_id": [
                    "str",
                    "None"
                ],
                "tag_id": [
                    "str",
                    "None"
                ],
                "user": [
                    "str",
                    "None"
                ]
            }
        },
        "Ratings.create": {
            "name": "create",
            "location": 93,
            "return": [
                "Ratings"
            ],
            "arguments": {
                "user": [
                    "dict[, ]"
                ],
                "meme": [
                    "dict[, ]"
                ],
                "vote": [
                    "dict[, ]"
                ]
            }
        }
    },
    "memologe-master/app/func/essentials.py": {
        "prep4post": {
            "name": "prep4post",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "meme": []
            }
        },
        "query_tags": {
            "name": "query_tags",
            "location": 27,
            "return": [
                "list[]"
            ],
            "arguments": {
                "meme_id": [
                    "int",
                    "str"
                ]
            }
        },
        "parse_amount": {
            "name": "parse_amount",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "string": []
            }
        },
        "random_meme": {
            "name": "random_meme",
            "location": 48,
            "return": [
                "typing.Text",
                "str",
                "None"
            ],
            "arguments": {}
        },
        "yield_random_meme": {
            "name": "yield_random_meme",
            "location": 61,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "count": [
                    "int",
                    "str",
                    "tuple[str]"
                ]
            }
        },
        "add_meme": {
            "name": "add_meme",
            "location": 67,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "link": [
                    "str",
                    "None",
                    "typing.Sequence[str]",
                    "bool"
                ],
                "tags": [
                    "str"
                ],
                "author": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "platform": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "posted_at": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "create_tag": {
            "name": "create_tag",
            "location": 91,
            "return": [],
            "arguments": {
                "tag": [
                    "str",
                    "dict[str, list[bytes]]"
                ]
            }
        },
        "create_association": {
            "name": "create_association",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "tag_id": [
                    "int",
                    "str",
                    "None"
                ],
                "meme_id": [
                    "int",
                    "str",
                    "None"
                ],
                "user": [
                    "int",
                    "str"
                ]
            }
        },
        "download": {
            "name": "download",
            "location": 110,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "link": [
                    "str"
                ]
            }
        },
        "check_existens": {
            "name": "check_existens",
            "location": 135,
            "return": [],
            "arguments": {
                "link": [
                    "str",
                    "None",
                    "float",
                    "dict[str, str]"
                ]
            }
        },
        "check_for_link": {
            "name": "check_for_link",
            "location": 141,
            "return": [
                "bool"
            ],
            "arguments": {
                "link": [
                    "bool",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "find_link": {
            "name": "find_link",
            "location": 145,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "post": [
                    "str"
                ]
            }
        },
        "check_auther_registerd": {
            "name": "check_auther_registerd",
            "location": 154,
            "return": [],
            "arguments": {
                "author_name": [
                    "str",
                    "int",
                    "None"
                ],
                "platform": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "categorise_meme": {
            "name": "categorise_meme",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "meme_id": [
                    "int",
                    "bytes",
                    "str"
                ],
                "tags": [
                    "str"
                ],
                "author": [
                    "int",
                    "str",
                    "typing.Sequence[typing.Sequence[int]]",
                    "None"
                ],
                "platform": [
                    "int",
                    "str",
                    "typing.Sequence[typing.Sequence[int]]",
                    "None"
                ]
            }
        },
        "list_tags": {
            "name": "list_tags",
            "location": 182,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "list_users": {
            "name": "list_users",
            "location": 189,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "history": {
            "name": "history",
            "location": 202,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "meme_id": [
                    "int",
                    "dict[, ]",
                    "set[tuple[typing.Union[int,int]]]",
                    "list[]",
                    "set[str]",
                    "str"
                ]
            }
        },
        "merge_time_line": {
            "name": "merge_time_line",
            "location": 240,
            "return": [
                "str"
            ],
            "arguments": {
                "time_line": [
                    "list[typing.Union[typing.Any,typing.Any]]",
                    "str"
                ]
            }
        },
        "rate_to_text": {
            "name": "rate_to_text",
            "location": 271,
            "return": [],
            "arguments": {
                "vote": [
                    "int",
                    "typing.Callable[[], collections.abc.Awaitable[typing.Mapping]]",
                    "typing.Mapping"
                ]
            }
        },
        "sort_by_data": {
            "name": "sort_by_data",
            "location": 280,
            "return": [],
            "arguments": {
                "tags": [],
                "rating": [
                    "str"
                ]
            }
        },
        "rate_meme": {
            "name": "rate_meme",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "meme_id": [
                    "int",
                    "str",
                    "None"
                ],
                "rate": [
                    "int",
                    "str",
                    "None"
                ],
                "user": [
                    "int",
                    "str",
                    "None",
                    "list[int]"
                ],
                "platform": [
                    "int",
                    "str",
                    "None",
                    "list[int]"
                ]
            }
        },
        "sum_ratings": {
            "name": "sum_ratings",
            "location": 301,
            "return": [
                "int"
            ],
            "arguments": {
                "meme_id": [
                    "int"
                ]
            }
        },
        "id_to_user": {
            "name": "id_to_user",
            "location": 308,
            "return": [],
            "arguments": {
                "user_id": [
                    "int"
                ]
            }
        },
        "id_to_meme": {
            "name": "id_to_meme",
            "location": 312,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "meme_id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "memologe-master/app/func/search.py": {
        "strict_search": {
            "name": "strict_search",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "tags": [
                    "list[]",
                    "int",
                    "str"
                ],
                "amount": [
                    "list[]",
                    "int",
                    "str"
                ]
            }
        },
        "soft_search": {
            "name": "soft_search",
            "location": 16,
            "return": [
                "typing.Text",
                "typing.Generator[]"
            ],
            "arguments": {
                "tags": [
                    "list[]",
                    "str"
                ],
                "amount": [
                    "int",
                    "list[str]",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "yield_search": {
            "name": "yield_search",
            "location": 35,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "tags": [
                    "str"
                ],
                "count": [
                    "int"
                ]
            }
        }
    },
    "memologe-master/app/func/static.py": {
        "show_help": {
            "name": "show_help",
            "location": 9,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "translate": {
            "name": "translate",
            "location": 36,
            "return": [
                "ConfigParser"
            ],
            "arguments": {
                "language": [
                    "typing.Text"
                ],
                "path": [
                    "typing.Text"
                ]
            }
        }
    },
    "memologe-master/app/func/__init__.py": {},
    "memologe-master/app/handler/Discord.py": {
        "DiscordAPI.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "memologe-master/app/handler/Telegram.py": {
        "parse_count": {
            "name": "parse_count",
            "location": 34,
            "return": [
                "tuple[typing.Union[int,str]]",
                "tuple[typing.Union[int,typing.Text]]"
            ],
            "arguments": {
                "args": [],
                "position": [
                    "int"
                ],
                "default": [
                    "int"
                ]
            }
        },
        "post_meme": {
            "name": "post_meme",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "random": {
            "name": "random",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "userhelp": {
            "name": "userhelp",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[str, typing.Any]",
                    "memoryview",
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "_size": {
            "name": "_size",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "str",
                    "list[str]",
                    "bool",
                    "list[]",
                    "bytes"
                ],
                "update": [
                    "str",
                    "None",
                    "bool"
                ],
                "args": []
            }
        },
        "search": {
            "name": "search",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "str"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "_tags": {
            "name": "_tags",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "posters": {
            "name": "posters",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "idtomeme": {
            "name": "idtomeme",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "category": {
            "name": "category",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "_info": {
            "name": "_info",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int",
                    "list[]",
                    "typing.Iterator"
                ],
                "update": [
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "vote": {
            "name": "vote",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [],
                "rating": [
                    "dict[, ]",
                    "int"
                ],
                "username": [
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "upvote": {
            "name": "upvote",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ]
            }
        },
        "downvote": {
            "name": "downvote",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "bool"
                ],
                "update": [
                    "dict[, ]"
                ]
            }
        },
        "error_handler": {
            "name": "error_handler",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "typing.Sequence[typing.Any]",
                    "str",
                    "float",
                    "typing.Callable[[], None]",
                    "None",
                    "set[]"
                ],
                "updater": [
                    "typing.Sequence[typing.Any]",
                    "str",
                    "float",
                    "typing.Callable[[], None]",
                    "None",
                    "set[]"
                ],
                "error": [
                    "str",
                    "tuple[typing.Union[str,int]]",
                    "None"
                ]
            }
        },
        "init_telegram": {
            "name": "init_telegram",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "memologe-master/app/handler/__init__.py": {}
}
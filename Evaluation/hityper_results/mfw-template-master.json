{
    "mfw-template-master/setup.py": {
        "readfile": {
            "name": "readfile",
            "location": 8,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "mfw-template-master/docs/conf.py": {},
    "mfw-template-master/mfw_template/cli.py": {
        "validate_name": {
            "name": "validate_name",
            "location": 12,
            "return": [
                "str",
                "list[str]"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "tuple[str]"
                ],
                "param": [
                    "str",
                    "tuple[str]"
                ],
                "value": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "to_identifier": {
            "name": "to_identifier",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "lower": [
                    "bool"
                ]
            }
        },
        "require_config": {
            "name": "require_config",
            "location": 35,
            "return": [],
            "arguments": {
                "f": [
                    "dict[, ]",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "app": {
            "name": "app",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "require_config.wrapper": {
            "name": "wrapper",
            "location": 36,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "mfw-template-master/mfw_template/__init__.py": {},
    "mfw-template-master/mfw_template/commands/create_applicationbehavior.py": {
        "create_applicationbehavior": {
            "name": "create_applicationbehavior",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/commands/create_behavior.py": {
        "create_behavior": {
            "name": "create_behavior",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/commands/create_fieldvalidator.py": {
        "create_fieldvalidator": {
            "name": "create_fieldvalidator",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/commands/create_formvalidator.py": {
        "create_formvalidator": {
            "name": "create_formvalidator",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/commands/create_project.py": {
        "get_git_config": {
            "name": "get_git_config",
            "location": 15,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {}
        },
        "create_project": {
            "name": "create_project",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "type": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "url": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "author": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "author_email": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "license": [
                    "typing.Callable[List,bool, None]",
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "get_git_config.get_opt": {
            "name": "get_opt",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "section": [],
                "option": []
            }
        }
    },
    "mfw-template-master/mfw_template/commands/create_resource.py": {
        "create_resource": {
            "name": "create_resource",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/commands/__init__.py": {},
    "mfw-template-master/mfw_template/templates/applicationbehavior/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/applicationbehavior/{{cookiecutter.module_name}}/applicationbehavior.py": {},
    "mfw-template-master/mfw_template/templates/applicationbehavior/{{cookiecutter.module_name}}/model.py": {},
    "mfw-template-master/mfw_template/templates/applicationbehavior/{{cookiecutter.module_name}}/modelui.py": {},
    "mfw-template-master/mfw_template/templates/applicationbehavior/{{cookiecutter.module_name}}/__init__.py": {},
    "mfw-template-master/mfw_template/templates/behavior/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/behavior/{{cookiecutter.module_name}}/behavior.py": {},
    "mfw-template-master/mfw_template/templates/behavior/{{cookiecutter.module_name}}/model.py": {},
    "mfw-template-master/mfw_template/templates/behavior/{{cookiecutter.module_name}}/modelui.py": {},
    "mfw-template-master/mfw_template/templates/behavior/{{cookiecutter.module_name}}/schema.py": {},
    "mfw-template-master/mfw_template/templates/behavior/{{cookiecutter.module_name}}/__init__.py": {},
    "mfw-template-master/mfw_template/templates/fieldvalidator/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/fieldvalidator/{{ cookiecutter.module_container }}/__init__.py": {},
    "mfw-template-master/mfw_template/templates/fieldvalidator/{{ cookiecutter.module_container }}/{{cookiecutter.module_name}}.py": {
        "validate": {
            "name": "validate",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "int",
                    "None",
                    "list[str]",
                    "dict[, ]",
                    "str"
                ],
                "schema": [
                    "int",
                    "None",
                    "list[str]",
                    "dict[, ]",
                    "str"
                ],
                "field": [
                    "int",
                    "None",
                    "list[str]",
                    "dict[, ]",
                    "str"
                ],
                "value": [
                    "int",
                    "None",
                    "list[str]",
                    "dict[, ]",
                    "str"
                ],
                "mode": [
                    "None",
                    "int",
                    "list[str]",
                    "dict[, ]",
                    "str"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/templates/formvalidator/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/formvalidator/{{ cookiecutter.module_container }}/__init__.py": {},
    "mfw-template-master/mfw_template/templates/formvalidator/{{ cookiecutter.module_container }}/{{cookiecutter.module_name}}.py": {
        "validate": {
            "name": "validate",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "bool",
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "schema": [
                    "bool",
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "data": [
                    "bool",
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "mode": [
                    "None",
                    "bool",
                    "str",
                    "bytes",
                    "dict[str, str]"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/templates/project/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/bootstrap-buildout.py": {
        "_final_version": {
            "name": "_final_version",
            "location": 157,
            "return": [
                "bool"
            ],
            "arguments": {
                "parsed_version": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/setup.py": {
        "readfile": {
            "name": "readfile",
            "location": 7,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/{{cookiecutter.project_name}}/app.py": {
        "get_approot": {
            "name": "get_approot",
            "location": 56,
            "return": [
                "AppRoot"
            ],
            "arguments": {
                "request": [
                    "str"
                ]
            }
        },
        "allow_all": {
            "name": "allow_all",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "bool",
                    "list[dict[str, int]]",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ],
                "context": [
                    "str",
                    "bool",
                    "list[dict[str, int]]",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ],
                "permission": [
                    "str",
                    "bool",
                    "list[dict[str, int]]",
                    "list[tuple[typing.Union[str,typing.Any]]]"
                ]
            }
        },
        "get_template_directory": {
            "name": "get_template_directory",
            "location": 61,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "AppRoot.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/{{cookiecutter.project_name}}/static.py": {
        "get_staticroot": {
            "name": "get_staticroot",
            "location": 12,
            "return": [
                "StaticRoot"
            ],
            "arguments": {
                "absorb": [
                    "str",
                    "typing.BinaryIO",
                    "typing.IO"
                ]
            }
        }
    },
    "mfw-template-master/mfw_template/templates/project/{{cookiecutter.project_name}}/{{cookiecutter.project_name}}/__init__.py": {},
    "mfw-template-master/mfw_template/templates/resource/hooks/post_gen_project.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/model.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/modelui.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/path.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/permission_rule.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/schema.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/storage.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/typeinfo.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/view.py": {},
    "mfw-template-master/mfw_template/templates/resource/{{cookiecutter.module_name}}/__init__.py": {}
}
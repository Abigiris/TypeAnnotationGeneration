{
    "myCSSA-master/DBRestore/adapter.py": {
        "SQLDataTable.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLDataTable.getColString": {
            "name": "getColString",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLDataTable.getValueString": {
            "name": "getValueString",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rowIdx": [],
                "anonymous": [
                    "bool"
                ]
            }
        },
        "SQLTableAdapter.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbConfig": []
            }
        },
        "SQLTableAdapter.__getColumns": {
            "name": "__getColumns",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tableName": []
            }
        },
        "SQLTableAdapter.__getRows": {
            "name": "__getRows",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tableName": []
            }
        },
        "SQLTableAdapter.getDataTable": {
            "name": "getDataTable",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tableName": []
            }
        },
        "SQLTableAdapter.changeConnection": {
            "name": "changeConnection",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbConfig": []
            }
        },
        "SQLTableAdapter.clean": {
            "name": "clean",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBCopier.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBCopier.copyToDestination": {
            "name": "copyToDestination",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/DBRestore/core.py": {
        "DBUtil.getConnection": {
            "name": "getConnection",
            "location": 7,
            "return": [],
            "arguments": {
                "dbconfig": [],
                "test": [
                    "bool"
                ]
            }
        },
        "DBUtil.getConnString": {
            "name": "getConnString",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "dbconfig": []
            }
        },
        "DBUtil.getTableList": {
            "name": "getTableList",
            "location": 27,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "DBUtil.checkTable": {
            "name": "checkTable",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "tableName": [],
                "dbConfig": []
            }
        }
    },
    "myCSSA-master/DBRestore/main.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "myCSSA-master/DBRestore/settings.py": {},
    "myCSSA-master/DBRestore/__init__.py": {},
    "myCSSA-master/src/manage.py": {},
    "myCSSA-master/src/BlogAPI/admin.py": {},
    "myCSSA-master/src/BlogAPI/apps.py": {},
    "myCSSA-master/src/BlogAPI/models.py": {
        "Blog.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/BlogAPI/tests.py": {},
    "myCSSA-master/src/BlogAPI/urls.py": {},
    "myCSSA-master/src/BlogAPI/views.py": {
        "checkUserWrittenBlog": {
            "name": "checkUserWrittenBlog",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "userAuthed": [],
                "user": [],
                "blog": []
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 563,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "permission_denied": {
            "name": "permission_denied",
            "location": 567,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 571,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "server_error": {
            "name": "server_error",
            "location": 575,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "under_dev_notice": {
            "name": "under_dev_notice",
            "location": 578,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "editBlog.get": {
            "name": "get",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "editBlog.post": {
            "name": "post",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "saveBlog.decodeSuckString": {
            "name": "decodeSuckString",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "suckString": []
            }
        },
        "saveBlog.storeToBlogOldContent": {
            "name": "storeToBlogOldContent",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "oldBlog": []
            }
        },
        "saveBlog.addTagsToBlog": {
            "name": "addTagsToBlog",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blog": [],
                "tags": []
            }
        },
        "saveBlog.getContent": {
            "name": "getContent",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "blogMainContent": []
            }
        },
        "saveBlog.get": {
            "name": "get",
            "location": 297,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "saveBlog.post": {
            "name": "post",
            "location": 303,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "writtenBlogs.get": {
            "name": "get",
            "location": 413,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "reviewBlogs.get": {
            "name": "get",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "reviewBlogAjax.get": {
            "name": "get",
            "location": 452,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "reviewBlogAjax.post": {
            "name": "post",
            "location": 513,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "deleteBlog.get": {
            "name": "get",
            "location": 524,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "deleteBlog.post": {
            "name": "post",
            "location": 555,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/BlogAPI/__init__.py": {},
    "myCSSA-master/src/BlogAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/BlogAPI/migrations/0002_auto_20190509_0506.py": {},
    "myCSSA-master/src/BlogAPI/migrations/__init__.py": {},
    "myCSSA-master/src/CommunicateManager/admin.py": {},
    "myCSSA-master/src/CommunicateManager/apps.py": {},
    "myCSSA-master/src/CommunicateManager/forms.py": {},
    "myCSSA-master/src/CommunicateManager/models.py": {},
    "myCSSA-master/src/CommunicateManager/notification.py": {
        "insertDB": {
            "name": "insertDB",
            "location": 10,
            "return": [
                "tuple[typing.Union[bool,typing.Text]]"
            ],
            "arguments": {
                "form": [],
                "targetUsersId": [],
                "currentUserId": []
            }
        },
        "queryMessagesList": {
            "name": "queryMessagesList",
            "location": 52,
            "return": [],
            "arguments": {
                "currentUserId": []
            }
        },
        "queryMessageContent": {
            "name": "queryMessageContent",
            "location": 61,
            "return": [
                "tuple"
            ],
            "arguments": {
                "id": []
            }
        }
    },
    "myCSSA-master/src/CommunicateManager/send_email.py": {
        "send_emails": {
            "name": "send_emails",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "title": [],
                "content": [],
                "targetID": [],
                "currentUserId": []
            }
        },
        "email_content": {
            "name": "email_content",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "title": [],
                "content": [],
                "html_content": [],
                "targetEmail": []
            }
        },
        "queryEmailConfiguration": {
            "name": "queryEmailConfiguration",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "queryEmailList": {
            "name": "queryEmailList",
            "location": 90,
            "return": [],
            "arguments": {
                "currentUserId": []
            }
        },
        "queryEmailContent": {
            "name": "queryEmailContent",
            "location": 99,
            "return": [
                "tuple"
            ],
            "arguments": {
                "id": []
            }
        },
        "insertEmailDB": {
            "name": "insertEmailDB",
            "location": 121,
            "return": [
                "tuple[typing.Union[bool,typing.Text]]"
            ],
            "arguments": {
                "title": [],
                "content": [],
                "targetUsersId": [],
                "currentUserId": []
            }
        }
    },
    "myCSSA-master/src/CommunicateManager/tests.py": {},
    "myCSSA-master/src/CommunicateManager/urls.py": {},
    "myCSSA-master/src/CommunicateManager/views.py": {
        "message": {
            "name": "message",
            "location": 163,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "NotificationsList.get": {
            "name": "get",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NotificationsList.post": {
            "name": "post",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NotificationsDisplay.get": {
            "name": "get",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NotificationsDisplay.post": {
            "name": "post",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NotificationForm.get": {
            "name": "get",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NotificationForm.post": {
            "name": "post",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email.get": {
            "name": "get",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email.post": {
            "name": "post",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EmailHistory.get": {
            "name": "get",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EmailHistory.post": {
            "name": "post",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Inbox.get": {
            "name": "get",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Inbox.post": {
            "name": "post",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Message.get": {
            "name": "get",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Message.post": {
            "name": "post",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Compose.get": {
            "name": "get",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Compose.post": {
            "name": "post",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/CommunicateManager/__init__.py": {},
    "myCSSA-master/src/CommunicateManager/migrations/0001_initial.py": {},
    "myCSSA-master/src/CommunicateManager/migrations/__init__.py": {},
    "myCSSA-master/src/CommunityAPI/admin.py": {},
    "myCSSA-master/src/CommunityAPI/apps.py": {},
    "myCSSA-master/src/CommunityAPI/caches.py": {
        "get_favourite_count_for_post": {
            "name": "get_favourite_count_for_post",
            "location": 6,
            "return": [],
            "arguments": {
                "post_id": [],
                "detail": [
                    "bool"
                ]
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/filters.py": {
        "IsOwnerFilterBackend.filter_queryset": {
            "name": "filter_queryset",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "IsOwnerFilterBackend.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 19,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "TagFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "TagFilter.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 42,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "NoImgFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "NoImgFilter.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 60,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "view": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/hub_urls.py": {},
    "myCSSA-master/src/CommunityAPI/hub_views.py": {
        "pk": {
            "name": "pk",
            "location": 15,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "instance": []
            }
        },
        "ShowPostView.get_context_data": {
            "name": "get_context_data",
            "location": 26,
            "return": [
                "dict[typing.Text, list[tuple[typing.Text]]]",
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostListJsonView.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostListJsonView.render_column": {
            "name": "render_column",
            "location": 124,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/miniprogram_api.py": {
        "get_access_token": {
            "name": "get_access_token",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "is_text_invalid": {
            "name": "is_text_invalid",
            "location": 69,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "openid": [],
                "text": [],
                "title": [
                    "None"
                ]
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/models.py": {
        "Tag.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Post.type": {
            "name": "type",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WxMiniProgramData.access_token": {
            "name": "access_token",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/paginations.py": {},
    "myCSSA-master/src/CommunityAPI/permissions.py": {
        "IsOwner.has_object_permission": {
            "name": "has_object_permission",
            "location": 5,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "obj": []
            }
        },
        "CanHandleReport.has_permission": {
            "name": "has_permission",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "CanCensorPost.has_permission": {
            "name": "has_permission",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/serializers.py": {
        "resolve_username": {
            "name": "resolve_username",
            "location": 121,
            "return": [],
            "arguments": {
                "profile": []
            }
        },
        "resolve_avatar": {
            "name": "resolve_avatar",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "profile": []
            }
        },
        "resolve_post_content": {
            "name": "resolve_post_content",
            "location": 136,
            "return": [],
            "arguments": {
                "post": []
            }
        },
        "get_post_by_id": {
            "name": "get_post_by_id",
            "location": 303,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "get_post_from_url": {
            "name": "get_post_from_url",
            "location": 315,
            "return": [],
            "arguments": {
                "view": [],
                "key_name": [
                    "typing.Text"
                ]
            }
        },
        "verify_main_post": {
            "name": "verify_main_post",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "post": []
            }
        },
        "verify_comment": {
            "name": "verify_comment",
            "location": 388,
            "return": [
                "None"
            ],
            "arguments": {
                "post": []
            }
        },
        "NotificationSerializer.get_senderUsername": {
            "name": "get_senderUsername",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "NotificationSerializer.get_senderAvatar": {
            "name": "get_senderAvatar",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PostImageSerializer._buildAbsoluteUrl": {
            "name": "_buildAbsoluteUrl",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "image": []
            }
        },
        "PostImageSerializer.getImageUrl": {
            "name": "getImageUrl",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PostImageSerializer.getThumbnail": {
            "name": "getThumbnail",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PostImageSerializer.getSmall": {
            "name": "getSmall",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "ReadContentSerializer.get_images": {
            "name": "get_images",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "EditContentSerializer.validate": {
            "name": "validate",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "PostSerializerMixin.fill_representation": {
            "name": "fill_representation",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repr": [],
                "instance": []
            }
        },
        "PostSerializerMixin.get_my": {
            "name": "get_my",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PostSerializerMixin.create_content": {
            "name": "create_content",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": [],
                "post": []
            }
        },
        "PostSerializerMixin._check_legal": {
            "name": "_check_legal",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "ReadMainPostSerializer.get_favouriteCount": {
            "name": "get_favouriteCount",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "ReadMainPostSerializer.get_isFavourite": {
            "name": "get_isFavourite",
            "location": 228,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "ReadMainPostSerializer.to_representation": {
            "name": "to_representation",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "EditMainPostSerializer.create": {
            "name": "create",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "EditMainPostSerializer.update": {
            "name": "update",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        },
        "ReadCommentSerializer.to_representation": {
            "name": "to_representation",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "EditCommentSerializer.create": {
            "name": "create",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "EditCommentSerializer.update": {
            "name": "update",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        },
        "ReadSubCommentSerializer.to_representation": {
            "name": "to_representation",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "EditSubCommentSerializer.create": {
            "name": "create",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "EditSubCommentSerializer.update": {
            "name": "update",
            "location": 435,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/tests.py": {},
    "myCSSA-master/src/CommunityAPI/urls.py": {},
    "myCSSA-master/src/CommunityAPI/views.py": {
        "get_notification_data_for_censor": {
            "name": "get_notification_data_for_censor",
            "location": 448,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "instance": []
            }
        },
        "FavouritePostViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FavouritePostViewSet.create_favourite_notification": {
            "name": "create_favourite_notification",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "favouritePost": [],
                "favouriteUser": []
            }
        },
        "FavouritePostViewSet.add_favouritepost": {
            "name": "add_favouritepost",
            "location": 96,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "FavouritePostViewSet.destroy": {
            "name": "destroy",
            "location": 111,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PostViewSetBase.get_permissions": {
            "name": "get_permissions",
            "location": 127,
            "return": [
                "list[IsOwner]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostViewSetBase.perform_destroy": {
            "name": "perform_destroy",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PostViewSetBase.create_serializer": {
            "name": "create_serializer",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": [],
                "instance": [
                    "None"
                ],
                "data": []
            }
        },
        "PostViewSetBase.edit_post_base": {
            "name": "edit_post_base",
            "location": 151,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "edit_serializer": [],
                "read_serializer": []
            }
        },
        "PostViewSetBase.create_post_instance": {
            "name": "create_post_instance",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "edit_serializer": []
            }
        },
        "PostViewSetBase.create_post_response": {
            "name": "create_post_response",
            "location": 175,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "post": [],
                "read_serializer": []
            }
        },
        "PostViewSetBase.create_reply_notification": {
            "name": "create_reply_notification",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [],
                "replier": [],
                "comment": [],
                "main_post": []
            }
        },
        "MainPostViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainPostViewSet.create_post": {
            "name": "create_post",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MainPostViewSet.edit_post": {
            "name": "edit_post",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "MainPostViewSet.add_view_count": {
            "name": "add_view_count",
            "location": 268,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "CommentViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommentViewSet.create_post": {
            "name": "create_post",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [
                    "None"
                ]
            }
        },
        "CommentViewSet.edit_post": {
            "name": "edit_post",
            "location": 328,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ],
                "post_id": [
                    "None"
                ]
            }
        },
        "NotificationViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationViewSet.mark_notification": {
            "name": "mark_notification",
            "location": 352,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "SubCommentViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 371,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubCommentViewSet.create_post": {
            "name": "create_post",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "comment_id": [
                    "None"
                ]
            }
        },
        "SubCommentViewSet.edit_post": {
            "name": "edit_post",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ],
                "comment_id": [
                    "None"
                ]
            }
        },
        "ImageUploadView.post": {
            "name": "post",
            "location": 434,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CensorViewSet._resolve_all_reports": {
            "name": "_resolve_all_reports",
            "location": 483,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CensorViewSet.censor_post": {
            "name": "censor_post",
            "location": 497,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "CensorViewSet.decensor_post": {
            "name": "decensor_post",
            "location": 526,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [
                    "None"
                ]
            }
        },
        "UserInformationView.get": {
            "name": "get",
            "location": 555,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserInformationView.put": {
            "name": "put",
            "location": 566,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserInformationView.delete": {
            "name": "delete",
            "location": 575,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReportViewSet.report_post": {
            "name": "report_post",
            "location": 593,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReportViewSet.reject_report": {
            "name": "reject_report",
            "location": 609,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReportViewSet.accept_report": {
            "name": "accept_report",
            "location": 623,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/CommunityAPI/__init__.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0002_auto_20210709_1833.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0003_auto_20210713_1753.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0004_auto_20210713_1830.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0005_auto_20210714_0406.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0006_auto_20210714_1737.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0007_auto_20210717_2058.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0008_auto_20210717_2331.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0009_auto_20210721_1744.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0010_auto_20210721_2314.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0011_auto_20210724_2353.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0012_userinformation.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0013_auto_20210731_0131.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0014_notification_sender.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0015_auto_20210802_0202.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0016_auto_20210802_1524.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0017_notification_time.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0018_auto_20210813_2243.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/0019_wxminiprogramdata.py": {},
    "myCSSA-master/src/CommunityAPI/migrations/__init__.py": {},
    "myCSSA-master/src/CSSANet/urls.py": {},
    "myCSSA-master/src/CSSANet/wsgi.py": {},
    "myCSSA-master/src/CSSANet/__init__.py": {},
    "myCSSA-master/src/CSSANet/settings/base.py": {},
    "myCSSA-master/src/CSSANet/settings/ci.py": {},
    "myCSSA-master/src/CSSANet/settings/dev.py": {},
    "myCSSA-master/src/CSSANet/settings/prod.py": {},
    "myCSSA-master/src/CSSANet/settings/__init__.py": {},
    "myCSSA-master/src/EventAPI/admin.py": {},
    "myCSSA-master/src/EventAPI/apis.py": {
        "is_duplicated_purchase": {
            "name": "is_duplicated_purchase",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [],
                "event": []
            }
        },
        "check_availability": {
            "name": "check_availability",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "event": []
            }
        },
        "issue_token_for_ticket": {
            "name": "issue_token_for_ticket",
            "location": 36,
            "return": [],
            "arguments": {
                "ticket": []
            }
        },
        "get_ticket": {
            "name": "get_ticket",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [],
                "event_id": [],
                "ticket_id": [
                    "None"
                ],
                "is_paid": [
                    "bool"
                ]
            }
        },
        "TicketsCheckIn": {
            "name": "TicketsCheckIn",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "token": []
            }
        }
    },
    "myCSSA-master/src/EventAPI/api_urls.py": {},
    "myCSSA-master/src/EventAPI/api_views.py": {
        "EventViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/EventAPI/apps.py": {},
    "myCSSA-master/src/EventAPI/filters.py": {},
    "myCSSA-master/src/EventAPI/forms.py": {
        "AddEventForm.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddEventForm.clean": {
            "name": "clean",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/EventAPI/models.py": {
        "EventUndertaker.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TakerContacter.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventType.__str__": {
            "name": "__str__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.get_estimate_remaining_factor": {
            "name": "get_estimate_remaining_factor",
            "location": 123,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.get_attendant_sum": {
            "name": "get_attendant_sum",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.get_attendant_list_url": {
            "name": "get_attendant_list_url",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/EventAPI/paginations.py": {},
    "myCSSA-master/src/EventAPI/public_urls.py": {},
    "myCSSA-master/src/EventAPI/serializers.py": {
        "EventsSerializer.get_eventTaker": {
            "name": "get_eventTaker",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "EventsSerializer.get_eventType": {
            "name": "get_eventType",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        }
    },
    "myCSSA-master/src/EventAPI/tests.py": {},
    "myCSSA-master/src/EventAPI/urls.py": {},
    "myCSSA-master/src/EventAPI/views.py": {
        "query_events": {
            "name": "query_events",
            "location": 278,
            "return": [],
            "arguments": {}
        },
        "EventListView.get": {
            "name": "get",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AttendantListView.get_queryset": {
            "name": "get_queryset",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddEventView.get": {
            "name": "get",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddEventView.post": {
            "name": "post",
            "location": 87,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateEventView.get": {
            "name": "get",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateEventView.post": {
            "name": "post",
            "location": 106,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ConfirmEventOrderView.get_info_collection_form_field": {
            "name": "get_info_collection_form_field",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfirmEventOrderView.get_context_data": {
            "name": "get_context_data",
            "location": 128,
            "return": [
                "dict[typing.Text, bool]",
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "ConfirmEventOrderView.get": {
            "name": "get",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ConfirmEventOrderView.post": {
            "name": "post",
            "location": 145,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EventCheckInSetupView.get_queryset": {
            "name": "get_queryset",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TicketCheckInView.get": {
            "name": "get",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "TicketCheckInView.post": {
            "name": "post",
            "location": 195,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserTicketListView.get": {
            "name": "get",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EventListJsonView.render_column": {
            "name": "render_column",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "EventListJsonView.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventListJsonView.filter_queryset": {
            "name": "filter_queryset",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        },
        "MobilePastEventAPI.get": {
            "name": "get",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "MobileFutureEventAPI.get": {
            "name": "get",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "myCSSA-master/src/EventAPI/__init__.py": {},
    "myCSSA-master/src/EventAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/EventAPI/migrations/0002_attendevent_attendeduserid.py": {},
    "myCSSA-master/src/EventAPI/migrations/0003_auto_20190220_0352.py": {},
    "myCSSA-master/src/EventAPI/migrations/0004_auto_20190220_0443.py": {},
    "myCSSA-master/src/EventAPI/migrations/0005_event_ismemberonly.py": {},
    "myCSSA-master/src/EventAPI/migrations/0006_auto_20190220_0603.py": {},
    "myCSSA-master/src/EventAPI/migrations/0007_auto_20190220_0608.py": {},
    "myCSSA-master/src/EventAPI/migrations/0008_auto_20190220_0758.py": {},
    "myCSSA-master/src/EventAPI/migrations/0009_auto_20190221_2308.py": {},
    "myCSSA-master/src/EventAPI/migrations/0010_auto_20190221_2323.py": {},
    "myCSSA-master/src/EventAPI/migrations/0011_auto_20190221_2345.py": {},
    "myCSSA-master/src/EventAPI/migrations/0012_eventattendentinfoform.py": {},
    "myCSSA-master/src/EventAPI/migrations/0013_auto_20190223_0941.py": {},
    "myCSSA-master/src/EventAPI/migrations/0014_auto_20190223_2255.py": {},
    "myCSSA-master/src/EventAPI/migrations/0015_auto_20190224_1017.py": {},
    "myCSSA-master/src/EventAPI/migrations/0016_event_wechatqrcode.py": {},
    "myCSSA-master/src/EventAPI/migrations/0017_auto_20190226_0010.py": {},
    "myCSSA-master/src/EventAPI/migrations/0018_auto_20190303_0529.py": {},
    "myCSSA-master/src/EventAPI/migrations/0019_auto_20190509_0759.py": {},
    "myCSSA-master/src/EventAPI/migrations/0020_auto_20211120_2339.py": {},
    "myCSSA-master/src/EventAPI/migrations/0021_auto_20211220_2116.py": {},
    "myCSSA-master/src/EventAPI/migrations/__init__.py": {},
    "myCSSA-master/src/FinanceAPI/admin.py": {},
    "myCSSA-master/src/FinanceAPI/apis.py": {
        "lodge_sys_gen_transaction": {
            "name": "lodge_sys_gen_transaction",
            "location": 4,
            "return": [
                "Transaction",
                "bool"
            ],
            "arguments": {
                "related_user": [],
                "type": [
                    "typing.Text"
                ],
                "is_effective": [
                    "bool"
                ],
                "amount": [
                    "None"
                ],
                "is_expense": [
                    "bool"
                ],
                "note": [
                    "None"
                ]
            }
        }
    },
    "myCSSA-master/src/FinanceAPI/apps.py": {},
    "myCSSA-master/src/FinanceAPI/forms.py": {},
    "myCSSA-master/src/FinanceAPI/models.py": {
        "TransactionType.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Transaction.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TransactionReview._update_transaction_status": {
            "name": "_update_transaction_status",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "created": [
                    "bool"
                ]
            }
        },
        "TransactionReview.save": {
            "name": "save",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invoice._bind_transactions": {
            "name": "_bind_transactions",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "created": [
                    "bool"
                ]
            }
        },
        "Invoice.save": {
            "name": "save",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invoice.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BankTransferRecipient._bind_transactions": {
            "name": "_bind_transactions",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "created": [
                    "bool"
                ]
            }
        },
        "BankTransferRecipient.save": {
            "name": "save",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankTransferRecipient.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/FinanceAPI/tests.py": {},
    "myCSSA-master/src/FinanceAPI/urls.py": {},
    "myCSSA-master/src/FinanceAPI/views.py": {
        "TransactionListView.get": {
            "name": "get",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "TransactionListJson.render_column": {
            "name": "render_column",
            "location": 62,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "TransactionListJson.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TransactionListJson.filter_queryset": {
            "name": "filter_queryset",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        },
        "TransactionDetailView.get": {
            "name": "get",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LodgeInvoiceView.get": {
            "name": "get",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CreateTransactionView.form_valid": {
            "name": "form_valid",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        }
    },
    "myCSSA-master/src/FinanceAPI/__init__.py": {},
    "myCSSA-master/src/FinanceAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/FinanceAPI/migrations/0002_auto_20181228_0344.py": {},
    "myCSSA-master/src/FinanceAPI/migrations/0003_auto_20190509_0506.py": {},
    "myCSSA-master/src/FinanceAPI/migrations/__init__.py": {},
    "myCSSA-master/src/FlexForm/admin.py": {},
    "myCSSA-master/src/FlexForm/apis.py": {
        "flexform_user_write_in": {
            "name": "flexform_user_write_in",
            "location": 3,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [],
                "field_data": []
            }
        }
    },
    "myCSSA-master/src/FlexForm/apps.py": {},
    "myCSSA-master/src/FlexForm/forms.py": {
        "AddFlexFormFieldForm.clean": {
            "name": "clean",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttachInfoCollectionForm.clean": {
            "name": "clean",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/FlexForm/models.py": {
        "_GetFormUploadsDir": {
            "name": "_GetFormUploadsDir",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "FlexForm.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/FlexForm/tests.py": {},
    "myCSSA-master/src/FlexForm/urls.py": {},
    "myCSSA-master/src/FlexForm/views.py": {
        "FormListView.get_context_data": {
            "name": "get_context_data",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateFormView.get": {
            "name": "get",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CreateFormView.post": {
            "name": "post",
            "location": 46,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddFormFieldView.get_new_context": {
            "name": "get_new_context",
            "location": 60,
            "return": [
                "dict[typing.Text, None]"
            ],
            "arguments": {
                "self": [],
                "form": [
                    "None"
                ],
                "event_bind_form": [
                    "None"
                ]
            }
        },
        "AddFormFieldView.get": {
            "name": "get",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddFormFieldView.post": {
            "name": "post",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/FlexForm/__init__.py": {},
    "myCSSA-master/src/FlexForm/migrations/0001_initial.py": {},
    "myCSSA-master/src/FlexForm/migrations/0002_auto_20190223_0440.py": {},
    "myCSSA-master/src/FlexForm/migrations/0003_auto_20190223_0652.py": {},
    "myCSSA-master/src/FlexForm/migrations/0004_auto_20190414_0147.py": {},
    "myCSSA-master/src/FlexForm/migrations/0005_auto_20190414_0205.py": {},
    "myCSSA-master/src/FlexForm/migrations/0006_flexformfield_is_required.py": {},
    "myCSSA-master/src/FlexForm/migrations/0007_auto_20190509_0506.py": {},
    "myCSSA-master/src/FlexForm/migrations/0008_auto_20190822_1409.py": {},
    "myCSSA-master/src/FlexForm/migrations/0009_auto_20190823_0330.py": {},
    "myCSSA-master/src/FlexForm/migrations/__init__.py": {},
    "myCSSA-master/src/guard_angel/admin.py": {},
    "myCSSA-master/src/guard_angel/apis.py": {
        "get_request_IPv4": {
            "name": "get_request_IPv4",
            "location": 8,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_previous_path_ip_count_by_hour": {
            "name": "get_previous_path_ip_count_by_hour",
            "location": 11,
            "return": [],
            "arguments": {
                "request": [],
                "path": [],
                "query_string": [
                    "None"
                ],
                "hours": [
                    "int"
                ],
                "method": [
                    "typing.Text"
                ]
            }
        }
    },
    "myCSSA-master/src/guard_angel/apps.py": {},
    "myCSSA-master/src/guard_angel/middleware.py": {
        "not_logging_whitelist": {
            "name": "not_logging_whitelist",
            "location": 5,
            "return": [
                "bool"
            ],
            "arguments": {
                "ip": []
            }
        },
        "HttpRequestLogMiddleware.get_machine_ip_addr": {
            "name": "get_machine_ip_addr",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestLogMiddleware.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "HttpRequestLogMiddleware.__call__": {
            "name": "__call__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/guard_angel/models.py": {},
    "myCSSA-master/src/guard_angel/tests.py": {},
    "myCSSA-master/src/guard_angel/views.py": {},
    "myCSSA-master/src/guard_angel/__init__.py": {},
    "myCSSA-master/src/guard_angel/migrations/0001_initial.py": {},
    "myCSSA-master/src/guard_angel/migrations/0002_httpaccesslogmodel_status_code.py": {},
    "myCSSA-master/src/guard_angel/migrations/__init__.py": {},
    "myCSSA-master/src/LegacyDataAPI/admin.py": {},
    "myCSSA-master/src/LegacyDataAPI/apps.py": {},
    "myCSSA-master/src/LegacyDataAPI/models.py": {},
    "myCSSA-master/src/LegacyDataAPI/serializers.py": {},
    "myCSSA-master/src/LegacyDataAPI/tests.py": {},
    "myCSSA-master/src/LegacyDataAPI/urls.py": {},
    "myCSSA-master/src/LegacyDataAPI/views.py": {
        "MultipleFieldLookupORMixin.get_object": {
            "name": "get_object",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/LegacyDataAPI/__init__.py": {},
    "myCSSA-master/src/LegacyDataAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/LegacyDataAPI/migrations/0002_auto_20181228_0043.py": {},
    "myCSSA-master/src/LegacyDataAPI/migrations/0003_auto_20181228_0044.py": {},
    "myCSSA-master/src/LegacyDataAPI/migrations/0004_auto_20181228_0312.py": {},
    "myCSSA-master/src/LegacyDataAPI/migrations/__init__.py": {},
    "myCSSA-master/src/Library/helper.py": {},
    "myCSSA-master/src/Library/Mixins.py": {
        "AjaxableResponseMixin.form_invalid": {
            "name": "form_invalid",
            "location": 5,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "AjaxableResponseMixin.form_valid": {
            "name": "form_valid",
            "location": 12,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        }
    },
    "myCSSA-master/src/Library/SiteManagement.py": {
        "LoadPagetoRegister": {
            "name": "LoadPagetoRegister",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "uri": [],
                "title": [],
                "template": []
            }
        }
    },
    "myCSSA-master/src/Library/backends/storages.py": {},
    "myCSSA-master/src/mail_owl/admin.py": {},
    "myCSSA-master/src/mail_owl/apps.py": {},
    "myCSSA-master/src/mail_owl/celery.py": {},
    "myCSSA-master/src/mail_owl/core.py": {},
    "myCSSA-master/src/mail_owl/models.py": {
        "MailDraft._get_mail_attachments": {
            "name": "_get_mail_attachments",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MailDraft.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MailAttachments.__str__": {
            "name": "__str__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MailQuene._send_init": {
            "name": "_send_init",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailQuene._send_failed": {
            "name": "_send_failed",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailQuene._send_success": {
            "name": "_send_success",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/mail_owl/serializers.py": {},
    "myCSSA-master/src/mail_owl/tasks.py": {
        "exec_sendmail": {
            "name": "exec_sendmail",
            "location": 15,
            "return": [],
            "arguments": {
                "quene_task": []
            }
        },
        "send_async_mail": {
            "name": "send_async_mail",
            "location": 34,
            "return": [],
            "arguments": {
                "quene_id": []
            }
        },
        "scheduled_mail_sender": {
            "name": "scheduled_mail_sender",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "debug_task": {
            "name": "debug_task",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/mail_owl/tests.py": {},
    "myCSSA-master/src/mail_owl/urls.py": {},
    "myCSSA-master/src/mail_owl/utils.py": {
        "AutoMailSender.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "mail_text": [],
                "fill_in_context": [],
                "to_address": [],
                "template_path": [
                    "None"
                ]
            }
        },
        "AutoMailSender.add_to_sending_quene": {
            "name": "add_to_sending_quene",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "schedule": []
            }
        },
        "AutoMailSender.send_now": {
            "name": "send_now",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/mail_owl/views.py": {
        "MailDraftViewSet.perform_create": {
            "name": "perform_create",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        }
    },
    "myCSSA-master/src/mail_owl/__init__.py": {},
    "myCSSA-master/src/mail_owl/migrations/0001_initial.py": {},
    "myCSSA-master/src/mail_owl/migrations/__init__.py": {},
    "myCSSA-master/src/MobileAppAPI/admin.py": {},
    "myCSSA-master/src/MobileAppAPI/apps.py": {},
    "myCSSA-master/src/MobileAppAPI/models.py": {},
    "myCSSA-master/src/MobileAppAPI/tests.py": {},
    "myCSSA-master/src/MobileAppAPI/urls.py": {},
    "myCSSA-master/src/MobileAppAPI/views.py": {
        "Merchants": {
            "name": "Merchants",
            "location": 15,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "Sponsors": {
            "name": "Sponsors",
            "location": 26,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "UpdateMerchants": {
            "name": "UpdateMerchants",
            "location": 43,
            "return": [
                "HttpResponse",
                "HttpResponseForbidden"
            ],
            "arguments": {
                "request": []
            }
        },
        "AddMerchants": {
            "name": "AddMerchants",
            "location": 87,
            "return": [
                "HttpResponse",
                "HttpResponseForbidden"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "myCSSA-master/src/MobileAppAPI/__init__.py": {},
    "myCSSA-master/src/MobileAppAPI/migrations/__init__.py": {},
    "myCSSA-master/src/myCSSAhub/admin.py": {},
    "myCSSA-master/src/myCSSAhub/apis.py": {
        "GetDocViewData": {
            "name": "GetDocViewData",
            "location": 3,
            "return": [
                "dict[typing.Text, dict[typing.Text, typing.Union[list,None,typing.Text]]]"
            ],
            "arguments": {
                "instance": [],
                "headers": [],
                "user_info_required": [],
                "attachments": []
            }
        }
    },
    "myCSSA-master/src/myCSSAhub/apps.py": {},
    "myCSSA-master/src/myCSSAhub/forms.py": {},
    "myCSSA-master/src/myCSSAhub/models.py": {
        "DiscountMerchant.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscountMerchant.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/myCSSAhub/serializers.py": {},
    "myCSSA-master/src/myCSSAhub/tests.py": {},
    "myCSSA-master/src/myCSSAhub/urls.py": {},
    "myCSSA-master/src/myCSSAhub/views.py": {
        "register_guide": {
            "name": "register_guide",
            "location": 52,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": []
            }
        },
        "home": {
            "name": "home",
            "location": 59,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "logout_page": {
            "name": "logout_page",
            "location": 178,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "request": []
            }
        },
        "EasyConfirmationPage": {
            "name": "EasyConfirmationPage",
            "location": 288,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "editBlog": {
            "name": "editBlog",
            "location": 453,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "GetUserAvatar": {
            "name": "GetUserAvatar",
            "location": 522,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "CheckEmailIntegrity": {
            "name": "CheckEmailIntegrity",
            "location": 536,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "CheckTelIntegrity": {
            "name": "CheckTelIntegrity",
            "location": 552,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "CheckStudentIdIntegrity": {
            "name": "CheckStudentIdIntegrity",
            "location": 568,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "request": []
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 641,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "permission_denied": {
            "name": "permission_denied",
            "location": 645,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 649,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "server_error": {
            "name": "server_error",
            "location": 653,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "under_dev_notice": {
            "name": "under_dev_notice",
            "location": 657,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "Calendar.get": {
            "name": "get",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Calendar.post": {
            "name": "post",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Message.get": {
            "name": "get",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Message.post": {
            "name": "post",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Compose.get": {
            "name": "get",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Email_Compose.post": {
            "name": "post",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchants_list.get": {
            "name": "get",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchants_list.post": {
            "name": "post",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchant_add.get": {
            "name": "get",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchant_add.post": {
            "name": "post",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchant_profile.get": {
            "name": "get",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Merchant_profile.post": {
            "name": "post",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LoginPage.get": {
            "name": "get",
            "location": 193,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LoginPage.post": {
            "name": "post",
            "location": 200,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EasyRegistrationView.get": {
            "name": "get",
            "location": 231,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EasyRegistrationView.post": {
            "name": "post",
            "location": 250,
            "return": [
                "JsonResponse",
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NewUserSignUpView.get": {
            "name": "get",
            "location": 297,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NewUserSignUpView.post": {
            "name": "post",
            "location": 316,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "migrationView.get": {
            "name": "get",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "migrationView.post": {
            "name": "post",
            "location": 352,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdatePasswordView.get": {
            "name": "get",
            "location": 384,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdatePasswordView.post": {
            "name": "post",
            "location": 387,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateUserProfileView.get": {
            "name": "get",
            "location": 405,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateUserProfileView.post": {
            "name": "post",
            "location": 409,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateUserAvatarView.get": {
            "name": "get",
            "location": 428,
            "return": [
                "HttpResponseBadRequest"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateUserAvatarView.post": {
            "name": "post",
            "location": 431,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MembershipCardView.get": {
            "name": "get",
            "location": 447,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserLookup.get": {
            "name": "get",
            "location": 589,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserLookup.post": {
            "name": "post",
            "location": 595,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/myCSSAhub/__init__.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0001_initial.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0002_auto_20181227_0623.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0003_auto_20181228_1021.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0004_accountmigration.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0005_notification_db_add_date.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0006_auto_20190104_0321.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0007_emailconfiguration.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0008_emaildb.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0009_discountmerchant.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0010_auto_20190218_1047.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0011_auto_20190302_1110.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0012_auto_20190306_0358.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0013_auto_20190306_0358.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0014_discountmerchant_merchant_type.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0015_auto_20190306_0714.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0016_auto_20190306_2256.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0017_auto_20190313_0347.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0018_auto_20190313_2205.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0019_discountmerchant_merchant_qrcode.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0020_auto_20210809_1421.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/0021_auto_20210814_2010.py": {},
    "myCSSA-master/src/myCSSAhub/migrations/__init__.py": {},
    "myCSSA-master/src/OrganisationMgr/admin.py": {},
    "myCSSA-master/src/OrganisationMgr/apps.py": {},
    "myCSSA-master/src/OrganisationMgr/forms.py": {
        "BindingMembershipCardForm.clean": {
            "name": "clean",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfileEditForm.clean": {
            "name": "clean",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserEditForm.clean": {
            "name": "clean",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/OrganisationMgr/models.py": {},
    "myCSSA-master/src/OrganisationMgr/tests.py": {},
    "myCSSA-master/src/OrganisationMgr/urls.py": {},
    "myCSSA-master/src/OrganisationMgr/views.py": {
        "DepartmentManagementView.get": {
            "name": "get",
            "location": 38,
            "return": [
                "HttpResponseForbidden"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DepartmentManagementView.post": {
            "name": "post",
            "location": 56,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddNewCommitteView.get": {
            "name": "get",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddNewCommitteView.post": {
            "name": "post",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "GetCommitteeDetail.get": {
            "name": "get",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "GetCommitteeDetail.post": {
            "name": "post",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MemberSearchView.get": {
            "name": "get",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MemberSearchView.post": {
            "name": "post",
            "location": 147,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MembershipActivationView.get": {
            "name": "get",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MembershipActivationView.post": {
            "name": "post",
            "location": 170,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MemberListView.get": {
            "name": "get",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "MemberListView.post": {
            "name": "post",
            "location": 202,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserProfileEditView.get": {
            "name": "get",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserProfileEditView.post": {
            "name": "post",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ConfirmActivationView.get": {
            "name": "get",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/OrganisationMgr/__init__.py": {},
    "myCSSA-master/src/OrganisationMgr/migrations/__init__.py": {},
    "myCSSA-master/src/PhotoCompetition/admin.py": {},
    "myCSSA-master/src/PhotoCompetition/apps.py": {},
    "myCSSA-master/src/PhotoCompetition/app_permission.py": {},
    "myCSSA-master/src/PhotoCompetition/filters.py": {
        "SubmissionFilter.pesudo_filter": {
            "name": "pesudo_filter",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "name": [],
                "value": []
            }
        }
    },
    "myCSSA-master/src/PhotoCompetition/forms.py": {
        "CandidateSubmissionForm.clean": {
            "name": "clean",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PhotoCompetition/hub_urls.py": {},
    "myCSSA-master/src/PhotoCompetition/models.py": {
        "_GetUserDir": {
            "name": "_GetUserDir",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "Submission.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubmissionVoting._add_aggregate_votes": {
            "name": "_add_aggregate_votes",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "created": [
                    "bool"
                ]
            }
        },
        "SubmissionVoting._remove_aggregate_votes": {
            "name": "_remove_aggregate_votes",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmissionVoting.save": {
            "name": "save",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmissionVoting.delete": {
            "name": "delete",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PhotoCompetition/public_urls.py": {},
    "myCSSA-master/src/PhotoCompetition/serializers.py": {
        "SubmissionListSerializers.get_detail_url": {
            "name": "get_detail_url",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "SubmissionSelectionControlSerializers.get_is_selected": {
            "name": "get_is_selected",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "DisplayedSubmissionSerializers.get_author_name": {
            "name": "get_author_name",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "myCSSA-master/src/PhotoCompetition/tests.py": {},
    "myCSSA-master/src/PhotoCompetition/views.py": {
        "CandidateSubmissionView.get": {
            "name": "get",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CandidateSubmissionView.post": {
            "name": "post",
            "location": 50,
            "return": [
                "HttpResponseRedirect"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ApprovedSubmissionsAPIViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubmissionListView.get_queryset": {
            "name": "get_queryset",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubmissionListView.get_context_data": {
            "name": "get_context_data",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubmissionDetailView.get_context_data": {
            "name": "get_context_data",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubmissionSelectionControlAPI.get_object": {
            "name": "get_object",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SubmissionSelectionControlAPI.get": {
            "name": "get",
            "location": 190,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "SubmissionSelectionControlAPI.post": {
            "name": "post",
            "location": 200,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "SubmissionSelectionControlAPI.delete": {
            "name": "delete",
            "location": 207,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "VoteSubmissionControlAPI.get_object": {
            "name": "get_object",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "VoteSubmissionControlAPI.check_duplicate_votes": {
            "name": "check_duplicate_votes",
            "location": 232,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "VoteSubmissionControlAPI.get": {
            "name": "get",
            "location": 252,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "VoteSubmissionControlAPI.post": {
            "name": "post",
            "location": 260,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "VoteSubmissionControlAPI.delete": {
            "name": "delete",
            "location": 283,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "resultDisplay.get": {
            "name": "get",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AxiosTestView.get": {
            "name": "get",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/PhotoCompetition/__init__.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0001_initial.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0002_auto_20190419_0710.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0003_auto_20190420_0135.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0004_auto_20190430_0414.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0005_approvedsubmission.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0006_auto_20190509_0447.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0007_auto_20190509_0532.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0008_submissionvoting.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/0009_submission_themetype.py": {},
    "myCSSA-master/src/PhotoCompetition/migrations/__init__.py": {},
    "myCSSA-master/src/PrizeAPI/admin.py": {},
    "myCSSA-master/src/PrizeAPI/apis.py": {
        "add_member_to_poll": {
            "name": "add_member_to_poll",
            "location": 5,
            "return": [],
            "arguments": {
                "user": [],
                "tag": []
            }
        },
        "add_event_candidate_to_poll": {
            "name": "add_event_candidate_to_poll",
            "location": 17,
            "return": [],
            "arguments": {
                "user": [],
                "event": [],
                "tag": []
            }
        },
        "get_pool_by_group_tag": {
            "name": "get_pool_by_group_tag",
            "location": 30,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "get_pool_by_event": {
            "name": "get_pool_by_event",
            "location": 33,
            "return": [],
            "arguments": {
                "event": [],
                "tag": []
            }
        }
    },
    "myCSSA-master/src/PrizeAPI/apps.py": {},
    "myCSSA-master/src/PrizeAPI/models.py": {},
    "myCSSA-master/src/PrizeAPI/tests.py": {},
    "myCSSA-master/src/PrizeAPI/views.py": {
        "LuckyDrawView.get": {
            "name": "get",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LuckyDrawDataView.get": {
            "name": "get",
            "location": 37,
            "return": [
                "HttpResponseBadRequest",
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/PrizeAPI/__init__.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/0002_auto_20190716_0721.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/0003_auto_20190716_0744.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/0004_auto_20190724_0556.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/0005_prizepool.py": {},
    "myCSSA-master/src/PrizeAPI/migrations/__init__.py": {},
    "myCSSA-master/src/PublicSite/admin.py": {},
    "myCSSA-master/src/PublicSite/apps.py": {},
    "myCSSA-master/src/PublicSite/forms.py": {
        "CarouselInnerForm.clean": {
            "name": "clean",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PublicSite/models.py": {
        "PageRegister.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLFields.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PublicSite/serializers.py": {},
    "myCSSA-master/src/PublicSite/urls.py": {},
    "myCSSA-master/src/PublicSite/views.py": {
        "index": {
            "name": "index",
            "location": 51,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "ContactUs": {
            "name": "ContactUs",
            "location": 65,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "Recruitments": {
            "name": "Recruitments",
            "location": 118,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "EventDetails": {
            "name": "EventDetails",
            "location": 181,
            "return": [],
            "arguments": {
                "request": [],
                "eventID": []
            }
        },
        "Blogs": {
            "name": "Blogs",
            "location": 189,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "BlogContents": {
            "name": "BlogContents",
            "location": 259,
            "return": [],
            "arguments": {
                "request": [],
                "blogId": []
            }
        },
        "Merchants": {
            "name": "Merchants",
            "location": 368,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "SupportMerchants": {
            "name": "SupportMerchants",
            "location": 374,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 394,
            "return": [],
            "arguments": {
                "request": [],
                "exception": []
            }
        },
        "permission_denied": {
            "name": "permission_denied",
            "location": 397,
            "return": [],
            "arguments": {
                "request": [],
                "exception": []
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 400,
            "return": [],
            "arguments": {
                "request": [],
                "exception": []
            }
        },
        "server_error": {
            "name": "server_error",
            "location": 403,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "DepartmentInfoView.get": {
            "name": "get",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResumeSubmissionView.get": {
            "name": "get",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResumeSubmissionView.post": {
            "name": "post",
            "location": 136,
            "return": [
                "JsonResponse"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "EventsListView.get": {
            "name": "get",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "reviewBlogPublic.get": {
            "name": "get",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/PublicSite/__init__.py": {},
    "myCSSA-master/src/PublicSite/migrations/0001_initial.py": {},
    "myCSSA-master/src/PublicSite/migrations/0002_homepagecarousels.py": {},
    "myCSSA-master/src/PublicSite/migrations/__init__.py": {},
    "myCSSA-master/src/PublicSite/templatetags/get_system_version.py": {
        "get_system_version": {
            "name": "get_system_version",
            "location": 7,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "myCSSA-master/src/PublicSite/templatetags/__init__.py": {},
    "myCSSA-master/src/PublicSite/tests/test_urls.py": {
        "TestUrls.test_index_url_resolved": {
            "name": "test_index_url_resolved",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrls.test_contact_url_resolved": {
            "name": "test_contact_url_resolved",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrls.test_events_url_resolved": {
            "name": "test_events_url_resolved",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PublicSite/tests/test_views.py": {
        "TestViews.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_events_list_GET": {
            "name": "test_events_list_GET",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/PublicSite/tests/__init__.py": {},
    "myCSSA-master/src/RecruitAPI/admin.py": {},
    "myCSSA-master/src/RecruitAPI/apis.py": {
        "GetResumesByDepartments": {
            "name": "GetResumesByDepartments",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "request_user": []
            }
        },
        "GetInterviewTimeByDepartments": {
            "name": "GetInterviewTimeByDepartments",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "request_user": []
            }
        }
    },
    "myCSSA-master/src/RecruitAPI/apps.py": {},
    "myCSSA-master/src/RecruitAPI/forms.py": {},
    "myCSSA-master/src/RecruitAPI/models.py": {
        "_GetUserDir": {
            "name": "_GetUserDir",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "Resume.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/RecruitAPI/resume_mgr.py": {
        "checkDuplicateResume": {
            "name": "checkDuplicateResume",
            "location": 1,
            "return": [
                "bool"
            ],
            "arguments": {
                "jobId": [],
                "userId": []
            }
        }
    },
    "myCSSA-master/src/RecruitAPI/serializers.py": {},
    "myCSSA-master/src/RecruitAPI/tests.py": {},
    "myCSSA-master/src/RecruitAPI/urls.py": {},
    "myCSSA-master/src/RecruitAPI/views.py": {
        "JobListView.get": {
            "name": "get",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResumeListView.get": {
            "name": "get",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddJobView.form_valid": {
            "name": "form_valid",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "AddInterviewView.get": {
            "name": "get",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AddInterviewView.post": {
            "name": "post",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResumeDetailView.get": {
            "name": "get",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ResumeListJsonView.render_column": {
            "name": "render_column",
            "location": 130,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "ResumeListJsonView.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResumeListJsonView.filter_queryset": {
            "name": "filter_queryset",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        },
        "JobListJsonView.render_column": {
            "name": "render_column",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "JobListJsonView.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JobListJsonView.filter_queryset": {
            "name": "filter_queryset",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        },
        "InterviewListJsonView.render_column": {
            "name": "render_column",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "InterviewListJsonView.get_initial_queryset": {
            "name": "get_initial_queryset",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InterviewListJsonView.filter_queryset": {
            "name": "filter_queryset",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "qs": []
            }
        }
    },
    "myCSSA-master/src/RecruitAPI/__init__.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/0002_auto_20190217_0555.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/0003_auto_20190218_0548.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/0004_auto_20190218_0906.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/0005_auto_20190219_2338.py": {},
    "myCSSA-master/src/RecruitAPI/migrations/__init__.py": {},
    "myCSSA-master/src/UserAuthAPI/admin.py": {},
    "myCSSA-master/src/UserAuthAPI/apps.py": {},
    "myCSSA-master/src/UserAuthAPI/auth.py": {
        "EmailOrUsernameModelBackend.authenticate": {
            "name": "authenticate",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "None"
                ],
                "password": [
                    "None"
                ]
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/authBackend.py": {
        "ModelBackend.authenticate": {
            "name": "authenticate",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [
                    "None"
                ],
                "password": [
                    "None"
                ]
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/forms.py": {
        "get_file_extension": {
            "name": "get_file_extension",
            "location": 29,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "file": []
            }
        },
        "CheckTelNumber": {
            "name": "CheckTelNumber",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "BasicSiginInForm.clean": {
            "name": "clean",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasicSiginInForm.save": {
            "name": "save",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "commit": [
                    "bool"
                ]
            }
        },
        "UserAvatarUpdateForm.save": {
            "name": "save",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/models.py": {
        "_GetUserDir": {
            "name": "_GetUserDir",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "UserManager.create_user": {
            "name": "create_user",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "telNumber": [],
                "password": [
                    "None"
                ]
            }
        },
        "UserManager.create_staffuser": {
            "name": "create_staffuser",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "telNumber": [],
                "password": []
            }
        },
        "UserManager.create_superuser": {
            "name": "create_superuser",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "telNumber": [],
                "password": []
            }
        },
        "CSSADept.__str__": {
            "name": "__str__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSSARole.__str__": {
            "name": "__str__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniMajor.__str__": {
            "name": "__str__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 140,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfile.get_gender_CN": {
            "name": "get_gender_CN",
            "location": 180,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfile.get_full_CN_name": {
            "name": "get_full_CN_name",
            "location": 194,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfile.get_full_EN_name": {
            "name": "get_full_EN_name",
            "location": 205,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfile.get_committee_profile": {
            "name": "get_committee_profile",
            "location": 215,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserProfile.__str__": {
            "name": "__str__",
            "location": 220,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/serializers.py": {
        "getRandomStringSubFix": {
            "name": "getRandomStringSubFix",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "APILoginSerializer._validate_email": {
            "name": "_validate_email",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "APILoginSerializer._validate_username": {
            "name": "_validate_username",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "APILoginSerializer._validate_username_email": {
            "name": "_validate_username_email",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "email": [],
                "password": []
            }
        },
        "APILoginSerializer.validate": {
            "name": "validate",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "AcccountInitRegisterSerializer.validate_email": {
            "name": "validate_email",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "email": []
            }
        },
        "AcccountInitRegisterSerializer.validate_telNumber": {
            "name": "validate_telNumber",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "telNumber": []
            }
        },
        "AcccountInitRegisterSerializer.validate_password1": {
            "name": "validate_password1",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "AcccountInitRegisterSerializer.validate": {
            "name": "validate",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AcccountInitRegisterSerializer.get_cleaned_data": {
            "name": "get_cleaned_data",
            "location": 196,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AcccountInitRegisterSerializer.save": {
            "name": "save",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserDetailSerializer.update": {
            "name": "update",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": [],
                "instance": []
            }
        },
        "UserEasyRegistrationSerializer.validate_telNumber": {
            "name": "validate_telNumber",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "UserEasyRegistrationSerializer.validate_email": {
            "name": "validate_email",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "UserEasyRegistrationSerializer.validate_studentId": {
            "name": "validate_studentId",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "UserEasyRegistrationSerializer.create": {
            "name": "create",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/tests.py": {},
    "myCSSA-master/src/UserAuthAPI/urls.py": {},
    "myCSSA-master/src/UserAuthAPI/userToken.py": {
        "create_auth_token": {
            "name": "create_auth_token",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": [
                    "None"
                ],
                "created": [
                    "bool"
                ]
            }
        },
        "CustomAuthToken.post": {
            "name": "post",
            "location": 34,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/views.py": {
        "user_easy_registry_api": {
            "name": "user_easy_registry_api",
            "location": 54,
            "return": [
                "Response"
            ],
            "arguments": {
                "request": []
            }
        },
        "get_login_user_info": {
            "name": "get_login_user_info",
            "location": 71,
            "return": [
                "Response"
            ],
            "arguments": {
                "request": []
            }
        },
        "EditUserDetails.get_object": {
            "name": "get_object",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditUserDetails.post": {
            "name": "post",
            "location": 43,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/__init__.py": {},
    "myCSSA-master/src/UserAuthAPI/management/commands/generate_users.py": {
        "create_user": {
            "name": "create_user",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "create_user._email_gen": {
            "name": "_email_gen",
            "location": 21,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "create_user._telNumber_gen": {
            "name": "_telNumber_gen",
            "location": 27,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "create_user._studentId_gen": {
            "name": "_studentId_gen",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "create_user._membershipId_gen": {
            "name": "_membershipId_gen",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "create_user._random_date_gen": {
            "name": "_random_date_gen",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 72,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "myCSSA-master/src/UserAuthAPI/management/commands/_private.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0001_initial.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0002_auto_20181229_0641.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0003_auto_20190103_0227.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0004_auto_20190103_0350.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0005_auto_20190103_0410.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0006_auto_20190103_0454.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0007_auto_20190104_0534.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0008_auto_20190106_0350.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0009_auto_20190217_0555.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0010_cssacommitteprofile_role.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0011_auto_20190218_0454.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0012_auto_20190226_2243.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0013_auto_20190227_1007.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0014_auto_20190319_0301.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0015_auto_20190320_0329.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0016_auto_20190430_0045.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0017_auto_20190430_0047.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0018_auto_20190509_0506.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/0019_auto_20210709_1833.py": {},
    "myCSSA-master/src/UserAuthAPI/migrations/__init__.py": {}
}
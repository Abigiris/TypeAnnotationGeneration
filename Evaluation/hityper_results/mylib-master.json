{
    "mylib-master/declares.py": {
        "custom_escape_cdata": {
            "name": "custom_escape_cdata",
            "location": 30,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "var": {
            "name": "var",
            "location": 160,
            "return": [],
            "arguments": {
                "type_": [],
                "required": [],
                "field_name": [],
                "default": [],
                "default_factory": [],
                "ignore_serialize": [],
                "naming_style": [],
                "as_xml_attr": [],
                "as_xml_text": [],
                "auto_cast": [],
                "init": []
            }
        },
        "new_list_type": {
            "name": "new_list_type",
            "location": 587,
            "return": [],
            "arguments": {
                "type_": []
            }
        },
        "_tuple_str": {
            "name": "_tuple_str",
            "location": 595,
            "return": [],
            "arguments": {
                "obj_name": [],
                "fields": []
            }
        },
        "_isinstance_safe": {
            "name": "_isinstance_safe",
            "location": 607,
            "return": [],
            "arguments": {
                "o": [],
                "t": []
            }
        },
        "_issubclass_safe": {
            "name": "_issubclass_safe",
            "location": 616,
            "return": [],
            "arguments": {
                "cls": [],
                "classinfo": []
            }
        },
        "_is_new_type_subclass_safe": {
            "name": "_is_new_type_subclass_safe",
            "location": 623,
            "return": [],
            "arguments": {
                "cls": [],
                "classinfo": []
            }
        },
        "_is_new_type": {
            "name": "_is_new_type",
            "location": 635,
            "return": [],
            "arguments": {
                "type_": []
            }
        },
        "_decode_xml_to_declared_class": {
            "name": "_decode_xml_to_declared_class",
            "location": 639,
            "return": [],
            "arguments": {
                "cls": [],
                "element": []
            }
        },
        "_decode_dict_to_declared_class": {
            "name": "_decode_dict_to_declared_class",
            "location": 660,
            "return": [],
            "arguments": {
                "cls": [],
                "kvs": []
            }
        },
        "_cast_field_value": {
            "name": "_cast_field_value",
            "location": 680,
            "return": [],
            "arguments": {
                "field": [],
                "field_value": []
            }
        },
        "_is_declared_instance": {
            "name": "_is_declared_instance",
            "location": 709,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "fields": {
            "name": "fields",
            "location": 713,
            "return": [],
            "arguments": {
                "class_or_instance": []
            }
        },
        "_encode_json_type": {
            "name": "_encode_json_type",
            "location": 736,
            "return": [],
            "arguments": {
                "value": [],
                "default": []
            }
        },
        "_encode_overrides": {
            "name": "_encode_overrides",
            "location": 742,
            "return": [],
            "arguments": {
                "kvs": [],
                "overrides": [],
                "encode_json": []
            }
        },
        "_user_overrides": {
            "name": "_user_overrides",
            "location": 759,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "_asdict": {
            "name": "_asdict",
            "location": 764,
            "return": [],
            "arguments": {
                "obj": [],
                "encode_json": [],
                "skip_none_field": []
            }
        },
        "_MISSING_TYPE.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_ExtendedEncoder.default": {
            "name": "default",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "NamingStyle.camelcase": {
            "name": "camelcase",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "NamingStyle.snakecase": {
            "name": "snakecase",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "NamingStyle.pascalcase": {
            "name": "pascalcase",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": [],
                "string": []
            }
        },
        "Var.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "required": [],
                "field_name": [],
                "default": [],
                "default_factory": [],
                "ignore_serialize": [],
                "naming_style": [],
                "as_xml_attr": [],
                "as_xml_text": [],
                "auto_cast": [],
                "init": []
            }
        },
        "Var.field_name": {
            "name": "field_name",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Var.type_": {
            "name": "type_",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Var.make_default": {
            "name": "make_default",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Var.check": {
            "name": "check",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "BaseDeclared.__new__": {
            "name": "__new__",
            "location": 217,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "attrs": []
            }
        },
        "BaseDeclared.add_attribute": {
            "name": "add_attribute",
            "location": 253,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "attr": []
            }
        },
        "Declared.__init__": {
            "name": "__init__",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Declared.__post_init__": {
            "name": "__post_init__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Declared.__setattr__": {
            "name": "__setattr__",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Declared.__getattr__": {
            "name": "__getattr__",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Declared.has_nest_declared_class": {
            "name": "has_nest_declared_class",
            "location": 319,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Declared.to_json": {
            "name": "to_json",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "skipkeys": [],
                "ensure_ascii": [],
                "check_circular": [],
                "allow_nan": [],
                "indent": [],
                "separators": [],
                "default": [],
                "sort_keys": [],
                "skip_none_field": []
            }
        },
        "Declared.from_json": {
            "name": "from_json",
            "location": 356,
            "return": [],
            "arguments": {
                "cls": [],
                "s": []
            }
        },
        "Declared.from_dict": {
            "name": "from_dict",
            "location": 369,
            "return": [],
            "arguments": {
                "cls": [],
                "kvs": []
            }
        },
        "Declared.to_dict": {
            "name": "to_dict",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "encode_json": [],
                "skip_none_field": []
            }
        },
        "Declared.from_form_data": {
            "name": "from_form_data",
            "location": 376,
            "return": [],
            "arguments": {
                "cls": [],
                "form_data": []
            }
        },
        "Declared.to_form_data": {
            "name": "to_form_data",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "skip_none_field": []
            }
        },
        "Declared.from_query_string": {
            "name": "from_query_string",
            "location": 389,
            "return": [],
            "arguments": {
                "cls": [],
                "query_string": []
            }
        },
        "Declared.to_query_string": {
            "name": "to_query_string",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "skip_none_field": [],
                "doseq": [],
                "safe": [],
                "encoding": [],
                "errors": [],
                "quote_via": []
            }
        },
        "Declared.from_xml": {
            "name": "from_xml",
            "location": 414,
            "return": [],
            "arguments": {
                "cls": [],
                "element": []
            }
        },
        "Declared.from_xml_string": {
            "name": "from_xml_string",
            "location": 429,
            "return": [],
            "arguments": {
                "cls": [],
                "xml_string": []
            }
        },
        "Declared.to_xml": {
            "name": "to_xml",
            "location": 432,
            "return": [],
            "arguments": {
                "self": [],
                "skip_none_field": []
            }
        },
        "Declared.to_xml_bytes": {
            "name": "to_xml_bytes",
            "location": 469,
            "return": [],
            "arguments": {
                "self": [],
                "skip_none_field": []
            }
        },
        "Declared.__str__": {
            "name": "__str__",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Declared.__eq__": {
            "name": "__eq__",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Declared.__hash__": {
            "name": "__hash__",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericList.__init__": {
            "name": "__init__",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "initlist": [],
                "tag": []
            }
        },
        "GenericList.from_json": {
            "name": "from_json",
            "location": 522,
            "return": [],
            "arguments": {
                "cls": [],
                "s": []
            }
        },
        "GenericList.to_json": {
            "name": "to_json",
            "location": 534,
            "return": [],
            "arguments": {
                "self": [],
                "skipkeys": [],
                "ensure_ascii": [],
                "check_circular": [],
                "allow_nan": [],
                "indent": [],
                "separators": [],
                "default": [],
                "sort_keys": [],
                "skip_none_field": []
            }
        },
        "GenericList.from_xml": {
            "name": "from_xml",
            "location": 558,
            "return": [],
            "arguments": {
                "cls": [],
                "element": []
            }
        },
        "GenericList.from_xml_list": {
            "name": "from_xml_list",
            "location": 562,
            "return": [],
            "arguments": {
                "cls": [],
                "elements": [],
                "tag": []
            }
        },
        "GenericList.from_xml_string": {
            "name": "from_xml_string",
            "location": 566,
            "return": [],
            "arguments": {
                "cls": [],
                "xml_string": []
            }
        },
        "GenericList.to_xml": {
            "name": "to_xml",
            "location": 569,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "skip_none_field": []
            }
        },
        "GenericList.to_xml_bytes": {
            "name": "to_xml_bytes",
            "location": 577,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "skip_none_field": []
            }
        },
        "GenericList.__str__": {
            "name": "__str__",
            "location": 580,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "mylib-master/declares_test.py": {
        "QueryStringTestCase.test_simple_use": {
            "name": "test_simple_use",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormDataTestCase.test_simple_use": {
            "name": "test_simple_use",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeclaredXmlSerializeTestCase.test_simple_use": {
            "name": "test_simple_use",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeclaredXmlSerializeTestCase.test_other_simple_use": {
            "name": "test_other_simple_use",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeclaredXmlSerializeTestCase.test_declared_to_xml": {
            "name": "test_declared_to_xml",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeclaredXmlSerializeTestCase.test_c2_xml": {
            "name": "test_c2_xml",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NamingStyleTestCase.test_snake_case": {
            "name": "test_snake_case",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NamingStyleTestCase.test_camel_case": {
            "name": "test_camel_case",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_1": {
            "name": "test_post_init_case_1",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_2": {
            "name": "test_post_init_case_2",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_3": {
            "name": "test_post_init_case_3",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_4": {
            "name": "test_post_init_case_4",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_default_params": {
            "name": "test_default_params",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_required": {
            "name": "test_required",
            "location": 386,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_ignore_serialize": {
            "name": "test_ignore_serialize",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_init": {
            "name": "test_init",
            "location": 418,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_default": {
            "name": "test_default",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_default_factory": {
            "name": "test_default_factory",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_field_name": {
            "name": "test_field_name",
            "location": 484,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComplexVarTestCase.test_required_init": {
            "name": "test_required_init",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComplexVarTestCase.test_required_ignore_serialize": {
            "name": "test_required_ignore_serialize",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComplexVarTestCase.test_required_init_ignore_serialize": {
            "name": "test_required_init_ignore_serialize",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComplexVarTestCase.test_default_default_factory": {
            "name": "test_default_default_factory",
            "location": 572,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.setUp": {
            "name": "setUp",
            "location": 610,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_str": {
            "name": "test_str",
            "location": 615,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_to_dict": {
            "name": "test_to_dict",
            "location": 619,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_to_json": {
            "name": "test_to_json",
            "location": 623,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_from_dict": {
            "name": "test_from_dict",
            "location": 627,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_hash": {
            "name": "test_hash",
            "location": 632,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVarDeclaredTestCase.test_eq": {
            "name": "test_eq",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_str": {
            "name": "test_str",
            "location": 654,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_to_dict": {
            "name": "test_to_dict",
            "location": 661,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_to_json": {
            "name": "test_to_json",
            "location": 680,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_from_dict": {
            "name": "test_from_dict",
            "location": 687,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_hash": {
            "name": "test_hash",
            "location": 709,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CombineDeclaredTestCase.test_eq": {
            "name": "test_eq",
            "location": 746,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_str": {
            "name": "test_str",
            "location": 787,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_to_dict": {
            "name": "test_to_dict",
            "location": 793,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_to_json": {
            "name": "test_to_json",
            "location": 811,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_from_dict": {
            "name": "test_from_dict",
            "location": 818,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_hash": {
            "name": "test_hash",
            "location": 838,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InheritedDeclaredTestCase.test_eq": {
            "name": "test_eq",
            "location": 873,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_str": {
            "name": "test_str",
            "location": 912,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_to_dict": {
            "name": "test_to_dict",
            "location": 916,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_to_json": {
            "name": "test_to_json",
            "location": 940,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_from_dict": {
            "name": "test_from_dict",
            "location": 947,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_hash": {
            "name": "test_hash",
            "location": 952,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleDeclaredTestCase.test_eq": {
            "name": "test_eq",
            "location": 961,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_1.Klass.__post_init__": {
            "name": "__post_init__",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VarTestCase.test_post_init_case_2.Klass.__post_init__": {
            "name": "__post_init__",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "VarTestCase.test_post_init_case_3.Klass.__post_init__": {
            "name": "__post_init__",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "VarTestCase.test_post_init_case_4.Klass.__post_init__": {
            "name": "__post_init__",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mylib-master/unlock.py": {
        "unlock": {
            "name": "unlock",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "full_filename": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
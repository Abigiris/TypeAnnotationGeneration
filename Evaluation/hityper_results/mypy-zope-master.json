{
    "mypy-zope-master/setup.py": {},
    "mypy-zope-master/src/mypy_zope/plugin.py": {
        "make_simple_type": {
            "name": "make_simple_type",
            "location": 63,
            "return": [
                "None",
                "UnionType"
            ],
            "arguments": {
                "fieldtype": [
                    "str",
                    "dict[, ]"
                ],
                "arg_names": [
                    "str",
                    "list[list[mypy.nodes.Expression]]",
                    "list[list[typing.Any]]",
                    "typing.Type"
                ],
                "args": [],
                "api": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "plugin": {
            "name": "plugin",
            "location": 704,
            "return": [
                "ZopeInterfacePlugin"
            ],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "dict[str, mypy.build.State]",
                    "dict[, ]",
                    "str",
                    "None"
                ]
            }
        },
        "ZopeInterfacePlugin.log": {
            "name": "log",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_type_analyze_hook": {
            "name": "get_type_analyze_hook",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_function_hook": {
            "name": "get_function_hook",
            "location": 114,
            "return": [
                "int",
                "list[str]",
                "list[]",
                "str"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_method_signature_hook": {
            "name": "get_method_signature_hook",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_method_hook": {
            "name": "get_method_hook",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_attribute_hook": {
            "name": "get_attribute_hook",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "ZopeInterfacePlugin.get_class_decorator_hook": {
            "name": "get_class_decorator_hook",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_metaclass_hook": {
            "name": "get_metaclass_hook",
            "location": 307,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "ZopeInterfacePlugin.get_base_class_hook": {
            "name": "get_base_class_hook",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin.get_customize_class_mro_hook": {
            "name": "get_customize_class_mro_hook",
            "location": 364,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin._is_subclass": {
            "name": "_is_subclass",
            "location": 414,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "typ": [
                    "str",
                    "None"
                ],
                "classname": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "ZopeInterfacePlugin._get_schema_field_type": {
            "name": "_get_schema_field_type",
            "location": 421,
            "return": [
                "str",
                "None",
                "list[str]",
                "int",
                "AnyType"
            ],
            "arguments": {
                "self": [],
                "typ": [
                    "str",
                    "None",
                    "list[str]",
                    "int"
                ],
                "arg_names": [
                    "str"
                ],
                "args": [],
                "api": [
                    "str",
                    "None",
                    "typing.Container"
                ]
            }
        },
        "ZopeInterfacePlugin._analyze_zope_interface": {
            "name": "_analyze_zope_interface",
            "location": 467,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api": [],
                "cls": [
                    "str",
                    "bool"
                ]
            }
        },
        "ZopeInterfacePlugin._get_metadata": {
            "name": "_get_metadata",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "typeinfo": [
                    "str",
                    "bool"
                ]
            }
        },
        "ZopeInterfacePlugin._is_interface": {
            "name": "_is_interface",
            "location": 494,
            "return": [
                "str",
                "dict[str, float]"
            ],
            "arguments": {
                "self": [],
                "typeinfo": [
                    "str",
                    "int",
                    "list[]"
                ]
            }
        },
        "ZopeInterfacePlugin._adjust_interface_function": {
            "name": "_adjust_interface_function",
            "location": 498,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "api": [],
                "class_info": [
                    "typing.Mapping",
                    "None"
                ],
                "func_def": [
                    "dict[, ]"
                ]
            }
        },
        "ZopeInterfacePlugin._adjust_interface_overload": {
            "name": "_adjust_interface_overload",
            "location": 525,
            "return": [
                "dict[str, typing.Any]",
                "dict[, ]",
                "typing.Mapping"
            ],
            "arguments": {
                "self": [],
                "api": [
                    "str",
                    "dict[str, int]"
                ],
                "class_info": [
                    "str",
                    "dict[str, int]"
                ],
                "overload_def": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Mapping"
                ]
            }
        },
        "ZopeInterfacePlugin._report_implementation_problems": {
            "name": "_report_implementation_problems",
            "location": 542,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "impl_type": [
                    "typing.Callable[[], mypy.types.Instance]",
                    "None",
                    "list[mypy.nodes.Expression]"
                ],
                "iface_type": [],
                "api": [],
                "context": [
                    "str",
                    "bool",
                    "list[str]",
                    "typing.Container",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ZopeInterfacePlugin._lookup_type": {
            "name": "_lookup_type",
            "location": 646,
            "return": [
                "Instance"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "int"
                ],
                "api": [
                    "int"
                ]
            }
        },
        "ZopeInterfacePlugin._find_module": {
            "name": "_find_module",
            "location": 659,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ],
                "api": [
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "ZopeInterfacePlugin._index_members": {
            "name": "_index_members",
            "location": 672,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "typeinfo": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "ZopeInterfacePlugin._apply_interface": {
            "name": "_apply_interface",
            "location": 685,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "impl": [
                    "int"
                ],
                "iface": [
                    "dict[, ]",
                    "bool",
                    "dict[str, typing.Any]",
                    "float"
                ]
            }
        },
        "ZopeInterfacePlugin.get_function_hook.analyze": {
            "name": "analyze",
            "location": 119,
            "return": [
                "AnyType"
            ],
            "arguments": {
                "function_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_function_hook.class_implements_hook": {
            "name": "class_implements_hook",
            "location": 135,
            "return": [],
            "arguments": {
                "function_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_method_hook.analyze_implementation": {
            "name": "analyze_implementation",
            "location": 221,
            "return": [],
            "arguments": {
                "method_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_class_decorator_hook.apply_implementer": {
            "name": "apply_implementer",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "iface_arg": [],
                "class_info": [],
                "api": []
            }
        },
        "ZopeInterfacePlugin.get_class_decorator_hook.analyze": {
            "name": "analyze",
            "location": 295,
            "return": [
                "AnyType"
            ],
            "arguments": {
                "classdef_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_metaclass_hook.analyze_metaclass": {
            "name": "analyze_metaclass",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "ZopeInterfacePlugin.get_base_class_hook.analyze_subinterface": {
            "name": "analyze_subinterface",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "classdef_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_customize_class_mro_hook.analyze_interface_base": {
            "name": "analyze_interface_base",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "classdef_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_customize_class_mro_hook.analyze": {
            "name": "analyze",
            "location": 397,
            "return": [
                "AnyType"
            ],
            "arguments": {
                "classdef_ctx": []
            }
        },
        "ZopeInterfacePlugin.get_method_hook.analyze": {
            "name": "analyze",
            "location": 205,
            "return": [
                "AnyType"
            ],
            "arguments": {
                "method_ctx": []
            }
        }
    },
    "mypy-zope-master/src/mypy_zope/__init__.py": {},
    "mypy-zope-master/tests/test_samples.py": {
        "mypy_cache_dir": {
            "name": "mypy_cache_dir",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "test_samples": {
            "name": "test_samples",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "samplefile": [
                    "str"
                ],
                "mypy_cache_dir": [
                    "str"
                ]
            }
        },
        "find_expected_output": {
            "name": "find_expected_output",
            "location": 51,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "normalize_errors": {
            "name": "normalize_errors",
            "location": 60,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "errors": [
                    "str",
                    "dict[, ]"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "pytest_generate_tests": {
            "name": "pytest_generate_tests",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "metafunc": []
            }
        }
    },
    "mypy-zope-master/tests/samples/adaptation.py": {
        "main": {
            "name": "main",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "AbstractSomething.thefunc": {
            "name": "thefunc",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcreteSomething.hello": {
            "name": "hello",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/classimplements.py": {
        "IFoo.foo": {
            "name": "foo",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "IBar.bar": {
            "name": "bar",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "FooBar.foo": {
            "name": "foo",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FooBar.bar": {
            "name": "bar",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/classimplements_broken_iface.py": {
        "ImNotAnInterface": {
            "name": "ImNotAnInterface",
            "location": 10,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Foo.foo": {
            "name": "foo",
            "location": 16,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/classimplements_broken_impl.py": {
        "IFoo.foo": {
            "name": "foo",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/classimplements_wrong.py": {
        "IFoo.foo": {
            "name": "foo",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Foo.bar": {
            "name": "bar",
            "location": 14,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/contextmanager.py": {
        "m": {
            "name": "m",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/forwardref.py": {
        "ISomething.hello": {
            "name": "hello",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "thing": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Something.hello": {
            "name": "hello",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "thing": []
            }
        },
        "IThing.get_name": {
            "name": "get_name",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/impl_inheritance.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "IBookmark.remember": {
            "name": "remember",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "dict[str, typing.Union[str,int]]",
                    "str",
                    "None"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/impl_property.py": {
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Bookmark.number": {
            "name": "number",
            "location": 17,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Bookmark.text": {
            "name": "text",
            "location": 21,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/incompatible_signature.py": {
        "run": {
            "name": "run",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "Something.hello": {
            "name": "hello",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "list[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "list[float]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/innerclass.py": {
        "decorator": {
            "name": "decorator",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_annotated_attribute.py": {
        "main": {
            "name": "main",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_attribute.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_fieldproperty.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_getattr.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "IData.__getattr__": {
            "name": "__getattr__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_implications.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "bool",
                    "typing.Sequence[tuple[typing.Union[float,typing.Any]]]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_inheritance.py": {
        "run": {
            "name": "run",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "greet": {
            "name": "greet",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "ISuperSomething.greet": {
            "name": "greet",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "ISomethingSomething.wink": {
            "name": "wink",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "SuperSomething.hello": {
            "name": "hello",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "list[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "list[float]"
                ]
            }
        },
        "SuperSomething.greet": {
            "name": "greet",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "int"
                ]
            }
        },
        "SomethingSomething.wink": {
            "name": "wink",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_mapping.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BadContainer.values": {
            "name": "values",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_meta.py": {
        "createOb": {
            "name": "createOb",
            "location": 12,
            "return": [],
            "arguments": {
                "iface": [
                    "typing.Type",
                    "dict[, ]",
                    "str",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IBookmark.create": {
            "name": "create",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "bool",
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_metaclass.py": {
        "Api.open": {
            "name": "open",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_self.py": {
        "IAnimal.say": {
            "name": "say",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cow.say": {
            "name": "say",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/interface_unknown.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_unknown_direct.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/interface_unknown_inherit.py": {
        "IKnownInterface.hello": {
            "name": "hello",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/multiple_implementer.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "IBookmark.remember": {
            "name": "remember",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "dict[str, typing.Union[str,int]]",
                    "str",
                    "None"
                ]
            }
        },
        "IActionalble.follow": {
            "name": "follow",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "times": [
                    "float",
                    "int",
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/multiple_inheritance.py": {
        "main": {
            "name": "main",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "IAwesome.sparkle": {
            "name": "sparkle",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "count": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "IClothing.wear": {
            "name": "wear",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Awesome.sparkle": {
            "name": "sparkle",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Boots.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": [
                    "int",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "Boots.wear": {
            "name": "wear",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/nested_definitions.py": {
        "Host.IBookmark.get_url": {
            "name": "get_url",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Host.Bookmark.get_url": {
            "name": "get_url",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-zope-master/tests/samples/not_fully_implemented.py": {
        "run": {
            "name": "run",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/no_arg_method.py": {
        "run": {
            "name": "run",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "main": {
            "name": "main",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.add": {
            "name": "add",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "bool",
                    "str"
                ],
                "b": [
                    "bool",
                    "str"
                ]
            }
        },
        "Something.hello": {
            "name": "hello",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Something.add": {
            "name": "add",
            "location": 21,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/open.py": {},
    "mypy-zope-master/tests/samples/overload.py": {
        "ISomething.getStuff": {
            "name": "getStuff",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "index": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "MySomething.getStuff": {
            "name": "getStuff",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "str",
                    "None",
                    "typing.Iterable[T]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/overload_readme.py": {
        "IAnimal.say": {
            "name": "say",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "count": []
            }
        },
        "Cow.say": {
            "name": "say",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": []
            }
        }
    },
    "mypy-zope-master/tests/samples/parameterized_types.py": {
        "ISomething.hello": {
            "name": "hello",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "names": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        },
        "Something.hello": {
            "name": "hello",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "names": [
                    "str",
                    "list[int]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/schema_bool.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/schema_field_outside_inteface.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/schema_number.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/schema_text.py": {
        "main": {
            "name": "main",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/schema_unknown_field.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/simple_valid.py": {
        "run": {
            "name": "run",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "smth": []
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ISomething.hello": {
            "name": "hello",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ],
                "y": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "Something.hello": {
            "name": "hello",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "list[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "list[float]"
                ]
            }
        }
    },
    "mypy-zope-master/tests/samples/unknown_interface.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-zope-master/tests/samples/unknown_metaclass.py": {}
}
{
    "nelson_siegel_svensson-master/setup.py": {},
    "nelson_siegel_svensson-master/docs/conf.py": {},
    "nelson_siegel_svensson-master/nelson_siegel_svensson/calibrate.py": {
        "_assert_same_shape": {
            "name": "_assert_same_shape",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "t": [
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "int",
                    "float"
                ],
                "y": [
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "betas_ns_ols": {
            "name": "betas_ns_ols",
            "location": 22,
            "return": [
                "tuple[typing.Union[NelsonSiegelCurve,list[str],str]]"
            ],
            "arguments": {
                "tau": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "t": [
                    "float",
                    "list[str]"
                ],
                "y": [
                    "list[]",
                    "list[numpy.array]"
                ]
            }
        },
        "errorfn_ns_ols": {
            "name": "errorfn_ns_ols",
            "location": 37,
            "return": [],
            "arguments": {
                "tau": [
                    "float",
                    "tuple[typing.Union[float,float]]",
                    "tuple[]",
                    "list[]"
                ],
                "t": [
                    "float"
                ],
                "y": [
                    "float"
                ]
            }
        },
        "calibrate_ns_ols": {
            "name": "calibrate_ns_ols",
            "location": 47,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "t": [
                    "list[]",
                    "float"
                ],
                "y": [
                    "list[]",
                    "float"
                ],
                "tau0": [
                    "float"
                ]
            }
        },
        "empirical_factors": {
            "name": "empirical_factors",
            "location": 60,
            "return": [
                "tuple[typing.Union[float,bool]]"
            ],
            "arguments": {
                "y_3m": [
                    "float",
                    "bool"
                ],
                "y_2y": [
                    "float",
                    "typing.Iterable[int]",
                    "bool"
                ],
                "y_10y": [
                    "float",
                    "bool"
                ]
            }
        },
        "betas_nss_ols": {
            "name": "betas_nss_ols",
            "location": 68,
            "return": [
                "tuple[typing.Union[NelsonSiegelSvenssonCurve,list[str],str]]"
            ],
            "arguments": {
                "tau": [
                    "str",
                    "list[str]"
                ],
                "t": [
                    "float",
                    "list[str]"
                ],
                "y": [
                    "list[]",
                    "list[numpy.array]"
                ]
            }
        },
        "errorfn_nss_ols": {
            "name": "errorfn_nss_ols",
            "location": 86,
            "return": [],
            "arguments": {
                "tau": [
                    "float",
                    "tuple[typing.Union[float,float]]",
                    "tuple[]",
                    "list[]"
                ],
                "t": [
                    "float"
                ],
                "y": [
                    "float"
                ]
            }
        },
        "calibrate_nss_ols": {
            "name": "calibrate_nss_ols",
            "location": 97,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "t": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "tau0": [
                    "tuple[float]"
                ]
            }
        }
    },
    "nelson_siegel_svensson-master/nelson_siegel_svensson/cli.py": {
        "cli_main": {
            "name": "cli_main",
            "location": 49,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "None"
                ]
            }
        },
        "cli_calibrate": {
            "name": "cli_calibrate",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "times": [
                    "str",
                    "list[dict[str, str]]",
                    "dict[str, str]",
                    "None"
                ],
                "values": [
                    "str",
                    "list[dict[str, str]]",
                    "dict[str, str]",
                    "None"
                ],
                "nelson_siegel_svensson": [
                    "bool",
                    "str",
                    "list[]",
                    "list[list[]]"
                ],
                "initial_tau1": [
                    "str",
                    "list[dict[str, str]]",
                    "dict[str, str]",
                    "None"
                ],
                "initial_tau2": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "cli_evaluate": {
            "name": "cli_evaluate",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "curve": [
                    "str",
                    "bool"
                ],
                "times": [
                    "str",
                    "bool"
                ]
            }
        },
        "cli_plot": {
            "name": "cli_plot",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "curves": [
                    "str"
                ],
                "output": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[int,float]]]",
                    "list[dict[, ]]"
                ],
                "from_time": [
                    "str",
                    "bool",
                    "tuple[typing.Union[int,int]]"
                ],
                "to_time": [
                    "str",
                    "bool",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "Curve.convert": {
            "name": "convert",
            "location": 22,
            "return": [
                "NelsonSiegelSvenssonCurve",
                "NelsonSiegelCurve"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "float"
                ],
                "param": [
                    "str",
                    "int",
                    "None"
                ],
                "ctx": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "FloatArray.convert": {
            "name": "convert",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "float"
                ],
                "param": [
                    "str",
                    "int",
                    "None"
                ],
                "ctx": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "nelson_siegel_svensson-master/nelson_siegel_svensson/ns.py": {
        "NelsonSiegelCurve.factors": {
            "name": "factors",
            "location": 29,
            "return": [
                "tuple[int]",
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "NelsonSiegelCurve.factor_matrix": {
            "name": "factor_matrix",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "NelsonSiegelCurve.zero": {
            "name": "zero",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "float",
                    "int",
                    "str"
                ]
            }
        },
        "NelsonSiegelCurve.__call__": {
            "name": "__call__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "int",
                    "float"
                ]
            }
        },
        "NelsonSiegelCurve.forward": {
            "name": "forward",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "float"
                ]
            }
        }
    },
    "nelson_siegel_svensson-master/nelson_siegel_svensson/nss.py": {
        "NelsonSiegelSvenssonCurve.factors": {
            "name": "factors",
            "location": 31,
            "return": [
                "tuple[int]",
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "NelsonSiegelSvenssonCurve.factor_matrix": {
            "name": "factor_matrix",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "float",
                    "tuple[typing.Union[float,float]]",
                    "str"
                ]
            }
        },
        "NelsonSiegelSvenssonCurve.zero": {
            "name": "zero",
            "location": 64,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "T": [
                    "int",
                    "typing.Callable[int, None]",
                    "typing.Sequence[T]"
                ]
            }
        },
        "NelsonSiegelSvenssonCurve.__call__": {
            "name": "__call__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "int",
                    "float"
                ]
            }
        },
        "NelsonSiegelSvenssonCurve.forward": {
            "name": "forward",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "T": [
                    "float"
                ]
            }
        }
    },
    "nelson_siegel_svensson-master/nelson_siegel_svensson/__init__.py": {},
    "nelson_siegel_svensson-master/tests/test_nelson_siegel_calibration.py": {
        "TestNelsonSiegelCurveCalibration.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveCalibration.test_nelson_siegel_betas_recovery": {
            "name": "test_nelson_siegel_betas_recovery",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveCalibration.test_nelson_siegel_ols_errorfn_for_correct_tau": {
            "name": "test_nelson_siegel_ols_errorfn_for_correct_tau",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveCalibration.test_nelson_siegel_ols_calibration": {
            "name": "test_nelson_siegel_ols_calibration",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nelson_siegel_svensson-master/tests/test_nelson_siegel_curve_implementation.py": {
        "TestNelsonSiegelCurveImplementation.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveImplementation.test_curve_init": {
            "name": "test_curve_init",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveImplementation.test_nelson_siegel_curve_array_vs_individual": {
            "name": "test_nelson_siegel_curve_array_vs_individual",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveImplementation.test_nelson_siegel_at_0": {
            "name": "test_nelson_siegel_at_0",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveImplementation.test_forward_against_zero_curve": {
            "name": "test_forward_against_zero_curve",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelCurveImplementation.test_factor_matrix": {
            "name": "test_factor_matrix",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nelson_siegel_svensson-master/tests/test_nelson_siegel_svensson.py": {
        "TestNelson_siegel_svensson.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_command_line_interface": {
            "name": "test_command_line_interface",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_cli_evaluate": {
            "name": "test_cli_evaluate",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_cli_calibrate": {
            "name": "test_cli_calibrate",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_cli_plot": {
            "name": "test_cli_plot",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_curve_parameters": {
            "name": "test_curve_parameters",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNelson_siegel_svensson.test_float_array_parameters": {
            "name": "test_float_array_parameters",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nelson_siegel_svensson-master/tests/test_nelson_siegel_svensson_calibration.py": {
        "TestNelsonSiegelSvenssonCurveCalibration.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveCalibration.test_nelson_siegel_svensson_betas_recovery": {
            "name": "test_nelson_siegel_svensson_betas_recovery",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveCalibration.test_nelson_siegel_svensson_ols_errorfn_for_correct_tau": {
            "name": "test_nelson_siegel_svensson_ols_errorfn_for_correct_tau",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveCalibration.test_nelson_siegel_svensson_ols_calibration": {
            "name": "test_nelson_siegel_svensson_ols_calibration",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nelson_siegel_svensson-master/tests/test_nelson_siegel_svensson_curve_implementation.py": {
        "TestNelsonSiegelSvenssonCurveImplementation.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_curve_init": {
            "name": "test_curve_init",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_nelson_siegel_svensson_curve_array_vs_individual": {
            "name": "test_nelson_siegel_svensson_curve_array_vs_individual",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_nelson_siegel_svensson_at_0": {
            "name": "test_nelson_siegel_svensson_at_0",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_mithril_parameters": {
            "name": "test_mithril_parameters",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_ecb_2016_01_04_parameters": {
            "name": "test_ecb_2016_01_04_parameters",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_gilli_grosse_schumann_parameters": {
            "name": "test_gilli_grosse_schumann_parameters",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_forward_against_zero_curve": {
            "name": "test_forward_against_zero_curve",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNelsonSiegelSvenssonCurveImplementation.test_factor_matrix": {
            "name": "test_factor_matrix",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nelson_siegel_svensson-master/tests/__init__.py": {}
}
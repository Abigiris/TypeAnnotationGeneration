{
    "neonbot-master/main.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "neonbot-master/neonbot/bot.py": {
        "Bot.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.set_cache": {
            "name": "set_cache",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.load_music": {
            "name": "load_music",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.save_music": {
            "name": "save_music",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.start_message": {
            "name": "start_message",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.get_presence": {
            "name": "get_presence",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.get_command_prefix": {
            "name": "get_command_prefix",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.load_cogs": {
            "name": "load_cogs",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.clear_youtube_dl_cache": {
            "name": "clear_youtube_dl_cache",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.run": {
            "name": "run",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot._handle_ready": {
            "name": "_handle_ready",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Bot.set_ready": {
            "name": "set_ready",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "neonbot-master/neonbot/database.py": {
        "Database.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Database.load": {
            "name": "load",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Database.get_guild": {
            "name": "get_guild",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ]
            }
        },
        "Database.get_settings": {
            "name": "get_settings",
            "location": 96,
            "return": [
                "int",
                "str",
                "list[str]",
                "Settings"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "neonbot-master/neonbot/env.py": {},
    "neonbot-master/neonbot/__init__.py": {},
    "neonbot-master/neonbot/classes/connect4.py": {
        "Connect4.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "Connect4.reset": {
            "name": "reset",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connect4.next_player": {
            "name": "next_player",
            "location": 117,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connect4.reset_board": {
            "name": "reset_board",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connect4.move_player": {
            "name": "move_player",
            "location": 172,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Connect4.check_line": {
            "name": "check_line",
            "location": 191,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "Connect4.check_winner": {
            "name": "check_winner",
            "location": 194,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connect4.start.check": {
            "name": "check",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "m": []
            }
        }
    },
    "neonbot-master/neonbot/classes/converters.py": {
        "Required.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "neonbot-master/neonbot/classes/embed.py": {
        "Embed.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "description": [
                    "None",
                    "str",
                    "int",
                    "float",
                    "list[str]"
                ]
            }
        },
        "Embed.add_field": {
            "name": "add_field",
            "location": 20,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "value": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Embed.set_author": {
            "name": "set_author",
            "location": 24,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.Iterable[]",
                    "bool",
                    "None",
                    "typing.Callable[, ]"
                ],
                "url": []
            }
        },
        "Embed.set_footer": {
            "name": "set_footer",
            "location": 34,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Embed.set_image": {
            "name": "set_image",
            "location": 40,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "int"
                ]
            }
        },
        "Embed.set_thumbnail": {
            "name": "set_thumbnail",
            "location": 45,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[, ]",
                    "bytes",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PaginationEmbed.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "embeds": [
                    "list[]"
                ],
                "authorized_users": [
                    "None",
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "timeout": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "PaginationEmbed.get_buttons": {
            "name": "get_buttons",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PaginationEmbed.execute_command": {
            "name": "execute_command",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "int",
                    "list[int]",
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "EmbedChoices.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "entries": [
                    "bool"
                ]
            }
        },
        "EmbedChoices.get_buttons": {
            "name": "get_buttons",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "neonbot-master/neonbot/classes/player.py": {
        "Player.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "Player.load_default": {
            "name": "load_default",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.get_config": {
            "name": "get_config",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "Player.is_latest_track": {
            "name": "is_latest_track",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.now_playing": {
            "name": "now_playing",
            "location": 82,
            "return": [
                "dict[typing.Text, ]",
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Player.process_repeat": {
            "name": "process_repeat",
            "location": 251,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.process_shuffle": {
            "name": "process_shuffle",
            "location": 267,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.add_to_queue": {
            "name": "add_to_queue",
            "location": 441,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Player.get_footer": {
            "name": "get_footer",
            "location": 452,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "now_playing": [
                    "str"
                ]
            }
        },
        "Player.get_playing_embed": {
            "name": "get_playing_embed",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.get_finished_embed": {
            "name": "get_finished_embed",
            "location": 470,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.get_track_embed": {
            "name": "get_track_embed",
            "location": 479,
            "return": [
                "Embed"
            ],
            "arguments": {
                "self": [],
                "track": [
                    "str"
                ]
            }
        },
        "Player.play.after": {
            "name": "after",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "error": []
            }
        }
    },
    "neonbot-master/neonbot/classes/player_controls.py": {
        "PlayerControls.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player": []
            }
        },
        "PlayerControls.update_buttons": {
            "name": "update_buttons",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "views": []
            }
        },
        "PlayerControls.initialize": {
            "name": "initialize",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerControls.get": {
            "name": "get",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PlayerControls.refresh": {
            "name": "refresh",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "neonbot-master/neonbot/classes/pokemon.py": {
        "Pokemon.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "bool"
                ]
            }
        },
        "Pokemon.guess_string": {
            "name": "guess_string",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "list[]",
                    "list[tuple[typing.Union[str,int]]]"
                ]
            }
        },
        "Pokemon.start.check": {
            "name": "check",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "m": []
            }
        }
    },
    "neonbot-master/neonbot/classes/spotify.py": {
        "Spotify.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Spotify.parse_url": {
            "name": "parse_url",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "list[str]",
                    "str",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "neonbot-master/neonbot/classes/view.py": {
        "Button.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Button.set_callback": {
            "name": "set_callback",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "callback": [
                    "bool",
                    "float"
                ]
            }
        },
        "View.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "View.create_button": {
            "name": "create_button",
            "location": 27,
            "return": [
                "View"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "bytearray"
                ],
                "callback": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "View.set_message": {
            "name": "set_message",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "neonbot-master/neonbot/classes/ytdl.py": {
        "Ytdl.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "extra_params": [
                    "dict[, ]"
                ]
            }
        },
        "Ytdl.parse_choices": {
            "name": "parse_choices",
            "location": 74,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "Ytdl.parse_info": {
            "name": "parse_info",
            "location": 77,
            "return": [
                "list[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Ytdl.format_description": {
            "name": "format_description",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "description": [
                    "str"
                ]
            }
        },
        "Ytdl.format_simple_result": {
            "name": "format_simple_result",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "entry": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Ytdl.format_detailed_result": {
            "name": "format_detailed_result",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "entry": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "dict[str, typing.Union[str,None]]"
                ]
            }
        },
        "Ytdl.create": {
            "name": "create",
            "location": 120,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "float",
                    "typing.Callable[, ]"
                ],
                "bot": [
                    "str",
                    "float",
                    "typing.Callable[, ]"
                ],
                "extra_params": [
                    "str",
                    "float",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "neonbot-master/neonbot/cogs/administration.py": {
        "stdout_io": {
            "name": "stdout_io",
            "location": 22,
            "return": [
                "typing.Generator[StringIO]"
            ],
            "arguments": {}
        },
        "setup": {
            "name": "setup",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Administration.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "neonbot-master/neonbot/cogs/event.py": {
        "setup": {
            "name": "setup",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Event.on_presence_update.get_image": {
            "name": "get_image",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "activity": []
            }
        }
    },
    "neonbot-master/neonbot/cogs/game.py": {
        "get_channel": {
            "name": "get_channel",
            "location": 14,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        }
    },
    "neonbot-master/neonbot/cogs/music.py": {
        "get_player": {
            "name": "get_player",
            "location": 18,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Music.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "neonbot-master/neonbot/cogs/search.py": {
        "setup": {
            "name": "setup",
            "location": 562,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "Search.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "neonbot-master/neonbot/cogs/utility.py": {
        "setup": {
            "name": "setup",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Utility.sms.generate_embed": {
            "name": "generate_embed",
            "location": 116,
            "return": [
                "Embed"
            ],
            "arguments": {}
        }
    },
    "neonbot-master/neonbot/helpers/constants.py": {},
    "neonbot-master/neonbot/helpers/date.py": {
        "date": {
            "name": "date",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "date_format": {
            "name": "date_format",
            "location": 13,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "dt": [
                    "None",
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "list[datetime.date]",
                    "list[str]"
                ]
            }
        },
        "format_seconds": {
            "name": "format_seconds",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "secs": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "neonbot-master/neonbot/helpers/exceptions.py": {},
    "neonbot-master/neonbot/helpers/log.py": {
        "colored": {
            "name": "colored",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "cprint": {
            "name": "cprint",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Log.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log.set_file_handler": {
            "name": "set_file_handler",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log.set_console_handler": {
            "name": "set_console_handler",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log.cmd": {
            "name": "cmd",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "bool"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "neonbot-master/neonbot/helpers/utils.py": {
        "plural": {
            "name": "plural",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "val": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "singular_noun": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "plural_noun": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "convert_to_seconds": {
            "name": "convert_to_seconds",
            "location": 16,
            "return": [
                "int"
            ],
            "arguments": {
                "s": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "neonbot-master/neonbot/models/Guild.py": {
        "Guild.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [
                    "int",
                    "str"
                ],
                "guild_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "neonbot-master/neonbot/models/Model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [
                    "set[str]"
                ]
            }
        },
        "Model.get": {
            "name": "get",
            "location": 17,
            "return": [
                "dict[str, typing.Any]",
                "dict[, ]",
                "typing.Pattern",
                "list[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ],
                "default": [
                    "None",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "list[str]",
                    "typing.Callable[dict[, ], typing.Hashable]",
                    "typing.Any"
                ]
            }
        },
        "Model.set": {
            "name": "set",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes"
                ],
                "value": [
                    "str",
                    "list[typing.Optional[typing.Any]]",
                    "list[str]",
                    "None"
                ]
            }
        }
    },
    "neonbot-master/neonbot/models/Settings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [
                    "str"
                ]
            }
        }
    }
}
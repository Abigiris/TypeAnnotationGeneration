{
    "neovim-ascii-diagram-master/rplugin/python3/ascii_diagram.py": {
        "box_area": {
            "name": "box_area",
            "location": 70,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "lines": [
                    "list[str]",
                    "typing.Iterator",
                    "str"
                ],
                "top_left": [
                    "list[str]",
                    "str",
                    "int",
                    "bytes"
                ],
                "bottom_right": [
                    "list[str]",
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "with_vertical_borders": {
            "name": "with_vertical_borders",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "line": [
                    "str",
                    "list[str]",
                    "tuple[typing.Literal]",
                    "list[dict[str, typing.Any]]",
                    "list[]"
                ],
                "x1": [
                    "int"
                ],
                "x2": [
                    "list[str]",
                    "int",
                    "tuple[]"
                ]
            }
        },
        "horizontal_border": {
            "name": "horizontal_border",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "x1": [],
                "x2": [
                    "bool"
                ]
            }
        },
        "word_starts": {
            "name": "word_starts",
            "location": 93,
            "return": [
                "int"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "char_pos": [
                    "int"
                ]
            }
        },
        "word_ends": {
            "name": "word_ends",
            "location": 101,
            "return": [
                "int"
            ],
            "arguments": {
                "line": [],
                "char_pos": [
                    "int"
                ]
            }
        },
        "word_bounds": {
            "name": "word_bounds",
            "location": 109,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "line": [
                    "int",
                    "str"
                ],
                "char_pos": [
                    "int",
                    "str"
                ]
            }
        },
        "box_word": {
            "name": "box_word",
            "location": 113,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "ln": [],
                "char_pos": [
                    "int",
                    "list[str]"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "AsciiDiagram.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vim": [
                    "int",
                    "float"
                ]
            }
        },
        "AsciiDiagram.box_word": {
            "name": "box_word",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "AsciiDiagram.box_selected": {
            "name": "box_selected",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Position.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "str"
                ]
            }
        },
        "Coords.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ]
            }
        }
    },
    "neovim-ascii-diagram-master/tests/test_text_boxing.py": {
        "describe_box_area": {
            "name": "describe_box_area",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_horizontal_border": {
            "name": "describe_horizontal_border",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_with_vertical_borders": {
            "name": "describe_with_vertical_borders",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MockBuffer.append": {
            "name": "append",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "list[str]",
                    "str",
                    "list[tuple[typing.Union[typing.Any,typing.Any]]]",
                    "list[]"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "describe_box_area.describe_when_single_line_is_selected": {
            "name": "describe_when_single_line_is_selected",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_multiple_lines_are_selected": {
            "name": "describe_when_multiple_lines_are_selected",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_horizontal_border.describe_when_x1_is_greater_than_0": {
            "name": "describe_when_x1_is_greater_than_0",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_horizontal_border.it_pads_border_by_spaces": {
            "name": "it_pads_border_by_spaces",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_with_vertical_borders.it_wraps_string_with_vertical_bars": {
            "name": "it_wraps_string_with_vertical_bars",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_single_line_is_selected.describe_when_all_columns_selected": {
            "name": "describe_when_all_columns_selected",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_single_line_is_selected.describe_when_selected_columns_are_surrounded_by_other_characters": {
            "name": "describe_when_selected_columns_are_surrounded_by_other_characters",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_multiple_lines_are_selected.describe_when_all_columns_selected": {
            "name": "describe_when_all_columns_selected",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_horizontal_border.describe_when_x1_is_greater_than_0.it_adds_spaces_margin": {
            "name": "it_adds_spaces_margin",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_single_line_is_selected.describe_when_all_columns_selected.it_is_decorated_with_borders": {
            "name": "it_is_decorated_with_borders",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_single_line_is_selected.describe_when_selected_columns_are_surrounded_by_other_characters.it_wraps_only_those_columns": {
            "name": "it_wraps_only_those_columns",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_box_area.describe_when_multiple_lines_are_selected.describe_when_all_columns_selected.it_is_decorated_with_borders": {
            "name": "it_is_decorated_with_borders",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
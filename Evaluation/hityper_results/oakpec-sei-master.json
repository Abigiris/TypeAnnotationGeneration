{
    "oakpec-sei-master/main.py": {
        "download_all_filings": {
            "name": "download_all_filings",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "str"
                ],
                "context": [
                    "bool",
                    "str",
                    "list[str]",
                    "bytes",
                    "dict[str, typing.Any]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "trigger_processing": {
            "name": "trigger_processing",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "storage_client": [],
                "parent_directory": [
                    "str"
                ]
            }
        },
        "download_netfile_filing": {
            "name": "download_netfile_filing",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "list[list[str]]"
                ],
                "context": [
                    "list[dict[, ]]",
                    "str",
                    "list[str]",
                    "bytes",
                    "None"
                ]
            }
        },
        "process_netfile_filings": {
            "name": "process_netfile_filings",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "bytearray"
                ],
                "context": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        }
    },
    "oakpec-sei-master/pipeline/bigquery.py": {
        "is_connected": {
            "name": "is_connected",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "_stringio2bytesio": {
            "name": "_stringio2bytesio",
            "location": 31,
            "return": [],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "bool",
                    "memoryview"
                ]
            }
        },
        "_recreate_table": {
            "name": "_recreate_table",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "table_id": [
                    "str"
                ],
                "schema": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "_refresh_table_data": {
            "name": "_refresh_table_data",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "table_id": [
                    "str"
                ],
                "schema": [
                    "list[google.cloud.bigquery.SchemaField]",
                    "str",
                    "int",
                    "None"
                ],
                "source_file": [
                    "str"
                ]
            }
        },
        "_get_type_for_field": {
            "name": "_get_type_for_field",
            "location": 72,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "field": [
                    "str",
                    "typing.Mapping",
                    "typing.Sequence[F]",
                    "typing.Type"
                ]
            }
        },
        "_get_schema_for_field": {
            "name": "_get_schema_for_field",
            "location": 88,
            "return": [],
            "arguments": {
                "field": [
                    "str"
                ]
            }
        },
        "_get_schema_for_model": {
            "name": "_get_schema_for_model",
            "location": 94,
            "return": [
                "list[]"
            ],
            "arguments": {
                "model": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "get_table_id_for_model": {
            "name": "get_table_id_for_model",
            "location": 98,
            "return": [],
            "arguments": {
                "model": [
                    "str",
                    "int"
                ]
            }
        },
        "refresh_model_data": {
            "name": "refresh_model_data",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "model": [
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]"
                ],
                "data": []
            }
        }
    },
    "oakpec-sei-master/pipeline/__init__.py": {},
    "oakpec-sei-master/pipeline/netfile/client.py": {
        "build_url": {
            "name": "build_url",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_filing_ids": {
            "name": "get_filing_ids",
            "location": 26,
            "return": [],
            "arguments": {
                "form_type": [
                    "str",
                    "int"
                ]
            }
        },
        "download_filing": {
            "name": "download_filing",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "filing_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "oakpec-sei-master/pipeline/netfile/errors.py": {},
    "oakpec-sei-master/pipeline/netfile/models.py": {
        "close_connection": {
            "name": "close_connection",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "destroy_database": {
            "name": "destroy_database",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "get_model_classes": {
            "name": "get_model_classes",
            "location": 253,
            "return": [],
            "arguments": {}
        },
        "build_tables": {
            "name": "build_tables",
            "location": 260,
            "return": [],
            "arguments": {}
        },
        "_table_to_csv": {
            "name": "_table_to_csv",
            "location": 266,
            "return": [],
            "arguments": {
                "dataset": [],
                "table_name": []
            }
        },
        "export_data_to_csv": {
            "name": "export_data_to_csv",
            "location": 274,
            "return": [],
            "arguments": {}
        },
        "BaseModel.__eq__": {
            "name": "__eq__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "oakpec-sei-master/pipeline/netfile/parsers.py": {
        "find_and_clean_text": {
            "name": "find_and_clean_text",
            "location": 16,
            "return": [],
            "arguments": {
                "element": [],
                "path": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "_parse_comments": {
            "name": "_parse_comments",
            "location": 20,
            "return": [],
            "arguments": {
                "filing": [],
                "xml_tree": []
            }
        },
        "_parse_cover": {
            "name": "_parse_cover",
            "location": 30,
            "return": [],
            "arguments": {
                "filing": [],
                "xml_tree": []
            }
        },
        "_parse_offices": {
            "name": "_parse_offices",
            "location": 49,
            "return": [
                "list[Office]"
            ],
            "arguments": {
                "filing": [
                    "bool"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_a1_attachments": {
            "name": "_parse_schedule_a1_attachments",
            "location": 71,
            "return": [
                "list[ScheduleA1]"
            ],
            "arguments": {
                "filing": [
                    "str",
                    "typing.Callable[typing.Mapping, collections.abc.Awaitable[]]"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_a2_attachments": {
            "name": "_parse_schedule_a2_attachments",
            "location": 102,
            "return": [
                "list[ScheduleA2]"
            ],
            "arguments": {
                "filing": [
                    "bool"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_b_attachments": {
            "name": "_parse_schedule_b_attachments",
            "location": 137,
            "return": [
                "tuple[typing.Union[list[ScheduleB],list[ScheduleBIncomeSource]]]"
            ],
            "arguments": {
                "filing": [],
                "xml_tree": []
            }
        },
        "_parse_schedule_c1_attachments": {
            "name": "_parse_schedule_c1_attachments",
            "location": 176,
            "return": [
                "list[ScheduleC1]"
            ],
            "arguments": {
                "filing": [
                    "bool",
                    "typing.Callable[, ]"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_c2_attachments": {
            "name": "_parse_schedule_c2_attachments",
            "location": 204,
            "return": [
                "list[ScheduleC2]"
            ],
            "arguments": {
                "filing": [
                    "tuple[typing.Union[str,float]]",
                    "None"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_d_attachments": {
            "name": "_parse_schedule_d_attachments",
            "location": 255,
            "return": [
                "tuple[typing.Union[list[ScheduleD],list[ScheduleDGift]]]"
            ],
            "arguments": {
                "filing": [
                    "bool",
                    "typing.IO",
                    "None",
                    "typing.TextIO"
                ],
                "xml_tree": []
            }
        },
        "_parse_schedule_e_attachments": {
            "name": "_parse_schedule_e_attachments",
            "location": 286,
            "return": [
                "list[ScheduleE]"
            ],
            "arguments": {
                "filing": [
                    "bool",
                    "typing.Callable[, ]"
                ],
                "xml_tree": []
            }
        },
        "_save_models": {
            "name": "_save_models",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "instances": [
                    "list[tuple[typing.Union[int,str]]]"
                ]
            }
        },
        "parse_filing": {
            "name": "parse_filing",
            "location": 321,
            "return": [],
            "arguments": {
                "filing_id": [
                    "str",
                    "int"
                ],
                "raw_data": [
                    "str",
                    "dict[typing.Any, str]"
                ]
            }
        }
    },
    "oakpec-sei-master/pipeline/netfile/utils.py": {
        "clean_boolean": {
            "name": "clean_boolean",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": [
                    "str",
                    "None",
                    "bytes"
                ]
            }
        },
        "clean_datetime": {
            "name": "clean_datetime",
            "location": 21,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "s": [
                    "str",
                    "None"
                ]
            }
        },
        "clean_choice": {
            "name": "clean_choice",
            "location": 42,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "s": [],
                "choices": [
                    "str"
                ]
            }
        },
        "clean_decimal": {
            "name": "clean_decimal",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "str",
                    "None",
                    "bytes",
                    "frozenset"
                ]
            }
        },
        "clean_string": {
            "name": "clean_string",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "str",
                    "None",
                    "typing.Type",
                    "dict[str, str]"
                ]
            }
        },
        "clean_integer": {
            "name": "clean_integer",
            "location": 60,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "s": [
                    "str",
                    "typing.Type",
                    "int",
                    "list[]",
                    "tuple[]"
                ]
            }
        }
    },
    "oakpec-sei-master/pipeline/netfile/__init__.py": {},
    "oakpec-sei-master/pipeline/netfile/tests/conftest.py": {
        "reset_database": {
            "name": "reset_database",
            "location": 7,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/pipeline/netfile/tests/test_client.py": {
        "test_build_url": {
            "name": "test_build_url",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_filings": {
            "name": "test_get_filings",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_filings_error": {
            "name": "test_get_filings_error",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_download_filing": {
            "name": "test_download_filing",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_download_filing_error": {
            "name": "test_download_filing_error",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/pipeline/netfile/tests/test_parsers.py": {
        "read_filing": {
            "name": "read_filing",
            "location": 16,
            "return": [],
            "arguments": {
                "filing_id": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "_parse_filing": {
            "name": "_parse_filing",
            "location": 25,
            "return": [],
            "arguments": {
                "filing_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_parse_filing": {
            "name": "test_parse_filing",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_filing_amendments": {
            "name": "test_parse_filing_amendments",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_filing_comments_schedule_b": {
            "name": "test_parse_filing_comments_schedule_b",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_filing_comments_schedule_d": {
            "name": "test_parse_filing_comments_schedule_d",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_filing_duplicates": {
            "name": "test_parse_filing_duplicates",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_a2": {
            "name": "test_parse_schedule_a2",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_b": {
            "name": "test_parse_schedule_b",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_b_income_sources": {
            "name": "test_parse_schedule_b_income_sources",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_c1": {
            "name": "test_parse_schedule_c1",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_c2": {
            "name": "test_parse_schedule_c2",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_d": {
            "name": "test_parse_schedule_d",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_schedule_e": {
            "name": "test_parse_schedule_e",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/pipeline/netfile/tests/test_utils.py": {
        "test_clean_string": {
            "name": "test_clean_string",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_boolean": {
            "name": "test_clean_boolean",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_datetime": {
            "name": "test_clean_datetime",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_decimal": {
            "name": "test_clean_decimal",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_integer": {
            "name": "test_clean_integer",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/pipeline/netfile/tests/__init__.py": {},
    "oakpec-sei-master/pipeline/tests/bigquery.py": {
        "test_get_table_id_for_model": {
            "name": "test_get_table_id_for_model",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/scripts/download_form_700_data.py": {
        "_save_file": {
            "name": "_save_file",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "directory": [
                    "str"
                ],
                "filing_id": [
                    "str"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/scripts/parse_local_data.py": {
        "_save_file": {
            "name": "_save_file",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "directory": [
                    "str"
                ],
                "filing_id": [
                    "str"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oakpec-sei-master/scripts/__init__.py": {}
}
{
    "oatmeal-master/setup.py": {},
    "oatmeal-master/oatmeal/models.py": {
        "get_bert_binary_model": {
            "name": "get_bert_binary_model",
            "location": 69,
            "return": [
                "list[str]",
                "str",
                "tuple[typing.Union[typing.Literal,typing.Literal]]",
                "tuple[typing.Union[tuple[typing.Union[typing.Literal,typing.Any]],tuple[typing.Union[typing.Literal,typing.Any]],tuple[typing.Union[typing.Literal,typing.Any]],tuple[typing.Union[typing.Literal,typing.Any]]]]"
            ],
            "arguments": {}
        },
        "get_bert_multiclass_model": {
            "name": "get_bert_multiclass_model",
            "location": 79,
            "return": [
                "tuple[tuple[typing.Literal]]",
                "str",
                "bool"
            ],
            "arguments": {
                "num_labels": [
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "get_bert_multilabel_model": {
            "name": "get_bert_multilabel_model",
            "location": 89,
            "return": [
                "str",
                "tuple[typing.Union[str,str,str,str]]"
            ],
            "arguments": {
                "num_labels": [
                    "int",
                    "float"
                ]
            }
        },
        "get_bert_opt": {
            "name": "get_bert_opt",
            "location": 105,
            "return": [
                "BertAdam"
            ],
            "arguments": {
                "model": [],
                "n_train_examples": [
                    "int"
                ],
                "train_batch_size": [
                    "int"
                ],
                "num_train_epochs": [
                    "int",
                    "str"
                ]
            }
        },
        "run_model_training": {
            "name": "run_model_training",
            "location": 135,
            "return": [],
            "arguments": {
                "model": [],
                "opt": [],
                "dataloader": [
                    "int",
                    "float"
                ],
                "epochs": [
                    "int",
                    "float"
                ],
                "pos_weight": [
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "run_prediction_softmax": {
            "name": "run_prediction_softmax",
            "location": 163,
            "return": [
                "set[str]",
                "list[str]",
                "str",
                "None"
            ],
            "arguments": {
                "model": [],
                "dataloader": [
                    "int",
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "run_prediction_sigmoid": {
            "name": "run_prediction_sigmoid",
            "location": 183,
            "return": [
                "set[str]",
                "list[str]",
                "str",
                "None"
            ],
            "arguments": {
                "model": [],
                "dataloader": [
                    "int",
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "BertForMultiLabelSequenceClassification.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "str",
                    "dict[, ]"
                ],
                "num_labels": [
                    "int"
                ]
            }
        },
        "BertForMultiLabelSequenceClassification.forward": {
            "name": "forward",
            "location": 34,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "input_ids": [
                    "str",
                    "int"
                ],
                "token_type_ids": [
                    "None",
                    "str",
                    "int"
                ],
                "attention_mask": [
                    "None",
                    "str",
                    "int"
                ],
                "labels": [
                    "None",
                    "str",
                    "int"
                ],
                "pos_weight": [
                    "None",
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "BertForMultiLabelSequenceClassification.freeze_bert_encoder": {
            "name": "freeze_bert_encoder",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BertForMultiLabelSequenceClassification.unfreeze_bert_encoder": {
            "name": "unfreeze_bert_encoder",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oatmeal-master/oatmeal/oatmeal.py": {
        "cli": {
            "name": "cli",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "train": {
            "name": "train",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "list[typing.Union[str,int]]",
                    "str"
                ],
                "input_data": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "eval_data": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "export_path": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "model_name": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "batch_size": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "epochs": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ],
                "max_seq_len": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "multiclass": {
            "name": "multiclass",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "text_column": [
                    "bool",
                    "str"
                ],
                "label_column": [
                    "bool",
                    "str"
                ],
                "label_names": []
            }
        },
        "multilabel": {
            "name": "multilabel",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "text_column": [
                    "int"
                ],
                "label_names": [
                    "list[int]"
                ],
                "balance": [
                    "bool",
                    "list[str]",
                    "str"
                ]
            }
        },
        "predict": {
            "name": "predict",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "input_text": [],
                "model_path": [
                    "str"
                ],
                "model_name": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "oatmeal-master/oatmeal/persistance.py": {
        "save_model": {
            "name": "save_model",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "model": [],
                "training_parameters": [
                    "dict[str, str]",
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "export_dir": [
                    "str",
                    "None"
                ],
                "model_name": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "load_model_classification": {
            "name": "load_model_classification",
            "location": 42,
            "return": [
                "BertForSequenceClassification"
            ],
            "arguments": {
                "model_path": [
                    "str",
                    "None"
                ],
                "model_name": [
                    "str",
                    "bool"
                ],
                "num_labels": [
                    "int"
                ]
            }
        },
        "load_model_multilabel": {
            "name": "load_model_multilabel",
            "location": 54,
            "return": [
                "BertForMultiLabelSequenceClassification"
            ],
            "arguments": {
                "model_path": [
                    "str",
                    "None"
                ],
                "model_name": [
                    "str",
                    "bool"
                ],
                "num_labels": [
                    "int"
                ]
            }
        },
        "load_classification_data": {
            "name": "load_classification_data",
            "location": 66,
            "return": [
                "tuple[typing.Optional[dict[, ]]]"
            ],
            "arguments": {
                "input_csv": [
                    "str",
                    "typing.Any",
                    "None"
                ],
                "text_column": [
                    "str",
                    "tuple[]",
                    "bool"
                ],
                "label_column": [
                    "bool",
                    "typing.Sequence[str]",
                    "float"
                ]
            }
        },
        "load_multilabel_data": {
            "name": "load_multilabel_data",
            "location": 80,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "input_csv": [
                    "str"
                ],
                "text_column": [
                    "str",
                    "bytes",
                    "int",
                    "typing.Callable[, ]"
                ],
                "label_names": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "load_evaluation_data": {
            "name": "load_evaluation_data",
            "location": 89,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "input_csv": [
                    "str",
                    "bool"
                ],
                "text_column": [
                    "str",
                    "bytes"
                ]
            }
        },
        "create_training_parameters": {
            "name": "create_training_parameters",
            "location": 95,
            "return": [],
            "arguments": {
                "num_labels": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "problem_type": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "max_seq_len": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "epochs": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ],
                "label_names": [
                    "int",
                    "str",
                    "list[str]",
                    "None"
                ]
            }
        },
        "load_training_config": {
            "name": "load_training_config",
            "location": 111,
            "return": [],
            "arguments": {
                "json_path": [
                    "str"
                ]
            }
        }
    },
    "oatmeal-master/oatmeal/processing.py": {
        "text_to_token_ids": {
            "name": "text_to_token_ids",
            "location": 15,
            "return": [
                "tuple[list[int]]"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "max_seq_len": [
                    "int"
                ]
            }
        },
        "tensorize_texts": {
            "name": "tensorize_texts",
            "location": 40,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "raw_texts": [
                    "str"
                ],
                "max_seq_len": [
                    "str",
                    "int"
                ]
            }
        },
        "labels_to_tensor": {
            "name": "labels_to_tensor",
            "location": 50,
            "return": [],
            "arguments": {
                "labels": [
                    "bool",
                    "typing.Iterable[typing.Hashable]"
                ],
                "dtype": []
            }
        },
        "build_train_dataloader": {
            "name": "build_train_dataloader",
            "location": 55,
            "return": [
                "DataLoader"
            ],
            "arguments": {
                "all_input_ids": [
                    "int",
                    "set[int]",
                    "str"
                ],
                "all_input_mask": [
                    "int",
                    "set[int]",
                    "str"
                ],
                "all_segment_ids": [
                    "int",
                    "set[int]",
                    "str"
                ],
                "all_label_ids": [
                    "int",
                    "set[int]",
                    "str"
                ],
                "batch_size": [
                    "int",
                    "list[int]",
                    "tuple[int]"
                ]
            }
        },
        "build_predict_dataloader": {
            "name": "build_predict_dataloader",
            "location": 70,
            "return": [
                "DataLoader"
            ],
            "arguments": {
                "all_input_ids": [
                    "int",
                    "dict[str, bool]",
                    "set[str]",
                    "str",
                    "typing.Mapping"
                ],
                "all_input_mask": [
                    "int",
                    "dict[str, bool]",
                    "set[str]",
                    "str",
                    "typing.Mapping"
                ],
                "all_segment_ids": [
                    "int",
                    "dict[str, bool]",
                    "set[str]",
                    "str",
                    "typing.Mapping"
                ],
                "batch_size": [
                    "int",
                    "list[int]"
                ]
            }
        },
        "create_training_dataloader": {
            "name": "create_training_dataloader",
            "location": 82,
            "return": [
                "dict[, ]",
                "int",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "texts": [
                    "int",
                    "float",
                    "None"
                ],
                "labels": [
                    "int"
                ],
                "max_seq_len": [
                    "int",
                    "float",
                    "None"
                ],
                "batch_size": [
                    "int",
                    "float"
                ],
                "multilabel": [
                    "bool"
                ]
            }
        },
        "create_prediction_dataloader": {
            "name": "create_prediction_dataloader",
            "location": 100,
            "return": [
                "dict[, ]",
                "int"
            ],
            "arguments": {
                "texts": [
                    "int",
                    "bytes",
                    "str",
                    "None"
                ],
                "max_seq_len": [
                    "int",
                    "bytes",
                    "str",
                    "None"
                ],
                "batch_size": [
                    "int",
                    "str"
                ]
            }
        },
        "build_binary_predictions_df": {
            "name": "build_binary_predictions_df",
            "location": 110,
            "return": [],
            "arguments": {
                "input_df": [
                    "dict[, ]"
                ],
                "predictions": []
            }
        },
        "build_multi_predictions_df": {
            "name": "build_multi_predictions_df",
            "location": 117,
            "return": [],
            "arguments": {
                "input_df": [
                    "str",
                    "typing.Mapping",
                    "list[str]",
                    "bool"
                ],
                "predictions": [
                    "str",
                    "dict[typing.Hashable, typing.Any]",
                    "typing.Callable[, ]",
                    "int"
                ],
                "label_names": [
                    "str",
                    "bool",
                    "None",
                    "typing.Callable[list[], bool]"
                ]
            }
        }
    },
    "oatmeal-master/oatmeal/__init__.py": {},
    "oatmeal-master/tests/test_processing.py": {
        "test_tokenization": {
            "name": "test_tokenization",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tensorize": {
            "name": "test_tensorize",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_labels_to_tensor": {
            "name": "test_labels_to_tensor",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_create_train_dataloader": {
            "name": "test_create_train_dataloader",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_create_predict_dataloader": {
            "name": "test_create_predict_dataloader",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oatmeal-master/tests/__init__.py": {}
}
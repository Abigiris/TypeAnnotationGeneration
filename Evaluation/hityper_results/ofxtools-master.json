{
    "ofxtools-master/setup.py": {},
    "ofxtools-master/docs/conf.py": {},
    "ofxtools-master/ofxtools/Client.py": {
        "wrap_stmtrq": {
            "name": "wrap_stmtrq",
            "location": 969,
            "return": [
                "None"
            ],
            "arguments": {
                "nt": [
                    "str",
                    "None"
                ],
                "rqs": [
                    "bool"
                ],
                "client": [
                    "bool"
                ]
            }
        },
        "wrap_stmtrq_stmtrq": {
            "name": "wrap_stmtrq_stmtrq",
            "location": 974,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "nt": [
                    "bool"
                ],
                "rqs": [],
                "client": []
            }
        },
        "wrap_stmtrq_ccstmtrq": {
            "name": "wrap_stmtrq_ccstmtrq",
            "location": 982,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "nt": [
                    "bool"
                ],
                "rqs": [],
                "client": []
            }
        },
        "wrap_stmtrq_invstmtrq": {
            "name": "wrap_stmtrq_invstmtrq",
            "location": 987,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "nt": [
                    "bool"
                ],
                "rqs": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "client": [
                    "bool",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "wrap_stmtrq_stmtendrq": {
            "name": "wrap_stmtrq_stmtendrq",
            "location": 998,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "nt": [
                    "bool"
                ],
                "rqs": [],
                "client": []
            }
        },
        "wrap_stmtrq_ccstmtendrq": {
            "name": "wrap_stmtrq_ccstmtendrq",
            "location": 1006,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "nt": [
                    "bool"
                ],
                "rqs": [],
                "client": []
            }
        },
        "OFXClient.__repr__": {
            "name": "__repr__",
            "location": 241,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClient.__init__": {
            "name": "__init__",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "dict[str, str]",
                    "None",
                    "int",
                    "str"
                ],
                "userid": [
                    "None",
                    "str",
                    "bool"
                ],
                "clientuid": [
                    "None",
                    "str",
                    "bool"
                ],
                "org": [
                    "None",
                    "str",
                    "bool"
                ],
                "fid": [
                    "None",
                    "str",
                    "bool"
                ],
                "version": [
                    "None",
                    "typing.Callable[, ]",
                    "str",
                    "list[list[str]]"
                ],
                "appid": [
                    "None",
                    "str",
                    "bool"
                ],
                "appver": [
                    "None",
                    "str",
                    "bool"
                ],
                "language": [
                    "None",
                    "str",
                    "bool"
                ],
                "prettyprint": [
                    "None",
                    "str",
                    "bool"
                ],
                "close_elements": [
                    "None",
                    "int",
                    "dict[, ]",
                    "str"
                ],
                "bankid": [
                    "None",
                    "str",
                    "bool"
                ],
                "brokerid": [
                    "None",
                    "str",
                    "bool"
                ],
                "useragent": [
                    "None",
                    "str",
                    "bool"
                ],
                "persist_cookies": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "OFXClient.uuid": {
            "name": "uuid",
            "location": 303,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OFXClient.http_headers": {
            "name": "http_headers",
            "location": 312,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClient.dtclient": {
            "name": "dtclient",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OFXClient.request_statements": {
            "name": "request_statements",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "None",
                    "typing.Container",
                    "float",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "int"
                ]
            }
        },
        "OFXClient._get_service_urls": {
            "name": "_get_service_urls",
            "location": 426,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None",
                    "float",
                    "int"
                ],
                "gen_newfileuid": [
                    "bool"
                ]
            }
        },
        "OFXClient.request_profile": {
            "name": "request_profile",
            "location": 473,
            "return": [
                "BytesIO"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "gen_newfileuid": [
                    "bool"
                ],
                "prettyprint": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "close_elements": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "dryrun": [
                    "bool"
                ],
                "timeout": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "url": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "persist": [
                    "bool"
                ]
            }
        },
        "OFXClient._request_profile": {
            "name": "_request_profile",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "dtprofup": [
                    "None",
                    "int"
                ],
                "version": [
                    "None",
                    "str",
                    "bool",
                    "float"
                ],
                "gen_newfileuid": [
                    "bool"
                ],
                "prettyprint": [
                    "None",
                    "str",
                    "bool",
                    "float"
                ],
                "close_elements": [
                    "None",
                    "str",
                    "bool",
                    "float"
                ],
                "dryrun": [
                    "bool"
                ],
                "timeout": [
                    "None",
                    "str",
                    "bool",
                    "float"
                ],
                "url": [
                    "None",
                    "str",
                    "bool",
                    "float"
                ]
            }
        },
        "OFXClient.request_accounts": {
            "name": "request_accounts",
            "location": 592,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "None",
                    "typing.Sequence[dict[str, str]]",
                    "int"
                ],
                "dtacctup": [
                    "str",
                    "None",
                    "typing.Sequence[dict[str, str]]",
                    "int"
                ],
                "dryrun": [
                    "bool"
                ],
                "version": [
                    "None",
                    "int",
                    "str"
                ],
                "gen_newfileuid": [
                    "bool"
                ],
                "timeout": [
                    "None",
                    "str",
                    "list[str]",
                    "bool",
                    "dict[, ]"
                ],
                "skip_profile": [
                    "bool"
                ]
            }
        },
        "OFXClient.request_tax1099": {
            "name": "request_tax1099",
            "location": 646,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "bool",
                    "None",
                    "typing.Iterable[str]"
                ]
            }
        },
        "OFXClient.signon": {
            "name": "signon",
            "location": 700,
            "return": [
                "SIGNONMSGSRQV1"
            ],
            "arguments": {
                "self": [],
                "userpass": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "userid": [
                    "None",
                    "str",
                    "int",
                    "float"
                ],
                "sesscookie": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "OFXClient.stmttrnrq": {
            "name": "stmttrnrq",
            "location": 734,
            "return": [],
            "arguments": {
                "self": [],
                "bankid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "acctid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "accttype": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtstart": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtend": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "inctran": [
                    "bool"
                ]
            }
        },
        "OFXClient.stmtendtrnrq": {
            "name": "stmtendtrnrq",
            "location": 750,
            "return": [],
            "arguments": {
                "self": [],
                "bankid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "acctid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "accttype": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtstart": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtend": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "OFXClient.ccstmttrnrq": {
            "name": "ccstmttrnrq",
            "location": 764,
            "return": [],
            "arguments": {
                "self": [],
                "acctid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtstart": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtend": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "inctran": [
                    "bool"
                ]
            }
        },
        "OFXClient.ccstmtendtrnrq": {
            "name": "ccstmtendtrnrq",
            "location": 778,
            "return": [],
            "arguments": {
                "self": [],
                "acctid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtstart": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtend": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "OFXClient.invstmttrnrq": {
            "name": "invstmttrnrq",
            "location": 790,
            "return": [],
            "arguments": {
                "self": [],
                "acctid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "brokerid": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "dtstart": [
                    "None",
                    "bool"
                ],
                "dtend": [
                    "None",
                    "bool"
                ],
                "inctran": [
                    "bool"
                ],
                "incoo": [
                    "bool"
                ],
                "dtasof": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "incpos": [
                    "bool"
                ],
                "incbal": [
                    "bool"
                ]
            }
        },
        "OFXClient.download": {
            "name": "download",
            "location": 821,
            "return": [
                "BytesIO"
            ],
            "arguments": {
                "self": [],
                "ofx": [
                    "float",
                    "int",
                    "str",
                    "None",
                    "bytes",
                    "list[typing.Any]"
                ],
                "version": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ],
                "oldfileuid": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ],
                "newfileuid": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ],
                "prettyprint": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ],
                "close_elements": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ],
                "dryrun": [
                    "bool"
                ],
                "timeout": [
                    "None",
                    "str",
                    "bool"
                ],
                "url": [
                    "None",
                    "int",
                    "str",
                    "dict[, ]",
                    "float"
                ]
            }
        },
        "OFXClient.post_request": {
            "name": "post_request",
            "location": 871,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "int",
                    "dict[, ]"
                ],
                "serialized_request": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "int",
                    "dict[, ]"
                ],
                "timeout": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "OFXClient.serialize": {
            "name": "serialize",
            "location": 908,
            "return": [],
            "arguments": {
                "self": [],
                "ofx": [],
                "version": [
                    "None",
                    "int",
                    "bytes",
                    "dict[str, str]"
                ],
                "oldfileuid": [
                    "None",
                    "int",
                    "list[list[int]]",
                    "bytes"
                ],
                "newfileuid": [
                    "None",
                    "int",
                    "list[list[int]]",
                    "bytes"
                ],
                "prettyprint": [
                    "None",
                    "bool",
                    "tuple[typing.Union[float,float]]",
                    "list[]",
                    "typing.Type"
                ],
                "close_elements": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "OFXClient.request_statements.trnSortKey": {
            "name": "trnSortKey",
            "location": 386,
            "return": [],
            "arguments": {
                "pair": []
            }
        },
        "OFXClient.request_statements.msg_args": {
            "name": "msg_args",
            "location": 394,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "msgcls": [],
                "trnrqs": []
            }
        },
        "OFXClient._get_service_urls.map_stmtendrq_urls": {
            "name": "map_stmtendrq_urls",
            "location": 455,
            "return": [
                "None"
            ],
            "arguments": {
                "msgsetCls": [],
                "stmtendrqCls": []
            }
        }
    },
    "ofxtools-master/ofxtools/header.py": {
        "parse_header": {
            "name": "parse_header",
            "location": 251,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "source": []
            }
        },
        "make_header": {
            "name": "make_header",
            "location": 324,
            "return": [],
            "arguments": {
                "version": [],
                "security": [
                    "None"
                ],
                "oldfileuid": [
                    "None"
                ],
                "newfileuid": [
                    "None"
                ]
            }
        },
        "OFXHeaderBase.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderBase.parse": {
            "name": "parse",
            "location": 69,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "cls": [],
                "rawheader": []
            }
        },
        "OFXHeaderV1.codec": {
            "name": "codec",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [],
                "ofxheader": [
                    "None"
                ],
                "data": [
                    "None"
                ],
                "security": [
                    "None"
                ],
                "encoding": [
                    "None"
                ],
                "charset": [
                    "None"
                ],
                "compression": [
                    "None"
                ],
                "oldfileuid": [
                    "None"
                ],
                "newfileuid": [
                    "None"
                ]
            }
        },
        "OFXHeaderV1.__str__": {
            "name": "__str__",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2.__init__": {
            "name": "__init__",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [],
                "ofxheader": [
                    "None"
                ],
                "security": [
                    "None"
                ],
                "oldfileuid": [
                    "None"
                ],
                "newfileuid": [
                    "None"
                ]
            }
        },
        "OFXHeaderV2.__str__": {
            "name": "__str__",
            "location": 226,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/lib.py": {},
    "ofxtools-master/ofxtools/ofxhome.py": {
        "list_institutions": {
            "name": "list_institutions",
            "location": 53,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        },
        "lookup": {
            "name": "lookup",
            "location": 64,
            "return": [
                "None",
                "OFXServer"
            ],
            "arguments": {
                "id": [
                    "str",
                    "typing.Iterable[int]"
                ]
            }
        },
        "fetch_fi_xml": {
            "name": "fetch_fi_xml",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "id": [
                    "str"
                ]
            }
        },
        "ofx_invalid": {
            "name": "ofx_invalid",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "srvr": [
                    "int",
                    "float",
                    "typing.Callable[, ]",
                    "None",
                    "str"
                ],
                "valid_days": [
                    "None",
                    "float",
                    "str",
                    "int",
                    "typing.Callable[str, int]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "ssl_invalid": {
            "name": "ssl_invalid",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "srvr": [
                    "int",
                    "float",
                    "typing.Callable[, ]",
                    "None",
                    "str"
                ],
                "valid_days": [
                    "None",
                    "float",
                    "str",
                    "int",
                    "typing.Callable[str, int]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "_make_query": {
            "name": "_make_query",
            "location": 131,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_convert_str": {
            "name": "_convert_str",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "elem": [
                    "int",
                    "str",
                    "list[list[int]]"
                ]
            }
        },
        "_convert_dt": {
            "name": "_convert_dt",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "elem": [
                    "int",
                    "dict[str, typing.Any]",
                    "str",
                    "tuple[bytes]"
                ]
            }
        },
        "_convert_bool": {
            "name": "_convert_bool",
            "location": 150,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "elem": [
                    "bytes",
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "_convert_profile": {
            "name": "_convert_profile",
            "location": 157,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "elem": [
                    "typing.Mapping",
                    "int",
                    "tuple[typing.Union[str,str]]",
                    "dict[str, set[str]]"
                ]
            }
        },
        "_escape_fid": {
            "name": "_escape_fid",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "match": []
            }
        },
        "_convert_profile.convert_maybe_bool": {
            "name": "convert_maybe_bool",
            "location": 158,
            "return": [],
            "arguments": {
                "key": [],
                "val": []
            }
        }
    },
    "ofxtools-master/ofxtools/Parser.py": {
        "main": {
            "name": "main",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "OFXTree.parse": {
            "name": "parse",
            "location": 71,
            "return": [
                "str",
                "int",
                "list[str]",
                "typing.Final"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "Exception",
                    "list[Exception]",
                    "bool"
                ],
                "parser": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "OFXTree._read": {
            "name": "_read",
            "location": 99,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "source": []
            }
        },
        "OFXTree.convert": {
            "name": "convert",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilder.feed": {
            "name": "feed",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "str",
                    "bytes"
                ]
            }
        },
        "TreeBuilder._feedmatch": {
            "name": "_feedmatch",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "text": [
                    "str",
                    "bool",
                    "None"
                ],
                "closetag": [
                    "str",
                    "None",
                    "set[str]",
                    "typing.Pattern"
                ]
            }
        },
        "TreeBuilder._start": {
            "name": "_start",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "text": [
                    "str",
                    "None",
                    "int"
                ],
                "closetag": [
                    "str",
                    "None"
                ]
            }
        },
        "TreeBuilder._groomstring": {
            "name": "_groomstring",
            "location": 227,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/Types.py": {
        "call_signature": {
            "name": "call_signature",
            "location": 61,
            "return": [],
            "arguments": {}
        },
        "format_datetime": {
            "name": "format_datetime",
            "location": 519,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "format": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "value": []
            }
        },
        "call_signature.decorate": {
            "name": "decorate",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Element.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.__repr__": {
            "name": "__repr__",
            "location": 142,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element.__set_name__": {
            "name": "__set_name__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "owner": [
                    "typing.Type",
                    "str"
                ],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "Element.__get__": {
            "name": "__get__",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool",
                    "str",
                    "typing.Sequence[typing.Callable[, ]]",
                    "None"
                ],
                "objtype": [
                    "None",
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Element.__set__": {
            "name": "__set__",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "None",
                    "dict[str, str]"
                ],
                "value": [
                    "str",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "Element.convert": {
            "name": "convert",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int"
                ]
            }
        },
        "Element.enforce_required": {
            "name": "enforce_required",
            "location": 182,
            "return": [
                "str",
                "None",
                "typing.Any",
                "int",
                "float",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None",
                    "typing.Any",
                    "int",
                    "float",
                    "bytes"
                ]
            }
        },
        "Bool.convert": {
            "name": "convert",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes"
                ]
            }
        },
        "Bool._convert_none": {
            "name": "_convert_none",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Bool._convert_bool": {
            "name": "_convert_bool",
            "location": 206,
            "return": [
                "bytes",
                "str",
                "tuple[typing.Union[str,int]]",
                "int",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "bytes",
                    "str",
                    "tuple[typing.Union[str,int]]",
                    "int",
                    "list[]"
                ]
            }
        },
        "Bool._convert_str": {
            "name": "_convert_str",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "Bool.unconvert": {
            "name": "unconvert",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "bool",
                    "typing.Any",
                    "None",
                    "bytes",
                    "typing.Iterable[object]",
                    "str",
                    "typing.Collection"
                ]
            }
        },
        "Bool._unconvert_bool": {
            "name": "_unconvert_bool",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "dict[, ]",
                    "dict[str, str]",
                    "typing.Mapping"
                ]
            }
        },
        "Bool._unconvert_none": {
            "name": "_unconvert_none",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "String.convert": {
            "name": "convert",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "String.enforce_length": {
            "name": "enforce_length",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "String._convert_str": {
            "name": "_convert_str",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "String._convert_none": {
            "name": "_convert_none",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "String.unconvert": {
            "name": "unconvert",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "dict[I, list[typing.Any]]"
                ]
            }
        },
        "String._unconvert_str": {
            "name": "_unconvert_str",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "String._unconvert_none": {
            "name": "_unconvert_none",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "OneOf.convert": {
            "name": "convert",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes"
                ]
            }
        },
        "OneOf._convert_default": {
            "name": "_convert_default",
            "location": 318,
            "return": [
                "list[]",
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes",
                    "int",
                    "None"
                ]
            }
        },
        "OneOf._convert_str": {
            "name": "_convert_str",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "dict[, ]",
                    "typing.Container",
                    "None"
                ]
            }
        },
        "OneOf._convert_none": {
            "name": "_convert_none",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "OneOf.unconvert": {
            "name": "unconvert",
            "location": 334,
            "return": [
                "list[]",
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes",
                    "int",
                    "None"
                ]
            }
        },
        "OneOf._unconvert_none": {
            "name": "_unconvert_none",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "Integer.enforce_length": {
            "name": "enforce_length",
            "location": 350,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "float"
                ]
            }
        },
        "Integer.convert": {
            "name": "convert",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Integer._convert_int": {
            "name": "_convert_int",
            "location": 364,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        },
        "Integer.convert_str": {
            "name": "convert_str",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Integer._convert_none": {
            "name": "_convert_none",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Integer.unconvert": {
            "name": "unconvert",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "dict[I, list[typing.Any]]"
                ]
            }
        },
        "Integer._unconvert_none": {
            "name": "_unconvert_none",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "Integer._unconvert_int": {
            "name": "_unconvert_int",
            "location": 390,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "bytes",
                    "bool",
                    "str",
                    "None",
                    "float"
                ]
            }
        },
        "Decimal.__init__": {
            "name": "__init__",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Decimal.convert": {
            "name": "convert",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None",
                    "typing.Sequence[]"
                ]
            }
        },
        "Decimal._convert_decimal": {
            "name": "_convert_decimal",
            "location": 417,
            "return": [
                "str",
                "bool",
                "None",
                "typing.Iterator"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool",
                    "None",
                    "typing.Iterator"
                ]
            }
        },
        "Decimal._convert_str": {
            "name": "_convert_str",
            "location": 423,
            "return": [
                "Decimal"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Decimal._convert_none": {
            "name": "_convert_none",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Decimal.unconvert": {
            "name": "unconvert",
            "location": 441,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "dict[I, list[typing.Any]]"
                ]
            }
        },
        "Decimal._unconvert_decimal": {
            "name": "_unconvert_decimal",
            "location": 446,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None"
                ]
            }
        },
        "Decimal._unconvert_none": {
            "name": "_unconvert_none",
            "location": 452,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "DateTime.convert": {
            "name": "convert",
            "location": 564,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "typing.Iterable[]"
                ]
            }
        },
        "DateTime._convert_datetime": {
            "name": "_convert_datetime",
            "location": 569,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DateTime._convert_str": {
            "name": "_convert_str",
            "location": 575,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "DateTime.parse_gmt_offset": {
            "name": "parse_gmt_offset",
            "location": 597,
            "return": [],
            "arguments": {
                "self": [],
                "hours": [
                    "str",
                    "int"
                ],
                "minutes": [
                    "tuple[typing.Union[int,int]]",
                    "list[str]",
                    "dict[, ]",
                    "None",
                    "bool",
                    "str"
                ],
                "tz_name": [
                    "str"
                ]
            }
        },
        "DateTime.normalize_to_gmt": {
            "name": "normalize_to_gmt",
            "location": 614,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "gmt_offset": []
            }
        },
        "DateTime._convert_none": {
            "name": "_convert_none",
            "location": 620,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "DateTime.unconvert": {
            "name": "unconvert",
            "location": 625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "dict[I, list[typing.Any]]"
                ]
            }
        },
        "DateTime._unconvert_datetime": {
            "name": "_unconvert_datetime",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DateTime._unconvert_none": {
            "name": "_unconvert_none",
            "location": 638,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "Time.convert": {
            "name": "convert",
            "location": 684,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "typing.Iterable[]"
                ]
            }
        },
        "Time._convert_time": {
            "name": "_convert_time",
            "location": 689,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Time.normalize_to_gmt": {
            "name": "normalize_to_gmt",
            "location": 694,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None"
                ],
                "gmt_offset": [
                    "str",
                    "list[]",
                    "bytes"
                ]
            }
        },
        "Time._convert_str": {
            "name": "_convert_str",
            "location": 711,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None"
                ]
            }
        },
        "Time._convert_none": {
            "name": "_convert_none",
            "location": 715,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Time.unconvert": {
            "name": "unconvert",
            "location": 720,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "dict[I, list[typing.Any]]"
                ]
            }
        },
        "Time._unconvert_time": {
            "name": "_unconvert_time",
            "location": 725,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Time._unconvert_none": {
            "name": "_unconvert_none",
            "location": 743,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "ListElement.convert": {
            "name": "convert",
            "location": 759,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "ListElement.unconvert": {
            "name": "unconvert",
            "location": 762,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "SubAggregate.convert": {
            "name": "convert",
            "location": 783,
            "return": [
                "str",
                "list[str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "SubAggregate._convert_none": {
            "name": "_convert_none",
            "location": 789,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "ListAggregate.unconvert": {
            "name": "unconvert",
            "location": 803,
            "return": [
                "str",
                "list[]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "list[]",
                    "bool"
                ]
            }
        },
        "Unsupported.__get__": {
            "name": "__get__",
            "location": 814,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool",
                    "str",
                    "dict[, ]"
                ],
                "objtype": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Unsupported.__set__": {
            "name": "__set__",
            "location": 817,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool",
                    "str",
                    "typing.Type",
                    "None"
                ],
                "value": [
                    "bool",
                    "str",
                    "typing.Type",
                    "None"
                ]
            }
        },
        "Unsupported.__repr__": {
            "name": "__repr__",
            "location": 820,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/utils.py": {
        "fixpath": {
            "name": "fixpath",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "collapseToSingle": {
            "name": "collapseToSingle",
            "location": 33,
            "return": [],
            "arguments": {
                "items": [
                    "list[]",
                    "dict[, ]",
                    "list[str]"
                ],
                "label": [
                    "str",
                    "list[str]",
                    "dict[, ]",
                    "tuple[typing.Union[str,float]]"
                ]
            }
        },
        "gmt_offset": {
            "name": "gmt_offset",
            "location": 53,
            "return": [],
            "arguments": {
                "hours": [
                    "int",
                    "float"
                ],
                "minutes": [
                    "float"
                ]
            }
        },
        "pairwise": {
            "name": "pairwise",
            "location": 76,
            "return": [],
            "arguments": {
                "iterable": [
                    "typing.Iterable[typing.Any]",
                    "typing.Iterable[T]",
                    "int",
                    "BaseException",
                    "None"
                ]
            }
        },
        "all_equal": {
            "name": "all_equal",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "str"
                ]
            }
        },
        "partition": {
            "name": "partition",
            "location": 89,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "pred": [
                    "typing.Callable[, ]"
                ],
                "iterable": [
                    "int",
                    "str",
                    "typing.Iterable[T]"
                ]
            }
        },
        "indent": {
            "name": "indent",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "elem": [],
                "level": [
                    "int"
                ]
            }
        },
        "tostring_unclosed_elements": {
            "name": "tostring_unclosed_elements",
            "location": 123,
            "return": [
                "bytes"
            ],
            "arguments": {
                "elem": []
            }
        },
        "cusip_checksum": {
            "name": "cusip_checksum",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "base": [
                    "str"
                ]
            }
        },
        "validate_cusip": {
            "name": "validate_cusip",
            "location": 163,
            "return": [
                "bool"
            ],
            "arguments": {
                "cusip": []
            }
        },
        "sedol_checksum": {
            "name": "sedol_checksum",
            "location": 173,
            "return": [
                "str"
            ],
            "arguments": {
                "base": []
            }
        },
        "isin_checksum": {
            "name": "isin_checksum",
            "location": 187,
            "return": [
                "str"
            ],
            "arguments": {
                "base": [
                    "bytes"
                ]
            }
        },
        "validate_isin": {
            "name": "validate_isin",
            "location": 202,
            "return": [
                "bool"
            ],
            "arguments": {
                "isin": []
            }
        },
        "cusip2isin": {
            "name": "cusip2isin",
            "location": 216,
            "return": [],
            "arguments": {
                "cusip": [
                    "str"
                ],
                "nation": [
                    "None",
                    "str"
                ]
            }
        },
        "sedol2isin": {
            "name": "sedol2isin",
            "location": 230,
            "return": [],
            "arguments": {
                "sedol": [
                    "str"
                ],
                "nation": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "classproperty.__get__": {
            "name": "__get__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "cls": [
                    "str",
                    "bool",
                    "typing.MutableMapping",
                    "None"
                ],
                "owner": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "cusip_checksum.encode": {
            "name": "encode",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "index": [],
                "char": []
            }
        },
        "_UTC.tzname": {
            "name": "tzname",
            "location": 247,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "_UTC.utcoffset": {
            "name": "utcoffset",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "_UTC.dst": {
            "name": "dst",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "_UTC.__repr__": {
            "name": "__repr__",
            "location": 265,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/__init__.py": {},
    "ofxtools-master/ofxtools/__version__.py": {},
    "ofxtools-master/ofxtools/config/__init__.py": {
        "configure_logging": {
            "name": "configure_logging",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "level": [
                    "None",
                    "Exception",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/base.py": {
        "Aggregate.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aggregate.validate_args": {
            "name": "validate_args",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "list[str]",
                    "typing.Sequence[typing.Any]",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "Aggregate._apply_args": {
            "name": "_apply_args",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aggregate._apply_residual_kwargs": {
            "name": "_apply_residual_kwargs",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aggregate.from_etree": {
            "name": "from_etree",
            "location": 200,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "elem": [
                    "dict[, ]"
                ]
            }
        },
        "Aggregate._convert": {
            "name": "_convert",
            "location": 221,
            "return": [],
            "arguments": {
                "cls": [],
                "elem": []
            }
        },
        "Aggregate.groom": {
            "name": "groom",
            "location": 314,
            "return": [
                "set[str]",
                "list[int]",
                "list[list[int]]",
                "set[]",
                "list[str]"
            ],
            "arguments": {
                "elem": [
                    "list[]",
                    "list[int]",
                    "str",
                    "float"
                ]
            }
        },
        "Aggregate.to_etree": {
            "name": "to_etree",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Aggregate._listAppend": {
            "name": "_listAppend",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "list[str]",
                    "int",
                    "typing.Container",
                    "list[]"
                ],
                "member": []
            }
        },
        "Aggregate.ungroom": {
            "name": "ungroom",
            "location": 372,
            "return": [
                "int",
                "str",
                "typing.Iterable[C]"
            ],
            "arguments": {
                "elem": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Aggregate._superdict": {
            "name": "_superdict",
            "location": 385,
            "return": [
                "ChainMap"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate._filter_attrs": {
            "name": "_filter_attrs",
            "location": 410,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "int",
                    "str"
                ],
                "predicate": [
                    "typing.Callable[, ]",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "int",
                    "str"
                ]
            }
        },
        "Aggregate.spec": {
            "name": "spec",
            "location": 438,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.spec_no_listaggregates": {
            "name": "spec_no_listaggregates",
            "location": 452,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.elements": {
            "name": "elements",
            "location": 466,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.subaggregates": {
            "name": "subaggregates",
            "location": 479,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.unsupported": {
            "name": "unsupported",
            "location": 487,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.listaggregates": {
            "name": "listaggregates",
            "location": 495,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate.listelements": {
            "name": "listelements",
            "location": 503,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Aggregate._spec_repr": {
            "name": "_spec_repr",
            "location": 510,
            "return": [
                "list[tuple[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aggregate.__hash__": {
            "name": "__hash__",
            "location": 526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Aggregate.__repr__": {
            "name": "__repr__",
            "location": 533,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aggregate.__getattr__": {
            "name": "__getattr__",
            "location": 541,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [
                    "str",
                    "bool"
                ]
            }
        },
        "ElementList.listaggregates": {
            "name": "listaggregates",
            "location": 560,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ElementList._apply_args": {
            "name": "_apply_args",
            "location": 566,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementList._listAppend": {
            "name": "_listAppend",
            "location": 573,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]"
                ],
                "member": [
                    "str",
                    "typing.NamedTuple"
                ]
            }
        },
        "Aggregate.validate_args.enforce_count": {
            "name": "enforce_count",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "kwargs": [],
                "errMsg": [],
                "mutexes": [],
                "predicate": []
            }
        },
        "Aggregate._convert.update_args": {
            "name": "update_args",
            "location": 242,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "accum": [],
                "elem": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/common.py": {
        "MSGSETCORE.validate_args": {
            "name": "validate_args",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Match",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/email.py": {
        "MAIL.groom": {
            "name": "groom",
            "location": 54,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        },
        "MAIL.ungroom": {
            "name": "ungroom",
            "location": 69,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/i18n.py": {
        "Origcurrency.curtype": {
            "name": "curtype",
            "location": 1209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Origcurrency.cursym": {
            "name": "cursym",
            "location": 1217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Origcurrency.currate": {
            "name": "currate",
            "location": 1225,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/ofx.py": {
        "OFX.validate_args": {
            "name": "validate_args",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "OFX.__repr__": {
            "name": "__repr__",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFX.signon": {
            "name": "signon",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OFX.securities": {
            "name": "securities",
            "location": 110,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFX.statements": {
            "name": "statements",
            "location": 118,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/profile.py": {
        "MSGSETLIST.validate_args": {
            "name": "validate_args",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Match",
                    "bool",
                    "None"
                ]
            }
        },
        "PROFTRNRS.profile": {
            "name": "profile",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/signon.py": {
        "SONRQ.validate_args": {
            "name": "validate_args",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SONRS.org": {
            "name": "org",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SONRS.fid": {
            "name": "fid",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MFACHALLENGERS.validate_args": {
            "name": "validate_args",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/signup.py": {
        "ACCTINFO.validate_args": {
            "name": "validate_args",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.IO"
                ]
            }
        },
        "ACCTINFO.__repr__": {
            "name": "__repr__",
            "location": 167,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ACCTINFORS.__repr__": {
            "name": "__repr__",
            "location": 185,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/tax1099.py": {
        "TAX1099MISC_V100.validate_args": {
            "name": "validate_args",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]",
                    "list[]",
                    "int",
                    "typing.Type",
                    "str"
                ]
            }
        },
        "TAX1099R_V100.validate_args": {
            "name": "validate_args",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "TAX1099RS.validate_args": {
            "name": "validate_args",
            "location": 466,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "bool",
                    "dict[str, typing.Iterable[typing.Any]]"
                ]
            }
        },
        "TAX1099MSGSRQV1.validate_args": {
            "name": "validate_args",
            "location": 495,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[tuple[typing.Union[str,str]]]",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        },
        "TAX1099MSGSRSV1.validate_args": {
            "name": "validate_args",
            "location": 510,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[tuple[typing.Union[str,str]]]",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        },
        "TAX1099MSGSETV1.validate_args": {
            "name": "validate_args",
            "location": 528,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[tuple[typing.Union[str,str]]]",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/wrapperbases.py": {
        "TranList.__repr__": {
            "name": "__repr__",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/__init__.py": {},
    "ofxtools-master/ofxtools/models/bank/interxfer.py": {},
    "ofxtools-master/ofxtools/models/bank/mail.py": {},
    "ofxtools-master/ofxtools/models/bank/msgsets.py": {
        "BANKMSGSRQV1.statements": {
            "name": "statements",
            "location": 104,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BANKMSGSRSV1.statements": {
            "name": "statements",
            "location": 133,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CREDITCARDMSGSRQV1.statements": {
            "name": "statements",
            "location": 210,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CREDITCARDMSGSRSV1.statements": {
            "name": "statements",
            "location": 231,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/bank/recur.py": {},
    "ofxtools-master/ofxtools/models/bank/stmt.py": {
        "STMTRS.account": {
            "name": "account",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "STMTRS.transactions": {
            "name": "transactions",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "STMTRS.balance": {
            "name": "balance",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "STMTTRNRS.statement": {
            "name": "statement",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCSTMTRS.account": {
            "name": "account",
            "location": 319,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCSTMTRS.transactions": {
            "name": "transactions",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCSTMTRS.balance": {
            "name": "balance",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CCSTMTTRNRS.statement": {
            "name": "statement",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/bank/stmtend.py": {
        "CCSTMTENDTRNRS.statement": {
            "name": "statement",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/bank/stpchk.py": {},
    "ofxtools-master/ofxtools/models/bank/sync.py": {},
    "ofxtools-master/ofxtools/models/bank/wire.py": {},
    "ofxtools-master/ofxtools/models/bank/xfer.py": {},
    "ofxtools-master/ofxtools/models/bank/__init__.py": {},
    "ofxtools-master/ofxtools/models/billpay/common.py": {
        "EXTDPMT.validate_args": {
            "name": "validate_args",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Match",
                    "bool",
                    "None"
                ]
            }
        },
        "EXTDPAYEE.validate_args": {
            "name": "validate_args",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "dict[, ]",
                    "None"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/billpay/list.py": {},
    "ofxtools-master/ofxtools/models/billpay/mail.py": {},
    "ofxtools-master/ofxtools/models/billpay/msgsets.py": {},
    "ofxtools-master/ofxtools/models/billpay/pmt.py": {},
    "ofxtools-master/ofxtools/models/billpay/recur.py": {},
    "ofxtools-master/ofxtools/models/billpay/sync.py": {},
    "ofxtools-master/ofxtools/models/billpay/__init__.py": {},
    "ofxtools-master/ofxtools/models/invest/acct.py": {},
    "ofxtools-master/ofxtools/models/invest/mail.py": {},
    "ofxtools-master/ofxtools/models/invest/msgsets.py": {
        "INVSTMTMSGSRQV1.statements": {
            "name": "statements",
            "location": 41,
            "return": [
                "list[typing.Union[list[dict[str, typing.Any]],tuple[typing.Union[typing.Any,typing.Any,typing.Any,typing.Any]],float]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "INVSTMTMSGSRSV1.statements": {
            "name": "statements",
            "location": 59,
            "return": [
                "list[typing.Union[typing.Type,str,float]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SECLISTMSGSRSV1.securities": {
            "name": "securities",
            "location": 110,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/invest/openorders.py": {},
    "ofxtools-master/ofxtools/models/invest/positions.py": {},
    "ofxtools-master/ofxtools/models/invest/securities.py": {
        "MFINFO.groom": {
            "name": "groom",
            "location": 159,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        },
        "MFINFO.ungroom": {
            "name": "ungroom",
            "location": 174,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        },
        "STOCKINFO.groom": {
            "name": "groom",
            "location": 223,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        },
        "STOCKINFO.ungroom": {
            "name": "ungroom",
            "location": 238,
            "return": [],
            "arguments": {
                "elem": [
                    "str",
                    "bytes",
                    "typing.Iterable[T]"
                ]
            }
        }
    },
    "ofxtools-master/ofxtools/models/invest/stmt.py": {
        "CONTRIBSECURITY.validate_args": {
            "name": "validate_args",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "CONTRIBINFO.validate_args": {
            "name": "validate_args",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Match",
                    "bool",
                    "None"
                ]
            }
        },
        "INVSTMTRS.account": {
            "name": "account",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "INVSTMTRS.transactions": {
            "name": "transactions",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "INVSTMTRS.positions": {
            "name": "positions",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "INVSTMTRS.balances": {
            "name": "balances",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "INVSTMTTRNRS.statement": {
            "name": "statement",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/ofxtools/models/invest/transactions.py": {},
    "ofxtools-master/ofxtools/models/invest/__init__.py": {},
    "ofxtools-master/ofxtools/scripts/ofxget.py": {
        "make_argparser": {
            "name": "make_argparser",
            "location": 120,
            "return": [],
            "arguments": {}
        },
        "add_subparser": {
            "name": "add_subparser",
            "location": 173,
            "return": [],
            "arguments": {
                "subparsers": [],
                "cmd": [
                    "str",
                    "None",
                    "list[str]",
                    "typing.Callable[, ]",
                    "float",
                    "dict[str, str]"
                ],
                "server": [
                    "bool"
                ],
                "format": [
                    "bool"
                ],
                "signon": [
                    "bool"
                ],
                "stmtend": [
                    "bool"
                ],
                "stmt": [
                    "bool"
                ],
                "acctinforq": [
                    "bool"
                ],
                "tax": [
                    "bool"
                ],
                "help": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "add_format_group": {
            "name": "add_format_group",
            "location": 273,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_signon_group": {
            "name": "add_signon_group",
            "location": 298,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_bank_acct_group": {
            "name": "add_bank_acct_group",
            "location": 323,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_stmt_group": {
            "name": "add_stmt_group",
            "location": 373,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_stmt_args": {
            "name": "add_stmt_args",
            "location": 394,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "add_inv_acct_group": {
            "name": "add_inv_acct_group",
            "location": 420,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_inv_stmt_group": {
            "name": "add_inv_stmt_group",
            "location": 433,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_acctinforq_group": {
            "name": "add_acctinforq_group",
            "location": 452,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "add_tax_group": {
            "name": "add_tax_group",
            "location": 463,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "scan_profile": {
            "name": "scan_profile",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_best_scan_format": {
            "name": "_best_scan_format",
            "location": 522,
            "return": [
                "dict[, ]",
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "scan_results": [
                    "int",
                    "str"
                ]
            }
        },
        "init_client": {
            "name": "init_client",
            "location": 554,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "args": []
            }
        },
        "request_profile": {
            "name": "request_profile",
            "location": 578,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "request_acctinfo": {
            "name": "request_acctinfo",
            "location": 596,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "_request_acctinfo": {
            "name": "_request_acctinfo",
            "location": 620,
            "return": [
                "BytesIO"
            ],
            "arguments": {
                "args": [],
                "password": [
                    "str",
                    "typing.Sequence[str]",
                    "bool"
                ]
            }
        },
        "_merge_acctinfo": {
            "name": "_merge_acctinfo",
            "location": 636,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [],
                "markup": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "request_stmt": {
            "name": "request_stmt",
            "location": 660,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "request_stmtend": {
            "name": "request_stmtend",
            "location": 741,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "request_tax1099": {
            "name": "request_tax1099",
            "location": 796,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "convert_list": {
            "name": "convert_list",
            "location": 821,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "read_config": {
            "name": "read_config",
            "location": 942,
            "return": [
                "dict[, ]",
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "cfg": [
                    "str"
                ],
                "section": [
                    "bool"
                ]
            }
        },
        "write_config": {
            "name": "write_config",
            "location": 967,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "mk_server_cfg": {
            "name": "mk_server_cfg",
            "location": 981,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "arg2config": {
            "name": "arg2config",
            "location": 1037,
            "return": [],
            "arguments": {
                "key": [
                    "str",
                    "bytes",
                    "bool",
                    "typing.Callable[, ]",
                    "None"
                ],
                "cfg_type": [
                    "typing.Type",
                    "str",
                    "None"
                ],
                "value": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "merge_config": {
            "name": "merge_config",
            "location": 1065,
            "return": [
                "ChainMap"
            ],
            "arguments": {
                "args": [],
                "config": [
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "list[tuple[typing.Union[str,str,str,str,str,str,str]]]",
                    "typing.Sequence[]"
                ]
            }
        },
        "merge_from_ofxhome": {
            "name": "merge_from_ofxhome",
            "location": 1123,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "extrargs": {
            "name": "extrargs",
            "location": 1143,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "args": []
            }
        },
        "extractns": {
            "name": "extractns",
            "location": 1148,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "ns": [
                    "int",
                    "dict[, ]",
                    "str",
                    "dict[str, dict[typing.Any, typing.Any]]"
                ]
            }
        },
        "_scan_profile": {
            "name": "_scan_profile",
            "location": 1156,
            "return": [
                "tuple[typing.Union[int,list[None],dict[str, float],list[int],dict[, ]]]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "org": [
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "fid": [
                    "str",
                    "None",
                    "bytes",
                    "dict[str, str]"
                ],
                "useragent": [
                    "str",
                    "None"
                ],
                "gen_newfileuid": [
                    "str",
                    "None",
                    "bool",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "max_workers": [
                    "None",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "dict[, ]",
                    "dict[int, dict[, ]]",
                    "int",
                    "str"
                ],
                "timeout": [
                    "None",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "dict[, ]",
                    "dict[int, dict[, ]]",
                    "int",
                    "str"
                ]
            }
        },
        "_queue_scans": {
            "name": "_queue_scans",
            "location": 1221,
            "return": [
                "dict[, tuple[dict[typing.Text, bool]]]"
            ],
            "arguments": {
                "client": [],
                "gen_newfileuid": [],
                "max_workers": [
                    "int",
                    "None",
                    "float"
                ],
                "timeout": []
            }
        },
        "_read_scan_response": {
            "name": "_read_scan_response",
            "location": 1264,
            "return": [
                "tuple[typing.Union[bool,dict[, ]]]",
                "tuple[typing.Union[bool,dict[typing.Text, bool]]]"
            ],
            "arguments": {
                "future": [],
                "read_signoninfo": [
                    "bool"
                ]
            }
        },
        "collate_scan_results": {
            "name": "collate_scan_results",
            "location": 1337,
            "return": [
                "dict[typing.Text, list[]]",
                "dict[typing.Text, list[typing.Union[str,int,tuple[typing.Union[typing.Any,typing.Any]]]]]"
            ],
            "arguments": {
                "scan_results": [
                    "dict[, ]"
                ]
            }
        },
        "verify_status": {
            "name": "verify_status",
            "location": 1367,
            "return": [
                "None"
            ],
            "arguments": {
                "trnrs": [
                    "str",
                    "int",
                    "BaseException",
                    "None"
                ]
            }
        },
        "_acctIsActive": {
            "name": "_acctIsActive",
            "location": 1384,
            "return": [
                "bool"
            ],
            "arguments": {
                "acctinfo": [
                    "int",
                    "str"
                ]
            }
        },
        "extract_signoninfos": {
            "name": "extract_signoninfos",
            "location": 1388,
            "return": [],
            "arguments": {
                "markup": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "extract_acctinfos": {
            "name": "extract_acctinfos",
            "location": 1416,
            "return": [],
            "arguments": {
                "markup": [
                    "int",
                    "str",
                    "typing.BinaryIO"
                ]
            }
        },
        "parse_bankacctinfos": {
            "name": "parse_bankacctinfos",
            "location": 1444,
            "return": [],
            "arguments": {
                "acctinfos": [
                    "str"
                ]
            }
        },
        "parse_invacctinfos": {
            "name": "parse_invacctinfos",
            "location": 1456,
            "return": [],
            "arguments": {
                "acctinfos": [
                    "str"
                ]
            }
        },
        "parse_ccacctinfos": {
            "name": "parse_ccacctinfos",
            "location": 1469,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "acctinfos": []
            }
        },
        "list_fis": {
            "name": "list_fis",
            "location": 1476,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "fi_index": {
            "name": "fi_index",
            "location": 1497,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {}
        },
        "convert_datetime": {
            "name": "convert_datetime",
            "location": 1517,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_passwd": {
            "name": "get_passwd",
            "location": 1523,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "args": []
            }
        },
        "save_passwd": {
            "name": "save_passwd",
            "location": 1559,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [],
                "password": [
                    "str",
                    "None",
                    "tuple[typing.Union[float,float,float]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 1597,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "UuidAction.__call__": {
            "name": "__call__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str",
                    "None"
                ],
                "namespace": [],
                "values": [
                    "str"
                ],
                "option_string": [
                    "None",
                    "str"
                ]
            }
        },
        "_merge_acctinfo.parse_acctinfos": {
            "name": "parse_acctinfos",
            "location": 642,
            "return": [],
            "arguments": {
                "clsName": [],
                "acctinfos": []
            }
        },
        "UserConfig.__init__": {
            "name": "__init__",
            "location": 829,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LibraryConfig.__init__": {
            "name": "__init__",
            "location": 835,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "mk_server_cfg.test_cfg_val": {
            "name": "test_cfg_val",
            "location": 1014,
            "return": [
                "bool"
            ],
            "arguments": {
                "opt": [],
                "value": []
            }
        },
        "arg2config.write_string": {
            "name": "write_string",
            "location": 1042,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "arg2config.write_int": {
            "name": "write_int",
            "location": 1045,
            "return": [
                "str"
            ],
            "arguments": {
                "value": []
            }
        },
        "arg2config.write_bool": {
            "name": "write_bool",
            "location": 1048,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "arg2config.write_list": {
            "name": "write_list",
            "location": 1051,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "collate_scan_results.sortKey": {
            "name": "sortKey",
            "location": 1356,
            "return": [
                "int"
            ],
            "arguments": {
                "d": []
            }
        },
        "extract_signoninfos.extract_signoninfo": {
            "name": "extract_signoninfo",
            "location": 1404,
            "return": [],
            "arguments": {
                "trnrs": []
            }
        },
        "fi_index.sortkey": {
            "name": "sortkey",
            "location": 1507,
            "return": [],
            "arguments": {
                "srv": []
            }
        }
    },
    "ofxtools-master/ofxtools/scripts/update_fi_cfg.py": {
        "mk_server_cfg": {
            "name": "mk_server_cfg",
            "location": 41,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "write_config": {
            "name": "write_config",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ofxtools-master/ofxtools/scripts/__init__.py": {},
    "ofxtools-master/tests/base.py": {
        "TestAggregate.validSoup": {
            "name": "validSoup",
            "location": 34,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[T]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "TestAggregate.invalidSoup": {
            "name": "invalidSoup",
            "location": 40,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TestAggregate.testValidSoup": {
            "name": "testValidSoup",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testInvalidSoup": {
            "name": "testInvalidSoup",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testRequired": {
            "name": "testRequired",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testOptional": {
            "name": "testOptional",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testExtraElement": {
            "name": "testExtraElement",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.oneOfTest": {
            "name": "oneOfTest",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str",
                    "typing.Sequence[str]",
                    "list[str]",
                    "None",
                    "bool"
                ],
                "texts": [
                    "str",
                    "bytes",
                    "list[typing.Any]"
                ]
            }
        },
        "TestAggregate.assertElement": {
            "name": "assertElement",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": [],
                "tag": [
                    "str",
                    "list[\"libkol.Item\"]",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "text": [
                    "str"
                ],
                "length": [
                    "int",
                    "str",
                    "float",
                    "list[]",
                    "dict[, ]"
                ]
            }
        },
        "TestAggregate._eqEtree": {
            "name": "_eqEtree",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem0": [],
                "elem1": []
            }
        },
        "TestAggregate._eqAggregate": {
            "name": "_eqAggregate",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "agg0": [],
                "agg1": []
            }
        },
        "TestAggregate.testFromEtree": {
            "name": "testFromEtree",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testToEtree": {
            "name": "testToEtree",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testOneOf": {
            "name": "testOneOf",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAggregate.testUnsupported": {
            "name": "testUnsupported",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusTestCase.etree": {
            "name": "etree",
            "location": 181,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StatusTestCase.aggregate": {
            "name": "aggregate",
            "location": 190,
            "return": [
                "STATUS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TrnrqTestCase.requiredElements": {
            "name": "requiredElements",
            "location": 204,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "TrnrqTestCase.wrapped": {
            "name": "wrapped",
            "location": 210,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "float"
                ]
            }
        },
        "TrnrqTestCase.etree": {
            "name": "etree",
            "location": 215,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "TrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 220,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "TrnrqTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 229,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "TrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 239,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "complex",
                    "bytes",
                    "str",
                    "None"
                ]
            }
        },
        "TrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 246,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "int"
                ]
            }
        },
        "TrnrsTestCase.wrapped": {
            "name": "wrapped",
            "location": 294,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "float"
                ]
            }
        },
        "TrnrsTestCase.etree": {
            "name": "etree",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TrnrsTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 309,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "TrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 320,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "list[]",
                    "dict[str, typing.Any]",
                    "bool",
                    "list[str]",
                    "str"
                ]
            }
        },
        "TrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 327,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "int"
                ]
            }
        },
        "TranlistTestCase.etree": {
            "name": "etree",
            "location": 372,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "TranlistTestCase.validSoup": {
            "name": "validSoup",
            "location": 377,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "TranlistTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 386,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SyncrqTestCase.etree": {
            "name": "etree",
            "location": 403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyncrqTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 409,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "SyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 416,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Callable[[], None]",
                    "dict[, ]"
                ]
            }
        },
        "SyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 426,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[int]]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type"
                ]
            }
        },
        "SyncrsTestCase.etree": {
            "name": "etree",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 469,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "SyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 478,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "OfxTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str"
                ]
            }
        },
        "OfxTestCase._eqAggregate": {
            "name": "_eqAggregate",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "agg0": [],
                "agg1": []
            }
        },
        "OfxTestCase._eqOfx": {
            "name": "_eqOfx",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string0": [
                    "str"
                ],
                "string1": [
                    "str"
                ]
            }
        },
        "OfxTestCase.testFromOfx": {
            "name": "testFromOfx",
            "location": 526,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OfxTestCase.testToOfx": {
            "name": "testToOfx",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_client.py": {
        "OFXClientV1TestCase.client": {
            "name": "client",
            "location": 33,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.stmtRq0": {
            "name": "stmtRq0",
            "location": 51,
            "return": [
                "StmtRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.stmtRq1": {
            "name": "stmtRq1",
            "location": 60,
            "return": [
                "StmtRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.ccStmtRq": {
            "name": "ccStmtRq",
            "location": 69,
            "return": [
                "CcStmtRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.invStmtRq": {
            "name": "invStmtRq",
            "location": 77,
            "return": [
                "InvStmtRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.stmtEndRq": {
            "name": "stmtEndRq",
            "location": 85,
            "return": [
                "StmtEndRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.ccStmtEndRq": {
            "name": "ccStmtEndRq",
            "location": 94,
            "return": [
                "CcStmtEndRq"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testDtclient": {
            "name": "testDtclient",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testSignonEmptyFIORG": {
            "name": "testSignonEmptyFIORG",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testSignonVersion102": {
            "name": "testSignonVersion102",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsDryrun": {
            "name": "testRequestStatementsDryrun",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase._testRequest": {
            "name": "_testRequest",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "fn": [
                    "str",
                    "list[annofabapi.models.Project]"
                ]
            }
        },
        "OFXClientV1TestCase.testRequestStatements": {
            "name": "testRequestStatements",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsEmpty": {
            "name": "testRequestStatementsEmpty",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsMultipleMixed": {
            "name": "testRequestStatementsMultipleMixed",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsPrettyprint": {
            "name": "testRequestStatementsPrettyprint",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsUnclosedTags": {
            "name": "testRequestStatementsUnclosedTags",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsUnclosedTagsOFXv2": {
            "name": "testRequestStatementsUnclosedTagsOFXv2",
            "location": 588,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestStatementsBadRequestType": {
            "name": "testRequestStatementsBadRequestType",
            "location": 607,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestEndStatements": {
            "name": "testRequestEndStatements",
            "location": 615,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestEndStatementsMultipleMixed": {
            "name": "testRequestEndStatementsMultipleMixed",
            "location": 665,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV1TestCase.testRequestAccounts": {
            "name": "testRequestAccounts",
            "location": 784,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXClientV2TestCase.testUnclosedTagsOFXv2": {
            "name": "testUnclosedTagsOFXv2",
            "location": 832,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UtilitiesTestCase.root": {
            "name": "root",
            "location": 849,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtilitiesTestCase.testIndent": {
            "name": "testIndent",
            "location": 856,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UtilitiesTestCase.testTostringUnclosedElements": {
            "name": "testTostringUnclosedElements",
            "location": 872,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_header.py": {
        "OFXHeaderTestMixin.testValid": {
            "name": "testValid",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderTestMixin.testInvalid": {
            "name": "testInvalid",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeaderDefaults": {
            "name": "testParseHeaderDefaults",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeaderLatin1": {
            "name": "testParseHeaderLatin1",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeader1252": {
            "name": "testParseHeader1252",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeaderUnicode": {
            "name": "testParseHeaderUnicode",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeaderV1NoBlankLineBetweenHeaderAndBody": {
            "name": "testParseHeaderV1NoBlankLineBetweenHeaderAndBody",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseInvalid": {
            "name": "testParseInvalid",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testStr": {
            "name": "testStr",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testParseHeader": {
            "name": "testParseHeader",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testExtraWhitespaceHeaderDemarc": {
            "name": "testExtraWhitespaceHeaderDemarc",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testNoLineBreaksAnywhere": {
            "name": "testNoLineBreaksAnywhere",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV1TestCase.testHeaderlessDoomScroll": {
            "name": "testHeaderlessDoomScroll",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2TestCase.testParseHeaderV2NoNewlineBetweenHeaderAndBody": {
            "name": "testParseHeaderV2NoNewlineBetweenHeaderAndBody",
            "location": 452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2TestCase.testParseInvalid": {
            "name": "testParseInvalid",
            "location": 476,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2TestCase.testStr": {
            "name": "testStr",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2TestCase.testParseHeader": {
            "name": "testParseHeader",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXHeaderV2TestCase.testParseHeaderSingleQuotedDeclarationData": {
            "name": "testParseHeaderSingleQuotedDeclarationData",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeHeaderTestCase.testOfxV1": {
            "name": "testOfxV1",
            "location": 543,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeHeaderTestCase.testOfxV2": {
            "name": "testOfxV2",
            "location": 567,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeHeaderTestCase.testInvalidVersion": {
            "name": "testInvalidVersion",
            "location": 591,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_interxfer.py": {
        "InterrqTestCase.etree": {
            "name": "etree",
            "location": 39,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InterrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 46,
            "return": [
                "INTERRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InterrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 59,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "InterrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 79,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InterrsTestCase.etree": {
            "name": "etree",
            "location": 98,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "InterrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 103,
            "return": [
                "INTERRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntermodrqTestCase.etree": {
            "name": "etree",
            "location": 121,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntermodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 129,
            "return": [
                "INTERMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntercanrqTestCase.etree": {
            "name": "etree",
            "location": 140,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntercanrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 147,
            "return": [
                "INTERCANRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntermodrsTestCase.etree": {
            "name": "etree",
            "location": 158,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntermodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 167,
            "return": [
                "INTERMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntercanrsTestCase.etree": {
            "name": "etree",
            "location": 182,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntercanrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 189,
            "return": [
                "INTERCANRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntertrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 200,
            "return": [
                "INTERTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntertrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 210,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "IntertrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 219,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "IntertrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 277,
            "return": [
                "INTERTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntertrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 287,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "IntertrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 296,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_mail.py": {
        "BankmailrqTestCase.etree": {
            "name": "etree",
            "location": 37,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "BankmailrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 42,
            "return": [
                "BANKMAILRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmailrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 50,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "BankmailrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 62,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmailrsTestCase.etree": {
            "name": "etree",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "BankmailrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 94,
            "return": [
                "BANKMAILRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmailrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 102,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "BankmailrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 114,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChkmailrsTestCase.etree": {
            "name": "etree",
            "location": 142,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChkmailrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 158,
            "return": [
                "CHKMAILRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "DepmailrsTestCase.etree": {
            "name": "etree",
            "location": 177,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "DepmailrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 192,
            "return": [
                "DEPMAILRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmailtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 209,
            "return": [
                "BANKMAILTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmailtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 225,
            "return": [
                "BANKMAILTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_recur.py": {
        "RecurrinstTestCase.etree": {
            "name": "etree",
            "location": 51,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecurrinstTestCase.aggregate": {
            "name": "aggregate",
            "location": 59,
            "return": [
                "RECURRINST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintrarqTestCase.etree": {
            "name": "etree",
            "location": 70,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintrarqTestCase.aggregate": {
            "name": "aggregate",
            "location": 78,
            "return": [
                "RECINTRARQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintrarsTestCase.etree": {
            "name": "etree",
            "location": 92,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintrarsTestCase.aggregate": {
            "name": "aggregate",
            "location": 101,
            "return": [
                "RECINTRARS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintramodrqTestCase.etree": {
            "name": "etree",
            "location": 116,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintramodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 126,
            "return": [
                "RECINTRAMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintramodrsTestCase.etree": {
            "name": "etree",
            "location": 142,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintramodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 152,
            "return": [
                "RECINTRAMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintracanrqTestCase.etree": {
            "name": "etree",
            "location": 168,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintracanrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 176,
            "return": [
                "RECINTRACANRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintracanrsTestCase.etree": {
            "name": "etree",
            "location": 187,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintracanrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 195,
            "return": [
                "RECINTRACANRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintratrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 206,
            "return": [
                "RECINTRATRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintratrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 216,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "RecintratrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 225,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "RecintratrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 281,
            "return": [
                "RECINTRATRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintratrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 291,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "RecintratrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 300,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "RecinterrqTestCase.etree": {
            "name": "etree",
            "location": 354,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecinterrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 362,
            "return": [
                "RECINTERRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecinterrsTestCase.etree": {
            "name": "etree",
            "location": 377,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecinterrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 386,
            "return": [
                "RECINTERRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintermodrqTestCase.etree": {
            "name": "etree",
            "location": 401,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintermodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 411,
            "return": [
                "RECINTERMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintermodrsTestCase.etree": {
            "name": "etree",
            "location": 427,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintermodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 437,
            "return": [
                "RECINTERMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintercanrqTestCase.etree": {
            "name": "etree",
            "location": 453,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintercanrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 461,
            "return": [
                "RECINTERCANRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintercanrsTestCase.etree": {
            "name": "etree",
            "location": 472,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintercanrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 480,
            "return": [
                "RECINTERCANRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintertrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 491,
            "return": [
                "RECINTERTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintertrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 501,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "RecintertrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 510,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "RecintertrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 566,
            "return": [
                "RECINTERTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecintertrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 576,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "RecintertrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 585,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_stmt.py": {
        "BankacctfromTestCase.etree": {
            "name": "etree",
            "location": 61,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankacctfromTestCase.aggregate": {
            "name": "aggregate",
            "location": 72,
            "return": [
                "BANKACCTFROM"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankaccttoTestCase.etree": {
            "name": "etree",
            "location": 91,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankaccttoTestCase.aggregate": {
            "name": "aggregate",
            "location": 102,
            "return": [
                "BANKACCTTO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankacctinfoTestCase.etree": {
            "name": "etree",
            "location": 120,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankacctinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 131,
            "return": [
                "BANKACCTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcacctfromTestCase.etree": {
            "name": "etree",
            "location": 149,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcacctfromTestCase.aggregate": {
            "name": "aggregate",
            "location": 157,
            "return": [
                "CCACCTFROM"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcaccttoTestCase.etree": {
            "name": "etree",
            "location": 169,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcaccttoTestCase.aggregate": {
            "name": "aggregate",
            "location": 177,
            "return": [
                "CCACCTTO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcacctinfoTestCase.etree": {
            "name": "etree",
            "location": 189,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcacctinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 200,
            "return": [
                "CCACCTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InctranTestCase.etree": {
            "name": "etree",
            "location": 218,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InctranTestCase.aggregate": {
            "name": "aggregate",
            "location": 227,
            "return": [
                "INCTRAN"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtrqTestCase.etree": {
            "name": "etree",
            "location": 243,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 253,
            "return": [
                "STMTRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeeTestCase.etree": {
            "name": "etree",
            "location": 270,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeeTestCase.aggregate": {
            "name": "aggregate",
            "location": 285,
            "return": [
                "PAYEE"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeeTestCase.testConvertNameTooLong": {
            "name": "testConvertNameTooLong",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StmttrnTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 354,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "StmttrnTestCase.etree": {
            "name": "etree",
            "location": 374,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "StmttrnTestCase.aggregate": {
            "name": "aggregate",
            "location": 386,
            "return": [
                "STMTTRN"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmttrnTestCase.validSoup": {
            "name": "validSoup",
            "location": 411,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "StmttrnTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 442,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "StmttrnTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 479,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StmttrnTestCase.testConvertNameTooLong": {
            "name": "testConvertNameTooLong",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BanktranlistTestCase.etree": {
            "name": "etree",
            "location": 521,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BanktranlistTestCase.aggregate": {
            "name": "aggregate",
            "location": 529,
            "return": [
                "BANKTRANLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BanktranlistTestCase.validSoup": {
            "name": "validSoup",
            "location": 539,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "LedgerbalTestCase.etree": {
            "name": "etree",
            "location": 556,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LedgerbalTestCase.aggregate": {
            "name": "aggregate",
            "location": 564,
            "return": [
                "LEDGERBAL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AvailbalTestCase.etree": {
            "name": "etree",
            "location": 578,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AvailbalTestCase.aggregate": {
            "name": "aggregate",
            "location": 586,
            "return": [
                "AVAILBAL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BallistTestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 600,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallistTestCase.etree": {
            "name": "etree",
            "location": 612,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BallistTestCase.aggregate": {
            "name": "aggregate",
            "location": 620,
            "return": [
                "BALLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtrsTestCase.etree": {
            "name": "etree",
            "location": 640,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 662,
            "return": [
                "STMTRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 675,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StmttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 689,
            "return": [
                "STMTTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 705,
            "return": [
                "STMTTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmttrnrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 713,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RewardinfoTestCase.etree": {
            "name": "etree",
            "location": 724,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RewardinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 733,
            "return": [
                "REWARDINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtrqTestCase.etree": {
            "name": "etree",
            "location": 747,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 757,
            "return": [
                "CCSTMTRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtrsTestCase.etree": {
            "name": "etree",
            "location": 784,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 802,
            "return": [
                "CCSTMTRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 818,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CcstmttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 832,
            "return": [
                "CCSTMTTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 848,
            "return": [
                "CCSTMTTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_stmtend.py": {
        "ClosingTestCase.etree": {
            "name": "etree",
            "location": 54,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ClosingTestCase.aggregate": {
            "name": "aggregate",
            "location": 75,
            "return": [
                "CLOSING"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendrqTestCase.etree": {
            "name": "etree",
            "location": 103,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 113,
            "return": [
                "STMTENDRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendrsTestCase.etree": {
            "name": "etree",
            "location": 129,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 141,
            "return": [
                "STMTENDRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 157,
            "return": [
                "STMTENDTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StmtendtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 173,
            "return": [
                "STMTENDTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LastpmtinfoTestCase.etree": {
            "name": "etree",
            "location": 187,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LastpmtinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 195,
            "return": [
                "LASTPMTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcclosingTestCase.etree": {
            "name": "etree",
            "location": 233,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcclosingTestCase.aggregate": {
            "name": "aggregate",
            "location": 270,
            "return": [
                "CCCLOSING"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendrqTestCase.etree": {
            "name": "etree",
            "location": 310,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 322,
            "return": [
                "CCSTMTENDRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendrsTestCase.etree": {
            "name": "etree",
            "location": 339,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 352,
            "return": [
                "CCSTMTENDRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 368,
            "return": [
                "CCSTMTENDTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CcstmtendtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 384,
            "return": [
                "CCSTMTENDTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_stpchk.py": {
        "ChkrangeTestCase.etree": {
            "name": "etree",
            "location": 40,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChkrangeTestCase.aggregate": {
            "name": "aggregate",
            "location": 48,
            "return": [
                "CHKRANGE"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChkdescTestCase.etree": {
            "name": "etree",
            "location": 60,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChkdescTestCase.aggregate": {
            "name": "aggregate",
            "location": 70,
            "return": [
                "CHKDESC"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchkrqTestCase.etree": {
            "name": "etree",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "StpchkrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 91,
            "return": [
                "STPCHKRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchkrqTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 99,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "StpchkrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 106,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "StpchkrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 116,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "StpchknumTestCase.etree": {
            "name": "etree",
            "location": 141,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "StpchknumTestCase.aggregate": {
            "name": "aggregate",
            "location": 146,
            "return": [
                "STPCHKNUM"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchknumTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 158,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "StpchknumTestCase.validSoup": {
            "name": "validSoup",
            "location": 170,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "StpchknumTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 181,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "int",
                    "complex",
                    "bytes"
                ]
            }
        },
        "StpchkrsTestCase.etree": {
            "name": "etree",
            "location": 199,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchkrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 212,
            "return": [
                "STPCHKRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchktrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 230,
            "return": [
                "STPCHKTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchktrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 246,
            "return": [
                "STPCHKTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_sync.py": {
        "StpchksyncrqTestCase.etree": {
            "name": "etree",
            "location": 50,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 61,
            "return": [
                "STPCHKSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 72,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 84,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrsTestCase.etree": {
            "name": "etree",
            "location": 120,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 131,
            "return": [
                "STPCHKSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 142,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StpchksyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 157,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrqTestCase.etree": {
            "name": "etree",
            "location": 192,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 201,
            "return": [
                "INTRASYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 210,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 228,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrsTestCase.etree": {
            "name": "etree",
            "location": 284,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 293,
            "return": [
                "INTRASYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 302,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntrasyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 320,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrqTestCase.etree": {
            "name": "etree",
            "location": 376,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 385,
            "return": [
                "INTERSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 394,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 412,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrsTestCase.etree": {
            "name": "etree",
            "location": 468,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 477,
            "return": [
                "INTERSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 486,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntersyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 504,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrqTestCase.etree": {
            "name": "etree",
            "location": 562,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 573,
            "return": [
                "WIRESYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 584,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 595,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrsTestCase.etree": {
            "name": "etree",
            "location": 633,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 644,
            "return": [
                "WIRESYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 655,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WiresyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 670,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrqTestCase.etree": {
            "name": "etree",
            "location": 711,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 720,
            "return": [
                "RECINTRASYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 729,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 740,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrsTestCase.etree": {
            "name": "etree",
            "location": 778,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 787,
            "return": [
                "RECINTRASYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 796,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintrasyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 811,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrqTestCase.etree": {
            "name": "etree",
            "location": 851,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 860,
            "return": [
                "RECINTERSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 869,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 880,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrsTestCase.etree": {
            "name": "etree",
            "location": 918,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 927,
            "return": [
                "RECINTERSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 936,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecintersyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 951,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrqTestCase.etree": {
            "name": "etree",
            "location": 996,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1007,
            "return": [
                "BANKMAILSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 1018,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 1031,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrsTestCase.etree": {
            "name": "etree",
            "location": 1071,
            "return": [
                "Element"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1080,
            "return": [
                "BANKMAILSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 1089,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BankmailsyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 1104,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[str]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_wire.py": {
        "WirebeneficiaryTestCase.etree": {
            "name": "etree",
            "location": 41,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "WirebeneficiaryTestCase.aggregate": {
            "name": "aggregate",
            "location": 46,
            "return": [
                "WIREBENEFICIARY"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirebeneficiaryTestCase.validSoup": {
            "name": "validSoup",
            "location": 55,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "WirebeneficiaryTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 64,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtbankdescTestCase.etree": {
            "name": "etree",
            "location": 77,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "ExtbankdescTestCase.aggregate": {
            "name": "aggregate",
            "location": 82,
            "return": [
                "EXTBANKDESC"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtbankdescTestCase.validSoup": {
            "name": "validSoup",
            "location": 98,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "ExtbankdescTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 114,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WiredestbankTestCase.etree": {
            "name": "etree",
            "location": 125,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WiredestbankTestCase.aggregate": {
            "name": "aggregate",
            "location": 133,
            "return": [
                "WIREDESTBANK"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirerqTestCase.etree": {
            "name": "etree",
            "location": 145,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirerqTestCase.aggregate": {
            "name": "aggregate",
            "location": 158,
            "return": [
                "WIRERQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirersTestCase.etree": {
            "name": "etree",
            "location": 183,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "WirersTestCase.aggregate": {
            "name": "aggregate",
            "location": 188,
            "return": [
                "WIRERS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirersTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 205,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "WirersTestCase.validSoup": {
            "name": "validSoup",
            "location": 220,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "dict[, ]",
                    "int",
                    "collections.abc.AsyncGenerator",
                    "typing.Callable[, ]"
                ]
            }
        },
        "WirersTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 240,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "WirecanrqTestCase.etree": {
            "name": "etree",
            "location": 260,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirecanrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 268,
            "return": [
                "WIRECANRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirecanrsTestCase.etree": {
            "name": "etree",
            "location": 279,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirecanrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 287,
            "return": [
                "WIRECANRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WiretrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 298,
            "return": [
                "WIRETRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WiretrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 314,
            "return": [
                "WIRETRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_bank_xfer.py": {
        "XferinfoTestCase.etree": {
            "name": "etree",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "XferinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 49,
            "return": [
                "XFERINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "XferinfoTestCase.validSoup": {
            "name": "validSoup",
            "location": 59,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "XferinfoTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 76,
            "return": [
                "typing.Generator[list[typing.Union[str,list[typing.Any],Element]]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "XferprcstsTestCase.etree": {
            "name": "etree",
            "location": 130,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "XferprcstsTestCase.aggregate": {
            "name": "aggregate",
            "location": 138,
            "return": [
                "XFERPRCSTS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntrarqTestCase.etree": {
            "name": "etree",
            "location": 151,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntrarqTestCase.aggregate": {
            "name": "aggregate",
            "location": 158,
            "return": [
                "INTRARQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntrarsTestCase.etree": {
            "name": "etree",
            "location": 171,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntrarsTestCase.aggregate": {
            "name": "aggregate",
            "location": 182,
            "return": [
                "INTRARS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntrarsTestCase.validSoup": {
            "name": "validSoup",
            "location": 193,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "IntrarsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 214,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntramodrqTestCase.etree": {
            "name": "etree",
            "location": 239,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntramodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 247,
            "return": [
                "INTRAMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntracanrqTestCase.etree": {
            "name": "etree",
            "location": 258,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntracanrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 265,
            "return": [
                "INTRACANRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntramodrsTestCase.etree": {
            "name": "etree",
            "location": 276,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntramodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 285,
            "return": [
                "INTRAMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntracanrsTestCase.etree": {
            "name": "etree",
            "location": 300,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntracanrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 307,
            "return": [
                "INTRACANRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntratrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 318,
            "return": [
                "INTRATRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntratrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 328,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "IntratrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 337,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "IntratrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 395,
            "return": [
                "INTRATRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IntratrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 405,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "IntratrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 414,
            "return": [
                "typing.Generator[list[str]]",
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_base.py": {
        "AggregateTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "AggregateTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "AggregateTestCase.instance_no_subagg": {
            "name": "instance_no_subagg",
            "location": 76,
            "return": [
                "TESTAGGREGATE"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.instance_with_subagg": {
            "name": "instance_with_subagg",
            "location": 80,
            "return": [
                "TESTAGGREGATE"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testInitMissingRequired": {
            "name": "testInitMissingRequired",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testInitWrongType": {
            "name": "testInitWrongType",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testInitWithTooManyArgs": {
            "name": "testInitWithTooManyArgs",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testValidateKwargs": {
            "name": "testValidateKwargs",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtree": {
            "name": "testFromEtree",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtreeMissingRequired": {
            "name": "testFromEtreeMissingRequired",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtreeMissingUnrequired": {
            "name": "testFromEtreeMissingUnrequired",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtreeDuplicates": {
            "name": "testFromEtreeDuplicates",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtreeWrongOrder": {
            "name": "testFromEtreeWrongOrder",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFromEtreeBadArg": {
            "name": "testFromEtreeBadArg",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testGroom": {
            "name": "testGroom",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testUngroom": {
            "name": "testUngroom",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFilterAttrs": {
            "name": "testFilterAttrs",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testSpec": {
            "name": "testSpec",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testElements": {
            "name": "testElements",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testSubaggregates": {
            "name": "testSubaggregates",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testUnsupported": {
            "name": "testUnsupported",
            "location": 442,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testSpecRepr": {
            "name": "testSpecRepr",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testRepr": {
            "name": "testRepr",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testGetattr": {
            "name": "testGetattr",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubAggregateTestCase.instance": {
            "name": "instance",
            "location": 498,
            "return": [
                "TESTSUBAGGREGATE"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubAggregateTestCase.testInit": {
            "name": "testInit",
            "location": 501,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubAggregateTestCase.testConvert": {
            "name": "testConvert",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubAggregateTestCase.testRepr": {
            "name": "testRepr",
            "location": 507,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnsupportedTestCase.instance": {
            "name": "instance",
            "location": 514,
            "return": [
                "Unsupported"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnsupportedTestCase.testRepr": {
            "name": "testRepr",
            "location": 517,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 524,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "ListTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ListTestCase.assertElement": {
            "name": "assertElement",
            "location": 540,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": [
                    "str",
                    "dict[str, str]",
                    "None",
                    "int"
                ],
                "tag": [
                    "str",
                    "list[\"libkol.Item\"]",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "text": [
                    "str"
                ],
                "len": [
                    "bool",
                    "str",
                    "typing.Callable[str, str]"
                ]
            }
        },
        "ListTestCase.instance": {
            "name": "instance",
            "location": 546,
            "return": [
                "TESTLIST"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.root": {
            "name": "root",
            "location": 559,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testFromEtree": {
            "name": "testFromEtree",
            "location": 582,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testFromEtreeWrongOrder": {
            "name": "testFromEtreeWrongOrder",
            "location": 593,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testInitInstancesDistinct": {
            "name": "testInitInstancesDistinct",
            "location": 602,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testInitListAggregatesAsKwargs": {
            "name": "testInitListAggregatesAsKwargs",
            "location": 646,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testToEtree": {
            "name": "testToEtree",
            "location": 668,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListTestCase.testRepr": {
            "name": "testRepr",
            "location": 698,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementListTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 707,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "ElementListTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 713,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ElementListTestCase.assertElement": {
            "name": "assertElement",
            "location": 717,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": [
                    "str",
                    "dict[str, str]",
                    "None",
                    "int"
                ],
                "tag": [
                    "str",
                    "list[\"libkol.Item\"]",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "text": [
                    "str"
                ],
                "len": [
                    "bool",
                    "str",
                    "typing.Callable[str, str]"
                ]
            }
        },
        "ElementListTestCase.root": {
            "name": "root",
            "location": 723,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementListTestCase.instance": {
            "name": "instance",
            "location": 731,
            "return": [
                "TESTELEMENTLIST"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementListTestCase.testInit": {
            "name": "testInit",
            "location": 734,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementListTestCase.testFromEtree": {
            "name": "testFromEtree",
            "location": 761,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementListTestCase.testToEtree": {
            "name": "testToEtree",
            "location": 786,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregateTestCase.testFilterAttrs.predicate": {
            "name": "predicate",
            "location": 317,
            "return": [],
            "arguments": {
                "v": []
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_common.py": {
        "BpacctinfoTestCase.etree": {
            "name": "etree",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BpacctinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 51,
            "return": [
                "BPACCTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BillpubinfoTestCase.etree": {
            "name": "etree",
            "location": 64,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BillpubinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 72,
            "return": [
                "BILLPUBINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinfoTestCase.etree": {
            "name": "etree",
            "location": 90,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 108,
            "return": [
                "PMTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinfoTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 126,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "PmtinfoTestCase.validSoup": {
            "name": "validSoup",
            "location": 134,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "PmtinfoTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 159,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "DiscountTestCase.etree": {
            "name": "etree",
            "location": 172,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "DiscountTestCase.aggregate": {
            "name": "aggregate",
            "location": 182,
            "return": [
                "DISCOUNT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AdjustmentTestCase.etree": {
            "name": "etree",
            "location": 199,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AdjustmentTestCase.aggregate": {
            "name": "aggregate",
            "location": 209,
            "return": [
                "ADJUSTMENT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LineitemTestCase.etree": {
            "name": "etree",
            "location": 225,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LineitemTestCase.aggregate": {
            "name": "aggregate",
            "location": 233,
            "return": [
                "LINEITEM"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvoiceTestCase.etree": {
            "name": "etree",
            "location": 245,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvoiceTestCase.aggregate": {
            "name": "aggregate",
            "location": 260,
            "return": [
                "INVOICE"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpmtinvTestCase.etree": {
            "name": "etree",
            "location": 279,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpmtinvTestCase.aggregate": {
            "name": "aggregate",
            "location": 288,
            "return": [
                "EXTDPMTINV"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpmtTestCase.etree": {
            "name": "etree",
            "location": 299,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpmtTestCase.aggregate": {
            "name": "aggregate",
            "location": 310,
            "return": [
                "EXTDPMT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpmtTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 321,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "ExtdpmtTestCase.validSoup": {
            "name": "validSoup",
            "location": 329,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "ExtdpmtTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 365,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "float"
                ]
            }
        },
        "ExtdpayeeTestCase.etree": {
            "name": "etree",
            "location": 379,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "ExtdpayeeTestCase.aggregate": {
            "name": "aggregate",
            "location": 384,
            "return": [
                "EXTDPAYEE"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtdpayeeTestCase.validSoup": {
            "name": "validSoup",
            "location": 391,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "ExtdpayeeTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 428,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtprcstsTestCase.etree": {
            "name": "etree",
            "location": 476,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtprcstsTestCase.aggregate": {
            "name": "aggregate",
            "location": 484,
            "return": [
                "PMTPRCSTS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_list.py": {
        "PayeerqTestCase.etree": {
            "name": "etree",
            "location": 35,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "PayeerqTestCase.aggregate": {
            "name": "aggregate",
            "location": 41,
            "return": [
                "PAYEERQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeerqTestCase.validSoup": {
            "name": "validSoup",
            "location": 51,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "PayeerqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 70,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeersTestCase.etree": {
            "name": "etree",
            "location": 101,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "PayeersTestCase.aggregate": {
            "name": "aggregate",
            "location": 106,
            "return": [
                "PAYEERS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeersTestCase.validSoup": {
            "name": "validSoup",
            "location": 118,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "PayeersTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 131,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeemodrqTestCase.etree": {
            "name": "etree",
            "location": 144,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "PayeemodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 149,
            "return": [
                "PAYEEMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeemodrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 160,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "PayeemodrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 172,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeemodrsTestCase.etree": {
            "name": "etree",
            "location": 185,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeemodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 197,
            "return": [
                "PAYEEMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeemodrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 209,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "PayeemodrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 222,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeedelrqTestCase.etree": {
            "name": "etree",
            "location": 234,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeedelrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 241,
            "return": [
                "PAYEEDELRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeedelrsTestCase.etree": {
            "name": "etree",
            "location": 252,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeedelrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 259,
            "return": [
                "PAYEEDELRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeetrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 270,
            "return": [
                "PAYEETRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeetrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 280,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "PayeetrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 289,
            "return": [
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "PayeetrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 347,
            "return": [
                "PAYEETRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PayeetrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 357,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "PayeetrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 366,
            "return": [
                "typing.Generator[Element]",
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_mail.py": {
        "PmtmailrqTestCase.etree": {
            "name": "etree",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 43,
            "return": [
                "PMTMAILRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailrsTestCase.etree": {
            "name": "etree",
            "location": 59,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 68,
            "return": [
                "PMTMAILRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 83,
            "return": [
                "PMTMAILTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailtrnrsTestCase.etree": {
            "name": "etree",
            "location": 99,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "PmtmailtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 106,
            "return": [
                "PMTMAILTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmailsyncrqTestCase.etree": {
            "name": "etree",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PmtmailsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 134,
            "return": [
                "PMTMAILSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "PmtmailsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 146,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PmtmailsyncrsTestCase.etree": {
            "name": "etree",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PmtmailsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 178,
            "return": [
                "PMTMAILSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_pmt.py": {
        "PmtrqTestCase.etree": {
            "name": "etree",
            "location": 41,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 48,
            "return": [
                "PMTRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtrsTestCase.etree": {
            "name": "etree",
            "location": 60,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 74,
            "return": [
                "PMTRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmodrqTestCase.etree": {
            "name": "etree",
            "location": 94,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 102,
            "return": [
                "PMTMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmodrsTestCase.etree": {
            "name": "etree",
            "location": 114,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtmodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 123,
            "return": [
                "PMTMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtcancrqTestCase.etree": {
            "name": "etree",
            "location": 138,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtcancrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 145,
            "return": [
                "PMTCANCRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtcancrsTestCase.etree": {
            "name": "etree",
            "location": 156,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtcancrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 163,
            "return": [
                "PMTCANCRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 174,
            "return": [
                "PMTTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmttrnrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 184,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "PmttrnrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 193,
            "return": [
                "typing.Generator[Element]",
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "PmttrnrsTestCase.etree": {
            "name": "etree",
            "location": 250,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "PmttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 257,
            "return": [
                "PMTTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmttrnrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 267,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "memoryview",
                    "dict[, ]",
                    "BaseException"
                ]
            }
        },
        "PmttrnrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 279,
            "return": [
                "typing.Generator[Element]",
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "PmtinqrqTestCase.etree": {
            "name": "etree",
            "location": 334,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinqrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 341,
            "return": [
                "PMTINQRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinqrsTestCase.etree": {
            "name": "etree",
            "location": 353,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinqrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 362,
            "return": [
                "PMTINQRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinqtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 377,
            "return": [
                "PMTINQTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PmtinqtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 393,
            "return": [
                "PMTINQTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_recur.py": {
        "RecpmtrqTestCase.etree": {
            "name": "etree",
            "location": 38,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 48,
            "return": [
                "RECPMTRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtrsTestCase.etree": {
            "name": "etree",
            "location": 65,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 79,
            "return": [
                "RECPMTRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtmodrqTestCase.etree": {
            "name": "etree",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtmodrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 112,
            "return": [
                "RECPMTMODRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtmodrsTestCase.etree": {
            "name": "etree",
            "location": 131,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtmodrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 143,
            "return": [
                "RECPMTMODRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtcancrqTestCase.etree": {
            "name": "etree",
            "location": 161,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtcancrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 169,
            "return": [
                "RECPMTCANCRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtcancrsTestCase.etree": {
            "name": "etree",
            "location": 180,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmtcancrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 188,
            "return": [
                "RECPMTCANCRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 199,
            "return": [
                "RECPMTTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RecpmttrnrsTestCase.etree": {
            "name": "etree",
            "location": 215,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "RecpmttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 222,
            "return": [
                "RECPMTTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_billpay_sync.py": {
        "PmtsyncrqTestCase.etree": {
            "name": "etree",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PmtsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 46,
            "return": [
                "PMTSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "PmtsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 57,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PmtsyncrsTestCase.etree": {
            "name": "etree",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PmtsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 88,
            "return": [
                "PMTSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "PmtsyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 99,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrqTestCase.etree": {
            "name": "etree",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 131,
            "return": [
                "RECPMTSYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 142,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrsTestCase.etree": {
            "name": "etree",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 173,
            "return": [
                "RECPMTSYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecpmtsyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 184,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrqTestCase.etree": {
            "name": "etree",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 213,
            "return": [
                "PAYEESYNCRQ"
            ],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 223,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrsTestCase.etree": {
            "name": "etree",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 249,
            "return": [
                "PAYEESYNCRS"
            ],
            "arguments": {
                "self": []
            }
        },
        "PayeesyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 259,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_common.py": {
        "BalTestCase.etree": {
            "name": "etree",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BalTestCase.aggregate": {
            "name": "aggregate",
            "location": 56,
            "return": [
                "BAL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxelementTestCase.etree": {
            "name": "etree",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxelementTestCase.aggregate": {
            "name": "aggregate",
            "location": 82,
            "return": [
                "OFXELEMENT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxextensionTestCase.etree": {
            "name": "etree",
            "location": 96,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxextensionTestCase.aggregate": {
            "name": "aggregate",
            "location": 104,
            "return": [
                "OFXEXTENSION"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TranListTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "TranListTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TranListTestCase.etree": {
            "name": "etree",
            "location": 126,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TranListTestCase.aggregate": {
            "name": "aggregate",
            "location": 149,
            "return": [
                "TESTTRANLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TranListTestCase.testRepr": {
            "name": "testRepr",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_email.py": {
        "MailTestCase.etree": {
            "name": "etree",
            "location": 48,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailTestCase.aggregate": {
            "name": "aggregate",
            "location": 62,
            "return": [
                "MAIL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailrqTestCase.etree": {
            "name": "etree",
            "location": 119,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 126,
            "return": [
                "MAILRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailrsTestCase.etree": {
            "name": "etree",
            "location": 137,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 144,
            "return": [
                "MAILRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 155,
            "return": [
                "MAILTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 171,
            "return": [
                "MAILTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrqTestCase.etree": {
            "name": "etree",
            "location": 187,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 199,
            "return": [
                "MAILSYNCRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 211,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "MailsyncrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 224,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[Element]]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrsTestCase.etree": {
            "name": "etree",
            "location": 277,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 287,
            "return": [
                "MAILSYNCRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MailsyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 297,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "MailsyncrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 308,
            "return": [
                "typing.Generator[]",
                "typing.Generator[list[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimerqTestCase.etree": {
            "name": "etree",
            "location": 334,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimerqTestCase.aggregate": {
            "name": "aggregate",
            "location": 341,
            "return": [
                "GETMIMERQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimersTestCase.etree": {
            "name": "etree",
            "location": 352,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimersTestCase.aggregate": {
            "name": "aggregate",
            "location": 359,
            "return": [
                "GETMIMERS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimetrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 370,
            "return": [
                "GETMIMETRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "GetmimetrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 386,
            "return": [
                "GETMIMETRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_i18n.py": {
        "CurrencyTestCase.etree": {
            "name": "etree",
            "location": 27,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CurrencyTestCase.aggregate": {
            "name": "aggregate",
            "location": 35,
            "return": [
                "CURRENCY"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OrigcurrencyTestCase.etree": {
            "name": "etree",
            "location": 42,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OrigcurrencyTestCase.aggregate": {
            "name": "aggregate",
            "location": 50,
            "return": [
                "ORIGCURRENCY"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_invest.py": {
        "InvacctfromTestCase.etree": {
            "name": "etree",
            "location": 69,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvacctfromTestCase.aggregate": {
            "name": "aggregate",
            "location": 77,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvaccttoTestCase.etree": {
            "name": "etree",
            "location": 88,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvaccttoTestCase.aggregate": {
            "name": "aggregate",
            "location": 96,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvacctinfoTestCase.etree": {
            "name": "etree",
            "location": 113,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvacctinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 126,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IncposTestCase.etree": {
            "name": "etree",
            "location": 145,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IncposTestCase.aggregate": {
            "name": "aggregate",
            "location": 153,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvposlistTestCase.etree": {
            "name": "etree",
            "location": 162,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvposlistTestCase.aggregate": {
            "name": "aggregate",
            "location": 172,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvposlistTestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "InvbalTestCase.etree": {
            "name": "etree",
            "location": 201,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbalTestCase.aggregate": {
            "name": "aggregate",
            "location": 211,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401kbalTestCase.etree": {
            "name": "etree",
            "location": 237,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401kbalTestCase.aggregate": {
            "name": "aggregate",
            "location": 254,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MatchinfoTestCase.etree": {
            "name": "etree",
            "location": 283,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MatchinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 295,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribsecurityTestCase.etree": {
            "name": "etree",
            "location": 313,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribsecurityTestCase.aggregate": {
            "name": "aggregate",
            "location": 321,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribsecurityTestCase.validSoup": {
            "name": "validSoup",
            "location": 328,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "ContribsecurityTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 390,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribinfoTestCase.etree": {
            "name": "etree",
            "location": 456,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 464,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContribinfoTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 471,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "VestinfoTestCase.etree": {
            "name": "etree",
            "location": 485,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "VestinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 493,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LoaninfoTestCase.etree": {
            "name": "etree",
            "location": 521,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "LoaninfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 542,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContributionsTestCase.etree": {
            "name": "etree",
            "location": 578,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ContributionsTestCase.aggregate": {
            "name": "aggregate",
            "location": 592,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WithdrawalsTestCase.etree": {
            "name": "etree",
            "location": 621,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WithdrawalsTestCase.aggregate": {
            "name": "aggregate",
            "location": 635,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EarningsTestCase.etree": {
            "name": "etree",
            "location": 664,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EarningsTestCase.aggregate": {
            "name": "aggregate",
            "location": 678,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "YeartodateTestCase.etree": {
            "name": "etree",
            "location": 699,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "YeartodateTestCase.aggregate": {
            "name": "aggregate",
            "location": 710,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InceptodateTestCase.etree": {
            "name": "etree",
            "location": 728,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InceptodateTestCase.aggregate": {
            "name": "aggregate",
            "location": 739,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PeriodtodateTestCase.etree": {
            "name": "etree",
            "location": 757,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PeriodtodateTestCase.aggregate": {
            "name": "aggregate",
            "location": 768,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401ksummaryTestCase.etree": {
            "name": "etree",
            "location": 786,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401ksummaryTestCase.aggregate": {
            "name": "aggregate",
            "location": 795,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401kTestCase.etree": {
            "name": "etree",
            "location": 822,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inv401kTestCase.aggregate": {
            "name": "aggregate",
            "location": 843,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvposTestCase.etree": {
            "name": "etree",
            "location": 884,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvposTestCase.aggregate": {
            "name": "aggregate",
            "location": 901,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosdebtTestCase.etree": {
            "name": "etree",
            "location": 926,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosdebtTestCase.aggregate": {
            "name": "aggregate",
            "location": 934,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosdebtTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 937,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "PosmfTestCase.etree": {
            "name": "etree",
            "location": 960,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosmfTestCase.aggregate": {
            "name": "aggregate",
            "location": 972,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosmfTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 981,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "PosoptTestCase.etree": {
            "name": "etree",
            "location": 1006,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosoptTestCase.aggregate": {
            "name": "aggregate",
            "location": 1015,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosoptTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1018,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "PosotherTestCase.etree": {
            "name": "etree",
            "location": 1039,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosotherTestCase.aggregate": {
            "name": "aggregate",
            "location": 1047,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosotherTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1050,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "PosstockTestCase.etree": {
            "name": "etree",
            "location": 1075,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosstockTestCase.aggregate": {
            "name": "aggregate",
            "location": 1086,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PosstockTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1094,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "InvstmtrqTestCase.etree": {
            "name": "etree",
            "location": 1116,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1130,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtrsTestCase.etree": {
            "name": "etree",
            "location": 1159,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1175,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1189,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "InvstmttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1204,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmttrnrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1218,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "bytes"
                ]
            }
        },
        "InvstmttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1225,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvtranlistTestCase.transactions": {
            "name": "transactions",
            "location": 1239,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]",
                    "typing.Type"
                ]
            }
        },
        "InvtranlistTestCase.etree": {
            "name": "etree",
            "location": 1269,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "float"
                ]
            }
        },
        "InvtranlistTestCase.aggregate": {
            "name": "aggregate",
            "location": 1279,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "None",
                    "typing.Type",
                    "str"
                ]
            }
        },
        "InvtranlistTestCase.validSoup": {
            "name": "validSoup",
            "location": 1289,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Callable[, ]",
                    "list[gluonts.model.common.Tensor]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_invest_oo.py": {
        "OoTestCase.etree": {
            "name": "etree",
            "location": 78,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoTestCase.aggregate": {
            "name": "aggregate",
            "location": 98,
            "return": [
                "OO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        },
        "OobuydebtTestCase.etree": {
            "name": "etree",
            "location": 138,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuydebtTestCase.aggregate": {
            "name": "aggregate",
            "location": 147,
            "return": [
                "OOBUYDEBT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuymfTestCase.etree": {
            "name": "etree",
            "location": 163,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuymfTestCase.aggregate": {
            "name": "aggregate",
            "location": 172,
            "return": [
                "OOBUYMF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuyoptTestCase.etree": {
            "name": "etree",
            "location": 184,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuyoptTestCase.aggregate": {
            "name": "aggregate",
            "location": 192,
            "return": [
                "OOBUYOPT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuyotherTestCase.etree": {
            "name": "etree",
            "location": 204,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuyotherTestCase.aggregate": {
            "name": "aggregate",
            "location": 212,
            "return": [
                "OOBUYOTHER"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuystockTestCase.etree": {
            "name": "etree",
            "location": 224,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OobuystockTestCase.aggregate": {
            "name": "aggregate",
            "location": 233,
            "return": [
                "OOBUYSTOCK"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoselldebtTestCase.etree": {
            "name": "etree",
            "location": 244,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoselldebtTestCase.aggregate": {
            "name": "aggregate",
            "location": 251,
            "return": [
                "OOSELLDEBT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellmfTestCase.etree": {
            "name": "etree",
            "location": 263,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellmfTestCase.aggregate": {
            "name": "aggregate",
            "location": 273,
            "return": [
                "OOSELLMF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoselloptTestCase.etree": {
            "name": "etree",
            "location": 290,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OoselloptTestCase.aggregate": {
            "name": "aggregate",
            "location": 298,
            "return": [
                "OOSELLOPT"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellotherTestCase.etree": {
            "name": "etree",
            "location": 310,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellotherTestCase.aggregate": {
            "name": "aggregate",
            "location": 318,
            "return": [
                "OOSELLOTHER"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellstockTestCase.etree": {
            "name": "etree",
            "location": 330,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OosellstockTestCase.aggregate": {
            "name": "aggregate",
            "location": 338,
            "return": [
                "OOSELLSTOCK"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SwitchmfTestCase.etree": {
            "name": "etree",
            "location": 350,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SwitchmfTestCase.aggregate": {
            "name": "aggregate",
            "location": 360,
            "return": [
                "SWITCHMF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvoolistTestCase.etree": {
            "name": "etree",
            "location": 374,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvoolistTestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvoolistTestCase.aggregate": {
            "name": "aggregate",
            "location": 409,
            "return": [
                "INVOOLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_invest_transactions.py": {
        "InvbanktranTestCase.etree": {
            "name": "etree",
            "location": 63,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbanktranTestCase.aggregate": {
            "name": "aggregate",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbanktranTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvtranTestCase.etree": {
            "name": "etree",
            "location": 95,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvtranTestCase.aggregate": {
            "name": "aggregate",
            "location": 107,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbuyTestCase.etree": {
            "name": "etree",
            "location": 152,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbuyTestCase.aggregate": {
            "name": "aggregate",
            "location": 177,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvbuyTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvsellTestCase.etree": {
            "name": "etree",
            "location": 242,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvsellTestCase.aggregate": {
            "name": "aggregate",
            "location": 271,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvsellTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuydebtTestCase.etree": {
            "name": "etree",
            "location": 310,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuydebtTestCase.aggregate": {
            "name": "aggregate",
            "location": 319,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuydebtTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuymfTestCase.etree": {
            "name": "etree",
            "location": 347,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuymfTestCase.aggregate": {
            "name": "aggregate",
            "location": 357,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuymfTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuyoptTestCase.etree": {
            "name": "etree",
            "location": 386,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuyoptTestCase.aggregate": {
            "name": "aggregate",
            "location": 396,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuyoptTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuyotherTestCase.etree": {
            "name": "etree",
            "location": 424,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuyotherTestCase.aggregate": {
            "name": "aggregate",
            "location": 432,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuyotherTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 435,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuystockTestCase.etree": {
            "name": "etree",
            "location": 459,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuystockTestCase.aggregate": {
            "name": "aggregate",
            "location": 467,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BuystockTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 470,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClosureoptTestCase.etree": {
            "name": "etree",
            "location": 502,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ClosureoptTestCase.aggregate": {
            "name": "aggregate",
            "location": 516,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ClosureoptTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 528,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IncomeTestCase.etree": {
            "name": "etree",
            "location": 558,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IncomeTestCase.aggregate": {
            "name": "aggregate",
            "location": 574,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "IncomeTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 588,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvexpenseTestCase.etree": {
            "name": "etree",
            "location": 616,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvexpenseTestCase.aggregate": {
            "name": "aggregate",
            "location": 629,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvexpenseTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 640,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JrnlfundTestCase.etree": {
            "name": "etree",
            "location": 660,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "JrnlfundTestCase.aggregate": {
            "name": "aggregate",
            "location": 670,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "JrnlfundTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 678,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JrnlsecTestCase.etree": {
            "name": "etree",
            "location": 693,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "JrnlsecTestCase.aggregate": {
            "name": "aggregate",
            "location": 704,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "JrnlsecTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 713,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MargininterestTestCase.etree": {
            "name": "etree",
            "location": 731,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MargininterestTestCase.aggregate": {
            "name": "aggregate",
            "location": 743,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MargininterestTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 751,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReinvestTestCase.etree": {
            "name": "etree",
            "location": 791,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ReinvestTestCase.aggregate": {
            "name": "aggregate",
            "location": 811,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ReinvestTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 829,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RetofcapTestCase.etree": {
            "name": "etree",
            "location": 854,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RetofcapTestCase.aggregate": {
            "name": "aggregate",
            "location": 867,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "RetofcapTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 878,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelldebtTestCase.etree": {
            "name": "etree",
            "location": 900,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SelldebtTestCase.aggregate": {
            "name": "aggregate",
            "location": 909,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SelldebtTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 916,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SellmfTestCase.etree": {
            "name": "etree",
            "location": 941,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellmfTestCase.aggregate": {
            "name": "aggregate",
            "location": 951,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellmfTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 959,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelloptTestCase.etree": {
            "name": "etree",
            "location": 988,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SelloptTestCase.aggregate": {
            "name": "aggregate",
            "location": 1000,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SelloptTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1010,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SellotherTestCase.etree": {
            "name": "etree",
            "location": 1033,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellotherTestCase.aggregate": {
            "name": "aggregate",
            "location": 1040,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellotherTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1043,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SellstockTestCase.etree": {
            "name": "etree",
            "location": 1067,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellstockTestCase.aggregate": {
            "name": "aggregate",
            "location": 1075,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SellstockTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1078,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplitTestCase.etree": {
            "name": "etree",
            "location": 1115,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SplitTestCase.aggregate": {
            "name": "aggregate",
            "location": 1132,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SplitTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransferTestCase.etree": {
            "name": "etree",
            "location": 1186,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TransferTestCase.aggregate": {
            "name": "aggregate",
            "location": 1203,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "TransferTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_msgsets.py": {
        "Signonmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 106,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signonmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 113,
            "return": [
                "SIGNONMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signonmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 124,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signonmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 131,
            "return": [
                "SIGNONMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signonmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 140,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signonmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 147,
            "return": [
                "SIGNONMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignonmsgsetTestCase.etree": {
            "name": "etree",
            "location": 156,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignonmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 163,
            "return": [
                "SIGNONMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 172,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 180,
            "return": [
                "PROFMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsrqv1TestCase.testListAggregate": {
            "name": "testListAggregate",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Profmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 201,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 209,
            "return": [
                "PROFMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Profmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 232,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Profmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 239,
            "return": [
                "PROFMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProfmsgsetTestCase.etree": {
            "name": "etree",
            "location": 248,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProfmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 255,
            "return": [
                "PROFMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 264,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 272,
            "return": [
                "SIGNUPMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signupmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 294,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 302,
            "return": [
                "SIGNUPMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signupmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 326,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Signupmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 337,
            "return": [
                "SIGNUPMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignupmsgsetTestCase.etree": {
            "name": "etree",
            "location": 354,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignupmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 361,
            "return": [
                "SIGNUPMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 370,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 383,
            "return": [
                "EMAILMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Emailmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 409,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 422,
            "return": [
                "EMAILMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Emailmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 448,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Emailmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 457,
            "return": [
                "EMAILMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EmailmsgsetTestCase.etree": {
            "name": "etree",
            "location": 468,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EmailmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 475,
            "return": [
                "EMAILMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 484,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 504,
            "return": [
                "BANKMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 528,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bankmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 548,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 568,
            "return": [
                "BANKMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 592,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bankmsgsrsv1TestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 605,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XferprofTestCase.etree": {
            "name": "etree",
            "location": 620,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "XferprofTestCase.aggregate": {
            "name": "aggregate",
            "location": 635,
            "return": [
                "XFERPROF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchkprofTestCase.etree": {
            "name": "etree",
            "location": 654,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "StpchkprofTestCase.aggregate": {
            "name": "aggregate",
            "location": 666,
            "return": [
                "STPCHKPROF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EmailprofTestCase.etree": {
            "name": "etree",
            "location": 681,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EmailprofTestCase.aggregate": {
            "name": "aggregate",
            "location": 689,
            "return": [
                "EMAILPROF"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 698,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Bankmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 712,
            "return": [
                "BANKMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmsgsetTestCase.etree": {
            "name": "etree",
            "location": 730,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "BankmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 737,
            "return": [
                "BANKMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 746,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 754,
            "return": [
                "CREDITCARDMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 766,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 774,
            "return": [
                "CREDITCARDMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 789,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Creditcardmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 798,
            "return": [
                "CREDITCARDMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CreditcardmsgsetTestCase.etree": {
            "name": "etree",
            "location": 811,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "CreditcardmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 818,
            "return": [
                "CREDITCARDMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 827,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 841,
            "return": [
                "INTERXFERMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 853,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Interxfermsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 870,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 884,
            "return": [
                "INTERXFERMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 896,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Interxfermsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 913,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Interxfermsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 925,
            "return": [
                "INTERXFERMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InterxfermsgsetTestCase.etree": {
            "name": "etree",
            "location": 941,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InterxfermsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 948,
            "return": [
                "INTERXFERMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 957,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 966,
            "return": [
                "WIREXFERMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 974,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wirexfermsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 991,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1000,
            "return": [
                "WIREXFERMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1008,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wirexfermsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 1025,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Wirexfermsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1037,
            "return": [
                "WIREXFERMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirexfermsgsetTestCase.etree": {
            "name": "etree",
            "location": 1053,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WirexfermsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 1060,
            "return": [
                "WIREXFERMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 1231,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1240,
            "return": [
                "INVSTMTMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invstmtmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 1262,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1271,
            "return": [
                "INVSTMTMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invstmtmsgsrsv1TestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 1287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invstmtmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 1307,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Invstmtmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1321,
            "return": [
                "INVSTMTMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtmsgsetTestCase.etree": {
            "name": "etree",
            "location": 1339,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 1346,
            "return": [
                "INVSTMTMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsrqv1TestCase.etree": {
            "name": "etree",
            "location": 1355,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsrqv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1363,
            "return": [
                "SECLISTMSGSRQV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsrqv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Seclistmsgsrsv1TestCase.etree": {
            "name": "etree",
            "location": 1389,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsrsv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1397,
            "return": [
                "SECLISTMSGSRSV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsrsv1TestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Seclistmsgsetv1TestCase.etree": {
            "name": "etree",
            "location": 1419,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Seclistmsgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1427,
            "return": [
                "SECLISTMSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SeclistmsgsetTestCase.etree": {
            "name": "etree",
            "location": 1438,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SeclistmsgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 1445,
            "return": [
                "SECLISTMSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Tax1099msgsetv1TestCase.etree": {
            "name": "etree",
            "location": 1456,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Tax1099msgsetv1TestCase.aggregate": {
            "name": "aggregate",
            "location": 1466,
            "return": [
                "TAX1099MSGSETV1"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Tax1099msgsetTestCase.etree": {
            "name": "etree",
            "location": 1480,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Tax1099msgsetTestCase.aggregate": {
            "name": "aggregate",
            "location": 1487,
            "return": [
                "TAX1099MSGSET"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MsgsetcoreTestCase.etree": {
            "name": "etree",
            "location": 1514,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MsgsetcoreTestCase.aggregate": {
            "name": "aggregate",
            "location": 1531,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MsgsetlistTestCase.etree": {
            "name": "etree",
            "location": 1553,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "MsgsetlistTestCase.aggregate": {
            "name": "aggregate",
            "location": 1558,
            "return": [
                "MSGSETLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MsgsetlistTestCase.validSoup": {
            "name": "validSoup",
            "location": 1563,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "MsgsetlistTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 1585,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MsgsetlistTestCase.testListAggregates": {
            "name": "testListAggregates",
            "location": 1590,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_ofx.py": {
        "OfxTestCase.etree": {
            "name": "etree",
            "location": 67,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxTestCase.aggregate": {
            "name": "aggregate",
            "location": 83,
            "return": [
                "OFX"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxTestCase.validSoup": {
            "name": "validSoup",
            "location": 99,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "OfxTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 139,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OfxTestCase.root": {
            "name": "root",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OfxTestCase.testUnsupported": {
            "name": "testUnsupported",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OfxTestCase.testRepr": {
            "name": "testRepr",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OfxTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_profile.py": {
        "ProfrqTestCase.etree": {
            "name": "etree",
            "location": 35,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProfrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 43,
            "return": [
                "PROFRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignoninfoTestCase.etree": {
            "name": "etree",
            "location": 73,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignoninfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 97,
            "return": [
                "SIGNONINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignoninfolistTestCase.etree": {
            "name": "etree",
            "location": 125,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SignoninfolistTestCase.aggregate": {
            "name": "aggregate",
            "location": 135,
            "return": [
                "SIGNONINFOLIST"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProfrsTestCase.msgsetlist": {
            "name": "msgsetlist",
            "location": 167,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProfrsTestCase.etree": {
            "name": "etree",
            "location": 191,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "bytes",
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "ProfrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 213,
            "return": [
                "PROFRS"
            ],
            "arguments": {
                "cls": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ProfrsTestCase.testConvertRemoveProprietaryTag": {
            "name": "testConvertRemoveProprietaryTag",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProftrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 268,
            "return": [
                "PROFTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProftrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 284,
            "return": [
                "PROFTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ProftrnrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_models_securities.py": {
        "SecidTestCase.etree": {
            "name": "etree",
            "location": 49,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecidTestCase.aggregate": {
            "name": "aggregate",
            "location": 57,
            "return": [
                "SECID"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecinfoTestCase.etree": {
            "name": "etree",
            "location": 69,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 84,
            "return": [
                "SECINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecinfoTestCase.testConvertSecnameTooLong": {
            "name": "testConvertSecnameTooLong",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SecinfoTestCase.testConvertTickerTooLong": {
            "name": "testConvertTickerTooLong",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SecinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DebtinfoTestCase.etree": {
            "name": "etree",
            "location": 212,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "DebtinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 234,
            "return": [
                "DEBTINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "DebtinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PortionTestCase.etree": {
            "name": "etree",
            "location": 265,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "PortionTestCase.aggregate": {
            "name": "aggregate",
            "location": 273,
            "return": [
                "PORTION"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MfassetclassTestCase.etree": {
            "name": "etree",
            "location": 282,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MfassetclassTestCase.aggregate": {
            "name": "aggregate",
            "location": 291,
            "return": [
                "MFASSETCLASS"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FiportionTestCase.etree": {
            "name": "etree",
            "location": 305,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FiportionTestCase.aggregate": {
            "name": "aggregate",
            "location": 313,
            "return": [
                "FIPORTION"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FimfassetclassTestCase.etree": {
            "name": "etree",
            "location": 322,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FimfassetclassTestCase.aggregate": {
            "name": "aggregate",
            "location": 331,
            "return": [
                "FIMFASSETCLASS"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MfinfoTestCase.etree": {
            "name": "etree",
            "location": 355,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MfinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 367,
            "return": [
                "MFINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MfinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptinfoTestCase.etree": {
            "name": "etree",
            "location": 391,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "OptinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 405,
            "return": [
                "OPTINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "OptinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OtherinfoTestCase.etree": {
            "name": "etree",
            "location": 432,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "OtherinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 443,
            "return": [
                "OTHERINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "OtherinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockinfoTestCase.etree": {
            "name": "etree",
            "location": 472,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "StockinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 485,
            "return": [
                "STOCKINFO"
            ],
            "arguments": {
                "cls": []
            }
        },
        "StockinfoTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 495,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeclistTestCase.etree": {
            "name": "etree",
            "location": 506,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclistTestCase.aggregate": {
            "name": "aggregate",
            "location": 517,
            "return": [
                "SECLIST"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecrqTestCase.etree": {
            "name": "etree",
            "location": 532,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SecrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 537,
            "return": [
                "SECRQ"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 542,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SecrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 556,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclistrqTestCase.etree": {
            "name": "etree",
            "location": 590,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclistrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 598,
            "return": [
                "SECLISTRQ"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclistrsTestCase.etree": {
            "name": "etree",
            "location": 607,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclistrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 612,
            "return": [
                "SECLISTRS"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclisttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 623,
            "return": [
                "SECLISTTRNRQ"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeclisttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 639,
            "return": [
                "SECLISTTRNRS"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "ofxtools-master/tests/test_models_signon.py": {
        "FiTestCase.etree": {
            "name": "etree",
            "location": 47,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "FiTestCase.aggregate": {
            "name": "aggregate",
            "location": 55,
            "return": [
                "FI"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeTestCase.etree": {
            "name": "etree",
            "location": 67,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeTestCase.aggregate": {
            "name": "aggregate",
            "location": 77,
            "return": [
                "MFACHALLENGE"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeaTestCase.etree": {
            "name": "etree",
            "location": 91,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeaTestCase.aggregate": {
            "name": "aggregate",
            "location": 99,
            "return": [
                "MFACHALLENGEA"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrqTestCase.etree": {
            "name": "etree",
            "location": 122,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 142,
            "return": [
                "SONRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 162,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "SonrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 190,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrsTestCase.etree": {
            "name": "etree",
            "location": 234,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 250,
            "return": [
                "SONRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SonrsTestCase.testConvertRemoveProprietaryTag": {
            "name": "testConvertRemoveProprietaryTag",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SonrsTestCase.testPropertyAliases": {
            "name": "testPropertyAliases",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PinchrqTestCase.etree": {
            "name": "etree",
            "location": 298,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 306,
            "return": [
                "PINCHRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchrsTestCase.etree": {
            "name": "etree",
            "location": 318,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 326,
            "return": [
                "PINCHRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchtrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 337,
            "return": [
                "PINCHTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchtrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 353,
            "return": [
                "PINCHTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengerqTestCase.etree": {
            "name": "etree",
            "location": 370,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengerqTestCase.aggregate": {
            "name": "aggregate",
            "location": 378,
            "return": [
                "CHALLENGERQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengersTestCase.etree": {
            "name": "etree",
            "location": 389,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengersTestCase.aggregate": {
            "name": "aggregate",
            "location": 398,
            "return": [
                "CHALLENGERS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengetrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 409,
            "return": [
                "CHALLENGETRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChallengetrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 425,
            "return": [
                "CHALLENGETRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengerqTestCase.etree": {
            "name": "etree",
            "location": 441,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengerqTestCase.aggregate": {
            "name": "aggregate",
            "location": 448,
            "return": [
                "MFACHALLENGERQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengersTestCase.etree": {
            "name": "etree",
            "location": 457,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengersTestCase.aggregate": {
            "name": "aggregate",
            "location": 465,
            "return": [
                "MFACHALLENGERS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengersTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 471,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengetrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 483,
            "return": [
                "MFACHALLENGETRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengetrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 499,
            "return": [
                "MFACHALLENGETRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_models_signup.py": {
        "ClientenrollTestCase.etree": {
            "name": "etree",
            "location": 60,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ClientenrollTestCase.aggregate": {
            "name": "aggregate",
            "location": 67,
            "return": [
                "CLIENTENROLL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WebenrollTestCase.etree": {
            "name": "etree",
            "location": 78,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "WebenrollTestCase.aggregate": {
            "name": "aggregate",
            "location": 85,
            "return": [
                "WEBENROLL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OtherenrollTestCase.etree": {
            "name": "etree",
            "location": 96,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "OtherenrollTestCase.aggregate": {
            "name": "aggregate",
            "location": 103,
            "return": [
                "OTHERENROLL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinfoTestCase.etree": {
            "name": "etree",
            "location": 114,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 128,
            "return": [
                "ACCTINFO"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinfoTestCase.validSoup": {
            "name": "validSoup",
            "location": 139,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "AcctinfoTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 156,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinfoTestCase.testRepr": {
            "name": "testRepr",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AcctinfoMalformedTestCase.testMissingXxxacctinfo": {
            "name": "testMissingXxxacctinfo",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AcctinfoMalformedTestCase.testMultipleBankacctinfo": {
            "name": "testMultipleBankacctinfo",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AcctinfoMalformedTestCase.testMultipleCcacctinfo": {
            "name": "testMultipleCcacctinfo",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AcctinfoMalformedTestCase.testMultipleInvacctinfo": {
            "name": "testMultipleInvacctinfo",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AcctinforqTestCase.etree": {
            "name": "etree",
            "location": 230,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinforqTestCase.aggregate": {
            "name": "aggregate",
            "location": 237,
            "return": [
                "ACCTINFORQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinforsTestCase.etree": {
            "name": "etree",
            "location": 249,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinforsTestCase.aggregate": {
            "name": "aggregate",
            "location": 258,
            "return": [
                "ACCTINFORS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinforsTestCase.testRepr": {
            "name": "testRepr",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AcctinfotrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 275,
            "return": [
                "ACCTINFOTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctinfotrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 291,
            "return": [
                "ACCTINFOTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrollrqTestCase.emptyBase": {
            "name": "emptyBase",
            "location": 328,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[int]",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        },
        "EnrollrqTestCase.etree": {
            "name": "etree",
            "location": 351,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None",
                    "typing.Type",
                    "complex",
                    "bytes"
                ]
            }
        },
        "EnrollrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 358,
            "return": [
                "ENROLLRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrollrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 382,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "Exception",
                    "typing.Type"
                ]
            }
        },
        "EnrollrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 396,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "Exception",
                    "str"
                ]
            }
        },
        "EnrollrsTestCase.etree": {
            "name": "etree",
            "location": 435,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrollrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 444,
            "return": [
                "ENROLLRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrolltrnrqTestCase.etree": {
            "name": "etree",
            "location": 459,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrolltrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 469,
            "return": [
                "ENROLLTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrolltrnrsTestCase.etree": {
            "name": "etree",
            "location": 485,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "EnrolltrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 495,
            "return": [
                "ENROLLTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcaddTestCase.etree": {
            "name": "etree",
            "location": 507,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcaddTestCase.aggregate": {
            "name": "aggregate",
            "location": 515,
            "return": [
                "SVCADD"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcaddTestCase.validSoup": {
            "name": "validSoup",
            "location": 520,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "SvcaddTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 533,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcchgTestCase.etree": {
            "name": "etree",
            "location": 568,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcchgTestCase.aggregate": {
            "name": "aggregate",
            "location": 576,
            "return": [
                "SVCCHG"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcchgTestCase.validSoup": {
            "name": "validSoup",
            "location": 584,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "SvcchgTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 604,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcdelTestCase.etree": {
            "name": "etree",
            "location": 696,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcdelTestCase.aggregate": {
            "name": "aggregate",
            "location": 704,
            "return": [
                "SVCDEL"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "SvcdelTestCase.validSoup": {
            "name": "validSoup",
            "location": 709,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "SvcdelTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 722,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrqTestCase.etree": {
            "name": "etree",
            "location": 762,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 770,
            "return": [
                "ACCTRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 775,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "AcctrqTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 784,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrsTestCase.etree": {
            "name": "etree",
            "location": 825,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 834,
            "return": [
                "ACCTRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 839,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "AcctrsTestCase.invalidSoup": {
            "name": "invalidSoup",
            "location": 849,
            "return": [
                "typing.Generator[Element]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AccttrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 893,
            "return": [
                "ACCTTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AccttrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 909,
            "return": [
                "ACCTTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctsyncrqTestCase.etree": {
            "name": "etree",
            "location": 923,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctsyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 933,
            "return": [
                "ACCTSYNCRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctsyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 943,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "AcctsyncrsTestCase.etree": {
            "name": "etree",
            "location": 958,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctsyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 968,
            "return": [
                "ACCTSYNCRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "AcctsyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 978,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "ChguserinforqTestCase.etree": {
            "name": "etree",
            "location": 1009,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinforqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1028,
            "return": [
                "CHGUSERINFORQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinforsTestCase.etree": {
            "name": "etree",
            "location": 1068,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinforsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1088,
            "return": [
                "CHGUSERINFORS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfotrnrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1114,
            "return": [
                "CHGUSERINFOTRNRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfotrnrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1130,
            "return": [
                "CHGUSERINFOTRNRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfosyncrqTestCase.etree": {
            "name": "etree",
            "location": 1144,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfosyncrqTestCase.aggregate": {
            "name": "aggregate",
            "location": 1154,
            "return": [
                "CHGUSERINFOSYNCRQ"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfosyncrqTestCase.validSoup": {
            "name": "validSoup",
            "location": 1164,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "ChguserinfosyncrsTestCase.etree": {
            "name": "etree",
            "location": 1179,
            "return": [
                "Element"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfosyncrsTestCase.aggregate": {
            "name": "aggregate",
            "location": 1189,
            "return": [
                "CHGUSERINFOSYNCRS"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ChguserinfosyncrsTestCase.validSoup": {
            "name": "validSoup",
            "location": 1199,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[gluonts.model.common.Tensor]",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_ofxget.py": {
        "MakeArgParserTestCase.testMakeArgparser": {
            "name": "testMakeArgparser",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.args": {
            "name": "args",
            "location": 53,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,list[typing.Text],bool,None,float]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testScanProfile": {
            "name": "testScanProfile",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testScanProfileNoResult": {
            "name": "testScanProfileNoResult",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testScanProfileWrite": {
            "name": "testScanProfileWrite",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testInitClient": {
            "name": "testInitClient",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestProfile": {
            "name": "testRequestProfile",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestAcctinfo": {
            "name": "testRequestAcctinfo",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.test_RequestAcctinfo": {
            "name": "test_RequestAcctinfo",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.test_RequestAcctinfoOverrideDtacctup": {
            "name": "test_RequestAcctinfoOverrideDtacctup",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testMergeAcctinfo": {
            "name": "testMergeAcctinfo",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestStmt": {
            "name": "testRequestStmt",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestStmtDryrun": {
            "name": "testRequestStmtDryrun",
            "location": 500,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestStmtEmpty": {
            "name": "testRequestStmtEmpty",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestStmtend": {
            "name": "testRequestStmtend",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeArgParserTestCase.testRequestTax1099": {
            "name": "testRequestTax1099",
            "location": 738,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MkServerCfgTestCase.testMkservercfg": {
            "name": "testMkservercfg",
            "location": 785,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgConfigTestCase.testList2config": {
            "name": "testList2config",
            "location": 845,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgConfigTestCase.testBool2config": {
            "name": "testBool2config",
            "location": 858,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgConfigTestCase.testInt2config": {
            "name": "testInt2config",
            "location": 874,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgConfigTestCase.testString2config": {
            "name": "testString2config",
            "location": 878,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MergeConfigTestCase.args": {
            "name": "args",
            "location": 898,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MergeConfigTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 921,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bytes",
                    "typing.Type",
                    "float",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "MergeConfigTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 949,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "bool"
                ]
            }
        },
        "MergeConfigTestCase.testMergeConfig": {
            "name": "testMergeConfig",
            "location": 954,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MergeConfigTestCase.testMergeConfigUnknownFiArg": {
            "name": "testMergeConfigUnknownFiArg",
            "location": 1061,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScanProfileTestCase.client": {
            "name": "client",
            "location": 1079,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScanProfileTestCase.prof_result": {
            "name": "prof_result",
            "location": 1084,
            "return": [
                "BytesIO"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "dict[, ]",
                    "str"
                ],
                "prettyprint": [
                    "dict[, ]",
                    "str"
                ],
                "close_elements": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "ScanProfileTestCase.test_scanProfile": {
            "name": "test_scanProfile",
            "location": 1113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScanProfileTestCase.test_scanProfileNoResult": {
            "name": "test_scanProfileNoResult",
            "location": 1140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScanProfileTestCase.testQueueScanResponse": {
            "name": "testQueueScanResponse",
            "location": 1150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadScanResponseTestCase.client": {
            "name": "client",
            "location": 1182,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadScanResponseTestCase.testReadScanResponse": {
            "name": "testReadScanResponse",
            "location": 1185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollateScanResultsTestCase.testCollateScanResults": {
            "name": "testCollateScanResults",
            "location": 1270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerifyStatusTestCase.test_verify_status": {
            "name": "test_verify_status",
            "location": 1302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AcctIsActiveTestCase.testAcctIsActive": {
            "name": "testAcctIsActive",
            "location": 1323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExtractSignonInfosTestCase.client": {
            "name": "client",
            "location": 1346,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExtractSignonInfosTestCase.testExtractSignonInfos": {
            "name": "testExtractSignonInfos",
            "location": 1349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExtractAcctInfosTestCase.client": {
            "name": "client",
            "location": 1377,
            "return": [
                "OFXClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExtractAcctInfosTestCase.test_extract_acctinfos": {
            "name": "test_extract_acctinfos",
            "location": 1380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FiIndexTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 1406,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bytes",
                    "typing.Type",
                    "float",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "FiIndexTestCase.testFiIndex": {
            "name": "testFiIndex",
            "location": 1414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FiIndexTestCase.testListFisNoServer": {
            "name": "testListFisNoServer",
            "location": 1422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FiIndexTestCase.testListFisWithUnknownServer": {
            "name": "testListFisWithUnknownServer",
            "location": 1429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FiIndexTestCase.testListFisWithKnownServer": {
            "name": "testListFisWithKnownServer",
            "location": 1434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SavePasswdTestCase.testSavePasswdDryRun": {
            "name": "testSavePasswdDryRun",
            "location": 1443,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SavePasswdTestCase.testSavePasswdEmptyPassword": {
            "name": "testSavePasswdEmptyPassword",
            "location": 1447,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SavePasswdTestCase.testSavePasswdNoKeyring": {
            "name": "testSavePasswdNoKeyring",
            "location": 1451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainTestCase.testMain": {
            "name": "testMain",
            "location": 1468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainTestCase.testMain._merge_config": {
            "name": "_merge_config",
            "location": 1473,
            "return": [
                "dict[typing.Text, typing.Union[int,typing.Text]]"
            ],
            "arguments": {}
        }
    },
    "ofxtools-master/tests/test_ofxhome.py": {
        "ListInstitutionsTestCase.test": {
            "name": "test",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LookupTestCase.test": {
            "name": "test",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_parser.py": {
        "TreeBuilderRegexTestCase.setUp": {
            "name": "setUp",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.tearDown": {
            "name": "tearDown",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase._parsetag": {
            "name": "_parsetag",
            "location": 36,
            "return": [
                "TagParseResults"
            ],
            "arguments": {
                "self": [],
                "markup": []
            }
        },
        "TreeBuilderRegexTestCase.test_sgml_tag": {
            "name": "test_sgml_tag",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_sgml_endtag": {
            "name": "test_sgml_endtag",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_xml_tag": {
            "name": "test_xml_tag",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_xml_mismatched_endtag": {
            "name": "test_xml_mismatched_endtag",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_xml_selfclosing_tag": {
            "name": "test_xml_selfclosing_tag",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_cdata": {
            "name": "test_cdata",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_cdata_closing_tag": {
            "name": "test_cdata_closing_tag",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_cdata_spaces_after": {
            "name": "test_cdata_spaces_after",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_cdata_spaces_before": {
            "name": "test_cdata_spaces_before",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_cdata_html": {
            "name": "test_cdata_html",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_finditer_sgml": {
            "name": "test_finditer_sgml",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderRegexTestCase.test_finditer_xml": {
            "name": "test_finditer_xml",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.setUp": {
            "name": "setUp",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.tearDown": {
            "name": "tearDown",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_groomstring": {
            "name": "test_groomstring",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_start_agg": {
            "name": "test_start_agg",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_empty_aggV2": {
            "name": "test_empty_aggV2",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_elemV1": {
            "name": "test_elemV1",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_elemV2": {
            "name": "test_elemV2",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_feedmatch_empty_tag": {
            "name": "test_feedmatch_empty_tag",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_feedmatch_tag_mismatch": {
            "name": "test_feedmatch_tag_mismatch",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_feedmatch_start": {
            "name": "test_feedmatch_start",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_feedmatch_end": {
            "name": "test_feedmatch_end",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_feedmatch_end_tail": {
            "name": "test_feedmatch_end_tail",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_close_tail": {
            "name": "test_close_tail",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitTestCase.test_open_tail": {
            "name": "test_open_tail",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase._testElement": {
            "name": "_testElement",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [],
                "tag": [],
                "text": [],
                "length": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase._testFeedSonrs": {
            "name": "_testFeedSonrs",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase.testFeedClosedTagsWhitespace": {
            "name": "testFeedClosedTagsWhitespace",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase.testFeedUnclosedTagsWhitespace": {
            "name": "testFeedUnclosedTagsWhitespace",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase.testFeedClosedTagsNoWhitespace": {
            "name": "testFeedClosedTagsNoWhitespace",
            "location": 363,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase.testFeedUnclosedTagsNoWhitespace": {
            "name": "testFeedUnclosedTagsNoWhitespace",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TreeBuilderUnitFunctionalTestCase.testCdata": {
            "name": "testCdata",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.setUp": {
            "name": "setUp",
            "location": 489,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.tearDown": {
            "name": "tearDown",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_parse": {
            "name": "test_parse",
            "location": 495,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_read_filename": {
            "name": "test_read_filename",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_read_file": {
            "name": "test_read_file",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_read_not_bytes": {
            "name": "test_read_not_bytes",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_read_byteslike": {
            "name": "test_read_byteslike",
            "location": 556,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_read_illegal": {
            "name": "test_read_illegal",
            "location": 571,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_convert": {
            "name": "test_convert",
            "location": 576,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OFXTreeTestCase.test_convert_unparsed": {
            "name": "test_convert_unparsed",
            "location": 586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_spec_bank.py": {
        "Example1RequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example1ResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 172,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example2RequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 257,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example2ResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 326,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example3RequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 384,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example3ResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 454,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4RequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 521,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4ResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 600,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4SyncRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 661,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4SyncResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 732,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4RecsyncRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 796,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4RecsyncResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 858,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4NextSyncRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 909,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Example4NextSyncResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1070,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_spec_billpay.py": {
        "PaymentRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 111,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PaymentResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 208,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PayeeidRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 296,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PayeeidResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 380,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtmodAmountRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 461,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtmodAmountResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 539,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtmodDateRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 615,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtmodDateResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 693,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtcancRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 756,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtcancResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 807,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtinqRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 852,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtinqResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 908,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 978,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1066,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtmodRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 1149,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtmodResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1233,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtcancRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 1295,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RecpmtcancResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1348,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PayeeRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 1404,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PayeeResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1480,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtsyncRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 1550,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PmtsyncResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 1636,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "ofxtools-master/tests/test_spec_invest.py": {
        "InvstmtRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 102,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "InvstmtResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 323,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inc401kRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 523,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "Inc401kResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 751,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_spec_signon.py": {
        "PinchRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 41,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PinchResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 67,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "ExtraCredentialsRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 102,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "NeedsAuthtokenRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 153,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "NeedsAuthtokenResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 197,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "HasAuthtokenRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 243,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "HasAuthtokenResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 289,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "NeedsMfachallengeRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 333,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "NeedsMfachallengeResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 427,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "MfachallengeResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 500,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "HasMfachallengeaRequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 567,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "HasMfachallengeaResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 617,
            "return": [],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ofxtools-master/tests/test_spec_tax1099.py": {
        "Tax1099BTestCase.aggregate": {
            "name": "aggregate",
            "location": 171,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FidirectdepositinfoTestCase.aggregate": {
            "name": "aggregate",
            "location": 356,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Tax1099RequestTestCase.aggregate": {
            "name": "aggregate",
            "location": 422,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Tax1099ResponseDeniedTestCase.aggregate": {
            "name": "aggregate",
            "location": 476,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Tax1099ResponseTestCase.aggregate": {
            "name": "aggregate",
            "location": 579,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "ofxtools-master/tests/test_types.py": {
        "ElementTestCase.testInit": {
            "name": "testInit",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementTestCase.testConvert": {
            "name": "testConvert",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementTestCase.testRepr": {
            "name": "testRepr",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.test_required": {
            "name": "test_required",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.test_optional": {
            "name": "test_optional",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BoolTestCase.test_convert": {
            "name": "test_convert",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BoolTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BoolTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BoolTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_convert": {
            "name": "test_convert",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_unescape": {
            "name": "test_unescape",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_max_length": {
            "name": "test_max_length",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_empty_string": {
            "name": "test_empty_string",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NagstringTestCase.test_max_length": {
            "name": "test_max_length",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NagstringTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneOfTestCase.test_convert": {
            "name": "test_convert",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneOfTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneOfTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OneOfTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegerTestCase.test_convert": {
            "name": "test_convert",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegerTestCase.test_max_length": {
            "name": "test_max_length",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegerTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegerTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegerTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_convert": {
            "name": "test_convert",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_scale": {
            "name": "test_scale",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_euro_decimal_separator": {
            "name": "test_euro_decimal_separator",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_illegal": {
            "name": "test_illegal",
            "location": 370,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecimalTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestingTimezone.__init__": {
            "name": "__init__",
            "location": 416,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "offset": []
            }
        },
        "TestingTimezone.utcoffset": {
            "name": "utcoffset",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "dst": []
            }
        },
        "TestingTimezone.dst": {
            "name": "dst",
            "location": 423,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dst": []
            }
        },
        "TestingTimezone.tzname": {
            "name": "tzname",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "dst": []
            }
        },
        "DateTimeTestCase.test_convert": {
            "name": "test_convert",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_convert_illegal": {
            "name": "test_convert_illegal",
            "location": 465,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_unconvert_round_microseconds": {
            "name": "test_unconvert_round_microseconds",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_unconvert_illegal": {
            "name": "test_unconvert_illegal",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DateTimeTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_convert": {
            "name": "test_convert",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_convert_illegal": {
            "name": "test_convert_illegal",
            "location": 587,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_unconvert": {
            "name": "test_unconvert",
            "location": 627,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_unconvert_round_microseconds": {
            "name": "test_unconvert_round_microseconds",
            "location": 638,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_unconvert_illegal": {
            "name": "test_unconvert_illegal",
            "location": 651,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_convert_roundtrip": {
            "name": "test_convert_roundtrip",
            "location": 665,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeTestCase.test_unconvert_roundtrip": {
            "name": "test_unconvert_roundtrip",
            "location": 671,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ofxtools-master/tests/test_utils.py": {
        "FixpathTestCase.test_all": {
            "name": "test_all",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CusipTestCase.test_cusip_checksum": {
            "name": "test_cusip_checksum",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CusipTestCase.test_validate_cusip": {
            "name": "test_validate_cusip",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CusipTestCase.test_cusip2isin": {
            "name": "test_cusip2isin",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CusipTestCase.test_cusip2isin_invalid_isin": {
            "name": "test_cusip2isin_invalid_isin",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CusipTestCase.test_cusip2isin_invalid_nation": {
            "name": "test_cusip2isin_invalid_nation",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IsinTestCase.test_isin_checksum": {
            "name": "test_isin_checksum",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IsinTestCase.test_validate_isin": {
            "name": "test_validate_isin",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SedolTestCase.test_sedol_checksum": {
            "name": "test_sedol_checksum",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SedolTestCase.test_sedol2isin": {
            "name": "test_sedol2isin",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UtcTestCase.datetime": {
            "name": "datetime",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UtcTestCase.testUTC": {
            "name": "testUTC",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
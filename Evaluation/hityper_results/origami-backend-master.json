{
    "origami-backend-master/run.py": {},
    "origami-backend-master/origami/app_logging.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 6,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ],
                "level": []
            }
        }
    },
    "origami-backend-master/origami/db_utils.py": {
        "insert_dummy_data": {
            "name": "insert_dummy_data",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "engine": [
                    "None"
                ]
            }
        },
        "clean_database": {
            "name": "clean_database",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "engine": [
                    "None"
                ]
            }
        }
    },
    "origami-backend-master/origami/main_app.py": {
        "get_engine": {
            "name": "get_engine",
            "location": 19,
            "return": [],
            "arguments": {
                "memory": [
                    "bool"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 37,
            "return": [],
            "arguments": {
                "db_engine": [
                    "str",
                    "dict[, ]",
                    "bool",
                    "set[str]",
                    "None"
                ],
                "secret_key": [
                    "str",
                    "bytes",
                    "list[str]",
                    "dict[str, typing.Union[str,int,bool]]"
                ],
                "jwt_issuer": [
                    "typing.Text"
                ]
            }
        }
    },
    "origami-backend-master/origami/__init__.py": {},
    "origami-backend-master/origami/db/administrator_dao.py": {
        "AdministratorDao.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ],
                "email": [
                    "bool",
                    "typing.Iterable[str]",
                    "str"
                ],
                "password": [
                    "bool",
                    "typing.Iterable[str]",
                    "str"
                ]
            }
        },
        "AdministratorDao.as_dict": {
            "name": "as_dict",
            "location": 24,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdministratorDao.as_validation_dict": {
            "name": "as_validation_dict",
            "location": 34,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdministratorDao.as_safe_dict": {
            "name": "as_safe_dict",
            "location": 39,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdministratorDao.get_by_id": {
            "name": "get_by_id",
            "location": 48,
            "return": [],
            "arguments": {
                "cls": [],
                "admin_id": [
                    "int",
                    "str",
                    "bytes"
                ],
                "session": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "AdministratorDao.get_by_email_and_password": {
            "name": "get_by_email_and_password",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "dict[str, str]"
                ],
                "admin_email": [
                    "str",
                    "None",
                    "dict[str, str]"
                ],
                "admin_pass": [
                    "str",
                    "None",
                    "dict[str, str]"
                ],
                "session": [
                    "str",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "AdministratorDao.validate": {
            "name": "validate",
            "location": 69,
            "return": [],
            "arguments": {
                "cls": [],
                "admin_email": [
                    "int",
                    "dict[, ]",
                    "None"
                ],
                "session": [
                    "int",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "AdministratorDao.__repr__": {
            "name": "__repr__",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/base_dao.py": {
        "BaseDao.__tablename__": {
            "name": "__tablename__",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "BaseDao.as_dict": {
            "name": "as_dict",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseDao.save": {
            "name": "save",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "BaseDao.get_all": {
            "name": "get_all",
            "location": 50,
            "return": [
                "list[]",
                "set[str]",
                "list[str]",
                "dict[int, list[int]]",
                "typing.Type",
                "dict[typing.Any, int]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "session": [
                    "str"
                ]
            }
        },
        "BaseDao.get_one": {
            "name": "get_one",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[str]",
                    "str",
                    "None"
                ],
                "query": []
            }
        },
        "BaseDao.__repr__": {
            "name": "__repr__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/ending_dao.py": {
        "EndingDao.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "played_story_id": [
                    "bytes",
                    "int",
                    "typing.Mapping",
                    "str",
                    "dict[str, int]"
                ],
                "text": [
                    "str",
                    "bytes",
                    "bool"
                ]
            }
        },
        "EndingDao.as_dict": {
            "name": "as_dict",
            "location": 21,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EndingDao.get_by_id": {
            "name": "get_by_id",
            "location": 30,
            "return": [],
            "arguments": {
                "cls": [],
                "ending_id": [
                    "int",
                    "str"
                ],
                "session": [
                    "int",
                    "str"
                ]
            }
        },
        "EndingDao.get_by_played_story_id": {
            "name": "get_by_played_story_id",
            "location": 37,
            "return": [],
            "arguments": {
                "cls": [],
                "story_id": [
                    "int",
                    "list[int]",
                    "None"
                ],
                "session": [
                    "int",
                    "list[int]",
                    "None"
                ]
            }
        },
        "EndingDao.get_list": {
            "name": "get_list",
            "location": 44,
            "return": [
                "dict[, ]",
                "str",
                "None",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "cls": [],
                "session": []
            }
        },
        "EndingDao.__repr__": {
            "name": "__repr__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/media_dao.py": {
        "MediaDao.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "media_type": [
                    "str"
                ],
                "media_name": [
                    "str",
                    "None"
                ],
                "url": [
                    "typing.Type",
                    "typing.Sequence[dict[str, str]]",
                    "int"
                ]
            }
        },
        "MediaDao.as_dict": {
            "name": "as_dict",
            "location": 48,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediaDao.get_by_id_and_type": {
            "name": "get_by_id_and_type",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "media_id": [
                    "int",
                    "str"
                ],
                "media_type": [
                    "str",
                    "None",
                    "dict[, ]"
                ],
                "session": [
                    "int",
                    "str"
                ]
            }
        },
        "MediaDao.get_by_name_and_type": {
            "name": "get_by_name_and_type",
            "location": 70,
            "return": [],
            "arguments": {
                "cls": [],
                "media_name": [
                    "str",
                    "None"
                ],
                "media_type": [
                    "str"
                ],
                "session": [
                    "str",
                    "None"
                ]
            }
        },
        "MediaDao.get_list": {
            "name": "get_list",
            "location": 82,
            "return": [
                "dict[, ]",
                "str",
                "None",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "cls": [],
                "session": []
            }
        },
        "MediaDao.get_list_by_type": {
            "name": "get_list_by_type",
            "location": 88,
            "return": [
                "dict[str, str]",
                "list[str]"
            ],
            "arguments": {
                "cls": [
                    "typing.Sequence[dict[str, typing.Any]]",
                    "int"
                ],
                "media_type": [
                    "str",
                    "BaseException",
                    "None",
                    "typing.Type"
                ],
                "session": [
                    "dict[str, typing.Any]",
                    "typing.Type",
                    "Exception",
                    "str"
                ]
            }
        },
        "MediaDao.__repr__": {
            "name": "__repr__",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/media_type.py": {},
    "origami-backend-master/origami/db/meta.py": {},
    "origami-backend-master/origami/db/node_dao.py": {
        "NodeDao.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "NodeDao.as_dict": {
            "name": "as_dict",
            "location": 20,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NodeDao.save": {
            "name": "save",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "NodeDao.get_by_id": {
            "name": "get_by_id",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "list[int]"
                ],
                "node_id": [
                    "int",
                    "list[int]"
                ],
                "session": [
                    "int",
                    "list[int]"
                ]
            }
        },
        "NodeDao.get_list": {
            "name": "get_list",
            "location": 45,
            "return": [
                "list[str]",
                "dict[str, str]"
            ],
            "arguments": {
                "cls": [],
                "session": []
            }
        },
        "NodeDao.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/played_choices_dao.py": {
        "PlayedChoicesDao.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "story_id": [
                    "str",
                    "int",
                    "None"
                ],
                "choice_number": [
                    "int",
                    "str"
                ],
                "node_id": [
                    "str",
                    "int"
                ]
            }
        },
        "PlayedChoicesDao.as_dict": {
            "name": "as_dict",
            "location": 23,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedChoicesDao.save": {
            "name": "save",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "PlayedChoicesDao.get_by_id": {
            "name": "get_by_id",
            "location": 36,
            "return": [
                "int",
                "str",
                "set[]",
                "dict[str, str]",
                "set[int]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "None"
                ],
                "story_id": [
                    "int",
                    "None"
                ],
                "session": [
                    "int",
                    "None"
                ]
            }
        },
        "PlayedChoicesDao.get_list": {
            "name": "get_list",
            "location": 42,
            "return": [
                "dict[, ]",
                "str",
                "None",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "cls": [],
                "session": []
            }
        },
        "PlayedChoicesDao.__repr__": {
            "name": "__repr__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/played_story_dao.py": {
        "PlayedStoryDao.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "PlayedStoryDao.as_dict": {
            "name": "as_dict",
            "location": 19,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedStoryDao.get_by_id": {
            "name": "get_by_id",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "played_story_id": [
                    "int",
                    "str"
                ],
                "session": [
                    "int",
                    "str"
                ]
            }
        },
        "PlayedStoryDao.get_list": {
            "name": "get_list",
            "location": 34,
            "return": [
                "dict[, ]",
                "dict[str, set[str]]",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "session": [
                    "str"
                ]
            }
        },
        "PlayedStoryDao.__repr__": {
            "name": "__repr__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/player_dao.py": {
        "PlayerDao.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "age": [
                    "int",
                    "str",
                    "typing.Sequence[]",
                    "None"
                ],
                "gender": [
                    "str",
                    "int"
                ]
            }
        },
        "PlayerDao.as_dict": {
            "name": "as_dict",
            "location": 30,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerDao.get_by_id": {
            "name": "get_by_id",
            "location": 40,
            "return": [],
            "arguments": {
                "cls": [],
                "player_id": [
                    "int",
                    "str",
                    "bytes"
                ],
                "session": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "PlayerDao.get_by_profile": {
            "name": "get_by_profile",
            "location": 48,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [
                    "str",
                    "dict[, ]",
                    "int",
                    "None"
                ],
                "age": [
                    "str",
                    "dict[, ]",
                    "int",
                    "None"
                ],
                "gender": [
                    "str",
                    "dict[, ]",
                    "int",
                    "None"
                ],
                "session": [
                    "str",
                    "dict[, ]",
                    "int",
                    "None"
                ]
            }
        },
        "PlayerDao.get_list": {
            "name": "get_list",
            "location": 57,
            "return": [
                "dict[, ]",
                "str",
                "None",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any]]"
            ],
            "arguments": {
                "cls": [],
                "session": []
            }
        },
        "PlayerDao.__repr__": {
            "name": "__repr__",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/db/player_gender.py": {},
    "origami-backend-master/origami/db/__init__.py": {},
    "origami-backend-master/origami/middleware/authentication.py": {
        "JwtAuthBackend.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "secret_key": [
                    "dict[, ]",
                    "dict[str, str]",
                    "list[]"
                ],
                "user_loader": [
                    "str",
                    "int",
                    "float"
                ],
                "auth_header_prefix": [
                    "str"
                ],
                "issuer": [
                    "str",
                    "list[str]"
                ],
                "verify_claims": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "JwtAuthBackend.authenticate": {
            "name": "authenticate",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "token": [
                    "dict[, ]",
                    "str",
                    "int",
                    "tuple[typing.Union[str,str]]",
                    "list[dict[, ]]"
                ],
                "session": [
                    "str"
                ]
            }
        },
        "SessionedAuthMiddleware.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "backend": [
                    "str"
                ],
                "auth_header_prefix": [
                    "typing.Text"
                ],
                "exempt_routes": [
                    "None",
                    "list[str]",
                    "str",
                    "int"
                ],
                "exempt_methods": [
                    "None",
                    "list[str]",
                    "str",
                    "int"
                ]
            }
        },
        "SessionedAuthMiddleware.get_auth_token": {
            "name": "get_auth_token",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "req": [
                    "dict[str, str]",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "SessionedAuthMiddleware.process_resource": {
            "name": "process_resource",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "dict[, ]"
                ],
                "resp": [
                    "list[]",
                    "bool"
                ],
                "resource": [
                    "str",
                    "dict[str, str]",
                    "typing.Callable[..., T]"
                ],
                "params": [
                    "list[]",
                    "bool"
                ]
            }
        }
    },
    "origami-backend-master/origami/middleware/db_session_manager.py": {
        "SQLAlchemySessionManager.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "str",
                    "list[str]",
                    "typing.Sequence[str]",
                    "bool"
                ]
            }
        },
        "SQLAlchemySessionManager.process_resource": {
            "name": "process_resource",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "list[]",
                    "bool"
                ],
                "resp": [
                    "list[]",
                    "bool"
                ],
                "resource": [
                    "dict[str, str]",
                    "None"
                ],
                "params": [
                    "list[]",
                    "bool"
                ]
            }
        },
        "SQLAlchemySessionManager.process_response": {
            "name": "process_response",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "bool"
                ],
                "resp": [
                    "str",
                    "bool"
                ],
                "resource": [
                    "str",
                    "None"
                ],
                "req_succeeded": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "origami-backend-master/origami/middleware/__init__.py": {},
    "origami-backend-master/origami/resources/accounts.py": {
        "Item.on_get": {
            "name": "on_get",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "list[str]",
                    "str"
                ],
                "resp": [
                    "str",
                    "int"
                ],
                "user_id": [
                    "int",
                    "str",
                    "list[int]"
                ]
            }
        },
        "Collection.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "secret_key": [
                    "str",
                    "bytes",
                    "int",
                    "typing.MutableMapping",
                    "dict[, ]"
                ],
                "issuer": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "Collection.on_post": {
            "name": "on_post",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "resp": [
                    "int"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/ending.py": {
        "Item.on_get": {
            "name": "on_get",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "dict[, ]",
                    "str"
                ],
                "resp": [
                    "int",
                    "str"
                ],
                "ending_id": [
                    "int",
                    "list[tuple[typing.Union[int,int]]]",
                    "str",
                    "None"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/login_admin.py": {
        "Item.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "secret_key": [
                    "str",
                    "bytes",
                    "int",
                    "typing.MutableMapping",
                    "dict[, ]"
                ],
                "issuer": [
                    "int",
                    "str",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "Item.on_post": {
            "name": "on_post",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "int",
                    "dict[, ]",
                    "None"
                ],
                "resp": []
            }
        }
    },
    "origami-backend-master/origami/resources/media.py": {
        "Item.on_get": {
            "name": "on_get",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "None",
                    "typing.Iterable[str]",
                    "typing.Callable[[], None]"
                ],
                "resp": [
                    "int",
                    "str"
                ],
                "media_type": [
                    "str",
                    "None",
                    "int",
                    "list[\"custom_index\"]"
                ],
                "media_id": [
                    "str",
                    "None",
                    "int",
                    "list[\"custom_index\"]"
                ]
            }
        },
        "TypeCollection.on_get": {
            "name": "on_get",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "typing.Type",
                    "list[dict[, ]]",
                    "bool",
                    "None"
                ],
                "resp": [
                    "int",
                    "None",
                    "float"
                ],
                "media_type": [
                    "list[str]",
                    "None",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/node.py": {
        "Item.on_get": {
            "name": "on_get",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "dict[, ]"
                ],
                "resp": [
                    "int",
                    "None",
                    "bytes"
                ],
                "node_id": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/played_story.py": {
        "compose_json": {
            "name": "compose_json",
            "location": 16,
            "return": [
                "dict[typing.Text, typing.Union[list[],list[T],list[float],str,int]]"
            ],
            "arguments": {
                "story": [
                    "list[]",
                    "list[T]",
                    "list[float]",
                    "str",
                    "int"
                ],
                "player": [
                    "list[]",
                    "list[T]",
                    "list[float]",
                    "str",
                    "int"
                ],
                "choices": [
                    "list[]",
                    "list[T]",
                    "list[float]",
                    "str",
                    "int"
                ],
                "ending": [
                    "list[]",
                    "list[T]",
                    "list[float]",
                    "str",
                    "int"
                ]
            }
        },
        "find_elements": {
            "name": "find_elements",
            "location": 26,
            "return": [],
            "arguments": {
                "story_id": [
                    "str",
                    "int"
                ],
                "session": [
                    "int",
                    "str",
                    "list[int]",
                    "None"
                ]
            }
        },
        "Item.on_get": {
            "name": "on_get",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "dict[, ]",
                    "str"
                ],
                "resp": [
                    "int",
                    "str"
                ],
                "story_id": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "Collection.on_post": {
            "name": "on_post",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "str",
                    "int",
                    "dict[, ]",
                    "None"
                ],
                "resp": [
                    "str"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/player.py": {
        "Item.on_get": {
            "name": "on_get",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "dict[, ]",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "set[int]"
                ],
                "player_id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "str"
                ],
                "resp": [
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "origami-backend-master/origami/resources/sessioned_resource.py": {
        "SessionedResource.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/resources/__init__.py": {},
    "origami-backend-master/origami/story_persistence/story_tree.py": {
        "Story.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Story.read_story_tree": {
            "name": "read_story_tree",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json_file_name": [
                    "str"
                ]
            }
        },
        "Story.insert_story_db": {
            "name": "insert_story_db",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Story.insert_nodes_media": {
            "name": "insert_nodes_media",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parsed_story": [
                    "tuple[]"
                ],
                "session": [
                    "dict[str, object]",
                    "str"
                ]
            }
        }
    },
    "origami-backend-master/origami/story_persistence/__init__.py": {},
    "origami-backend-master/origami/tests/accounts_test.py": {
        "AccountsTestCase.test_get_all_accounts": {
            "name": "test_get_all_accounts",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountsTestCase.test_get_account": {
            "name": "test_get_account",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountsTestCase.test_get_player_nonexistent": {
            "name": "test_get_player_nonexistent",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountsTestCase.test_authorization_ok": {
            "name": "test_authorization_ok",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountsTestCase.test_authorization_failed": {
            "name": "test_authorization_failed",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/base_test_class.py": {
        "OrigamiTestCase.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OrigamiTestCase.tearDown": {
            "name": "tearDown",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OrigamiTestCase.create_test_db": {
            "name": "create_test_db",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "engine": [
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "list[int]",
                    "list[str]"
                ]
            }
        },
        "OrigamiTestCase.clean_test_db": {
            "name": "clean_test_db",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "engine": [
                    "None",
                    "int",
                    "float",
                    "tuple[]",
                    "tuple[typing.Union[str,str,str]]"
                ]
            }
        }
    },
    "origami-backend-master/origami/tests/endings_test.py": {
        "EndingsTestCase.test_get_endings_list": {
            "name": "test_get_endings_list",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EndingsTestCase.test_get_ending": {
            "name": "test_get_ending",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EndingsTestCase.test_get_ending_nonexistent": {
            "name": "test_get_ending_nonexistent",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/login_test.py": {
        "LoginTestCase.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginTestCase.test_confirm_login": {
            "name": "test_confirm_login",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginTestCase.test_refuse_login": {
            "name": "test_refuse_login",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/medias_test.py": {
        "MediasTestCase.test_get_medias_list": {
            "name": "test_get_medias_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediasTestCase.test_get_media_types": {
            "name": "test_get_media_types",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediasTestCase.test_get_media": {
            "name": "test_get_media",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediasTestCase.test_get_media_nonexistent": {
            "name": "test_get_media_nonexistent",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/nodes_test.py": {
        "NodesTestCase.test_get_nodes_list": {
            "name": "test_get_nodes_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NodesTestCase.test_get_node": {
            "name": "test_get_node",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NodesTestCase.test_get_node_nonexistent": {
            "name": "test_get_node_nonexistent",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/played_stories_test.py": {
        "PlayedStoriesTestCase.test_get_playerd_stories_list": {
            "name": "test_get_playerd_stories_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedStoriesTestCase.test_get_played_story": {
            "name": "test_get_played_story",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedStoriesTestCase.test_get_played_story_nonexistent": {
            "name": "test_get_played_story_nonexistent",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedStoriesTestCase.test_post_played_story": {
            "name": "test_post_played_story",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayedStoriesTestCase.test_post_played_story_new_player": {
            "name": "test_post_played_story_new_player",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/players_test.py": {
        "PlayersTestCase.test_get_players_list": {
            "name": "test_get_players_list",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayersTestCase.test_get_player": {
            "name": "test_get_player",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayersTestCase.test_get_player_nonexistent": {
            "name": "test_get_player_nonexistent",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/story_test.py": {
        "StoryTestCase.test_node_insertion": {
            "name": "test_node_insertion",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "origami-backend-master/origami/tests/__init__.py": {}
}
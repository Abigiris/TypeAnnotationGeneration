{
    "oz-property-parser-master/oz_property_parser/archive_mgr.py": {
        "_unzip": {
            "name": "_unzip",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "dest_dir": [
                    "str",
                    "bool",
                    "dict[int, bool]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "file_is_archive": {
            "name": "file_is_archive",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "extract": {
            "name": "extract",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ],
                "dest_dir": [
                    "str"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oz-property-parser-master/oz_property_parser/db_store.py": {
        "insert_bulk_sales_data": {
            "name": "insert_bulk_sales_data",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "data_dic": [
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "SqliteForeignKeysListener.connect": {
            "name": "connect",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbapi_con": [],
                "con_record": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "SqliteDb.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": [
                    "str"
                ]
            }
        },
        "SqliteDb.__enter__": {
            "name": "__enter__",
            "location": 66,
            "return": [
                "SqliteDb"
            ],
            "arguments": {
                "self": []
            }
        },
        "SqliteDb.__exit__": {
            "name": "__exit__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "SqliteDb.create": {
            "name": "create",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sales_data_columns": [
                    "str",
                    "dict[str, typing.Union[str,typing.Any]]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "SqliteDb.session_scope": {
            "name": "session_scope",
            "location": 89,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataManager.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "str",
                    "list[str]",
                    "typing.Sequence[str]",
                    "bool"
                ],
                "commit_max": [
                    "int"
                ]
            }
        },
        "DataManager.__enter__": {
            "name": "__enter__",
            "location": 115,
            "return": [
                "DataManager"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataManager.__exit__": {
            "name": "__exit__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "DataManager.add_scanned_file": {
            "name": "add_scanned_file",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scanned_file": [
                    "typing.Iterator",
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "DataManager.find_scanned_file": {
            "name": "find_scanned_file",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "size": [
                    "int",
                    "str"
                ],
                "checksum": [
                    "int",
                    "str"
                ]
            }
        },
        "DataManager.add_property_list": {
            "name": "add_property_list",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "property_list": []
            }
        },
        "DataManager.commit": {
            "name": "commit",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oz-property-parser-master/oz_property_parser/project_logger.py": {
        "setup_logger": {
            "name": "setup_logger",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "log_file_path": [
                    "str",
                    "bool",
                    "list[tuple[typing.Union[int,str]]]"
                ]
            }
        },
        "test_logging": {
            "name": "test_logging",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oz-property-parser-master/oz_property_parser/property_data_extractor.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "validate_args": {
            "name": "validate_args",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "file_size": {
            "name": "file_size",
            "location": 37,
            "return": [],
            "arguments": {
                "file_path": [
                    "str",
                    "None"
                ]
            }
        },
        "checksum_adler32": {
            "name": "checksum_adler32",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "setup_scanned_file": {
            "name": "setup_scanned_file",
            "location": 52,
            "return": [],
            "arguments": {
                "sql_data_manager": [],
                "file_path": [
                    "str"
                ],
                "extracted_from": [
                    "None",
                    "dict[str, str]",
                    "typing.IO",
                    "typing.TextIO",
                    "str",
                    "bool"
                ]
            }
        },
        "write_property_to_sql": {
            "name": "write_property_to_sql",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "sql_data_manager": [
                    "dict[, ]",
                    "list[]"
                ],
                "property_file": []
            }
        },
        "get_csv_keys": {
            "name": "get_csv_keys",
            "location": 76,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "write_property_to_csv": {
            "name": "write_property_to_csv",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "csv_path": [
                    "str"
                ],
                "property_file": []
            }
        },
        "parse_path": {
            "name": "parse_path",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "sql_data_manager": [],
                "path": [
                    "str"
                ],
                "csv_path": [
                    "str",
                    "tuple[str]",
                    "bool",
                    "dict[str, str]"
                ],
                "parent_file_id": [
                    "None",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oz-property-parser-master/oz_property_parser/property_definitions_nsw.py": {
        "get_district_from_code": {
            "name": "get_district_from_code",
            "location": 294,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "district_code": [
                    "int"
                ]
            }
        },
        "get_zone_from_old_code": {
            "name": "get_zone_from_old_code",
            "location": 307,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "zone_code": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_zone_from_new_code": {
            "name": "get_zone_from_new_code",
            "location": 320,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "zone_code": [
                    "str",
                    "int"
                ]
            }
        },
        "get_type_from_new_zone_code": {
            "name": "get_type_from_new_zone_code",
            "location": 333,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "zone_code": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "oz-property-parser-master/oz_property_parser/property_file_manager.py": {
        "get_property_file_from_path": {
            "name": "get_property_file_from_path",
            "location": 18,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "file_can_be_parsed": {
            "name": "file_can_be_parsed",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "oz-property-parser-master/oz_property_parser/property_parser.py": {
        "convert_date_to_internal": {
            "name": "convert_date_to_internal",
            "location": 173,
            "return": [],
            "arguments": {
                "date_str": [
                    "str"
                ],
                "date_format": [
                    "str"
                ]
            }
        },
        "convert_time_to_internal": {
            "name": "convert_time_to_internal",
            "location": 179,
            "return": [],
            "arguments": {
                "time_str": [
                    "str"
                ],
                "time_format": [
                    "str"
                ]
            }
        },
        "split_str": {
            "name": "split_str",
            "location": 185,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "sep": [
                    "str"
                ]
            }
        },
        "Property.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "list[]",
                    "bool"
                ]
            }
        },
        "Property.parse": {
            "name": "parse",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Property.get_field_dic": {
            "name": "get_field_dic",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Property._keytransform": {
            "name": "_keytransform",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str",
                    "typing.Iterable[str]",
                    "int"
                ]
            }
        },
        "Property.__setitem__": {
            "name": "__setitem__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "Property.__getitem__": {
            "name": "__getitem__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "Property.__iter__": {
            "name": "__iter__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Property.__len__": {
            "name": "__len__",
            "location": 88,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Property.__str__": {
            "name": "__str__",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Property.__delitem__": {
            "name": "__delitem__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "PropertyFile.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "PropertyFile._file_name": {
            "name": "_file_name",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.name_allowed": {
            "name": "name_allowed",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "file_name_candidate": [
                    "str",
                    "bool",
                    "list[typing.Any]"
                ]
            }
        },
        "PropertyFile.create_property_from_line": {
            "name": "create_property_from_line",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        },
        "PropertyFile.line_of_interest": {
            "name": "line_of_interest",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "PropertyFile.parse": {
            "name": "parse",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.get_lines_as_list": {
            "name": "get_lines_as_list",
            "location": 144,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.__iter__": {
            "name": "__iter__",
            "location": 154,
            "return": [
                "PropertyFile"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.__next__": {
            "name": "__next__",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.__len__": {
            "name": "__len__",
            "location": 166,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropertyFile.__getitem__": {
            "name": "__getitem__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "idx": [
                    "str",
                    "tuple[int]",
                    "list[T]",
                    "list[str]",
                    "int"
                ]
            }
        }
    },
    "oz-property-parser-master/oz_property_parser/property_parser_nsw.py": {
        "NswOldProperty.parse": {
            "name": "parse",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "NswOldPropertyFile.create_property_from_line": {
            "name": "create_property_from_line",
            "location": 56,
            "return": [
                "NswOldProperty"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "None"
                ]
            }
        },
        "NswOldPropertyFile.name_allowed": {
            "name": "name_allowed",
            "location": 61,
            "return": [],
            "arguments": {
                "file_name_candidate": [
                    "str",
                    "tuple[str]"
                ]
            }
        },
        "NswOldPropertyFile.line_of_interest": {
            "name": "line_of_interest",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ]
            }
        },
        "NswNewProperty.parse": {
            "name": "parse",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "NswNewPropertyFile.create_property_from_line": {
            "name": "create_property_from_line",
            "location": 125,
            "return": [
                "NswNewProperty"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ]
            }
        },
        "NswNewPropertyFile.name_allowed": {
            "name": "name_allowed",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "file_name_candidate": [
                    "str"
                ]
            }
        },
        "NswNewPropertyFile.line_of_interest": {
            "name": "line_of_interest",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ]
            }
        }
    },
    "oz-property-parser-master/oz_property_parser/__init__.py": {},
    "oz-property-parser-master/tests/test_archive_mgr.py": {
        "test_file_is_archived": {
            "name": "test_file_is_archived",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "archive_name": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_extract_invalid_archive": {
            "name": "test_extract_invalid_archive",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "oz-property-parser-master/tests/test_property_definitions_nsw.py": {
        "test_get_district_from_code": {
            "name": "test_get_district_from_code",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "district_code": [
                    "str",
                    "int",
                    "None"
                ],
                "expected_district": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_get_zone_from_old_code": {
            "name": "test_get_zone_from_old_code",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "zone_code": [
                    "int",
                    "str",
                    "bytes"
                ],
                "expected_zone": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "test_get_type_from_new_zone_code": {
            "name": "test_get_type_from_new_zone_code",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "zone_code": [
                    "dict[str, typing.Any]",
                    "str"
                ],
                "expected_zone_type": [
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "test_get_type_from_new_zone_code_failed": {
            "name": "test_get_type_from_new_zone_code_failed",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "zone_code": [
                    "str"
                ],
                "expected_zone_type": [
                    "str"
                ]
            }
        }
    },
    "oz-property-parser-master/tests/test_property_file_manager.py": {
        "test_get_property_file_from_path": {
            "name": "test_get_property_file_from_path",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "file_name": [
                    "str",
                    "None",
                    "list[str]",
                    "list[]"
                ],
                "property_class": [
                    "bool",
                    "str",
                    "set[str]",
                    "list[str]",
                    "None",
                    "tuple[typing.Union[str,int]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_get_property_file_from_path_invalid": {
            "name": "test_get_property_file_from_path_invalid",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "file_name": [
                    "str"
                ]
            }
        }
    },
    "oz-property-parser-master/tests/test_property_parser.py": {
        "test_ensure_enum_correct": {
            "name": "test_ensure_enum_correct",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_init": {
            "name": "test_property_init",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_parse": {
            "name": "test_property_parse",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_file_init": {
            "name": "test_property_file_init",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_file_name_allowed": {
            "name": "test_property_file_name_allowed",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_file_create_property_from_line": {
            "name": "test_property_file_create_property_from_line",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_property_file_line_of_interest": {
            "name": "test_property_file_line_of_interest",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_convert_date_to_internal": {
            "name": "test_convert_date_to_internal",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "expected_time": [
                    "str"
                ],
                "time": [
                    "str"
                ],
                "time_format": [
                    "str"
                ]
            }
        },
        "test_convert_time_to_internal": {
            "name": "test_convert_time_to_internal",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "expected_date": [
                    "str",
                    "int",
                    "None"
                ],
                "date": [
                    "str",
                    "int",
                    "None"
                ],
                "date_format": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_split_str": {
            "name": "test_split_str",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "expected_list": [
                    "str",
                    "None",
                    "bool"
                ],
                "text": [
                    "str",
                    "None",
                    "bool"
                ],
                "separator": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "oz-property-parser-master/tests/test_property_parser_nsw.py": {
        "test_nsw_old_property_init": {
            "name": "test_nsw_old_property_init",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_old_property_file_init": {
            "name": "test_nsw_old_property_file_init",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_old_property_file_name_allowed": {
            "name": "test_nsw_old_property_file_name_allowed",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_nsw_old_property_file_name_allowed_failed": {
            "name": "test_nsw_old_property_file_name_allowed_failed",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_nsw_old_property_file_create_property_from_line": {
            "name": "test_nsw_old_property_file_create_property_from_line",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_old_property_file_line_of_interest": {
            "name": "test_nsw_old_property_file_line_of_interest",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, typing.Union[int,str]]"
                ]
            }
        },
        "test_nsw_new_property_init": {
            "name": "test_nsw_new_property_init",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_new_property_file_init": {
            "name": "test_nsw_new_property_file_init",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_new_property_file_name_allowed": {
            "name": "test_nsw_new_property_file_name_allowed",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "test_nsw_new_property_file_name_allowed_failed": {
            "name": "test_nsw_new_property_file_name_allowed_failed",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "test_nsw_new_property_file_create_property_from_line": {
            "name": "test_nsw_new_property_file_create_property_from_line",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nsw_new_property_file_line_of_interest": {
            "name": "test_nsw_new_property_file_line_of_interest",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "oz-property-parser-master/tests/__init__.py": {}
}
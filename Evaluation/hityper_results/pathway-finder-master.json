{
    "pathway-finder-master/example.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pathway-finder-master/setup.py": {},
    "pathway-finder-master/__init__.py": {},
    "pathway-finder-master/pathway_finder/app.py": {
        "establish_connnection": {
            "name": "establish_connnection",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "insert_job_number": {
            "name": "insert_job_number",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "job_number": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "insert_job_data": {
            "name": "insert_job_data",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "job_number": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "bool",
                    "bytes"
                ],
                "data": [
                    "str",
                    "typing.Iterable[bytes]",
                    "bytes"
                ]
            }
        },
        "retrieve_info": {
            "name": "retrieve_info",
            "location": 67,
            "return": [],
            "arguments": {
                "job_number": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "send_email": {
            "name": "send_email",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "email": [
                    "str",
                    "int",
                    "float",
                    "bytes",
                    "None"
                ],
                "job_id": [
                    "str",
                    "int"
                ]
            }
        },
        "ping_pong": {
            "name": "ping_pong",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "diagram": {
            "name": "diagram",
            "location": 164,
            "return": [],
            "arguments": {
                "jobnumber": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "allowed_file": {
            "name": "allowed_file",
            "location": 189,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "pathway-finder-master/pathway_finder/finder.py": {
        "ReadFile.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gbfile": [
                    "int",
                    "float"
                ]
            }
        },
        "ReadFile.getGenome": {
            "name": "getGenome",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Finder.__post_init__": {
            "name": "__post_init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Finder.finder": {
            "name": "finder",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Finder.repProcedure": {
            "name": "repProcedure",
            "location": 116,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "items": [
                    "dict[str, typing.Any]",
                    "list[str]"
                ],
                "bp": [
                    "int",
                    "list[]",
                    "list[T]"
                ],
                "coreGene": [
                    "str",
                    "float",
                    "int",
                    "None",
                    "list[]"
                ],
                "similarity": [
                    "str",
                    "float",
                    "int",
                    "None",
                    "list[]"
                ]
            }
        },
        "Finder.flatten": {
            "name": "flatten",
            "location": 142,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "list[]",
                    "str",
                    "set[str]",
                    "list[tuple[typing.Union[str,str]]]",
                    "list[tuple[typing.Union[int,int,typing.Any]]]",
                    "list[str]"
                ]
            }
        }
    },
    "pathway-finder-master/pathway_finder/__init__.py": {},
    "pathway-finder-master/pathway_finder/utils/connector.py": {
        "BioConnect.__post_init__": {
            "name": "__post_init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BioConnect.load": {
            "name": "load",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "accession": [
                    "str",
                    "int"
                ]
            }
        },
        "BioConnect.bioBlast": {
            "name": "bioBlast",
            "location": 68,
            "return": [
                "str",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "seq": [
                    "int",
                    "list[str]",
                    "str"
                ]
            }
        }
    },
    "pathway-finder-master/pathway_finder/utils/form.py": {},
    "pathway-finder-master/pathway_finder/utils/processor.py": {
        "ReadGB.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "genbank": [
                    "str",
                    "typing.IO",
                    "typing.TextIO",
                    "float",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ReadGB.provideOrg": {
            "name": "provideOrg",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReadGB.readfile": {
            "name": "readfile",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Writer.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "genes": []
            }
        },
        "Writer.parse": {
            "name": "parse",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pathway-finder-master/pathway_finder/utils/structures.py": {
        "Organism.info": {
            "name": "info",
            "location": 38,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Gene.keys": {
            "name": "keys",
            "location": 58,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Gene.values": {
            "name": "values",
            "location": 63,
            "return": [
                "Gene"
            ],
            "arguments": {
                "self": []
            }
        },
        "Genome.addGene": {
            "name": "addGene",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gene": [
                    "dict[, ]",
                    "dict[int, int]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Genome.findGene": {
            "name": "findGene",
            "location": 84,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "str",
                    "bool",
                    "typing.Type",
                    "typing.Any",
                    "None",
                    "typing.OrderedDict"
                ]
            }
        },
        "Genome.findCoreGeneBySimilarity": {
            "name": "findCoreGeneBySimilarity",
            "location": 92,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "seq": [
                    "dict[, ]",
                    "str",
                    "typing.OrderedDict",
                    "list[dict[str, typing.Any]]",
                    "int",
                    "float",
                    "complex"
                ],
                "similarity": [
                    "int",
                    "set[]",
                    "str"
                ]
            }
        },
        "Genome.setCore": {
            "name": "setCore",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "bool",
                    "float"
                ]
            }
        },
        "Genome.__setCore__": {
            "name": "__setCore__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "str",
                    "int",
                    "None",
                    "typing.Iterable[typing.Sequence[str]]"
                ]
            }
        },
        "Genome.getCore": {
            "name": "getCore",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Genome.build": {
            "name": "build",
            "location": 115,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "ident": [
                    "str",
                    "dict[str, str]",
                    "list[dict[, ]]"
                ],
                "bp": [
                    "int",
                    "list[L]",
                    "tuple[int]"
                ]
            }
        },
        "Genome.rbuild": {
            "name": "rbuild",
            "location": 126,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "value": [],
                "size": [
                    "str",
                    "bool",
                    "typing.Sequence[typing.Sequence[typing.Any]]",
                    "tuple[typing.Union[float,float]]",
                    "dict[, ]"
                ],
                "bp": [
                    "str",
                    "tuple[typing.Union[str,str,str]]",
                    "list[tuple[typing.Union[int,int]]]",
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "Genome.lbuild": {
            "name": "lbuild",
            "location": 145,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "value": [],
                "size": [
                    "str",
                    "bool",
                    "typing.Sequence[typing.Sequence[typing.Any]]",
                    "tuple[typing.Union[float,float]]",
                    "dict[, ]"
                ],
                "bp": [
                    "str",
                    "tuple[typing.Union[str,str,str]]",
                    "list[tuple[typing.Union[int,int]]]",
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "Genome.buildsimilarity": {
            "name": "buildsimilarity",
            "location": 164,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "list[]",
                    "str",
                    "int",
                    "set[]"
                ],
                "bp": [
                    "list[]",
                    "str",
                    "int",
                    "set[]"
                ]
            }
        },
        "Genome.paths": {
            "name": "paths",
            "location": 171,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "bp": [
                    "int"
                ]
            }
        }
    },
    "pathway-finder-master/pathway_finder/utils/__init__.py": {}
}
{
    "payment-service-master/create_channels.py": {},
    "payment-service-master/generate_funding_address.py": {
        "wrap_error": {
            "name": "wrap_error",
            "location": 16,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[c, typing.Any]"
                ]
            }
        },
        "fund_kin": {
            "name": "fund_kin",
            "location": 27,
            "return": [],
            "arguments": {
                "public_address": [
                    "str",
                    "dict[str, list[str]]",
                    "typing.Sequence[typing.Sequence[T]]",
                    "typing.Mapping"
                ]
            }
        },
        "generate": {
            "name": "generate",
            "location": 35,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        },
        "wrap_error.wrapper": {
            "name": "wrapper",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "payment-service-master/test.py": {
        "test_lock": {
            "name": "test_lock",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_generate_keys": {
            "name": "test_generate_keys",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_channel_rotate": {
            "name": "test_channel_rotate",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_test_generate_channels": {
            "name": "_test_generate_channels",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_from_redis": {
            "name": "test_load_from_redis",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_services": {
            "name": "test_services",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_status": {
            "name": "test_status",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_watching": {
            "name": "test_watching",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_safe_int": {
            "name": "test_safe_int",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_old_new_watchers": {
            "name": "test_old_new_watchers",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "_test_payment_to_burnt": {
            "name": "_test_payment_to_burnt",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_seq": {
            "name": "test_bad_seq",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 201,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        }
    },
    "payment-service-master/watcher.py": {},
    "payment-service-master/worker.py": {
        "rq_error_handler": {
            "name": "rq_error_handler",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "job": [
                    "typing.Type",
                    "str",
                    "None"
                ],
                "exc_type": [
                    "typing.Type",
                    "str",
                    "None"
                ],
                "exc_value": [
                    "typing.Type",
                    "str",
                    "None"
                ],
                "traceback": [
                    "bool",
                    "dict[, ]",
                    "str",
                    "typing.Type"
                ]
            }
        }
    },
    "payment-service-master/payment/app.py": {
        "create_wallet": {
            "name": "create_wallet",
            "location": 18,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "get_wallet": {
            "name": "get_wallet",
            "location": 30,
            "return": [],
            "arguments": {
                "wallet_address": [
                    "dict[str, set[str]]",
                    "str",
                    "dict[, ]",
                    "typing.Sequence[S]",
                    "None"
                ]
            }
        },
        "get_wallet_payments": {
            "name": "get_wallet_payments",
            "location": 37,
            "return": [],
            "arguments": {
                "wallet_address": [
                    "str",
                    "int"
                ]
            }
        },
        "get_payment": {
            "name": "get_payment",
            "location": 50,
            "return": [],
            "arguments": {
                "payment_id": [
                    "str",
                    "int"
                ]
            }
        },
        "pay": {
            "name": "pay",
            "location": 57,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "add_delete_service": {
            "name": "add_delete_service",
            "location": 72,
            "return": [],
            "arguments": {
                "service_id": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "add_delete_address_watcher": {
            "name": "add_delete_address_watcher",
            "location": 90,
            "return": [],
            "arguments": {
                "service_id": [
                    "str",
                    "int"
                ],
                "address": [
                    "str",
                    "int",
                    "None"
                ],
                "payment_id": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "get_watchers": {
            "name": "get_watchers",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "whitelist": {
            "name": "whitelist",
            "location": 117,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "whitelist_submit": {
            "name": "whitelist_submit",
            "location": 127,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "status": {
            "name": "status",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "get_config": {
            "name": "get_config",
            "location": 148,
            "return": [],
            "arguments": {}
        }
    },
    "payment-service-master/payment/blockchain.py": {
        "get_sdk": {
            "name": "get_sdk",
            "location": 131,
            "return": [
                "typing.Generator[Blockchain]"
            ],
            "arguments": {
                "seed": [
                    "str",
                    "int"
                ],
                "app_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Blockchain.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sdk": [
                    "int",
                    "str"
                ],
                "channel": [
                    "int"
                ]
            }
        },
        "Blockchain.create_wallet": {
            "name": "create_wallet",
            "location": 32,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "public_address": [
                    "typing.Callable[, ]",
                    "bool",
                    "list[int]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Blockchain.pay_to": {
            "name": "pay_to",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "public_address": [
                    "str",
                    "typing.Mapping"
                ],
                "amount": [
                    "str"
                ],
                "payment_id": [
                    "str"
                ]
            }
        },
        "Blockchain.submit_transaction": {
            "name": "submit_transaction",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "transaction": [
                    "typing.Type",
                    "str",
                    "bool"
                ]
            }
        },
        "Blockchain.get_wallet": {
            "name": "get_wallet",
            "location": 64,
            "return": [],
            "arguments": {
                "public_address": [
                    "str",
                    "int"
                ]
            }
        },
        "Blockchain.get_transaction_data": {
            "name": "get_transaction_data",
            "location": 72,
            "return": [],
            "arguments": {
                "tx_id": [
                    "str"
                ]
            }
        },
        "Blockchain.get_payment_data": {
            "name": "get_payment_data",
            "location": 76,
            "return": [],
            "arguments": {
                "tx_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Blockchain.try_parse_payment": {
            "name": "try_parse_payment",
            "location": 80,
            "return": [],
            "arguments": {
                "tx_data": [
                    "None",
                    "Exception",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "Blockchain.get_address_records": {
            "name": "get_address_records",
            "location": 91,
            "return": [
                "list[TransactionRecord]"
            ],
            "arguments": {
                "address": [
                    "str",
                    "int"
                ],
                "cursor": [
                    "str",
                    "int"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "Blockchain.get_all_records": {
            "name": "get_all_records",
            "location": 102,
            "return": [
                "list[TransactionRecord]"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "int",
                    "dict[str, object]",
                    "BaseException"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "Blockchain.get_last_cursor": {
            "name": "get_last_cursor",
            "location": 112,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Blockchain._sign_and_send_tx": {
            "name": "_sign_and_send_tx",
            "location": 116,
            "return": [
                "dict[int, str]",
                "str",
                "list[]",
                "dict[str, dict[int, int]]",
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "builder": [
                    "str"
                ]
            }
        }
    },
    "payment-service-master/payment/channel_factory.py": {
        "generate_key": {
            "name": "generate_key",
            "location": 25,
            "return": [],
            "arguments": {
                "root_wallet": [
                    "dict[, ]"
                ],
                "idx": [
                    "int"
                ]
            }
        },
        "get_next_channel_id": {
            "name": "get_next_channel_id",
            "location": 33,
            "return": [
                "typing.Generator[typing.Union[int,list[int],list[],range]]",
                "None"
            ],
            "arguments": {}
        },
        "get_channel": {
            "name": "get_channel",
            "location": 55,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "root_wallet": []
            }
        }
    },
    "payment-service-master/payment/config.py": {},
    "payment-service-master/payment/errors.py": {
        "BaseError.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "float"
                ]
            }
        },
        "BaseError.to_dict": {
            "name": "to_dict",
            "location": 8,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "payment-service-master/payment/log.py": {
        "add_app_context": {
            "name": "add_app_context",
            "location": 22,
            "return": [],
            "arguments": {
                "logger": [
                    "str"
                ],
                "method_name": [
                    "str"
                ],
                "event_dict": []
            }
        },
        "split_pos_args": {
            "name": "split_pos_args",
            "location": 32,
            "return": [
                "dict[, ]",
                "list[tuple[typing.Union[str,str]]]",
                "dict[str, str]"
            ],
            "arguments": {
                "logger": [
                    "str",
                    "bool"
                ],
                "method_name": [
                    "str",
                    "bool"
                ],
                "event_dict": [
                    "dict[, ]",
                    "list[tuple[typing.Union[str,str]]]",
                    "dict[str, str]"
                ]
            }
        },
        "init": {
            "name": "init",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "get": {
            "name": "get",
            "location": 68,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "payment-service-master/payment/middleware.py": {
        "handle_errors": {
            "name": "handle_errors",
            "location": 12,
            "return": [],
            "arguments": {
                "f": [
                    "bool",
                    "bytes",
                    "memoryview"
                ]
            }
        },
        "handle_errors.inner": {
            "name": "inner",
            "location": 15,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        }
    },
    "payment-service-master/payment/models.py": {
        "ModelWithStr.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelWithStr.__repr__": {
            "name": "__repr__",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wallet.from_blockchain": {
            "name": "from_blockchain",
            "location": 44,
            "return": [
                "Wallet"
            ],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "typing.Type",
                    "dict[str, typing.Any]",
                    "list[dict[, ]]",
                    "memoryview",
                    "str"
                ],
                "data": [
                    "typing.Iterable[typing.Callable[, ]]"
                ]
            }
        },
        "WhitelistRequest._compare_attr": {
            "name": "_compare_attr",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "attr1": [
                    "str"
                ],
                "attr2": [
                    "str"
                ],
                "attr_name": [
                    "str",
                    "list['Query']"
                ]
            }
        },
        "WhitelistRequest.verify_transaction": {
            "name": "verify_transaction",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WhitelistRequest.whitelist": {
            "name": "whitelist",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Payment.from_payment_request": {
            "name": "from_payment_request",
            "location": 122,
            "return": [
                "Payment"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[dict[, ]]"
                ],
                "request": [
                    "tuple[]",
                    "int",
                    "typing.Type",
                    "str"
                ],
                "sender_address": [
                    "int",
                    "None"
                ],
                "tx_id": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Payment.from_blockchain": {
            "name": "from_blockchain",
            "location": 133,
            "return": [
                "Payment"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "typing.Sequence[]",
                    "typing.Type",
                    "dict[str, typing.Any]",
                    "bytes"
                ],
                "data": [
                    "dict[, ]",
                    "str",
                    "typing.Sequence[]",
                    "dict[str, typing.Any]",
                    "typing.Type",
                    "typing.Mapping"
                ]
            }
        },
        "Payment.parse_memo": {
            "name": "parse_memo",
            "location": 145,
            "return": [
                "Memo"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ],
                "memo": [
                    "str"
                ]
            }
        },
        "Payment.create_memo": {
            "name": "create_memo",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "app_id": [
                    "int",
                    "None",
                    "str"
                ],
                "payment_id": [
                    "int",
                    "None",
                    "str"
                ]
            }
        },
        "Payment.get": {
            "name": "get",
            "location": 158,
            "return": [
                "Payment"
            ],
            "arguments": {
                "cls": [],
                "payment_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Payment._key": {
            "name": "_key",
            "location": 165,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "list[]"
                ],
                "id": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "Payment.save": {
            "name": "save",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service._key": {
            "name": "_key",
            "location": 180,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list[]"
                ],
                "service_id": [
                    "str",
                    "list[]"
                ]
            }
        },
        "Service._all_services_key": {
            "name": "_all_services_key",
            "location": 184,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "Service.get": {
            "name": "get",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "service_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Service.get_all": {
            "name": "get_all",
            "location": 195,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Service._get_all_temp_watching_addresses": {
            "name": "_get_all_temp_watching_addresses",
            "location": 200,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service._get_all_watching_addresses": {
            "name": "_get_all_watching_addresses",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Service.get_all_watching_addresses": {
            "name": "get_all_watching_addresses",
            "location": 217,
            "return": [
                "dict[, list[]]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Service.save": {
            "name": "save",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service.delete": {
            "name": "delete",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service._address_payments_key": {
            "name": "_address_payments_key",
            "location": 237,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "dict[str, typing.Any]",
                    "dict[str, set[str]]",
                    "str",
                    "list[list[str]]"
                ]
            }
        },
        "Service.watch_payment": {
            "name": "watch_payment",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "payment_id": [
                    "bool",
                    "typing.MutableSet",
                    "list[str]",
                    "str"
                ]
            }
        },
        "Service.unwatch_payment": {
            "name": "unwatch_payment",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "bool",
                    "typing.MutableSet",
                    "list[str]",
                    "str"
                ],
                "payment_id": [
                    "bool",
                    "typing.MutableSet",
                    "list[str]",
                    "str"
                ]
            }
        },
        "CursorManager.save": {
            "name": "save",
            "location": 262,
            "return": [
                "bool",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "cls": [],
                "cursor": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "CursorManager.get": {
            "name": "get",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "CursorManager._key": {
            "name": "_key",
            "location": 272,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Service._get_all_temp_watching_addresses.address_from_key": {
            "name": "address_from_key",
            "location": 201,
            "return": [],
            "arguments": {
                "key": []
            }
        }
    },
    "payment-service-master/payment/queue.py": {
        "enqueue_send_payment": {
            "name": "enqueue_send_payment",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "payment_request": []
            }
        },
        "enqueue_submit_tx": {
            "name": "enqueue_submit_tx",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "submit_request": []
            }
        },
        "enqueue_create_wallet": {
            "name": "enqueue_create_wallet",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "wallet_request": []
            }
        },
        "__enqueue_callback": {
            "name": "__enqueue_callback",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "callback": [
                    "str",
                    "bool",
                    "float"
                ],
                "app_id": [
                    "str",
                    "bool",
                    "None"
                ],
                "objekt": [
                    "str",
                    "bool",
                    "None"
                ],
                "state": [
                    "str",
                    "bool",
                    "None"
                ],
                "action": [
                    "str",
                    "bool",
                    "None"
                ],
                "value": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "enqueue_report_wallet_balance": {
            "name": "enqueue_report_wallet_balance",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "root_wallet_address": [
                    "str",
                    "list[int]",
                    "tuple[]"
                ]
            }
        },
        "enqueue_payment_callback": {
            "name": "enqueue_payment_callback",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "callback": [
                    "str",
                    "int",
                    "float"
                ],
                "value": [],
                "action": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "enqueue_payment_failed_callback": {
            "name": "enqueue_payment_failed_callback",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "str"
                ],
                "reason": [
                    "str"
                ]
            }
        },
        "enqueue_wallet_callback": {
            "name": "enqueue_wallet_callback",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "str"
                ]
            }
        },
        "enqueue_wallet_failed_callback": {
            "name": "enqueue_wallet_failed_callback",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "str"
                ],
                "reason": [
                    "str"
                ]
            }
        },
        "call_callback": {
            "name": "call_callback",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "callback": [
                    "str",
                    "int",
                    "list[int]",
                    "float"
                ],
                "app_id": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "objekt": [
                    "str",
                    "float",
                    "dict[str, str]",
                    "set[]"
                ],
                "state": [
                    "str",
                    "float",
                    "dict[str, str]",
                    "set[]"
                ],
                "action": [
                    "str",
                    "float",
                    "dict[str, str]",
                    "set[]"
                ],
                "value": [
                    "dict[, ]",
                    "str",
                    "bool"
                ]
            }
        },
        "pay_and_callback": {
            "name": "pay_and_callback",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "payment_request": [
                    "dict[, ]"
                ]
            }
        },
        "submit_tx_callback": {
            "name": "submit_tx_callback",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "submit_request": []
            }
        },
        "create_wallet_and_callback": {
            "name": "create_wallet_and_callback",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "wallet_request": [
                    "dict[, ]"
                ]
            }
        },
        "pay": {
            "name": "pay",
            "location": 198,
            "return": [],
            "arguments": {
                "payment_request": [
                    "str",
                    "int"
                ]
            }
        },
        "report_balance": {
            "name": "report_balance",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "root_address": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "channel_addresses": [
                    "list[]"
                ]
            }
        },
        "call_callback.retry_callback": {
            "name": "retry_callback",
            "location": 113,
            "return": [],
            "arguments": {
                "callback": [],
                "payload": []
            }
        },
        "create_wallet_and_callback.create_wallet": {
            "name": "create_wallet",
            "location": 174,
            "return": [],
            "arguments": {
                "blockchain": [],
                "wallet_request": []
            }
        }
    },
    "payment-service-master/payment/redis_conn.py": {},
    "payment-service-master/payment/statsd.py": {
        "inc_count": {
            "name": "inc_count",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "metric": [],
                "value": [],
                "tags": []
            }
        }
    },
    "payment-service-master/payment/transaction_flow.py": {
        "TransactionFlow.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [
                    "int",
                    "float"
                ]
            }
        },
        "TransactionFlow._yield_transactions": {
            "name": "_yield_transactions",
            "location": 17,
            "return": [
                "typing.Generator[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "get_records": [
                    "str",
                    "int"
                ]
            }
        },
        "TransactionFlow.get_address_transactions": {
            "name": "get_address_transactions",
            "location": 28,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "int",
                    "str"
                ]
            }
        },
        "TransactionFlow.get_transactions": {
            "name": "get_transactions",
            "location": 36,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "addresses": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "TransactionFlow.get_address_transactions.get_address_records": {
            "name": "get_address_records",
            "location": 30,
            "return": [],
            "arguments": {
                "cursor": []
            }
        },
        "TransactionFlow.get_transactions.get_all_records": {
            "name": "get_all_records",
            "location": 37,
            "return": [],
            "arguments": {
                "cursor": []
            }
        }
    },
    "payment-service-master/payment/utils.py": {
        "lock": {
            "name": "lock",
            "location": 9,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "redis_conn": [],
                "key": [
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "None"
                ],
                "blocking_timeout": [
                    "None",
                    "str"
                ]
            }
        },
        "retry": {
            "name": "retry",
            "location": 22,
            "return": [],
            "arguments": {
                "times": [
                    "float",
                    "int",
                    "str",
                    "typing.Sequence[str]"
                ],
                "delay": [
                    "float"
                ],
                "ignore": [
                    "list[]"
                ]
            }
        },
        "safe_int": {
            "name": "safe_int",
            "location": 42,
            "return": [
                "int",
                "typing.Callable[[], bool]",
                "bool",
                "str",
                "None"
            ],
            "arguments": {
                "string": [],
                "default": [
                    "typing.Callable[[], bool]",
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "retry.decorator": {
            "name": "decorator",
            "location": 24,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "retry.decorator.wrapper": {
            "name": "wrapper",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "payment-service-master/payment/watcher.py": {
        "get_last_cursor": {
            "name": "get_last_cursor",
            "location": 19,
            "return": [
                "int",
                "list[str]",
                "dict[int, str]",
                "str"
            ],
            "arguments": {}
        },
        "on_payment": {
            "name": "on_payment",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "address": [
                    "str"
                ],
                "services": [
                    "str"
                ],
                "payment": [
                    "str",
                    "bool"
                ]
            }
        },
        "worker": {
            "name": "worker",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "stop_event": [
                    "int",
                    "float",
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "report_queue_size": {
            "name": "report_queue_size",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "init": {
            "name": "init",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "stop": {
            "name": "stop",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_last_cursor.get_from_horizon": {
            "name": "get_from_horizon",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "payment-service-master/payment/__init__.py": {}
}
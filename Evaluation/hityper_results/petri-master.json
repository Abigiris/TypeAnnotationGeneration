{
    "petri-master/setup.py": {},
    "petri-master/docs/source/conf.py": {},
    "petri-master/petri/dot_env.py": {
        "init_dotenv": {
            "name": "init_dotenv",
            "location": 12,
            "return": [
                "None",
                "str"
            ],
            "arguments": {}
        }
    },
    "petri-master/petri/ext.py": {
        "to_upper_underscore": {
            "name": "to_upper_underscore",
            "location": 5,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "pkg_2_envvar": {
            "name": "pkg_2_envvar",
            "location": 17,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "petri-master/petri/loggin.py": {
        "maybe_patch_tqdm": {
            "name": "maybe_patch_tqdm",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "logger": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ],
                "dev_mode": [
                    "str",
                    "typing.Iterable[str]",
                    "bool"
                ]
            }
        },
        "_control_logging": {
            "name": "_control_logging",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "level": [
                    "int",
                    "str",
                    "None"
                ],
                "dest": [
                    "bool",
                    "str"
                ],
                "formatter": [
                    "bool",
                    "float",
                    "str",
                    "None",
                    "typing.Sequence[list[typing.Any]]",
                    "dict[, ]"
                ],
                "log_file": [
                    "str",
                    "None"
                ],
                "dev_mode": [
                    "bool",
                    "typing.Iterator",
                    "float"
                ]
            }
        },
        "configure_logging": {
            "name": "configure_logging",
            "location": 165,
            "return": [],
            "arguments": {
                "name": [],
                "level": [
                    "bool",
                    "str"
                ],
                "dest": [
                    "int",
                    "str",
                    "None"
                ],
                "formatter": [
                    "int",
                    "str",
                    "None"
                ],
                "log_file": [
                    "bool",
                    "str"
                ],
                "kidnap_loggers": [
                    "bool"
                ]
            }
        },
        "trace_using": {
            "name": "trace_using",
            "location": 201,
            "return": [],
            "arguments": {
                "logger": [
                    "float",
                    "int"
                ]
            }
        },
        "trace_using.real_decorator": {
            "name": "real_decorator",
            "location": 212,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "maybe_patch_tqdm._tqdm": {
            "name": "_tqdm",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "trace_using.real_decorator.wrapper": {
            "name": "wrapper",
            "location": 216,
            "return": [],
            "arguments": {}
        }
    },
    "petri-master/petri/metadata.py": {
        "Metadata.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": [
                    "str",
                    "bool",
                    "dict[int, bool]"
                ]
            }
        },
        "Metadata.data": {
            "name": "data",
            "location": 19,
            "return": [
                "list[]",
                "dict[, ]",
                "dict[str, dict[, ]]",
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Metadata.__getattribute__": {
            "name": "__getattribute__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        }
    },
    "petri-master/petri/settings.py": {
        "BaseSettings.validate_basepath": {
            "name": "validate_basepath",
            "location": 64,
            "return": [
                "str",
                "None",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Callable[[], None]",
                    "str",
                    "list[]",
                    "float"
                ],
                "v": [
                    "str",
                    "None",
                    "bool"
                ],
                "values": [
                    "str"
                ]
            }
        },
        "BaseSettings.validate_pkg_path": {
            "name": "validate_pkg_path",
            "location": 70,
            "return": [
                "int",
                "float",
                "str",
                "typing.Callable[T, None]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "int"
                ],
                "v": [
                    "int",
                    "float",
                    "str",
                    "typing.Callable[T, None]"
                ],
                "values": [
                    "str"
                ]
            }
        },
        "BaseSettings.validate_data": {
            "name": "validate_data",
            "location": 75,
            "return": [
                "typing.Iterable[str]",
                "None",
                "str"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type",
                    "tuple[typing.Union[typing.Any,...]]",
                    "list[str]",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "v": [
                    "typing.Iterable[str]",
                    "None",
                    "str"
                ],
                "values": [
                    "str"
                ]
            }
        },
        "BaseSettings.validate_log_storage": {
            "name": "validate_log_storage",
            "location": 80,
            "return": [
                "list[str]",
                "str",
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[str]",
                    "list[]",
                    "list[typing.Union[str,int]]"
                ],
                "v": [
                    "list[str]",
                    "str",
                    "None"
                ],
                "values": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "BaseSettings.from_envvar": {
            "name": "from_envvar",
            "location": 85,
            "return": [],
            "arguments": {
                "cls": [],
                "pkg_name": [
                    "str",
                    "dict[, ]",
                    "list[str]",
                    "bool",
                    "None",
                    "list[]"
                ],
                "init_dot_py": [
                    "str",
                    "int",
                    "float",
                    "list[list[str]]"
                ],
                "default_config": [
                    "str",
                    "bool"
                ]
            }
        },
        "BaseSettings._dict_2_cls": {
            "name": "_dict_2_cls",
            "location": 135,
            "return": [
                "typing.Type"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "list[str]",
                    "tuple[typing.Union[int,int]]"
                ],
                "config_obj": [],
                "cls_name": []
            }
        },
        "BaseSettings._impose_basesettings_parent": {
            "name": "_impose_basesettings_parent",
            "location": 149,
            "return": [
                "typing.Type"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "bool",
                    "dict[, ]",
                    "tuple[typing.Union[int,int]]",
                    "dict[str, typing.Any]"
                ],
                "config_obj": [
                    "dict[, ]",
                    "str",
                    "typing.Mapping",
                    "bool"
                ],
                "cls_name": [],
                "env_prefix": [
                    "dict[, ]",
                    "typing.Mapping"
                ]
            }
        },
        "BaseSettings.validate_class": {
            "name": "validate_class",
            "location": 170,
            "return": [
                "str",
                "dict[str, _]",
                "typing.Type",
                "dict[, ]",
                "type"
            ],
            "arguments": {
                "cls": [],
                "pkg_name": [
                    "str"
                ],
                "cls_name": [
                    "str",
                    "None",
                    "typing.Type"
                ],
                "config_obj": [
                    "str",
                    "dict[str, _]",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "BaseSettings.to_str": {
            "name": "to_str",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "dict_kw": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "BaseSettings.__str__": {
            "name": "__str__",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "petri-master/petri/__init__.py": {
        "Petri.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "init_dot_py": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "petri-master/tests/__init__.py": {},
    "petri-master/tests/fixtures/a_pkg/a_pkg/settings.py": {},
    "petri-master/tests/fixtures/a_pkg/a_pkg/__init__.py": {},
    "petri-master/tests/fixtures/a_pkg/tests/test_a_pkg.py": {
        "test_version": {
            "name": "test_version",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "petri-master/tests/fixtures/a_pkg/tests/__init__.py": {},
    "petri-master/tests/fixtures/second_order/second_order/settings.py": {},
    "petri-master/tests/fixtures/second_order/second_order/__init__.py": {},
    "petri-master/tests/fixtures/second_order/tests/test_second_order.py": {
        "test_version": {
            "name": "test_version",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "petri-master/tests/fixtures/second_order/tests/__init__.py": {},
    "petri-master/tests/unit/test_01_nodebug.py": {
        "test_pdb": {
            "name": "test_pdb",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "str"
                ],
                "debug_statement": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        }
    },
    "petri-master/tests/unit/test_02_bootstrap.py": {
        "pyproject_toml": {
            "name": "pyproject_toml",
            "location": 9,
            "return": [
                "dict[str, ]"
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "pyproject_toml": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "petri-master/tests/unit/test_dot_env.py": {
        "test_dotenv": {
            "name": "test_dotenv",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [],
                "a_pkg_import": [
                    "bool"
                ],
                "requested": [
                    "dict[str, str]",
                    "typing.Callable[, ]",
                    "str"
                ],
                "real": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "petri-master/tests/unit/test_ext.py": {
        "test_ext": {
            "name": "test_ext",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "petri-master/tests/unit/test_loggin.py": {
        "check_log": {
            "name": "check_log",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bool",
                    "None"
                ],
                "outerr": [
                    "bool"
                ],
                "lvl": [
                    "str",
                    "None",
                    "int"
                ],
                "msg_lvl": [
                    "str"
                ],
                "dest": [
                    "bool",
                    "str"
                ],
                "fmt": [
                    "bool",
                    "str"
                ],
                "logfile_location": [
                    "str"
                ],
                "old_logdata": [
                    "str",
                    "bool",
                    "None",
                    "bytes"
                ]
            }
        },
        "test_loglevel_format_output": {
            "name": "test_loglevel_format_output",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [],
                "capsys": [],
                "a_pkg_import": [
                    "dict[str, typing.Any]",
                    "typing.Mapping"
                ],
                "tmpdir": [
                    "str"
                ],
                "lvl": [
                    "tuple[typing.Union[paradigm.models.Base,tests.utils.Kwargs]]",
                    "typing.IO",
                    "str"
                ],
                "msg_lvl": [],
                "dest": [
                    "int",
                    "dict[, ]"
                ],
                "fmt": []
            }
        },
        "test_trace": {
            "name": "test_trace",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [],
                "capsys": [],
                "a_pkg_import": [
                    "bool",
                    "list[str]",
                    "list[tuple[typing.Union[str,typing.Any]]]",
                    "str"
                ]
            }
        },
        "test_trace.repeat": {
            "name": "repeat",
            "location": 154,
            "return": [],
            "arguments": {
                "a": [],
                "b": [
                    "int"
                ],
                "c": [
                    "typing.Text"
                ],
                "d": [
                    "int"
                ]
            }
        }
    },
    "petri-master/tests/unit/test_metadata.py": {
        "read_meta": {
            "name": "read_meta",
            "location": 7,
            "return": [],
            "arguments": {
                "a_pkg_import": [
                    "typing.Callable[T, T]",
                    "int"
                ]
            }
        },
        "test_meta": {
            "name": "test_meta",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "read_meta": [
                    "int"
                ]
            }
        }
    },
    "petri-master/tests/unit/test_settings.py": {
        "test_load_settings": {
            "name": "test_load_settings",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [],
                "a_pkg_import": [
                    "str"
                ],
                "envalue": [
                    "typing.Callable[str, bool]",
                    "None"
                ]
            }
        },
        "make_setting_obj": {
            "name": "make_setting_obj",
            "location": 85,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool]],typing.Type,tuple[dict[typing.Text, typing.Union[typing.Text,bool]]]]]",
                "typing.Type",
                "tuple[dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, typing.Union[typing.Text,bool]],typing.Type,tuple[dict[typing.Text, typing.Union[typing.Text,bool]]]]]]"
            ],
            "arguments": {
                "outer": [
                    "int",
                    "list[int]",
                    "str"
                ],
                "inner": [
                    "int",
                    "list[int]",
                    "str"
                ],
                "parent": [
                    "list[str]",
                    "str",
                    "int"
                ],
                "additional_config": [
                    "int",
                    "list[int]",
                    "str"
                ],
                "prefix": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "test_validate_class": {
            "name": "test_validate_class",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "outer": [],
                "inner": [],
                "parent": [
                    "dict[str, typing.Any]"
                ],
                "additional_config": [
                    "dict[str, typing.Any]"
                ],
                "prefix": []
            }
        },
        "test_validate_class.validate": {
            "name": "validate",
            "location": 132,
            "return": [],
            "arguments": {}
        }
    },
    "petri-master/tests/unit/__init__.py": {
        "temp_file": {
            "name": "temp_file",
            "location": 13,
            "return": [],
            "arguments": {
                "path": [],
                "mode": []
            }
        },
        "restore_file": {
            "name": "restore_file",
            "location": 23,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "a_pkg_import": {
            "name": "a_pkg_import",
            "location": 35,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "request": []
            }
        },
        "a_pkg_import.importer": {
            "name": "importer",
            "location": 36,
            "return": [],
            "arguments": {
                "setenv": []
            }
        },
        "nullcontext.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "enter_result": []
            }
        },
        "nullcontext.__enter__": {
            "name": "__enter__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "nullcontext.__exit__": {
            "name": "__exit__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
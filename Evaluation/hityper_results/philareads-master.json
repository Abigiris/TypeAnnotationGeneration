{
    "philareads-master/backend/create_dummy_data.py": {},
    "philareads-master/backend/create_prod_data.py": {},
    "philareads-master/backend/manage.py": {
        "runserver": {
            "name": "runserver",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "runworker": {
            "name": "runworker",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "recreate_db": {
            "name": "recreate_db",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "philareads-master/backend/api/config.py": {},
    "philareads-master/backend/api/core.py": {
        "create_response": {
            "name": "create_response",
            "location": 25,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "data": [
                    "None"
                ],
                "status": [
                    "int"
                ],
                "message": [
                    "typing.Text"
                ]
            }
        },
        "serialize_list": {
            "name": "serialize_list",
            "location": 51,
            "return": [
                "list[]"
            ],
            "arguments": {
                "items": []
            }
        },
        "all_exception_handler": {
            "name": "all_exception_handler",
            "location": 63,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "authenticated_route": {
            "name": "authenticated_route",
            "location": 71,
            "return": [],
            "arguments": {
                "route": []
            }
        },
        "admin_route": {
            "name": "admin_route",
            "location": 91,
            "return": [],
            "arguments": {
                "route": []
            }
        },
        "invalid_model_helper": {
            "name": "invalid_model_helper",
            "location": 125,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_data": [],
                "props": []
            }
        },
        "Mixin.to_dict": {
            "name": "to_dict",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "authenticated_route.wrapper_wroute": {
            "name": "wrapper_wroute",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "admin_route.wrapper_wroute": {
            "name": "wrapper_wroute",
            "location": 95,
            "return": [],
            "arguments": {}
        }
    },
    "philareads-master/backend/api/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 20,
            "return": [
                "Flask"
            ],
            "arguments": {
                "test_config": [
                    "None",
                    "dict[, ]",
                    "list[str]",
                    "typing.Type",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "RequestFormatter.format": {
            "name": "format",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "philareads-master/backend/api/models/Badge.py": {
        "num_quiz_attempts": {
            "name": "num_quiz_attempts",
            "location": 65,
            "return": [
                "int"
            ],
            "arguments": {
                "user": [
                    "bool",
                    "bytes",
                    "str"
                ]
            }
        },
        "get_num_perfects": {
            "name": "get_num_perfects",
            "location": 72,
            "return": [
                "int"
            ],
            "arguments": {
                "user": [
                    "bool"
                ]
            }
        },
        "get_num_books": {
            "name": "get_num_books",
            "location": 81,
            "return": [
                "int"
            ],
            "arguments": {
                "user": [
                    "bool"
                ]
            }
        },
        "get_quiz_word": {
            "name": "get_quiz_word",
            "location": 106,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "quantity": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "get_book_word": {
            "name": "get_book_word",
            "location": 112,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "quantity": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "give_user_badges": {
            "name": "give_user_badges",
            "location": 199,
            "return": [
                "list[]"
            ],
            "arguments": {
                "user": [
                    "str",
                    "None",
                    "float",
                    "typing.Sequence[typing.Any]",
                    "set[]"
                ],
                "quiz_result": [
                    "str"
                ]
            }
        },
        "get_user_badges": {
            "name": "get_user_badges",
            "location": 212,
            "return": [
                "list[]"
            ],
            "arguments": {
                "user": []
            }
        },
        "get_progress_on_badges": {
            "name": "get_progress_on_badges",
            "location": 216,
            "return": [
                "list[dict[typing.Text, ]]"
            ],
            "arguments": {
                "user": [
                    "typing.Sequence[typing.Hashable]",
                    "typing.Sequence[dict[, ]]"
                ]
            }
        },
        "Badge.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "None",
                    "float"
                ],
                "title": [
                    "bool",
                    "None",
                    "str",
                    "list[]",
                    "typing.Container",
                    "typing.Callable[[], bool]"
                ],
                "progress_text": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ],
                "description": [
                    "bool",
                    "None",
                    "str",
                    "list[]",
                    "typing.Container",
                    "typing.Callable[[], bool]"
                ],
                "congrats_text": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ],
                "graphic": [
                    "bool",
                    "None",
                    "str",
                    "list[]",
                    "typing.Container",
                    "typing.Callable[[], bool]"
                ],
                "quantity": [
                    "bool",
                    "None",
                    "str",
                    "list[]",
                    "typing.Container",
                    "typing.Callable[[], bool]"
                ]
            }
        },
        "Badge.can_receive": {
            "name": "can_receive",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "quiz_result": [
                    "float"
                ]
            }
        },
        "Badge.serialize_to_json": {
            "name": "serialize_to_json",
            "location": 23,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeCategory.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "badges": [
                    "bool",
                    "str",
                    "None",
                    "list[Q]"
                ],
                "name": [
                    "list[str]",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "BadgeCategory.get_progress_on_next_badge": {
            "name": "get_progress_on_next_badge",
            "location": 43,
            "return": [
                "tuple[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "earned_badges_set": [
                    "int",
                    "str",
                    "None",
                    "list[str]",
                    "float"
                ],
                "user": [
                    "int",
                    "str",
                    "list[int]",
                    "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal]]"
                ],
                "quiz_result": [
                    "int",
                    "str",
                    "list[int]",
                    "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal]]"
                ]
            }
        },
        "BadgeCategory.get_newly_earned_badges": {
            "name": "get_newly_earned_badges",
            "location": 50,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "earned_badges_set": [
                    "int",
                    "str",
                    "None",
                    "list[str]",
                    "float"
                ],
                "user": [
                    "str",
                    "typing.ClassVar",
                    "dict[str, dict[typing.Any, int]]"
                ],
                "quiz_result": [
                    "str",
                    "typing.ClassVar",
                    "dict[str, dict[typing.Any, int]]"
                ]
            }
        },
        "BadgeCategory.get_progress": {
            "name": "get_progress",
            "location": 61,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "None",
                    "bool",
                    "typing.Any"
                ],
                "quiz_result": [
                    "str",
                    "None",
                    "bool",
                    "typing.Any"
                ]
            }
        },
        "NthQuizCategory.get_progress": {
            "name": "get_progress",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "bool"
                ],
                "quiz_result": [
                    "str",
                    "None",
                    "bool",
                    "typing.Any"
                ]
            }
        },
        "PerfectQuizCategory.get_progress": {
            "name": "get_progress",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "dict[str, list[str]]",
                    "dict[str, str]",
                    "list[]",
                    "None"
                ],
                "quiz_result": [
                    "str",
                    "None",
                    "bool",
                    "typing.Any"
                ]
            }
        },
        "BookCategory.get_progress": {
            "name": "get_progress",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "dict[str, list[str]]",
                    "dict[str, str]",
                    "list[]",
                    "None"
                ],
                "quiz_result": [
                    "str",
                    "None",
                    "bool",
                    "typing.Any"
                ]
            }
        },
        "NthQuizBadge.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "quantity": [
                    "int",
                    "str"
                ],
                "graphic": [
                    "bool",
                    "str",
                    "list[int]"
                ]
            }
        },
        "NthPerfectBadge.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "quantity": [
                    "int",
                    "str"
                ],
                "graphic": [
                    "bool",
                    "str",
                    "list[int]"
                ]
            }
        },
        "NthBookBadge.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "quantity": [
                    "int",
                    "str"
                ],
                "graphic": [
                    "bool",
                    "str",
                    "list[int]"
                ]
            }
        }
    },
    "philareads-master/backend/api/models/base.py": {},
    "philareads-master/backend/api/models/Book.py": {
        "Book.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.OrderedDict"
                ],
                "author": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]"
                ],
                "grade": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]"
                ],
                "year": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]"
                ],
                "cover_url": [
                    "str",
                    "None",
                    "bool"
                ],
                "published": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "tuple[typing.Union[int,int,int]]"
                ]
            }
        },
        "Book.__repr__": {
            "name": "__repr__",
            "location": 40,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Book.serialize_to_json": {
            "name": "serialize_to_json",
            "location": 43,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/ParentAdvice.py": {
        "ParentAdvice.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "bool",
                    "str",
                    "typing.Sequence[dict[str, str]]",
                    "float"
                ]
            }
        },
        "ParentAdvice.__repr__": {
            "name": "__repr__",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParentAdvice.serialize_to_json": {
            "name": "serialize_to_json",
            "location": 21,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/Question.py": {
        "Question.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "list[int]",
                    "dict[str, 'LabwareDefinition']"
                ],
                "options": [
                    "bool",
                    "str",
                    "None"
                ],
                "correct_option": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None",
                    "typing.Hashable",
                    "dict[, ]"
                ]
            }
        },
        "Question.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/QuestionResult.py": {
        "QuestionResult.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_answer": [
                    "int",
                    "str"
                ],
                "correct_answer": [
                    "bool",
                    "str",
                    "dict[str, str]"
                ],
                "question_num": [
                    "bool",
                    "str",
                    "dict[str, str]"
                ],
                "correct": [
                    "bool",
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "QuestionResult.__repr__": {
            "name": "__repr__",
            "location": 32,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/Quiz.py": {
        "Quiz.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "pub": [
                    "int",
                    "str",
                    "typing.Sequence[]",
                    "None"
                ]
            }
        },
        "Quiz.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/QuizResult.py": {
        "QuizResult.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "str",
                    "None"
                ],
                "quiz_id": [
                    "str",
                    "int"
                ],
                "num_correct": [
                    "int",
                    "None"
                ],
                "num_total": [
                    "int",
                    "None"
                ],
                "date_taken": [
                    "int",
                    "str"
                ]
            }
        },
        "QuizResult.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/User.py": {
        "MutableList.append": {
            "name": "append",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "dict[str, typing.Any]",
                    "list[announcer.api.posts.Post]",
                    "list[str]",
                    "list[float]",
                    "list[list[typing.Any]]",
                    "int",
                    "str"
                ]
            }
        },
        "MutableList.coerce": {
            "name": "coerce",
            "location": 18,
            "return": [
                "MutableList",
                "bytes",
                "dict[str, typing.Any]",
                "typing.Sequence[typing.Any]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "key": [
                    "str",
                    "dict[, ]",
                    "typing.Hashable"
                ],
                "value": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ],
                "password": [
                    "str",
                    "None"
                ],
                "username": [
                    "bool",
                    "typing.Iterable[str]",
                    "str",
                    "None"
                ]
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.serialize_to_json": {
            "name": "serialize_to_json",
            "location": 57,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.encode_auth_token": {
            "name": "encode_auth_token",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.decode_auth_token": {
            "name": "decode_auth_token",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "auth_token": [
                    "str",
                    "bool",
                    "list[dict[, ]]"
                ]
            }
        }
    },
    "philareads-master/backend/api/models/Year.py": {
        "Year.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "int",
                    "float"
                ]
            }
        },
        "Year.__repr__": {
            "name": "__repr__",
            "location": 19,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "philareads-master/backend/api/models/__init__.py": {},
    "philareads-master/backend/api/views/authenticate.py": {
        "register_user": {
            "name": "register_user",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "login_user": {
            "name": "login_user",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "upgrade_user": {
            "name": "upgrade_user",
            "location": 105,
            "return": [],
            "arguments": {}
        }
    },
    "philareads-master/backend/api/views/book.py": {
        "invalid_book_data": {
            "name": "invalid_book_data",
            "location": 19,
            "return": [],
            "arguments": {
                "user_data": []
            }
        },
        "create_book_from_csv": {
            "name": "create_book_from_csv",
            "location": 27,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "create_book_helper": {
            "name": "create_book_helper",
            "location": 57,
            "return": [],
            "arguments": {
                "user_data": []
            }
        },
        "create_book": {
            "name": "create_book",
            "location": 104,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "get_all_quizzes": {
            "name": "get_all_quizzes",
            "location": 111,
            "return": [],
            "arguments": {
                "user_id": [],
                "book_id": []
            }
        },
        "get_quizzes": {
            "name": "get_quizzes",
            "location": 142,
            "return": [],
            "arguments": {
                "book_id": []
            }
        },
        "find_all_books": {
            "name": "find_all_books",
            "location": 178,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "find_books": {
            "name": "find_books",
            "location": 208,
            "return": [],
            "arguments": {}
        },
        "get_years": {
            "name": "get_years",
            "location": 238,
            "return": [],
            "arguments": {}
        },
        "publish_books": {
            "name": "publish_books",
            "location": 252,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "delete_quiz": {
            "name": "delete_quiz",
            "location": 274,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "edit_book": {
            "name": "edit_book",
            "location": 296,
            "return": [],
            "arguments": {
                "user_id": []
            }
        }
    },
    "philareads-master/backend/api/views/main.py": {
        "serve_frontend": {
            "name": "serve_frontend",
            "location": 13,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "philareads-master/backend/api/views/parentadvice.py": {
        "create_parent_advice": {
            "name": "create_parent_advice",
            "location": 17,
            "return": [],
            "arguments": {
                "user_id": [
                    "int",
                    "str",
                    "list[int]"
                ]
            }
        },
        "edit_parent_advice": {
            "name": "edit_parent_advice",
            "location": 33,
            "return": [],
            "arguments": {
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "delete_parent_advice": {
            "name": "delete_parent_advice",
            "location": 56,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_parent_advice": {
            "name": "get_parent_advice",
            "location": 77,
            "return": [],
            "arguments": {}
        }
    },
    "philareads-master/backend/api/views/quiz.py": {
        "invalid_question_result_data": {
            "name": "invalid_question_result_data",
            "location": 28,
            "return": [],
            "arguments": {
                "user_data": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "invalid_quiz_result_data": {
            "name": "invalid_quiz_result_data",
            "location": 34,
            "return": [],
            "arguments": {
                "user_data": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "invalid_quiz_data": {
            "name": "invalid_quiz_data",
            "location": 41,
            "return": [],
            "arguments": {
                "user_data": [
                    "str",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "duplicate_quiz": {
            "name": "duplicate_quiz",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_data": []
            }
        },
        "create_quiz_helper": {
            "name": "create_quiz_helper",
            "location": 58,
            "return": [],
            "arguments": {
                "user_data": []
            }
        },
        "create_quiz": {
            "name": "create_quiz",
            "location": 97,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_quiz_results": {
            "name": "get_quiz_results",
            "location": 106,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "None"
                ]
            }
        },
        "get_question_results": {
            "name": "get_question_results",
            "location": 138,
            "return": [],
            "arguments": {
                "quiz_result_id": [
                    "int",
                    "str"
                ]
            }
        },
        "create_question_result": {
            "name": "create_question_result",
            "location": 184,
            "return": [
                "QuestionResult"
            ],
            "arguments": {
                "new_quiz_result": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "user_data": []
            }
        },
        "create_quiz_result": {
            "name": "create_quiz_result",
            "location": 198,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "delete_quiz_by_id": {
            "name": "delete_quiz_by_id",
            "location": 260,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_data": [
                    "str"
                ]
            }
        },
        "delete_quiz": {
            "name": "delete_quiz",
            "location": 275,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "edit_quiz": {
            "name": "edit_quiz",
            "location": 294,
            "return": [],
            "arguments": {
                "user_id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "philareads-master/backend/api/views/user.py": {
        "edit_user": {
            "name": "edit_user",
            "location": 12,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "check_password": {
            "name": "check_password",
            "location": 45,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "None"
                ]
            }
        },
        "user_info": {
            "name": "user_info",
            "location": 77,
            "return": [],
            "arguments": {
                "user_id": [
                    "int",
                    "None"
                ]
            }
        },
        "badges": {
            "name": "badges",
            "location": 91,
            "return": [],
            "arguments": {
                "user_id": []
            }
        }
    },
    "philareads-master/backend/api/views/year.py": {
        "init_year": {
            "name": "init_year",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_year": {
            "name": "get_year",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "set_year": {
            "name": "set_year",
            "location": 33,
            "return": [],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        }
    },
    "philareads-master/backend/tests/conftest.py": {
        "postgres": {
            "name": "postgres",
            "location": 17,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 30,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "postgres": []
            }
        }
    },
    "philareads-master/backend/tests/test_authenticate.py": {
        "setup": {
            "name": "setup",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_double_register": {
            "name": "test_double_register",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_register": {
            "name": "test_register",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_successful_login": {
            "name": "test_successful_login",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_nonexistent_user": {
            "name": "test_nonexistent_user",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "philareads-master/backend/tests/test_quiz.py": {
        "setup": {
            "name": "setup",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_create_valid_quiz": {
            "name": "test_create_valid_quiz",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_create_invalid_quiz": {
            "name": "test_create_invalid_quiz",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "philareads-master/backend/tests/__init__.py": {}
}
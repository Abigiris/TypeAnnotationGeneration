{
    "picamraw-master/setup.py": {},
    "picamraw-master/picamraw/constants.py": {},
    "picamraw-master/picamraw/main.py": {
        "extract_raw_from_jpeg": {
            "name": "extract_raw_from_jpeg",
            "location": 75,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "camera_version": [
                    "int",
                    "str",
                    "bytes"
                ],
                "sensor_mode": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "_guard_attribute_is_a_multiple_of": {
            "name": "_guard_attribute_is_a_multiple_of",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "attribute_name": [
                    "str",
                    "int",
                    "list[]"
                ],
                "attribute_value": [],
                "multiple": [
                    "str",
                    "int",
                    "typing.Sequence[dict[str, str]]"
                ]
            }
        },
        "bayer_array_to_3d": {
            "name": "bayer_array_to_3d",
            "location": 116,
            "return": [],
            "arguments": {
                "bayer_array": [],
                "bayer_order": [
                    "int",
                    "str",
                    "typing.Generator[]",
                    "list['cirq.Qid']",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "bayer_array_to_rgb": {
            "name": "bayer_array_to_rgb",
            "location": 161,
            "return": [],
            "arguments": {
                "bayer_array": [],
                "bayer_order": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "_pixel_bytes_to_array": {
            "name": "_pixel_bytes_to_array",
            "location": 207,
            "return": [],
            "arguments": {
                "pixel_bytes": [],
                "header": []
            }
        },
        "_unpack_10bit_values": {
            "name": "_unpack_10bit_values",
            "location": 234,
            "return": [],
            "arguments": {
                "pixel_bytes_2d": []
            }
        },
        "_get_raw_block_size": {
            "name": "_get_raw_block_size",
            "location": 313,
            "return": [],
            "arguments": {
                "camera_version": [
                    "str",
                    "list[]",
                    "typing.Type",
                    "None",
                    "bool"
                ],
                "sensor_mode": [
                    "str",
                    "list[]",
                    "typing.Type",
                    "None",
                    "bool"
                ]
            }
        },
        "_get_raw_bayer_bytes": {
            "name": "_get_raw_bayer_bytes",
            "location": 317,
            "return": [],
            "arguments": {
                "jpeg_data_as_bytes": [],
                "camera_version": [
                    "int",
                    "str",
                    "list[numpy.array]"
                ],
                "sensor_mode": [
                    "int",
                    "str",
                    "list[numpy.array]"
                ]
            }
        },
        "PiRawBayer.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filepath": [
                    "bool",
                    "float",
                    "dict[, ]",
                    "None",
                    "str"
                ],
                "camera_version": [
                    "bool",
                    "float",
                    "dict[, ]",
                    "None",
                    "str"
                ],
                "sensor_mode": [
                    "int"
                ]
            }
        },
        "PiRawBayer.to_3d": {
            "name": "to_3d",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PiRawBayer.to_rgb": {
            "name": "to_rgb",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "picamraw-master/picamraw/main_test.py": {
        "TestGetRawBayerBytes.test_get_raw_bayer_bytes": {
            "name": "test_get_raw_bayer_bytes",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocker": [
                    "typing.Mapping"
                ]
            }
        },
        "TestGetRawBayerBytes.test_get_raw_bayer_bytes__raises_if_missing_prefix": {
            "name": "test_get_raw_bayer_bytes__raises_if_missing_prefix",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocker": [
                    "typing.Mapping"
                ]
            }
        },
        "TestGetRawBlockSize.test_get_raw_block_size__has_values_for_all_camera_versions_and_sensor_modes": {
            "name": "test_get_raw_block_size__has_values_for_all_camera_versions_and_sensor_modes",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "camera_version": [
                    "str",
                    "None"
                ],
                "sensor_mode": [
                    "str",
                    "None"
                ]
            }
        },
        "TestExtractRawFromJpeg.test_extracts_bayer_order": {
            "name": "test_extracts_bayer_order",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExtractRawFromJpeg.test_extracts_raw_data": {
            "name": "test_extracts_raw_data",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBayerArrayTo3D.test_splits_to_rgb_using_bayer_order": {
            "name": "test_splits_to_rgb_using_bayer_order",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bayer_order": [
                    "str",
                    "int"
                ],
                "expected": [
                    "float"
                ]
            }
        },
        "TestBayerArrayTo3D.test_integration": {
            "name": "test_integration",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBayerArrayToRGB.test_splits_to_rgb_using_bayer_order": {
            "name": "test_splits_to_rgb_using_bayer_order",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bayer_order": [
                    "str",
                    "int"
                ],
                "expected": [
                    "float"
                ]
            }
        },
        "TestBayerArrayToRGB.test_uneven_shape_raises": {
            "name": "test_uneven_shape_raises",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBayerArrayToRGB.test_integration": {
            "name": "test_integration",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnpack10BitValues.test_unpack_10bit_values": {
            "name": "test_unpack_10bit_values",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnpack10BitValues.test_unpack_10bit_values__correct_shape_doesnt_raise": {
            "name": "test_unpack_10bit_values__correct_shape_doesnt_raise",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnpack10BitValues.test_unpack_10bit_values__incorrect_shape_raises": {
            "name": "test_unpack_10bit_values__incorrect_shape_raises",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPixelBytesToArray.test_pixel_bytes_to_array": {
            "name": "test_pixel_bytes_to_array",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPiRawBayer.test_extracts_raw_data": {
            "name": "test_extracts_raw_data",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPiRawBayer.test_rgb_array_property": {
            "name": "test_rgb_array_property",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocker": []
            }
        },
        "TestPiRawBayer.test_array_3d_property": {
            "name": "test_array_3d_property",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocker": []
            }
        }
    },
    "picamraw-master/picamraw/resolution.py": {
        "PiResolution.pad": {
            "name": "pad",
            "location": 16,
            "return": [
                "PiResolution"
            ],
            "arguments": {
                "self": [],
                "pad_width": [
                    "int"
                ],
                "pad_height": [
                    "int"
                ]
            }
        },
        "PiResolution.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "picamraw-master/picamraw/resolution_test.py": {
        "TestPiResolution.test_pad__adds_default_padding": {
            "name": "test_pad__adds_default_padding",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPiResolution.test_pad__adds_custom_padding": {
            "name": "test_pad__adds_custom_padding",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "picamraw-master/picamraw/__init__.py": {}
}
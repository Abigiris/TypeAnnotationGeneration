{
    "pika-stubs-master/setup.py": {
        "find_stubs": {
            "name": "find_stubs",
            "location": 6,
            "return": [
                "dict[str, list[typing.Union[str,list[]]]]"
            ],
            "arguments": {
                "package": [
                    "str"
                ]
            }
        }
    },
    "pika-stubs-master/pika-stubs/amqp_object.py": {
        "Method.get_properties": {
            "name": "get_properties",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Method.get_body": {
            "name": "get_body",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/callback.py": {
        "name_or_value": {
            "name": "name_or_value",
            "location": 9,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "sanitize_prefix": {
            "name": "sanitize_prefix",
            "location": 10,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "check_for_prefix_and_key": {
            "name": "check_for_prefix_and_key",
            "location": 11,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "CallbackManager.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallbackManager.add": {
            "name": "add",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "key": [],
                "callback": [],
                "one_shot": [],
                "only_caller": [],
                "arguments": []
            }
        },
        "CallbackManager.clear": {
            "name": "clear",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallbackManager.cleanup": {
            "name": "cleanup",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": []
            }
        },
        "CallbackManager.pending": {
            "name": "pending",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "key": []
            }
        },
        "CallbackManager.process": {
            "name": "process",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "key": [],
                "caller": []
            }
        },
        "CallbackManager.remove": {
            "name": "remove",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "key": [],
                "callback_value": [],
                "arguments": []
            }
        },
        "CallbackManager.remove_all": {
            "name": "remove_all",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "key": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/channel.py": {
        "Channel.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "connection": [],
                "channel_number": [],
                "on_open_callback": []
            }
        },
        "Channel.__int__": {
            "name": "__int__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.add_callback": {
            "name": "add_callback",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "replies": [],
                "one_shot": []
            }
        },
        "Channel.add_on_cancel_callback": {
            "name": "add_on_cancel_callback",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.add_on_close_callback": {
            "name": "add_on_close_callback",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.add_on_flow_callback": {
            "name": "add_on_flow_callback",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.add_on_return_callback": {
            "name": "add_on_return_callback",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.basic_ack": {
            "name": "basic_ack",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "multiple": []
            }
        },
        "Channel.basic_cancel": {
            "name": "basic_cancel",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "consumer_tag": [],
                "nowait": []
            }
        },
        "Channel.basic_consume": {
            "name": "basic_consume",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "consumer_callback": [],
                "queue": [],
                "no_ack": [],
                "exclusive": [],
                "consumer_tag": [],
                "arguments": []
            }
        },
        "Channel.basic_get": {
            "name": "basic_get",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "no_ack": []
            }
        },
        "Channel.basic_nack": {
            "name": "basic_nack",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "multiple": [],
                "requeue": []
            }
        },
        "Channel.basic_publish": {
            "name": "basic_publish",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "exchange": [],
                "routing_key": [],
                "body": [],
                "properties": [],
                "mandatory": [],
                "immediate": []
            }
        },
        "Channel.basic_qos": {
            "name": "basic_qos",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "prefetch_size": [],
                "prefetch_count": [],
                "all_channels": []
            }
        },
        "Channel.basic_reject": {
            "name": "basic_reject",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "requeue": []
            }
        },
        "Channel.basic_recover": {
            "name": "basic_recover",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "requeue": []
            }
        },
        "Channel.close": {
            "name": "close",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": []
            }
        },
        "Channel.confirm_delivery": {
            "name": "confirm_delivery",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "nowait": []
            }
        },
        "Channel.consumer_tags": {
            "name": "consumer_tags",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.exchange_bind": {
            "name": "exchange_bind",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "destination": [],
                "source": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Channel.exchange_declare": {
            "name": "exchange_declare",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "exchange": [],
                "exchange_type": [],
                "passive": [],
                "durable": [],
                "auto_delete": [],
                "internal": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Channel.exchange_delete": {
            "name": "exchange_delete",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "exchange": [],
                "if_unused": [],
                "nowait": []
            }
        },
        "Channel.exchange_unbind": {
            "name": "exchange_unbind",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "destination": [],
                "source": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Channel.flow": {
            "name": "flow",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "active": []
            }
        },
        "Channel.is_closed": {
            "name": "is_closed",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.is_closing": {
            "name": "is_closing",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.is_open": {
            "name": "is_open",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.open": {
            "name": "open",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.queue_bind": {
            "name": "queue_bind",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "exchange": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Channel.queue_declare": {
            "name": "queue_declare",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "passive": [],
                "durable": [],
                "exclusive": [],
                "auto_delete": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Channel.queue_delete": {
            "name": "queue_delete",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "if_unused": [],
                "if_empty": [],
                "nowait": []
            }
        },
        "Channel.queue_purge": {
            "name": "queue_purge",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "nowait": []
            }
        },
        "Channel.queue_unbind": {
            "name": "queue_unbind",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "queue": [],
                "exchange": [],
                "routing_key": [],
                "arguments": []
            }
        },
        "Channel.tx_commit": {
            "name": "tx_commit",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.tx_rollback": {
            "name": "tx_rollback",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.tx_select": {
            "name": "tx_select",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "ContentFrameAssembler.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContentFrameAssembler.process": {
            "name": "process",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "frame_value": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/compat.py": {
        "dictkeys": {
            "name": "dictkeys",
            "location": 19,
            "return": [],
            "arguments": {
                "dct": []
            }
        },
        "dictvalues": {
            "name": "dictvalues",
            "location": 20,
            "return": [],
            "arguments": {
                "dct": []
            }
        },
        "dict_iteritems": {
            "name": "dict_iteritems",
            "location": 21,
            "return": [],
            "arguments": {
                "dct": []
            }
        },
        "dict_itervalues": {
            "name": "dict_itervalues",
            "location": 22,
            "return": [],
            "arguments": {
                "dct": []
            }
        },
        "byte": {
            "name": "byte",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "canonical_str": {
            "name": "canonical_str",
            "location": 27,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_integer": {
            "name": "is_integer",
            "location": 28,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "as_bytes": {
            "name": "as_bytes",
            "location": 40,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "to_digit": {
            "name": "to_digit",
            "location": 41,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "get_linux_version": {
            "name": "get_linux_version",
            "location": 42,
            "return": [],
            "arguments": {
                "release_str": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/connection.py": {
        "Parameters.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Parameters.backpressure_detection": {
            "name": "backpressure_detection",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.blocked_connection_timeout": {
            "name": "blocked_connection_timeout",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.channel_max": {
            "name": "channel_max",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.client_properties": {
            "name": "client_properties",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.connection_attempts": {
            "name": "connection_attempts",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.credentials": {
            "name": "credentials",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.frame_max": {
            "name": "frame_max",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.heartbeat": {
            "name": "heartbeat",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.host": {
            "name": "host",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.locale": {
            "name": "locale",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.port": {
            "name": "port",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.retry_delay": {
            "name": "retry_delay",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.socket_timeout": {
            "name": "socket_timeout",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.ssl": {
            "name": "ssl",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.ssl_options": {
            "name": "ssl_options",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.virtual_host": {
            "name": "virtual_host",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Parameters.tcp_options": {
            "name": "tcp_options",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ConnectionParameters.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "virtual_host": [],
                "credentials": [],
                "channel_max": [],
                "frame_max": [],
                "heartbeat": [],
                "ssl": [],
                "ssl_options": [],
                "connection_attempts": [],
                "retry_delay": [],
                "socket_timeout": [],
                "locale": [],
                "backpressure_detection": [],
                "blocked_connection_timeout": [],
                "client_properties": [],
                "tcp_options": []
            }
        },
        "URLParameters.__init__": {
            "name": "__init__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SSLOptions.__init__": {
            "name": "__init__",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "keyfile": [],
                "key_password": [],
                "certfile": [],
                "server_side": [],
                "verify_mode": [],
                "ssl_version": [],
                "cafile": [],
                "capath": [],
                "cadata": [],
                "do_handshake_on_connect": [],
                "suppress_ragged_eofs": [],
                "ciphers": [],
                "server_hostname": []
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": [],
                "on_open_callback": [],
                "on_open_error_callback": [],
                "on_close_callback": []
            }
        },
        "Connection.add_backpressure_callback": {
            "name": "add_backpressure_callback",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": []
            }
        },
        "Connection.add_on_close_callback": {
            "name": "add_on_close_callback",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": []
            }
        },
        "Connection.add_on_connection_blocked_callback": {
            "name": "add_on_connection_blocked_callback",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": []
            }
        },
        "Connection.add_on_connection_unblocked_callback": {
            "name": "add_on_connection_unblocked_callback",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": []
            }
        },
        "Connection.add_on_open_callback": {
            "name": "add_on_open_callback",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": []
            }
        },
        "Connection.add_on_open_error_callback": {
            "name": "add_on_open_error_callback",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "callback_method": [],
                "remove_default": []
            }
        },
        "Connection.add_timeout": {
            "name": "add_timeout",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [],
                "callback_method": []
            }
        },
        "Connection.channel": {
            "name": "channel",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "on_open_callback": [],
                "channel_number": []
            }
        },
        "Connection.close": {
            "name": "close",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": []
            }
        },
        "Connection.connect": {
            "name": "connect",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.remove_timeout": {
            "name": "remove_timeout",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "timeout_id": []
            }
        },
        "Connection.set_backpressure_multiplier": {
            "name": "set_backpressure_multiplier",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Connection.is_closed": {
            "name": "is_closed",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.is_closing": {
            "name": "is_closing",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.is_open": {
            "name": "is_open",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.basic_nack": {
            "name": "basic_nack",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.consumer_cancel_notify": {
            "name": "consumer_cancel_notify",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.exchange_exchange_bindings": {
            "name": "exchange_exchange_bindings",
            "location": 216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.publisher_confirms": {
            "name": "publisher_confirms",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/credentials.py": {
        "PlainCredentials.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": [],
                "erase_on_connect": []
            }
        },
        "PlainCredentials.__eq__": {
            "name": "__eq__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PlainCredentials.__ne__": {
            "name": "__ne__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PlainCredentials.response_for": {
            "name": "response_for",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "start": []
            }
        },
        "PlainCredentials.erase_credentials": {
            "name": "erase_credentials",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExternalCredentials.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExternalCredentials.__eq__": {
            "name": "__eq__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ExternalCredentials.__ne__": {
            "name": "__ne__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ExternalCredentials.response_for": {
            "name": "response_for",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "start": []
            }
        },
        "ExternalCredentials.erase_credentials": {
            "name": "erase_credentials",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/data.py": {
        "encode_short_string": {
            "name": "encode_short_string",
            "location": 7,
            "return": [],
            "arguments": {
                "pieces": [],
                "value": []
            }
        },
        "decode_short_string": {
            "name": "decode_short_string",
            "location": 8,
            "return": [],
            "arguments": {
                "encoded": [],
                "offset": []
            }
        },
        "encode_table": {
            "name": "encode_table",
            "location": 9,
            "return": [],
            "arguments": {
                "pieces": [],
                "table": []
            }
        },
        "encode_value": {
            "name": "encode_value",
            "location": 10,
            "return": [],
            "arguments": {
                "pieces": [],
                "value": []
            }
        },
        "decode_table": {
            "name": "decode_table",
            "location": 11,
            "return": [],
            "arguments": {
                "encoded": [],
                "offset": []
            }
        },
        "decode_value": {
            "name": "decode_value",
            "location": 12,
            "return": [],
            "arguments": {
                "encoded": [],
                "offset": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/exceptions.py": {
        "UnroutableError.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "messages": []
            }
        },
        "NackError.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "messages": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/frame.py": {
        "decode_frame": {
            "name": "decode_frame",
            "location": 50,
            "return": [],
            "arguments": {
                "data_in": []
            }
        },
        "Frame.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "frame_type": [],
                "channel_number": []
            }
        },
        "Frame.marshal": {
            "name": "marshal",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Method.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "channel_number": [],
                "method": []
            }
        },
        "Method.marshal": {
            "name": "marshal",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Header.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "channel_number": [],
                "body_size": [],
                "props": []
            }
        },
        "Header.marshal": {
            "name": "marshal",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Body.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "channel_number": [],
                "fragment": []
            }
        },
        "Body.marshal": {
            "name": "marshal",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.marshal": {
            "name": "marshal",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtocolHeader.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "major": [],
                "minor": [],
                "revision": []
            }
        },
        "ProtocolHeader.marshal": {
            "name": "marshal",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/heartbeat.py": {
        "HeartbeatChecker.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "connection": [],
                "timeout": []
            }
        },
        "HeartbeatChecker.bytes_received_on_connection": {
            "name": "bytes_received_on_connection",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeartbeatChecker.connection_is_idle": {
            "name": "connection_is_idle",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeartbeatChecker.received": {
            "name": "received",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeartbeatChecker.stop": {
            "name": "stop",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/spec.py": {
        "has_content": {
            "name": "has_content",
            "location": 771,
            "return": [],
            "arguments": {
                "methodNumber": []
            }
        },
        "BasicProperties.__init__": {
            "name": "__init__",
            "location": 764,
            "return": [],
            "arguments": {
                "self": [],
                "content_type": [],
                "content_encoding": [],
                "headers": [],
                "delivery_mode": [],
                "priority": [],
                "correlation_id": [],
                "reply_to": [],
                "expiration": [],
                "message_id": [],
                "timestamp": [],
                "type": [],
                "user_id": [],
                "app_id": [],
                "cluster_id": []
            }
        },
        "BasicProperties.decode": {
            "name": "decode",
            "location": 765,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "BasicProperties.encode": {
            "name": "encode",
            "location": 766,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Start.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "version_major": [],
                "version_minor": [],
                "server_properties": [],
                "mechanisms": [],
                "locales": []
            }
        },
        "Connection.Start.synchronous": {
            "name": "synchronous",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Start.decode": {
            "name": "decode",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Start.encode": {
            "name": "encode",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.StartOk.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "client_properties": [],
                "mechanism": [],
                "response": [],
                "locale": []
            }
        },
        "Connection.StartOk.synchronous": {
            "name": "synchronous",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.StartOk.decode": {
            "name": "decode",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.StartOk.encode": {
            "name": "encode",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Secure.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "challenge": []
            }
        },
        "Connection.Secure.synchronous": {
            "name": "synchronous",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Secure.decode": {
            "name": "decode",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Secure.encode": {
            "name": "encode",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.SecureOk.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "Connection.SecureOk.synchronous": {
            "name": "synchronous",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.SecureOk.decode": {
            "name": "decode",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.SecureOk.encode": {
            "name": "encode",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Tune.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "channel_max": [],
                "frame_max": [],
                "heartbeat": []
            }
        },
        "Connection.Tune.synchronous": {
            "name": "synchronous",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Tune.decode": {
            "name": "decode",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Tune.encode": {
            "name": "encode",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.TuneOk.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "channel_max": [],
                "frame_max": [],
                "heartbeat": []
            }
        },
        "Connection.TuneOk.synchronous": {
            "name": "synchronous",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.TuneOk.decode": {
            "name": "decode",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.TuneOk.encode": {
            "name": "encode",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Open.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "virtual_host": [],
                "capabilities": [],
                "insist": []
            }
        },
        "Connection.Open.synchronous": {
            "name": "synchronous",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Open.decode": {
            "name": "decode",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Open.encode": {
            "name": "encode",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.OpenOk.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "known_hosts": []
            }
        },
        "Connection.OpenOk.synchronous": {
            "name": "synchronous",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.OpenOk.decode": {
            "name": "decode",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.OpenOk.encode": {
            "name": "encode",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Close.__init__": {
            "name": "__init__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": [],
                "class_id": [],
                "method_id": []
            }
        },
        "Connection.Close.synchronous": {
            "name": "synchronous",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Close.decode": {
            "name": "decode",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Close.encode": {
            "name": "encode",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.CloseOk.__init__": {
            "name": "__init__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.CloseOk.synchronous": {
            "name": "synchronous",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.CloseOk.decode": {
            "name": "decode",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.CloseOk.encode": {
            "name": "encode",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Blocked.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "Connection.Blocked.synchronous": {
            "name": "synchronous",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Blocked.decode": {
            "name": "decode",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Blocked.encode": {
            "name": "encode",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Unblocked.__init__": {
            "name": "__init__",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Unblocked.synchronous": {
            "name": "synchronous",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.Unblocked.decode": {
            "name": "decode",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Connection.Unblocked.encode": {
            "name": "encode",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Open.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "out_of_band": []
            }
        },
        "Channel.Open.synchronous": {
            "name": "synchronous",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Open.decode": {
            "name": "decode",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.Open.encode": {
            "name": "encode",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.OpenOk.__init__": {
            "name": "__init__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "channel_id": []
            }
        },
        "Channel.OpenOk.synchronous": {
            "name": "synchronous",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.OpenOk.decode": {
            "name": "decode",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.OpenOk.encode": {
            "name": "encode",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Flow.__init__": {
            "name": "__init__",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "active": []
            }
        },
        "Channel.Flow.synchronous": {
            "name": "synchronous",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Flow.decode": {
            "name": "decode",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.Flow.encode": {
            "name": "encode",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.FlowOk.__init__": {
            "name": "__init__",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "active": []
            }
        },
        "Channel.FlowOk.synchronous": {
            "name": "synchronous",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.FlowOk.decode": {
            "name": "decode",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.FlowOk.encode": {
            "name": "encode",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Close.__init__": {
            "name": "__init__",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": [],
                "class_id": [],
                "method_id": []
            }
        },
        "Channel.Close.synchronous": {
            "name": "synchronous",
            "location": 216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.Close.decode": {
            "name": "decode",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.Close.encode": {
            "name": "encode",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.CloseOk.__init__": {
            "name": "__init__",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.CloseOk.synchronous": {
            "name": "synchronous",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.CloseOk.decode": {
            "name": "decode",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Channel.CloseOk.encode": {
            "name": "encode",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Access.Request.__init__": {
            "name": "__init__",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "realm": [],
                "exclusive": [],
                "passive": [],
                "active": [],
                "write": [],
                "read": []
            }
        },
        "Access.Request.synchronous": {
            "name": "synchronous",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Access.Request.decode": {
            "name": "decode",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Access.Request.encode": {
            "name": "encode",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Access.RequestOk.__init__": {
            "name": "__init__",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": []
            }
        },
        "Access.RequestOk.synchronous": {
            "name": "synchronous",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Access.RequestOk.decode": {
            "name": "decode",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Access.RequestOk.encode": {
            "name": "encode",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Declare.__init__": {
            "name": "__init__",
            "location": 270,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "exchange": [],
                "type": [],
                "passive": [],
                "durable": [],
                "auto_delete": [],
                "internal": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Exchange.Declare.synchronous": {
            "name": "synchronous",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Declare.decode": {
            "name": "decode",
            "location": 273,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.Declare.encode": {
            "name": "encode",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeclareOk.__init__": {
            "name": "__init__",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeclareOk.synchronous": {
            "name": "synchronous",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeclareOk.decode": {
            "name": "decode",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.DeclareOk.encode": {
            "name": "encode",
            "location": 282,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Delete.__init__": {
            "name": "__init__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "exchange": [],
                "if_unused": [],
                "nowait": []
            }
        },
        "Exchange.Delete.synchronous": {
            "name": "synchronous",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Delete.decode": {
            "name": "decode",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.Delete.encode": {
            "name": "encode",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeleteOk.__init__": {
            "name": "__init__",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeleteOk.synchronous": {
            "name": "synchronous",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.DeleteOk.decode": {
            "name": "decode",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.DeleteOk.encode": {
            "name": "encode",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Bind.__init__": {
            "name": "__init__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "destination": [],
                "source": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Exchange.Bind.synchronous": {
            "name": "synchronous",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Bind.decode": {
            "name": "decode",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.Bind.encode": {
            "name": "encode",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.BindOk.__init__": {
            "name": "__init__",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.BindOk.synchronous": {
            "name": "synchronous",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.BindOk.decode": {
            "name": "decode",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.BindOk.encode": {
            "name": "encode",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Unbind.__init__": {
            "name": "__init__",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "destination": [],
                "source": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Exchange.Unbind.synchronous": {
            "name": "synchronous",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.Unbind.decode": {
            "name": "decode",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.Unbind.encode": {
            "name": "encode",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.UnbindOk.__init__": {
            "name": "__init__",
            "location": 342,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.UnbindOk.synchronous": {
            "name": "synchronous",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exchange.UnbindOk.decode": {
            "name": "decode",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Exchange.UnbindOk.encode": {
            "name": "encode",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Declare.__init__": {
            "name": "__init__",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "passive": [],
                "durable": [],
                "exclusive": [],
                "auto_delete": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Queue.Declare.synchronous": {
            "name": "synchronous",
            "location": 364,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Declare.decode": {
            "name": "decode",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.Declare.encode": {
            "name": "encode",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.DeclareOk.__init__": {
            "name": "__init__",
            "location": 373,
            "return": [],
            "arguments": {
                "self": [],
                "queue": [],
                "message_count": [],
                "consumer_count": []
            }
        },
        "Queue.DeclareOk.synchronous": {
            "name": "synchronous",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.DeclareOk.decode": {
            "name": "decode",
            "location": 376,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.DeclareOk.encode": {
            "name": "encode",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Bind.__init__": {
            "name": "__init__",
            "location": 387,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "exchange": [],
                "routing_key": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Queue.Bind.synchronous": {
            "name": "synchronous",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Bind.decode": {
            "name": "decode",
            "location": 390,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.Bind.encode": {
            "name": "encode",
            "location": 391,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.BindOk.__init__": {
            "name": "__init__",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.BindOk.synchronous": {
            "name": "synchronous",
            "location": 397,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.BindOk.decode": {
            "name": "decode",
            "location": 398,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.BindOk.encode": {
            "name": "encode",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Purge.__init__": {
            "name": "__init__",
            "location": 406,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "nowait": []
            }
        },
        "Queue.Purge.synchronous": {
            "name": "synchronous",
            "location": 408,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Purge.decode": {
            "name": "decode",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.Purge.encode": {
            "name": "encode",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.PurgeOk.__init__": {
            "name": "__init__",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "message_count": []
            }
        },
        "Queue.PurgeOk.synchronous": {
            "name": "synchronous",
            "location": 417,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.PurgeOk.decode": {
            "name": "decode",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.PurgeOk.encode": {
            "name": "encode",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Delete.__init__": {
            "name": "__init__",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "if_unused": [],
                "if_empty": [],
                "nowait": []
            }
        },
        "Queue.Delete.synchronous": {
            "name": "synchronous",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Delete.decode": {
            "name": "decode",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.Delete.encode": {
            "name": "encode",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.DeleteOk.__init__": {
            "name": "__init__",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "message_count": []
            }
        },
        "Queue.DeleteOk.synchronous": {
            "name": "synchronous",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.DeleteOk.decode": {
            "name": "decode",
            "location": 440,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.DeleteOk.encode": {
            "name": "encode",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Unbind.__init__": {
            "name": "__init__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "exchange": [],
                "routing_key": [],
                "arguments": []
            }
        },
        "Queue.Unbind.synchronous": {
            "name": "synchronous",
            "location": 452,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.Unbind.decode": {
            "name": "decode",
            "location": 453,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.Unbind.encode": {
            "name": "encode",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.UnbindOk.__init__": {
            "name": "__init__",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.UnbindOk.synchronous": {
            "name": "synchronous",
            "location": 460,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.UnbindOk.decode": {
            "name": "decode",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Queue.UnbindOk.encode": {
            "name": "encode",
            "location": 462,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Qos.__init__": {
            "name": "__init__",
            "location": 473,
            "return": [],
            "arguments": {
                "self": [],
                "prefetch_size": [],
                "prefetch_count": [],
                "global_": []
            }
        },
        "Basic.Qos.synchronous": {
            "name": "synchronous",
            "location": 475,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Qos.decode": {
            "name": "decode",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Qos.encode": {
            "name": "encode",
            "location": 477,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.QosOk.__init__": {
            "name": "__init__",
            "location": 481,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.QosOk.synchronous": {
            "name": "synchronous",
            "location": 483,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.QosOk.decode": {
            "name": "decode",
            "location": 484,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.QosOk.encode": {
            "name": "encode",
            "location": 485,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Consume.__init__": {
            "name": "__init__",
            "location": 497,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "consumer_tag": [],
                "no_local": [],
                "no_ack": [],
                "exclusive": [],
                "nowait": [],
                "arguments": []
            }
        },
        "Basic.Consume.synchronous": {
            "name": "synchronous",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Consume.decode": {
            "name": "decode",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Consume.encode": {
            "name": "encode",
            "location": 501,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.ConsumeOk.__init__": {
            "name": "__init__",
            "location": 506,
            "return": [],
            "arguments": {
                "self": [],
                "consumer_tag": []
            }
        },
        "Basic.ConsumeOk.synchronous": {
            "name": "synchronous",
            "location": 508,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.ConsumeOk.decode": {
            "name": "decode",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.ConsumeOk.encode": {
            "name": "encode",
            "location": 510,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Cancel.__init__": {
            "name": "__init__",
            "location": 516,
            "return": [],
            "arguments": {
                "self": [],
                "consumer_tag": [],
                "nowait": []
            }
        },
        "Basic.Cancel.synchronous": {
            "name": "synchronous",
            "location": 518,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Cancel.decode": {
            "name": "decode",
            "location": 519,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Cancel.encode": {
            "name": "encode",
            "location": 520,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.CancelOk.__init__": {
            "name": "__init__",
            "location": 525,
            "return": [],
            "arguments": {
                "self": [],
                "consumer_tag": []
            }
        },
        "Basic.CancelOk.synchronous": {
            "name": "synchronous",
            "location": 527,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.CancelOk.decode": {
            "name": "decode",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.CancelOk.encode": {
            "name": "encode",
            "location": 529,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Publish.__init__": {
            "name": "__init__",
            "location": 538,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "exchange": [],
                "routing_key": [],
                "mandatory": [],
                "immediate": []
            }
        },
        "Basic.Publish.synchronous": {
            "name": "synchronous",
            "location": 540,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Publish.decode": {
            "name": "decode",
            "location": 541,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Publish.encode": {
            "name": "encode",
            "location": 542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Return.__init__": {
            "name": "__init__",
            "location": 550,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": [],
                "exchange": [],
                "routing_key": []
            }
        },
        "Basic.Return.synchronous": {
            "name": "synchronous",
            "location": 552,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Return.decode": {
            "name": "decode",
            "location": 553,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Return.encode": {
            "name": "encode",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Deliver.__init__": {
            "name": "__init__",
            "location": 563,
            "return": [],
            "arguments": {
                "self": [],
                "consumer_tag": [],
                "delivery_tag": [],
                "redelivered": [],
                "exchange": [],
                "routing_key": []
            }
        },
        "Basic.Deliver.synchronous": {
            "name": "synchronous",
            "location": 565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Deliver.decode": {
            "name": "decode",
            "location": 566,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Deliver.encode": {
            "name": "encode",
            "location": 567,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Get.__init__": {
            "name": "__init__",
            "location": 574,
            "return": [],
            "arguments": {
                "self": [],
                "ticket": [],
                "queue": [],
                "no_ack": []
            }
        },
        "Basic.Get.synchronous": {
            "name": "synchronous",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Get.decode": {
            "name": "decode",
            "location": 577,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Get.encode": {
            "name": "encode",
            "location": 578,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.GetOk.__init__": {
            "name": "__init__",
            "location": 587,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "redelivered": [],
                "exchange": [],
                "routing_key": [],
                "message_count": []
            }
        },
        "Basic.GetOk.synchronous": {
            "name": "synchronous",
            "location": 589,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.GetOk.decode": {
            "name": "decode",
            "location": 590,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.GetOk.encode": {
            "name": "encode",
            "location": 591,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.GetEmpty.__init__": {
            "name": "__init__",
            "location": 596,
            "return": [],
            "arguments": {
                "self": [],
                "cluster_id": []
            }
        },
        "Basic.GetEmpty.synchronous": {
            "name": "synchronous",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.GetEmpty.decode": {
            "name": "decode",
            "location": 599,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.GetEmpty.encode": {
            "name": "encode",
            "location": 600,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Ack.__init__": {
            "name": "__init__",
            "location": 606,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "multiple": []
            }
        },
        "Basic.Ack.synchronous": {
            "name": "synchronous",
            "location": 608,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Ack.decode": {
            "name": "decode",
            "location": 609,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Ack.encode": {
            "name": "encode",
            "location": 610,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Reject.__init__": {
            "name": "__init__",
            "location": 616,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "requeue": []
            }
        },
        "Basic.Reject.synchronous": {
            "name": "synchronous",
            "location": 618,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Reject.decode": {
            "name": "decode",
            "location": 619,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Reject.encode": {
            "name": "encode",
            "location": 620,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.RecoverAsync.__init__": {
            "name": "__init__",
            "location": 625,
            "return": [],
            "arguments": {
                "self": [],
                "requeue": []
            }
        },
        "Basic.RecoverAsync.synchronous": {
            "name": "synchronous",
            "location": 627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.RecoverAsync.decode": {
            "name": "decode",
            "location": 628,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.RecoverAsync.encode": {
            "name": "encode",
            "location": 629,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Recover.__init__": {
            "name": "__init__",
            "location": 634,
            "return": [],
            "arguments": {
                "self": [],
                "requeue": []
            }
        },
        "Basic.Recover.synchronous": {
            "name": "synchronous",
            "location": 636,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Recover.decode": {
            "name": "decode",
            "location": 637,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Recover.encode": {
            "name": "encode",
            "location": 638,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.RecoverOk.__init__": {
            "name": "__init__",
            "location": 642,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.RecoverOk.synchronous": {
            "name": "synchronous",
            "location": 644,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.RecoverOk.decode": {
            "name": "decode",
            "location": 645,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.RecoverOk.encode": {
            "name": "encode",
            "location": 646,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Nack.__init__": {
            "name": "__init__",
            "location": 653,
            "return": [],
            "arguments": {
                "self": [],
                "delivery_tag": [],
                "multiple": [],
                "requeue": []
            }
        },
        "Basic.Nack.synchronous": {
            "name": "synchronous",
            "location": 655,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Basic.Nack.decode": {
            "name": "decode",
            "location": 656,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Basic.Nack.encode": {
            "name": "encode",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Select.__init__": {
            "name": "__init__",
            "location": 665,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Select.synchronous": {
            "name": "synchronous",
            "location": 667,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Select.decode": {
            "name": "decode",
            "location": 668,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.Select.encode": {
            "name": "encode",
            "location": 669,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.SelectOk.__init__": {
            "name": "__init__",
            "location": 673,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.SelectOk.synchronous": {
            "name": "synchronous",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.SelectOk.decode": {
            "name": "decode",
            "location": 676,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.SelectOk.encode": {
            "name": "encode",
            "location": 677,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Commit.__init__": {
            "name": "__init__",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Commit.synchronous": {
            "name": "synchronous",
            "location": 683,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Commit.decode": {
            "name": "decode",
            "location": 684,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.Commit.encode": {
            "name": "encode",
            "location": 685,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.CommitOk.__init__": {
            "name": "__init__",
            "location": 689,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.CommitOk.synchronous": {
            "name": "synchronous",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.CommitOk.decode": {
            "name": "decode",
            "location": 692,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.CommitOk.encode": {
            "name": "encode",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Rollback.__init__": {
            "name": "__init__",
            "location": 697,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Rollback.synchronous": {
            "name": "synchronous",
            "location": 699,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.Rollback.decode": {
            "name": "decode",
            "location": 700,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.Rollback.encode": {
            "name": "encode",
            "location": 701,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.RollbackOk.__init__": {
            "name": "__init__",
            "location": 705,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.RollbackOk.synchronous": {
            "name": "synchronous",
            "location": 707,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tx.RollbackOk.decode": {
            "name": "decode",
            "location": 708,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Tx.RollbackOk.encode": {
            "name": "encode",
            "location": 709,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.Select.__init__": {
            "name": "__init__",
            "location": 718,
            "return": [],
            "arguments": {
                "self": [],
                "nowait": []
            }
        },
        "Confirm.Select.synchronous": {
            "name": "synchronous",
            "location": 720,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.Select.decode": {
            "name": "decode",
            "location": 721,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Confirm.Select.encode": {
            "name": "encode",
            "location": 722,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.SelectOk.__init__": {
            "name": "__init__",
            "location": 726,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.SelectOk.synchronous": {
            "name": "synchronous",
            "location": 728,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Confirm.SelectOk.decode": {
            "name": "decode",
            "location": 729,
            "return": [],
            "arguments": {
                "self": [],
                "encoded": [],
                "offset": []
            }
        },
        "Confirm.SelectOk.encode": {
            "name": "encode",
            "location": 730,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/tcp_socket_opts.py": {
        "socket_requires_keepalive": {
            "name": "socket_requires_keepalive",
            "location": 9,
            "return": [],
            "arguments": {
                "tcp_options": []
            }
        },
        "set_sock_opts": {
            "name": "set_sock_opts",
            "location": 10,
            "return": [],
            "arguments": {
                "tcp_options": [],
                "sock": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/utils.py": {
        "is_callable": {
            "name": "is_callable",
            "location": 7,
            "return": [],
            "arguments": {
                "handle": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/__init__.py": {},
    "pika-stubs-master/pika-stubs/adapters/asyncio_connection.py": {
        "IOLoopAdapter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "loop": []
            }
        },
        "IOLoopAdapter.close": {
            "name": "close",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoopAdapter.add_timeout": {
            "name": "add_timeout",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [],
                "callback_method": []
            }
        },
        "IOLoopAdapter.remove_timeout": {
            "name": "remove_timeout",
            "location": 17,
            "return": [],
            "arguments": {
                "handle": []
            }
        },
        "IOLoopAdapter.add_callback_threadsafe": {
            "name": "add_callback_threadsafe",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "IOLoopAdapter.add_handler": {
            "name": "add_handler",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "fd": [],
                "cb": [],
                "event_state": []
            }
        },
        "IOLoopAdapter.remove_handler": {
            "name": "remove_handler",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "fd": []
            }
        },
        "IOLoopAdapter.update_handler": {
            "name": "update_handler",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "fd": [],
                "event_state": []
            }
        },
        "IOLoopAdapter.start": {
            "name": "start",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoopAdapter.stop": {
            "name": "stop",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncioConnection.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": [],
                "on_open_callback": [],
                "on_open_error_callback": [],
                "on_close_callback": [],
                "stop_ioloop_on_close": [],
                "custom_ioloop": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/adapters/base_connection.py": {
        "BaseConnection.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": [],
                "on_open_callback": [],
                "on_open_error_callback": [],
                "on_close_callback": [],
                "ioloop": [],
                "stop_ioloop_on_close": []
            }
        },
        "BaseConnection.add_timeout": {
            "name": "add_timeout",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [],
                "callback_method": []
            }
        },
        "BaseConnection.close": {
            "name": "close",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "reply_code": [],
                "reply_text": []
            }
        },
        "BaseConnection.remove_timeout": {
            "name": "remove_timeout",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "timeout_id": []
            }
        },
        "BaseConnection.add_callback_threadsafe": {
            "name": "add_callback_threadsafe",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/adapters/blocking_connection.py": {},
    "pika-stubs-master/pika-stubs/adapters/select_connection.py": {
        "SelectConnection.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": [],
                "on_open_callback": [],
                "on_open_error_callback": [],
                "on_close_callback": [],
                "stop_ioloop_on_close": [],
                "custom_ioloop": []
            }
        },
        "_Timeout.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [],
                "callback": []
            }
        },
        "_Timeout.__eq__": {
            "name": "__eq__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_Timeout.__lt__": {
            "name": "__lt__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_Timeout.__le__": {
            "name": "__le__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_Timer.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Timer.close": {
            "name": "close",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Timer.call_later": {
            "name": "call_later",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "delay": [],
                "callback": []
            }
        },
        "_Timer.remove_timeout": {
            "name": "remove_timeout",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "_Timer.get_remaining_interval": {
            "name": "get_remaining_interval",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Timer.process_timeouts": {
            "name": "process_timeouts",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.close": {
            "name": "close",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.add_timeout": {
            "name": "add_timeout",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "deadline": [],
                "callback_method": []
            }
        },
        "IOLoop.remove_timeout": {
            "name": "remove_timeout",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "timeout_id": []
            }
        },
        "IOLoop.add_callback_threadsafe": {
            "name": "add_callback_threadsafe",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "IOLoop.process_timeouts": {
            "name": "process_timeouts",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.add_handler": {
            "name": "add_handler",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": [],
                "handler": [],
                "events": []
            }
        },
        "IOLoop.update_handler": {
            "name": "update_handler",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": [],
                "events": []
            }
        },
        "IOLoop.remove_handler": {
            "name": "remove_handler",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": []
            }
        },
        "IOLoop.start": {
            "name": "start",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.stop": {
            "name": "stop",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.activate_poller": {
            "name": "activate_poller",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.deactivate_poller": {
            "name": "deactivate_poller",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IOLoop.poll": {
            "name": "poll",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "get_wait_seconds": [],
                "process_timeouts": []
            }
        },
        "_PollerBase.close": {
            "name": "close",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.wake_threadsafe": {
            "name": "wake_threadsafe",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.add_handler": {
            "name": "add_handler",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": [],
                "handler": [],
                "events": []
            }
        },
        "_PollerBase.update_handler": {
            "name": "update_handler",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": [],
                "events": []
            }
        },
        "_PollerBase.remove_handler": {
            "name": "remove_handler",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "fileno": []
            }
        },
        "_PollerBase.activate_poller": {
            "name": "activate_poller",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.deactivate_poller": {
            "name": "deactivate_poller",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.start": {
            "name": "start",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.stop": {
            "name": "stop",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_PollerBase.poll": {
            "name": "poll",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectPoller.poll": {
            "name": "poll",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KQueuePoller.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "get_wait_seconds": [],
                "process_timeouts": []
            }
        },
        "KQueuePoller.poll": {
            "name": "poll",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PollPoller.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "get_wait_seconds": [],
                "process_timeouts": []
            }
        },
        "PollPoller.poll": {
            "name": "poll",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pika-stubs-master/pika-stubs/adapters/__init__.py": {}
}
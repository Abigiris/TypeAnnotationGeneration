{
    "pili-master/config.py": {
        "Config.init_app": {
            "name": "init_app",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "bool"
                ]
            }
        },
        "DevelopmentConfig.init_app": {
            "name": "init_app",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "bool"
                ]
            }
        },
        "ProductionConfig.init_app": {
            "name": "init_app",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool"
                ],
                "app": []
            }
        }
    },
    "pili-master/setup.py": {},
    "pili-master/pili/app.py": {
        "get_client_remote_addr": {
            "name": "get_client_remote_addr",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "before_request": {
            "name": "before_request",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "after_request": {
            "name": "after_request",
            "location": 81,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "response": [
                    "dict[, ]"
                ]
            }
        },
        "register_middlewares": {
            "name": "register_middlewares",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "register_extensions": {
            "name": "register_extensions",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "register_blueprints": {
            "name": "register_blueprints",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "configure_logging": {
            "name": "configure_logging",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 203,
            "return": [
                "Flask"
            ],
            "arguments": {
                "config_name": [
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/decorators.py": {
        "permission_required": {
            "name": "permission_required",
            "location": 9,
            "return": [],
            "arguments": {
                "permission": [
                    "str",
                    "list[str]",
                    "typing.Type"
                ]
            }
        },
        "admin_required": {
            "name": "admin_required",
            "location": 22,
            "return": [],
            "arguments": {
                "f": [
                    "str",
                    "typing.Callable[, ]",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "permission_required.decorator": {
            "name": "decorator",
            "location": 10,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "permission_required.decorator.decorated_function": {
            "name": "decorated_function",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/pili/email.py": {
        "send_email": {
            "name": "send_email",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "to": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None",
                    "typing.Collection"
                ],
                "subject": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None",
                    "typing.Collection"
                ],
                "template": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None",
                    "typing.Collection"
                ]
            }
        },
        "send_async_email": {
            "name": "send_async_email",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "msg": [
                    "dict[, ]",
                    "str",
                    "int"
                ]
            }
        },
        "send_email_thread": {
            "name": "send_email_thread",
            "location": 26,
            "return": [
                "Thread"
            ],
            "arguments": {
                "to": [
                    "str",
                    "int",
                    "None"
                ],
                "subject": [
                    "str",
                    "int",
                    "None"
                ],
                "template": [
                    "str"
                ]
            }
        },
        "send_celery_async_email": {
            "name": "send_celery_async_email",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "dict[, ]",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "send_email_celery": {
            "name": "send_email_celery",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "to": [
                    "str",
                    "int",
                    "None"
                ],
                "subject": [
                    "str",
                    "int",
                    "None"
                ],
                "template": [
                    "str"
                ],
                "countdown": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/exceptions.py": {
        "RequestError.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str"
                ],
                "status_code": [
                    "None",
                    "int"
                ],
                "origin": [
                    "None",
                    "int",
                    "str"
                ],
                "extra": [
                    "None",
                    "int",
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/filters.py": {
        "unique": {
            "name": "unique",
            "location": 10,
            "return": [
                "list[]"
            ],
            "arguments": {
                "seq": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "sanitize_alias": {
            "name": "sanitize_alias",
            "location": 15,
            "return": [],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "sanitize_tags": {
            "name": "sanitize_tags",
            "location": 26,
            "return": [],
            "arguments": {
                "s": [
                    "str",
                    "bytes"
                ]
            }
        },
        "sanitize_upload": {
            "name": "sanitize_upload",
            "location": 35,
            "return": [],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "is_allowed_file": {
            "name": "is_allowed_file",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "file_exists": {
            "name": "file_exists",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [
                    "str",
                    "bool",
                    "typing.Iterable[tuple[typing.Union[str,typing.Any]]]",
                    "None"
                ],
                "field": [
                    "str"
                ]
            }
        },
        "get_added_removed": {
            "name": "get_added_removed",
            "location": 63,
            "return": [
                "tuple[list[typing.Text]]"
            ],
            "arguments": {
                "new": [
                    "str"
                ],
                "old": [
                    "str"
                ]
            }
        },
        "find_thumbnail": {
            "name": "find_thumbnail",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "generate_password": {
            "name": "generate_password",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "length": [
                    "int"
                ]
            }
        },
        "to_bool": {
            "name": "to_bool",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": [
                    "str",
                    "None",
                    "bytes"
                ]
            }
        }
    },
    "pili-master/pili/jinja_filters.py": {
        "permissions2str": {
            "name": "permissions2str",
            "location": 1,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "n": [
                    "bool"
                ]
            }
        },
        "pluralize": {
            "name": "pluralize",
            "location": 17,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "counter": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "singular_postfix": [
                    "typing.Text"
                ],
                "plural_postfix": [
                    "typing.Text"
                ]
            }
        }
    },
    "pili-master/pili/models.py": {
        "load_user": {
            "name": "load_user",
            "location": 669,
            "return": [],
            "arguments": {
                "user_id": []
            }
        },
        "Role.insert_roles": {
            "name": "insert_roles",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Role.__repr__": {
            "name": "__repr__",
            "location": 114,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Like.__repr__": {
            "name": "__repr__",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.dfs": {
            "name": "dfs",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "comment": [
                    "list[]",
                    "dict[, ]",
                    "str",
                    "typing.Pattern",
                    "list[list[int]]",
                    "dict[str, typing.Any]"
                ],
                "fun": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "Comment.bfs": {
            "name": "bfs",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "comment": [
                    "str",
                    "bytes",
                    "int",
                    "dict[, ]"
                ],
                "fun": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Comment.on_changed_body": {
            "name": "on_changed_body",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "int",
                    "typing.Type"
                ],
                "value": [
                    "int",
                    "typing.Type"
                ],
                "oldvalue": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ],
                "initiator": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "Comment.to_json": {
            "name": "to_json",
            "location": 255,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.from_json": {
            "name": "from_json",
            "location": 267,
            "return": [
                "Comment"
            ],
            "arguments": {
                "json_comment": [
                    "dict[, ]"
                ]
            }
        },
        "Comment.__repr__": {
            "name": "__repr__",
            "location": 273,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.to_json": {
            "name": "to_json",
            "location": 290,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.on_changed_body": {
            "name": "on_changed_body",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "value": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "oldvalue": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ],
                "initiator": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "Message.__repr__": {
            "name": "__repr__",
            "location": 315,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessageAck.__repr__": {
            "name": "__repr__",
            "location": 328,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.suspend": {
            "name": "suspend",
            "location": 422,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.add_admin": {
            "name": "add_admin",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "User.generate_fake": {
            "name": "generate_fake",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "count": [
                    "int"
                ]
            }
        },
        "User.add_self_follows": {
            "name": "add_self_follows",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "User.__init__": {
            "name": "__init__",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.password": {
            "name": "password",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "User.verify_password": {
            "name": "verify_password",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "User.generate_confirmation_token": {
            "name": "generate_confirmation_token",
            "location": 504,
            "return": [],
            "arguments": {
                "self": [],
                "expiration": [
                    "int"
                ]
            }
        },
        "User.confirm": {
            "name": "confirm",
            "location": 508,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "dict[str, typing.Any]",
                    "int",
                    "str",
                    "typing.Sequence[str]",
                    "dict[, ]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "User.generate_reset_token": {
            "name": "generate_reset_token",
            "location": 520,
            "return": [],
            "arguments": {
                "self": [],
                "expiration": [
                    "int"
                ]
            }
        },
        "User.reset_password": {
            "name": "reset_password",
            "location": 524,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "None"
                ],
                "new_password": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "User.generate_invite_token": {
            "name": "generate_invite_token",
            "location": 536,
            "return": [],
            "arguments": {
                "self": [],
                "expiration": [
                    "int"
                ]
            }
        },
        "User.accept_invite": {
            "name": "accept_invite",
            "location": 540,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "bool"
                ],
                "username": [
                    "str",
                    "int"
                ],
                "new_password": [
                    "bool",
                    "str",
                    "dict[str, str]",
                    "None"
                ]
            }
        },
        "User.generate_email_change_token": {
            "name": "generate_email_change_token",
            "location": 554,
            "return": [],
            "arguments": {
                "self": [],
                "new_email": [
                    "str",
                    "bytes",
                    "dict[, ]"
                ],
                "expiration": [
                    "int"
                ]
            }
        },
        "User.change_email": {
            "name": "change_email",
            "location": 560,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "dict[str, str]",
                    "typing.Callable[, ]",
                    "None",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "User.can": {
            "name": "can",
            "location": 578,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "permissions": [
                    "list[I]",
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "User.has_role": {
            "name": "has_role",
            "location": 584,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "role_name": [
                    "str",
                    "set[str]"
                ]
            }
        },
        "User.is_administrator": {
            "name": "is_administrator",
            "location": 587,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.ping": {
            "name": "ping",
            "location": 590,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.gravatar": {
            "name": "gravatar",
            "location": 594,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ],
                "default": [
                    "typing.Text"
                ],
                "rating": [
                    "typing.Text"
                ]
            }
        },
        "User.follow": {
            "name": "follow",
            "location": 604,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "User.unfollow": {
            "name": "unfollow",
            "location": 609,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ]
            }
        },
        "User.is_following": {
            "name": "is_following",
            "location": 614,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "User.is_followed_by": {
            "name": "is_followed_by",
            "location": 617,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "User.followed_posts": {
            "name": "followed_posts",
            "location": 621,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.to_json": {
            "name": "to_json",
            "location": 626,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.generate_auth_token": {
            "name": "generate_auth_token",
            "location": 637,
            "return": [],
            "arguments": {
                "self": [],
                "expiration": [
                    "dict[, ]",
                    "list[dict[, ]]"
                ]
            }
        },
        "User.verify_auth_token": {
            "name": "verify_auth_token",
            "location": 642,
            "return": [
                "None"
            ],
            "arguments": {
                "token": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[str, str]",
                    "typing.Mapping"
                ]
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 650,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnonymousUser.can": {
            "name": "can",
            "location": 655,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "permissions": [
                    "list[]",
                    "typing.Collection",
                    "str",
                    "list[str]"
                ]
            }
        },
        "AnonymousUser.is_administrator": {
            "name": "is_administrator",
            "location": 658,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnonymousUser.has_role": {
            "name": "has_role",
            "location": 661,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "role_name": [
                    "str",
                    "None",
                    "list[str]",
                    "typing.Any",
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        },
        "Tagification.__repr__": {
            "name": "__repr__",
            "location": 687,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.generate_fake": {
            "name": "generate_fake",
            "location": 733,
            "return": [
                "None"
            ],
            "arguments": {
                "count": [
                    "int"
                ]
            }
        },
        "Post.on_changed_body": {
            "name": "on_changed_body",
            "location": 755,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "value": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "oldvalue": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ],
                "initiator": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "Post.to_json": {
            "name": "to_json",
            "location": 767,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.from_json": {
            "name": "from_json",
            "location": 780,
            "return": [
                "Post"
            ],
            "arguments": {
                "json_post": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "Post.__repr__": {
            "name": "__repr__",
            "location": 786,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.to_json": {
            "name": "to_json",
            "location": 807,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 818,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.on_changed_body": {
            "name": "on_changed_body",
            "location": 846,
            "return": [
                "None"
            ],
            "arguments": {
                "target": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "value": [
                    "typing.Type",
                    "int",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "oldvalue": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ],
                "initiator": [
                    "str",
                    "list[int]",
                    "bool",
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "Category.__repr__": {
            "name": "__repr__",
            "location": 858,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Upload.to_json": {
            "name": "to_json",
            "location": 892,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Upload.__repr__": {
            "name": "__repr__",
            "location": 908,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pili-master/pili/version.py": {
        "get_version": {
            "name": "get_version",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "pili-master/pili/__init__.py": {},
    "pili-master/pili/api_1_0/authentication.py": {
        "verify_password": {
            "name": "verify_password",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {
                "email_or_token": [
                    "str",
                    "None"
                ],
                "password": [
                    "str",
                    "None"
                ]
            }
        },
        "auth_error": {
            "name": "auth_error",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "before_request": {
            "name": "before_request",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_token": {
            "name": "get_token",
            "location": 43,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/pili/api_1_0/comments.py": {
        "get_comments": {
            "name": "get_comments",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "get_comment": {
            "name": "get_comment",
            "location": 33,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "float",
                    "None"
                ]
            }
        },
        "get_post_comments": {
            "name": "get_post_comments",
            "location": 39,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "new_post_comment": {
            "name": "new_post_comment",
            "location": 64,
            "return": [
                "tuple[typing.Union[int,dict[typing.Text, ]]]"
            ],
            "arguments": {
                "id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/decorators.py": {
        "permission_required": {
            "name": "permission_required",
            "location": 8,
            "return": [],
            "arguments": {
                "permission": [
                    "str",
                    "list[str]",
                    "typing.Type"
                ]
            }
        },
        "permission_required.decorator": {
            "name": "decorator",
            "location": 9,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "permission_required.decorator.decorated_function": {
            "name": "decorated_function",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/pili/api_1_0/errors.py": {
        "json_error_handler": {
            "name": "json_error_handler",
            "location": 21,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "int",
                "str",
                "dict[str, int]",
                "float"
            ],
            "arguments": {
                "exc": [
                    "typing.Sequence[]",
                    "typing.MutableMapping",
                    "str"
                ]
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 63,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "dict[, ]",
                    "list[int]"
                ]
            }
        },
        "unauthorized": {
            "name": "unauthorized",
            "location": 68,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "bytes"
                ]
            }
        },
        "forbidden": {
            "name": "forbidden",
            "location": 73,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "bytes"
                ]
            }
        },
        "method_not_allowed": {
            "name": "method_not_allowed",
            "location": 78,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "typing.Sequence[int]",
                    "int",
                    "str"
                ]
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 83,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "bool"
                ]
            }
        },
        "rate_limit_error": {
            "name": "rate_limit_error",
            "location": 88,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "typing.MutableMapping",
                    "str"
                ]
            }
        },
        "generic_error": {
            "name": "generic_error",
            "location": 93,
            "return": [],
            "arguments": {
                "exc": [
                    "Exception",
                    "None",
                    "typing.MutableMapping",
                    "int"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/messages.py": {
        "get_message": {
            "name": "get_message",
            "location": 8,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/posts.py": {
        "get_posts": {
            "name": "get_posts",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "get_post": {
            "name": "get_post",
            "location": 35,
            "return": [],
            "arguments": {
                "id": []
            }
        },
        "new_post": {
            "name": "new_post",
            "location": 42,
            "return": [
                "tuple[typing.Union[int,dict[typing.Text, ]]]"
            ],
            "arguments": {}
        },
        "edit_post": {
            "name": "edit_post",
            "location": 56,
            "return": [],
            "arguments": {
                "id": []
            }
        }
    },
    "pili-master/pili/api_1_0/tags.py": {
        "get_tags": {
            "name": "get_tags",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "get_tags_list": {
            "name": "get_tags_list",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "get_tags_list2": {
            "name": "get_tags_list2",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "get_tag": {
            "name": "get_tag",
            "location": 48,
            "return": [],
            "arguments": {
                "alias": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_tag_posts": {
            "name": "get_tag_posts",
            "location": 54,
            "return": [],
            "arguments": {
                "alias": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/uploads.py": {
        "get_uploads": {
            "name": "get_uploads",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "get_uploads_list": {
            "name": "get_uploads_list",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "get_uploads_list2": {
            "name": "get_uploads_list2",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "get_upload": {
            "name": "get_upload",
            "location": 50,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "typing.BinaryIO"
                ]
            }
        },
        "get_upload_posts": {
            "name": "get_upload_posts",
            "location": 56,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "get_upload_categories": {
            "name": "get_upload_categories",
            "location": 80,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "typing.BinaryIO"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/users.py": {
        "get_user": {
            "name": "get_user",
            "location": 8,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "typing.MutableMapping",
                    "int"
                ]
            }
        },
        "get_user_posts": {
            "name": "get_user_posts",
            "location": 14,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "typing.MutableMapping",
                    "int"
                ]
            }
        },
        "get_user_followed_posts": {
            "name": "get_user_followed_posts",
            "location": 38,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "typing.MutableMapping",
                    "int"
                ]
            }
        }
    },
    "pili-master/pili/api_1_0/__init__.py": {},
    "pili-master/pili/auth/forms.py": {
        "RegistrationForm.validate_email": {
            "name": "validate_email",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str"
                ]
            }
        },
        "RegistrationForm.validate_username": {
            "name": "validate_username",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "typing.Type",
                    "str",
                    "list[list[str]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PasswordResetForm.validate_email": {
            "name": "validate_email",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "InviteRequestForm.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InviteRequestForm.validate_email": {
            "name": "validate_email",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str"
                ]
            }
        },
        "InviteAcceptForm.validate_username": {
            "name": "validate_username",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "typing.Type",
                    "str",
                    "list[list[str]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ChangeEmailForm.validate_email": {
            "name": "validate_email",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/auth/views.py": {
        "before_request": {
            "name": "before_request",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "unconfirmed": {
            "name": "unconfirmed",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "confirm": {
            "name": "confirm",
            "location": 97,
            "return": [],
            "arguments": {
                "token": [
                    "str",
                    "tuple[typing.Union[int,str]]",
                    "list[str]"
                ]
            }
        },
        "resend_confirmation": {
            "name": "resend_confirmation",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "change_password": {
            "name": "change_password",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "password_reset_request": {
            "name": "password_reset_request",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "password_reset": {
            "name": "password_reset",
            "location": 167,
            "return": [],
            "arguments": {
                "token": [
                    "str",
                    "list[list[str]]",
                    "bytes",
                    "list[str]",
                    "dict[, ]",
                    "typing.Hashable"
                ]
            }
        },
        "invite_request": {
            "name": "invite_request",
            "location": 186,
            "return": [],
            "arguments": {}
        },
        "invite_accept": {
            "name": "invite_accept",
            "location": 227,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "None",
                    "bytes"
                ],
                "token": [
                    "bool",
                    "str"
                ]
            }
        },
        "change_email_request": {
            "name": "change_email_request",
            "location": 254,
            "return": [],
            "arguments": {}
        },
        "change_email": {
            "name": "change_email",
            "location": 280,
            "return": [],
            "arguments": {
                "token": [
                    "str",
                    "bytes",
                    "list[]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 289,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pili-master/pili/auth/__init__.py": {},
    "pili-master/pili/connectors/redis.py": {
        "_get_function_full_name": {
            "name": "_get_function_full_name",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "func": [
                    "str"
                ],
                "delimiter": [
                    "typing.Text"
                ]
            }
        },
        "timer": {
            "name": "timer",
            "location": 116,
            "return": [],
            "arguments": {
                "func": [
                    "str",
                    "list[str]"
                ],
                "alternative_name": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "logger": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "_generate_function_key": {
            "name": "_generate_function_key",
            "location": 159,
            "return": [],
            "arguments": {
                "func": [
                    "bool",
                    "typing.Callable[, ]",
                    "str",
                    "dict[, ]"
                ],
                "prefix": [
                    "bool",
                    "typing.Callable[, ]",
                    "str",
                    "dict[, ]"
                ],
                "postfix_func": [
                    "None",
                    "bool",
                    "typing.Callable[, ]",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "cache": {
            "name": "cache",
            "location": 189,
            "return": [],
            "arguments": {
                "expire_seconds": [
                    "int"
                ]
            }
        },
        "cache_flask_view": {
            "name": "cache_flask_view",
            "location": 273,
            "return": [],
            "arguments": {
                "expire_seconds": [
                    "int"
                ]
            }
        },
        "rate_limit": {
            "name": "rate_limit",
            "location": 295,
            "return": [],
            "arguments": {
                "rps": [
                    "bool",
                    "list[str]",
                    "typing.IO",
                    "str"
                ]
            }
        },
        "RedisConnector.startup": {
            "name": "startup",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RedisConnector.teardown": {
            "name": "teardown",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [
                    "typing.Type",
                    "Exception",
                    "None",
                    "bool"
                ]
            }
        },
        "RedisConnector.get_key": {
            "name": "get_key",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "RedisConnector.set_key": {
            "name": "set_key",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "value": [
                    "str",
                    "bytes",
                    "bool",
                    "dict[, ]",
                    "list[str]"
                ],
                "expire_seconds": [
                    "int"
                ]
            }
        },
        "timer._args_to_str": {
            "name": "_args_to_str",
            "location": 127,
            "return": [
                "str"
            ],
            "arguments": {
                "l": []
            }
        },
        "timer._kwargs_to_str": {
            "name": "_kwargs_to_str",
            "location": 130,
            "return": [
                "str"
            ],
            "arguments": {
                "d": []
            }
        },
        "timer._inner": {
            "name": "_inner",
            "location": 133,
            "return": [],
            "arguments": {}
        },
        "_generate_function_key._inner": {
            "name": "_inner",
            "location": 179,
            "return": [],
            "arguments": {}
        },
        "cache._decorator": {
            "name": "_decorator",
            "location": 209,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "rate_limit._decorator": {
            "name": "_decorator",
            "location": 311,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "cache._decorator._inner": {
            "name": "_inner",
            "location": 215,
            "return": [],
            "arguments": {}
        },
        "rate_limit._decorator._inner": {
            "name": "_inner",
            "location": 324,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/pili/connectors/__init__.py": {
        "BaseConnector.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "None"
                ]
            }
        },
        "BaseConnector.init_app": {
            "name": "init_app",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "BaseConnector.bind_app": {
            "name": "bind_app",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "BaseConnector.startup": {
            "name": "startup",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseConnector.teardown": {
            "name": "teardown",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [
                    "typing.Type",
                    "Exception",
                    "None",
                    "bool"
                ]
            }
        },
        "BaseConnector.connection": {
            "name": "connection",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pili-master/pili/ctrl/errors.py": {
        "forbidden": {
            "name": "forbidden",
            "location": 8,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 20,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "Exception",
                    "int",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "internal_server_error": {
            "name": "internal_server_error",
            "location": 32,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "str",
                    "UnicodeError",
                    "bool"
                ]
            }
        },
        "csrf_error": {
            "name": "csrf_error",
            "location": 44,
            "return": [
                "dict[, ]",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "list[str]",
                    "typing.Sequence[int]",
                    "typing.Sequence[dict[, ]]"
                ]
            }
        }
    },
    "pili-master/pili/ctrl/forms.py": {
        "EditProfileAdminForm.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "EditProfileAdminForm.validate_email": {
            "name": "validate_email",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EditProfileAdminForm.validate_username": {
            "name": "validate_username",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "typing.Type",
                    "str"
                ]
            }
        },
        "PostForm.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryForm.validate_alias": {
            "name": "validate_alias",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "typing.Type",
                    "str",
                    "list[list[str]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "NotificationForm.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pili-master/pili/ctrl/views.py": {
        "posts": {
            "name": "posts",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "remove_post": {
            "name": "remove_post",
            "location": 122,
            "return": [],
            "arguments": {}
        },
        "tag": {
            "name": "tag",
            "location": 170,
            "return": [],
            "arguments": {
                "alias": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 181,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ]
            }
        },
        "edit_profile": {
            "name": "edit_profile",
            "location": 195,
            "return": [],
            "arguments": {}
        },
        "edit_profile_admin": {
            "name": "edit_profile_admin",
            "location": 213,
            "return": [],
            "arguments": {
                "id": [
                    "str"
                ]
            }
        },
        "edit_post": {
            "name": "edit_post",
            "location": 239,
            "return": [],
            "arguments": {
                "id": [
                    "int"
                ],
                "alias": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "edit_category": {
            "name": "edit_category",
            "location": 336,
            "return": [],
            "arguments": {
                "alias": [
                    "int",
                    "str"
                ]
            }
        },
        "edit_notification": {
            "name": "edit_notification",
            "location": 377,
            "return": [],
            "arguments": {
                "id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "remove_notification": {
            "name": "remove_notification",
            "location": 402,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "typing.Type",
                    "None"
                ]
            }
        },
        "notification": {
            "name": "notification",
            "location": 419,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "typing.Type",
                    "None"
                ]
            }
        },
        "server_shutdown": {
            "name": "server_shutdown",
            "location": 425,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "after_request": {
            "name": "after_request",
            "location": 436,
            "return": [
                "list[]"
            ],
            "arguments": {
                "response": [
                    "list[]"
                ]
            }
        },
        "categories": {
            "name": "categories",
            "location": 448,
            "return": [],
            "arguments": {}
        },
        "remove_category": {
            "name": "remove_category",
            "location": 489,
            "return": [],
            "arguments": {}
        },
        "structure": {
            "name": "structure",
            "location": 516,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "uploads": {
            "name": "uploads",
            "location": 522,
            "return": [],
            "arguments": {}
        },
        "remove_upload": {
            "name": "remove_upload",
            "location": 555,
            "return": [],
            "arguments": {}
        },
        "view_upload": {
            "name": "view_upload",
            "location": 604,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "comments": {
            "name": "comments",
            "location": 611,
            "return": [],
            "arguments": {}
        },
        "comments_enable": {
            "name": "comments_enable",
            "location": 630,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "comments_disable": {
            "name": "comments_disable",
            "location": 646,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "comments_unscreen": {
            "name": "comments_unscreen",
            "location": 662,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "comments_screen": {
            "name": "comments_screen",
            "location": 678,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "remove_comment": {
            "name": "remove_comment",
            "location": 694,
            "return": [],
            "arguments": {}
        },
        "comments_bulk": {
            "name": "comments_bulk",
            "location": 736,
            "return": [],
            "arguments": {}
        },
        "users": {
            "name": "users",
            "location": 823,
            "return": [],
            "arguments": {}
        },
        "users_bulk": {
            "name": "users_bulk",
            "location": 846,
            "return": [],
            "arguments": {}
        },
        "notify": {
            "name": "notify",
            "location": 936,
            "return": [],
            "arguments": {}
        },
        "logs": {
            "name": "logs",
            "location": 1001,
            "return": [],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 1006,
            "return": [],
            "arguments": {}
        },
        "comments_bulk.comments_action": {
            "name": "comments_action",
            "location": 737,
            "return": [
                "str"
            ],
            "arguments": {
                "comments": [],
                "action": []
            }
        },
        "comments_bulk.remove": {
            "name": "remove",
            "location": 774,
            "return": [
                "str"
            ],
            "arguments": {
                "comments": []
            }
        },
        "users_bulk.suspend": {
            "name": "suspend",
            "location": 847,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "users": []
            }
        },
        "users_bulk.remove": {
            "name": "remove",
            "location": 871,
            "return": [
                "str"
            ],
            "arguments": {
                "users": []
            }
        },
        "Ops.remove_post": {
            "name": "remove_post",
            "location": 1012,
            "return": [
                "bool"
            ],
            "arguments": {
                "post": [
                    "typing.OrderedDict"
                ]
            }
        },
        "Ops.remove_comment": {
            "name": "remove_comment",
            "location": 1044,
            "return": [
                "bool"
            ],
            "arguments": {
                "comment": []
            }
        },
        "Ops.image_change_owner": {
            "name": "image_change_owner",
            "location": 1059,
            "return": [
                "bool"
            ],
            "arguments": {
                "image": [
                    "dict[str, object]"
                ],
                "user": [
                    "str",
                    "tuple[int]"
                ]
            }
        },
        "Ops.category_change_owner": {
            "name": "category_change_owner",
            "location": 1065,
            "return": [
                "bool"
            ],
            "arguments": {
                "category": [
                    "dict[, ]"
                ],
                "user": []
            }
        },
        "Ops.tag_change_owner": {
            "name": "tag_change_owner",
            "location": 1071,
            "return": [
                "bool"
            ],
            "arguments": {
                "tag": [
                    "bool",
                    "str",
                    "typing.Sequence[str]"
                ],
                "admin": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "pili-master/pili/ctrl/__init__.py": {
        "inject_permissions": {
            "name": "inject_permissions",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/pili/entrypoints/celery.py": {},
    "pili-master/pili/entrypoints/commands.py": {
        "_validate_parameters": {
            "name": "_validate_parameters",
            "location": 27,
            "return": [
                "typing.Callable[, ]",
                "None",
                "str",
                "set[str]",
                "bytes",
                "dict[, ]"
            ],
            "arguments": {
                "value": [
                    "typing.Callable[, ]",
                    "None",
                    "str",
                    "set[str]",
                    "bytes",
                    "dict[, ]"
                ],
                "valid_values": [
                    "str",
                    "dict[str, str]"
                ]
            }
        },
        "_validate_config": {
            "name": "_validate_config",
            "location": 34,
            "return": [],
            "arguments": {
                "ctx": [
                    "bool",
                    "tuple[str]"
                ],
                "param": [
                    "bool",
                    "tuple[str]"
                ],
                "value": [
                    "str",
                    "typing.Iterable[str]",
                    "None"
                ]
            }
        },
        "_validate_uwsgi": {
            "name": "_validate_uwsgi",
            "location": 41,
            "return": [],
            "arguments": {
                "ctx": [
                    "str",
                    "tuple[str]"
                ],
                "param": [
                    "str",
                    "tuple[str]"
                ],
                "value": [
                    "str",
                    "int",
                    "collections.abc.Awaitable[]"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "config": [
                    "str"
                ]
            }
        },
        "provision": {
            "name": "provision",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "typing.Sequence[typing.Iterable[typing.Any]]",
                    "typing.Iterable[typing.Any]",
                    "None",
                    "str"
                ],
                "db_init": [
                    "bool",
                    "str"
                ],
                "db_migrate": [
                    "bool",
                    "str"
                ],
                "db_upgrade": [
                    "bool",
                    "str"
                ],
                "db_prepopulate": [
                    "bool",
                    "str"
                ]
            }
        },
        "server": {
            "name": "server",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ],
                "host": [
                    "bool",
                    "str"
                ],
                "port": [
                    "bool",
                    "str"
                ],
                "use_reloader": [
                    "bool",
                    "str"
                ],
                "use_debugger": [
                    "bool",
                    "str"
                ]
            }
        },
        "uwsgi": {
            "name": "uwsgi",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "section": [
                    "str",
                    "int"
                ]
            }
        },
        "shell": {
            "name": "shell",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "pili-master/pili/entrypoints/dispatcher.py": {
        "create_dispatcher": {
            "name": "create_dispatcher",
            "location": 7,
            "return": [
                "DispatcherMiddleware"
            ],
            "arguments": {
                "config_name": [
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/entrypoints/wsgi.py": {},
    "pili-master/pili/entrypoints/__init__.py": {},
    "pili-master/pili/main/errors.py": {
        "forbidden": {
            "name": "forbidden",
            "location": 7,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 19,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "Exception",
                    "int",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "internal_server_error": {
            "name": "internal_server_error",
            "location": 31,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "dict[, ]",
                "list[]",
                "dict[str, int]",
                "str",
                "tuple[int]"
            ],
            "arguments": {
                "e": [
                    "str",
                    "UnicodeError",
                    "bool"
                ]
            }
        }
    },
    "pili-master/pili/main/forms.py": {
        "EditProfileAdminForm.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "EditProfileAdminForm.validate_email": {
            "name": "validate_email",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EditProfileAdminForm.validate_username": {
            "name": "validate_username",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "typing.Type",
                    "str"
                ]
            }
        }
    },
    "pili-master/pili/main/views.py": {
        "index": {
            "name": "index",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "tag": {
            "name": "tag",
            "location": 60,
            "return": [],
            "arguments": {
                "alias": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 85,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ]
            }
        },
        "post": {
            "name": "post",
            "location": 101,
            "return": [],
            "arguments": {
                "category": [
                    "str",
                    "int",
                    "None"
                ],
                "id": [
                    "list[int]",
                    "int",
                    "None",
                    "str"
                ],
                "alias": [
                    "str",
                    "int",
                    "None"
                ],
                "parent_id": [
                    "None",
                    "str",
                    "list[]",
                    "int",
                    "bytes"
                ]
            }
        },
        "like_post": {
            "name": "like_post",
            "location": 201,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "unlike_post": {
            "name": "unlike_post",
            "location": 213,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "like_comment": {
            "name": "like_comment",
            "location": 227,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "unlike_comment": {
            "name": "unlike_comment",
            "location": 246,
            "return": [],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "replies_bulk": {
            "name": "replies_bulk",
            "location": 266,
            "return": [],
            "arguments": {}
        },
        "reply_mark_unread": {
            "name": "reply_mark_unread",
            "location": 317,
            "return": [],
            "arguments": {
                "id": [
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "reply_mark_read": {
            "name": "reply_mark_read",
            "location": 339,
            "return": [],
            "arguments": {
                "id": [
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "category": {
            "name": "category",
            "location": 360,
            "return": [],
            "arguments": {
                "alias": [
                    "str"
                ]
            }
        },
        "category_tag": {
            "name": "category_tag",
            "location": 384,
            "return": [],
            "arguments": {
                "cat_alias": [
                    "str",
                    "None",
                    "list[str]",
                    "int"
                ],
                "tag_alias": [
                    "str",
                    "list[str]",
                    "None",
                    "int"
                ]
            }
        },
        "follow": {
            "name": "follow",
            "location": 416,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "list[dict[, ]]"
                ]
            }
        },
        "unfollow": {
            "name": "unfollow",
            "location": 432,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "list[dict[, ]]"
                ]
            }
        },
        "followers": {
            "name": "followers",
            "location": 446,
            "return": [],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "followed_by": {
            "name": "followed_by",
            "location": 470,
            "return": [],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "comments": {
            "name": "comments",
            "location": 494,
            "return": [],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "replies": {
            "name": "replies",
            "location": 511,
            "return": [],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "notifications": {
            "name": "notifications",
            "location": 541,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ]
            }
        },
        "notifications_bulk": {
            "name": "notifications_bulk",
            "location": 571,
            "return": [],
            "arguments": {}
        },
        "notification": {
            "name": "notification",
            "location": 628,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "dict[, ]",
                    "bool",
                    "None"
                ],
                "id": [
                    "int",
                    "str",
                    "typing.Iterable[int]"
                ]
            }
        },
        "remove_notification": {
            "name": "remove_notification",
            "location": 644,
            "return": [],
            "arguments": {
                "username": [
                    "str",
                    "None",
                    "bool"
                ],
                "id": [
                    "int"
                ]
            }
        },
        "comment_reply": {
            "name": "comment_reply",
            "location": 660,
            "return": [
                "None"
            ],
            "arguments": {
                "id": [
                    "int"
                ],
                "repliee_id": [
                    "int",
                    "str"
                ],
                "post_id": [
                    "str",
                    "int"
                ]
            }
        },
        "show_all": {
            "name": "show_all",
            "location": 677,
            "return": [],
            "arguments": {
                "page": [
                    "str"
                ],
                "alias": [
                    "None",
                    "str",
                    "bytes",
                    "typing.Callable[, ]"
                ]
            }
        },
        "show_followed": {
            "name": "show_followed",
            "location": 689,
            "return": [],
            "arguments": {
                "page": [
                    "str"
                ],
                "alias": [
                    "None",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "server_shutdown": {
            "name": "server_shutdown",
            "location": 699,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "after_request": {
            "name": "after_request",
            "location": 710,
            "return": [
                "list[]"
            ],
            "arguments": {
                "response": [
                    "list[]"
                ]
            }
        },
        "replies_bulk.replies_action": {
            "name": "replies_action",
            "location": 267,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "comments": [],
                "action": []
            }
        },
        "notifications_bulk.notifications_action": {
            "name": "notifications_action",
            "location": 572,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "notifications": [],
                "action": []
            }
        }
    },
    "pili-master/pili/main/__init__.py": {
        "inject_permissions": {
            "name": "inject_permissions",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "pili-master/tests/conftest.py": {
        "pytest_make_parametrize_id": {
            "name": "pytest_make_parametrize_id",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "config": [
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "val": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "argname": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "app": {
            "name": "app",
            "location": 23,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "request": []
            }
        },
        "client": {
            "name": "client",
            "location": 48,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "app": []
            }
        },
        "nested_transaction_rollback": {
            "name": "nested_transaction_rollback",
            "location": 65,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "request": [],
                "app": []
            }
        },
        "nested_transaction_rollback.restart_savepoint": {
            "name": "restart_savepoint",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "transaction": []
            }
        }
    },
    "pili-master/tests/test_basics.py": {
        "test_app_exist": {
            "name": "test_app_exist",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_app_is_in_testing_mode": {
            "name": "test_app_is_in_testing_mode",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pili-master/tests/test_client.py": {
        "test_home_page": {
            "name": "test_home_page",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "client": []
            }
        },
        "test_register_login_logout": {
            "name": "test_register_login_logout",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "bool"
                ],
                "client": []
            }
        }
    },
    "pili-master/tests/test_user_model.py": {
        "test_password_setter": {
            "name": "test_password_setter",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_password_getter": {
            "name": "test_no_password_getter",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_password_verification": {
            "name": "test_password_verification",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_password_salts_are_random": {
            "name": "test_password_salts_are_random",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_confirmation_token": {
            "name": "test_valid_confirmation_token",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_confirmation_token": {
            "name": "test_invalid_confirmation_token",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_expired_confirmation_token": {
            "name": "test_expired_confirmation_token",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_reset_token": {
            "name": "test_valid_reset_token",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_reset_token": {
            "name": "test_invalid_reset_token",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_email_change_token": {
            "name": "test_valid_email_change_token",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_email_change_token": {
            "name": "test_invalid_email_change_token",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_duplicate_email_change_token": {
            "name": "test_duplicate_email_change_token",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_roles_and_permissions": {
            "name": "test_roles_and_permissions",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_anonymous_user": {
            "name": "test_anonymous_user",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_timestamps": {
            "name": "test_timestamps",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ping": {
            "name": "test_ping",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gravatar": {
            "name": "test_gravatar",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "test_follows": {
            "name": "test_follows",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pili-master/tests/__init__.py": {}
}